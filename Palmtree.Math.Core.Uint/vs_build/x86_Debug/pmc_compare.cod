; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\pmc_compare.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__77F53984_cstddef DB 01H
__188180DA_corecrt_math@h DB 01H
__D23EE329_cstdlib DB 01H
__5ECFF36E_type_traits DB 01H
__331E732B_malloc@h DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__7949CB39_exception DB 01H
__802FEEC0_pmc_exception@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__746E1CEC_xmmintrin@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__9F55872E_pmc_compare@cpp DB 01H
msvcjmc	ENDS
CONST	SEGMENT
$SG117571 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'I', 00H, '_', 00H, 'X', 00H, ';', 00H
	DB	'1', 00H, 00H, 00H
$SG117572 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG117579 DB	'v', 00H, 00H, 00H
$SG117580 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117584 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG117583 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'I', 00H, '_', 00H, 'X', 00H, ';', 00H
	DB	'2', 00H, 00H, 00H
$SG117600 DB	'u', 00H, 00H, 00H
$SG117596 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'X', 00H, '_', 00H, 'I', 00H, ';', 00H
	DB	'1', 00H, 00H, 00H
$SG117597 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG117601 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117604 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'X', 00H, '_', 00H, 'I', 00H, ';', 00H
	DB	'2', 00H, 00H, 00H
$SG117605 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG117667 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'L', 00H, '_', 00H, 'X', 00H, ';', 00H
	DB	'1', 00H, 00H, 00H
$SG117668 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG117671 DB	'v', 00H, 00H, 00H
$SG117672 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117676 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG117675 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'L', 00H, '_', 00H, 'X', 00H, ';', 00H
	DB	'2', 00H, 00H, 00H
$SG117691 DB	'u', 00H, 00H, 00H
$SG117687 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'X', 00H, '_', 00H, 'L', 00H, ';', 00H
	DB	'1', 00H, 00H, 00H
$SG117688 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG117692 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117695 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'X', 00H, '_', 00H, 'L', 00H, ';', 00H
	DB	'2', 00H, 00H, 00H
$SG117696 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG117710 DB	'u', 00H, 00H, 00H
$SG117711 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117714 DB	'v', 00H, 00H, 00H
$SG117715 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117726 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'X', 00H, '_', 00H, 'X', 00H, ';', 00H
	DB	'1', 00H, 00H, 00H
$SG117727 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
CONST	ENDS
PUBLIC	??0exception@std@@QAE@XZ			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?Compare_Imp@Internal@Core@Math@Palmtree@@YAHPAI0I@Z ; Palmtree::Math::Core::Internal::Compare_Imp
PUBLIC	?Initialize_Compare@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Compare
PUBLIC	?PMC_Compare_I_X@Internal@Core@Math@Palmtree@@YGHIPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Compare_I_X
PUBLIC	?PMC_Compare_L_X@Internal@Core@Math@Palmtree@@YGH_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Compare_L_X
PUBLIC	?PMC_Compare_X_I@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_I
PUBLIC	?PMC_Compare_X_L@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_L
PUBLIC	?PMC_Compare_X_X@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@0@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__aullshr:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT __CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DD	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DD	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DD	FLAT:??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1exception@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0exception@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
tv251 = -52						; size = 8
tv239 = -44						; size = 8
_v_bit_count$1 = -36					; size = 4
_u_bit_count$2 = -32					; size = 4
_v_bit_count$3 = -28					; size = 4
_v_bit_count$4 = -24					; size = 4
_v_lo$5 = -20						; size = 4
_v_hi$6 = -12						; size = 4
_u_bit_count$7 = -4					; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_Compare_X_L_Imp@Internal@Core@Math@Palmtree@@YAHPAU__tag_NUMBER_HEADER@1234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_L_Imp

; 144  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	57		 push	 edi
  00007	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  0000a	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 145  :         if (u->IS_ZERO)

  00020	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00023	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00026	83 e1 01	 and	 ecx, 1
  00029	74 1e		 je	 SHORT $LN2@PMC_Compar

; 146  :         {
; 147  :             // u が 0 である場合
; 148  :             if (v == 0)

  0002b	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  0002e	0b 55 10	 or	 edx, DWORD PTR _v$[ebp+4]
  00031	75 09		 jne	 SHORT $LN4@PMC_Compar

; 149  :             {
; 150  :                 // v が 0 である場合
; 151  :                 return (0);

  00033	33 c0		 xor	 eax, eax
  00035	e9 60 02 00 00	 jmp	 $LN1@PMC_Compar

; 152  :             }
; 153  :             else

  0003a	eb 08		 jmp	 SHORT $LN5@PMC_Compar
$LN4@PMC_Compar:

; 154  :             {
; 155  :                 // v が 0 でない場合
; 156  :                 return (-1);

  0003c	83 c8 ff	 or	 eax, -1
  0003f	e9 56 02 00 00	 jmp	 $LN1@PMC_Compar
$LN5@PMC_Compar:

; 157  :             }

  00044	e9 51 02 00 00	 jmp	 $LN1@PMC_Compar
$LN2@PMC_Compar:

; 158  :         }
; 159  :         else if (v == 0)

  00049	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0004c	0b 45 10	 or	 eax, DWORD PTR _v$[ebp+4]
  0004f	75 0f		 jne	 SHORT $LN6@PMC_Compar

; 160  :         {
; 161  :             // v が 0 である場合
; 162  :             return (1);

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	e9 3f 02 00 00	 jmp	 $LN1@PMC_Compar

; 163  :         }
; 164  :         else

  0005b	e9 3a 02 00 00	 jmp	 $LN1@PMC_Compar
$LN6@PMC_Compar:

; 165  :         {
; 166  :             // u と v がともに 0 ではない場合
; 167  :             if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  00060	b9 01 00 00 00	 mov	 ecx, 1
  00065	85 c9		 test	 ecx, ecx
  00067	0f 84 86 01 00
	00		 je	 $LN8@PMC_Compar

; 168  :             {
; 169  :                 // _UINT64_T が 1 ワードで表現しきれない場合
; 170  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  0006d	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00070	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00073	89 45 fc	 mov	 DWORD PTR _u_bit_count$7[ebp], eax

; 171  :                 _UINT32_T v_hi;
; 172  :                 _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);

  00076	8d 4d f4	 lea	 ecx, DWORD PTR _v_hi$6[ebp]
  00079	51		 push	 ecx
  0007a	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp+4]
  0007d	52		 push	 edx
  0007e	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 __FROMDWORDTOWORD
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008a	89 45 ec	 mov	 DWORD PTR _v_lo$5[ebp], eax

; 173  :                 if (v_hi == 0)

  0008d	83 7d f4 00	 cmp	 DWORD PTR _v_hi$6[ebp], 0
  00091	0f 85 8a 00 00
	00		 jne	 $LN10@PMC_Compar

; 174  :                 {
; 175  :                     // v の値が 32bit では表現できる場合
; 176  :                     __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);

  00097	8b 4d ec	 mov	 ecx, DWORD PTR _v_lo$5[ebp]
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  000a0	83 c4 04	 add	 esp, 4
  000a3	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  000a8	2b d0		 sub	 edx, eax
  000aa	89 55 e8	 mov	 DWORD PTR _v_bit_count$4[ebp], edx

; 177  :                     if (u_bit_count > v_bit_count)

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _u_bit_count$7[ebp]
  000b0	3b 45 e8	 cmp	 eax, DWORD PTR _v_bit_count$4[ebp]
  000b3	76 0c		 jbe	 SHORT $LN12@PMC_Compar

; 178  :                     {
; 179  :                         // 明らかに u > v である場合
; 180  :                         return (1);

  000b5	b8 01 00 00 00	 mov	 eax, 1
  000ba	e9 db 01 00 00	 jmp	 $LN1@PMC_Compar
  000bf	eb 5b		 jmp	 SHORT $LN13@PMC_Compar
$LN12@PMC_Compar:

; 181  :                     }
; 182  :                     else if (u_bit_count < v_bit_count)

  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _u_bit_count$7[ebp]
  000c4	3b 4d e8	 cmp	 ecx, DWORD PTR _v_bit_count$4[ebp]
  000c7	73 0a		 jae	 SHORT $LN14@PMC_Compar

; 183  :                     {
; 184  :                         // 明らかに u < v である場合
; 185  :                         return (-1);

  000c9	83 c8 ff	 or	 eax, -1
  000cc	e9 c9 01 00 00	 jmp	 $LN1@PMC_Compar

; 186  :                     }
; 187  :                     else

  000d1	eb 49		 jmp	 SHORT $LN13@PMC_Compar
$LN14@PMC_Compar:

; 188  :                     {
; 189  :                         // u > 0 && v > 0 かつ u のビット長と v のビット長が等しく、かつ v が 1 ワードで表現できる場合
; 190  :                         // ⇒ u と v はともに 1 ワードで表現できる
; 191  :                         if (u->BLOCK[0] > v_lo)

  000d3	ba 04 00 00 00	 mov	 edx, 4
  000d8	6b c2 00	 imul	 eax, edx, 0
  000db	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  000de	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000e1	8b 04 10	 mov	 eax, DWORD PTR [eax+edx]
  000e4	3b 45 ec	 cmp	 eax, DWORD PTR _v_lo$5[ebp]
  000e7	76 0c		 jbe	 SHORT $LN16@PMC_Compar

; 192  :                             return (1);

  000e9	b8 01 00 00 00	 mov	 eax, 1
  000ee	e9 a7 01 00 00	 jmp	 $LN1@PMC_Compar
  000f3	eb 27		 jmp	 SHORT $LN13@PMC_Compar
$LN16@PMC_Compar:

; 193  :                         else if (u->BLOCK[0] < v_lo)

  000f5	b9 04 00 00 00	 mov	 ecx, 4
  000fa	6b d1 00	 imul	 edx, ecx, 0
  000fd	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00100	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00103	8b 14 0a	 mov	 edx, DWORD PTR [edx+ecx]
  00106	3b 55 ec	 cmp	 edx, DWORD PTR _v_lo$5[ebp]
  00109	73 0a		 jae	 SHORT $LN18@PMC_Compar

; 194  :                             return (-1);

  0010b	83 c8 ff	 or	 eax, -1
  0010e	e9 87 01 00 00	 jmp	 $LN1@PMC_Compar

; 195  :                         else

  00113	eb 07		 jmp	 SHORT $LN13@PMC_Compar
$LN18@PMC_Compar:

; 196  :                             return (0);

  00115	33 c0		 xor	 eax, eax
  00117	e9 7e 01 00 00	 jmp	 $LN1@PMC_Compar
$LN13@PMC_Compar:

; 197  :                     }
; 198  :                 }
; 199  :                 else

  0011c	e9 cd 00 00 00	 jmp	 $LN11@PMC_Compar
$LN10@PMC_Compar:

; 200  :                 {
; 201  :                     // v の値が 32bit では表現できない場合
; 202  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);

  00121	8b 45 f4	 mov	 eax, DWORD PTR _v_hi$6[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  0012a	83 c4 04	 add	 esp, 4
  0012d	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00132	2b c8		 sub	 ecx, eax
  00134	89 4d e4	 mov	 DWORD PTR _v_bit_count$3[ebp], ecx

; 203  :                     if (u_bit_count > v_bit_count)

  00137	8b 55 fc	 mov	 edx, DWORD PTR _u_bit_count$7[ebp]
  0013a	3b 55 e4	 cmp	 edx, DWORD PTR _v_bit_count$3[ebp]
  0013d	76 0f		 jbe	 SHORT $LN20@PMC_Compar

; 204  :                     {
; 205  :                         // 明らかに u > v である場合
; 206  :                         return (1);

  0013f	b8 01 00 00 00	 mov	 eax, 1
  00144	e9 51 01 00 00	 jmp	 $LN1@PMC_Compar
  00149	e9 a0 00 00 00	 jmp	 $LN11@PMC_Compar
$LN20@PMC_Compar:

; 207  :                     }
; 208  :                     else if (u_bit_count < v_bit_count)

  0014e	8b 45 fc	 mov	 eax, DWORD PTR _u_bit_count$7[ebp]
  00151	3b 45 e4	 cmp	 eax, DWORD PTR _v_bit_count$3[ebp]
  00154	73 0d		 jae	 SHORT $LN22@PMC_Compar

; 209  :                     {
; 210  :                         // 明らかに u < v である場合
; 211  :                         return (-1);

  00156	83 c8 ff	 or	 eax, -1
  00159	e9 3c 01 00 00	 jmp	 $LN1@PMC_Compar

; 212  :                     }
; 213  :                     else

  0015e	e9 8b 00 00 00	 jmp	 $LN11@PMC_Compar
$LN22@PMC_Compar:

; 214  :                     {
; 215  :                         // u > 0 && v > 0 かつ u のビット長と v のビット長が等しく、かつ v が 2 ワードで表現できる場合
; 216  :                         // ⇒ u と v はともに 2 ワードで表現できる
; 217  :                         if (u->BLOCK[1] > v_hi)

  00163	b9 04 00 00 00	 mov	 ecx, 4
  00168	c1 e1 00	 shl	 ecx, 0
  0016b	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0016e	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00171	8b 0c 01	 mov	 ecx, DWORD PTR [ecx+eax]
  00174	3b 4d f4	 cmp	 ecx, DWORD PTR _v_hi$6[ebp]
  00177	76 0c		 jbe	 SHORT $LN24@PMC_Compar

; 218  :                             return (1);

  00179	b8 01 00 00 00	 mov	 eax, 1
  0017e	e9 17 01 00 00	 jmp	 $LN1@PMC_Compar
  00183	eb 69		 jmp	 SHORT $LN11@PMC_Compar
$LN24@PMC_Compar:

; 219  :                         else if (u->BLOCK[1] < v_hi)

  00185	ba 04 00 00 00	 mov	 edx, 4
  0018a	c1 e2 00	 shl	 edx, 0
  0018d	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00190	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00193	8b 14 0a	 mov	 edx, DWORD PTR [edx+ecx]
  00196	3b 55 f4	 cmp	 edx, DWORD PTR _v_hi$6[ebp]
  00199	73 0a		 jae	 SHORT $LN26@PMC_Compar

; 220  :                             return (-1);

  0019b	83 c8 ff	 or	 eax, -1
  0019e	e9 f7 00 00 00	 jmp	 $LN1@PMC_Compar
  001a3	eb 49		 jmp	 SHORT $LN11@PMC_Compar
$LN26@PMC_Compar:

; 221  :                         else if (u->BLOCK[0] > v_lo)

  001a5	b8 04 00 00 00	 mov	 eax, 4
  001aa	6b c8 00	 imul	 ecx, eax, 0
  001ad	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  001b0	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  001b3	8b 0c 01	 mov	 ecx, DWORD PTR [ecx+eax]
  001b6	3b 4d ec	 cmp	 ecx, DWORD PTR _v_lo$5[ebp]
  001b9	76 0c		 jbe	 SHORT $LN28@PMC_Compar

; 222  :                             return (1);

  001bb	b8 01 00 00 00	 mov	 eax, 1
  001c0	e9 d5 00 00 00	 jmp	 $LN1@PMC_Compar
  001c5	eb 27		 jmp	 SHORT $LN11@PMC_Compar
$LN28@PMC_Compar:

; 223  :                         else if (u->BLOCK[0] < v_lo)

  001c7	ba 04 00 00 00	 mov	 edx, 4
  001cc	6b c2 00	 imul	 eax, edx, 0
  001cf	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  001d2	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  001d5	8b 04 10	 mov	 eax, DWORD PTR [eax+edx]
  001d8	3b 45 ec	 cmp	 eax, DWORD PTR _v_lo$5[ebp]
  001db	73 0a		 jae	 SHORT $LN30@PMC_Compar

; 224  :                             return (-1);

  001dd	83 c8 ff	 or	 eax, -1
  001e0	e9 b5 00 00 00	 jmp	 $LN1@PMC_Compar

; 225  :                         else

  001e5	eb 07		 jmp	 SHORT $LN11@PMC_Compar
$LN30@PMC_Compar:

; 226  :                             return (0);

  001e7	33 c0		 xor	 eax, eax
  001e9	e9 ac 00 00 00	 jmp	 $LN1@PMC_Compar
$LN11@PMC_Compar:

; 227  :                     }
; 228  :                 }
; 229  :             }
; 230  :             else

  001ee	e9 a7 00 00 00	 jmp	 $LN1@PMC_Compar
$LN8@PMC_Compar:

; 231  :             {
; 232  :                 // _UINT64_T が 1 ワードで表現できる場合
; 233  : 
; 234  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  001f3	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  001f6	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  001f9	89 55 e0	 mov	 DWORD PTR _u_bit_count$2[ebp], edx

; 235  :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);

  001fc	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  001ff	50		 push	 eax
  00200	e8 00 00 00 00	 call	 __LZCNT_ALT_UNIT
  00205	83 c4 04	 add	 esp, 4
  00208	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0020d	2b c8		 sub	 ecx, eax
  0020f	89 4d dc	 mov	 DWORD PTR _v_bit_count$1[ebp], ecx

; 236  :                 if (u_bit_count > v_bit_count)

  00212	8b 55 e0	 mov	 edx, DWORD PTR _u_bit_count$2[ebp]
  00215	3b 55 dc	 cmp	 edx, DWORD PTR _v_bit_count$1[ebp]
  00218	76 09		 jbe	 SHORT $LN32@PMC_Compar

; 237  :                 {
; 238  :                     // 明らかに u > v である場合
; 239  :                     return (1);

  0021a	b8 01 00 00 00	 mov	 eax, 1
  0021f	eb 79		 jmp	 SHORT $LN1@PMC_Compar
  00221	eb 77		 jmp	 SHORT $LN1@PMC_Compar
$LN32@PMC_Compar:

; 240  :                 }
; 241  :                 else if (u_bit_count < v_bit_count)

  00223	8b 45 e0	 mov	 eax, DWORD PTR _u_bit_count$2[ebp]
  00226	3b 45 dc	 cmp	 eax, DWORD PTR _v_bit_count$1[ebp]
  00229	73 07		 jae	 SHORT $LN34@PMC_Compar

; 242  :                 {
; 243  :                     // 明らかに u < v である場合
; 244  :                     return (-1);

  0022b	83 c8 ff	 or	 eax, -1
  0022e	eb 6a		 jmp	 SHORT $LN1@PMC_Compar

; 245  :                 }
; 246  :                 else

  00230	eb 68		 jmp	 SHORT $LN1@PMC_Compar
$LN34@PMC_Compar:

; 247  :                 {
; 248  :                     // u > 0 && v > 0 かつ u のビット長と v のビット長が等しく、かつ v が 1 ワードで表現できる場合
; 249  :                     // ⇒ u と v はともに 1 ワードで表現できる
; 250  :                     if (u->BLOCK[0] > v)

  00232	b9 04 00 00 00	 mov	 ecx, 4
  00237	6b d1 00	 imul	 edx, ecx, 0
  0023a	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0023d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00240	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00243	33 c0		 xor	 eax, eax
  00245	89 55 d4	 mov	 DWORD PTR tv239[ebp], edx
  00248	89 45 d8	 mov	 DWORD PTR tv239[ebp+4], eax
  0024b	8b 4d d8	 mov	 ecx, DWORD PTR tv239[ebp+4]
  0024e	3b 4d 10	 cmp	 ecx, DWORD PTR _v$[ebp+4]
  00251	72 13		 jb	 SHORT $LN36@PMC_Compar
  00253	77 08		 ja	 SHORT $LN41@PMC_Compar
  00255	8b 55 d4	 mov	 edx, DWORD PTR tv239[ebp]
  00258	3b 55 0c	 cmp	 edx, DWORD PTR _v$[ebp]
  0025b	76 09		 jbe	 SHORT $LN36@PMC_Compar
$LN41@PMC_Compar:

; 251  :                         return (1);

  0025d	b8 01 00 00 00	 mov	 eax, 1
  00262	eb 36		 jmp	 SHORT $LN1@PMC_Compar
  00264	eb 34		 jmp	 SHORT $LN1@PMC_Compar
$LN36@PMC_Compar:

; 252  :                     else if (u->BLOCK[0] < v)

  00266	b8 04 00 00 00	 mov	 eax, 4
  0026b	6b c8 00	 imul	 ecx, eax, 0
  0026e	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00271	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00274	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00277	33 d2		 xor	 edx, edx
  00279	89 4d cc	 mov	 DWORD PTR tv251[ebp], ecx
  0027c	89 55 d0	 mov	 DWORD PTR tv251[ebp+4], edx
  0027f	8b 45 d0	 mov	 eax, DWORD PTR tv251[ebp+4]
  00282	3b 45 10	 cmp	 eax, DWORD PTR _v$[ebp+4]
  00285	77 11		 ja	 SHORT $LN38@PMC_Compar
  00287	72 08		 jb	 SHORT $LN42@PMC_Compar
  00289	8b 4d cc	 mov	 ecx, DWORD PTR tv251[ebp]
  0028c	3b 4d 0c	 cmp	 ecx, DWORD PTR _v$[ebp]
  0028f	73 07		 jae	 SHORT $LN38@PMC_Compar
$LN42@PMC_Compar:

; 253  :                         return (-1);

  00291	83 c8 ff	 or	 eax, -1
  00294	eb 04		 jmp	 SHORT $LN1@PMC_Compar

; 254  :                     else

  00296	eb 02		 jmp	 SHORT $LN1@PMC_Compar
$LN38@PMC_Compar:

; 255  :                         return (0);

  00298	33 c0		 xor	 eax, eax
$LN1@PMC_Compar:

; 256  :                 }
; 257  :             }
; 258  :         }
; 259  :     }

  0029a	52		 push	 edx
  0029b	8b cd		 mov	 ecx, ebp
  0029d	50		 push	 eax
  0029e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN45@PMC_Compar
  002a4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002a9	58		 pop	 eax
  002aa	5a		 pop	 edx
  002ab	5f		 pop	 edi
  002ac	83 c4 34	 add	 esp, 52			; 00000034H
  002af	3b ec		 cmp	 ebp, esp
  002b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b6	8b e5		 mov	 esp, ebp
  002b8	5d		 pop	 ebp
  002b9	c3		 ret	 0
  002ba	66 90		 npad	 2
$LN45@PMC_Compar:
  002bc	01 00 00 00	 DD	 1
  002c0	00 00 00 00	 DD	 $LN44@PMC_Compar
$LN44@PMC_Compar:
  002c4	f4 ff ff ff	 DD	 -12			; fffffff4H
  002c8	04 00 00 00	 DD	 4
  002cc	00 00 00 00	 DD	 $LN43@PMC_Compar
$LN43@PMC_Compar:
  002d0	76		 DB	 118			; 00000076H
  002d1	5f		 DB	 95			; 0000005fH
  002d2	68		 DB	 104			; 00000068H
  002d3	69		 DB	 105			; 00000069H
  002d4	00		 DB	 0
?PMC_Compare_X_L_Imp@Internal@Core@Math@Palmtree@@YAHPAU__tag_NUMBER_HEADER@1234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Compare_X_L_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
_v_bit_count$1 = -8					; size = 4
_u_bit_count$2 = -4					; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Compare_X_I_Imp@Internal@Core@Math@Palmtree@@YAHPAU__tag_NUMBER_HEADER@1234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_I_Imp

; 58   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 59   :         if (u->IS_ZERO)

  0001e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00021	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00024	83 e1 01	 and	 ecx, 1
  00027	74 1c		 je	 SHORT $LN2@PMC_Compar

; 60   :         {
; 61   :             // u が 0 である場合
; 62   :             if (v == 0)

  00029	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  0002d	75 09		 jne	 SHORT $LN4@PMC_Compar

; 63   :             {
; 64   :                 // v が 0 である場合
; 65   :                 return (0);

  0002f	33 c0		 xor	 eax, eax
  00031	e9 9b 00 00 00	 jmp	 $LN1@PMC_Compar

; 66   :             }
; 67   :             else

  00036	eb 08		 jmp	 SHORT $LN5@PMC_Compar
$LN4@PMC_Compar:

; 68   :             {
; 69   :                 // v が 0 でない場合
; 70   :                 return (-1);

  00038	83 c8 ff	 or	 eax, -1
  0003b	e9 91 00 00 00	 jmp	 $LN1@PMC_Compar
$LN5@PMC_Compar:

; 71   :             }

  00040	e9 8c 00 00 00	 jmp	 $LN1@PMC_Compar
$LN2@PMC_Compar:

; 72   :         }
; 73   :         else if (v == 0)

  00045	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00049	75 09		 jne	 SHORT $LN6@PMC_Compar

; 74   :         {
; 75   :             // v が 0 である場合
; 76   :             return (1);

  0004b	b8 01 00 00 00	 mov	 eax, 1
  00050	eb 7f		 jmp	 SHORT $LN1@PMC_Compar

; 77   :         }
; 78   :         else

  00052	eb 7d		 jmp	 SHORT $LN1@PMC_Compar
$LN6@PMC_Compar:

; 79   :         {
; 80   :             // x と y がともに 0 ではない場合
; 81   :             __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00054	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00057	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0005a	89 45 fc	 mov	 DWORD PTR _u_bit_count$2[ebp], eax

; 82   :             __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  0005d	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00060	51		 push	 ecx
  00061	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  00066	83 c4 04	 add	 esp, 4
  00069	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0006e	2b d0		 sub	 edx, eax
  00070	89 55 f8	 mov	 DWORD PTR _v_bit_count$1[ebp], edx

; 83   :             if (u_bit_count > v_bit_count)

  00073	8b 45 fc	 mov	 eax, DWORD PTR _u_bit_count$2[ebp]
  00076	3b 45 f8	 cmp	 eax, DWORD PTR _v_bit_count$1[ebp]
  00079	76 09		 jbe	 SHORT $LN8@PMC_Compar

; 84   :             {
; 85   :                 // 明らかに u > v である場合
; 86   :                 return (1);

  0007b	b8 01 00 00 00	 mov	 eax, 1
  00080	eb 4f		 jmp	 SHORT $LN1@PMC_Compar
  00082	eb 4d		 jmp	 SHORT $LN1@PMC_Compar
$LN8@PMC_Compar:

; 87   :             }
; 88   :             else if (u_bit_count < v_bit_count)

  00084	8b 4d fc	 mov	 ecx, DWORD PTR _u_bit_count$2[ebp]
  00087	3b 4d f8	 cmp	 ecx, DWORD PTR _v_bit_count$1[ebp]
  0008a	73 07		 jae	 SHORT $LN10@PMC_Compar

; 89   :             {
; 90   :                 // 明らかに u < v である場合
; 91   :                 return (-1);

  0008c	83 c8 ff	 or	 eax, -1
  0008f	eb 40		 jmp	 SHORT $LN1@PMC_Compar

; 92   :             }
; 93   :             else

  00091	eb 3e		 jmp	 SHORT $LN1@PMC_Compar
$LN10@PMC_Compar:

; 94   :             {
; 95   :                 // u > 0 && v > 0 かつ u のビット長と v のビット長が等しい場合
; 96   :                 // ⇒ u と v はともに 1 ワードで表現できる
; 97   :                 if (u->BLOCK[0] > v)

  00093	ba 04 00 00 00	 mov	 edx, 4
  00098	6b c2 00	 imul	 eax, edx, 0
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  0009e	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000a1	8b 04 10	 mov	 eax, DWORD PTR [eax+edx]
  000a4	3b 45 0c	 cmp	 eax, DWORD PTR _v$[ebp]
  000a7	76 09		 jbe	 SHORT $LN12@PMC_Compar

; 98   :                     return (1);

  000a9	b8 01 00 00 00	 mov	 eax, 1
  000ae	eb 21		 jmp	 SHORT $LN1@PMC_Compar
  000b0	eb 1f		 jmp	 SHORT $LN1@PMC_Compar
$LN12@PMC_Compar:

; 99   :                 else if (u->BLOCK[0] < v)

  000b2	b9 04 00 00 00	 mov	 ecx, 4
  000b7	6b d1 00	 imul	 edx, ecx, 0
  000ba	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000bd	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000c0	8b 14 0a	 mov	 edx, DWORD PTR [edx+ecx]
  000c3	3b 55 0c	 cmp	 edx, DWORD PTR _v$[ebp]
  000c6	73 07		 jae	 SHORT $LN14@PMC_Compar

; 100  :                     return (-1);

  000c8	83 c8 ff	 or	 eax, -1
  000cb	eb 04		 jmp	 SHORT $LN1@PMC_Compar

; 101  :                 else

  000cd	eb 02		 jmp	 SHORT $LN1@PMC_Compar
$LN14@PMC_Compar:

; 102  :                     return (0);

  000cf	33 c0		 xor	 eax, eax
$LN1@PMC_Compar:

; 103  :             }
; 104  :         }
; 105  :     }

  000d1	83 c4 08	 add	 esp, 8
  000d4	3b ec		 cmp	 ebp, esp
  000d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
?PMC_Compare_X_I_Imp@Internal@Core@Math@Palmtree@@YAHPAU__tag_NUMBER_HEADER@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Compare_X_I_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__LZCNT_ALT_UNIT PROC

; 454  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 455  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0f		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);

  00032	0f bd 45 08	 bsr	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);
; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00039	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  0003e	2b 45 f8	 sub	 eax, DWORD PTR _pos$[ebp]
$LN1@LZCNT_ALT_:

; 480  :         }

  00041	52		 push	 edx
  00042	8b cd		 mov	 ecx, ebp
  00044	50		 push	 eax
  00045	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@LZCNT_ALT_
  0004b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00050	58		 pop	 eax
  00051	5a		 pop	 edx
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN6@LZCNT_ALT_:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@LZCNT_ALT_
$LN5@LZCNT_ALT_:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@LZCNT_ALT_
$LN4@LZCNT_ALT_:
  00074	70		 DB	 112			; 00000070H
  00075	6f		 DB	 111			; 0000006fH
  00076	73		 DB	 115			; 00000073H
  00077	00		 DB	 0
__LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__LZCNT_ALT_32 PROC

; 421  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 422  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0f		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  00032	0f bd 45 08	 bsr	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00039	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  0003e	2b 45 f8	 sub	 eax, DWORD PTR _pos$[ebp]
$LN1@LZCNT_ALT_:

; 433  :         }

  00041	52		 push	 edx
  00042	8b cd		 mov	 ecx, ebp
  00044	50		 push	 eax
  00045	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@LZCNT_ALT_
  0004b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00050	58		 pop	 eax
  00051	5a		 pop	 edx
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN6@LZCNT_ALT_:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@LZCNT_ALT_
$LN5@LZCNT_ALT_:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@LZCNT_ALT_
$LN4@LZCNT_ALT_:
  00074	70		 DB	 112			; 00000070H
  00075	6f		 DB	 111			; 0000006fH
  00076	73		 DB	 115			; 00000073H
  00077	00		 DB	 0
__LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_value$ = 8						; size = 8
_result_high$ = 16					; size = 4
__FROMDWORDTOWORD PROC

; 145  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0000d	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00010	8b 55 0c	 mov	 edx, DWORD PTR _value$[ebp+4]
  00013	b1 20		 mov	 cl, 32			; 00000020H
  00015	e8 00 00 00 00	 call	 __aullshr
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR _result_high$[ebp]
  0001d	89 01		 mov	 DWORD PTR [ecx], eax

; 147  :             return ((_UINT32_T)value);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 148  :         }

  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
__FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
tv84 = -96						; size = 4
$T1 = -92						; size = 24
$T2 = -68						; size = 24
$T3 = -44						; size = 24
_v_bit_count$4 = -20					; size = 4
_u_bit_count$5 = -16					; size = 4
_w$ = -12						; size = 4
_nv$ = -8						; size = 4
_nu$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Compare_X_X@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_X

; 298  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	57		 push	 edi
  00007	8d 7d a0	 lea	 edi, DWORD PTR [ebp-96]
  0000a	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 299  :         if (u == nullptr)

  00020	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00024	75 20		 jne	 SHORT $LN2@PMC_Compar

; 300  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00026	68 00 00 00 00	 push	 OFFSET $SG117710
  0002b	68 00 00 00 00	 push	 OFFSET $SG117711
  00030	8d 4d d4	 lea	 ecx, DWORD PTR $T3[ebp]
  00033	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0003d	8d 45 d4	 lea	 eax, DWORD PTR $T3[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Compar:

; 301  :         if (v == nullptr)

  00046	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  0004a	75 20		 jne	 SHORT $LN3@PMC_Compar

; 302  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0004c	68 00 00 00 00	 push	 OFFSET $SG117714
  00051	68 00 00 00 00	 push	 OFFSET $SG117715
  00056	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  00059	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005e	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00063	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Compar:

; 303  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  0006c	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0006f	89 55 fc	 mov	 DWORD PTR _nu$[ebp], edx

; 304  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  00072	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00075	89 45 f8	 mov	 DWORD PTR _nv$[ebp], eax

; 305  :         CheckNumber(nu);

  00078	8b 4d fc	 mov	 ecx, DWORD PTR _nu$[ebp]
  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00081	83 c4 04	 add	 esp, 4

; 306  :         CheckNumber(nv);

  00084	8b 55 f8	 mov	 edx, DWORD PTR _nv$[ebp]
  00087	52		 push	 edx
  00088	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  0008d	83 c4 04	 add	 esp, 4

; 307  :         _INT32_T w;
; 308  :         if (nu->IS_ZERO)

  00090	8b 45 fc	 mov	 eax, DWORD PTR _nu$[ebp]
  00093	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00096	83 e1 01	 and	 ecx, 1
  00099	74 23		 je	 SHORT $LN4@PMC_Compar

; 309  :             w = nv->IS_ZERO ? 0 : -1;

  0009b	8b 55 f8	 mov	 edx, DWORD PTR _nv$[ebp]
  0009e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a1	83 e0 01	 and	 eax, 1
  000a4	74 09		 je	 SHORT $LN14@PMC_Compar
  000a6	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
  000ad	eb 07		 jmp	 SHORT $LN15@PMC_Compar
$LN14@PMC_Compar:
  000af	c7 45 a0 ff ff
	ff ff		 mov	 DWORD PTR tv84[ebp], -1
$LN15@PMC_Compar:
  000b6	8b 4d a0	 mov	 ecx, DWORD PTR tv84[ebp]
  000b9	89 4d f4	 mov	 DWORD PTR _w$[ebp], ecx
  000bc	eb 68		 jmp	 SHORT $LN5@PMC_Compar
$LN4@PMC_Compar:

; 310  :         else if (nv->IS_ZERO)

  000be	8b 55 f8	 mov	 edx, DWORD PTR _nv$[ebp]
  000c1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c4	83 e0 01	 and	 eax, 1
  000c7	74 09		 je	 SHORT $LN6@PMC_Compar

; 311  :             w = 1;

  000c9	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _w$[ebp], 1

; 312  :         else

  000d0	eb 54		 jmp	 SHORT $LN5@PMC_Compar
$LN6@PMC_Compar:

; 313  :         {
; 314  :             __UNIT_TYPE u_bit_count = nu->UNIT_BIT_COUNT;

  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _nu$[ebp]
  000d5	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000d8	89 55 f0	 mov	 DWORD PTR _u_bit_count$5[ebp], edx

; 315  :             __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;

  000db	8b 45 f8	 mov	 eax, DWORD PTR _nv$[ebp]
  000de	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000e1	89 4d ec	 mov	 DWORD PTR _v_bit_count$4[ebp], ecx

; 316  :             if (u_bit_count > v_bit_count)

  000e4	8b 55 f0	 mov	 edx, DWORD PTR _u_bit_count$5[ebp]
  000e7	3b 55 ec	 cmp	 edx, DWORD PTR _v_bit_count$4[ebp]
  000ea	76 09		 jbe	 SHORT $LN8@PMC_Compar

; 317  :             {
; 318  :                 // 明らかに u > v である場合
; 319  :                 w = 1;

  000ec	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _w$[ebp], 1
  000f3	eb 31		 jmp	 SHORT $LN5@PMC_Compar
$LN8@PMC_Compar:

; 320  :             }
; 321  :             else if (u_bit_count < v_bit_count)

  000f5	8b 45 f0	 mov	 eax, DWORD PTR _u_bit_count$5[ebp]
  000f8	3b 45 ec	 cmp	 eax, DWORD PTR _v_bit_count$4[ebp]
  000fb	73 09		 jae	 SHORT $LN10@PMC_Compar

; 322  :             {
; 323  :                 // 明らかに u < v である場合
; 324  :                 w = -1;

  000fd	c7 45 f4 ff ff
	ff ff		 mov	 DWORD PTR _w$[ebp], -1

; 325  :             }
; 326  :             else

  00104	eb 20		 jmp	 SHORT $LN5@PMC_Compar
$LN10@PMC_Compar:

; 327  :             {
; 328  :                 // u > 0 && v > 0 かつ u のビット長と v のビット長が等しい場合
; 329  :                 w = Compare_Imp(nu->BLOCK, nv->BLOCK, nu->UNIT_WORD_COUNT);

  00106	8b 4d fc	 mov	 ecx, DWORD PTR _nu$[ebp]
  00109	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0010c	52		 push	 edx
  0010d	8b 45 f8	 mov	 eax, DWORD PTR _nv$[ebp]
  00110	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00113	51		 push	 ecx
  00114	8b 55 fc	 mov	 edx, DWORD PTR _nu$[ebp]
  00117	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?Compare_Imp@Internal@Core@Math@Palmtree@@YAHPAI0I@Z ; Palmtree::Math::Core::Internal::Compare_Imp
  00120	83 c4 0c	 add	 esp, 12			; 0000000cH
  00123	89 45 f4	 mov	 DWORD PTR _w$[ebp], eax
$LN5@PMC_Compar:

; 330  :             }
; 331  :         }
; 332  : #ifdef _DEBUG
; 333  :         if (w != 0 && w != 1 && w != -1)

  00126	83 7d f4 00	 cmp	 DWORD PTR _w$[ebp], 0
  0012a	74 2c		 je	 SHORT $LN12@PMC_Compar
  0012c	83 7d f4 01	 cmp	 DWORD PTR _w$[ebp], 1
  00130	74 26		 je	 SHORT $LN12@PMC_Compar
  00132	83 7d f4 ff	 cmp	 DWORD PTR _w$[ebp], -1
  00136	74 20		 je	 SHORT $LN12@PMC_Compar

; 334  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_compare.cpp;PMC_Compare_X_X;1");

  00138	68 00 00 00 00	 push	 OFFSET $SG117726
  0013d	68 00 00 00 00	 push	 OFFSET $SG117727
  00142	8d 4d a4	 lea	 ecx, DWORD PTR $T1[ebp]
  00145	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0014a	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0014f	8d 4d a4	 lea	 ecx, DWORD PTR $T1[ebp]
  00152	51		 push	 ecx
  00153	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN12@PMC_Compar:

; 335  : #endif
; 336  :         return (w);

  00158	8b 45 f4	 mov	 eax, DWORD PTR _w$[ebp]
$LN13@PMC_Compar:

; 337  :     }

  0015b	5f		 pop	 edi
  0015c	83 c4 60	 add	 esp, 96			; 00000060H
  0015f	3b ec		 cmp	 ebp, esp
  00161	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 08 00	 ret	 8
?PMC_Compare_X_X@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Compare_X_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
$T3 = -28						; size = 24
_w$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_Compare_X_L@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_L

; 280  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	57		 push	 edi
  00007	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000a	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 281  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)

  00020	33 c0		 xor	 eax, eax
  00022	74 20		 je	 SHORT $LN2@PMC_Compar

; 282  :         {
; 283  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 284  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_compare.cpp;PMC_Compare_X_L;1");

  00024	68 00 00 00 00	 push	 OFFSET $SG117687
  00029	68 00 00 00 00	 push	 OFFSET $SG117688
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00031	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Compar:

; 285  :         }
; 286  :         if (u == nullptr)

  00044	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00048	75 20		 jne	 SHORT $LN3@PMC_Compar

; 287  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117691
  0004f	68 00 00 00 00	 push	 OFFSET $SG117692
  00054	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00061	8d 55 cc	 lea	 edx, DWORD PTR $T2[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Compar:

; 288  :         CheckNumber((NUMBER_HEADER*)u);

  0006a	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00073	83 c4 04	 add	 esp, 4

; 289  :         _INT32_T w = PMC_Compare_X_L_Imp((NUMBER_HEADER*)u, v);

  00076	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp+4]
  00079	51		 push	 ecx
  0007a	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  0007d	52		 push	 edx
  0007e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?PMC_Compare_X_L_Imp@Internal@Core@Math@Palmtree@@YAHPAU__tag_NUMBER_HEADER@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_L_Imp
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008a	89 45 fc	 mov	 DWORD PTR _w$[ebp], eax

; 290  : #ifdef _DEBUG
; 291  :         if (w != 0 && w != 1 && w != -1)

  0008d	83 7d fc 00	 cmp	 DWORD PTR _w$[ebp], 0
  00091	74 2c		 je	 SHORT $LN4@PMC_Compar
  00093	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  00097	74 26		 je	 SHORT $LN4@PMC_Compar
  00099	83 7d fc ff	 cmp	 DWORD PTR _w$[ebp], -1
  0009d	74 20		 je	 SHORT $LN4@PMC_Compar

; 292  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_compare.cpp;PMC_Compare_X_L;2");

  0009f	68 00 00 00 00	 push	 OFFSET $SG117695
  000a4	68 00 00 00 00	 push	 OFFSET $SG117696
  000a9	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000ac	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000b1	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000b6	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000b9	51		 push	 ecx
  000ba	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_Compar:

; 293  : #endif
; 294  :         return (w);

  000bf	8b 45 fc	 mov	 eax, DWORD PTR _w$[ebp]
$LN5@PMC_Compar:

; 295  :     }

  000c2	5f		 pop	 edi
  000c3	83 c4 4c	 add	 esp, 76			; 0000004cH
  000c6	3b ec		 cmp	 ebp, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 0c 00	 ret	 12			; 0000000cH
?PMC_Compare_X_L@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Compare_X_L
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
$T3 = -28						; size = 24
_w$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Compare_X_I@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_I

; 126  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	57		 push	 edi
  00007	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000a	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 127  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  00020	33 c0		 xor	 eax, eax
  00022	74 20		 je	 SHORT $LN2@PMC_Compar

; 128  :         {
; 129  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 130  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_compare.cpp;PMC_Compare_X_I;1");

  00024	68 00 00 00 00	 push	 OFFSET $SG117596
  00029	68 00 00 00 00	 push	 OFFSET $SG117597
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00031	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Compar:

; 131  :         }
; 132  :         if (u == nullptr)

  00044	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00048	75 20		 jne	 SHORT $LN3@PMC_Compar

; 133  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117600
  0004f	68 00 00 00 00	 push	 OFFSET $SG117601
  00054	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00061	8d 55 cc	 lea	 edx, DWORD PTR $T2[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Compar:

; 134  :         CheckNumber((NUMBER_HEADER*)u);

  0006a	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00073	83 c4 04	 add	 esp, 4

; 135  :         _INT32_T w = PMC_Compare_X_I_Imp((NUMBER_HEADER*)u, v);

  00076	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00079	51		 push	 ecx
  0007a	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0007d	52		 push	 edx
  0007e	e8 00 00 00 00	 call	 ?PMC_Compare_X_I_Imp@Internal@Core@Math@Palmtree@@YAHPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_I_Imp
  00083	83 c4 08	 add	 esp, 8
  00086	89 45 fc	 mov	 DWORD PTR _w$[ebp], eax

; 136  : #ifdef _DEBUG
; 137  :         if (w != 0 && w != 1 && w != -1)

  00089	83 7d fc 00	 cmp	 DWORD PTR _w$[ebp], 0
  0008d	74 2c		 je	 SHORT $LN4@PMC_Compar
  0008f	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  00093	74 26		 je	 SHORT $LN4@PMC_Compar
  00095	83 7d fc ff	 cmp	 DWORD PTR _w$[ebp], -1
  00099	74 20		 je	 SHORT $LN4@PMC_Compar

; 138  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_compare.cpp;PMC_Compare_X_I;2");

  0009b	68 00 00 00 00	 push	 OFFSET $SG117604
  000a0	68 00 00 00 00	 push	 OFFSET $SG117605
  000a5	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000a8	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000ad	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000b2	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_Compar:

; 139  : #endif
; 140  :         return (w);

  000bb	8b 45 fc	 mov	 eax, DWORD PTR _w$[ebp]
$LN5@PMC_Compar:

; 141  :     }

  000be	5f		 pop	 edi
  000bf	83 c4 4c	 add	 esp, 76			; 0000004cH
  000c2	3b ec		 cmp	 ebp, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c2 08 00	 ret	 8
?PMC_Compare_X_I@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Compare_X_I
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
$T3 = -28						; size = 24
_w$ = -4						; size = 4
_u$ = 8							; size = 8
_v$ = 16						; size = 4
?PMC_Compare_L_X@Internal@Core@Math@Palmtree@@YGH_KPAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Compare_L_X

; 262  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	57		 push	 edi
  00007	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000a	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 263  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)

  00020	33 c0		 xor	 eax, eax
  00022	74 20		 je	 SHORT $LN2@PMC_Compar

; 264  :         {
; 265  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 266  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_compare.cpp;PMC_Compare_L_X;1");

  00024	68 00 00 00 00	 push	 OFFSET $SG117667
  00029	68 00 00 00 00	 push	 OFFSET $SG117668
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00031	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Compar:

; 267  :         }
; 268  :         if (v == nullptr)

  00044	83 7d 10 00	 cmp	 DWORD PTR _v$[ebp], 0
  00048	75 20		 jne	 SHORT $LN3@PMC_Compar

; 269  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117671
  0004f	68 00 00 00 00	 push	 OFFSET $SG117672
  00054	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00061	8d 55 cc	 lea	 edx, DWORD PTR $T2[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Compar:

; 270  :         CheckNumber((NUMBER_HEADER*)v);

  0006a	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00073	83 c4 04	 add	 esp, 4

; 271  :         _INT32_T w = -PMC_Compare_X_L_Imp((NUMBER_HEADER*)v, u);

  00076	8b 4d 0c	 mov	 ecx, DWORD PTR _u$[ebp+4]
  00079	51		 push	 ecx
  0007a	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0007d	52		 push	 edx
  0007e	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?PMC_Compare_X_L_Imp@Internal@Core@Math@Palmtree@@YAHPAU__tag_NUMBER_HEADER@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_L_Imp
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008a	f7 d8		 neg	 eax
  0008c	89 45 fc	 mov	 DWORD PTR _w$[ebp], eax

; 272  : #ifdef _DEBUG
; 273  :         if (w != 0 && w != 1 && w != -1)

  0008f	74 2c		 je	 SHORT $LN4@PMC_Compar
  00091	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  00095	74 26		 je	 SHORT $LN4@PMC_Compar
  00097	83 7d fc ff	 cmp	 DWORD PTR _w$[ebp], -1
  0009b	74 20		 je	 SHORT $LN4@PMC_Compar

; 274  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_compare.cpp;PMC_Compare_L_X;2");

  0009d	68 00 00 00 00	 push	 OFFSET $SG117675
  000a2	68 00 00 00 00	 push	 OFFSET $SG117676
  000a7	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000aa	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000af	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000b4	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000b7	51		 push	 ecx
  000b8	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_Compar:

; 275  : #endif
; 276  :         return (w);

  000bd	8b 45 fc	 mov	 eax, DWORD PTR _w$[ebp]
$LN5@PMC_Compar:

; 277  :     }

  000c0	5f		 pop	 edi
  000c1	83 c4 4c	 add	 esp, 76			; 0000004cH
  000c4	3b ec		 cmp	 ebp, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 0c 00	 ret	 12			; 0000000cH
?PMC_Compare_L_X@Internal@Core@Math@Palmtree@@YGH_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Compare_L_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
$T3 = -28						; size = 24
_w$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Compare_I_X@Internal@Core@Math@Palmtree@@YGHIPAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Compare_I_X

; 108  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	57		 push	 edi
  00007	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000a	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 109  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)

  00020	33 c0		 xor	 eax, eax
  00022	74 20		 je	 SHORT $LN2@PMC_Compar

; 110  :         {
; 111  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 112  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_compare.cpp;PMC_Compare_I_X;1");

  00024	68 00 00 00 00	 push	 OFFSET $SG117571
  00029	68 00 00 00 00	 push	 OFFSET $SG117572
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00031	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Compar:

; 113  :         }
; 114  :         if (v == nullptr)

  00044	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00048	75 20		 jne	 SHORT $LN3@PMC_Compar

; 115  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117579
  0004f	68 00 00 00 00	 push	 OFFSET $SG117580
  00054	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00061	8d 55 cc	 lea	 edx, DWORD PTR $T2[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Compar:

; 116  :         CheckNumber((NUMBER_HEADER*)v);

  0006a	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00073	83 c4 04	 add	 esp, 4

; 117  :         _INT32_T w = -PMC_Compare_X_I_Imp((NUMBER_HEADER*)v, u);

  00076	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00079	51		 push	 ecx
  0007a	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  0007d	52		 push	 edx
  0007e	e8 00 00 00 00	 call	 ?PMC_Compare_X_I_Imp@Internal@Core@Math@Palmtree@@YAHPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_I_Imp
  00083	83 c4 08	 add	 esp, 8
  00086	f7 d8		 neg	 eax
  00088	89 45 fc	 mov	 DWORD PTR _w$[ebp], eax

; 118  : #ifdef _DEBUG
; 119  :         if (w != 0 && w != 1 && w != -1)

  0008b	74 2c		 je	 SHORT $LN4@PMC_Compar
  0008d	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  00091	74 26		 je	 SHORT $LN4@PMC_Compar
  00093	83 7d fc ff	 cmp	 DWORD PTR _w$[ebp], -1
  00097	74 20		 je	 SHORT $LN4@PMC_Compar

; 120  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_compare.cpp;PMC_Compare_I_X;2");

  00099	68 00 00 00 00	 push	 OFFSET $SG117583
  0009e	68 00 00 00 00	 push	 OFFSET $SG117584
  000a3	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000a6	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000ab	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000b0	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_Compar:

; 121  : #endif
; 122  :         return (w);

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _w$[ebp]
$LN5@PMC_Compar:

; 123  :     }

  000bc	5f		 pop	 edi
  000bd	83 c4 4c	 add	 esp, 76			; 0000004cH
  000c0	3b ec		 cmp	 ebp, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 08 00	 ret	 8
?PMC_Compare_I_X@Internal@Core@Math@Palmtree@@YGHIPAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Compare_I_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
_feature$ = 8						; size = 4
?Initialize_Compare@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Compare

; 340  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 341  :         return (PMC_STATUS_OK);

  0000d	33 c0		 xor	 eax, eax

; 342  :     }

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?Initialize_Compare@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_compare.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 4
_v$ = 12						; size = 4
_count$ = 16						; size = 4
?Compare_Imp@Internal@Core@Math@Palmtree@@YAHPAI0I@Z PROC ; Palmtree::Math::Core::Internal::Compare_Imp

; 36   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __9F55872E_pmc_compare@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 37   :         u += count;

  0000d	8b 45 10	 mov	 eax, DWORD PTR _count$[ebp]
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00013	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00016	89 55 08	 mov	 DWORD PTR _u$[ebp], edx

; 38   :         v += count;

  00019	8b 45 10	 mov	 eax, DWORD PTR _count$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0001f	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00022	89 55 0c	 mov	 DWORD PTR _v$[ebp], edx
$LN2@Compare_Im:

; 39   :         while (count > 0)

  00025	83 7d 10 00	 cmp	 DWORD PTR _count$[ebp], 0
  00029	76 43		 jbe	 SHORT $LN3@Compare_Im

; 40   :         {
; 41   :             --u;

  0002b	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0002e	83 e8 04	 sub	 eax, 4
  00031	89 45 08	 mov	 DWORD PTR _u$[ebp], eax

; 42   :             --v;

  00034	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00037	83 e9 04	 sub	 ecx, 4
  0003a	89 4d 0c	 mov	 DWORD PTR _v$[ebp], ecx

; 43   :             --count;

  0003d	8b 55 10	 mov	 edx, DWORD PTR _count$[ebp]
  00040	83 ea 01	 sub	 edx, 1
  00043	89 55 10	 mov	 DWORD PTR _count$[ebp], edx

; 44   : 
; 45   :             if (*u > *v)

  00046	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00050	76 09		 jbe	 SHORT $LN4@Compare_Im

; 46   :                 return (1);

  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	eb 17		 jmp	 SHORT $LN1@Compare_Im
  00059	eb 11		 jmp	 SHORT $LN5@Compare_Im
$LN4@Compare_Im:

; 47   :             else if (*u < *v)

  0005b	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0005e	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00061	8b 10		 mov	 edx, DWORD PTR [eax]
  00063	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00065	73 05		 jae	 SHORT $LN5@Compare_Im

; 48   :                 return (-1);

  00067	83 c8 ff	 or	 eax, -1
  0006a	eb 04		 jmp	 SHORT $LN1@Compare_Im
$LN5@Compare_Im:

; 49   :             else
; 50   :             {
; 51   :             }
; 52   :         }

  0006c	eb b7		 jmp	 SHORT $LN2@Compare_Im
$LN3@Compare_Im:

; 53   :         return (0);

  0006e	33 c0		 xor	 eax, eax
$LN1@Compare_Im:

; 54   :     }

  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?Compare_Imp@Internal@Core@Math@Palmtree@@YAHPAI0I@Z ENDP ; Palmtree::Math::Core::Internal::Compare_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT
; _this$ = ecx

; 295  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 296  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 291  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 290  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 291  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 292  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 286  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	68 00 ff ff ff	 push	 -256			; ffffff00H
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 286  :         {

  00053	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00056	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 287  :         }

  0005c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00063	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00069	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00070	59		 pop	 ecx
  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT
; _this$ = ecx

; 124  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 125  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 120  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 119  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 120  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 121  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_param_name$ = 12					; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 115  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _param_name$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	6a fe		 push	 -2			; fffffffeH
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 115  :         {

  00050	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00053	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 116  :         }

  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT
; _this$ = ecx

; 70   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 71   :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 62   :         Exception(const Exception& p) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 63   :         {
; 64   :             _code = p._code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00055	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00058	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 65   :             _message = p._message;

  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00061	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00064	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 66   :             _data = p._data;

  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0006d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00070	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 67   :         }

  00073	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
_data$ = 16						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 55   :         {
; 56   :             _code = code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _code$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 57   :             _message = message;

  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 58   :             _data = data;

  00061	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  00067	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 59   :         }

  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00028	74 0b		 je	 SHORT $LN3@what
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00030	89 55 f8	 mov	 DWORD PTR tv69[ebp], edx
  00033	eb 07		 jmp	 SHORT $LN4@what
$LN3@what:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]

; 92   :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 85   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1exception@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 86   :         __std_exception_destroy(&_Data);

  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 04	 add	 ecx, 4
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004c	83 c4 04	 add	 esp, 4

; 87   :     }

  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00059	59		 pop	 ecx
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1exception@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1exception@std@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0exception@std@@QAE@XZ PROC				; std::exception::exception, COMDAT
; _this$ = ecx

; 50   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0exception@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 49   :         : _Data()

  00040	33 c9		 xor	 ecx, ecx
  00042	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00045	83 c2 04	 add	 edx, 4
  00048	89 0a		 mov	 DWORD PTR [edx], ecx
  0004a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 51   :     }

  0004d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0exception@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0exception@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0exception@std@@QAE@XZ ENDP				; std::exception::exception
END
