; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\dllmain.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__A6DAE95C_dllmain@c DB 01H
msvcjmc	ENDS
PUBLIC	_DllMain@12
PUBLIC	__JustMyCode_Default
EXTRN	_AllocateHeapArea:PROC
EXTRN	_DeallocateHeapArea:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\dllmain.c
_TEXT	SEGMENT
tv64 = -8						; size = 4
_result$ = -4						; size = 4
_hinstDLL$ = 8						; size = 4
_dwReason$ = 12						; size = 4
_lpvReserved$ = 16					; size = 4
_DllMain@12 PROC

; 42   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __A6DAE95C_dllmain@c
	call	@__CheckForDebuggerJustMyCode@4

; 43   : 	BOOL result = TRUE;

	mov	DWORD PTR _result$[ebp], 1

; 44   : 	switch (dwReason)

	mov	eax, DWORD PTR _dwReason$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	SHORT $LN9@DllMain
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN11@DllMain[ecx*4]
$LN4@DllMain:

; 45   : 	{
; 46   :         case DLL_PROCESS_ATTACH: // DLLがプロセスのアドレス空間にマッピングされた。
; 47   :             if (!AllocateHeapArea())

	call	_AllocateHeapArea
	test	eax, eax
	jne	SHORT $LN5@DllMain

; 48   :                 result = FALSE;

	mov	DWORD PTR _result$[ebp], 0
$LN5@DllMain:

; 49   :             break;

	jmp	SHORT $LN2@DllMain
$LN6@DllMain:

; 50   : 
; 51   :         case DLL_THREAD_ATTACH: // スレッドが作成されようとしている。
; 52   :             break;

	jmp	SHORT $LN2@DllMain
$LN7@DllMain:

; 53   : 
; 54   :         case DLL_THREAD_DETACH: // スレッドが破棄されようとしている。
; 55   :             break;

	jmp	SHORT $LN2@DllMain
$LN8@DllMain:

; 56   : 
; 57   :         case DLL_PROCESS_DETACH: // DLLのマッピングが解除されようとしている。
; 58   :             DeallocateHeapArea();

	call	_DeallocateHeapArea

; 59   :             break;

	jmp	SHORT $LN2@DllMain
$LN9@DllMain:

; 60   :         default:
; 61   :             result = FALSE;

	mov	DWORD PTR _result$[ebp], 0
$LN2@DllMain:

; 62   :             break;
; 63   : 	}
; 64   : 	return (result);

	mov	eax, DWORD PTR _result$[ebp]

; 65   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN11@DllMain:
	DD	$LN8@DllMain
	DD	$LN4@DllMain
	DD	$LN6@DllMain
	DD	$LN7@DllMain
_DllMain@12 ENDP
_TEXT	ENDS
END
