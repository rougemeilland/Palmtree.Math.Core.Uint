; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\TEST_op_ParseX.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__630249ED_pmc_uint_debug@h DB 01H
__8843EC3E_test_op_parsex@c DB 01H
msvcjmc	ENDS
PUBLIC	_TEST_PMC_ParseX
PUBLIC	__JustMyCode_Default
EXTRN	_TEST_Assert:PROC
EXTRN	_FormatTestLabel:PROC
EXTRN	_FormatTestMesssage:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?actual_buf@?1??TEST_PMC_ParseX@@9@9 DB 0100H DUP (?)	; `TEST_PMC_ParseX'::`2'::actual_buf
?actual_buf_size@?1??TEST_PMC_ParseX@@9@9 DD 01H DUP (?) ; `TEST_PMC_ParseX'::`2'::actual_buf_size
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
_DATA	SEGMENT
$SG94745 DB	'P', 00H, 'M', 00H, 'C', 00H, '_', 00H, 'T', 00H, 'r', 00H
	DB	'y', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 's', 00H, 'e', 00H, 'n'
	DB	'0', 0a9H, '_0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H
	DB	'_', 01aH, 090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')'
	DB	00H, 00H, 00H
$SG94746 DB	'P', 00H, 'M', 00H, 'C', 00H, '_', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 's', 00H, 'e', 00H, 'X', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG94748 DB	'P', 00H, 'M', 00H, 'C', 00H, '_', 00H, 'T', 00H, 'o', 00H
	DB	'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 'A', 00H, 'r', 00H, 'r'
	DB	00H, 'a', 00H, 'y', 00H, 'n0', 0a9H, '_0^', 0b3H, '0', 0fcH, '0'
	DB	0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH, '0g0o0j0D'
	DB	'0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG94749 DB	'P', 00H, 'M', 00H, 'C', 00H, '_', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 's', 00H, 'e', 00H, 'X', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG94750 DB	0c7H, '0', 0fcH, '0', 0bfH, '0n0', 085H, 'Q', 0b9H, '[L0', 00H
	DB	'N', 0f4H, 081H, 'W0j0D0', 00H, 00H
	ORG $+2
$SG94751 DB	'P', 00H, 'M', 00H, 'C', 00H, '_', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 's', 00H, 'e', 00H, 'X', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H
_DATA	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_debug.h
_TEXT	SEGMENT
_buffer1$ = 8						; size = 4
_count1$ = 12						; size = 4
_buffer2$ = 16						; size = 4
_count2$ = 20						; size = 4
__EQUALS_MEMORY PROC

; 161  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __630249ED_pmc_uint_debug@h
	call	@__CheckForDebuggerJustMyCode@4

; 162  :     if (count1 != count2)

	mov	eax, DWORD PTR _count1$[ebp]
	cmp	eax, DWORD PTR _count2$[ebp]
	je	SHORT $LN2@EQUALS_MEM

; 163  :         return (-1);

	or	eax, -1
	jmp	SHORT $LN1@EQUALS_MEM
$LN2@EQUALS_MEM:

; 164  :     while (count1 > 0)

	cmp	DWORD PTR _count1$[ebp], 0
	jbe	SHORT $LN3@EQUALS_MEM

; 165  :     {
; 166  :         if (*buffer1 != *buffer2)

	mov	ecx, DWORD PTR _buffer1$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _buffer2$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	edx, ecx
	je	SHORT $LN5@EQUALS_MEM

; 167  :             return (-1);

	or	eax, -1
	jmp	SHORT $LN1@EQUALS_MEM
$LN5@EQUALS_MEM:

; 168  :         ++buffer1;

	mov	edx, DWORD PTR _buffer1$[ebp]
	add	edx, 1
	mov	DWORD PTR _buffer1$[ebp], edx

; 169  :         ++buffer2;

	mov	eax, DWORD PTR _buffer2$[ebp]
	add	eax, 1
	mov	DWORD PTR _buffer2$[ebp], eax

; 170  :         --count1;

	mov	ecx, DWORD PTR _count1$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _count1$[ebp], ecx

; 171  :     }

	jmp	SHORT $LN2@EQUALS_MEM
$LN3@EQUALS_MEM:

; 172  :     return (0);

	xor	eax, eax
$LN1@EQUALS_MEM:

; 173  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
__EQUALS_MEMORY ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\test_op_parsex.c
_TEXT	SEGMENT
tv144 = -220						; size = 4
tv129 = -216						; size = 4
tv77 = -212						; size = 4
_opt$ = -204						; size = 176
_x_result$ = -24					; size = 4
_result$ = -20						; size = 4
_x$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_str$ = 20						; size = 4
_styles$ = 24						; size = 4
_desired_result_code$ = 28				; size = 4
_desired_buf$ = 32					; size = 4
_desired_buf_size$ = 36					; size = 4
_TEST_PMC_ParseX PROC

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __8843EC3E_test_op_parsex@c
	call	@__CheckForDebuggerJustMyCode@4

; 34   :     PMC_HANDLE_UINT x;
; 35   :     static unsigned char actual_buf[256];
; 36   :     static size_t actual_buf_size;
; 37   :     PMC_STATUS_CODE result;
; 38   :     PMC_STATUS_CODE x_result;
; 39   :     PMC_NUMBER_FORMAT_INFO opt;
; 40   :     ep->InitializeNumberFormatInfo(&opt);

	mov	esi, esp
	lea	eax, DWORD PTR _opt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 41   :     TEST_Assert(env, FormatTestLabel(L"PMC_ParseX (%d.%d)", no, 1), (x_result = ep->TryParse(str, styles, &opt, &x)) == desired_result_code, FormatTestMesssage(L"PMC_TryParseの復帰コードが期待通りではない(%d)", x_result));

	mov	esi, esp
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	lea	ecx, DWORD PTR _opt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _styles$[ebp]
	push	edx
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _x_result$[ebp], eax
	mov	eax, DWORD PTR _x_result$[ebp]
	cmp	eax, DWORD PTR _desired_result_code$[ebp]
	jne	SHORT $LN5@TEST_PMC_P
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN6@TEST_PMC_P
$LN5@TEST_PMC_P:
	mov	DWORD PTR tv77[ebp], 0
$LN6@TEST_PMC_P:
	mov	ecx, DWORD PTR _x_result$[ebp]
	push	ecx
	push	OFFSET $SG94745
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR tv77[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _no$[ebp]
	push	eax
	push	OFFSET $SG94746
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _env$[ebp]
	push	ecx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 42   :     if (desired_result_code == PMC_STATUS_OK)

	cmp	DWORD PTR _desired_result_code$[ebp], 0
	jne	$LN2@TEST_PMC_P

; 43   :     {
; 44   :         TEST_Assert(env, FormatTestLabel(L"PMC_ParseX (%d.%d)", no, 2), (result = ep->ToByteArray(x,  actual_buf, sizeof(actual_buf), &actual_buf_size)) == PMC_STATUS_OK, FormatTestMesssage(L"PMC_ToByteArrayの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	push	OFFSET ?actual_buf_size@?1??TEST_PMC_ParseX@@9@9
	push	256					; 00000100H
	push	OFFSET ?actual_buf@?1??TEST_PMC_ParseX@@9@9
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN7@TEST_PMC_P
	mov	DWORD PTR tv129[ebp], 1
	jmp	SHORT $LN8@TEST_PMC_P
$LN7@TEST_PMC_P:
	mov	DWORD PTR tv129[ebp], 0
$LN8@TEST_PMC_P:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET $SG94748
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET $SG94749
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 45   :         TEST_Assert(env, FormatTestLabel(L"PMC_ParseX (%d.%d)", no, 3), _EQUALS_MEMORY(actual_buf, actual_buf_size, desired_buf, desired_buf_size) == 0, L"データの内容が一致しない");

	mov	eax, DWORD PTR _desired_buf_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desired_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?actual_buf_size@?1??TEST_PMC_ParseX@@9@9
	push	edx
	push	OFFSET ?actual_buf@?1??TEST_PMC_ParseX@@9@9
	call	__EQUALS_MEMORY
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN9@TEST_PMC_P
	mov	DWORD PTR tv144[ebp], 1
	jmp	SHORT $LN10@TEST_PMC_P
$LN9@TEST_PMC_P:
	mov	DWORD PTR tv144[ebp], 0
$LN10@TEST_PMC_P:
	push	OFFSET $SG94750
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET $SG94751
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H
$LN2@TEST_PMC_P:

; 46   :     }
; 47   :     if (x_result == PMC_STATUS_OK)

	cmp	DWORD PTR _x_result$[ebp], 0
	jne	SHORT $LN1@TEST_PMC_P

; 48   :         ep->Dispose(x);

	mov	esi, esp
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_PMC_P:

; 49   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@TEST_PMC_P
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@TEST_PMC_P:
	DD	2
	DD	$LN13@TEST_PMC_P
$LN13@TEST_PMC_P:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN11@TEST_PMC_P
	DD	-204					; ffffff34H
	DD	176					; 000000b0H
	DD	$LN12@TEST_PMC_P
$LN12@TEST_PMC_P:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN11@TEST_PMC_P:
	DB	120					; 00000078H
	DB	0
_TEST_PMC_ParseX ENDP
_TEXT	ENDS
END
