; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\pmc_memory.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
PUBLIC	?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
PUBLIC	?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA	; Palmtree::Math::Core::Internal::hLocalHeap
PUBLIC	?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
_BSS	SEGMENT
?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A DB 02cH DUP (?) ; Palmtree::Math::Core::Internal::number_zero
?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A DB 02cH DUP (?) ; Palmtree::Math::Core::Internal::number_one
?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA DD 01H DUP (?) ; Palmtree::Math::Core::Internal::hLocalHeap
?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?) ; Palmtree::Math::Core::Internal::mcs
_BSS	ENDS
msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__77F53984_cstddef DB 01H
__188180DA_corecrt_math@h DB 01H
__D23EE329_cstdlib DB 01H
__5ECFF36E_type_traits DB 01H
__331E732B_malloc@h DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__7949CB39_exception DB 01H
__802FEEC0_pmc_exception@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__1AB12E38_pmc_resourceholder@h DB 01H
__746E1CEC_xmmintrin@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__04173AAA_pmc_resourceholder_uint@h DB 01H
__57381C25_pmc_memory@cpp DB 01H
msvcjmc	ENDS
CONST	SEGMENT
$SG117899 DB	0d2H, '0', 0fcH, '0', 0d7H, '0', 0e1H, '0', 0e2H, '0', 0eaH
	DB	'0', 018H, 098H, 0dfH, 'WL0', 0dH, 'N', 0b3H, 08dH, 'W0f0D0~0Y'
	DB	'0', 02H, '0', 00H, 00H
$SG117914 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG117913 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'D', 00H, 'e', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ';', 00H, '1', 00H
	DB	00H, 00H
	ORG $+6
$SG117917 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'D', 00H, 'e', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ';', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG117918 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG117930 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H
	DB	'k', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'L'
	DB	00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ';', 00H, '1', 00H
	DB	00H, 00H
	ORG $+2
$SG117931 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG117934 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H
	DB	'k', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'L'
	DB	00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ';', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG117935 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118081 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H
	DB	'k', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H, 'r'
	DB	00H, ';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118082 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118087 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H
	DB	'k', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H, 'r'
	DB	00H, ';', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG118088 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118111 DB	015H, '_pet', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L0*g', 0e5H
	DB	'wn0$Pg0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG118131 DB	'x', 00H, 00H, 00H
$SG118132 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG118302 DB	0d2H, '0', 0fcH, '0', 0d7H, '0', 0e1H, '0', 0e2H, '0', 0eaH
	DB	'0', 018H, 098H, 0dfH, 'WL0', 0dH, 'N', 0b3H, 08dH, 'W0f0D0~0Y'
	DB	'0', 02H, '0', 00H, 00H
$SG118323 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118322 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i'
	DB	00H, 'n', 00H, 'k', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H
	DB	's', 00H, ';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118346 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118345 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a'
	DB	00H, 'r', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	';', 00H, '1', 00H, 00H, 00H
$SG118364 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	';', 00H, '1', 00H, 00H, 00H
$SG118365 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118375 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118374 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i'
	DB	00H, 'n', 00H, 'k', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'k', 00H, ';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118400 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118399 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a'
	DB	00H, 'r', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118419 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118418 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118429 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118428 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i'
	DB	00H, 'n', 00H, 'k', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'k', 00H, ';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118468 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118467 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H
	DB	'r', 00H, ';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118478 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118477 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i'
	DB	00H, 'n', 00H, 'k', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'b', 00H
	DB	'e', 00H, 'r', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG118507 DB	0e1H, '0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH
	DB	'Nte', 08H, 'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0'
	DB	00H, 00H
$SG118506 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, ':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i'
	DB	00H, 'n', 00H, 'k', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'k', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'b'
	DB	00H, 'e', 00H, 'r', 00H, ';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118533 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG118532 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'd', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H
	DB	'y', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ';', 00H, '1'
	DB	00H, 00H, 00H
$SG118536 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'd', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H
	DB	'y', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ';', 00H, '2'
	DB	00H, 00H, 00H
$SG118537 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG118541 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG118540 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'd', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H
	DB	'y', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ';', 00H, '3'
	DB	00H, 00H, 00H
CONST	ENDS
PUBLIC	??0exception@std@@QAE@XZ			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ ; Palmtree::Math::Core::Internal::Exception::GetStatusCode
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
PUBLIC	??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
PUBLIC	??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentException::~ArgumentException
PUBLIC	??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentException::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
PUBLIC	??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
PUBLIC	??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::~NotEnoughMemoryException
PUBLIC	??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
PUBLIC	??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
PUBLIC	??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::BadBufferException::~BadBufferException
PUBLIC	??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::BadBufferException::`scalar deleting destructor'
PUBLIC	?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ ; Palmtree::Math::Core::Internal::AllocateHeapArea
PUBLIC	?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::DeallocateHeapArea
PUBLIC	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
PUBLIC	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
PUBLIC	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
PUBLIC	?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Memory
PUBLIC	?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Dispose
PUBLIC	?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I
PUBLIC	?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Clone_X
PUBLIC	?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize
PUBLIC	??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ	; Palmtree::Math::Core::Internal::Lock::Lock
PUBLIC	??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ	; Palmtree::Math::Core::Internal::Lock::~Lock
PUBLIC	??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
PUBLIC	??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
PUBLIC	?Link@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXPAV123456@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Link
PUBLIC	?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink
PUBLIC	?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next
PUBLIC	?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Clear
PUBLIC	?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Check
PUBLIC	??_G__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::__RootTag
PUBLIC	??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
PUBLIC	?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::EqualsBufferAddress
PUBLIC	?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::Destruct
PUBLIC	??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`scalar deleting destructor'
PUBLIC	??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::ResourceHolder
PUBLIC	??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
PUBLIC	?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag
PUBLIC	?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
PUBLIC	??_GResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolder::`scalar deleting destructor'
PUBLIC	??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::__GenericChainBufferTag
PUBLIC	??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::~__GenericChainBufferTag
PUBLIC	?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::EqualsBufferAddress
PUBLIC	?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::Destruct
PUBLIC	??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`scalar deleting destructor'
PUBLIC	??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::____UNIT_TYPE_Array_ChainBufferTag
PUBLIC	??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::~____UNIT_TYPE_Array_ChainBufferTag
PUBLIC	?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::EqualsBufferAddress
PUBLIC	?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Clear
PUBLIC	?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Check
PUBLIC	?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Destruct
PUBLIC	??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::__StringChainBufferTag
PUBLIC	??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::~__StringChainBufferTag
PUBLIC	?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::EqualsBufferAddress
PUBLIC	?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Clear
PUBLIC	?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Check
PUBLIC	?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Destruct
PUBLIC	??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::__DynamicNumberChainBufferTag
PUBLIC	??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::~__DynamicNumberChainBufferTag
PUBLIC	?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::EqualsBufferAddress
PUBLIC	?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Check
PUBLIC	?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Destruct
PUBLIC	??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::__NumberHandleHookingChainBufferTag
PUBLIC	??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::~__NumberHandleHookingChainBufferTag
PUBLIC	?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::EqualsBufferAddress
PUBLIC	?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Check
PUBLIC	?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Destruct
PUBLIC	??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::__StaticNumberChainBufferTag
PUBLIC	??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::~__StaticNumberChainBufferTag
PUBLIC	?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::EqualsBufferAddress
PUBLIC	?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Check
PUBLIC	?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Destruct
PUBLIC	??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`scalar deleting destructor'
PUBLIC	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
PUBLIC	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
PUBLIC	?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBytes
PUBLIC	?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBytes
PUBLIC	?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBytes
PUBLIC	?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
PUBLIC	?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock
PUBLIC	?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
PUBLIC	?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
PUBLIC	?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBlock
PUBLIC	?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
PUBLIC	?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearString
PUBLIC	?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
PUBLIC	?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckString
PUBLIC	?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkString
PUBLIC	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
PUBLIC	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
PUBLIC	?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
PUBLIC	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
PUBLIC	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
PUBLIC	?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber
PUBLIC	?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DetatchStaticNumber
PUBLIC	?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber
PUBLIC	??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`scalar deleting destructor'
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentException::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::BadBufferException::`vftable'
PUBLIC	??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`vftable'
PUBLIC	??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`vftable'
PUBLIC	??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::`vftable'
PUBLIC	__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_1IM@LGDAALAB@?$AAp?$AAm?$AAc?$AA_?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAh?$AAo?$AAl@ ; `string'
PUBLIC	??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ ; `string'
PUBLIC	??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`vftable'
PUBLIC	??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`vftable'
PUBLIC	??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`vftable'
PUBLIC	??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`vftable'
PUBLIC	??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`vftable'
PUBLIC	??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`vftable'
PUBLIC	??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`vftable'
PUBLIC	__TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	__TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVBadBufferException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::BadBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z28
PUBLIC	__TI2?AVArgumentException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Complete Object Locator'
PUBLIC	??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BadBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3BadBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BadBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BadBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder `RTTI Type Descriptor'
PUBLIC	??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag `RTTI Type Descriptor'
PUBLIC	??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT `RTTI Type Descriptor'
PUBLIC	??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__HeapCreate@12:PROC
EXTRN	__imp__HeapDestroy@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__HeapLock@4:PROC
EXTRN	__imp__HeapUnlock@4:PROC
EXTRN	__imp__HeapWalk@8:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentException::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_ENotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	??_EBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::BadBufferException::`vector deleting destructor'
EXTRN	??_E__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`vector deleting destructor'
EXTRN	??_E__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`vector deleting destructor'
EXTRN	??_EResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolder::`vector deleting destructor'
EXTRN	??_E__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`vector deleting destructor'
EXTRN	??_E____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`vector deleting destructor'
EXTRN	??_E__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`vector deleting destructor'
EXTRN	??_E__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`vector deleting destructor'
EXTRN	??_E__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`vector deleting destructor'
EXTRN	??_E__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`vector deleting destructor'
EXTRN	??_EResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`vector deleting destructor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Inte'
	DB	'rnal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__NumberHandleHookingChainBufferTag@ResourceHolderUI'
	DB	'NT@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Int'
	DB	'ernal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__StringChainBufferTag@ResourceHolderUINT@Internal@C'
	DB	'ore@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUIN'
	DB	'T@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@'
	DB	'Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree'
	DB	'@@', 00H
data$r	ENDS
;	COMDAT ??_R4__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVResourceHolder@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ResourceHolder@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BadBufferException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2BadBufferException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@BadBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3BadBufferException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4BadBufferException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4BadBufferException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z28
xdata$x	SEGMENT
__CT??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z28 DD 00H
	DD	FLAT:??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::BadBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBadBufferException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVBadBufferException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVBadBufferException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z28
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVBadBufferException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree'
	DB	'@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`vftable'
	DD	FLAT:??_EResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`vftable'
	DD	FLAT:??_E__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`vftable'
	DD	FLAT:??_E__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`vftable'
	DD	FLAT:??_E__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`vftable'
	DD	FLAT:??_E__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`vftable'
	DD	FLAT:??_E____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`vftable'
	DD	FLAT:??_E__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
CONST	SEGMENT
??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ DB 088H
	DB	'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H, '0k00RT', 090H
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@LGDAALAB@?$AAp?$AAm?$AAc?$AA_?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAh?$AAo?$AAl@
CONST	SEGMENT
??_C@_1IM@LGDAALAB@?$AAp?$AAm?$AAc?$AA_?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAh?$AAo?$AAl@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'r', 00H, 'e', 00H, 's', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'h', 00H, 'o'
	DB	00H, 'l', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'h', 00H
	DB	';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, ':', 00H, ':', 00H, '_', 00H, '_', 00H, 'R'
	DB	00H, 'o', 00H, 'o', 00H, 't', 00H, 'T', 00H, 'a', 00H, 'g', 00H
	DB	':', 00H, ':', 00H, 'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, 's', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 's', 00H, ';', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT __CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::`vftable'
	DD	FLAT:??_EResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`vftable'
	DD	FLAT:??_E__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`vftable'
	DD	FLAT:??_E__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4BadBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::BadBufferException::`vftable'
	DD	FLAT:??_EBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DD	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`vftable'
	DD	FLAT:??_ENotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DD	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentException::`vftable'
	DD	FLAT:??_EArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DD	FLAT:??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ$0
__ehfuncinfo$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ$0
__ehfuncinfo$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$0
__unwindtable$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__unwindtable$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__unwindtable$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__unwindtable$?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__unwindtable$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__unwindtable$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0
__unwindtable$?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0
__unwindtable$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0
__unwindtable$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0
__unwindtable$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0
__unwindtable$?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0
__unwindtable$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0
__unwindtable$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0
__unwindtable$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z$0
__unwindtable$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z$0
__unwindtable$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__unwindtable$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ$0
__unwindtable$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__unwindtable$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0
__unwindtable$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__unwindtable$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0
__unwindtable$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__unwindtable$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0
__unwindtable$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__unwindtable$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z$0
__unwindtable$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__unwindtable$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z$0
__unwindtable$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__unwindtable$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z$0
__unwindtable$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$0
__unwindtable$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$1
__unwindtable$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$1
__unwindtable$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$1
__unwindtable$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$1
__unwindtable$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$1
__unwindtable$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$1
__catchsym$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$3 DD 09H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	0ffffffd0H
	DD	FLAT:__catch$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$0
__tryblocktable$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$3
__unwindtable$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
__ehfuncinfo$?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0
__ehfuncinfo$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0
__ehfuncinfo$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1exception@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0exception@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_is_allocated$1 = -44					; size = 4
_Entry$ = -36						; size = 28
_LastError$ = -4					; size = 4
_size$ = 8						; size = 4
?GetAllocatedMemorySize_Imp@Internal@Core@Math@Palmtree@@YAHPA_K@Z PROC ; Palmtree::Math::Core::Internal::GetAllocatedMemorySize_Imp

; 980  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 981  :         *size = 0;

  00021	8b 45 08	 mov	 eax, DWORD PTR _size$[ebp]
  00024	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002a	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 982  :         DWORD LastError;
; 983  :         PROCESS_HEAP_ENTRY Entry;
; 984  :         Entry.lpData = NULL;

  00031	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _Entry$[ebp], 0
$LN2@GetAllocat:

; 985  :         while (HeapWalk(hLocalHeap, &Entry))

  00038	8b f4		 mov	 esi, esp
  0003a	8d 4d dc	 lea	 ecx, DWORD PTR _Entry$[ebp]
  0003d	51		 push	 ecx
  0003e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00044	52		 push	 edx
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapWalk@8
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	85 c0		 test	 eax, eax
  00054	74 34		 je	 SHORT $LN3@GetAllocat

; 986  :         {
; 987  :             BOOL is_allocated = FALSE;

  00056	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _is_allocated$1[ebp], 0

; 988  :             if ((Entry.wFlags & PROCESS_HEAP_ENTRY_BUSY) != 0)

  0005d	0f b7 45 e6	 movzx	 eax, WORD PTR _Entry$[ebp+10]
  00061	83 e0 04	 and	 eax, 4
  00064	74 07		 je	 SHORT $LN5@GetAllocat

; 989  :             {
; 990  :                 //_tprintf(TEXT("Allocated block"));
; 991  :                 is_allocated = TRUE;

  00066	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR _is_allocated$1[ebp], 1
$LN5@GetAllocat:

; 992  : 
; 993  :                 if ((Entry.wFlags & PROCESS_HEAP_ENTRY_MOVEABLE) != 0)
; 994  :                 {
; 995  :                     //_tprintf(TEXT(", movable with HANDLE %#p"), Entry.Block.hMem);
; 996  :                 }
; 997  : 
; 998  :                 if ((Entry.wFlags & PROCESS_HEAP_ENTRY_DDESHARE) != 0)
; 999  :                 {
; 1000 :                     //_tprintf(TEXT(", DDESHARE"));
; 1001 :                 }
; 1002 :             }
; 1003 :             else if ((Entry.wFlags & PROCESS_HEAP_REGION) != 0)
; 1004 :             {
; 1005 :                 //_tprintf(TEXT("Region\n  %d bytes committed\n") \
; 1006 :                 //    TEXT("  %d bytes uncommitted\n  First block address: %#p\n") \
; 1007 :                 //    TEXT("  Last block address: %#p\n"),
; 1008 :                 //    Entry.Region.dwCommittedSize,
; 1009 :                 //    Entry.Region.dwUnCommittedSize,
; 1010 :                 //    Entry.Region.lpFirstBlock,
; 1011 :                 //    Entry.Region.lpLastBlock);
; 1012 :             }
; 1013 :             else if ((Entry.wFlags & PROCESS_HEAP_UNCOMMITTED_RANGE) != 0)
; 1014 :             {
; 1015 :                 //_tprintf(TEXT("Uncommitted range\n"));
; 1016 :             }
; 1017 :             else
; 1018 :             {
; 1019 :                 //_tprintf(TEXT("Block\n"));
; 1020 :             }
; 1021 : 
; 1022 :             //_tprintf(TEXT("  Data portion begins at: %#p\n  Size: %d bytes\n") \
; 1023 :             //    TEXT("  Overhead: %d bytes\n  Region index: %d\n\n"),
; 1024 :             //    Entry.lpData,
; 1025 :             //    Entry.cbData,
; 1026 :             //    Entry.cbOverhead,
; 1027 :             //    Entry.iRegionIndex);
; 1028 :             if (is_allocated)

  0006d	83 7d d4 00	 cmp	 DWORD PTR _is_allocated$1[ebp], 0
  00071	74 15		 je	 SHORT $LN12@GetAllocat

; 1029 :                 *size += Entry.cbData;

  00073	8b 55 e0	 mov	 edx, DWORD PTR _Entry$[ebp+4]
  00076	33 c0		 xor	 eax, eax
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _size$[ebp]
  0007b	03 11		 add	 edx, DWORD PTR [ecx]
  0007d	13 41 04	 adc	 eax, DWORD PTR [ecx+4]
  00080	8b 4d 08	 mov	 ecx, DWORD PTR _size$[ebp]
  00083	89 11		 mov	 DWORD PTR [ecx], edx
  00085	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN12@GetAllocat:

; 1030 :         }

  00088	eb ae		 jmp	 SHORT $LN2@GetAllocat
$LN3@GetAllocat:

; 1031 :         LastError = GetLastError();

  0008a	8b f4		 mov	 esi, esp
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00092	3b f4		 cmp	 esi, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	89 45 fc	 mov	 DWORD PTR _LastError$[ebp], eax

; 1032 :         if (LastError != ERROR_NO_MORE_ITEMS)

  0009c	81 7d fc 03 01
	00 00		 cmp	 DWORD PTR _LastError$[ebp], 259 ; 00000103H
  000a3	74 04		 je	 SHORT $LN13@GetAllocat

; 1033 :         {
; 1034 :             //_tprintf(TEXT("HeapWalk failed with LastError %d.\n"), LastError);
; 1035 :             return (FALSE);

  000a5	33 c0		 xor	 eax, eax
  000a7	eb 05		 jmp	 SHORT $LN1@GetAllocat
$LN13@GetAllocat:

; 1036 :         }
; 1037 :         return (TRUE);

  000a9	b8 01 00 00 00	 mov	 eax, 1
$LN1@GetAllocat:

; 1038 :     }

  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN17@GetAllocat
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	83 c4 2c	 add	 esp, 44			; 0000002cH
  000c4	3b ec		 cmp	 ebp, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
  000cf	90		 npad	 1
$LN17@GetAllocat:
  000d0	01 00 00 00	 DD	 1
  000d4	00 00 00 00	 DD	 $LN16@GetAllocat
$LN16@GetAllocat:
  000d8	dc ff ff ff	 DD	 -36			; ffffffdcH
  000dc	1c 00 00 00	 DD	 28			; 0000001cH
  000e0	00 00 00 00	 DD	 $LN15@GetAllocat
$LN15@GetAllocat:
  000e4	45		 DB	 69			; 00000045H
  000e5	6e		 DB	 110			; 0000006eH
  000e6	74		 DB	 116			; 00000074H
  000e7	72		 DB	 114			; 00000072H
  000e8	79		 DB	 121			; 00000079H
  000e9	00		 DB	 0
?GetAllocatedMemorySize_Imp@Internal@Core@Math@Palmtree@@YAHPA_K@Z ENDP ; Palmtree::Math::Core::Internal::GetAllocatedMemorySize_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_bit_count$ = -4					; size = 4
_p$ = 8							; size = 4
_word_count$ = 12					; size = 4
?GetTrailingZeroBitCount@Internal@Core@Math@Palmtree@@YAIPAII@Z PROC ; Palmtree::Math::Core::Internal::GetTrailingZeroBitCount

; 460  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 461  :         __UNIT_TYPE bit_count = 0;

  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _bit_count$[ebp], 0
$LN2@GetTrailin:

; 462  :         while (word_count > 0)

  0001c	83 7d 0c 00	 cmp	 DWORD PTR _word_count$[ebp], 0
  00020	76 38		 jbe	 SHORT $LN3@GetTrailin

; 463  :         {
; 464  :             --word_count;

  00022	8b 45 0c	 mov	 eax, DWORD PTR _word_count$[ebp]
  00025	83 e8 01	 sub	 eax, 1
  00028	89 45 0c	 mov	 DWORD PTR _word_count$[ebp], eax

; 465  :             if (*p != 0)

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0002e	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00031	74 13		 je	 SHORT $LN4@GetTrailin

; 466  :                 return (bit_count + _TZCNT_ALT_UNIT(*p));

  00033	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00036	8b 02		 mov	 eax, DWORD PTR [edx]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  0003e	83 c4 04	 add	 esp, 4
  00041	03 45 fc	 add	 eax, DWORD PTR _bit_count$[ebp]
  00044	eb 16		 jmp	 SHORT $LN1@GetTrailin
$LN4@GetTrailin:

; 467  :             bit_count += __UNIT_TYPE_BIT_COUNT;

  00046	8b 4d fc	 mov	 ecx, DWORD PTR _bit_count$[ebp]
  00049	83 c1 20	 add	 ecx, 32			; 00000020H
  0004c	89 4d fc	 mov	 DWORD PTR _bit_count$[ebp], ecx

; 468  :             ++p;

  0004f	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00052	83 c2 04	 add	 edx, 4
  00055	89 55 08	 mov	 DWORD PTR _p$[ebp], edx

; 469  :         }

  00058	eb c2		 jmp	 SHORT $LN2@GetTrailin
$LN3@GetTrailin:

; 470  :         // このルートには到達しないはず
; 471  :         return (0);

  0005a	33 c0		 xor	 eax, eax
$LN1@GetTrailin:

; 472  :     }

  0005c	83 c4 04	 add	 esp, 4
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
?GetTrailingZeroBitCount@Internal@Core@Math@Palmtree@@YAIPAII@Z ENDP ; Palmtree::Math::Core::Internal::GetTrailingZeroBitCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_p$ = 8							; size = 4
_word_count$ = 12					; size = 4
_effective_word_count$ = 16				; size = 4
?GetEffectiveBitLength@Internal@Core@Math@Palmtree@@YAIPAII0@Z PROC ; Palmtree::Math::Core::Internal::GetEffectiveBitLength

; 438  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 439  :         if (p == nullptr)

  0000e	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00012	75 0d		 jne	 SHORT $LN4@GetEffecti

; 440  :         {
; 441  :             *effective_word_count = 0;

  00014	8b 45 10	 mov	 eax, DWORD PTR _effective_word_count$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 442  :             return (0);

  0001d	33 c0		 xor	 eax, eax
  0001f	eb 5b		 jmp	 SHORT $LN1@GetEffecti
$LN4@GetEffecti:

; 443  :         }
; 444  :         p += word_count;

  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _word_count$[ebp]
  00024	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00027	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  0002a	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
$LN2@GetEffecti:

; 445  :         while (word_count != 0)

  0002d	83 7d 0c 00	 cmp	 DWORD PTR _word_count$[ebp], 0
  00031	74 3e		 je	 SHORT $LN3@GetEffecti

; 446  :         {
; 447  :             --p;

  00033	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00036	83 e9 04	 sub	 ecx, 4
  00039	89 4d 08	 mov	 DWORD PTR _p$[ebp], ecx

; 448  :             if (*p != 0)

  0003c	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0003f	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00042	74 22		 je	 SHORT $LN5@GetEffecti

; 449  :             {
; 450  :                 *effective_word_count = word_count;

  00044	8b 45 10	 mov	 eax, DWORD PTR _effective_word_count$[ebp]
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _word_count$[ebp]
  0004a	89 08		 mov	 DWORD PTR [eax], ecx

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  0004c	8b 75 0c	 mov	 esi, DWORD PTR _word_count$[ebp]
  0004f	c1 e6 05	 shl	 esi, 5
  00052	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00055	8b 02		 mov	 eax, DWORD PTR [edx]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 __LZCNT_ALT_UNIT
  0005d	83 c4 04	 add	 esp, 4
  00060	2b f0		 sub	 esi, eax
  00062	8b c6		 mov	 eax, esi
  00064	eb 16		 jmp	 SHORT $LN1@GetEffecti
$LN5@GetEffecti:

; 452  :             }
; 453  :             --word_count;

  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _word_count$[ebp]
  00069	83 e9 01	 sub	 ecx, 1
  0006c	89 4d 0c	 mov	 DWORD PTR _word_count$[ebp], ecx

; 454  :         }

  0006f	eb bc		 jmp	 SHORT $LN2@GetEffecti
$LN3@GetEffecti:

; 455  :         *effective_word_count = 0;

  00071	8b 55 10	 mov	 edx, DWORD PTR _effective_word_count$[ebp]
  00074	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 456  :         return (0);

  0007a	33 c0		 xor	 eax, eax
$LN1@GetEffecti:

; 457  :     }

  0007c	5e		 pop	 esi
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?GetEffectiveBitLength@Internal@Core@Math@Palmtree@@YAIPAII0@Z ENDP ; Palmtree::Math::Core::Internal::GetEffectiveBitLength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_p$ = 8							; size = 4
?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::DeallocateNumber

; 423  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 424  :         if (p != nullptr && !p->IS_STATIC)

  0000e	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00012	74 3f		 je	 SHORT $LN1@Deallocate
  00014	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00017	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0001a	83 e1 01	 and	 ecx, 1
  0001d	75 34		 jne	 SHORT $LN1@Deallocate

; 425  :         {
; 426  :             CleanUpNumber(p);

  0001f	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?CleanUpNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CleanUpNumber
  00028	83 c4 04	 add	 esp, 4

; 427  :             FillNumberHeader(p);

  0002b	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?FillNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::FillNumberHeader
  00034	83 c4 04	 add	 esp, 4

; 428  :             HeapFree(hLocalHeap, 0, p);

  00037	8b f4		 mov	 esi, esp
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0003c	51		 push	 ecx
  0003d	6a 00		 push	 0
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Deallocate:

; 429  : #ifdef _LOG_MEMORY
; 430  :             {
; 431  :                 wprintf(L"0x%08lx: delete header 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)p);
; 432  :             }
; 433  : #endif
; 434  :         }
; 435  :     }

  00053	5e		 pop	 esi
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::DeallocateNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_p$ = 8							; size = 4
?DetatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::DetatchNumber

; 417  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 418  :         if (p != nullptr && p->IS_STATIC)

  0000d	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00011	74 17		 je	 SHORT $LN1@DetatchNum
  00013	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00016	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00019	83 e1 01	 and	 ecx, 1
  0001c	74 0c		 je	 SHORT $LN1@DetatchNum

; 419  :             CleanUpNumber(p);

  0001e	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00021	52		 push	 edx
  00022	e8 00 00 00 00	 call	 ?CleanUpNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CleanUpNumber
  00027	83 c4 04	 add	 esp, 4
$LN1@DetatchNum:

; 420  :     }

  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?DetatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::DetatchNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -44						; size = 4
_p$ = -40						; size = 4
_root$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_bit_count$ = 8						; size = 4
?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z PROC ; Palmtree::Math::Core::Internal::AllocateNumber

; 407  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0001c	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001f	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00022	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00025	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00028	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00036	33 c5		 xor	 eax, ebp
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00047	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 408  :         ResourceHolderUINT root;

  0004c	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  0004f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 409  :         NUMBER_HEADER* p = (NUMBER_HEADER*)root.AllocateBytes(sizeof(NUMBER_HEADER));

  0005b	6a 2c		 push	 44			; 0000002cH
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00060	e8 00 00 00 00	 call	 ?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBytes
  00065	89 45 d8	 mov	 DWORD PTR _p$[ebp], eax

; 410  :         InitializeNumber(p, bit_count);

  00068	8b 45 08	 mov	 eax, DWORD PTR _bit_count$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d d8	 mov	 ecx, DWORD PTR _p$[ebp]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::InitializeNumber
  00075	83 c4 08	 add	 esp, 8

; 411  :         p->IS_STATIC = false;

  00078	8b 55 d8	 mov	 edx, DWORD PTR _p$[ebp]
  0007b	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0007e	83 e0 fe	 and	 eax, -2			; fffffffeH
  00081	8b 4d d8	 mov	 ecx, DWORD PTR _p$[ebp]
  00084	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 412  :         root.UnlinkBytes((void*)p);

  00087	8b 55 d8	 mov	 edx, DWORD PTR _p$[ebp]
  0008a	52		 push	 edx
  0008b	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  0008e	e8 00 00 00 00	 call	 ?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBytes

; 413  :         return (p);

  00093	8b 45 d8	 mov	 eax, DWORD PTR _p$[ebp]
  00096	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00099	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a0	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000a3	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000a8	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]

; 414  :     }

  000ab	52		 push	 edx
  000ac	8b cd		 mov	 ecx, ebp
  000ae	50		 push	 eax
  000af	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@AllocateNu
  000b5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ba	58		 pop	 eax
  000bb	5a		 pop	 edx
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	83 c4 2c	 add	 esp, 44			; 0000002cH
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
  000d5	0f 1f 00	 npad	 3
$LN7@AllocateNu:
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN6@AllocateNu
$LN6@AllocateNu:
  000e0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000e4	10 00 00 00	 DD	 16			; 00000010H
  000e8	00 00 00 00	 DD	 $LN4@AllocateNu
$LN4@AllocateNu:
  000ec	72		 DB	 114			; 00000072H
  000ed	6f		 DB	 111			; 0000006fH
  000ee	6f		 DB	 111			; 0000006fH
  000ef	74		 DB	 116			; 00000074H
  000f0	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::AllocateNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_p$ = 8							; size = 4
_bit_count$ = 12					; size = 4
?AttatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z PROC ; Palmtree::Math::Core::Internal::AttatchNumber

; 401  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 402  :         InitializeNumber(p, bit_count);

  0000d	8b 45 0c	 mov	 eax, DWORD PTR _bit_count$[ebp]
  00010	50		 push	 eax
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::InitializeNumber
  0001a	83 c4 08	 add	 esp, 8

; 403  :         p->IS_STATIC = true;

  0001d	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00020	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00023	83 c8 01	 or	 eax, 1
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00029	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 404  :     }

  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?AttatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::AttatchNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_block_check_code$1 = -12				; size = 4
_block_count$2 = -8					; size = 4
_block$3 = -4						; size = 4
_p$ = 8							; size = 4
?CleanUpNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::CleanUpNumber

; 385  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 386  :         if (p->BLOCK != nullptr)

  00025	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00028	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  0002c	74 39		 je	 SHORT $LN1@CleanUpNum

; 387  :         {
; 388  :             __UNIT_TYPE* block = p->BLOCK;

  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00031	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00034	89 55 fc	 mov	 DWORD PTR _block$3[ebp], edx

; 389  :             __UNIT_TYPE block_count = p->BLOCK_COUNT;

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0003d	89 4d f8	 mov	 DWORD PTR _block_count$2[ebp], ecx

; 390  :             __UNIT_TYPE block_check_code = p->BLOCK_CHECK_CODE;

  00040	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00043	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00046	89 45 f4	 mov	 DWORD PTR _block_check_code$1[ebp], eax

; 391  :             p->BLOCK = nullptr;

  00049	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0004c	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 392  : #ifdef _LOG_MEMORY
; 393  :             {
; 394  :                 wprintf(L"0x%08lx: unlink 0x%016llx->0x%016llx\n", GetCurrentThreadId(), (unsigned long long)p, (unsigned long long)(block - 1));
; 395  :             }
; 396  : #endif
; 397  :             DeallocateBlock(block, block_count, block_check_code);        }

  00053	8b 55 f4	 mov	 edx, DWORD PTR _block_check_code$1[ebp]
  00056	52		 push	 edx
  00057	8b 45 f8	 mov	 eax, DWORD PTR _block_count$2[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _block$3[ebp]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ?DeallocateBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::DeallocateBlock
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@CleanUpNum:

; 398  :     }

  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?CleanUpNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::CleanUpNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_block$1 = -28						; size = 4
_check_code$2 = -20					; size = 4
_word_count$3 = -8					; size = 4
_p$ = 8							; size = 4
_bit_count$ = 12					; size = 4
?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z PROC ; Palmtree::Math::Core::Internal::InitializeNumber

; 350  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00025	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 351  :         if (bit_count > 0)

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _bit_count$[ebp], 0
  0002e	76 6c		 jbe	 SHORT $LN2@Initialize

; 352  :         {
; 353  :             __UNIT_TYPE word_count;
; 354  :             __UNIT_TYPE check_code;
; 355  :             __UNIT_TYPE* block = AllocateBlock(bit_count, &word_count, &check_code);

  00030	8d 45 ec	 lea	 eax, DWORD PTR _check_code$2[ebp]
  00033	50		 push	 eax
  00034	8d 4d f8	 lea	 ecx, DWORD PTR _word_count$3[ebp]
  00037	51		 push	 ecx
  00038	8b 55 0c	 mov	 edx, DWORD PTR _bit_count$[ebp]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z ; Palmtree::Math::Core::Internal::AllocateBlock
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
  00044	89 45 e4	 mov	 DWORD PTR _block$1[ebp], eax

; 356  :             ClearNumberHeader(p);

  00047	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?ClearNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::ClearNumberHeader
  00050	83 c4 04	 add	 esp, 4

; 357  :             p->SIGNATURE1 = PMC_SIGNATURE;

  00053	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00056	c7 41 08 70 4d
	63 49		 mov	 DWORD PTR [ecx+8], 1231244656 ; 49634d70H

; 358  :             p->SIGNATURE2 = PMC_UINT_SIGNATURE;

  0005d	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00060	c7 42 0c 55 69
	6e 54		 mov	 DWORD PTR [edx+12], 1416522069 ; 546e6955H

; 359  :             p->UNIT_BIT_COUNT = bit_count;

  00067	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0006a	8b 4d 0c	 mov	 ecx, DWORD PTR _bit_count$[ebp]
  0006d	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 360  :             p->BLOCK_COUNT = word_count;

  00070	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00073	8b 45 f8	 mov	 eax, DWORD PTR _word_count$3[ebp]
  00076	89 42 20	 mov	 DWORD PTR [edx+32], eax

; 361  :             p->BLOCK = block;

  00079	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0007c	8b 55 e4	 mov	 edx, DWORD PTR _block$1[ebp]
  0007f	89 51 24	 mov	 DWORD PTR [ecx+36], edx

; 362  :             p->BLOCK_CHECK_CODE = check_code;

  00082	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00085	8b 4d ec	 mov	 ecx, DWORD PTR _check_code$2[ebp]
  00088	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 363  :             p->IS_COMMITTED = false;

  0008b	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0008e	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00091	83 e0 fd	 and	 eax, -3			; fffffffdH
  00094	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00097	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 364  : #ifdef _LOG_MEMORY
; 365  :             {
; 366  :                 wprintf(L"0x%08lx: link 0x%016llx->0x%016llx\n", GetCurrentThreadId(), (unsigned long long)p, (unsigned long long)(block - 1));
; 367  :             }
; 368  : #endif
; 369  :         }
; 370  :         else

  0009a	eb 57		 jmp	 SHORT $LN1@Initialize
$LN2@Initialize:

; 371  :         {
; 372  :             // bit_count に 0 が与えられるのは、数値が 0 の場合。
; 373  :             ClearNumberHeader(p);

  0009c	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 ?ClearNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::ClearNumberHeader
  000a5	83 c4 04	 add	 esp, 4

; 374  :             p->SIGNATURE1 = PMC_SIGNATURE;

  000a8	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000ab	c7 40 08 70 4d
	63 49		 mov	 DWORD PTR [eax+8], 1231244656 ; 49634d70H

; 375  :             p->SIGNATURE2 = PMC_UINT_SIGNATURE;

  000b2	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000b5	c7 41 0c 55 69
	6e 54		 mov	 DWORD PTR [ecx+12], 1416522069 ; 546e6955H

; 376  :             p->UNIT_BIT_COUNT = 0;

  000bc	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000bf	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0

; 377  :             p->BLOCK_COUNT = 0;

  000c6	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000c9	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 378  :             p->BLOCK = nullptr;

  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000d3	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 379  :             p->BLOCK_CHECK_CODE = 0;

  000da	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000dd	c7 42 28 00 00
	00 00		 mov	 DWORD PTR [edx+40], 0

; 380  :             p->IS_COMMITTED = false;

  000e4	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000e7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000ea	83 e1 fd	 and	 ecx, -3			; fffffffdH
  000ed	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000f0	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
$LN1@Initialize:

; 381  :         }
; 382  :     }

  000f3	52		 push	 edx
  000f4	8b cd		 mov	 ecx, ebp
  000f6	50		 push	 eax
  000f7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@Initialize
  000fd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00102	58		 pop	 eax
  00103	5a		 pop	 edx
  00104	83 c4 1c	 add	 esp, 28			; 0000001cH
  00107	3b ec		 cmp	 ebp, esp
  00109	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c3		 ret	 0
  00112	66 90		 npad	 2
$LN8@Initialize:
  00114	02 00 00 00	 DD	 2
  00118	00 00 00 00	 DD	 $LN7@Initialize
$LN7@Initialize:
  0011c	f8 ff ff ff	 DD	 -8			; fffffff8H
  00120	04 00 00 00	 DD	 4
  00124	00 00 00 00	 DD	 $LN5@Initialize
  00128	ec ff ff ff	 DD	 -20			; ffffffecH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN6@Initialize
$LN6@Initialize:
  00134	63		 DB	 99			; 00000063H
  00135	68		 DB	 104			; 00000068H
  00136	65		 DB	 101			; 00000065H
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	5f		 DB	 95			; 0000005fH
  0013a	63		 DB	 99			; 00000063H
  0013b	6f		 DB	 111			; 0000006fH
  0013c	64		 DB	 100			; 00000064H
  0013d	65		 DB	 101			; 00000065H
  0013e	00		 DB	 0
$LN5@Initialize:
  0013f	77		 DB	 119			; 00000077H
  00140	6f		 DB	 111			; 0000006fH
  00141	72		 DB	 114			; 00000072H
  00142	64		 DB	 100			; 00000064H
  00143	5f		 DB	 95			; 0000005fH
  00144	63		 DB	 99			; 00000063H
  00145	6f		 DB	 111			; 0000006fH
  00146	75		 DB	 117			; 00000075H
  00147	6e		 DB	 110			; 0000006eH
  00148	74		 DB	 116			; 00000074H
  00149	00		 DB	 0
?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::InitializeNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
___p$1 = -4						; size = 4
_p$ = 8							; size = 4
?FillNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::FillNumberHeader

; 300  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 301  : #ifdef _M_X64
; 302  :         if (sizeof(*p) == sizeof(_UINT64_T) * 10)
; 303  :         {
; 304  :             _UINT64_T* __p = (_UINT64_T*)p;
; 305  :             __p[0] = DEFAULT_MEMORY_DATA;
; 306  :             __p[1] = DEFAULT_MEMORY_DATA;
; 307  :             __p[2] = DEFAULT_MEMORY_DATA;
; 308  :             __p[3] = DEFAULT_MEMORY_DATA;
; 309  :             __p[4] = DEFAULT_MEMORY_DATA;
; 310  :             __p[5] = DEFAULT_MEMORY_DATA;
; 311  :             __p[6] = DEFAULT_MEMORY_DATA;
; 312  :             __p[7] = DEFAULT_MEMORY_DATA;
; 313  :             __p[8] = DEFAULT_MEMORY_DATA;
; 314  :             __p[9] = DEFAULT_MEMORY_DATA;
; 315  :         }
; 316  :         else
; 317  :         {
; 318  : #endif
; 319  :             if (sizeof(*p) == sizeof(_UINT32_T) * 11)

  00015	b8 01 00 00 00	 mov	 eax, 1
  0001a	85 c0		 test	 eax, eax
  0001c	0f 84 cd 00 00
	00		 je	 $LN2@FillNumber

; 320  :             {
; 321  :                 _UINT32_T* __p = (_UINT32_T*)p;

  00022	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00025	89 4d fc	 mov	 DWORD PTR ___p$1[ebp], ecx

; 322  :                 __p[0] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00028	ba 04 00 00 00	 mov	 edx, 4
  0002d	6b c2 00	 imul	 eax, edx, 0
  00030	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  00033	c7 04 01 cc cc
	cc cc		 mov	 DWORD PTR [ecx+eax], -858993460 ; ccccccccH

; 323  :                 __p[1] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0003a	ba 04 00 00 00	 mov	 edx, 4
  0003f	c1 e2 00	 shl	 edx, 0
  00042	8b 45 fc	 mov	 eax, DWORD PTR ___p$1[ebp]
  00045	c7 04 10 cc cc
	cc cc		 mov	 DWORD PTR [eax+edx], -858993460 ; ccccccccH

; 324  :                 __p[2] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0004c	b9 04 00 00 00	 mov	 ecx, 4
  00051	d1 e1		 shl	 ecx, 1
  00053	8b 55 fc	 mov	 edx, DWORD PTR ___p$1[ebp]
  00056	c7 04 0a cc cc
	cc cc		 mov	 DWORD PTR [edx+ecx], -858993460 ; ccccccccH

; 325  :                 __p[3] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0005d	b8 04 00 00 00	 mov	 eax, 4
  00062	6b c8 03	 imul	 ecx, eax, 3
  00065	8b 55 fc	 mov	 edx, DWORD PTR ___p$1[ebp]
  00068	c7 04 0a cc cc
	cc cc		 mov	 DWORD PTR [edx+ecx], -858993460 ; ccccccccH

; 326  :                 __p[4] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0006f	b8 04 00 00 00	 mov	 eax, 4
  00074	c1 e0 02	 shl	 eax, 2
  00077	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  0007a	c7 04 01 cc cc
	cc cc		 mov	 DWORD PTR [ecx+eax], -858993460 ; ccccccccH

; 327  :                 __p[5] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00081	ba 04 00 00 00	 mov	 edx, 4
  00086	6b c2 05	 imul	 eax, edx, 5
  00089	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  0008c	c7 04 01 cc cc
	cc cc		 mov	 DWORD PTR [ecx+eax], -858993460 ; ccccccccH

; 328  :                 __p[6] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00093	ba 04 00 00 00	 mov	 edx, 4
  00098	6b c2 06	 imul	 eax, edx, 6
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  0009e	c7 04 01 cc cc
	cc cc		 mov	 DWORD PTR [ecx+eax], -858993460 ; ccccccccH

; 329  :                 __p[7] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  000a5	ba 04 00 00 00	 mov	 edx, 4
  000aa	6b c2 07	 imul	 eax, edx, 7
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  000b0	c7 04 01 cc cc
	cc cc		 mov	 DWORD PTR [ecx+eax], -858993460 ; ccccccccH

; 330  :                 __p[8] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  000b7	ba 04 00 00 00	 mov	 edx, 4
  000bc	c1 e2 03	 shl	 edx, 3
  000bf	8b 45 fc	 mov	 eax, DWORD PTR ___p$1[ebp]
  000c2	c7 04 10 cc cc
	cc cc		 mov	 DWORD PTR [eax+edx], -858993460 ; ccccccccH

; 331  :                 __p[9] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  000c9	b9 04 00 00 00	 mov	 ecx, 4
  000ce	6b d1 09	 imul	 edx, ecx, 9
  000d1	8b 45 fc	 mov	 eax, DWORD PTR ___p$1[ebp]
  000d4	c7 04 10 cc cc
	cc cc		 mov	 DWORD PTR [eax+edx], -858993460 ; ccccccccH

; 332  :                 __p[10] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  000db	b9 04 00 00 00	 mov	 ecx, 4
  000e0	6b d1 0a	 imul	 edx, ecx, 10
  000e3	8b 45 fc	 mov	 eax, DWORD PTR ___p$1[ebp]
  000e6	c7 04 10 cc cc
	cc cc		 mov	 DWORD PTR [eax+edx], -858993460 ; ccccccccH
  000ed	eb 4f		 jmp	 SHORT $LN1@FillNumber
$LN2@FillNumber:

; 333  :             }
; 334  : #ifdef _M_X64
; 335  :             else if (sizeof(*p) % sizeof(_UINT64_T) == 0)
; 336  :                 _FILL_MEMORY_64((_UINT64_T*)p, DEFAULT_MEMORY_DATA, sizeof(*p) / sizeof(_UINT64_T));
; 337  : #endif
; 338  :             else if (sizeof(*p) % sizeof(_UINT32_T) == 0)

  000ef	b9 01 00 00 00	 mov	 ecx, 1
  000f4	85 c9		 test	 ecx, ecx
  000f6	74 15		 je	 SHORT $LN4@FillNumber

; 339  :                 _FILL_MEMORY_32((_UINT32_T*)p, (_UINT32_T)DEFAULT_MEMORY_DATA, sizeof(*p) / sizeof(_UINT32_T));

  000f8	6a 0b		 push	 11			; 0000000bH
  000fa	68 cc cc cc cc	 push	 -858993460		; ccccccccH
  000ff	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00102	52		 push	 edx
  00103	e8 00 00 00 00	 call	 __FILL_MEMORY_32
  00108	83 c4 0c	 add	 esp, 12			; 0000000cH
  0010b	eb 31		 jmp	 SHORT $LN1@FillNumber
$LN4@FillNumber:

; 340  :             else if (sizeof(*p) % sizeof(_UINT16_T) == 0)

  0010d	b8 01 00 00 00	 mov	 eax, 1
  00112	85 c0		 test	 eax, eax
  00114	74 15		 je	 SHORT $LN6@FillNumber

; 341  :                 _FILL_MEMORY_16((_UINT16_T*)p, (_UINT16_T)DEFAULT_MEMORY_DATA, sizeof(*p) / sizeof(_UINT16_T));

  00116	6a 16		 push	 22			; 00000016H
  00118	68 cc cc 00 00	 push	 52428			; 0000ccccH
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00120	51		 push	 ecx
  00121	e8 00 00 00 00	 call	 __FILL_MEMORY_16
  00126	83 c4 0c	 add	 esp, 12			; 0000000cH

; 342  :             else

  00129	eb 13		 jmp	 SHORT $LN1@FillNumber
$LN6@FillNumber:

; 343  :                 _FILL_MEMORY_BYTE(p, (unsigned char)DEFAULT_MEMORY_DATA, sizeof(*p));

  0012b	6a 2c		 push	 44			; 0000002cH
  0012d	68 cc 00 00 00	 push	 204			; 000000ccH
  00132	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00135	52		 push	 edx
  00136	e8 00 00 00 00	 call	 __FILL_MEMORY_BYTE
  0013b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@FillNumber:

; 344  : #ifdef _M_X64
; 345  :         }
; 346  : #endif
; 347  :     }

  0013e	83 c4 04	 add	 esp, 4
  00141	3b ec		 cmp	 ebp, esp
  00143	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
?FillNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::FillNumberHeader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
___p$1 = -4						; size = 4
_p$ = 8							; size = 4
?ClearNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::ClearNumberHeader

; 250  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 251  : #ifdef _M_X64
; 252  :         if (sizeof(*p) == sizeof(_UINT64_T) * 10)
; 253  :         {
; 254  :             _UINT64_T* __p = (_UINT64_T*)p;
; 255  :             __p[0] = 0;
; 256  :             __p[1] = 0;
; 257  :             __p[2] = 0;
; 258  :             __p[3] = 0;
; 259  :             __p[4] = 0;
; 260  :             __p[5] = 0;
; 261  :             __p[6] = 0;
; 262  :             __p[7] = 0;
; 263  :             __p[8] = 0;
; 264  :             __p[9] = 0;
; 265  :         }
; 266  :         else
; 267  :         {
; 268  : #endif
; 269  :             if (sizeof(*p) == sizeof(_UINT32_T) * 11)

  00015	b8 01 00 00 00	 mov	 eax, 1
  0001a	85 c0		 test	 eax, eax
  0001c	0f 84 cd 00 00
	00		 je	 $LN2@ClearNumbe

; 270  :             {
; 271  :                 _UINT32_T* __p = (_UINT32_T*)p;

  00022	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00025	89 4d fc	 mov	 DWORD PTR ___p$1[ebp], ecx

; 272  :                 __p[0] = 0;

  00028	ba 04 00 00 00	 mov	 edx, 4
  0002d	6b c2 00	 imul	 eax, edx, 0
  00030	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  00033	c7 04 01 00 00
	00 00		 mov	 DWORD PTR [ecx+eax], 0

; 273  :                 __p[1] = 0;

  0003a	ba 04 00 00 00	 mov	 edx, 4
  0003f	c1 e2 00	 shl	 edx, 0
  00042	8b 45 fc	 mov	 eax, DWORD PTR ___p$1[ebp]
  00045	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], 0

; 274  :                 __p[2] = 0;

  0004c	b9 04 00 00 00	 mov	 ecx, 4
  00051	d1 e1		 shl	 ecx, 1
  00053	8b 55 fc	 mov	 edx, DWORD PTR ___p$1[ebp]
  00056	c7 04 0a 00 00
	00 00		 mov	 DWORD PTR [edx+ecx], 0

; 275  :                 __p[3] = 0;

  0005d	b8 04 00 00 00	 mov	 eax, 4
  00062	6b c8 03	 imul	 ecx, eax, 3
  00065	8b 55 fc	 mov	 edx, DWORD PTR ___p$1[ebp]
  00068	c7 04 0a 00 00
	00 00		 mov	 DWORD PTR [edx+ecx], 0

; 276  :                 __p[4] = 0;

  0006f	b8 04 00 00 00	 mov	 eax, 4
  00074	c1 e0 02	 shl	 eax, 2
  00077	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  0007a	c7 04 01 00 00
	00 00		 mov	 DWORD PTR [ecx+eax], 0

; 277  :                 __p[5] = 0;

  00081	ba 04 00 00 00	 mov	 edx, 4
  00086	6b c2 05	 imul	 eax, edx, 5
  00089	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  0008c	c7 04 01 00 00
	00 00		 mov	 DWORD PTR [ecx+eax], 0

; 278  :                 __p[6] = 0;

  00093	ba 04 00 00 00	 mov	 edx, 4
  00098	6b c2 06	 imul	 eax, edx, 6
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  0009e	c7 04 01 00 00
	00 00		 mov	 DWORD PTR [ecx+eax], 0

; 279  :                 __p[7] = 0;

  000a5	ba 04 00 00 00	 mov	 edx, 4
  000aa	6b c2 07	 imul	 eax, edx, 7
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR ___p$1[ebp]
  000b0	c7 04 01 00 00
	00 00		 mov	 DWORD PTR [ecx+eax], 0

; 280  :                 __p[8] = 0;

  000b7	ba 04 00 00 00	 mov	 edx, 4
  000bc	c1 e2 03	 shl	 edx, 3
  000bf	8b 45 fc	 mov	 eax, DWORD PTR ___p$1[ebp]
  000c2	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], 0

; 281  :                 __p[9] = 0;

  000c9	b9 04 00 00 00	 mov	 ecx, 4
  000ce	6b d1 09	 imul	 edx, ecx, 9
  000d1	8b 45 fc	 mov	 eax, DWORD PTR ___p$1[ebp]
  000d4	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], 0

; 282  :                 __p[10] = 0;

  000db	b9 04 00 00 00	 mov	 ecx, 4
  000e0	6b d1 0a	 imul	 edx, ecx, 10
  000e3	8b 45 fc	 mov	 eax, DWORD PTR ___p$1[ebp]
  000e6	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], 0
  000ed	eb 40		 jmp	 SHORT $LN1@ClearNumbe
$LN2@ClearNumbe:

; 283  :             }
; 284  : #ifdef _M_X64
; 285  :             else if (sizeof(*p) % sizeof(_UINT64_T) == 0)
; 286  :                 _ZERO_MEMORY_64((_UINT64_T*)p, sizeof(*p) / sizeof(_UINT64_T));
; 287  : #endif
; 288  :             else if (sizeof(*p) % sizeof(_UINT32_T) == 0)

  000ef	b9 01 00 00 00	 mov	 ecx, 1
  000f4	85 c9		 test	 ecx, ecx
  000f6	74 10		 je	 SHORT $LN4@ClearNumbe

; 289  :                 _ZERO_MEMORY_32((_UINT32_T*)p, sizeof(*p) / sizeof(_UINT32_T));

  000f8	6a 0b		 push	 11			; 0000000bH
  000fa	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000fd	52		 push	 edx
  000fe	e8 00 00 00 00	 call	 __ZERO_MEMORY_32
  00103	83 c4 08	 add	 esp, 8
  00106	eb 27		 jmp	 SHORT $LN1@ClearNumbe
$LN4@ClearNumbe:

; 290  :             else if (sizeof(*p) % sizeof(_UINT16_T) == 0)

  00108	b8 01 00 00 00	 mov	 eax, 1
  0010d	85 c0		 test	 eax, eax
  0010f	74 10		 je	 SHORT $LN6@ClearNumbe

; 291  :                 _ZERO_MEMORY_16((_UINT16_T*)p, sizeof(*p) / sizeof(_UINT16_T));

  00111	6a 16		 push	 22			; 00000016H
  00113	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00116	51		 push	 ecx
  00117	e8 00 00 00 00	 call	 __ZERO_MEMORY_16
  0011c	83 c4 08	 add	 esp, 8

; 292  :             else

  0011f	eb 0e		 jmp	 SHORT $LN1@ClearNumbe
$LN6@ClearNumbe:

; 293  :                 _ZERO_MEMORY_BYTE(p, sizeof(*p));

  00121	6a 2c		 push	 44			; 0000002cH
  00123	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 __ZERO_MEMORY_BYTE
  0012c	83 c4 08	 add	 esp, 8
$LN1@ClearNumbe:

; 294  : #ifdef _M_X64
; 295  :         }
; 296  : #endif
; 297  :     }

  0012f	83 c4 04	 add	 esp, 4
  00132	3b ec		 cmp	 ebp, esp
  00134	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00139	8b e5		 mov	 esp, ebp
  0013b	5d		 pop	 ebp
  0013c	c3		 ret	 0
?ClearNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::ClearNumberHeader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T1 = -68						; size = 28
$T2 = -40						; size = 28
_code_desired$ = -12					; size = 4
_code_actual$ = -8					; size = 4
_words$ = -4						; size = 4
_buffer$ = 8						; size = 4
_count$ = 12						; size = 4
_code$ = 16						; size = 4
?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z PROC ; Palmtree::Math::Core::Internal::CheckBlock

; 232  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	57		 push	 edi
  00007	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  0000a	b9 11 00 00 00	 mov	 ecx, 17			; 00000011H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 233  : //#ifdef _DEBUG
; 234  :         if (buffer == nullptr)

  00020	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  00024	75 02		 jne	 SHORT $LN2@CheckBlock

; 235  :             return;

  00026	eb 7d		 jmp	 SHORT $LN5@CheckBlock
$LN2@CheckBlock:

; 236  :         --buffer;

  00028	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0002b	83 e8 04	 sub	 eax, 4
  0002e	89 45 08	 mov	 DWORD PTR _buffer$[ebp], eax

; 237  :         __UNIT_TYPE words = buffer[0];

  00031	b9 04 00 00 00	 mov	 ecx, 4
  00036	6b d1 00	 imul	 edx, ecx, 0
  00039	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0003c	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  0003f	89 4d fc	 mov	 DWORD PTR _words$[ebp], ecx

; 238  :         if (words != count)

  00042	8b 55 fc	 mov	 edx, DWORD PTR _words$[ebp]
  00045	3b 55 0c	 cmp	 edx, DWORD PTR _count$[ebp]
  00048	74 20		 je	 SHORT $LN3@CheckBlock

; 239  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckBlockLight;1");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117930
  0004f	68 00 00 00 00	 push	 OFFSET $SG117931
  00054	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00061	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@CheckBlock:

; 240  :         __UNIT_TYPE code_actual = buffer[words + 1];

  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _words$[ebp]
  0006d	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00070	8b 44 8a 04	 mov	 eax, DWORD PTR [edx+ecx*4+4]
  00074	89 45 f8	 mov	 DWORD PTR _code_actual$[ebp], eax

; 241  :         __UNIT_TYPE code_desired = code;

  00077	8b 4d 10	 mov	 ecx, DWORD PTR _code$[ebp]
  0007a	89 4d f4	 mov	 DWORD PTR _code_desired$[ebp], ecx

; 242  :         if (code_desired != code_actual)

  0007d	8b 55 f4	 mov	 edx, DWORD PTR _code_desired$[ebp]
  00080	3b 55 f8	 cmp	 edx, DWORD PTR _code_actual$[ebp]
  00083	74 20		 je	 SHORT $LN5@CheckBlock

; 243  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckBlockLight;2");

  00085	68 00 00 00 00	 push	 OFFSET $SG117934
  0008a	68 00 00 00 00	 push	 OFFSET $SG117935
  0008f	8d 4d bc	 lea	 ecx, DWORD PTR $T1[ebp]
  00092	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  00097	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0009c	8d 45 bc	 lea	 eax, DWORD PTR $T1[ebp]
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN5@CheckBlock:

; 244  : //#else
; 245  : //        return;
; 246  : //#endif
; 247  :     }

  000a5	5f		 pop	 edi
  000a6	83 c4 44	 add	 esp, 68			; 00000044H
  000a9	3b ec		 cmp	 ebp, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ENDP ; Palmtree::Math::Core::Internal::CheckBlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T1 = -60						; size = 28
$T2 = -32						; size = 28
_p$ = -4						; size = 4
_buffer$ = 8						; size = 4
_buffer_words$ = 12					; size = 4
_check_code$ = 16					; size = 4
?DeallocateBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z PROC ; Palmtree::Math::Core::Internal::DeallocateBlock

; 209  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0000b	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 210  :         if (buffer == nullptr)

  00021	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  00025	75 05		 jne	 SHORT $LN2@Deallocate

; 211  :             return;

  00027	e9 96 00 00 00	 jmp	 $LN5@Deallocate
$LN2@Deallocate:

; 212  :         __UNIT_TYPE* p = buffer - 1;

  0002c	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0002f	83 e8 04	 sub	 eax, 4
  00032	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax

; 213  : #ifdef _DEBUG
; 214  :         if (*p != buffer_words)

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00038	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003a	3b 55 0c	 cmp	 edx, DWORD PTR _buffer_words$[ebp]
  0003d	74 20		 je	 SHORT $LN3@Deallocate

; 215  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;1");

  0003f	68 00 00 00 00	 push	 OFFSET $SG117913
  00044	68 00 00 00 00	 push	 OFFSET $SG117914
  00049	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  0004c	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  00051	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00056	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Deallocate:

; 216  :         if (p[buffer_words+1] != check_code)

  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _buffer_words$[ebp]
  00062	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00065	8b 44 8a 04	 mov	 eax, DWORD PTR [edx+ecx*4+4]
  00069	3b 45 10	 cmp	 eax, DWORD PTR _check_code$[ebp]
  0006c	74 20		 je	 SHORT $LN4@Deallocate

; 217  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;2");

  0006e	68 00 00 00 00	 push	 OFFSET $SG117917
  00073	68 00 00 00 00	 push	 OFFSET $SG117918
  00078	8d 4d c4	 lea	 ecx, DWORD PTR $T1[ebp]
  0007b	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  00080	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00085	8d 4d c4	 lea	 ecx, DWORD PTR $T1[ebp]
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@Deallocate:

; 218  : #endif
; 219  :         // 使用済みのバッファを既定のデータで塗りつぶす。
; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  0008e	8b 55 0c	 mov	 edx, DWORD PTR _buffer_words$[ebp]
  00091	83 c2 02	 add	 edx, 2
  00094	52		 push	 edx
  00095	68 cc cc cc cc	 push	 -858993460		; ccccccccH
  0009a	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 __FILL_MEMORY_UNIT
  000a3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 221  :         // バッファを解放する。
; 222  :         HeapFree(hLocalHeap, 0, p);

  000a6	8b f4		 mov	 esi, esp
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  000ab	51		 push	 ecx
  000ac	6a 00		 push	 0
  000ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  000b4	52		 push	 edx
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@Deallocate:

; 223  : #ifdef _LOG_MEMORY
; 224  :         {
; 225  :             wprintf(L"0x%08lx: delete block 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)p);
; 226  :         }
; 227  : #endif
; 228  :     }

  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	83 c4 3c	 add	 esp, 60			; 0000003cH
  000c7	3b ec		 cmp	 ebp, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c3		 ret	 0
?DeallocateBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ENDP ; Palmtree::Math::Core::Internal::DeallocateBlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T1 = -48						; size = 24
_check_code$ = -24					; size = 4
_r$ = -20						; size = 4
_buffer$ = -16						; size = 4
_bytes$ = -12						; size = 4
_words2$ = -8						; size = 4
_words1$ = -4						; size = 4
_bits$ = 8						; size = 4
_allocated_block_words$ = 12				; size = 4
_code$ = 16						; size = 4
?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z PROC ; Palmtree::Math::Core::Internal::AllocateBlock

; 163  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 164  :         // 実際に獲得されるメモリ領域は「引数で渡されたワード数+2」のワード数となる。
; 165  :         // 最初のワードには獲得時に引数で渡されたワード数が格納される。
; 166  :         // 最後のワードには格納されている内容の正当性確認のための値が格納される。
; 167  :         // 2番目のワードへのポインタは呼び出し元に通知され利用される。
; 168  :         __UNIT_TYPE words1 = _DIVIDE_CEILING_UNIT(bits, __UNIT_TYPE_BIT_COUNT);

  00021	6a 20		 push	 32			; 00000020H
  00023	8b 45 08	 mov	 eax, DWORD PTR _bits$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 __DIVIDE_CEILING_UNIT
  0002c	83 c4 08	 add	 esp, 8
  0002f	89 45 fc	 mov	 DWORD PTR _words1$[ebp], eax

; 169  :         __UNIT_TYPE words2 = words1 + 2;

  00032	8b 4d fc	 mov	 ecx, DWORD PTR _words1$[ebp]
  00035	83 c1 02	 add	 ecx, 2
  00038	89 4d f8	 mov	 DWORD PTR _words2$[ebp], ecx

; 170  :         __UNIT_TYPE bytes = words2 * __UNIT_TYPE_BYTE_COUNT;

  0003b	8b 55 f8	 mov	 edx, DWORD PTR _words2$[ebp]
  0003e	c1 e2 02	 shl	 edx, 2
  00041	89 55 f4	 mov	 DWORD PTR _bytes$[ebp], edx

; 171  :         __UNIT_TYPE* buffer = (__UNIT_TYPE*)HeapAlloc(hLocalHeap, HEAP_ZERO_MEMORY, bytes);

  00044	8b f4		 mov	 esi, esp
  00046	8b 45 f4	 mov	 eax, DWORD PTR _bytes$[ebp]
  00049	50		 push	 eax
  0004a	6a 08		 push	 8
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00052	51		 push	 ecx
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	89 45 f0	 mov	 DWORD PTR _buffer$[ebp], eax

; 172  :         if (buffer == nullptr)

  00063	83 7d f0 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  00067	75 1b		 jne	 SHORT $LN2@AllocateBl

; 173  :             throw NotEnoughMemoryException(L"ヒープメモリ領域が不足しています。");

  00069	68 00 00 00 00	 push	 OFFSET $SG117899
  0006e	8d 4d d0	 lea	 ecx, DWORD PTR $T1[ebp]
  00071	e8 00 00 00 00	 call	 ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
  00076	68 00 00 00 00	 push	 OFFSET __TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
  0007b	8d 55 d0	 lea	 edx, DWORD PTR $T1[ebp]
  0007e	52		 push	 edx
  0007f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@AllocateBl:

; 174  : #ifdef _LOG_MEMORY
; 175  :         {
; 176  :             wprintf(L"0x%08lx: new block 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)buffer);
; 177  :         }
; 178  : #endif
; 179  :         buffer[0] = words1;

  00084	b8 04 00 00 00	 mov	 eax, 4
  00089	6b c8 00	 imul	 ecx, eax, 0
  0008c	8b 55 f0	 mov	 edx, DWORD PTR _buffer$[ebp]
  0008f	8b 45 fc	 mov	 eax, DWORD PTR _words1$[ebp]
  00092	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 180  :         *allocated_block_words = words1;

  00095	8b 4d 0c	 mov	 ecx, DWORD PTR _allocated_block_words$[ebp]
  00098	8b 55 fc	 mov	 edx, DWORD PTR _words1$[ebp]
  0009b	89 11		 mov	 DWORD PTR [ecx], edx

; 181  : #ifdef _DEBUG
; 182  :         // 乱数もどきを生成する。
; 183  : #ifdef _M_IX86
; 184  :         __UNIT_TYPE r = GetTickCount();

  0009d	8b f4		 mov	 esi, esp
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  000a5	3b f4		 cmp	 esi, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	89 45 ec	 mov	 DWORD PTR _r$[ebp], eax

; 185  : #elif defined(_M_X64)
; 186  : #ifdef _MSC_VER
; 187  :         __UNIT_TYPE r = GetTickCount64();
; 188  : #elif defined(__GNUC__)
; 189  :         _UINT32_T temp = GetTickCount();
; 190  :         __UNIT_TYPE r = _FROMWORDTODWORD(temp, temp);
; 191  : #else
; 192  : #error unknown compiler
; 193  : #endif
; 194  : #else
; 195  : #error unknown platform
; 196  : #endif
; 197  :         __UNIT_TYPE check_code = CHECK_CODE_INIT | r;

  000af	8b 45 ec	 mov	 eax, DWORD PTR _r$[ebp]
  000b2	0d 84 84 84 84	 or	 eax, -2071690108	; 84848484H
  000b7	89 45 e8	 mov	 DWORD PTR _check_code$[ebp], eax

; 198  : #else
; 199  :         __UNIT_TYPE check_code = 0;
; 200  : #endif
; 201  :         buffer[words1 + 1] = check_code;

  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _words1$[ebp]
  000bd	8b 55 f0	 mov	 edx, DWORD PTR _buffer$[ebp]
  000c0	8b 45 e8	 mov	 eax, DWORD PTR _check_code$[ebp]
  000c3	89 44 8a 04	 mov	 DWORD PTR [edx+ecx*4+4], eax

; 202  :         *code = check_code;

  000c7	8b 4d 10	 mov	 ecx, DWORD PTR _code$[ebp]
  000ca	8b 55 e8	 mov	 edx, DWORD PTR _check_code$[ebp]
  000cd	89 11		 mov	 DWORD PTR [ecx], edx

; 203  :         return (&buffer[1]);

  000cf	b8 04 00 00 00	 mov	 eax, 4
  000d4	c1 e0 00	 shl	 eax, 0
  000d7	03 45 f0	 add	 eax, DWORD PTR _buffer$[ebp]
$LN3@AllocateBl:

; 204  :     }

  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	83 c4 30	 add	 esp, 48			; 00000030H
  000df	3b ec		 cmp	 ebp, esp
  000e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z ENDP ; Palmtree::Math::Core::Internal::AllocateBlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_count$ = -20						; size = 4
_code$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_words$ = 12						; size = 4
?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z PROC ; Palmtree::Math::Core::Internal::CalculateHashCode

; 59   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00038	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 60   :         __UNIT_TYPE code = CHECK_CODE_INIT;

  0003d	c7 45 f0 84 84
	84 84		 mov	 DWORD PTR _code$[ebp], -2071690108 ; 84848484H

; 61   : 
; 62   :         __UNIT_TYPE count = words >> 5;

  00044	8b 45 0c	 mov	 eax, DWORD PTR _words$[ebp]
  00047	c1 e8 05	 shr	 eax, 5
  0004a	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax
$LN2@CalculateH:

; 63   :         while (count != 0)

  0004d	83 7d ec 00	 cmp	 DWORD PTR _count$[ebp], 0
  00051	0f 84 f9 03 00
	00		 je	 $LN3@CalculateH

; 64   :         {
; 65   :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  00057	6a 03		 push	 3
  00059	8b 4d f0	 mov	 ecx, DWORD PTR _code$[ebp]
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00062	83 c4 08	 add	 esp, 8
  00065	ba 04 00 00 00	 mov	 edx, 4
  0006a	6b ca 00	 imul	 ecx, edx, 0
  0006d	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00070	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  00073	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 66   :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  00076	6a 03		 push	 3
  00078	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00081	83 c4 08	 add	 esp, 8
  00084	b9 04 00 00 00	 mov	 ecx, 4
  00089	c1 e1 00	 shl	 ecx, 0
  0008c	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0008f	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  00092	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 67   :             code = _ROTATE_L_UNIT(code, 3) ^ p[2];

  00095	6a 03		 push	 3
  00097	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  000a0	83 c4 08	 add	 esp, 8
  000a3	b9 04 00 00 00	 mov	 ecx, 4
  000a8	d1 e1		 shl	 ecx, 1
  000aa	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000ad	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  000b0	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 68   :             code = _ROTATE_L_UNIT(code, 3) ^ p[3];

  000b3	6a 03		 push	 3
  000b5	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  000be	83 c4 08	 add	 esp, 8
  000c1	b9 04 00 00 00	 mov	 ecx, 4
  000c6	6b d1 03	 imul	 edx, ecx, 3
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000cc	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  000cf	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 69   :             code = _ROTATE_L_UNIT(code, 3) ^ p[4];

  000d2	6a 03		 push	 3
  000d4	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  000d7	52		 push	 edx
  000d8	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  000dd	83 c4 08	 add	 esp, 8
  000e0	b9 04 00 00 00	 mov	 ecx, 4
  000e5	c1 e1 02	 shl	 ecx, 2
  000e8	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000eb	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  000ee	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 70   :             code = _ROTATE_L_UNIT(code, 3) ^ p[5];

  000f1	6a 03		 push	 3
  000f3	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  000fc	83 c4 08	 add	 esp, 8
  000ff	b9 04 00 00 00	 mov	 ecx, 4
  00104	6b d1 05	 imul	 edx, ecx, 5
  00107	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0010a	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  0010d	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 71   :             code = _ROTATE_L_UNIT(code, 3) ^ p[6];

  00110	6a 03		 push	 3
  00112	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00115	52		 push	 edx
  00116	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0011b	83 c4 08	 add	 esp, 8
  0011e	b9 04 00 00 00	 mov	 ecx, 4
  00123	6b d1 06	 imul	 edx, ecx, 6
  00126	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00129	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  0012c	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 72   :             code = _ROTATE_L_UNIT(code, 3) ^ p[7];

  0012f	6a 03		 push	 3
  00131	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00134	52		 push	 edx
  00135	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0013a	83 c4 08	 add	 esp, 8
  0013d	b9 04 00 00 00	 mov	 ecx, 4
  00142	6b d1 07	 imul	 edx, ecx, 7
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00148	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  0014b	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 73   :             code = _ROTATE_L_UNIT(code, 3) ^ p[8];

  0014e	6a 03		 push	 3
  00150	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00153	52		 push	 edx
  00154	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00159	83 c4 08	 add	 esp, 8
  0015c	b9 04 00 00 00	 mov	 ecx, 4
  00161	c1 e1 03	 shl	 ecx, 3
  00164	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00167	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  0016a	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 74   :             code = _ROTATE_L_UNIT(code, 3) ^ p[9];

  0016d	6a 03		 push	 3
  0016f	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  00172	50		 push	 eax
  00173	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00178	83 c4 08	 add	 esp, 8
  0017b	b9 04 00 00 00	 mov	 ecx, 4
  00180	6b d1 09	 imul	 edx, ecx, 9
  00183	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00186	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00189	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 75   :             code = _ROTATE_L_UNIT(code, 3) ^ p[10];

  0018c	6a 03		 push	 3
  0018e	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00197	83 c4 08	 add	 esp, 8
  0019a	b9 04 00 00 00	 mov	 ecx, 4
  0019f	6b d1 0a	 imul	 edx, ecx, 10
  001a2	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  001a5	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  001a8	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 76   :             code = _ROTATE_L_UNIT(code, 3) ^ p[11];

  001ab	6a 03		 push	 3
  001ad	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  001b0	52		 push	 edx
  001b1	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  001b6	83 c4 08	 add	 esp, 8
  001b9	b9 04 00 00 00	 mov	 ecx, 4
  001be	6b d1 0b	 imul	 edx, ecx, 11
  001c1	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  001c4	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  001c7	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 77   :             code = _ROTATE_L_UNIT(code, 3) ^ p[12];

  001ca	6a 03		 push	 3
  001cc	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  001cf	52		 push	 edx
  001d0	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  001d5	83 c4 08	 add	 esp, 8
  001d8	b9 04 00 00 00	 mov	 ecx, 4
  001dd	6b d1 0c	 imul	 edx, ecx, 12
  001e0	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  001e3	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  001e6	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 78   :             code = _ROTATE_L_UNIT(code, 3) ^ p[13];

  001e9	6a 03		 push	 3
  001eb	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  001ee	52		 push	 edx
  001ef	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  001f4	83 c4 08	 add	 esp, 8
  001f7	b9 04 00 00 00	 mov	 ecx, 4
  001fc	6b d1 0d	 imul	 edx, ecx, 13
  001ff	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00202	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00205	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 79   :             code = _ROTATE_L_UNIT(code, 3) ^ p[14];

  00208	6a 03		 push	 3
  0020a	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  0020d	52		 push	 edx
  0020e	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00213	83 c4 08	 add	 esp, 8
  00216	b9 04 00 00 00	 mov	 ecx, 4
  0021b	6b d1 0e	 imul	 edx, ecx, 14
  0021e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00221	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00224	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 80   :             code = _ROTATE_L_UNIT(code, 3) ^ p[15];

  00227	6a 03		 push	 3
  00229	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  0022c	52		 push	 edx
  0022d	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00232	83 c4 08	 add	 esp, 8
  00235	b9 04 00 00 00	 mov	 ecx, 4
  0023a	6b d1 0f	 imul	 edx, ecx, 15
  0023d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00240	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00243	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 81   :             code = _ROTATE_L_UNIT(code, 3) ^ p[16];

  00246	6a 03		 push	 3
  00248	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  0024b	52		 push	 edx
  0024c	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00251	83 c4 08	 add	 esp, 8
  00254	b9 04 00 00 00	 mov	 ecx, 4
  00259	c1 e1 04	 shl	 ecx, 4
  0025c	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0025f	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  00262	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 82   :             code = _ROTATE_L_UNIT(code, 3) ^ p[17];

  00265	6a 03		 push	 3
  00267	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  0026a	50		 push	 eax
  0026b	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00270	83 c4 08	 add	 esp, 8
  00273	b9 04 00 00 00	 mov	 ecx, 4
  00278	6b d1 11	 imul	 edx, ecx, 17
  0027b	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0027e	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00281	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 83   :             code = _ROTATE_L_UNIT(code, 3) ^ p[18];

  00284	6a 03		 push	 3
  00286	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00289	52		 push	 edx
  0028a	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0028f	83 c4 08	 add	 esp, 8
  00292	b9 04 00 00 00	 mov	 ecx, 4
  00297	6b d1 12	 imul	 edx, ecx, 18
  0029a	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0029d	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  002a0	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 84   :             code = _ROTATE_L_UNIT(code, 3) ^ p[19];

  002a3	6a 03		 push	 3
  002a5	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  002a8	52		 push	 edx
  002a9	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  002ae	83 c4 08	 add	 esp, 8
  002b1	b9 04 00 00 00	 mov	 ecx, 4
  002b6	6b d1 13	 imul	 edx, ecx, 19
  002b9	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  002bc	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  002bf	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 85   :             code = _ROTATE_L_UNIT(code, 3) ^ p[20];

  002c2	6a 03		 push	 3
  002c4	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  002c7	52		 push	 edx
  002c8	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  002cd	83 c4 08	 add	 esp, 8
  002d0	b9 04 00 00 00	 mov	 ecx, 4
  002d5	6b d1 14	 imul	 edx, ecx, 20
  002d8	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  002db	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  002de	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 86   :             code = _ROTATE_L_UNIT(code, 3) ^ p[21];

  002e1	6a 03		 push	 3
  002e3	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  002ec	83 c4 08	 add	 esp, 8
  002ef	b9 04 00 00 00	 mov	 ecx, 4
  002f4	6b d1 15	 imul	 edx, ecx, 21
  002f7	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  002fa	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  002fd	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 87   :             code = _ROTATE_L_UNIT(code, 3) ^ p[22];

  00300	6a 03		 push	 3
  00302	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00305	52		 push	 edx
  00306	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0030b	83 c4 08	 add	 esp, 8
  0030e	b9 04 00 00 00	 mov	 ecx, 4
  00313	6b d1 16	 imul	 edx, ecx, 22
  00316	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00319	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  0031c	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 88   :             code = _ROTATE_L_UNIT(code, 3) ^ p[23];

  0031f	6a 03		 push	 3
  00321	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00324	52		 push	 edx
  00325	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0032a	83 c4 08	 add	 esp, 8
  0032d	b9 04 00 00 00	 mov	 ecx, 4
  00332	6b d1 17	 imul	 edx, ecx, 23
  00335	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00338	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  0033b	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 89   :             code = _ROTATE_L_UNIT(code, 3) ^ p[24];

  0033e	6a 03		 push	 3
  00340	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00343	52		 push	 edx
  00344	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00349	83 c4 08	 add	 esp, 8
  0034c	b9 04 00 00 00	 mov	 ecx, 4
  00351	6b d1 18	 imul	 edx, ecx, 24
  00354	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00357	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  0035a	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 90   :             code = _ROTATE_L_UNIT(code, 3) ^ p[25];

  0035d	6a 03		 push	 3
  0035f	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00362	52		 push	 edx
  00363	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00368	83 c4 08	 add	 esp, 8
  0036b	b9 04 00 00 00	 mov	 ecx, 4
  00370	6b d1 19	 imul	 edx, ecx, 25
  00373	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00376	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00379	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 91   :             code = _ROTATE_L_UNIT(code, 3) ^ p[26];

  0037c	6a 03		 push	 3
  0037e	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00381	52		 push	 edx
  00382	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00387	83 c4 08	 add	 esp, 8
  0038a	b9 04 00 00 00	 mov	 ecx, 4
  0038f	6b d1 1a	 imul	 edx, ecx, 26
  00392	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00395	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00398	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 92   :             code = _ROTATE_L_UNIT(code, 3) ^ p[27];

  0039b	6a 03		 push	 3
  0039d	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  003a6	83 c4 08	 add	 esp, 8
  003a9	b9 04 00 00 00	 mov	 ecx, 4
  003ae	6b d1 1b	 imul	 edx, ecx, 27
  003b1	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  003b4	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  003b7	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 93   :             code = _ROTATE_L_UNIT(code, 3) ^ p[28];

  003ba	6a 03		 push	 3
  003bc	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  003bf	52		 push	 edx
  003c0	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  003c5	83 c4 08	 add	 esp, 8
  003c8	b9 04 00 00 00	 mov	 ecx, 4
  003cd	6b d1 1c	 imul	 edx, ecx, 28
  003d0	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  003d3	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  003d6	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 94   :             code = _ROTATE_L_UNIT(code, 3) ^ p[29];

  003d9	6a 03		 push	 3
  003db	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  003de	52		 push	 edx
  003df	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  003e4	83 c4 08	 add	 esp, 8
  003e7	b9 04 00 00 00	 mov	 ecx, 4
  003ec	6b d1 1d	 imul	 edx, ecx, 29
  003ef	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  003f2	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  003f5	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 95   :             code = _ROTATE_L_UNIT(code, 3) ^ p[30];

  003f8	6a 03		 push	 3
  003fa	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  003fd	52		 push	 edx
  003fe	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00403	83 c4 08	 add	 esp, 8
  00406	b9 04 00 00 00	 mov	 ecx, 4
  0040b	6b d1 1e	 imul	 edx, ecx, 30
  0040e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00411	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00414	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 96   :             code = _ROTATE_L_UNIT(code, 3) ^ p[31];

  00417	6a 03		 push	 3
  00419	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  0041c	52		 push	 edx
  0041d	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00422	83 c4 08	 add	 esp, 8
  00425	b9 04 00 00 00	 mov	 ecx, 4
  0042a	6b d1 1f	 imul	 edx, ecx, 31
  0042d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00430	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00433	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 97   :             p += 32;

  00436	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00439	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  0043f	89 55 08	 mov	 DWORD PTR _p$[ebp], edx

; 98   :             --count;

  00442	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00445	83 e8 01	 sub	 eax, 1
  00448	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 99   :         }

  0044b	e9 fd fb ff ff	 jmp	 $LN2@CalculateH
$LN3@CalculateH:

; 100  : 
; 101  :         if (words & 0x10)

  00450	8b 4d 0c	 mov	 ecx, DWORD PTR _words$[ebp]
  00453	83 e1 10	 and	 ecx, 16			; 00000010H
  00456	0f 84 f8 01 00
	00		 je	 $LN4@CalculateH

; 102  :         {
; 103  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  0045c	6a 03		 push	 3
  0045e	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00461	52		 push	 edx
  00462	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00467	83 c4 08	 add	 esp, 8
  0046a	b9 04 00 00 00	 mov	 ecx, 4
  0046f	6b d1 00	 imul	 edx, ecx, 0
  00472	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00475	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00478	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 104  :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  0047b	6a 03		 push	 3
  0047d	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00480	52		 push	 edx
  00481	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00486	83 c4 08	 add	 esp, 8
  00489	b9 04 00 00 00	 mov	 ecx, 4
  0048e	c1 e1 00	 shl	 ecx, 0
  00491	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00494	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  00497	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 105  :             code = _ROTATE_L_UNIT(code, 3) ^ p[2];

  0049a	6a 03		 push	 3
  0049c	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  0049f	50		 push	 eax
  004a0	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  004a5	83 c4 08	 add	 esp, 8
  004a8	b9 04 00 00 00	 mov	 ecx, 4
  004ad	d1 e1		 shl	 ecx, 1
  004af	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  004b2	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  004b5	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 106  :             code = _ROTATE_L_UNIT(code, 3) ^ p[3];

  004b8	6a 03		 push	 3
  004ba	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  004bd	50		 push	 eax
  004be	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  004c3	83 c4 08	 add	 esp, 8
  004c6	b9 04 00 00 00	 mov	 ecx, 4
  004cb	6b d1 03	 imul	 edx, ecx, 3
  004ce	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  004d1	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  004d4	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 107  :             code = _ROTATE_L_UNIT(code, 3) ^ p[4];

  004d7	6a 03		 push	 3
  004d9	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  004dc	52		 push	 edx
  004dd	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  004e2	83 c4 08	 add	 esp, 8
  004e5	b9 04 00 00 00	 mov	 ecx, 4
  004ea	c1 e1 02	 shl	 ecx, 2
  004ed	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  004f0	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  004f3	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 108  :             code = _ROTATE_L_UNIT(code, 3) ^ p[5];

  004f6	6a 03		 push	 3
  004f8	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  004fb	50		 push	 eax
  004fc	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00501	83 c4 08	 add	 esp, 8
  00504	b9 04 00 00 00	 mov	 ecx, 4
  00509	6b d1 05	 imul	 edx, ecx, 5
  0050c	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0050f	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00512	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 109  :             code = _ROTATE_L_UNIT(code, 3) ^ p[6];

  00515	6a 03		 push	 3
  00517	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  0051a	52		 push	 edx
  0051b	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00520	83 c4 08	 add	 esp, 8
  00523	b9 04 00 00 00	 mov	 ecx, 4
  00528	6b d1 06	 imul	 edx, ecx, 6
  0052b	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0052e	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00531	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 110  :             code = _ROTATE_L_UNIT(code, 3) ^ p[7];

  00534	6a 03		 push	 3
  00536	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00539	52		 push	 edx
  0053a	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0053f	83 c4 08	 add	 esp, 8
  00542	b9 04 00 00 00	 mov	 ecx, 4
  00547	6b d1 07	 imul	 edx, ecx, 7
  0054a	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0054d	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00550	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 111  :             code = _ROTATE_L_UNIT(code, 3) ^ p[8];

  00553	6a 03		 push	 3
  00555	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00558	52		 push	 edx
  00559	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0055e	83 c4 08	 add	 esp, 8
  00561	b9 04 00 00 00	 mov	 ecx, 4
  00566	c1 e1 03	 shl	 ecx, 3
  00569	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0056c	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  0056f	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 112  :             code = _ROTATE_L_UNIT(code, 3) ^ p[9];

  00572	6a 03		 push	 3
  00574	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  00577	50		 push	 eax
  00578	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0057d	83 c4 08	 add	 esp, 8
  00580	b9 04 00 00 00	 mov	 ecx, 4
  00585	6b d1 09	 imul	 edx, ecx, 9
  00588	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0058b	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  0058e	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 113  :             code = _ROTATE_L_UNIT(code, 3) ^ p[10];

  00591	6a 03		 push	 3
  00593	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00596	52		 push	 edx
  00597	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0059c	83 c4 08	 add	 esp, 8
  0059f	b9 04 00 00 00	 mov	 ecx, 4
  005a4	6b d1 0a	 imul	 edx, ecx, 10
  005a7	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  005aa	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  005ad	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 114  :             code = _ROTATE_L_UNIT(code, 3) ^ p[11];

  005b0	6a 03		 push	 3
  005b2	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  005b5	52		 push	 edx
  005b6	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  005bb	83 c4 08	 add	 esp, 8
  005be	b9 04 00 00 00	 mov	 ecx, 4
  005c3	6b d1 0b	 imul	 edx, ecx, 11
  005c6	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  005c9	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  005cc	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 115  :             code = _ROTATE_L_UNIT(code, 3) ^ p[12];

  005cf	6a 03		 push	 3
  005d1	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  005d4	52		 push	 edx
  005d5	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  005da	83 c4 08	 add	 esp, 8
  005dd	b9 04 00 00 00	 mov	 ecx, 4
  005e2	6b d1 0c	 imul	 edx, ecx, 12
  005e5	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  005e8	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  005eb	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 116  :             code = _ROTATE_L_UNIT(code, 3) ^ p[13];

  005ee	6a 03		 push	 3
  005f0	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  005f3	52		 push	 edx
  005f4	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  005f9	83 c4 08	 add	 esp, 8
  005fc	b9 04 00 00 00	 mov	 ecx, 4
  00601	6b d1 0d	 imul	 edx, ecx, 13
  00604	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00607	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  0060a	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 117  :             code = _ROTATE_L_UNIT(code, 3) ^ p[14];

  0060d	6a 03		 push	 3
  0060f	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00612	52		 push	 edx
  00613	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00618	83 c4 08	 add	 esp, 8
  0061b	b9 04 00 00 00	 mov	 ecx, 4
  00620	6b d1 0e	 imul	 edx, ecx, 14
  00623	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00626	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00629	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 118  :             code = _ROTATE_L_UNIT(code, 3) ^ p[15];

  0062c	6a 03		 push	 3
  0062e	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  00631	52		 push	 edx
  00632	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00637	83 c4 08	 add	 esp, 8
  0063a	b9 04 00 00 00	 mov	 ecx, 4
  0063f	6b d1 0f	 imul	 edx, ecx, 15
  00642	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00645	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00648	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 119  :             p += 16;

  0064b	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0064e	83 c2 40	 add	 edx, 64			; 00000040H
  00651	89 55 08	 mov	 DWORD PTR _p$[ebp], edx
$LN4@CalculateH:

; 120  :         }
; 121  : 
; 122  :         if (words & 0x8)

  00654	8b 45 0c	 mov	 eax, DWORD PTR _words$[ebp]
  00657	83 e0 08	 and	 eax, 8
  0065a	0f 84 00 01 00
	00		 je	 $LN5@CalculateH

; 123  :         {
; 124  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  00660	6a 03		 push	 3
  00662	8b 4d f0	 mov	 ecx, DWORD PTR _code$[ebp]
  00665	51		 push	 ecx
  00666	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0066b	83 c4 08	 add	 esp, 8
  0066e	ba 04 00 00 00	 mov	 edx, 4
  00673	6b ca 00	 imul	 ecx, edx, 0
  00676	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00679	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  0067c	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 125  :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  0067f	6a 03		 push	 3
  00681	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  00684	50		 push	 eax
  00685	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  0068a	83 c4 08	 add	 esp, 8
  0068d	b9 04 00 00 00	 mov	 ecx, 4
  00692	c1 e1 00	 shl	 ecx, 0
  00695	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00698	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  0069b	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 126  :             code = _ROTATE_L_UNIT(code, 3) ^ p[2];

  0069e	6a 03		 push	 3
  006a0	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  006a3	50		 push	 eax
  006a4	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  006a9	83 c4 08	 add	 esp, 8
  006ac	b9 04 00 00 00	 mov	 ecx, 4
  006b1	d1 e1		 shl	 ecx, 1
  006b3	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  006b6	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  006b9	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 127  :             code = _ROTATE_L_UNIT(code, 3) ^ p[3];

  006bc	6a 03		 push	 3
  006be	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  006c1	50		 push	 eax
  006c2	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  006c7	83 c4 08	 add	 esp, 8
  006ca	b9 04 00 00 00	 mov	 ecx, 4
  006cf	6b d1 03	 imul	 edx, ecx, 3
  006d2	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  006d5	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  006d8	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 128  :             code = _ROTATE_L_UNIT(code, 3) ^ p[4];

  006db	6a 03		 push	 3
  006dd	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  006e0	52		 push	 edx
  006e1	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  006e6	83 c4 08	 add	 esp, 8
  006e9	b9 04 00 00 00	 mov	 ecx, 4
  006ee	c1 e1 02	 shl	 ecx, 2
  006f1	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  006f4	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  006f7	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 129  :             code = _ROTATE_L_UNIT(code, 3) ^ p[5];

  006fa	6a 03		 push	 3
  006fc	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  006ff	50		 push	 eax
  00700	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00705	83 c4 08	 add	 esp, 8
  00708	b9 04 00 00 00	 mov	 ecx, 4
  0070d	6b d1 05	 imul	 edx, ecx, 5
  00710	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00713	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00716	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 130  :             code = _ROTATE_L_UNIT(code, 3) ^ p[6];

  00719	6a 03		 push	 3
  0071b	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  0071e	52		 push	 edx
  0071f	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00724	83 c4 08	 add	 esp, 8
  00727	b9 04 00 00 00	 mov	 ecx, 4
  0072c	6b d1 06	 imul	 edx, ecx, 6
  0072f	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00732	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00735	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 131  :             code = _ROTATE_L_UNIT(code, 3) ^ p[7];

  00738	6a 03		 push	 3
  0073a	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  0073d	52		 push	 edx
  0073e	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00743	83 c4 08	 add	 esp, 8
  00746	b9 04 00 00 00	 mov	 ecx, 4
  0074b	6b d1 07	 imul	 edx, ecx, 7
  0074e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00751	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00754	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 132  :             p += 8;

  00757	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0075a	83 c2 20	 add	 edx, 32			; 00000020H
  0075d	89 55 08	 mov	 DWORD PTR _p$[ebp], edx
$LN5@CalculateH:

; 133  :         }
; 134  : 
; 135  :         if (words & 0x4)

  00760	8b 45 0c	 mov	 eax, DWORD PTR _words$[ebp]
  00763	83 e0 04	 and	 eax, 4
  00766	0f 84 84 00 00
	00		 je	 $LN6@CalculateH

; 136  :         {
; 137  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  0076c	6a 03		 push	 3
  0076e	8b 4d f0	 mov	 ecx, DWORD PTR _code$[ebp]
  00771	51		 push	 ecx
  00772	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00777	83 c4 08	 add	 esp, 8
  0077a	ba 04 00 00 00	 mov	 edx, 4
  0077f	6b ca 00	 imul	 ecx, edx, 0
  00782	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00785	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  00788	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 138  :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  0078b	6a 03		 push	 3
  0078d	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  00790	50		 push	 eax
  00791	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00796	83 c4 08	 add	 esp, 8
  00799	b9 04 00 00 00	 mov	 ecx, 4
  0079e	c1 e1 00	 shl	 ecx, 0
  007a1	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  007a4	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  007a7	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 139  :             code = _ROTATE_L_UNIT(code, 3) ^ p[2];

  007aa	6a 03		 push	 3
  007ac	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  007af	50		 push	 eax
  007b0	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  007b5	83 c4 08	 add	 esp, 8
  007b8	b9 04 00 00 00	 mov	 ecx, 4
  007bd	d1 e1		 shl	 ecx, 1
  007bf	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  007c2	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  007c5	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 140  :             code = _ROTATE_L_UNIT(code, 3) ^ p[3];

  007c8	6a 03		 push	 3
  007ca	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  007cd	50		 push	 eax
  007ce	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  007d3	83 c4 08	 add	 esp, 8
  007d6	b9 04 00 00 00	 mov	 ecx, 4
  007db	6b d1 03	 imul	 edx, ecx, 3
  007de	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  007e1	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  007e4	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 141  :             p += 4;

  007e7	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  007ea	83 c2 10	 add	 edx, 16			; 00000010H
  007ed	89 55 08	 mov	 DWORD PTR _p$[ebp], edx
$LN6@CalculateH:

; 142  :         }
; 143  : 
; 144  :         if (words & 0x2)

  007f0	8b 45 0c	 mov	 eax, DWORD PTR _words$[ebp]
  007f3	83 e0 02	 and	 eax, 2
  007f6	74 47		 je	 SHORT $LN7@CalculateH

; 145  :         {
; 146  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  007f8	6a 03		 push	 3
  007fa	8b 4d f0	 mov	 ecx, DWORD PTR _code$[ebp]
  007fd	51		 push	 ecx
  007fe	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00803	83 c4 08	 add	 esp, 8
  00806	ba 04 00 00 00	 mov	 edx, 4
  0080b	6b ca 00	 imul	 ecx, edx, 0
  0080e	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00811	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  00814	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 147  :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  00817	6a 03		 push	 3
  00819	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]
  0081c	50		 push	 eax
  0081d	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00822	83 c4 08	 add	 esp, 8
  00825	b9 04 00 00 00	 mov	 ecx, 4
  0082a	c1 e1 00	 shl	 ecx, 0
  0082d	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00830	33 04 0a	 xor	 eax, DWORD PTR [edx+ecx]
  00833	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax

; 148  :             p += 2;

  00836	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00839	83 c0 08	 add	 eax, 8
  0083c	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
$LN7@CalculateH:

; 149  :         }
; 150  : 
; 151  :         if (words & 0x1)

  0083f	8b 4d 0c	 mov	 ecx, DWORD PTR _words$[ebp]
  00842	83 e1 01	 and	 ecx, 1
  00845	74 1f		 je	 SHORT $LN8@CalculateH

; 152  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  00847	6a 03		 push	 3
  00849	8b 55 f0	 mov	 edx, DWORD PTR _code$[ebp]
  0084c	52		 push	 edx
  0084d	e8 00 00 00 00	 call	 __ROTATE_L_UNIT
  00852	83 c4 08	 add	 esp, 8
  00855	b9 04 00 00 00	 mov	 ecx, 4
  0085a	6b d1 00	 imul	 edx, ecx, 0
  0085d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00860	33 04 11	 xor	 eax, DWORD PTR [ecx+edx]
  00863	89 45 f0	 mov	 DWORD PTR _code$[ebp], eax
$LN8@CalculateH:

; 153  : 
; 154  :         return (code);

  00866	8b 45 f0	 mov	 eax, DWORD PTR _code$[ebp]

; 155  :     }

  00869	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0086c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00873	59		 pop	 ecx
  00874	83 c4 14	 add	 esp, 20			; 00000014H
  00877	3b ec		 cmp	 ebp, esp
  00879	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0087e	8b e5		 mov	 esp, ebp
  00880	5d		 pop	 ebp
  00881	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z ENDP ; Palmtree::Math::Core::Internal::CalculateHashCode
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__TZCNT_ALT_UNIT PROC

; 505  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 506  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@TZCNT_ALT_

; 507  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0a		 jmp	 SHORT $LN1@TZCNT_ALT_
$LN2@TZCNT_ALT_:

; 508  : #ifdef _M_IX86
; 509  :             DWORD pos;
; 510  : #ifdef _MSC_VER
; 511  :             _BitScanForward(&pos, x);

  00032	0f bc 45 08	 bsf	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 512  : #elif defined(__GNUC__)
; 513  :             __asm__("bsfl %1, %0" : "=r"(pos) : "rm"(x));
; 514  : #else
; 515  : #error unknown compiler
; 516  : #endif
; 517  : #elif defined(_M_X64)
; 518  : #ifdef _MSC_VER
; 519  :             DWORD pos;
; 520  :             _BitScanForward64(&pos, x);
; 521  : #elif defined(__GNUC__)
; 522  :             _UINT64_T pos;
; 523  :             __asm__("bsfq %1, %0" : "=r"(pos) : "rm"(x));
; 524  : #else
; 525  : #error unknown compiler
; 526  : #endif
; 527  : #else
; 528  : #error unknown platform
; 529  : #endif
; 530  :             return (pos);

  00039	8b 45 f8	 mov	 eax, DWORD PTR _pos$[ebp]
$LN1@TZCNT_ALT_:

; 531  :         }

  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@TZCNT_ALT_
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@TZCNT_ALT_:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@TZCNT_ALT_
$LN5@TZCNT_ALT_:
  00064	f8 ff ff ff	 DD	 -8			; fffffff8H
  00068	04 00 00 00	 DD	 4
  0006c	00 00 00 00	 DD	 $LN4@TZCNT_ALT_
$LN4@TZCNT_ALT_:
  00070	70		 DB	 112			; 00000070H
  00071	6f		 DB	 111			; 0000006fH
  00072	73		 DB	 115			; 00000073H
  00073	00		 DB	 0
__TZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__LZCNT_ALT_UNIT PROC

; 454  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 455  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0f		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);

  00032	0f bd 45 08	 bsr	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);
; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00039	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  0003e	2b 45 f8	 sub	 eax, DWORD PTR _pos$[ebp]
$LN1@LZCNT_ALT_:

; 480  :         }

  00041	52		 push	 edx
  00042	8b cd		 mov	 ecx, ebp
  00044	50		 push	 eax
  00045	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@LZCNT_ALT_
  0004b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00050	58		 pop	 eax
  00051	5a		 pop	 edx
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN6@LZCNT_ALT_:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@LZCNT_ALT_
$LN5@LZCNT_ALT_:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@LZCNT_ALT_
$LN4@LZCNT_ALT_:
  00074	70		 DB	 112			; 00000070H
  00075	6f		 DB	 111			; 0000006fH
  00076	73		 DB	 115			; 00000073H
  00077	00		 DB	 0
__LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
_count$ = 12						; size = 4
__ROTATE_L_UNIT PROC

; 329  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 330  : #ifdef _M_IX86
; 331  :             return (_rotl(x, count));

  0000d	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00013	d3 c0		 rol	 eax, cl

; 332  : #elif defined(_M_X64)
; 333  :             return (_rotl64(x, count));
; 334  : #else
; 335  : #error unknown platform
; 336  : #endif
; 337  :         }

  00015	3b ec		 cmp	 ebp, esp
  00017	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
__ROTATE_L_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_u$ = 8							; size = 4
_v$ = 12						; size = 4
__DIVIDE_CEILING_UNIT PROC

; 156  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 157  :             return ((u + v - 1) / v);

  0000d	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00013	8d 44 01 ff	 lea	 eax, DWORD PTR [ecx+eax-1]
  00017	33 d2		 xor	 edx, edx
  00019	f7 75 0c	 div	 DWORD PTR _v$[ebp]

; 158  :         }

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
__DIVIDE_CEILING_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_x$ = 12						; size = 4
_count$ = 16						; size = 4
__FILL_MEMORY_UNIT PROC

; 129  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 130  : #ifdef _M_IX86
; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  0000e	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00011	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  00014	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00017	f3 ab		 rep stosd

; 132  : #elif defined(_M_X64)
; 133  :             __stosq(d, x, count);
; 134  : #else
; 135  : #error unknown platform
; 136  : #endif
; 137  :         }

  00019	5f		 pop	 edi
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
__FILL_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_x$ = 12						; size = 4
_count$ = 16						; size = 4
__FILL_MEMORY_32 PROC

; 117  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 118  :             __stosd((unsigned long*)d, x, count);

  0000e	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00011	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  00014	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00017	f3 ab		 rep stosd

; 119  :         }

  00019	5f		 pop	 edi
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
__FILL_MEMORY_32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_x$ = 12						; size = 2
_count$ = 16						; size = 4
__FILL_MEMORY_16 PROC

; 112  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 113  :             __stosw((_UINT16_T*)d, x, count);

  0000e	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00011	66 8b 45 0c	 mov	 ax, WORD PTR _x$[ebp]
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00018	66 f3 ab	 rep stosw

; 114  :         }

  0001b	5f		 pop	 edi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
__FILL_MEMORY_16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_x$ = 12						; size = 1
_count$ = 16						; size = 4
__FILL_MEMORY_BYTE PROC

; 107  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 108  :             __stosb((unsigned char*)d, x, count);

  0000e	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00011	8a 45 0c	 mov	 al, BYTE PTR _x$[ebp]
  00014	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00017	f3 aa		 rep stosb

; 109  :         }

  00019	5f		 pop	 edi
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
__FILL_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_UNIT PROC

; 96   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 97   : #ifdef _M_IX86
; 98   :             __stosd((unsigned long*)d, 0, (unsigned long)count);

  0000e	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00011	33 c0		 xor	 eax, eax
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00016	f3 ab		 rep stosd

; 99   : #elif defined(_M_X64)
; 100  :             __stosq(d, 0, count);
; 101  : #else
; 102  : #error unknown platform
; 103  : #endif
; 104  :         }

  00018	5f		 pop	 edi
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
__ZERO_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_32 PROC

; 84   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 85   :             __stosd((unsigned long*)d, 0, count);

  0000e	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00011	33 c0		 xor	 eax, eax
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00016	f3 ab		 rep stosd

; 86   :         }

  00018	5f		 pop	 edi
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
__ZERO_MEMORY_32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_16 PROC

; 79   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 80   :             __stosw(d, 0, count);

  0000e	33 c0		 xor	 eax, eax
  00010	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00016	66 f3 ab	 rep stosw

; 81   :         }

  00019	5f		 pop	 edi
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
__ZERO_MEMORY_16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_BYTE PROC

; 74   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00009	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 75   :             __stosb((unsigned char*)d, 0, count);

  0000e	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00011	32 c0		 xor	 al, al
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00016	f3 aa		 rep stosb

; 76   :         }

  00018	5f		 pop	 edi
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
__ZERO_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_s$ = 12						; size = 4
_count$ = 16						; size = 4
__COPY_MEMORY_UNIT PROC

; 63   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  0000a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 64   : #ifdef _M_IX86
; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);

  0000f	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00012	8b 75 0c	 mov	 esi, DWORD PTR _s$[ebp]
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00018	f3 a5		 rep movsd

; 66   : #elif defined(_M_X64)
; 67   :             __movsq(d, s, count);
; 68   : #else
; 69   : #error unknown platform
; 70   : #endif
; 71   :         }

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
__COPY_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 10		 push	 16			; 00000010H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber
; _this$ = ecx

; 968  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00019	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 969  :         Lock lock_obj;

  00044	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 970  :         __ChainBufferTag* tag = FindTag(buffer);

  00053	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00056	50		 push	 eax
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0005f	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 971  :         if (tag == nullptr)

  00062	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00066	75 20		 jne	 SHORT $LN2@UnlinkStat

; 972  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkStatickNumber;1");

  00068	68 00 00 00 00	 push	 OFFSET $SG118506
  0006d	68 00 00 00 00	 push	 OFFSET $SG118507
  00072	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00075	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007a	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0007f	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@UnlinkStat:

; 973  :         tag->Unlink();

  00088	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0008b	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 974  :     }

  00090	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00097	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  0009a	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@UnlinkStat:
  0009f	52		 push	 edx
  000a0	8b cd		 mov	 ecx, ebp
  000a2	50		 push	 eax
  000a3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@UnlinkStat
  000a9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ae	58		 pop	 eax
  000af	5a		 pop	 edx
  000b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ba	59		 pop	 ecx
  000bb	5f		 pop	 edi
  000bc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN8@UnlinkStat:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN7@UnlinkStat
$LN7@UnlinkStat:
  000d4	eb ff ff ff	 DD	 -21			; ffffffebH
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN5@UnlinkStat
$LN5@UnlinkStat:
  000e0	6c		 DB	 108			; 0000006cH
  000e1	6f		 DB	 111			; 0000006fH
  000e2	63		 DB	 99			; 00000063H
  000e3	6b		 DB	 107			; 0000006bH
  000e4	5f		 DB	 95			; 0000005fH
  000e5	6f		 DB	 111			; 0000006fH
  000e6	62		 DB	 98			; 00000062H
  000e7	6a		 DB	 106			; 0000006aH
  000e8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv87 = -48						; size = 4
tv86 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DetatchStaticNumber
; _this$ = ecx

; 956  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003a	33 c5		 xor	 eax, ebp
  0003c	50		 push	 eax
  0003d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00040	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00046	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0004e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 957  :         Lock lock_obj;

  00053	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00056	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 958  :         __ChainBufferTag* tag = FindTag(buffer);

  00062	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00065	50		 push	 eax
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0006e	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 959  :         if (tag != nullptr)

  00071	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00075	74 57		 je	 SHORT $LN2@DetatchSta

; 960  :         {
; 961  :             tag->Unlink();

  00077	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0007a	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 962  :             tag->Destruct();

  0007f	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00082	8b 11		 mov	 edx, DWORD PTR [ecx]
  00084	8b f4		 mov	 esi, esp
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00089	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0008c	ff d0		 call	 eax
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 963  :             delete tag;

  00095	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00098	89 4d d8	 mov	 DWORD PTR $T2[ebp], ecx
  0009b	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  0009e	89 55 dc	 mov	 DWORD PTR $T3[ebp], edx
  000a1	83 7d dc 00	 cmp	 DWORD PTR $T3[ebp], 0
  000a5	74 20		 je	 SHORT $LN4@DetatchSta
  000a7	8b 45 dc	 mov	 eax, DWORD PTR $T3[ebp]
  000aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ac	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ae	89 55 d4	 mov	 DWORD PTR tv86[ebp], edx
  000b1	8b f4		 mov	 esi, esp
  000b3	6a 01		 push	 1
  000b5	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  000b8	ff 55 d4	 call	 DWORD PTR tv86[ebp]
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	89 45 d0	 mov	 DWORD PTR tv87[ebp], eax
  000c5	eb 07		 jmp	 SHORT $LN2@DetatchSta
$LN4@DetatchSta:
  000c7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN2@DetatchSta:

; 964  :         }
; 965  :     }

  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d5	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000d8	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000dd	52		 push	 edx
  000de	8b cd		 mov	 ecx, ebp
  000e0	50		 push	 eax
  000e1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@DetatchSta
  000e7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ec	58		 pop	 eax
  000ed	5a		 pop	 edx
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5e		 pop	 esi
  000fa	83 c4 30	 add	 esp, 48			; 00000030H
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
  0010a	66 90		 npad	 2
$LN10@DetatchSta:
  0010c	01 00 00 00	 DD	 1
  00110	00 00 00 00	 DD	 $LN9@DetatchSta
$LN9@DetatchSta:
  00114	eb ff ff ff	 DD	 -21			; ffffffebH
  00118	01 00 00 00	 DD	 1
  0011c	00 00 00 00	 DD	 $LN7@DetatchSta
$LN7@DetatchSta:
  00120	6c		 DB	 108			; 0000006cH
  00121	6f		 DB	 111			; 0000006fH
  00122	63		 DB	 99			; 00000063H
  00123	6b		 DB	 107			; 0000006bH
  00124	5f		 DB	 95			; 0000005fH
  00125	6f		 DB	 111			; 0000006fH
  00126	62		 DB	 98			; 00000062H
  00127	6a		 DB	 106			; 0000006aH
  00128	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DetatchStaticNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv84 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_bit_count$ = 12					; size = 4
?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber
; _this$ = ecx

; 948  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0001c	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001f	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00022	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00025	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00028	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00036	33 c5		 xor	 eax, ebp
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0004a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 949  :         Lock lock_obj;

  0004f	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00052	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  00057	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 950  :         Palmtree::Math::Core::Internal::AttatchNumber(p, bit_count);

  0005e	8b 45 0c	 mov	 eax, DWORD PTR _bit_count$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AttatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::AttatchNumber
  0006b	83 c4 08	 add	 esp, 8

; 951  :         __ChainBufferTag* tag = new __StaticNumberChainBufferTag(p);

  0006e	6a 10		 push	 16			; 00000010H
  00070	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00075	83 c4 04	 add	 esp, 4
  00078	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  0007b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007f	83 7d d8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00083	74 11		 je	 SHORT $LN3@AttatchSta
  00085	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00088	52		 push	 edx
  00089	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
  0008c	e8 00 00 00 00	 call	 ??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::__StaticNumberChainBufferTag
  00091	89 45 d4	 mov	 DWORD PTR tv84[ebp], eax
  00094	eb 07		 jmp	 SHORT $LN4@AttatchSta
$LN3@AttatchSta:
  00096	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN4@AttatchSta:
  0009d	8b 45 d4	 mov	 eax, DWORD PTR tv84[ebp]
  000a0	89 45 dc	 mov	 DWORD PTR $T3[ebp], eax
  000a3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000a7	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  000aa	89 4d e0	 mov	 DWORD PTR _tag$[ebp], ecx

; 952  :         LinkTag(tag);

  000ad	8b 55 e0	 mov	 edx, DWORD PTR _tag$[ebp]
  000b0	52		 push	 edx
  000b1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	e8 00 00 00 00	 call	 ?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag

; 953  :     }

  000b9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c0	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000c3	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000c8	52		 push	 edx
  000c9	8b cd		 mov	 ecx, ebp
  000cb	50		 push	 eax
  000cc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@AttatchSta
  000d2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000d7	58		 pop	 eax
  000d8	5a		 pop	 edx
  000d9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e3	59		 pop	 ecx
  000e4	83 c4 2c	 add	 esp, 44			; 0000002cH
  000e7	3b ec		 cmp	 ebp, esp
  000e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 08 00	 ret	 8
$LN10@AttatchSta:
  000f4	01 00 00 00	 DD	 1
  000f8	00 00 00 00	 DD	 $LN9@AttatchSta
$LN9@AttatchSta:
  000fc	eb ff ff ff	 DD	 -21			; ffffffebH
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN7@AttatchSta
$LN7@AttatchSta:
  00108	6c		 DB	 108			; 0000006cH
  00109	6f		 DB	 111			; 0000006fH
  0010a	63		 DB	 99			; 00000063H
  0010b	6b		 DB	 107			; 0000006bH
  0010c	5f		 DB	 95			; 0000005fH
  0010d	6f		 DB	 111			; 0000006fH
  0010e	62		 DB	 98			; 00000062H
  0010f	6a		 DB	 106			; 0000006aH
  00110	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$1:
  00008	6a 10		 push	 16			; 00000010H
  0000a	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
; _this$ = ecx

; 939  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00019	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 940  :         Lock lock_obj;

  00044	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 941  :         __ChainBufferTag* tag = FindTag(buffer);

  00053	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00056	50		 push	 eax
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0005f	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 942  :         if (tag == nullptr)

  00062	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00066	75 20		 jne	 SHORT $LN2@UnlinkNumb

; 943  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkNumber;1");

  00068	68 00 00 00 00	 push	 OFFSET $SG118477
  0006d	68 00 00 00 00	 push	 OFFSET $SG118478
  00072	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00075	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007a	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0007f	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@UnlinkNumb:

; 944  :         tag->Unlink();

  00088	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0008b	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 945  :     }

  00090	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00097	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  0009a	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@UnlinkNumb:
  0009f	52		 push	 edx
  000a0	8b cd		 mov	 ecx, ebp
  000a2	50		 push	 eax
  000a3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@UnlinkNumb
  000a9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ae	58		 pop	 eax
  000af	5a		 pop	 edx
  000b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ba	59		 pop	 ecx
  000bb	5f		 pop	 edi
  000bc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN8@UnlinkNumb:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN7@UnlinkNumb
$LN7@UnlinkNumb:
  000d4	eb ff ff ff	 DD	 -21			; ffffffebH
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN5@UnlinkNumb
$LN5@UnlinkNumb:
  000e0	6c		 DB	 108			; 0000006cH
  000e1	6f		 DB	 111			; 0000006fH
  000e2	63		 DB	 99			; 00000063H
  000e3	6b		 DB	 107			; 0000006bH
  000e4	5f		 DB	 95			; 0000005fH
  000e5	6f		 DB	 111			; 0000006fH
  000e6	62		 DB	 98			; 00000062H
  000e7	6a		 DB	 106			; 0000006aH
  000e8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
; _this$ = ecx

; 928  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0001a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00040	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 929  : #ifdef _DEBUG
; 930  :         Lock lock_obj;

  00045	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00048	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 931  :         __ChainBufferTag* tag = FindTag(buffer);

  00054	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00057	50		 push	 eax
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  00060	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 932  :         if (tag == nullptr)

  00063	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00067	75 20		 jne	 SHORT $LN2@CheckNumbe

; 933  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::CheckNumber;1");

  00069	68 00 00 00 00	 push	 OFFSET $SG118467
  0006e	68 00 00 00 00	 push	 OFFSET $SG118468
  00073	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00076	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00080	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@CheckNumbe:

; 934  :         tag->Check();

  00089	8b 55 e0	 mov	 edx, DWORD PTR _tag$[ebp]
  0008c	8b 02		 mov	 eax, DWORD PTR [edx]
  0008e	8b f4		 mov	 esi, esp
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00093	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00096	ff d2		 call	 edx
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 935  : #endif
; 936  :     }

  0009f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a6	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000a9	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@CheckNumbe:
  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@CheckNumbe
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
$LN8@CheckNumbe:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN7@CheckNumbe
$LN7@CheckNumbe:
  000e4	eb ff ff ff	 DD	 -21			; ffffffebH
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN5@CheckNumbe
$LN5@CheckNumbe:
  000f0	6c		 DB	 108			; 0000006cH
  000f1	6f		 DB	 111			; 0000006fH
  000f2	63		 DB	 99			; 00000063H
  000f3	6b		 DB	 107			; 0000006bH
  000f4	5f		 DB	 95			; 0000005fH
  000f5	6f		 DB	 111			; 0000006fH
  000f6	62		 DB	 98			; 00000062H
  000f7	6a		 DB	 106			; 0000006aH
  000f8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv87 = -48						; size = 4
tv86 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
; _this$ = ecx

; 916  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003a	33 c5		 xor	 eax, ebp
  0003c	50		 push	 eax
  0003d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00040	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00046	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0004e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 917  :         Lock lock_obj;

  00053	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00056	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 918  :         __ChainBufferTag* tag = FindTag(buffer);

  00062	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00065	50		 push	 eax
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0006e	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 919  :         if (tag != nullptr)

  00071	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00075	74 57		 je	 SHORT $LN2@Deallocate

; 920  :         {
; 921  :             tag->Unlink();

  00077	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0007a	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 922  :             tag->Destruct();

  0007f	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00082	8b 11		 mov	 edx, DWORD PTR [ecx]
  00084	8b f4		 mov	 esi, esp
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00089	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0008c	ff d0		 call	 eax
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 923  :             delete tag;

  00095	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00098	89 4d d8	 mov	 DWORD PTR $T2[ebp], ecx
  0009b	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  0009e	89 55 dc	 mov	 DWORD PTR $T3[ebp], edx
  000a1	83 7d dc 00	 cmp	 DWORD PTR $T3[ebp], 0
  000a5	74 20		 je	 SHORT $LN4@Deallocate
  000a7	8b 45 dc	 mov	 eax, DWORD PTR $T3[ebp]
  000aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ac	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ae	89 55 d4	 mov	 DWORD PTR tv86[ebp], edx
  000b1	8b f4		 mov	 esi, esp
  000b3	6a 01		 push	 1
  000b5	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  000b8	ff 55 d4	 call	 DWORD PTR tv86[ebp]
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	89 45 d0	 mov	 DWORD PTR tv87[ebp], eax
  000c5	eb 07		 jmp	 SHORT $LN2@Deallocate
$LN4@Deallocate:
  000c7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN2@Deallocate:

; 924  :         }
; 925  :     }

  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d5	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000d8	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000dd	52		 push	 edx
  000de	8b cd		 mov	 ecx, ebp
  000e0	50		 push	 eax
  000e1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Deallocate
  000e7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ec	58		 pop	 eax
  000ed	5a		 pop	 edx
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5e		 pop	 esi
  000fa	83 c4 30	 add	 esp, 48			; 00000030H
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
  0010a	66 90		 npad	 2
$LN10@Deallocate:
  0010c	01 00 00 00	 DD	 1
  00110	00 00 00 00	 DD	 $LN9@Deallocate
$LN9@Deallocate:
  00114	eb ff ff ff	 DD	 -21			; ffffffebH
  00118	01 00 00 00	 DD	 1
  0011c	00 00 00 00	 DD	 $LN7@Deallocate
$LN7@Deallocate:
  00120	6c		 DB	 108			; 0000006cH
  00121	6f		 DB	 111			; 0000006fH
  00122	63		 DB	 99			; 00000063H
  00123	6b		 DB	 107			; 0000006bH
  00124	5f		 DB	 95			; 0000005fH
  00125	6f		 DB	 111			; 0000006fH
  00126	62		 DB	 98			; 00000062H
  00127	6a		 DB	 106			; 0000006aH
  00128	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv82 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
; _this$ = ecx

; 909  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0001c	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001f	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00022	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00025	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00028	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00036	33 c5		 xor	 eax, ebp
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0004a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 910  :         Lock lock_obj;

  0004f	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00052	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  00057	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 911  :         __ChainBufferTag* tag = new __NumberHandleHookingChainBufferTag(buffer);

  0005e	6a 10		 push	 16			; 00000010H
  00060	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00065	83 c4 04	 add	 esp, 4
  00068	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  0006b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006f	83 7d d8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00073	74 11		 je	 SHORT $LN3@HookNumber
  00075	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00078	50		 push	 eax
  00079	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
  0007c	e8 00 00 00 00	 call	 ??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::__NumberHandleHookingChainBufferTag
  00081	89 45 d4	 mov	 DWORD PTR tv82[ebp], eax
  00084	eb 07		 jmp	 SHORT $LN4@HookNumber
$LN3@HookNumber:
  00086	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN4@HookNumber:
  0008d	8b 4d d4	 mov	 ecx, DWORD PTR tv82[ebp]
  00090	89 4d dc	 mov	 DWORD PTR $T3[ebp], ecx
  00093	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00097	8b 55 dc	 mov	 edx, DWORD PTR $T3[ebp]
  0009a	89 55 e0	 mov	 DWORD PTR _tag$[ebp], edx

; 912  :         LinkTag(tag);

  0009d	8b 45 e0	 mov	 eax, DWORD PTR _tag$[ebp]
  000a0	50		 push	 eax
  000a1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	e8 00 00 00 00	 call	 ?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag

; 913  :     }

  000a9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b0	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000b8	52		 push	 edx
  000b9	8b cd		 mov	 ecx, ebp
  000bb	50		 push	 eax
  000bc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@HookNumber
  000c2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c7	58		 pop	 eax
  000c8	5a		 pop	 edx
  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	83 c4 2c	 add	 esp, 44			; 0000002cH
  000d7	3b ec		 cmp	 ebp, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 04 00	 ret	 4
$LN10@HookNumber:
  000e4	01 00 00 00	 DD	 1
  000e8	00 00 00 00	 DD	 $LN9@HookNumber
$LN9@HookNumber:
  000ec	eb ff ff ff	 DD	 -21			; ffffffebH
  000f0	01 00 00 00	 DD	 1
  000f4	00 00 00 00	 DD	 $LN7@HookNumber
$LN7@HookNumber:
  000f8	6c		 DB	 108			; 0000006cH
  000f9	6f		 DB	 111			; 0000006fH
  000fa	63		 DB	 99			; 00000063H
  000fb	6b		 DB	 107			; 0000006bH
  000fc	5f		 DB	 95			; 0000005fH
  000fd	6f		 DB	 111			; 0000006fH
  000fe	62		 DB	 98			; 00000062H
  000ff	6a		 DB	 106			; 0000006aH
  00100	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$1:
  00008	6a 10		 push	 16			; 00000010H
  0000a	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv84 = -52						; size = 4
$T2 = -48						; size = 4
$T3 = -44						; size = 4
$T4 = -40						; size = 4
_tag$ = -36						; size = 4
_buffer$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bit_count$ = 8						; size = 4
?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
; _this$ = ecx

; 900  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  00019	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 901  :         Lock lock_obj;

  00044	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 902  :         NUMBER_HEADER* buffer = Palmtree::Math::Core::Internal::AllocateNumber(bit_count);

  00053	8b 45 08	 mov	 eax, DWORD PTR _bit_count$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::AllocateNumber
  0005c	83 c4 04	 add	 esp, 4
  0005f	89 45 e0	 mov	 DWORD PTR _buffer$[ebp], eax

; 903  :         __ChainBufferTag* tag = new __DynamicNumberChainBufferTag(buffer);

  00062	6a 10		 push	 16			; 00000010H
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	83 c4 04	 add	 esp, 4
  0006c	89 45 d4	 mov	 DWORD PTR $T3[ebp], eax
  0006f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00073	83 7d d4 00	 cmp	 DWORD PTR $T3[ebp], 0
  00077	74 11		 je	 SHORT $LN3@AllocateNu
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0007c	51		 push	 ecx
  0007d	8b 4d d4	 mov	 ecx, DWORD PTR $T3[ebp]
  00080	e8 00 00 00 00	 call	 ??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::__DynamicNumberChainBufferTag
  00085	89 45 cc	 mov	 DWORD PTR tv84[ebp], eax
  00088	eb 07		 jmp	 SHORT $LN4@AllocateNu
$LN3@AllocateNu:
  0008a	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN4@AllocateNu:
  00091	8b 55 cc	 mov	 edx, DWORD PTR tv84[ebp]
  00094	89 55 d8	 mov	 DWORD PTR $T4[ebp], edx
  00097	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0009b	8b 45 d8	 mov	 eax, DWORD PTR $T4[ebp]
  0009e	89 45 dc	 mov	 DWORD PTR _tag$[ebp], eax

; 904  :         LinkTag(tag);

  000a1	8b 4d dc	 mov	 ecx, DWORD PTR _tag$[ebp]
  000a4	51		 push	 ecx
  000a5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag

; 905  :         return (buffer);

  000ad	8b 55 e0	 mov	 edx, DWORD PTR _buffer$[ebp]
  000b0	89 55 d0	 mov	 DWORD PTR $T2[ebp], edx
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ba	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000bd	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000c2	8b 45 d0	 mov	 eax, DWORD PTR $T2[ebp]

; 906  :     }

  000c5	52		 push	 edx
  000c6	8b cd		 mov	 ecx, ebp
  000c8	50		 push	 eax
  000c9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@AllocateNu
  000cf	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000d4	58		 pop	 eax
  000d5	5a		 pop	 edx
  000d6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e0	59		 pop	 ecx
  000e1	5f		 pop	 edi
  000e2	83 c4 34	 add	 esp, 52			; 00000034H
  000e5	3b ec		 cmp	 ebp, esp
  000e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c2 04 00	 ret	 4
  000f2	66 90		 npad	 2
$LN10@AllocateNu:
  000f4	01 00 00 00	 DD	 1
  000f8	00 00 00 00	 DD	 $LN9@AllocateNu
$LN9@AllocateNu:
  000fc	eb ff ff ff	 DD	 -21			; ffffffebH
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN7@AllocateNu
$LN7@AllocateNu:
  00108	6c		 DB	 108			; 0000006cH
  00109	6f		 DB	 111			; 0000006fH
  0010a	63		 DB	 99			; 00000063H
  0010b	6b		 DB	 107			; 0000006bH
  0010c	5f		 DB	 95			; 0000005fH
  0010d	6f		 DB	 111			; 0000006fH
  0010e	62		 DB	 98			; 00000062H
  0010f	6a		 DB	 106			; 0000006aH
  00110	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$1:
  00008	6a 10		 push	 16			; 00000010H
  0000a	8b 45 d4	 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkString
; _this$ = ecx

; 891  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00019	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 892  :         Lock lock_obj;

  00044	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 893  :         __ChainBufferTag* tag = FindTag(buffer);

  00053	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00056	50		 push	 eax
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0005f	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 894  :         if (tag == nullptr)

  00062	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00066	75 20		 jne	 SHORT $LN2@UnlinkStri

; 895  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkBlock;1");

  00068	68 00 00 00 00	 push	 OFFSET $SG118428
  0006d	68 00 00 00 00	 push	 OFFSET $SG118429
  00072	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00075	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007a	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0007f	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@UnlinkStri:

; 896  :         tag->Unlink();

  00088	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0008b	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 897  :     }

  00090	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00097	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  0009a	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@UnlinkStri:
  0009f	52		 push	 edx
  000a0	8b cd		 mov	 ecx, ebp
  000a2	50		 push	 eax
  000a3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@UnlinkStri
  000a9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ae	58		 pop	 eax
  000af	5a		 pop	 edx
  000b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ba	59		 pop	 ecx
  000bb	5f		 pop	 edi
  000bc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN8@UnlinkStri:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN7@UnlinkStri
$LN7@UnlinkStri:
  000d4	eb ff ff ff	 DD	 -21			; ffffffebH
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN5@UnlinkStri
$LN5@UnlinkStri:
  000e0	6c		 DB	 108			; 0000006cH
  000e1	6f		 DB	 111			; 0000006fH
  000e2	63		 DB	 99			; 00000063H
  000e3	6b		 DB	 107			; 0000006bH
  000e4	5f		 DB	 95			; 0000005fH
  000e5	6f		 DB	 111			; 0000006fH
  000e6	62		 DB	 98			; 00000062H
  000e7	6a		 DB	 106			; 0000006aH
  000e8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkString
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckString
; _this$ = ecx

; 880  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0001a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00040	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 881  : #ifdef _DEBUG
; 882  :         Lock lock_obj;

  00045	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00048	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 883  :         __ChainBufferTag* tag = FindTag(buffer);

  00054	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00057	50		 push	 eax
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  00060	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 884  :         if (tag == nullptr)

  00063	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00067	75 20		 jne	 SHORT $LN2@CheckStrin

; 885  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::CheckString;1");

  00069	68 00 00 00 00	 push	 OFFSET $SG118418
  0006e	68 00 00 00 00	 push	 OFFSET $SG118419
  00073	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00076	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00080	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@CheckStrin:

; 886  :         tag->Check();

  00089	8b 55 e0	 mov	 edx, DWORD PTR _tag$[ebp]
  0008c	8b 02		 mov	 eax, DWORD PTR [edx]
  0008e	8b f4		 mov	 esi, esp
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00093	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00096	ff d2		 call	 edx
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 887  : #endif
; 888  :     }

  0009f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a6	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000a9	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@CheckStrin:
  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@CheckStrin
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
$LN8@CheckStrin:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN7@CheckStrin
$LN7@CheckStrin:
  000e4	eb ff ff ff	 DD	 -21			; ffffffebH
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN5@CheckStrin
$LN5@CheckStrin:
  000f0	6c		 DB	 108			; 0000006cH
  000f1	6f		 DB	 111			; 0000006fH
  000f2	63		 DB	 99			; 00000063H
  000f3	6b		 DB	 107			; 0000006bH
  000f4	5f		 DB	 95			; 0000005fH
  000f5	6f		 DB	 111			; 0000006fH
  000f6	62		 DB	 98			; 00000062H
  000f7	6a		 DB	 106			; 0000006aH
  000f8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckString
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv87 = -48						; size = 4
tv86 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
; _this$ = ecx

; 868  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003a	33 c5		 xor	 eax, ebp
  0003c	50		 push	 eax
  0003d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00040	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00046	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0004e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 869  :         Lock lock_obj;

  00053	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00056	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 870  :         __ChainBufferTag* tag = FindTag(buffer);

  00062	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00065	50		 push	 eax
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0006e	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 871  :         if (tag != nullptr)

  00071	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00075	74 57		 je	 SHORT $LN2@Deallocate

; 872  :         {
; 873  :             tag->Unlink();

  00077	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0007a	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 874  :             tag->Destruct();

  0007f	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00082	8b 11		 mov	 edx, DWORD PTR [ecx]
  00084	8b f4		 mov	 esi, esp
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00089	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0008c	ff d0		 call	 eax
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 875  :             delete tag;

  00095	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00098	89 4d d8	 mov	 DWORD PTR $T2[ebp], ecx
  0009b	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  0009e	89 55 dc	 mov	 DWORD PTR $T3[ebp], edx
  000a1	83 7d dc 00	 cmp	 DWORD PTR $T3[ebp], 0
  000a5	74 20		 je	 SHORT $LN4@Deallocate
  000a7	8b 45 dc	 mov	 eax, DWORD PTR $T3[ebp]
  000aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ac	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ae	89 55 d4	 mov	 DWORD PTR tv86[ebp], edx
  000b1	8b f4		 mov	 esi, esp
  000b3	6a 01		 push	 1
  000b5	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  000b8	ff 55 d4	 call	 DWORD PTR tv86[ebp]
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	89 45 d0	 mov	 DWORD PTR tv87[ebp], eax
  000c5	eb 07		 jmp	 SHORT $LN2@Deallocate
$LN4@Deallocate:
  000c7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN2@Deallocate:

; 876  :         }
; 877  :     }

  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d5	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000d8	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000dd	52		 push	 edx
  000de	8b cd		 mov	 ecx, ebp
  000e0	50		 push	 eax
  000e1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Deallocate
  000e7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ec	58		 pop	 eax
  000ed	5a		 pop	 edx
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5e		 pop	 esi
  000fa	83 c4 30	 add	 esp, 48			; 00000030H
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
  0010a	66 90		 npad	 2
$LN10@Deallocate:
  0010c	01 00 00 00	 DD	 1
  00110	00 00 00 00	 DD	 $LN9@Deallocate
$LN9@Deallocate:
  00114	eb ff ff ff	 DD	 -21			; ffffffebH
  00118	01 00 00 00	 DD	 1
  0011c	00 00 00 00	 DD	 $LN7@Deallocate
$LN7@Deallocate:
  00120	6c		 DB	 108			; 0000006cH
  00121	6f		 DB	 111			; 0000006fH
  00122	63		 DB	 99			; 00000063H
  00123	6b		 DB	 107			; 0000006bH
  00124	5f		 DB	 95			; 0000005fH
  00125	6f		 DB	 111			; 0000006fH
  00126	62		 DB	 98			; 00000062H
  00127	6a		 DB	 106			; 0000006aH
  00128	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearString
; _this$ = ecx

; 859  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0001a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00040	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 860  :         Lock lock_obj;

  00045	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00048	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 861  :         __ChainBufferTag* tag = FindTag(buffer);

  00054	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00057	50		 push	 eax
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  00060	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 862  :         if (tag == nullptr)

  00063	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00067	75 20		 jne	 SHORT $LN2@ClearStrin

; 863  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::ClearString;1");

  00069	68 00 00 00 00	 push	 OFFSET $SG118399
  0006e	68 00 00 00 00	 push	 OFFSET $SG118400
  00073	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00076	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00080	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@ClearStrin:

; 864  :         tag->Clear();

  00089	8b 55 e0	 mov	 edx, DWORD PTR _tag$[ebp]
  0008c	8b 02		 mov	 eax, DWORD PTR [edx]
  0008e	8b f4		 mov	 esi, esp
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00093	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00096	ff d2		 call	 edx
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 865  :     }

  0009f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a6	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000a9	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@ClearStrin:
  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@ClearStrin
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
$LN8@ClearStrin:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN7@ClearStrin
$LN7@ClearStrin:
  000e4	eb ff ff ff	 DD	 -21			; ffffffebH
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN5@ClearStrin
$LN5@ClearStrin:
  000f0	6c		 DB	 108			; 0000006cH
  000f1	6f		 DB	 111			; 0000006fH
  000f2	63		 DB	 99			; 00000063H
  000f3	6b		 DB	 107			; 0000006bH
  000f4	5f		 DB	 95			; 0000005fH
  000f5	6f		 DB	 111			; 0000006fH
  000f6	62		 DB	 98			; 00000062H
  000f7	6a		 DB	 106			; 0000006aH
  000f8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearString
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv89 = -76						; size = 4
$T2 = -72						; size = 4
$T3 = -68						; size = 4
$T4 = -64						; size = 4
_tag$ = -60						; size = 4
_buffer$ = -56						; size = 4
_check_code$ = -48					; size = 4
_word_count$ = -36					; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_count$ = 8						; size = 4
?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
; _this$ = ecx

; 848  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  00019	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 849  :         Lock lock_obj;

  00044	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 850  :         __UNIT_TYPE word_count;
; 851  :         __UNIT_TYPE check_code;
; 852  :         __UNIT_TYPE* buffer = Palmtree::Math::Core::Internal::AllocateBlock(count * __UNIT_TYPE_BIT_COUNT, &word_count, &check_code);

  00053	8d 45 d0	 lea	 eax, DWORD PTR _check_code$[ebp]
  00056	50		 push	 eax
  00057	8d 4d dc	 lea	 ecx, DWORD PTR _word_count$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 08	 mov	 edx, DWORD PTR _count$[ebp]
  0005e	c1 e2 05	 shl	 edx, 5
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z ; Palmtree::Math::Core::Internal::AllocateBlock
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	89 45 c8	 mov	 DWORD PTR _buffer$[ebp], eax

; 853  :         __ChainBufferTag* tag = new ____UNIT_TYPE_Array_ChainBufferTag(buffer, word_count, check_code);

  0006d	6a 18		 push	 24			; 00000018H
  0006f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00074	83 c4 04	 add	 esp, 4
  00077	89 45 bc	 mov	 DWORD PTR $T3[ebp], eax
  0007a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007e	83 7d bc 00	 cmp	 DWORD PTR $T3[ebp], 0
  00082	74 19		 je	 SHORT $LN3@AllocateSt
  00084	8b 45 d0	 mov	 eax, DWORD PTR _check_code$[ebp]
  00087	50		 push	 eax
  00088	8b 4d dc	 mov	 ecx, DWORD PTR _word_count$[ebp]
  0008b	51		 push	 ecx
  0008c	8b 55 c8	 mov	 edx, DWORD PTR _buffer$[ebp]
  0008f	52		 push	 edx
  00090	8b 4d bc	 mov	 ecx, DWORD PTR $T3[ebp]
  00093	e8 00 00 00 00	 call	 ??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::____UNIT_TYPE_Array_ChainBufferTag
  00098	89 45 b4	 mov	 DWORD PTR tv89[ebp], eax
  0009b	eb 07		 jmp	 SHORT $LN4@AllocateSt
$LN3@AllocateSt:
  0009d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN4@AllocateSt:
  000a4	8b 45 b4	 mov	 eax, DWORD PTR tv89[ebp]
  000a7	89 45 c0	 mov	 DWORD PTR $T4[ebp], eax
  000aa	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000ae	8b 4d c0	 mov	 ecx, DWORD PTR $T4[ebp]
  000b1	89 4d c4	 mov	 DWORD PTR _tag$[ebp], ecx

; 854  :         LinkTag(tag);

  000b4	8b 55 c4	 mov	 edx, DWORD PTR _tag$[ebp]
  000b7	52		 push	 edx
  000b8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	e8 00 00 00 00	 call	 ?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag

; 855  :         return ((wchar_t*)buffer);

  000c0	8b 45 c8	 mov	 eax, DWORD PTR _buffer$[ebp]
  000c3	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  000c6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cd	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000d0	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000d5	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp]

; 856  :     }

  000d8	52		 push	 edx
  000d9	8b cd		 mov	 ecx, ebp
  000db	50		 push	 eax
  000dc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@AllocateSt
  000e2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e7	58		 pop	 eax
  000e8	5a		 pop	 edx
  000e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f3	59		 pop	 ecx
  000f4	5f		 pop	 edi
  000f5	83 c4 4c	 add	 esp, 76			; 0000004cH
  000f8	3b ec		 cmp	 ebp, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 04 00	 ret	 4
  00105	0f 1f 00	 npad	 3
$LN12@AllocateSt:
  00108	03 00 00 00	 DD	 3
  0010c	00 00 00 00	 DD	 $LN11@AllocateSt
$LN11@AllocateSt:
  00110	eb ff ff ff	 DD	 -21			; ffffffebH
  00114	01 00 00 00	 DD	 1
  00118	00 00 00 00	 DD	 $LN7@AllocateSt
  0011c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00120	04 00 00 00	 DD	 4
  00124	00 00 00 00	 DD	 $LN8@AllocateSt
  00128	d0 ff ff ff	 DD	 -48			; ffffffd0H
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN9@AllocateSt
$LN9@AllocateSt:
  00134	63		 DB	 99			; 00000063H
  00135	68		 DB	 104			; 00000068H
  00136	65		 DB	 101			; 00000065H
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	5f		 DB	 95			; 0000005fH
  0013a	63		 DB	 99			; 00000063H
  0013b	6f		 DB	 111			; 0000006fH
  0013c	64		 DB	 100			; 00000064H
  0013d	65		 DB	 101			; 00000065H
  0013e	00		 DB	 0
$LN8@AllocateSt:
  0013f	77		 DB	 119			; 00000077H
  00140	6f		 DB	 111			; 0000006fH
  00141	72		 DB	 114			; 00000072H
  00142	64		 DB	 100			; 00000064H
  00143	5f		 DB	 95			; 0000005fH
  00144	63		 DB	 99			; 00000063H
  00145	6f		 DB	 111			; 0000006fH
  00146	75		 DB	 117			; 00000075H
  00147	6e		 DB	 110			; 0000006eH
  00148	74		 DB	 116			; 00000074H
  00149	00		 DB	 0
$LN7@AllocateSt:
  0014a	6c		 DB	 108			; 0000006cH
  0014b	6f		 DB	 111			; 0000006fH
  0014c	63		 DB	 99			; 00000063H
  0014d	6b		 DB	 107			; 0000006bH
  0014e	5f		 DB	 95			; 0000005fH
  0014f	6f		 DB	 111			; 0000006fH
  00150	62		 DB	 98			; 00000062H
  00151	6a		 DB	 106			; 0000006aH
  00152	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$1:
  00008	6a 18		 push	 24			; 00000018H
  0000a	8b 45 bc	 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBlock
; _this$ = ecx

; 839  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00019	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 840  :         Lock lock_obj;

  00044	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 841  :         __ChainBufferTag* tag = FindTag(buffer);

  00053	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00056	50		 push	 eax
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0005f	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 842  :         if (tag == nullptr)

  00062	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00066	75 20		 jne	 SHORT $LN2@UnlinkBloc

; 843  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkBlock;1");

  00068	68 00 00 00 00	 push	 OFFSET $SG118374
  0006d	68 00 00 00 00	 push	 OFFSET $SG118375
  00072	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00075	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007a	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0007f	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@UnlinkBloc:

; 844  :         tag->Unlink();

  00088	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0008b	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 845  :     }

  00090	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00097	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  0009a	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@UnlinkBloc:
  0009f	52		 push	 edx
  000a0	8b cd		 mov	 ecx, ebp
  000a2	50		 push	 eax
  000a3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@UnlinkBloc
  000a9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ae	58		 pop	 eax
  000af	5a		 pop	 edx
  000b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ba	59		 pop	 ecx
  000bb	5f		 pop	 edi
  000bc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN8@UnlinkBloc:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN7@UnlinkBloc
$LN7@UnlinkBloc:
  000d4	eb ff ff ff	 DD	 -21			; ffffffebH
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN5@UnlinkBloc
$LN5@UnlinkBloc:
  000e0	6c		 DB	 108			; 0000006cH
  000e1	6f		 DB	 111			; 0000006fH
  000e2	63		 DB	 99			; 00000063H
  000e3	6b		 DB	 107			; 0000006bH
  000e4	5f		 DB	 95			; 0000005fH
  000e5	6f		 DB	 111			; 0000006fH
  000e6	62		 DB	 98			; 00000062H
  000e7	6a		 DB	 106			; 0000006aH
  000e8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBlock
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
; _this$ = ecx

; 828  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0001a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00040	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 829  : #ifdef _DEBUG
; 830  :         Lock lock_obj;

  00045	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00048	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 831  :         __ChainBufferTag* tag = FindTag(buffer);

  00054	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00057	50		 push	 eax
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  00060	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 832  :         if (tag == nullptr)

  00063	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00067	75 20		 jne	 SHORT $LN2@CheckBlock

; 833  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::CheckBlock;1");

  00069	68 00 00 00 00	 push	 OFFSET $SG118364
  0006e	68 00 00 00 00	 push	 OFFSET $SG118365
  00073	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00076	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00080	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@CheckBlock:

; 834  :         tag->Check();

  00089	8b 55 e0	 mov	 edx, DWORD PTR _tag$[ebp]
  0008c	8b 02		 mov	 eax, DWORD PTR [edx]
  0008e	8b f4		 mov	 esi, esp
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00093	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00096	ff d2		 call	 edx
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 835  : #endif
; 836  :     }

  0009f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a6	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000a9	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@CheckBlock:
  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@CheckBlock
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
$LN8@CheckBlock:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN7@CheckBlock
$LN7@CheckBlock:
  000e4	eb ff ff ff	 DD	 -21			; ffffffebH
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN5@CheckBlock
$LN5@CheckBlock:
  000f0	6c		 DB	 108			; 0000006cH
  000f1	6f		 DB	 111			; 0000006fH
  000f2	63		 DB	 99			; 00000063H
  000f3	6b		 DB	 107			; 0000006bH
  000f4	5f		 DB	 95			; 0000005fH
  000f5	6f		 DB	 111			; 0000006fH
  000f6	62		 DB	 98			; 00000062H
  000f7	6a		 DB	 106			; 0000006aH
  000f8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv87 = -48						; size = 4
tv86 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
; _this$ = ecx

; 816  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003a	33 c5		 xor	 eax, ebp
  0003c	50		 push	 eax
  0003d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00040	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00046	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0004e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 817  :         Lock lock_obj;

  00053	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00056	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 818  :         __ChainBufferTag* tag = FindTag(buffer);

  00062	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00065	50		 push	 eax
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0006e	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 819  :         if (tag != nullptr)

  00071	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00075	74 57		 je	 SHORT $LN2@Deallocate

; 820  :         {
; 821  :             tag->Unlink();

  00077	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0007a	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 822  :             tag->Destruct();

  0007f	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00082	8b 11		 mov	 edx, DWORD PTR [ecx]
  00084	8b f4		 mov	 esi, esp
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00089	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0008c	ff d0		 call	 eax
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 823  :             delete tag;

  00095	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00098	89 4d d8	 mov	 DWORD PTR $T2[ebp], ecx
  0009b	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  0009e	89 55 dc	 mov	 DWORD PTR $T3[ebp], edx
  000a1	83 7d dc 00	 cmp	 DWORD PTR $T3[ebp], 0
  000a5	74 20		 je	 SHORT $LN4@Deallocate
  000a7	8b 45 dc	 mov	 eax, DWORD PTR $T3[ebp]
  000aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ac	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ae	89 55 d4	 mov	 DWORD PTR tv86[ebp], edx
  000b1	8b f4		 mov	 esi, esp
  000b3	6a 01		 push	 1
  000b5	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  000b8	ff 55 d4	 call	 DWORD PTR tv86[ebp]
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	89 45 d0	 mov	 DWORD PTR tv87[ebp], eax
  000c5	eb 07		 jmp	 SHORT $LN2@Deallocate
$LN4@Deallocate:
  000c7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN2@Deallocate:

; 824  :         }
; 825  :     }

  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d5	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000d8	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000dd	52		 push	 edx
  000de	8b cd		 mov	 ecx, ebp
  000e0	50		 push	 eax
  000e1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Deallocate
  000e7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ec	58		 pop	 eax
  000ed	5a		 pop	 edx
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5e		 pop	 esi
  000fa	83 c4 30	 add	 esp, 48			; 00000030H
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
  0010a	66 90		 npad	 2
$LN10@Deallocate:
  0010c	01 00 00 00	 DD	 1
  00110	00 00 00 00	 DD	 $LN9@Deallocate
$LN9@Deallocate:
  00114	eb ff ff ff	 DD	 -21			; ffffffebH
  00118	01 00 00 00	 DD	 1
  0011c	00 00 00 00	 DD	 $LN7@Deallocate
$LN7@Deallocate:
  00120	6c		 DB	 108			; 0000006cH
  00121	6f		 DB	 111			; 0000006fH
  00122	63		 DB	 99			; 00000063H
  00123	6b		 DB	 107			; 0000006bH
  00124	5f		 DB	 95			; 0000005fH
  00125	6f		 DB	 111			; 0000006fH
  00126	62		 DB	 98			; 00000062H
  00127	6a		 DB	 106			; 0000006aH
  00128	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock
; _this$ = ecx

; 807  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0001a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00040	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 808  :         Lock lock_obj;

  00045	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00048	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 809  :         __ChainBufferTag* tag = FindTag(buffer);

  00054	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00057	50		 push	 eax
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  00060	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 810  :         if (tag == nullptr)

  00063	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00067	75 20		 jne	 SHORT $LN2@ClearBlock

; 811  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::ClearBlock;1");

  00069	68 00 00 00 00	 push	 OFFSET $SG118345
  0006e	68 00 00 00 00	 push	 OFFSET $SG118346
  00073	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00076	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00080	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@ClearBlock:

; 812  :         tag->Clear();

  00089	8b 55 e0	 mov	 edx, DWORD PTR _tag$[ebp]
  0008c	8b 02		 mov	 eax, DWORD PTR [edx]
  0008e	8b f4		 mov	 esi, esp
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00093	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00096	ff d2		 call	 edx
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 813  :     }

  0009f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a6	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000a9	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@ClearBlock:
  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@ClearBlock
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
$LN8@ClearBlock:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN7@ClearBlock
$LN7@ClearBlock:
  000e4	eb ff ff ff	 DD	 -21			; ffffffebH
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN5@ClearBlock
$LN5@ClearBlock:
  000f0	6c		 DB	 108			; 0000006cH
  000f1	6f		 DB	 111			; 0000006fH
  000f2	63		 DB	 99			; 00000063H
  000f3	6b		 DB	 107			; 0000006bH
  000f4	5f		 DB	 95			; 0000005fH
  000f5	6f		 DB	 111			; 0000006fH
  000f6	62		 DB	 98			; 00000062H
  000f7	6a		 DB	 106			; 0000006aH
  000f8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv88 = -76						; size = 4
$T2 = -72						; size = 4
$T3 = -68						; size = 4
$T4 = -64						; size = 4
_tag$ = -60						; size = 4
_buffer$ = -56						; size = 4
_check_code$ = -48					; size = 4
_word_count$ = -36					; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bit_count$ = 8						; size = 4
?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
; _this$ = ecx

; 796  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  00019	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 797  :         Lock lock_obj;

  00044	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 798  :         __UNIT_TYPE word_count;
; 799  :         __UNIT_TYPE check_code;
; 800  :         __UNIT_TYPE* buffer = Palmtree::Math::Core::Internal::AllocateBlock(bit_count, &word_count, &check_code);

  00053	8d 45 d0	 lea	 eax, DWORD PTR _check_code$[ebp]
  00056	50		 push	 eax
  00057	8d 4d dc	 lea	 ecx, DWORD PTR _word_count$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 08	 mov	 edx, DWORD PTR _bit_count$[ebp]
  0005e	52		 push	 edx
  0005f	e8 00 00 00 00	 call	 ?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z ; Palmtree::Math::Core::Internal::AllocateBlock
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	89 45 c8	 mov	 DWORD PTR _buffer$[ebp], eax

; 801  :         __ChainBufferTag* tag = new ____UNIT_TYPE_Array_ChainBufferTag(buffer, word_count, check_code);

  0006a	6a 18		 push	 24			; 00000018H
  0006c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00071	83 c4 04	 add	 esp, 4
  00074	89 45 bc	 mov	 DWORD PTR $T3[ebp], eax
  00077	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007b	83 7d bc 00	 cmp	 DWORD PTR $T3[ebp], 0
  0007f	74 19		 je	 SHORT $LN3@AllocateBl
  00081	8b 45 d0	 mov	 eax, DWORD PTR _check_code$[ebp]
  00084	50		 push	 eax
  00085	8b 4d dc	 mov	 ecx, DWORD PTR _word_count$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 c8	 mov	 edx, DWORD PTR _buffer$[ebp]
  0008c	52		 push	 edx
  0008d	8b 4d bc	 mov	 ecx, DWORD PTR $T3[ebp]
  00090	e8 00 00 00 00	 call	 ??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::____UNIT_TYPE_Array_ChainBufferTag
  00095	89 45 b4	 mov	 DWORD PTR tv88[ebp], eax
  00098	eb 07		 jmp	 SHORT $LN4@AllocateBl
$LN3@AllocateBl:
  0009a	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN4@AllocateBl:
  000a1	8b 45 b4	 mov	 eax, DWORD PTR tv88[ebp]
  000a4	89 45 c0	 mov	 DWORD PTR $T4[ebp], eax
  000a7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000ab	8b 4d c0	 mov	 ecx, DWORD PTR $T4[ebp]
  000ae	89 4d c4	 mov	 DWORD PTR _tag$[ebp], ecx

; 802  :         LinkTag(tag);

  000b1	8b 55 c4	 mov	 edx, DWORD PTR _tag$[ebp]
  000b4	52		 push	 edx
  000b5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag

; 803  :         return (buffer);

  000bd	8b 45 c8	 mov	 eax, DWORD PTR _buffer$[ebp]
  000c0	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  000c3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ca	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000cd	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000d2	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp]

; 804  :     }

  000d5	52		 push	 edx
  000d6	8b cd		 mov	 ecx, ebp
  000d8	50		 push	 eax
  000d9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@AllocateBl
  000df	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e4	58		 pop	 eax
  000e5	5a		 pop	 edx
  000e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f0	59		 pop	 ecx
  000f1	5f		 pop	 edi
  000f2	83 c4 4c	 add	 esp, 76			; 0000004cH
  000f5	3b ec		 cmp	 ebp, esp
  000f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 04 00	 ret	 4
  00102	66 90		 npad	 2
$LN12@AllocateBl:
  00104	03 00 00 00	 DD	 3
  00108	00 00 00 00	 DD	 $LN11@AllocateBl
$LN11@AllocateBl:
  0010c	eb ff ff ff	 DD	 -21			; ffffffebH
  00110	01 00 00 00	 DD	 1
  00114	00 00 00 00	 DD	 $LN7@AllocateBl
  00118	dc ff ff ff	 DD	 -36			; ffffffdcH
  0011c	04 00 00 00	 DD	 4
  00120	00 00 00 00	 DD	 $LN8@AllocateBl
  00124	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00128	04 00 00 00	 DD	 4
  0012c	00 00 00 00	 DD	 $LN9@AllocateBl
$LN9@AllocateBl:
  00130	63		 DB	 99			; 00000063H
  00131	68		 DB	 104			; 00000068H
  00132	65		 DB	 101			; 00000065H
  00133	63		 DB	 99			; 00000063H
  00134	6b		 DB	 107			; 0000006bH
  00135	5f		 DB	 95			; 0000005fH
  00136	63		 DB	 99			; 00000063H
  00137	6f		 DB	 111			; 0000006fH
  00138	64		 DB	 100			; 00000064H
  00139	65		 DB	 101			; 00000065H
  0013a	00		 DB	 0
$LN8@AllocateBl:
  0013b	77		 DB	 119			; 00000077H
  0013c	6f		 DB	 111			; 0000006fH
  0013d	72		 DB	 114			; 00000072H
  0013e	64		 DB	 100			; 00000064H
  0013f	5f		 DB	 95			; 0000005fH
  00140	63		 DB	 99			; 00000063H
  00141	6f		 DB	 111			; 0000006fH
  00142	75		 DB	 117			; 00000075H
  00143	6e		 DB	 110			; 0000006eH
  00144	74		 DB	 116			; 00000074H
  00145	00		 DB	 0
$LN7@AllocateBl:
  00146	6c		 DB	 108			; 0000006cH
  00147	6f		 DB	 111			; 0000006fH
  00148	63		 DB	 99			; 00000063H
  00149	6b		 DB	 107			; 0000006bH
  0014a	5f		 DB	 95			; 0000005fH
  0014b	6f		 DB	 111			; 0000006fH
  0014c	62		 DB	 98			; 00000062H
  0014d	6a		 DB	 106			; 0000006aH
  0014e	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$1:
  00008	6a 18		 push	 24			; 00000018H
  0000a	8b 45 bc	 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 28
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBytes
; _this$ = ecx

; 787  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00019	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 788  :         Lock lock_obj;

  00044	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 789  :         __ChainBufferTag* tag = FindTag(buffer);

  00053	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00056	50		 push	 eax
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0005f	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 790  :         if (tag == nullptr)

  00062	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00066	75 20		 jne	 SHORT $LN2@UnlinkByte

; 791  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkBytes;1");

  00068	68 00 00 00 00	 push	 OFFSET $SG118322
  0006d	68 00 00 00 00	 push	 OFFSET $SG118323
  00072	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00075	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0007a	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0007f	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@UnlinkByte:

; 792  :         tag->Unlink();

  00088	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0008b	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 793  :     }

  00090	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00097	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  0009a	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
$LN3@UnlinkByte:
  0009f	52		 push	 edx
  000a0	8b cd		 mov	 ecx, ebp
  000a2	50		 push	 eax
  000a3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@UnlinkByte
  000a9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ae	58		 pop	 eax
  000af	5a		 pop	 edx
  000b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ba	59		 pop	 ecx
  000bb	5f		 pop	 edi
  000bc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN8@UnlinkByte:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN7@UnlinkByte
$LN7@UnlinkByte:
  000d4	eb ff ff ff	 DD	 -21			; ffffffebH
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN5@UnlinkByte
$LN5@UnlinkByte:
  000e0	6c		 DB	 108			; 0000006cH
  000e1	6f		 DB	 111			; 0000006fH
  000e2	63		 DB	 99			; 00000063H
  000e3	6b		 DB	 107			; 0000006bH
  000e4	5f		 DB	 95			; 0000005fH
  000e5	6f		 DB	 111			; 0000006fH
  000e6	62		 DB	 98			; 00000062H
  000e7	6a		 DB	 106			; 0000006aH
  000e8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBytes
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv87 = -48						; size = 4
tv86 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_tag$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBytes
; _this$ = ecx

; 775  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003a	33 c5		 xor	 eax, ebp
  0003c	50		 push	 eax
  0003d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00040	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00046	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0004e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 776  :         Lock lock_obj;

  00053	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00056	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 777  :         __ChainBufferTag* tag = FindTag(buffer);

  00062	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00065	50		 push	 eax
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
  0006e	89 45 e0	 mov	 DWORD PTR _tag$[ebp], eax

; 778  :         if (tag != nullptr)

  00071	83 7d e0 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00075	74 57		 je	 SHORT $LN2@Deallocate

; 779  :         {
; 780  :             tag->Unlink();

  00077	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  0007a	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 781  :             tag->Destruct();

  0007f	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00082	8b 11		 mov	 edx, DWORD PTR [ecx]
  00084	8b f4		 mov	 esi, esp
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00089	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0008c	ff d0		 call	 eax
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 782  :             delete tag;

  00095	8b 4d e0	 mov	 ecx, DWORD PTR _tag$[ebp]
  00098	89 4d d8	 mov	 DWORD PTR $T2[ebp], ecx
  0009b	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  0009e	89 55 dc	 mov	 DWORD PTR $T3[ebp], edx
  000a1	83 7d dc 00	 cmp	 DWORD PTR $T3[ebp], 0
  000a5	74 20		 je	 SHORT $LN4@Deallocate
  000a7	8b 45 dc	 mov	 eax, DWORD PTR $T3[ebp]
  000aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ac	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ae	89 55 d4	 mov	 DWORD PTR tv86[ebp], edx
  000b1	8b f4		 mov	 esi, esp
  000b3	6a 01		 push	 1
  000b5	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  000b8	ff 55 d4	 call	 DWORD PTR tv86[ebp]
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	89 45 d0	 mov	 DWORD PTR tv87[ebp], eax
  000c5	eb 07		 jmp	 SHORT $LN2@Deallocate
$LN4@Deallocate:
  000c7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN2@Deallocate:

; 783  :         }
; 784  :     }

  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d5	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000d8	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000dd	52		 push	 edx
  000de	8b cd		 mov	 ecx, ebp
  000e0	50		 push	 eax
  000e1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Deallocate
  000e7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ec	58		 pop	 eax
  000ed	5a		 pop	 edx
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5e		 pop	 esi
  000fa	83 c4 30	 add	 esp, 48			; 00000030H
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
  0010a	66 90		 npad	 2
$LN10@Deallocate:
  0010c	01 00 00 00	 DD	 1
  00110	00 00 00 00	 DD	 $LN9@Deallocate
$LN9@Deallocate:
  00114	eb ff ff ff	 DD	 -21			; ffffffebH
  00118	01 00 00 00	 DD	 1
  0011c	00 00 00 00	 DD	 $LN7@Deallocate
$LN7@Deallocate:
  00120	6c		 DB	 108			; 0000006cH
  00121	6f		 DB	 111			; 0000006fH
  00122	63		 DB	 99			; 00000063H
  00123	6b		 DB	 107			; 0000006bH
  00124	5f		 DB	 95			; 0000005fH
  00125	6f		 DB	 111			; 0000006fH
  00126	62		 DB	 98			; 00000062H
  00127	6a		 DB	 106			; 0000006aH
  00128	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBytes
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv94 = -76						; size = 4
$T2 = -72						; size = 4
$T3 = -68						; size = 4
$T4 = -64						; size = 4
$T5 = -60						; size = 24
_tag$ = -36						; size = 4
_buffer$ = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_size$ = 8						; size = 4
?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBytes
; _this$ = ecx

; 759  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0001a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00040	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 760  :         Lock lock_obj;

  00045	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00048	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 761  :         void* buffer = HeapAlloc(hLocalHeap, HEAP_ZERO_MEMORY, size);

  00054	8b f4		 mov	 esi, esp
  00056	8b 45 08	 mov	 eax, DWORD PTR _size$[ebp]
  00059	50		 push	 eax
  0005a	6a 08		 push	 8
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00062	51		 push	 ecx
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	89 45 e0	 mov	 DWORD PTR _buffer$[ebp], eax

; 762  :         if (buffer == nullptr)

  00073	83 7d e0 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  00077	75 1b		 jne	 SHORT $LN2@AllocateBy

; 763  :             throw NotEnoughMemoryException(L"ヒープメモリ領域が不足しています。");

  00079	68 00 00 00 00	 push	 OFFSET $SG118302
  0007e	8d 4d c4	 lea	 ecx, DWORD PTR $T5[ebp]
  00081	e8 00 00 00 00	 call	 ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
  00086	68 00 00 00 00	 push	 OFFSET __TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
  0008b	8d 55 c4	 lea	 edx, DWORD PTR $T5[ebp]
  0008e	52		 push	 edx
  0008f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@AllocateBy:

; 764  : #ifdef _LOG_MEMORY
; 765  :         {
; 766  :             wprintf(L"0x%08lx: new header 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)buffer);
; 767  :         }
; 768  :         #endif
; 769  :         __ChainBufferTag* tag = new __GenericChainBufferTag(buffer);

  00094	6a 10		 push	 16			; 00000010H
  00096	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009b	83 c4 04	 add	 esp, 4
  0009e	89 45 bc	 mov	 DWORD PTR $T3[ebp], eax
  000a1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a5	83 7d bc 00	 cmp	 DWORD PTR $T3[ebp], 0
  000a9	74 11		 je	 SHORT $LN4@AllocateBy
  000ab	8b 45 e0	 mov	 eax, DWORD PTR _buffer$[ebp]
  000ae	50		 push	 eax
  000af	8b 4d bc	 mov	 ecx, DWORD PTR $T3[ebp]
  000b2	e8 00 00 00 00	 call	 ??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::__GenericChainBufferTag
  000b7	89 45 b4	 mov	 DWORD PTR tv94[ebp], eax
  000ba	eb 07		 jmp	 SHORT $LN5@AllocateBy
$LN4@AllocateBy:
  000bc	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN5@AllocateBy:
  000c3	8b 4d b4	 mov	 ecx, DWORD PTR tv94[ebp]
  000c6	89 4d c0	 mov	 DWORD PTR $T4[ebp], ecx
  000c9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000cd	8b 55 c0	 mov	 edx, DWORD PTR $T4[ebp]
  000d0	89 55 dc	 mov	 DWORD PTR _tag$[ebp], edx

; 770  :         LinkTag(tag);

  000d3	8b 45 dc	 mov	 eax, DWORD PTR _tag$[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	e8 00 00 00 00	 call	 ?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag

; 771  :         return (buffer);

  000df	8b 4d e0	 mov	 ecx, DWORD PTR _buffer$[ebp]
  000e2	89 4d b8	 mov	 DWORD PTR $T2[ebp], ecx
  000e5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ec	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000ef	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000f4	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp]
$LN3@AllocateBy:

; 772  :     }

  000f7	52		 push	 edx
  000f8	8b cd		 mov	 ecx, ebp
  000fa	50		 push	 eax
  000fb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@AllocateBy
  00101	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00106	58		 pop	 eax
  00107	5a		 pop	 edx
  00108	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00112	59		 pop	 ecx
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	83 c4 4c	 add	 esp, 76			; 0000004cH
  00118	3b ec		 cmp	 ebp, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c2 04 00	 ret	 4
  00125	0f 1f 00	 npad	 3
$LN11@AllocateBy:
  00128	01 00 00 00	 DD	 1
  0012c	00 00 00 00	 DD	 $LN10@AllocateBy
$LN10@AllocateBy:
  00130	eb ff ff ff	 DD	 -21			; ffffffebH
  00134	01 00 00 00	 DD	 1
  00138	00 00 00 00	 DD	 $LN8@AllocateBy
$LN8@AllocateBy:
  0013c	6c		 DB	 108			; 0000006cH
  0013d	6f		 DB	 111			; 0000006fH
  0013e	63		 DB	 99			; 00000063H
  0013f	6b		 DB	 107			; 0000006bH
  00140	5f		 DB	 95			; 0000005fH
  00141	6f		 DB	 111			; 0000006fH
  00142	62		 DB	 98			; 00000062H
  00143	6a		 DB	 106			; 0000006aH
  00144	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$1:
  00008	6a 10		 push	 16			; 00000010H
  0000a	8b 45 bc	 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBytes
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
; _this$ = ecx

; 755  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 756  :     }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__ehhandler$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
; _this$ = ecx

; 751  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::ResourceHolder
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 752  :     }

  0004f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00056	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00063	59		 pop	 ecx
  00064	83 c4 10	 add	 esp, 16			; 00000010H
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__ehhandler$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::~__StaticNumberChainBufferTag
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 10		 push	 16			; 00000010H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Destruct
; _this$ = ecx

; 746  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 747  :         DetatchNumber(_buffer);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?DetatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::DetatchNumber
  00024	83 c4 04	 add	 esp, 4

; 748  :     }

  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Check
; _this$ = ecx

; 742  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 743  :     }

  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::EqualsBufferAddress
; _this$ = ecx

; 737  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 738  :         return ((void*)_buffer == buffer);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0002a	75 09		 jne	 SHORT $LN3@EqualsBuff
  0002c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00033	eb 07		 jmp	 SHORT $LN4@EqualsBuff
$LN3@EqualsBuff:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@EqualsBuff:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]

; 739  :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::~__StaticNumberChainBufferTag
; _this$ = ecx

; 733  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 734  :     }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::~__StaticNumberChainBufferTag
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::__StaticNumberChainBufferTag
; _this$ = ecx

; 728  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 729  :         _buffer = buffer;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 730  :     }

  00058	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::__StaticNumberChainBufferTag
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::~__NumberHandleHookingChainBufferTag
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 10		 push	 16			; 00000010H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Destruct
; _this$ = ecx

; 723  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 724  :        Palmtree::Math::Core::Internal::DeallocateNumber(_buffer);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::DeallocateNumber
  00024	83 c4 04	 add	 esp, 4

; 725  :     }

  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Check
; _this$ = ecx

; 719  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 720  :     }

  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::EqualsBufferAddress
; _this$ = ecx

; 714  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 715  :         return ((void*)_buffer == buffer);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0002a	75 09		 jne	 SHORT $LN3@EqualsBuff
  0002c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00033	eb 07		 jmp	 SHORT $LN4@EqualsBuff
$LN3@EqualsBuff:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@EqualsBuff:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]

; 716  :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::~__NumberHandleHookingChainBufferTag
; _this$ = ecx

; 710  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 711  :     }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::~__NumberHandleHookingChainBufferTag
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::__NumberHandleHookingChainBufferTag
; _this$ = ecx

; 705  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 706  :         _buffer = buffer;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 707  :     }

  00058	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::__NumberHandleHookingChainBufferTag
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::~__DynamicNumberChainBufferTag
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 10		 push	 16			; 00000010H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Destruct
; _this$ = ecx

; 700  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 701  :         Palmtree::Math::Core::Internal::DeallocateNumber(_buffer);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::DeallocateNumber
  00024	83 c4 04	 add	 esp, 4

; 702  :     }

  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Check
; _this$ = ecx

; 695  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 696  :         Palmtree::Math::Core::Internal::CheckNumber(_buffer);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00024	83 c4 04	 add	 esp, 4

; 697  :     }

  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::EqualsBufferAddress
; _this$ = ecx

; 690  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 691  :         return ((void*)_buffer == buffer);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0002a	75 09		 jne	 SHORT $LN3@EqualsBuff
  0002c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00033	eb 07		 jmp	 SHORT $LN4@EqualsBuff
$LN3@EqualsBuff:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@EqualsBuff:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]

; 692  :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::~__DynamicNumberChainBufferTag
; _this$ = ecx

; 686  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 687  :     }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::~__DynamicNumberChainBufferTag
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::__DynamicNumberChainBufferTag
; _this$ = ecx

; 681  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 682  :         _buffer = buffer;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 683  :     }

  00058	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::__DynamicNumberChainBufferTag
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::~__StringChainBufferTag
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Destruct
; _this$ = ecx

; 676  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 677  :         Palmtree::Math::Core::Internal::DeallocateBlock(_buffer, _word_count, _check_code);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?DeallocateBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::DeallocateBlock
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 678  :     }

  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Check
; _this$ = ecx

; 671  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 672  :         Palmtree::Math::Core::Internal::CheckBlock(_buffer, _word_count, _check_code);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::CheckBlock
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 673  :     }

  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Clear
; _this$ = ecx

; 666  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 667  :         _ZERO_MEMORY_UNIT(_buffer, _word_count);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 __ZERO_MEMORY_UNIT
  0002b	83 c4 08	 add	 esp, 8

; 668  :     }

  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::EqualsBufferAddress
; _this$ = ecx

; 661  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 662  :         return ((void*)_buffer == buffer);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0002a	75 09		 jne	 SHORT $LN3@EqualsBuff
  0002c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00033	eb 07		 jmp	 SHORT $LN4@EqualsBuff
$LN3@EqualsBuff:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@EqualsBuff:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]

; 663  :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::~__StringChainBufferTag
; _this$ = ecx

; 657  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 658  :     }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::~__StringChainBufferTag
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
_word_count$ = 12					; size = 4
_check_code$ = 16					; size = 4
??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::__StringChainBufferTag
; _this$ = ecx

; 650  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 651  :         _buffer = buffer;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 652  :         _word_count = word_count;

  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _word_count$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 653  :         _check_code = check_code;

  00061	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 45 10	 mov	 eax, DWORD PTR _check_code$[ebp]
  00067	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 654  :     }

  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::__StringChainBufferTag
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::~____UNIT_TYPE_Array_ChainBufferTag
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Destruct
; _this$ = ecx

; 645  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 646  :         Palmtree::Math::Core::Internal::DeallocateBlock(_buffer, _word_count, _check_code);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?DeallocateBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::DeallocateBlock
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 647  :     }

  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Check
; _this$ = ecx

; 640  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 641  :         Palmtree::Math::Core::Internal::CheckBlock(_buffer, _word_count, _check_code);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::CheckBlock
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 642  :     }

  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Clear
; _this$ = ecx

; 635  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 636  :         _ZERO_MEMORY_UNIT(_buffer, _word_count);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 __ZERO_MEMORY_UNIT
  0002b	83 c4 08	 add	 esp, 8

; 637  :     }

  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::EqualsBufferAddress
; _this$ = ecx

; 630  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 631  :         return ((void*)_buffer == buffer);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0002a	75 09		 jne	 SHORT $LN3@EqualsBuff
  0002c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00033	eb 07		 jmp	 SHORT $LN4@EqualsBuff
$LN3@EqualsBuff:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@EqualsBuff:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]

; 632  :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::~____UNIT_TYPE_Array_ChainBufferTag
; _this$ = ecx

; 626  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 627  :     }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::~____UNIT_TYPE_Array_ChainBufferTag
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
_word_count$ = 12					; size = 4
_check_code$ = 16					; size = 4
??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::____UNIT_TYPE_Array_ChainBufferTag
; _this$ = ecx

; 619  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 620  :         _buffer = buffer;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 621  :         _word_count = word_count;

  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _word_count$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 622  :         _check_code = check_code;

  00061	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 45 10	 mov	 eax, DWORD PTR _check_code$[ebp]
  00067	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 623  :     }

  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::____UNIT_TYPE_Array_ChainBufferTag
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::~__GenericChainBufferTag
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 10		 push	 16			; 00000010H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::Destruct
; _this$ = ecx

; 609  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00014	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 610  :         HeapFree(hLocalHeap, 0, _buffer);

  00019	8b f4		 mov	 esi, esp
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00021	51		 push	 ecx
  00022	6a 00		 push	 0
  00024	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0002a	52		 push	 edx
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 611  : #ifdef _LOG_MEMORY
; 612  :         {
; 613  :             wprintf(L"0x%08lx: delete header 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)_buffer);
; 614  :         }
; 615  : #endif
; 616  :     }

  00038	5e		 pop	 esi
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::EqualsBufferAddress
; _this$ = ecx

; 604  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 605  :         return ((void*)_buffer == buffer);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0002a	75 09		 jne	 SHORT $LN3@EqualsBuff
  0002c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00033	eb 07		 jmp	 SHORT $LN4@EqualsBuff
$LN3@EqualsBuff:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@EqualsBuff:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]

; 606  :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::~__GenericChainBufferTag
; _this$ = ecx

; 600  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 601  :     }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::~__GenericChainBufferTag
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::__GenericChainBufferTag
; _this$ = ecx

; 595  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 596  :         _buffer = buffer;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 597  :     }

  00058	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::__GenericChainBufferTag
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 10		 push	 16			; 00000010H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z
_TEXT	SEGMENT
tv85 = -12						; size = 4
_tag$1 = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag, COMDAT
; _this$ = ecx

; 160  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00024	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	83 c1 04	 add	 ecx, 4
  0002f	e8 00 00 00 00	 call	 ?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next
  00034	89 45 f8	 mov	 DWORD PTR _tag$1[ebp], eax
  00037	eb 0b		 jmp	 SHORT $LN4@FindTag
$LN2@FindTag:
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _tag$1[ebp]
  0003c	e8 00 00 00 00	 call	 ?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next
  00041	89 45 f8	 mov	 DWORD PTR _tag$1[ebp], eax
$LN4@FindTag:
  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	83 c0 04	 add	 eax, 4
  0004a	39 45 f8	 cmp	 DWORD PTR _tag$1[ebp], eax
  0004d	74 29		 je	 SHORT $LN3@FindTag

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _tag$1[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00057	89 45 f4	 mov	 DWORD PTR tv85[ebp], eax
  0005a	8b f4		 mov	 esi, esp
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0005f	51		 push	 ecx
  00060	8b 4d f8	 mov	 ecx, DWORD PTR _tag$1[ebp]
  00063	ff 55 f4	 call	 DWORD PTR tv85[ebp]
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	85 c0		 test	 eax, eax
  0006f	74 05		 je	 SHORT $LN5@FindTag

; 164  :                     return (tag);

  00071	8b 45 f8	 mov	 eax, DWORD PTR _tag$1[ebp]
  00074	eb 04		 jmp	 SHORT $LN1@FindTag
$LN5@FindTag:

; 165  :             }

  00076	eb c1		 jmp	 SHORT $LN2@FindTag
$LN3@FindTag:

; 166  :             return (nullptr);

  00078	33 c0		 xor	 eax, eax
$LN1@FindTag:

; 167  :         }

  0007a	5e		 pop	 esi
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_tag$ = 8						; size = 4
?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag, COMDAT
; _this$ = ecx

; 155  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 156  :             _root_tag.Link(tag);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c0 04	 add	 eax, 4
  00027	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR tv72[ebp]
  00031	e8 00 00 00 00	 call	 ?Link@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXPAV123456@@Z ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Link

; 157  :         }

  00036	83 c4 08	 add	 esp, 8
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
tv134 = -48						; size = 4
tv133 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_tag$4 = -32						; size = 4
_lock_obj$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder, COMDAT
; _this$ = ecx

; 142  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003a	33 c5		 xor	 eax, ebp
  0003c	50		 push	 eax
  0003d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00040	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00046	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  0004e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00053	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 143  :             Lock lock_obj;

  00063	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00066	e8 00 00 00 00	 call	 ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::Lock
  0006b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
$LN2@ResourceHo:

; 144  :             while (_root_tag.Next() != &_root_tag)

  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	83 c1 04	 add	 ecx, 4
  00075	e8 00 00 00 00	 call	 ?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	83 c1 04	 add	 ecx, 4
  00080	3b c1		 cmp	 eax, ecx
  00082	74 67		 je	 SHORT $LN3@ResourceHo

; 145  :             {
; 146  :                 __ChainBufferTag* tag = _root_tag.Next();

  00084	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	83 c1 04	 add	 ecx, 4
  0008a	e8 00 00 00 00	 call	 ?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next
  0008f	89 45 e0	 mov	 DWORD PTR _tag$4[ebp], eax

; 147  :                 tag->Unlink();

  00092	8b 4d e0	 mov	 ecx, DWORD PTR _tag$4[ebp]
  00095	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 148  :                 tag->Destruct();

  0009a	8b 55 e0	 mov	 edx, DWORD PTR _tag$4[ebp]
  0009d	8b 02		 mov	 eax, DWORD PTR [edx]
  0009f	8b f4		 mov	 esi, esp
  000a1	8b 4d e0	 mov	 ecx, DWORD PTR _tag$4[ebp]
  000a4	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000a7	ff d2		 call	 edx
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 149  :                 delete tag;

  000b0	8b 45 e0	 mov	 eax, DWORD PTR _tag$4[ebp]
  000b3	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  000b6	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
  000b9	89 4d dc	 mov	 DWORD PTR $T3[ebp], ecx
  000bc	83 7d dc 00	 cmp	 DWORD PTR $T3[ebp], 0
  000c0	74 20		 je	 SHORT $LN5@ResourceHo
  000c2	8b 55 dc	 mov	 edx, DWORD PTR $T3[ebp]
  000c5	8b 02		 mov	 eax, DWORD PTR [edx]
  000c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c9	89 4d d4	 mov	 DWORD PTR tv133[ebp], ecx
  000cc	8b f4		 mov	 esi, esp
  000ce	6a 01		 push	 1
  000d0	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  000d3	ff 55 d4	 call	 DWORD PTR tv133[ebp]
  000d6	3b f4		 cmp	 esi, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dd	89 45 d0	 mov	 DWORD PTR tv134[ebp], eax
  000e0	eb 07		 jmp	 SHORT $LN6@ResourceHo
$LN5@ResourceHo:
  000e2	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN6@ResourceHo:

; 150  :             }

  000e9	eb 84		 jmp	 SHORT $LN2@ResourceHo
$LN3@ResourceHo:

; 151  :         }

  000eb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000ef	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  000f2	e8 00 00 00 00	 call	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
  000f7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	83 c1 04	 add	 ecx, 4
  00104	e8 00 00 00 00	 call	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
  00109	52		 push	 edx
  0010a	8b cd		 mov	 ecx, ebp
  0010c	50		 push	 eax
  0010d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@ResourceHo
  00113	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00118	58		 pop	 eax
  00119	5a		 pop	 edx
  0011a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00124	59		 pop	 ecx
  00125	5e		 pop	 esi
  00126	83 c4 30	 add	 esp, 48			; 00000030H
  00129	3b ec		 cmp	 ebp, esp
  0012b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
$LN12@ResourceHo:
  00134	01 00 00 00	 DD	 1
  00138	00 00 00 00	 DD	 $LN11@ResourceHo
$LN11@ResourceHo:
  0013c	eb ff ff ff	 DD	 -21			; ffffffebH
  00140	01 00 00 00	 DD	 1
  00144	00 00 00 00	 DD	 $LN9@ResourceHo
$LN9@ResourceHo:
  00148	6c		 DB	 108			; 0000006cH
  00149	6f		 DB	 111			; 0000006fH
  0014a	63		 DB	 99			; 00000063H
  0014b	6b		 DB	 107			; 0000006bH
  0014c	5f		 DB	 95			; 0000005fH
  0014d	6f		 DB	 111			; 0000006fH
  0014e	62		 DB	 98			; 00000062H
  0014f	6a		 DB	 106			; 0000006aH
  00150	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  0000b	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::ResourceHolder, COMDAT
; _this$ = ecx

; 136  :         ResourceHolder()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 04	 add	 ecx, 4
  00046	e8 00 00 00 00	 call	 ??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::__RootTag
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 137  :         {
; 138  :         }

  00052	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00059	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	83 c4 10	 add	 esp, 16			; 00000010H
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
__ehhandler$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::ResourceHolder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::Destruct, COMDAT
; _this$ = ecx

; 128  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 129  :             }

  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::Destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z
_TEXT	SEGMENT
$T1 = -28						; size = 24
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::EqualsBufferAddress, COMDAT
; _this$ = ecx

; 123  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 124  :                 throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_resourceholder.h;ResourceHolder::__RootTag::EqualsBufferAddress;1");

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LGDAALAB@?$AAp?$AAm?$AAc?$AA_?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAh?$AAo?$AAl@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  00037	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0003f	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00044	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@EqualsBuff:

; 125  :             }

  0004d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag, COMDAT
; _this$ = ecx

; 119  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 120  :             }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::__RootTag, COMDAT
; _this$ = ecx

; 114  :             __RootTag()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 115  :             {
; 116  :             }

  0004f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00056	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00063	59		 pop	 ecx
  00064	83 c4 10	 add	 esp, 16			; 00000010H
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::__RootTag
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Check, COMDAT
; _this$ = ecx

; 104  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 105  :             }

  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Clear, COMDAT
; _this$ = ecx

; 100  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 101  :             }

  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next, COMDAT
; _this$ = ecx

; 88   :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 89   :                 return (_next);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 90   :             }

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink, COMDAT
; _this$ = ecx

; 77   :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 78   :                 if (_next != this)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	3b 4d fc	 cmp	 ecx, DWORD PTR _this$[ebp]
  00021	74 30		 je	 SHORT $LN1@Unlink

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 81   :                     _prev->_next = _next;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 83   :                     _prev = this;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@Unlink:

; 84   :                 }
; 85   :             }

  00053	83 c4 04	 add	 esp, 4
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Link@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXPAV123456@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_tag$ = 8						; size = 4
?Link@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXPAV123456@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Link, COMDAT
; _this$ = ecx

; 69   :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 70   :                 tag->_next = _next;

  00018	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 71   :                 tag->_prev = this;

  00024	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 72   :                 tag->_next->_prev = tag;

  0002d	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  00030	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  00036	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 73   :                 tag->_prev->_next = tag;

  00039	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  0003c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  00042	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 74   :             }

  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?Link@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXPAV123456@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Link
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag, COMDAT
; _this$ = ecx

; 64   :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 65   :                 Unlink();

  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink

; 66   :             }

  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00052	59		 pop	 ecx
  00053	83 c4 10	 add	 esp, 16			; 00000010H
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag, COMDAT
; _this$ = ecx

; 57   :             __ChainBufferTag()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1AB12E38_pmc_resourceholder@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 60   :                 _prev = this;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 61   :             }

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ PROC	; Palmtree::Math::Core::Internal::Lock::~Lock
; _this$ = ecx

; 590  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00033	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 591  :         LeaveCriticalSection(&mcs);

  00038	8b f4		 mov	 esi, esp
  0003a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 592  :     }

  0004c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00056	59		 pop	 ecx
  00057	5e		 pop	 esi
  00058	83 c4 10	 add	 esp, 16			; 00000010H
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ENDP	; Palmtree::Math::Core::Internal::Lock::~Lock
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ PROC	; Palmtree::Math::Core::Internal::Lock::Lock
; _this$ = ecx

; 585  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00014	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 586  :         EnterCriticalSection(&mcs);

  00019	8b f4		 mov	 esi, esp
  0001b	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
  00026	3b f4		 cmp	 esi, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 587  :     }

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5e		 pop	 esi
  00031	83 c4 04	 add	 esp, 4
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ENDP	; Palmtree::Math::Core::Internal::Lock::Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T1 = -92						; size = 24
$T2 = -68						; size = 24
$T3 = -44						; size = 24
_result$ = -20						; size = 4
_size$ = -12						; size = 8
?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ PROC ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize

; 1041 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  0000b	b9 17 00 00 00	 mov	 ecx, 23			; 00000017H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1042 :         if (!HeapLock(hLocalHeap))

  00021	8b f4		 mov	 esi, esp
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapLock@4
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	85 c0		 test	 eax, eax
  00038	75 20		 jne	 SHORT $LN2@PMC_GetAll

; 1043 :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_memory.cpp;GetAllocatedMemorySize;1");

  0003a	68 00 00 00 00	 push	 OFFSET $SG118532
  0003f	68 00 00 00 00	 push	 OFFSET $SG118533
  00044	8d 4d d4	 lea	 ecx, DWORD PTR $T3[ebp]
  00047	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0004c	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00051	8d 4d d4	 lea	 ecx, DWORD PTR $T3[ebp]
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_GetAll:

; 1044 :         _UINT64_T size;
; 1045 :         BOOL result = GetAllocatedMemorySize_Imp(&size);

  0005a	8d 55 f4	 lea	 edx, DWORD PTR _size$[ebp]
  0005d	52		 push	 edx
  0005e	e8 00 00 00 00	 call	 ?GetAllocatedMemorySize_Imp@Internal@Core@Math@Palmtree@@YAHPA_K@Z ; Palmtree::Math::Core::Internal::GetAllocatedMemorySize_Imp
  00063	83 c4 04	 add	 esp, 4
  00066	89 45 ec	 mov	 DWORD PTR _result$[ebp], eax

; 1046 :         if (!HeapUnlock(hLocalHeap))

  00069	8b f4		 mov	 esi, esp
  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00070	50		 push	 eax
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapUnlock@4
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	85 c0		 test	 eax, eax
  00080	75 20		 jne	 SHORT $LN3@PMC_GetAll

; 1047 :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_memory.cpp;GetAllocatedMemorySize;2");

  00082	68 00 00 00 00	 push	 OFFSET $SG118536
  00087	68 00 00 00 00	 push	 OFFSET $SG118537
  0008c	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  0008f	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00094	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00099	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_GetAll:

; 1048 :         if (!result)

  000a2	83 7d ec 00	 cmp	 DWORD PTR _result$[ebp], 0
  000a6	75 20		 jne	 SHORT $LN4@PMC_GetAll

; 1049 :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_memory.cpp;GetAllocatedMemorySize;3");

  000a8	68 00 00 00 00	 push	 OFFSET $SG118540
  000ad	68 00 00 00 00	 push	 OFFSET $SG118541
  000b2	8d 4d a4	 lea	 ecx, DWORD PTR $T1[ebp]
  000b5	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000ba	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000bf	8d 55 a4	 lea	 edx, DWORD PTR $T1[ebp]
  000c2	52		 push	 edx
  000c3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_GetAll:

; 1050 :         return (size);

  000c8	8b 45 f4	 mov	 eax, DWORD PTR _size$[ebp]
  000cb	8b 55 f8	 mov	 edx, DWORD PTR _size$[ebp+4]
$LN5@PMC_GetAll:

; 1051 :     }

  000ce	52		 push	 edx
  000cf	8b cd		 mov	 ecx, ebp
  000d1	50		 push	 eax
  000d2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@PMC_GetAll
  000d8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000dd	58		 pop	 eax
  000de	5a		 pop	 edx
  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	83 c4 5c	 add	 esp, 92			; 0000005cH
  000e4	3b ec		 cmp	 ebp, esp
  000e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c3		 ret	 0
  000ef	90		 npad	 1
$LN8@PMC_GetAll:
  000f0	01 00 00 00	 DD	 1
  000f4	00 00 00 00	 DD	 $LN7@PMC_GetAll
$LN7@PMC_GetAll:
  000f8	f4 ff ff ff	 DD	 -12			; fffffff4H
  000fc	08 00 00 00	 DD	 8
  00100	00 00 00 00	 DD	 $LN6@PMC_GetAll
$LN6@PMC_GetAll:
  00104	73		 DB	 115			; 00000073H
  00105	69		 DB	 105			; 00000069H
  00106	7a		 DB	 122			; 0000007aH
  00107	65		 DB	 101			; 00000065H
  00108	00		 DB	 0
?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ ENDP ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -72						; size = 4
$T3 = -68						; size = 24
_no$ = -44						; size = 4
_root$ = -36						; size = 16
_nx$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_x$ = 8							; size = 4
?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Clone_X

; 562  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	57		 push	 edi
  00015	8d 7d b8	 lea	 edi, DWORD PTR [ebp-72]
  00018	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 563  :         if (x == nullptr)

  0003f	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00043	75 20		 jne	 SHORT $LN2@PMC_Clone_

; 564  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"x");

  00045	68 00 00 00 00	 push	 OFFSET $SG118131
  0004a	68 00 00 00 00	 push	 OFFSET $SG118132
  0004f	8d 4d bc	 lea	 ecx, DWORD PTR $T3[ebp]
  00052	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00057	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0005c	8d 45 bc	 lea	 eax, DWORD PTR $T3[ebp]
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Clone_:

; 565  :         NUMBER_HEADER* nx = (NUMBER_HEADER*)x;

  00065	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00068	89 4d f0	 mov	 DWORD PTR _nx$[ebp], ecx

; 566  :         CheckNumber(nx);

  0006b	8b 55 f0	 mov	 edx, DWORD PTR _nx$[ebp]
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00074	83 c4 04	 add	 esp, 4

; 567  :         ResourceHolderUINT root;

  00077	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  0007a	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0007f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 568  :         NUMBER_HEADER* no;
; 569  :         if (nx->IS_ZERO)

  00086	8b 45 f0	 mov	 eax, DWORD PTR _nx$[ebp]
  00089	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008c	83 e1 01	 and	 ecx, 1
  0008f	74 09		 je	 SHORT $LN3@PMC_Clone_

; 570  :             no = &number_zero;

  00091	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _no$[ebp], OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 571  :         else

  00098	eb 0f		 jmp	 SHORT $LN4@PMC_Clone_
$LN3@PMC_Clone_:

; 572  :             no = DuplicateNumber(nx);

  0009a	8b 55 f0	 mov	 edx, DWORD PTR _nx$[ebp]
  0009d	52		 push	 edx
  0009e	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000a3	83 c4 04	 add	 esp, 4
  000a6	89 45 d4	 mov	 DWORD PTR _no$[ebp], eax
$LN4@PMC_Clone_:

; 573  :         root.HookNumber(no);

  000a9	8b 45 d4	 mov	 eax, DWORD PTR _no$[ebp]
  000ac	50		 push	 eax
  000ad	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  000b0	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 574  : #ifdef _DEBUG
; 575  :         CheckNumber(no);

  000b5	8b 4d d4	 mov	 ecx, DWORD PTR _no$[ebp]
  000b8	51		 push	 ecx
  000b9	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  000be	83 c4 04	 add	 esp, 4

; 576  : #endif
; 577  :         root.UnlinkNumber(no);

  000c1	8b 55 d4	 mov	 edx, DWORD PTR _no$[ebp]
  000c4	52		 push	 edx
  000c5	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  000c8	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 578  :         return ((PMC_HANDLE_UINT)no);

  000cd	8b 45 d4	 mov	 eax, DWORD PTR _no$[ebp]
  000d0	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  000d3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000da	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  000dd	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000e2	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp]
$LN5@PMC_Clone_:

; 579  :     }

  000e5	52		 push	 edx
  000e6	8b cd		 mov	 ecx, ebp
  000e8	50		 push	 eax
  000e9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@PMC_Clone_
  000ef	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f4	58		 pop	 eax
  000f5	5a		 pop	 edx
  000f6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00100	59		 pop	 ecx
  00101	5f		 pop	 edi
  00102	83 c4 48	 add	 esp, 72			; 00000048H
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 04 00	 ret	 4
  00112	66 90		 npad	 2
$LN10@PMC_Clone_:
  00114	01 00 00 00	 DD	 1
  00118	00 00 00 00	 DD	 $LN9@PMC_Clone_
$LN9@PMC_Clone_:
  0011c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00120	10 00 00 00	 DD	 16			; 00000010H
  00124	00 00 00 00	 DD	 $LN7@PMC_Clone_
$LN7@PMC_Clone_:
  00128	72		 DB	 114			; 00000072H
  00129	6f		 DB	 111			; 0000006fH
  0012a	6f		 DB	 111			; 0000006fH
  0012b	74		 DB	 116			; 00000074H
  0012c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Clone_X
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv64 = -28						; size = 4
$T1 = -24						; size = 24
_type$ = 8						; size = 4
?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z PROC ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I

; 542  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00025	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 543  :         switch (type)

  0002a	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0002d	89 45 e4	 mov	 DWORD PTR tv64[ebp], eax
  00030	83 7d e4 01	 cmp	 DWORD PTR tv64[ebp], 1
  00034	74 08		 je	 SHORT $LN4@PMC_GetCon
  00036	83 7d e4 02	 cmp	 DWORD PTR tv64[ebp], 2
  0003a	74 09		 je	 SHORT $LN5@PMC_GetCon
  0003c	eb 0e		 jmp	 SHORT $LN6@PMC_GetCon
$LN4@PMC_GetCon:

; 544  :         {
; 545  :         case PMC_CONSTANT_ZERO:
; 546  :             return ((PMC_HANDLE_UINT)&number_zero);

  0003e	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00043	eb 22		 jmp	 SHORT $LN7@PMC_GetCon
$LN5@PMC_GetCon:

; 547  :         case PMC_CONSTANT_ONE:
; 548  :             return ((PMC_HANDLE_UINT)&number_one);

  00045	b8 00 00 00 00	 mov	 eax, OFFSET ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
  0004a	eb 1b		 jmp	 SHORT $LN7@PMC_GetCon
$LN6@PMC_GetCon:

; 549  :         default:
; 550  :             throw ArgumentException(L"引数typeが未知の値です。");

  0004c	68 00 00 00 00	 push	 OFFSET $SG118111
  00051	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
  00059	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentException@Internal@Core@Math@Palmtree@@
  0005e	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@PMC_GetCon:

; 551  :         }
; 552  :     }

  00067	83 c4 1c	 add	 esp, 28			; 0000001cH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_np$ = -4						; size = 4
_p$ = 8							; size = 4
?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Dispose

; 555  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 556  :         NUMBER_HEADER* np = (NUMBER_HEADER*)p;

  00015	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00018	89 45 fc	 mov	 DWORD PTR _np$[ebp], eax

; 557  :         CheckNumber(np);

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _np$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00024	83 c4 04	 add	 esp, 4

; 558  :         DeallocateNumber(np);

  00027	8b 55 fc	 mov	 edx, DWORD PTR _np$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::DeallocateNumber
  00030	83 c4 04	 add	 esp, 4

; 559  :     }

  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Dispose
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T2 = -60						; size = 4
$T3 = -56						; size = 4
_ex$4 = -48						; size = 4
_root$ = -36						; size = 16
__$EHRec$ = -16						; size = 16
_feature$ = 8						; size = 4
?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Memory

; 1056 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0001b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00040	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1057 :         InitializeCriticalSection(&mcs);

  00045	8b f4		 mov	 esi, esp
  00047	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1058 : 
; 1059 :         ResourceHolderUINT root;

  00059	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  0005c	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00061	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1060 : 
; 1061 :         try

  00068	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 1062 :         {
; 1063 :             root.AttatchStaticNumber(&number_zero, 0);

  0006c	6a 00		 push	 0
  0006e	68 00 00 00 00	 push	 OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00073	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  00076	e8 00 00 00 00	 call	 ?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber

; 1064 :             CommitNumber(&number_zero);

  0007b	68 00 00 00 00	 push	 OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00080	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  00085	83 c4 04	 add	 esp, 4

; 1065 : 
; 1066 :             root.AttatchStaticNumber(&number_one, 1);

  00088	6a 01		 push	 1
  0008a	68 00 00 00 00	 push	 OFFSET ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
  0008f	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  00092	e8 00 00 00 00	 call	 ?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber

; 1067 :             number_one.BLOCK[0] = 1;

  00097	b8 04 00 00 00	 mov	 eax, 4
  0009c	6b c8 00	 imul	 ecx, eax, 0
  0009f	8b 15 24 00 00
	00		 mov	 edx, DWORD PTR ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A+36
  000a5	c7 04 0a 01 00
	00 00		 mov	 DWORD PTR [edx+ecx], 1

; 1068 :             CommitNumber(&number_one);

  000ac	68 00 00 00 00	 push	 OFFSET ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
  000b1	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000b6	83 c4 04	 add	 esp, 4

; 1069 : 
; 1070 :             root.UnlinkStatickNumber(&number_zero);

  000b9	68 00 00 00 00	 push	 OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  000be	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  000c1	e8 00 00 00 00	 call	 ?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber

; 1071 :             root.UnlinkStatickNumber(&number_one);

  000c6	68 00 00 00 00	 push	 OFFSET ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
  000cb	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  000ce	e8 00 00 00 00	 call	 ?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber

; 1072 :             return (PMC_STATUS_OK);

  000d3	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
  000da	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e1	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  000e4	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000e9	8b 45 c8	 mov	 eax, DWORD PTR $T3[ebp]
  000ec	eb 43		 jmp	 SHORT $LN1@Initialize
__catch$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$0:

; 1073 :         }
; 1074 :         catch (const Exception& ex)
; 1075 :         {
; 1076 :             return (ex.GetStatusCode());

  000ee	8b 4d d0	 mov	 ecx, DWORD PTR _ex$4[ebp]
  000f1	e8 00 00 00 00	 call	 ?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ ; Palmtree::Math::Core::Internal::Exception::GetStatusCode
  000f6	89 45 c4	 mov	 DWORD PTR $T2[ebp], eax
  000f9	b8 00 00 00 00	 mov	 eax, $LN8@Initialize
  000fe	c3		 ret	 0

; 1077 :         }

  000ff	b8 00 00 00 00	 mov	 eax, __tryend$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$1
  00104	c3		 ret	 0
__tryend$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$1:
  00105	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0010c	eb 14		 jmp	 SHORT $LN7@Initialize
$LN8@Initialize:

; 1073 :         }
; 1074 :         catch (const Exception& ex)
; 1075 :         {
; 1076 :             return (ex.GetStatusCode());

  0010e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00115	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  00118	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0011d	8b 45 c4	 mov	 eax, DWORD PTR $T2[ebp]
  00120	eb 0f		 jmp	 SHORT $LN1@Initialize
$LN7@Initialize:

; 1078 :     }

  00122	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00129	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  0012c	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN1@Initialize:
  00131	52		 push	 edx
  00132	8b cd		 mov	 ecx, ebp
  00134	50		 push	 eax
  00135	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@Initialize
  0013b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00140	58		 pop	 eax
  00141	5a		 pop	 edx
  00142	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00145	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014c	59		 pop	 ecx
  0014d	5f		 pop	 edi
  0014e	5e		 pop	 esi
  0014f	5b		 pop	 ebx
  00150	83 c4 3c	 add	 esp, 60			; 0000003cH
  00153	3b ec		 cmp	 ebp, esp
  00155	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c3		 ret	 0
  0015e	66 90		 npad	 2
$LN14@Initialize:
  00160	02 00 00 00	 DD	 2
  00164	00 00 00 00	 DD	 $LN13@Initialize
$LN13@Initialize:
  00168	dc ff ff ff	 DD	 -36			; ffffffdcH
  0016c	10 00 00 00	 DD	 16			; 00000010H
  00170	00 00 00 00	 DD	 $LN10@Initialize
  00174	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00178	04 00 00 00	 DD	 4
  0017c	00 00 00 00	 DD	 $LN11@Initialize
$LN11@Initialize:
  00180	65		 DB	 101			; 00000065H
  00181	78		 DB	 120			; 00000078H
  00182	00		 DB	 0
$LN10@Initialize:
  00183	72		 DB	 114			; 00000072H
  00184	6f		 DB	 111			; 0000006fH
  00185	6f		 DB	 111			; 0000006fH
  00186	74		 DB	 116			; 00000074H
  00187	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$2:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Memory
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
_o$ = -8						; size = 4
_x_bit_count$ = -4					; size = 4
_x$ = 8							; size = 4
?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z PROC ; Palmtree::Math::Core::Internal::DuplicateNumber

; 529  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 530  :         if (x->IS_STATIC)

  0001e	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00021	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00024	83 e1 01	 and	 ecx, 1
  00027	74 05		 je	 SHORT $LN2@DuplicateN

; 531  :             return (x);

  00029	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0002c	eb 56		 jmp	 SHORT $LN1@DuplicateN
$LN2@DuplicateN:

; 532  :         if (x->IS_ZERO)

  0002e	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00031	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00034	83 e0 01	 and	 eax, 1
  00037	74 07		 je	 SHORT $LN3@DuplicateN

; 533  :             return (&number_zero);

  00039	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0003e	eb 44		 jmp	 SHORT $LN1@DuplicateN
$LN3@DuplicateN:

; 534  :         __UNIT_TYPE x_bit_count = x->UNIT_BIT_COUNT;

  00040	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00043	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00046	89 55 fc	 mov	 DWORD PTR _x_bit_count$[ebp], edx

; 535  :         NUMBER_HEADER* o = AllocateNumber(x_bit_count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR _x_bit_count$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::AllocateNumber
  00052	83 c4 04	 add	 esp, 4
  00055	89 45 f8	 mov	 DWORD PTR _o$[ebp], eax

; 536  :         _COPY_MEMORY_UNIT(o->BLOCK, x->BLOCK, o->BLOCK_COUNT);

  00058	8b 4d f8	 mov	 ecx, DWORD PTR _o$[ebp]
  0005b	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0005e	52		 push	 edx
  0005f	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00062	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00065	51		 push	 ecx
  00066	8b 55 f8	 mov	 edx, DWORD PTR _o$[ebp]
  00069	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 __COPY_MEMORY_UNIT
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH

; 537  :         CommitNumber(o);

  00075	8b 4d f8	 mov	 ecx, DWORD PTR _o$[ebp]
  00078	51		 push	 ecx
  00079	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  0007e	83 c4 04	 add	 esp, 4

; 538  :         return (o);

  00081	8b 45 f8	 mov	 eax, DWORD PTR _o$[ebp]
$LN1@DuplicateN:

; 539  :     }

  00084	83 c4 08	 add	 esp, 8
  00087	3b ec		 cmp	 ebp, esp
  00089	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::DuplicateNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
$T1 = -64						; size = 28
$T2 = -36						; size = 28
_desired_hash_code$3 = -8				; size = 4
_actual_hash_code$4 = -4				; size = 4
_p$ = 8							; size = 4
?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::CheckNumber

; 510  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	57		 push	 edi
  00007	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  0000a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 511  :         if (p->SIGNATURE1 != PMC_SIGNATURE || p->SIGNATURE2 != PMC_UINT_SIGNATURE)

  00020	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00023	81 78 08 70 4d
	63 49		 cmp	 DWORD PTR [eax+8], 1231244656 ; 49634d70H
  0002a	75 0c		 jne	 SHORT $LN3@CheckNumbe
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0002f	81 79 0c 55 69
	6e 54		 cmp	 DWORD PTR [ecx+12], 1416522069 ; 546e6955H
  00036	74 20		 je	 SHORT $LN2@CheckNumbe
$LN3@CheckNumbe:

; 512  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckNumber;1");

  00038	68 00 00 00 00	 push	 OFFSET $SG118081
  0003d	68 00 00 00 00	 push	 OFFSET $SG118082
  00042	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00045	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0004a	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0004f	8d 55 dc	 lea	 edx, DWORD PTR $T2[ebp]
  00052	52		 push	 edx
  00053	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@CheckNumbe:

; 513  :         if (!p->IS_ZERO)

  00058	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0005b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005e	83 e1 01	 and	 ecx, 1
  00061	75 73		 jne	 SHORT $LN7@CheckNumbe

; 514  :         {
; 515  :             CheckBlock(p->BLOCK, p->BLOCK_COUNT, p->BLOCK_CHECK_CODE);

  00063	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00066	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00069	50		 push	 eax
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0006d	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00070	52		 push	 edx
  00071	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00074	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::CheckBlock
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 516  : #ifdef _DEBUG
; 517  :             if (p->IS_COMMITTED)

  00080	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00083	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00086	d1 e8		 shr	 eax, 1
  00088	83 e0 01	 and	 eax, 1
  0008b	74 49		 je	 SHORT $LN7@CheckNumbe

; 518  :             {
; 519  :                 __UNIT_TYPE actual_hash_code = CalculateHashCode(p->BLOCK, p->UNIT_WORD_COUNT);

  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00090	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00093	52		 push	 edx
  00094	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00097	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 ?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z ; Palmtree::Math::Core::Internal::CalculateHashCode
  000a0	83 c4 08	 add	 esp, 8
  000a3	89 45 fc	 mov	 DWORD PTR _actual_hash_code$4[ebp], eax

; 520  :                 __UNIT_TYPE desired_hash_code = p->HASH_CODE;

  000a6	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000a9	8b 02		 mov	 eax, DWORD PTR [edx]
  000ab	89 45 f8	 mov	 DWORD PTR _desired_hash_code$3[ebp], eax

; 521  :                 if (actual_hash_code !=  desired_hash_code)

  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _actual_hash_code$4[ebp]
  000b1	3b 4d f8	 cmp	 ecx, DWORD PTR _desired_hash_code$3[ebp]
  000b4	74 20		 je	 SHORT $LN7@CheckNumbe

; 522  :                     throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckNumber;2");

  000b6	68 00 00 00 00	 push	 OFFSET $SG118087
  000bb	68 00 00 00 00	 push	 OFFSET $SG118088
  000c0	8d 4d c0	 lea	 ecx, DWORD PTR $T1[ebp]
  000c3	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  000c8	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  000cd	8d 55 c0	 lea	 edx, DWORD PTR $T1[ebp]
  000d0	52		 push	 edx
  000d1	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@CheckNumbe:

; 523  :             }
; 524  : #endif
; 525  :         }
; 526  :     }

  000d6	5f		 pop	 edi
  000d7	83 c4 40	 add	 esp, 64			; 00000040H
  000da	3b ec		 cmp	 ebp, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c3		 ret	 0
?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::CheckNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
tv199 = -28						; size = 4
tv182 = -24						; size = 4
tv151 = -20						; size = 4
tv139 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::CommitNumber

; 475  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  0003b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 476  :         p->UNIT_BIT_COUNT = GetEffectiveBitLength(p->BLOCK, p->BLOCK_COUNT, &p->UNIT_WORD_COUNT);

  00040	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00043	83 c0 10	 add	 eax, 16			; 00000010H
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0004a	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0004d	52		 push	 edx
  0004e	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00051	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ?GetEffectiveBitLength@Internal@Core@Math@Palmtree@@YAIPAII0@Z ; Palmtree::Math::Core::Internal::GetEffectiveBitLength
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005d	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00060	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 477  :         if (p->UNIT_BIT_COUNT <= 0)

  00063	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00066	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0006a	77 63		 ja	 SHORT $LN2@CommitNumb

; 478  :         {
; 479  :             p->HASH_CODE = 0;

  0006c	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0006f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 480  :             p->IS_ZERO = true;

  00075	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00078	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0007b	83 c8 01	 or	 eax, 1
  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00081	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 481  :             p->IS_ONE = false;

  00084	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00087	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0008a	83 e0 fd	 and	 eax, -3			; fffffffdH
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00090	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 482  :             p->IS_EVEN = true;

  00093	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00096	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00099	83 c8 04	 or	 eax, 4
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0009f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 483  :             p->TRAILING_ZERO_BITS_COUNT = 0;

  000a2	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000a5	c7 42 18 00 00
	00 00		 mov	 DWORD PTR [edx+24], 0

; 484  :             p->IS_POWER_OF_TWO = false;

  000ac	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000af	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b2	83 e1 f7	 and	 ecx, -9			; fffffff7H
  000b5	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000b8	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 485  :             p->IS_COMMITTED = true;

  000bb	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000be	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000c1	83 c9 02	 or	 ecx, 2
  000c4	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000c7	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  000ca	e9 c0 01 00 00	 jmp	 $LN1@CommitNumb
$LN2@CommitNumb:

; 486  :         }
; 487  :         else if (p->UNIT_BIT_COUNT == 1)

  000cf	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000d2	83 78 14 01	 cmp	 DWORD PTR [eax+20], 1
  000d6	0f 85 d4 00 00
	00		 jne	 $LN4@CommitNumb

; 488  :         {
; 489  :             p->HASH_CODE = CalculateHashCode(p->BLOCK, p->UNIT_WORD_COUNT);

  000dc	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000df	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  000e2	52		 push	 edx
  000e3	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000e6	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000e9	51		 push	 ecx
  000ea	e8 00 00 00 00	 call	 ?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z ; Palmtree::Math::Core::Internal::CalculateHashCode
  000ef	83 c4 08	 add	 esp, 8
  000f2	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  000f5	89 02		 mov	 DWORD PTR [edx], eax

; 490  :             p->IS_ZERO = false;

  000f7	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000fa	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000fd	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00100	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00103	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 491  :             p->IS_ONE = p->BLOCK[0] == 1; // 無条件でTRUEでも大丈夫だが念のため。

  00106	b8 04 00 00 00	 mov	 eax, 4
  0010b	6b c8 00	 imul	 ecx, eax, 0
  0010e	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00111	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00114	83 3c 01 01	 cmp	 DWORD PTR [ecx+eax], 1
  00118	75 09		 jne	 SHORT $LN7@CommitNumb
  0011a	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv139[ebp], 1
  00121	eb 07		 jmp	 SHORT $LN8@CommitNumb
$LN7@CommitNumb:
  00123	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN8@CommitNumb:
  0012a	8b 4d f0	 mov	 ecx, DWORD PTR tv139[ebp]
  0012d	83 e1 01	 and	 ecx, 1
  00130	d1 e1		 shl	 ecx, 1
  00132	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00135	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00138	83 e0 fd	 and	 eax, -3			; fffffffdH
  0013b	0b c1		 or	 eax, ecx
  0013d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00140	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 492  :             p->IS_EVEN = !(p->BLOCK[0] & 1);

  00143	ba 04 00 00 00	 mov	 edx, 4
  00148	6b c2 00	 imul	 eax, edx, 0
  0014b	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0014e	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00151	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  00154	83 e0 01	 and	 eax, 1
  00157	75 09		 jne	 SHORT $LN9@CommitNumb
  00159	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv151[ebp], 1
  00160	eb 07		 jmp	 SHORT $LN10@CommitNumb
$LN9@CommitNumb:
  00162	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN10@CommitNumb:
  00169	8b 4d ec	 mov	 ecx, DWORD PTR tv151[ebp]
  0016c	83 e1 01	 and	 ecx, 1
  0016f	c1 e1 02	 shl	 ecx, 2
  00172	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00175	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00178	83 e0 fb	 and	 eax, -5			; fffffffbH
  0017b	0b c1		 or	 eax, ecx
  0017d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00180	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 493  :             p->TRAILING_ZERO_BITS_COUNT = 0;

  00183	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00186	c7 42 18 00 00
	00 00		 mov	 DWORD PTR [edx+24], 0

; 494  :             p->IS_POWER_OF_TWO = true;

  0018d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00190	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00193	83 c9 08	 or	 ecx, 8
  00196	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00199	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 495  :             p->IS_COMMITTED = true;

  0019c	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0019f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  001a2	83 c9 02	 or	 ecx, 2
  001a5	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  001a8	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx

; 496  :         }
; 497  :         else

  001ab	e9 df 00 00 00	 jmp	 $LN1@CommitNumb
$LN4@CommitNumb:

; 498  :         {
; 499  :             p->HASH_CODE = CalculateHashCode(p->BLOCK, p->UNIT_WORD_COUNT);

  001b0	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  001b3	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  001b6	51		 push	 ecx
  001b7	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  001ba	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z ; Palmtree::Math::Core::Internal::CalculateHashCode
  001c3	83 c4 08	 add	 esp, 8
  001c6	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  001c9	89 01		 mov	 DWORD PTR [ecx], eax

; 500  :             p->IS_ZERO = false;

  001cb	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  001ce	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001d1	83 e0 fe	 and	 eax, -2			; fffffffeH
  001d4	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  001d7	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 501  :             p->IS_ONE = false;

  001da	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  001dd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e0	83 e0 fd	 and	 eax, -3			; fffffffdH
  001e3	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  001e6	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 502  :             p->IS_EVEN = !(p->BLOCK[0] & 1);

  001e9	ba 04 00 00 00	 mov	 edx, 4
  001ee	6b c2 00	 imul	 eax, edx, 0
  001f1	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  001f4	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  001f7	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  001fa	83 e0 01	 and	 eax, 1
  001fd	75 09		 jne	 SHORT $LN11@CommitNumb
  001ff	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv182[ebp], 1
  00206	eb 07		 jmp	 SHORT $LN12@CommitNumb
$LN11@CommitNumb:
  00208	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv182[ebp], 0
$LN12@CommitNumb:
  0020f	8b 4d e8	 mov	 ecx, DWORD PTR tv182[ebp]
  00212	83 e1 01	 and	 ecx, 1
  00215	c1 e1 02	 shl	 ecx, 2
  00218	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0021b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0021e	83 e0 fb	 and	 eax, -5			; fffffffbH
  00221	0b c1		 or	 eax, ecx
  00223	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00226	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 503  :             p->TRAILING_ZERO_BITS_COUNT = GetTrailingZeroBitCount(p->BLOCK, p->UNIT_WORD_COUNT);

  00229	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0022c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0022f	50		 push	 eax
  00230	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00233	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00236	52		 push	 edx
  00237	e8 00 00 00 00	 call	 ?GetTrailingZeroBitCount@Internal@Core@Math@Palmtree@@YAIPAII@Z ; Palmtree::Math::Core::Internal::GetTrailingZeroBitCount
  0023c	83 c4 08	 add	 esp, 8
  0023f	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00242	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 504  :             p->IS_POWER_OF_TWO = p->TRAILING_ZERO_BITS_COUNT + 1 == p->UNIT_BIT_COUNT;

  00245	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00248	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0024b	83 c0 01	 add	 eax, 1
  0024e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00251	3b 41 14	 cmp	 eax, DWORD PTR [ecx+20]
  00254	75 09		 jne	 SHORT $LN13@CommitNumb
  00256	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv199[ebp], 1
  0025d	eb 07		 jmp	 SHORT $LN14@CommitNumb
$LN13@CommitNumb:
  0025f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv199[ebp], 0
$LN14@CommitNumb:
  00266	8b 55 e4	 mov	 edx, DWORD PTR tv199[ebp]
  00269	83 e2 01	 and	 edx, 1
  0026c	c1 e2 03	 shl	 edx, 3
  0026f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00272	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00275	83 e1 f7	 and	 ecx, -9			; fffffff7H
  00278	0b ca		 or	 ecx, edx
  0027a	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0027d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 505  :             p->IS_COMMITTED = true;

  00280	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00283	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00286	83 c9 02	 or	 ecx, 2
  00289	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0028c	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
$LN1@CommitNumb:

; 506  :         }
; 507  :     }

  0028f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00292	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00299	59		 pop	 ecx
  0029a	83 c4 1c	 add	 esp, 28			; 0000001cH
  0029d	3b ec		 cmp	 ebp, esp
  0029f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a4	8b e5		 mov	 esp, ebp
  002a6	5d		 pop	 ebp
  002a7	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::CommitNumber
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::DeallocateHeapArea

; 1089 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1090 :         if (hLocalHeap != nullptr)

  0002d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA, 0 ; Palmtree::Math::Core::Internal::hLocalHeap
  00034	74 1f		 je	 SHORT $LN1@Deallocate

; 1091 :         {
; 1092 :             HeapDestroy(hLocalHeap);

  00036	8b f4		 mov	 esi, esp
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0003d	50		 push	 eax
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1093 :             hLocalHeap = nullptr;

  0004b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA, 0 ; Palmtree::Math::Core::Internal::hLocalHeap
$LN1@Deallocate:

; 1094 :         }
; 1095 :     }

  00055	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005f	59		 pop	 ecx
  00060	5e		 pop	 esi
  00061	83 c4 0c	 add	 esp, 12			; 0000000cH
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::DeallocateHeapArea
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ PROC ; Palmtree::Math::Core::Internal::AllocateHeapArea

; 1081 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __57381C25_pmc_memory@cpp
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1082 :         hLocalHeap = HeapCreate(0, 0x1000, 0);

  0002d	8b f4		 mov	 esi, esp
  0002f	6a 00		 push	 0
  00031	68 00 10 00 00	 push	 4096			; 00001000H
  00036	6a 00		 push	 0
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapCreate@12
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	a3 00 00 00 00	 mov	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA, eax ; Palmtree::Math::Core::Internal::hLocalHeap

; 1083 :         if (hLocalHeap == nullptr)

  0004a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA, 0 ; Palmtree::Math::Core::Internal::hLocalHeap
  00051	75 04		 jne	 SHORT $LN2@AllocateHe

; 1084 :             return (FALSE);

  00053	33 c0		 xor	 eax, eax
  00055	eb 05		 jmp	 SHORT $LN1@AllocateHe
$LN2@AllocateHe:

; 1085 :         return (TRUE);

  00057	b8 01 00 00 00	 mov	 eax, 1
$LN1@AllocateHe:

; 1086 :     }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	5e		 pop	 esi
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ ENDP ; Palmtree::Math::Core::Internal::AllocateHeapArea
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::BadBufferException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::BadBufferException::~BadBufferException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 1c		 push	 28			; 0000001cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::BadBufferException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::BadBufferException::~BadBufferException, COMDAT
; _this$ = ecx

; 316  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 317  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::BadBufferException::~BadBufferException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException, COMDAT
; _this$ = ecx

; 312  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 311  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 312  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@

; 313  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException, COMDAT
; _this$ = ecx

; 307  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 306  :             : Exception(PMC_STATUS_BAD_BUFFER, message, data)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	68 ff fe ff ff	 push	 -257			; fffffeffH
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 307  :         {

  00053	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00056	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@

; 308  :         }

  0005c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00063	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00069	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00070	59		 pop	 ecx
  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT
; _this$ = ecx

; 295  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 296  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 291  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 290  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 291  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 292  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 286  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	68 00 ff ff ff	 push	 -256			; ffffff00H
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 286  :         {

  00053	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00056	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 287  :         }

  0005c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00063	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00069	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00070	59		 pop	 ecx
  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::~NotEnoughMemoryException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::~NotEnoughMemoryException, COMDAT
; _this$ = ecx

; 257  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 258  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::~NotEnoughMemoryException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException, COMDAT
; _this$ = ecx

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 252  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 253  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@

; 254  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException, COMDAT
; _this$ = ecx

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)

  00037	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003a	50		 push	 eax
  0003b	6a f7		 push	 -9			; fffffff7H
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 248  :         {

  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@

; 249  :         }

  00055	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	83 c4 10	 add	 esp, 16			; 00000010H
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ENDP ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT
; _this$ = ecx

; 124  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 125  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 120  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 119  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 120  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 121  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_param_name$ = 12					; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 115  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _param_name$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	6a fe		 push	 -2			; fffffffeH
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 115  :         {

  00050	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00053	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 116  :         }

  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentException::~ArgumentException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentException::~ArgumentException, COMDAT
; _this$ = ecx

; 105  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 106  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentException::~ArgumentException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException, COMDAT
; _this$ = ecx

; 101  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 100  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 101  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@

; 102  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z PROC ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException, COMDAT
; _this$ = ecx

; 96   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)

  00037	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003a	50		 push	 eax
  0003b	6a ff		 push	 -1
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 96   :         {

  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@

; 97   :         }

  00055	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	83 c4 10	 add	 esp, 16			; 00000010H
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ PROC ; Palmtree::Math::Core::Internal::Exception::GetStatusCode, COMDAT
; _this$ = ecx

; 74   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 75   :             return (_code);

  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]

; 76   :         }

  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ ENDP ; Palmtree::Math::Core::Internal::Exception::GetStatusCode
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT
; _this$ = ecx

; 70   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 71   :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 62   :         Exception(const Exception& p) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 63   :         {
; 64   :             _code = p._code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00055	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00058	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 65   :             _message = p._message;

  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00061	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00064	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 66   :             _data = p._data;

  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0006d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00070	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 67   :         }

  00073	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
_data$ = 16						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 55   :         {
; 56   :             _code = code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _code$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 57   :             _message = message;

  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 58   :             _data = data;

  00061	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  00067	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 59   :         }

  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 48   :         {
; 49   :             _code = code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _code$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 50   :             _message = message;

  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 51   :             _data = nullptr;

  00061	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0

; 52   :         }

  0006b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00078	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007f	59		 pop	 ecx
  00080	83 c4 10	 add	 esp, 16			; 00000010H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00028	74 0b		 je	 SHORT $LN3@what
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00030	89 55 f8	 mov	 DWORD PTR tv69[ebp], edx
  00033	eb 07		 jmp	 SHORT $LN4@what
$LN3@what:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]

; 92   :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 85   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1exception@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 86   :         __std_exception_destroy(&_Data);

  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 04	 add	 ecx, 4
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004c	83 c4 04	 add	 esp, 4

; 87   :     }

  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00059	59		 pop	 ecx
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1exception@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1exception@std@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0exception@std@@QAE@XZ PROC				; std::exception::exception, COMDAT
; _this$ = ecx

; 50   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0exception@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 49   :         : _Data()

  00040	33 c9		 xor	 ecx, ecx
  00042	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00045	83 c2 04	 add	 edx, 4
  00048	89 0a		 mov	 DWORD PTR [edx], ecx
  0004a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 51   :     }

  0004d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0exception@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0exception@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0exception@std@@QAE@XZ ENDP				; std::exception::exception
END
