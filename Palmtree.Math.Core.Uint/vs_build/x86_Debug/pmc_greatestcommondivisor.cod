; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\pmc_greatestcommondivisor.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__77F53984_cstddef DB 01H
__188180DA_corecrt_math@h DB 01H
__D23EE329_cstdlib DB 01H
__5ECFF36E_type_traits DB 01H
__331E732B_malloc@h DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__7949CB39_exception DB 01H
__802FEEC0_pmc_exception@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__1AB12E38_pmc_resourceholder@h DB 01H
__746E1CEC_xmmintrin@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__E05E7037_autogenerated_inline_func@h DB 01H
__AACDA9A0_pmc_greatestcommondivisor@cpp DB 01H
msvcjmc	ENDS
CONST	SEGMENT
$SG118028 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'g', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'd', 00H
	DB	'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'G', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'D', 00H
	DB	'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, '_'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG118029 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+6
$SG118050 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'g', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'd', 00H
	DB	'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'G', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'D', 00H
	DB	'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, '_'
	DB	00H, '1', 00H, 'W', 00H, '_', 00H, 'I', 00H, 'm', 00H, 'p', 00H
	DB	';', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG118051 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG118082 DB	015H, '_peL02', 00H, 'd0h0', 082H, '00', 00H, 'j0n0g0G', 00H
	DB	'C', 00H, 'D', 00H, 092H, '0', 00H, 'N', 0fH, 'ak0Bl', 081H, '0'
	DB	08bH, '0S0h0L0g0M0~0[0', 093H, '0', 02H, '0', 00H, 00H
	ORG $+2
$SG118149 DB	015H, '_peL02', 00H, 'd0h0', 082H, '00', 00H, 'j0n0g0G', 00H
	DB	'C', 00H, 'D', 00H, 092H, '0', 00H, 'N', 0fH, 'ak0Bl', 081H, '0'
	DB	08bH, '0S0h0L0g0M0~0[0', 093H, '0', 02H, '0', 00H, 00H
	ORG $+2
$SG118196 DB	015H, '_peL02', 00H, 'd0h0', 082H, '00', 00H, 'j0n0g0G', 00H
	DB	'C', 00H, 'D', 00H, 092H, '0', 00H, 'N', 0fH, 'ak0Bl', 081H, '0'
	DB	08bH, '0S0h0L0g0M0~0[0', 093H, '0', 02H, '0', 00H, 00H
	ORG $+2
$SG118227 DB	'v', 00H, 00H, 00H
$SG118219 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'g', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'd', 00H
	DB	'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H
	DB	'C', 00H, '_', 00H, 'G', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'm', 00H, 'o', 00H, 'n', 00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i'
	DB	00H, 's', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'I', 00H, '_', 00H
	DB	'X', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG118220 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG118228 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG118242 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'g', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'd', 00H
	DB	'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H
	DB	'C', 00H, '_', 00H, 'G', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'm', 00H, 'o', 00H, 'n', 00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i'
	DB	00H, 's', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'X', 00H, '_', 00H
	DB	'I', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG118243 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG118246 DB	'u', 00H, 00H, 00H
$SG118247 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG118265 DB	'v', 00H, 00H, 00H
$SG118261 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'g', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'd', 00H
	DB	'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H
	DB	'C', 00H, '_', 00H, 'G', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'm', 00H, 'o', 00H, 'n', 00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i'
	DB	00H, 's', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'L', 00H, '_', 00H
	DB	'X', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG118262 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG118266 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG118280 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'g', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'd', 00H
	DB	'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H
	DB	'C', 00H, '_', 00H, 'G', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'm', 00H, 'o', 00H, 'n', 00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i'
	DB	00H, 's', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'X', 00H, '_', 00H
	DB	'L', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG118281 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG118284 DB	'u', 00H, 00H, 00H
$SG118285 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG118300 DB	'u', 00H, 00H, 00H
$SG118301 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG118304 DB	'v', 00H, 00H, 00H
$SG118305 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
CONST	ENDS
PUBLIC	??0exception@std@@QAE@XZ			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException
PUBLIC	??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArithmeticException::~ArithmeticException
PUBLIC	??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException
PUBLIC	??_GArithmeticException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArithmeticException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?Initialize_GreatestCommonDivisor@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_GreatestCommonDivisor
PUBLIC	?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_I_X
PUBLIC	?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_L_X
PUBLIC	?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I
PUBLIC	?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L
PUBLIC	?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7ArithmeticException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArithmeticException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	__TI2?AVArithmeticException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArithmeticException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArithmeticException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ArithmeticException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArithmeticException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArithmeticException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArithmeticException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArithmeticException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArithmeticException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArithmeticException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArithmeticException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EArithmeticException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArithmeticException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::DuplicateNumber
EXTRN	?From_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::From_I_Imp
EXTRN	?From_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::From_L_Imp
EXTRN	?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z:PROC ; Palmtree::Math::Core::Internal::RightShift_Imp
EXTRN	?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z:PROC ; Palmtree::Math::Core::Internal::LeftShift_Imp
EXTRN	?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z:PROC ; Palmtree::Math::Core::Internal::Subtruct_Imp
EXTRN	?Compare_Imp@Internal@Core@Math@Palmtree@@YAHPAI0I@Z:PROC ; Palmtree::Math::Core::Internal::Compare_Imp
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
EXTRN	?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
EXTRN	?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__aullshr:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArithmeticException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArithmeticException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArithmeticException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArithmeticException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArithmeticException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArithmeticException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArithmeticException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArithmeticException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArithmeticException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArithmeticException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArithmeticException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArithmeticException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArithmeticException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArithmeticException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArithmeticException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArithmeticException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArithmeticException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArithmeticException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArithmeticException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArithmeticException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArithmeticException@Internal@Core@Math@Palmtree@@@8??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArithmeticException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArithmeticException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArithmeticException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT __CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DD	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArithmeticException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArithmeticException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArithmeticException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArithmeticException::`vftable'
	DD	FLAT:??_EArithmeticException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DD	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DD	FLAT:??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z$0
__unwindtable$?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z$0
__unwindtable$?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$0
__unwindtable$?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z$0
__unwindtable$?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z$0
__unwindtable$?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z$0
__unwindtable$?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z$0
__unwindtable$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$2
__ehfuncinfo$?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0
__ehfuncinfo$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1exception@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0exception@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
tv194 = -132						; size = 4
tv196 = -128						; size = 4
tv138 = -124						; size = 4
$T2 = -120						; size = 4
$T3 = -116						; size = 4
$T4 = -112						; size = 24
_w_buf_count$5 = -84					; size = 4
_k$6 = -76						; size = 4
_v_tzcnt$7 = -72					; size = 4
_u_tzcnt$8 = -68					; size = 4
_w$9 = -64						; size = 4
_work_v_buf$10 = -60					; size = 4
_work_u_buf$11 = -56					; size = 4
_w$12 = -52						; size = 4
_work_bit_count$13 = -48				; size = 4
_v_bit_count$14 = -44					; size = 4
_u_bit_count$15 = -40					; size = 4
_root$16 = -32						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X_Imp

; 395  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 78	 sub	 esp, 120		; 00000078H
  00014	57		 push	 edi
  00015	8d bd 7c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-132]
  0001b	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0003d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 396  :         if (u->IS_ZERO)

  00042	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00045	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00048	83 e1 01	 and	 ecx, 1
  0004b	74 3e		 je	 SHORT $LN2@PMC_Greate

; 397  :         {
; 398  :             // u が 0 である場合
; 399  : 
; 400  :             if (v->IS_ZERO)

  0004d	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00050	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00053	83 e0 01	 and	 eax, 1
  00056	74 1d		 je	 SHORT $LN4@PMC_Greate

; 401  :             {
; 402  :                 // v が 0 である場合
; 403  : 
; 404  :                 // u と v がともに 0 であり、GCD は一意に存在しないため、エラーを返す。
; 405  :                 throw ArithmeticException(L"引数が2つとも0なのでGCDを一意に求めることができません。");

  00058	68 00 00 00 00	 push	 OFFSET $SG118196
  0005d	8d 4d 90	 lea	 ecx, DWORD PTR $T4[ebp]
  00060	e8 00 00 00 00	 call	 ??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException
  00065	68 00 00 00 00	 push	 OFFSET __TI2?AVArithmeticException@Internal@Core@Math@Palmtree@@
  0006a	8d 4d 90	 lea	 ecx, DWORD PTR $T4[ebp]
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8

; 406  :             }
; 407  :             else

  00073	eb 11		 jmp	 SHORT $LN5@PMC_Greate
$LN4@PMC_Greate:

; 408  :             {
; 409  :                 // v が 0 ではない場合
; 410  : 
; 411  :                 // GCD は v そのものであるため、v を計算結果として返す。
; 412  :                 return (DuplicateNumber(v));

  00075	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00078	52		 push	 edx
  00079	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0007e	83 c4 04	 add	 esp, 4
  00081	e9 b5 02 00 00	 jmp	 $LN14@PMC_Greate
$LN5@PMC_Greate:

; 413  :             }
; 414  :         }
; 415  :         else

  00086	e9 b0 02 00 00	 jmp	 $LN14@PMC_Greate
$LN2@PMC_Greate:

; 416  :         {
; 417  :             // u が 0 ではない場合
; 418  : 
; 419  :             if (v->IS_ZERO)

  0008b	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0008e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00091	83 e1 01	 and	 ecx, 1
  00094	74 16		 je	 SHORT $LN6@PMC_Greate

; 420  :             {
; 421  :                 // v が 0 である場合
; 422  : 
; 423  :                 // GCD は u そのものであるため、u を計算結果として返す。
; 424  :                 return (DuplicateNumber(u));

  00096	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00099	52		 push	 edx
  0009a	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0009f	83 c4 04	 add	 esp, 4
  000a2	e9 94 02 00 00	 jmp	 $LN14@PMC_Greate

; 425  :             }
; 426  :             else

  000a7	e9 8f 02 00 00	 jmp	 $LN14@PMC_Greate
$LN6@PMC_Greate:

; 427  :             {
; 428  :                 // u と v がともに 0 ではない場合
; 429  : 
; 430  :                 // u と v の GCD を計算する
; 431  :                 ResourceHolderUINT root;

  000ac	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  000af	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000b4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 432  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  000bb	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000be	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000c1	89 4d d8	 mov	 DWORD PTR _u_bit_count$15[ebp], ecx

; 433  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  000c4	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  000c7	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000ca	89 45 d4	 mov	 DWORD PTR _v_bit_count$14[ebp], eax

; 434  :                 __UNIT_TYPE work_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count);

  000cd	8b 4d d4	 mov	 ecx, DWORD PTR _v_bit_count$14[ebp]
  000d0	51		 push	 ecx
  000d1	8b 55 d8	 mov	 edx, DWORD PTR _u_bit_count$15[ebp]
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 __MAXIMUM_UNIT
  000da	83 c4 08	 add	 esp, 8
  000dd	89 45 d0	 mov	 DWORD PTR _work_bit_count$13[ebp], eax

; 435  :                 if (work_bit_count <= __UNIT_TYPE_BIT_COUNT)

  000e0	83 7d d0 20	 cmp	 DWORD PTR _work_bit_count$13[ebp], 32 ; 00000020H
  000e4	0f 87 96 00 00
	00		 ja	 $LN8@PMC_Greate

; 436  :                 {
; 437  :                     // u と v がともに 1 ワードで表現できる場合
; 438  :                     NUMBER_HEADER* w = root.AllocateNumber(__UNIT_TYPE_BIT_COUNT);

  000ea	6a 20		 push	 32			; 00000020H
  000ec	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  000ef	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000f4	89 45 cc	 mov	 DWORD PTR _w$12[ebp], eax

; 439  :                     w->BLOCK[0] = GreatestCommonDivisor_1W_Imp(u->BLOCK[0], v->BLOCK[0]);

  000f7	b8 04 00 00 00	 mov	 eax, 4
  000fc	6b c8 00	 imul	 ecx, eax, 0
  000ff	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00102	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00105	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00108	51		 push	 ecx
  00109	ba 04 00 00 00	 mov	 edx, 4
  0010e	6b c2 00	 imul	 eax, edx, 0
  00111	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00114	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00117	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_1W_Imp@Internal@Core@Math@Palmtree@@YAIII@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_1W_Imp
  00120	83 c4 08	 add	 esp, 8
  00123	89 45 84	 mov	 DWORD PTR tv138[ebp], eax
  00126	b9 04 00 00 00	 mov	 ecx, 4
  0012b	6b d1 00	 imul	 edx, ecx, 0
  0012e	8b 45 cc	 mov	 eax, DWORD PTR _w$12[ebp]
  00131	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00134	8b 45 84	 mov	 eax, DWORD PTR tv138[ebp]
  00137	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 440  :                     root.CheckNumber(w);

  0013a	8b 4d cc	 mov	 ecx, DWORD PTR _w$12[ebp]
  0013d	51		 push	 ecx
  0013e	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00141	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 441  :                     CommitNumber(w);

  00146	8b 55 cc	 mov	 edx, DWORD PTR _w$12[ebp]
  00149	52		 push	 edx
  0014a	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  0014f	83 c4 04	 add	 esp, 4

; 442  :                     root.UnlinkNumber(w);

  00152	8b 45 cc	 mov	 eax, DWORD PTR _w$12[ebp]
  00155	50		 push	 eax
  00156	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00159	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 443  :                     return (w);

  0015e	8b 4d cc	 mov	 ecx, DWORD PTR _w$12[ebp]
  00161	89 4d 8c	 mov	 DWORD PTR $T3[ebp], ecx
  00164	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0016b	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0016e	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00173	8b 45 8c	 mov	 eax, DWORD PTR $T3[ebp]
  00176	e9 c0 01 00 00	 jmp	 $LN14@PMC_Greate

; 444  :                 }
; 445  :                 else

  0017b	e9 ac 01 00 00	 jmp	 $LN9@PMC_Greate
$LN8@PMC_Greate:

; 446  :                 {
; 447  :                     // u と v のどちらかが 1 ワードで表現できない場合
; 448  :                     __UNIT_TYPE* work_u_buf = root.AllocateBlock(work_bit_count);

  00180	8b 55 d0	 mov	 edx, DWORD PTR _work_bit_count$13[ebp]
  00183	52		 push	 edx
  00184	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00187	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  0018c	89 45 c8	 mov	 DWORD PTR _work_u_buf$11[ebp], eax

; 449  :                     __UNIT_TYPE* work_v_buf = root.AllocateBlock(work_bit_count);

  0018f	8b 45 d0	 mov	 eax, DWORD PTR _work_bit_count$13[ebp]
  00192	50		 push	 eax
  00193	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00196	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  0019b	89 45 c4	 mov	 DWORD PTR _work_v_buf$10[ebp], eax

; 450  :                     NUMBER_HEADER* w = root.AllocateNumber(work_bit_count);

  0019e	8b 4d d0	 mov	 ecx, DWORD PTR _work_bit_count$13[ebp]
  001a1	51		 push	 ecx
  001a2	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  001a5	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  001aa	89 45 c0	 mov	 DWORD PTR _w$9[ebp], eax

; 451  : 
; 452  :                     __UNIT_TYPE u_tzcnt = u->TRAILING_ZERO_BITS_COUNT;

  001ad	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  001b0	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  001b3	89 45 bc	 mov	 DWORD PTR _u_tzcnt$8[ebp], eax

; 453  :                     __UNIT_TYPE v_tzcnt = v->TRAILING_ZERO_BITS_COUNT;

  001b6	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  001b9	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  001bc	89 55 b8	 mov	 DWORD PTR _v_tzcnt$7[ebp], edx

; 454  :                     __UNIT_TYPE k = _MINIMUM_UNIT(u_tzcnt, v_tzcnt);

  001bf	8b 45 b8	 mov	 eax, DWORD PTR _v_tzcnt$7[ebp]
  001c2	50		 push	 eax
  001c3	8b 4d bc	 mov	 ecx, DWORD PTR _u_tzcnt$8[ebp]
  001c6	51		 push	 ecx
  001c7	e8 00 00 00 00	 call	 __MINIMUM_UNIT
  001cc	83 c4 08	 add	 esp, 8
  001cf	89 45 b4	 mov	 DWORD PTR _k$6[ebp], eax

; 455  :                     if (u_tzcnt > 0)

  001d2	83 7d bc 00	 cmp	 DWORD PTR _u_tzcnt$8[ebp], 0
  001d6	76 22		 jbe	 SHORT $LN10@PMC_Greate

; 456  :                         RightShift_Imp(u->BLOCK, u->UNIT_WORD_COUNT, u_tzcnt, work_u_buf, FALSE);

  001d8	6a 00		 push	 0
  001da	8b 55 c8	 mov	 edx, DWORD PTR _work_u_buf$11[ebp]
  001dd	52		 push	 edx
  001de	8b 45 bc	 mov	 eax, DWORD PTR _u_tzcnt$8[ebp]
  001e1	50		 push	 eax
  001e2	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  001e5	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  001e8	52		 push	 edx
  001e9	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  001ec	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  001ef	51		 push	 ecx
  001f0	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
  001f5	83 c4 14	 add	 esp, 20			; 00000014H

; 457  :                     else

  001f8	eb 1a		 jmp	 SHORT $LN11@PMC_Greate
$LN10@PMC_Greate:

; 458  :                         _COPY_MEMORY_UNIT(work_u_buf, u->BLOCK, u->UNIT_WORD_COUNT);

  001fa	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  001fd	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00200	50		 push	 eax
  00201	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00204	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00207	52		 push	 edx
  00208	8b 45 c8	 mov	 eax, DWORD PTR _work_u_buf$11[ebp]
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 __COPY_MEMORY_UNIT
  00211	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@PMC_Greate:

; 459  :                     if (v_tzcnt > 0)

  00214	83 7d b8 00	 cmp	 DWORD PTR _v_tzcnt$7[ebp], 0
  00218	76 22		 jbe	 SHORT $LN12@PMC_Greate

; 460  :                         RightShift_Imp(v->BLOCK, v->UNIT_WORD_COUNT, v_tzcnt, work_v_buf, FALSE);

  0021a	6a 00		 push	 0
  0021c	8b 4d c4	 mov	 ecx, DWORD PTR _work_v_buf$10[ebp]
  0021f	51		 push	 ecx
  00220	8b 55 b8	 mov	 edx, DWORD PTR _v_tzcnt$7[ebp]
  00223	52		 push	 edx
  00224	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00227	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0022a	51		 push	 ecx
  0022b	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  0022e	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
  00237	83 c4 14	 add	 esp, 20			; 00000014H

; 461  :                     else

  0023a	eb 1a		 jmp	 SHORT $LN13@PMC_Greate
$LN12@PMC_Greate:

; 462  :                         _COPY_MEMORY_UNIT(work_v_buf, v->BLOCK, v->UNIT_WORD_COUNT);

  0023c	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0023f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00242	52		 push	 edx
  00243	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00246	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00249	51		 push	 ecx
  0024a	8b 55 c4	 mov	 edx, DWORD PTR _work_v_buf$10[ebp]
  0024d	52		 push	 edx
  0024e	e8 00 00 00 00	 call	 __COPY_MEMORY_UNIT
  00253	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@PMC_Greate:

; 463  : 
; 464  :                     __UNIT_TYPE w_buf_count;
; 465  :                     GreatestCommonDivisor_Imp(work_u_buf, work_v_buf, _DIVIDE_CEILING_UNIT(work_bit_count, __UNIT_TYPE_BIT_COUNT), w->BLOCK, &w_buf_count);

  00256	8b 45 c0	 mov	 eax, DWORD PTR _w$9[ebp]
  00259	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0025c	89 4d 80	 mov	 DWORD PTR tv196[ebp], ecx
  0025f	6a 20		 push	 32			; 00000020H
  00261	8b 55 d0	 mov	 edx, DWORD PTR _work_bit_count$13[ebp]
  00264	52		 push	 edx
  00265	e8 00 00 00 00	 call	 __DIVIDE_CEILING_UNIT
  0026a	83 c4 08	 add	 esp, 8
  0026d	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv194[ebp], eax
  00273	8d 45 ac	 lea	 eax, DWORD PTR _w_buf_count$5[ebp]
  00276	50		 push	 eax
  00277	8b 4d 80	 mov	 ecx, DWORD PTR tv196[ebp]
  0027a	51		 push	 ecx
  0027b	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv194[ebp]
  00281	52		 push	 edx
  00282	8b 45 c4	 mov	 eax, DWORD PTR _work_v_buf$10[ebp]
  00285	50		 push	 eax
  00286	8b 4d c8	 mov	 ecx, DWORD PTR _work_u_buf$11[ebp]
  00289	51		 push	 ecx
  0028a	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_Imp@Internal@Core@Math@Palmtree@@YAXPAI0I00@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_Imp
  0028f	83 c4 14	 add	 esp, 20			; 00000014H

; 466  :                     root.CheckBlock(work_u_buf);

  00292	8b 55 c8	 mov	 edx, DWORD PTR _work_u_buf$11[ebp]
  00295	52		 push	 edx
  00296	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00299	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 467  :                     root.CheckBlock(work_v_buf);

  0029e	8b 45 c4	 mov	 eax, DWORD PTR _work_v_buf$10[ebp]
  002a1	50		 push	 eax
  002a2	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  002a5	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 468  :                     root.CheckNumber(w);

  002aa	8b 4d c0	 mov	 ecx, DWORD PTR _w$9[ebp]
  002ad	51		 push	 ecx
  002ae	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  002b1	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 469  :                     root.DeallocateBlock(work_v_buf);

  002b6	8b 55 c4	 mov	 edx, DWORD PTR _work_v_buf$10[ebp]
  002b9	52		 push	 edx
  002ba	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  002bd	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 470  :                     root.DeallocateBlock(work_u_buf);

  002c2	8b 45 c8	 mov	 eax, DWORD PTR _work_u_buf$11[ebp]
  002c5	50		 push	 eax
  002c6	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  002c9	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 471  : 
; 472  :                     LeftShift_Imp(w->BLOCK, w_buf_count, k, w->BLOCK, TRUE);

  002ce	6a 01		 push	 1
  002d0	8b 4d c0	 mov	 ecx, DWORD PTR _w$9[ebp]
  002d3	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  002d6	52		 push	 edx
  002d7	8b 45 b4	 mov	 eax, DWORD PTR _k$6[ebp]
  002da	50		 push	 eax
  002db	8b 4d ac	 mov	 ecx, DWORD PTR _w_buf_count$5[ebp]
  002de	51		 push	 ecx
  002df	8b 55 c0	 mov	 edx, DWORD PTR _w$9[ebp]
  002e2	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  002e5	50		 push	 eax
  002e6	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp
  002eb	83 c4 14	 add	 esp, 20			; 00000014H

; 473  :                     root.CheckNumber(w);

  002ee	8b 4d c0	 mov	 ecx, DWORD PTR _w$9[ebp]
  002f1	51		 push	 ecx
  002f2	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  002f5	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 474  :                     CommitNumber(w);

  002fa	8b 55 c0	 mov	 edx, DWORD PTR _w$9[ebp]
  002fd	52		 push	 edx
  002fe	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  00303	83 c4 04	 add	 esp, 4

; 475  :                     root.UnlinkNumber(w);

  00306	8b 45 c0	 mov	 eax, DWORD PTR _w$9[ebp]
  00309	50		 push	 eax
  0030a	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0030d	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 476  :                     return (w);

  00312	8b 4d c0	 mov	 ecx, DWORD PTR _w$9[ebp]
  00315	89 4d 88	 mov	 DWORD PTR $T2[ebp], ecx
  00318	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0031f	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00322	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00327	8b 45 88	 mov	 eax, DWORD PTR $T2[ebp]
  0032a	eb 0f		 jmp	 SHORT $LN14@PMC_Greate
$LN9@PMC_Greate:

; 477  :                 }
; 478  :             }

  0032c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00333	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00336	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN14@PMC_Greate:

; 479  :         }
; 480  :     }

  0033b	52		 push	 edx
  0033c	8b cd		 mov	 ecx, ebp
  0033e	50		 push	 eax
  0033f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN20@PMC_Greate
  00345	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0034a	58		 pop	 eax
  0034b	5a		 pop	 edx
  0034c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0034f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00356	59		 pop	 ecx
  00357	5f		 pop	 edi
  00358	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  0035e	3b ec		 cmp	 ebp, esp
  00360	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00365	8b e5		 mov	 esp, ebp
  00367	5d		 pop	 ebp
  00368	c3		 ret	 0
  00369	0f 1f 00	 npad	 3
$LN20@PMC_Greate:
  0036c	02 00 00 00	 DD	 2
  00370	00 00 00 00	 DD	 $LN19@PMC_Greate
$LN19@PMC_Greate:
  00374	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00378	10 00 00 00	 DD	 16			; 00000010H
  0037c	00 00 00 00	 DD	 $LN16@PMC_Greate
  00380	ac ff ff ff	 DD	 -84			; ffffffacH
  00384	04 00 00 00	 DD	 4
  00388	00 00 00 00	 DD	 $LN17@PMC_Greate
$LN17@PMC_Greate:
  0038c	77		 DB	 119			; 00000077H
  0038d	5f		 DB	 95			; 0000005fH
  0038e	62		 DB	 98			; 00000062H
  0038f	75		 DB	 117			; 00000075H
  00390	66		 DB	 102			; 00000066H
  00391	5f		 DB	 95			; 0000005fH
  00392	63		 DB	 99			; 00000063H
  00393	6f		 DB	 111			; 0000006fH
  00394	75		 DB	 117			; 00000075H
  00395	6e		 DB	 110			; 0000006eH
  00396	74		 DB	 116			; 00000074H
  00397	00		 DB	 0
$LN16@PMC_Greate:
  00398	72		 DB	 114			; 00000072H
  00399	6f		 DB	 111			; 0000006fH
  0039a	6f		 DB	 111			; 0000006fH
  0039b	74		 DB	 116			; 00000074H
  0039c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a 80	 mov	 ecx, DWORD PTR [edx-128]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X_Imp
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
tv406 = -328						; size = 4
tv408 = -324						; size = 4
tv317 = -320						; size = 4
tv273 = -316						; size = 4
tv275 = -312						; size = 4
tv236 = -308						; size = 4
tv186 = -304						; size = 4
tv188 = -300						; size = 4
tv133 = -296						; size = 4
$T2 = -292						; size = 4
$T3 = -288						; size = 4
$T4 = -284						; size = 4
$T5 = -280						; size = 4
$T6 = -276						; size = 4
$T7 = -272						; size = 24
_w_buf_count$8 = -244					; size = 4
_k$9 = -236						; size = 4
_v_tzcnt$10 = -232					; size = 4
_u_tzcnt$11 = -228					; size = 4
_w$12 = -224						; size = 4
_work_v_buf$13 = -220					; size = 4
_work_u_buf$14 = -216					; size = 4
_work_bit_count$15 = -212				; size = 4
_v_bit_count$16 = -208					; size = 4
_u_bit_count$17 = -204					; size = 4
_w$18 = -200						; size = 4
_root$19 = -192						; size = 16
_w_buf_count$20 = -168					; size = 4
_k$21 = -160						; size = 4
_v_tzcnt$22 = -156					; size = 4
_u_tzcnt$23 = -152					; size = 4
_w$24 = -148						; size = 4
_work_v_buf$25 = -144					; size = 4
_work_u_buf$26 = -140					; size = 4
_work_bit_count$27 = -136				; size = 4
_v_bit_count$28 = -132					; size = 4
_root$29 = -124						; size = 16
_w_buf_count$30 = -100					; size = 4
_k$31 = -92						; size = 4
_v_tzcnt$32 = -88					; size = 4
_u_tzcnt$33 = -84					; size = 4
_w$34 = -80						; size = 4
_work_v_buf$35 = -76					; size = 4
_work_u_buf$36 = -72					; size = 4
_work_bit_count$37 = -68				; size = 4
_v_bit_count$38 = -64					; size = 4
_w$39 = -60						; size = 4
_root$40 = -52						; size = 16
_v_lo$41 = -32						; size = 4
_v_hi$42 = -24						; size = 4
_u_bit_count$43 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L_Imp

; 215  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 3c 01 00
	00		 sub	 esp, 316		; 0000013cH
  00017	57		 push	 edi
  00018	8d bd b8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-328]
  0001e	b9 4f 00 00 00	 mov	 ecx, 79			; 0000004fH
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002f	33 c5		 xor	 eax, ebp
  00031	50		 push	 eax
  00032	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00035	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  00040	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 216  :         if (u->IS_ZERO)

  00045	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	83 e1 01	 and	 ecx, 1
  0004e	74 45		 je	 SHORT $LN2@PMC_Greate

; 217  :         {
; 218  :             // u が 0 である場合
; 219  : 
; 220  :             if (v == 0)

  00050	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00053	0b 55 10	 or	 edx, DWORD PTR _v$[ebp+4]
  00056	75 23		 jne	 SHORT $LN4@PMC_Greate

; 221  :             {
; 222  :                 // v が 0 である場合
; 223  : 
; 224  :                 // u と v がともに 0 であり、GCD は一意に存在しないため、エラーを返す。
; 225  :                 throw ArithmeticException(L"引数が2つとも0なのでGCDを一意に求めることができません。");

  00058	68 00 00 00 00	 push	 OFFSET $SG118149
  0005d	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00063	e8 00 00 00 00	 call	 ??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException
  00068	68 00 00 00 00	 push	 OFFSET __TI2?AVArithmeticException@Internal@Core@Math@Palmtree@@
  0006d	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 __CxxThrowException@8

; 226  :             }
; 227  :             else

  00079	eb 15		 jmp	 SHORT $LN5@PMC_Greate
$LN4@PMC_Greate:

; 228  :             {
; 229  :                 // v が 0 ではない場合
; 230  : 
; 231  :                 // GCD は v そのものであるため、v を計算結果として返す。
; 232  :                 return (From_L_Imp(v));

  0007b	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp+4]
  0007e	51		 push	 ecx
  0007f	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?From_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@_K@Z ; Palmtree::Math::Core::Internal::From_L_Imp
  00088	83 c4 08	 add	 esp, 8
  0008b	e9 c5 08 00 00	 jmp	 $LN23@PMC_Greate
$LN5@PMC_Greate:

; 233  :             }
; 234  :         }
; 235  :         else

  00090	e9 c0 08 00 00	 jmp	 $LN23@PMC_Greate
$LN2@PMC_Greate:

; 236  :         {
; 237  :             // u が 0 ではない場合
; 238  : 
; 239  :             if (v == 0)

  00095	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00098	0b 45 10	 or	 eax, DWORD PTR _v$[ebp+4]
  0009b	75 16		 jne	 SHORT $LN6@PMC_Greate

; 240  :             {
; 241  :                 // v が 0 である場合
; 242  : 
; 243  :                 // GCD は u そのものであるため、u を計算結果として返す。
; 244  :                 return (DuplicateNumber(u));

  0009d	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000a6	83 c4 04	 add	 esp, 4
  000a9	e9 a7 08 00 00	 jmp	 $LN23@PMC_Greate

; 245  :             }
; 246  :             else

  000ae	e9 a2 08 00 00	 jmp	 $LN23@PMC_Greate
$LN6@PMC_Greate:

; 247  :             {
; 248  :                 // u と v がともに 0 ではない場合
; 249  : 
; 250  :                 // u と v の GCD を計算する
; 251  :                 if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  000b3	ba 01 00 00 00	 mov	 edx, 1
  000b8	85 d2		 test	 edx, edx
  000ba	0f 84 4f 05 00
	00		 je	 $LN8@PMC_Greate

; 252  :                 {
; 253  :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 254  : 
; 255  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  000c0	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000c3	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000c6	89 4d f0	 mov	 DWORD PTR _u_bit_count$43[ebp], ecx

; 256  :                     _UINT32_T v_hi;
; 257  :                     _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);

  000c9	8d 55 e8	 lea	 edx, DWORD PTR _v_hi$42[ebp]
  000cc	52		 push	 edx
  000cd	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp+4]
  000d0	50		 push	 eax
  000d1	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000d4	51		 push	 ecx
  000d5	e8 00 00 00 00	 call	 __FROMDWORDTOWORD
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH
  000dd	89 45 e0	 mov	 DWORD PTR _v_lo$41[ebp], eax

; 258  :                     if (v_hi == 0)

  000e0	83 7d e8 00	 cmp	 DWORD PTR _v_hi$42[ebp], 0
  000e4	0f 85 82 02 00
	00		 jne	 $LN10@PMC_Greate

; 259  :                     {
; 260  :                         // v の値が 32bit で表現可能な場合
; 261  :                         ResourceHolderUINT root;

  000ea	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  000ed	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000f2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 262  :                         if (u->UNIT_WORD_COUNT <= 1)

  000f9	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  000fc	83 7a 10 01	 cmp	 DWORD PTR [edx+16], 1
  00100	0f 87 94 00 00
	00		 ja	 $LN12@PMC_Greate

; 263  :                         {
; 264  :                             // u と v がともに 1 ワードで表現できる場合
; 265  :                             NUMBER_HEADER* w = root.AllocateNumber(__UNIT_TYPE_BIT_COUNT);

  00106	6a 20		 push	 32			; 00000020H
  00108	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  0010b	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00110	89 45 c4	 mov	 DWORD PTR _w$39[ebp], eax

; 266  :                             w->BLOCK[0] = GreatestCommonDivisor_1W_Imp(u->BLOCK[0], v_lo);

  00113	8b 45 e0	 mov	 eax, DWORD PTR _v_lo$41[ebp]
  00116	50		 push	 eax
  00117	b9 04 00 00 00	 mov	 ecx, 4
  0011c	6b d1 00	 imul	 edx, ecx, 0
  0011f	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00122	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00125	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00128	52		 push	 edx
  00129	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_1W_Imp@Internal@Core@Math@Palmtree@@YAIII@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_1W_Imp
  0012e	83 c4 08	 add	 esp, 8
  00131	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv133[ebp], eax
  00137	b8 04 00 00 00	 mov	 eax, 4
  0013c	6b c8 00	 imul	 ecx, eax, 0
  0013f	8b 55 c4	 mov	 edx, DWORD PTR _w$39[ebp]
  00142	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00145	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR tv133[ebp]
  0014b	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 267  :                             root.CheckNumber(w);

  0014e	8b 45 c4	 mov	 eax, DWORD PTR _w$39[ebp]
  00151	50		 push	 eax
  00152	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  00155	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 268  :                             CommitNumber(w);

  0015a	8b 4d c4	 mov	 ecx, DWORD PTR _w$39[ebp]
  0015d	51		 push	 ecx
  0015e	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  00163	83 c4 04	 add	 esp, 4

; 269  :                             root.UnlinkNumber(w);

  00166	8b 55 c4	 mov	 edx, DWORD PTR _w$39[ebp]
  00169	52		 push	 edx
  0016a	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  0016d	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 270  :                             return (w);

  00172	8b 45 c4	 mov	 eax, DWORD PTR _w$39[ebp]
  00175	89 85 ec fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  0017b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00182	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  00185	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0018a	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00190	e9 c0 07 00 00	 jmp	 $LN23@PMC_Greate

; 271  :                         }
; 272  :                         else

  00195	e9 be 01 00 00	 jmp	 $LN13@PMC_Greate
$LN12@PMC_Greate:

; 273  :                         {
; 274  :                             // u と v のどちらかが 1 ワードで表現できない場合
; 275  :                             __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);

  0019a	8b 4d e0	 mov	 ecx, DWORD PTR _v_lo$41[ebp]
  0019d	51		 push	 ecx
  0019e	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  001a3	83 c4 04	 add	 esp, 4
  001a6	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  001ab	2b d0		 sub	 edx, eax
  001ad	89 55 c0	 mov	 DWORD PTR _v_bit_count$38[ebp], edx

; 276  :                             __UNIT_TYPE work_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count);

  001b0	8b 45 c0	 mov	 eax, DWORD PTR _v_bit_count$38[ebp]
  001b3	50		 push	 eax
  001b4	8b 4d f0	 mov	 ecx, DWORD PTR _u_bit_count$43[ebp]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 __MAXIMUM_UNIT
  001bd	83 c4 08	 add	 esp, 8
  001c0	89 45 bc	 mov	 DWORD PTR _work_bit_count$37[ebp], eax

; 277  :                             __UNIT_TYPE* work_u_buf = root.AllocateBlock(work_bit_count);

  001c3	8b 55 bc	 mov	 edx, DWORD PTR _work_bit_count$37[ebp]
  001c6	52		 push	 edx
  001c7	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  001ca	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  001cf	89 45 b8	 mov	 DWORD PTR _work_u_buf$36[ebp], eax

; 278  :                             __UNIT_TYPE* work_v_buf = root.AllocateBlock(work_bit_count);

  001d2	8b 45 bc	 mov	 eax, DWORD PTR _work_bit_count$37[ebp]
  001d5	50		 push	 eax
  001d6	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  001d9	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  001de	89 45 b4	 mov	 DWORD PTR _work_v_buf$35[ebp], eax

; 279  :                             NUMBER_HEADER* w = root.AllocateNumber(work_bit_count);

  001e1	8b 4d bc	 mov	 ecx, DWORD PTR _work_bit_count$37[ebp]
  001e4	51		 push	 ecx
  001e5	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  001e8	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  001ed	89 45 b0	 mov	 DWORD PTR _w$34[ebp], eax

; 280  : 
; 281  :                             __UNIT_TYPE u_tzcnt = u->TRAILING_ZERO_BITS_COUNT;

  001f0	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  001f3	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  001f6	89 45 ac	 mov	 DWORD PTR _u_tzcnt$33[ebp], eax

; 282  :                             __UNIT_TYPE v_tzcnt = _TZCNT_ALT_UNIT(v_lo);

  001f9	8b 4d e0	 mov	 ecx, DWORD PTR _v_lo$41[ebp]
  001fc	51		 push	 ecx
  001fd	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  00202	83 c4 04	 add	 esp, 4
  00205	89 45 a8	 mov	 DWORD PTR _v_tzcnt$32[ebp], eax

; 283  :                             __UNIT_TYPE k = _MINIMUM_UNIT(u_tzcnt, v_tzcnt);

  00208	8b 55 a8	 mov	 edx, DWORD PTR _v_tzcnt$32[ebp]
  0020b	52		 push	 edx
  0020c	8b 45 ac	 mov	 eax, DWORD PTR _u_tzcnt$33[ebp]
  0020f	50		 push	 eax
  00210	e8 00 00 00 00	 call	 __MINIMUM_UNIT
  00215	83 c4 08	 add	 esp, 8
  00218	89 45 a4	 mov	 DWORD PTR _k$31[ebp], eax

; 284  :                             if (u_tzcnt > 0)

  0021b	83 7d ac 00	 cmp	 DWORD PTR _u_tzcnt$33[ebp], 0
  0021f	76 22		 jbe	 SHORT $LN14@PMC_Greate

; 285  :                                 RightShift_Imp(u->BLOCK, u->UNIT_WORD_COUNT, u_tzcnt, work_u_buf, FALSE);

  00221	6a 00		 push	 0
  00223	8b 4d b8	 mov	 ecx, DWORD PTR _work_u_buf$36[ebp]
  00226	51		 push	 ecx
  00227	8b 55 ac	 mov	 edx, DWORD PTR _u_tzcnt$33[ebp]
  0022a	52		 push	 edx
  0022b	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0022e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00231	51		 push	 ecx
  00232	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00235	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00238	50		 push	 eax
  00239	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
  0023e	83 c4 14	 add	 esp, 20			; 00000014H

; 286  :                             else

  00241	eb 1a		 jmp	 SHORT $LN15@PMC_Greate
$LN14@PMC_Greate:

; 287  :                                 _COPY_MEMORY_UNIT(work_u_buf, u->BLOCK, u->UNIT_WORD_COUNT);

  00243	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00246	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00249	52		 push	 edx
  0024a	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0024d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00250	51		 push	 ecx
  00251	8b 55 b8	 mov	 edx, DWORD PTR _work_u_buf$36[ebp]
  00254	52		 push	 edx
  00255	e8 00 00 00 00	 call	 __COPY_MEMORY_UNIT
  0025a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@PMC_Greate:

; 288  :                             work_v_buf[0] = v_lo >> v_tzcnt;

  0025d	8b 45 e0	 mov	 eax, DWORD PTR _v_lo$41[ebp]
  00260	8b 4d a8	 mov	 ecx, DWORD PTR _v_tzcnt$32[ebp]
  00263	d3 e8		 shr	 eax, cl
  00265	b9 04 00 00 00	 mov	 ecx, 4
  0026a	6b d1 00	 imul	 edx, ecx, 0
  0026d	8b 4d b4	 mov	 ecx, DWORD PTR _work_v_buf$35[ebp]
  00270	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 289  : 
; 290  :                             __UNIT_TYPE w_buf_count;
; 291  :                             GreatestCommonDivisor_Imp(work_u_buf, work_v_buf, _DIVIDE_CEILING_UNIT(work_bit_count, __UNIT_TYPE_BIT_COUNT), w->BLOCK, &w_buf_count);

  00273	8b 55 b0	 mov	 edx, DWORD PTR _w$34[ebp]
  00276	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00279	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv188[ebp], eax
  0027f	6a 20		 push	 32			; 00000020H
  00281	8b 4d bc	 mov	 ecx, DWORD PTR _work_bit_count$37[ebp]
  00284	51		 push	 ecx
  00285	e8 00 00 00 00	 call	 __DIVIDE_CEILING_UNIT
  0028a	83 c4 08	 add	 esp, 8
  0028d	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv186[ebp], eax
  00293	8d 55 9c	 lea	 edx, DWORD PTR _w_buf_count$30[ebp]
  00296	52		 push	 edx
  00297	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR tv188[ebp]
  0029d	50		 push	 eax
  0029e	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR tv186[ebp]
  002a4	51		 push	 ecx
  002a5	8b 55 b4	 mov	 edx, DWORD PTR _work_v_buf$35[ebp]
  002a8	52		 push	 edx
  002a9	8b 45 b8	 mov	 eax, DWORD PTR _work_u_buf$36[ebp]
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_Imp@Internal@Core@Math@Palmtree@@YAXPAI0I00@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_Imp
  002b2	83 c4 14	 add	 esp, 20			; 00000014H

; 292  :                             root.CheckBlock(work_u_buf);

  002b5	8b 4d b8	 mov	 ecx, DWORD PTR _work_u_buf$36[ebp]
  002b8	51		 push	 ecx
  002b9	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  002bc	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 293  :                             root.CheckBlock(work_v_buf);

  002c1	8b 55 b4	 mov	 edx, DWORD PTR _work_v_buf$35[ebp]
  002c4	52		 push	 edx
  002c5	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  002c8	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 294  :                             root.CheckNumber(w);

  002cd	8b 45 b0	 mov	 eax, DWORD PTR _w$34[ebp]
  002d0	50		 push	 eax
  002d1	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  002d4	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 295  :                             root.DeallocateBlock(work_v_buf);

  002d9	8b 4d b4	 mov	 ecx, DWORD PTR _work_v_buf$35[ebp]
  002dc	51		 push	 ecx
  002dd	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  002e0	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 296  :                             root.DeallocateBlock(work_u_buf);

  002e5	8b 55 b8	 mov	 edx, DWORD PTR _work_u_buf$36[ebp]
  002e8	52		 push	 edx
  002e9	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  002ec	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 297  : 
; 298  :                             LeftShift_Imp(w->BLOCK, w_buf_count, k, w->BLOCK, TRUE);

  002f1	6a 01		 push	 1
  002f3	8b 45 b0	 mov	 eax, DWORD PTR _w$34[ebp]
  002f6	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  002f9	51		 push	 ecx
  002fa	8b 55 a4	 mov	 edx, DWORD PTR _k$31[ebp]
  002fd	52		 push	 edx
  002fe	8b 45 9c	 mov	 eax, DWORD PTR _w_buf_count$30[ebp]
  00301	50		 push	 eax
  00302	8b 4d b0	 mov	 ecx, DWORD PTR _w$34[ebp]
  00305	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp
  0030e	83 c4 14	 add	 esp, 20			; 00000014H

; 299  :                             root.CheckNumber(w);

  00311	8b 45 b0	 mov	 eax, DWORD PTR _w$34[ebp]
  00314	50		 push	 eax
  00315	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  00318	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 300  :                             CommitNumber(w);

  0031d	8b 4d b0	 mov	 ecx, DWORD PTR _w$34[ebp]
  00320	51		 push	 ecx
  00321	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  00326	83 c4 04	 add	 esp, 4

; 301  :                             root.UnlinkNumber(w);

  00329	8b 55 b0	 mov	 edx, DWORD PTR _w$34[ebp]
  0032c	52		 push	 edx
  0032d	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  00330	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 302  :                             return (w);

  00335	8b 45 b0	 mov	 eax, DWORD PTR _w$34[ebp]
  00338	89 85 e8 fe ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  0033e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00345	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  00348	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0034d	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00353	e9 fd 05 00 00	 jmp	 $LN23@PMC_Greate
$LN13@PMC_Greate:

; 303  :                         }
; 304  :                     }

  00358	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0035f	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  00362	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT

; 305  :                     else

  00367	e9 9e 02 00 00	 jmp	 $LN11@PMC_Greate
$LN10@PMC_Greate:

; 306  :                     {
; 307  :                         // y の値が 32bit では表現できない場合
; 308  :                         ResourceHolderUINT root;

  0036c	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  0036f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00374	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 309  :                         __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);

  0037b	8b 4d e8	 mov	 ecx, DWORD PTR _v_hi$42[ebp]
  0037e	51		 push	 ecx
  0037f	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  00384	83 c4 04	 add	 esp, 4
  00387	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0038c	2b d0		 sub	 edx, eax
  0038e	89 95 7c ff ff
	ff		 mov	 DWORD PTR _v_bit_count$28[ebp], edx

; 310  :                         __UNIT_TYPE work_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count);

  00394	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _v_bit_count$28[ebp]
  0039a	50		 push	 eax
  0039b	8b 4d f0	 mov	 ecx, DWORD PTR _u_bit_count$43[ebp]
  0039e	51		 push	 ecx
  0039f	e8 00 00 00 00	 call	 __MAXIMUM_UNIT
  003a4	83 c4 08	 add	 esp, 8
  003a7	89 85 78 ff ff
	ff		 mov	 DWORD PTR _work_bit_count$27[ebp], eax

; 311  :                         __UNIT_TYPE* work_u_buf = root.AllocateBlock(work_bit_count);

  003ad	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _work_bit_count$27[ebp]
  003b3	52		 push	 edx
  003b4	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  003b7	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  003bc	89 85 74 ff ff
	ff		 mov	 DWORD PTR _work_u_buf$26[ebp], eax

; 312  :                         __UNIT_TYPE* work_v_buf = root.AllocateBlock(work_bit_count);

  003c2	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _work_bit_count$27[ebp]
  003c8	50		 push	 eax
  003c9	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  003cc	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  003d1	89 85 70 ff ff
	ff		 mov	 DWORD PTR _work_v_buf$25[ebp], eax

; 313  :                         NUMBER_HEADER* w = root.AllocateNumber(work_bit_count);

  003d7	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _work_bit_count$27[ebp]
  003dd	51		 push	 ecx
  003de	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  003e1	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  003e6	89 85 6c ff ff
	ff		 mov	 DWORD PTR _w$24[ebp], eax

; 314  : 
; 315  :                         __UNIT_TYPE u_tzcnt = u->TRAILING_ZERO_BITS_COUNT;

  003ec	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  003ef	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  003f2	89 85 68 ff ff
	ff		 mov	 DWORD PTR _u_tzcnt$23[ebp], eax

; 316  :                         __UNIT_TYPE v_tzcnt = v_lo == 0 ? 32 + _TZCNT_ALT_UNIT(v_hi) : _TZCNT_ALT_UNIT(v_lo);

  003f8	83 7d e0 00	 cmp	 DWORD PTR _v_lo$41[ebp], 0
  003fc	75 17		 jne	 SHORT $LN24@PMC_Greate
  003fe	8b 4d e8	 mov	 ecx, DWORD PTR _v_hi$42[ebp]
  00401	51		 push	 ecx
  00402	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  00407	83 c4 04	 add	 esp, 4
  0040a	83 c0 20	 add	 eax, 32			; 00000020H
  0040d	89 85 cc fe ff
	ff		 mov	 DWORD PTR tv236[ebp], eax
  00413	eb 12		 jmp	 SHORT $LN25@PMC_Greate
$LN24@PMC_Greate:
  00415	8b 55 e0	 mov	 edx, DWORD PTR _v_lo$41[ebp]
  00418	52		 push	 edx
  00419	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  0041e	83 c4 04	 add	 esp, 4
  00421	89 85 cc fe ff
	ff		 mov	 DWORD PTR tv236[ebp], eax
$LN25@PMC_Greate:
  00427	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR tv236[ebp]
  0042d	89 85 64 ff ff
	ff		 mov	 DWORD PTR _v_tzcnt$22[ebp], eax

; 317  :                         __UNIT_TYPE k = _MINIMUM_UNIT(u_tzcnt, v_tzcnt);

  00433	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _v_tzcnt$22[ebp]
  00439	51		 push	 ecx
  0043a	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _u_tzcnt$23[ebp]
  00440	52		 push	 edx
  00441	e8 00 00 00 00	 call	 __MINIMUM_UNIT
  00446	83 c4 08	 add	 esp, 8
  00449	89 85 60 ff ff
	ff		 mov	 DWORD PTR _k$21[ebp], eax

; 318  :                         if (u_tzcnt > 0)

  0044f	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _u_tzcnt$23[ebp], 0
  00456	76 28		 jbe	 SHORT $LN16@PMC_Greate

; 319  :                             RightShift_Imp(u->BLOCK, u->UNIT_WORD_COUNT, u_tzcnt, work_u_buf, FALSE);

  00458	6a 00		 push	 0
  0045a	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _work_u_buf$26[ebp]
  00460	50		 push	 eax
  00461	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _u_tzcnt$23[ebp]
  00467	51		 push	 ecx
  00468	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0046b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0046e	50		 push	 eax
  0046f	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00472	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00475	52		 push	 edx
  00476	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
  0047b	83 c4 14	 add	 esp, 20			; 00000014H

; 320  :                         else

  0047e	eb 1d		 jmp	 SHORT $LN17@PMC_Greate
$LN16@PMC_Greate:

; 321  :                             _COPY_MEMORY_UNIT(work_u_buf, u->BLOCK, u->UNIT_WORD_COUNT);

  00480	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00483	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00486	51		 push	 ecx
  00487	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0048a	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0048d	50		 push	 eax
  0048e	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _work_u_buf$26[ebp]
  00494	51		 push	 ecx
  00495	e8 00 00 00 00	 call	 __COPY_MEMORY_UNIT
  0049a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN17@PMC_Greate:

; 322  :                         work_v_buf[0] = v_lo;

  0049d	ba 04 00 00 00	 mov	 edx, 4
  004a2	6b c2 00	 imul	 eax, edx, 0
  004a5	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _work_v_buf$25[ebp]
  004ab	8b 55 e0	 mov	 edx, DWORD PTR _v_lo$41[ebp]
  004ae	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 323  :                         work_v_buf[1] = v_hi;

  004b1	b8 04 00 00 00	 mov	 eax, 4
  004b6	c1 e0 00	 shl	 eax, 0
  004b9	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _work_v_buf$25[ebp]
  004bf	8b 55 e8	 mov	 edx, DWORD PTR _v_hi$42[ebp]
  004c2	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 324  :                         if (v_tzcnt > 0)

  004c5	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR _v_tzcnt$22[ebp], 0
  004cc	76 21		 jbe	 SHORT $LN18@PMC_Greate

; 325  :                             RightShift_Imp(work_v_buf, 2, v_tzcnt, work_v_buf, TRUE);

  004ce	6a 01		 push	 1
  004d0	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _work_v_buf$25[ebp]
  004d6	50		 push	 eax
  004d7	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _v_tzcnt$22[ebp]
  004dd	51		 push	 ecx
  004de	6a 02		 push	 2
  004e0	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _work_v_buf$25[ebp]
  004e6	52		 push	 edx
  004e7	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
  004ec	83 c4 14	 add	 esp, 20			; 00000014H
$LN18@PMC_Greate:

; 326  : 
; 327  :                         __UNIT_TYPE w_buf_count;
; 328  :                         GreatestCommonDivisor_Imp(work_u_buf, work_v_buf, _DIVIDE_CEILING_UNIT(work_bit_count, __UNIT_TYPE_BIT_COUNT), w->BLOCK, &w_buf_count);

  004ef	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _w$24[ebp]
  004f5	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  004f8	89 8d c8 fe ff
	ff		 mov	 DWORD PTR tv275[ebp], ecx
  004fe	6a 20		 push	 32			; 00000020H
  00500	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _work_bit_count$27[ebp]
  00506	52		 push	 edx
  00507	e8 00 00 00 00	 call	 __DIVIDE_CEILING_UNIT
  0050c	83 c4 08	 add	 esp, 8
  0050f	89 85 c4 fe ff
	ff		 mov	 DWORD PTR tv273[ebp], eax
  00515	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _w_buf_count$20[ebp]
  0051b	50		 push	 eax
  0051c	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR tv275[ebp]
  00522	51		 push	 ecx
  00523	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR tv273[ebp]
  00529	52		 push	 edx
  0052a	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _work_v_buf$25[ebp]
  00530	50		 push	 eax
  00531	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _work_u_buf$26[ebp]
  00537	51		 push	 ecx
  00538	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_Imp@Internal@Core@Math@Palmtree@@YAXPAI0I00@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_Imp
  0053d	83 c4 14	 add	 esp, 20			; 00000014H

; 329  :                         root.CheckBlock(work_u_buf);

  00540	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _work_u_buf$26[ebp]
  00546	52		 push	 edx
  00547	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  0054a	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 330  :                         root.CheckBlock(work_v_buf);

  0054f	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _work_v_buf$25[ebp]
  00555	50		 push	 eax
  00556	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  00559	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 331  :                         root.CheckNumber(w);

  0055e	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _w$24[ebp]
  00564	51		 push	 ecx
  00565	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  00568	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 332  :                         root.DeallocateBlock(work_v_buf);

  0056d	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _work_v_buf$25[ebp]
  00573	52		 push	 edx
  00574	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  00577	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 333  :                         root.DeallocateBlock(work_u_buf);

  0057c	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _work_u_buf$26[ebp]
  00582	50		 push	 eax
  00583	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  00586	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 334  : 
; 335  :                         LeftShift_Imp(w->BLOCK, w_buf_count, k, w->BLOCK, TRUE);

  0058b	6a 01		 push	 1
  0058d	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _w$24[ebp]
  00593	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00596	52		 push	 edx
  00597	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _k$21[ebp]
  0059d	50		 push	 eax
  0059e	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _w_buf_count$20[ebp]
  005a4	51		 push	 ecx
  005a5	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR _w$24[ebp]
  005ab	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  005ae	50		 push	 eax
  005af	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp
  005b4	83 c4 14	 add	 esp, 20			; 00000014H

; 336  :                         root.CheckNumber(w);

  005b7	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _w$24[ebp]
  005bd	51		 push	 ecx
  005be	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  005c1	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 337  :                         CommitNumber(w);

  005c6	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR _w$24[ebp]
  005cc	52		 push	 edx
  005cd	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  005d2	83 c4 04	 add	 esp, 4

; 338  :                         root.UnlinkNumber(w);

  005d5	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _w$24[ebp]
  005db	50		 push	 eax
  005dc	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  005df	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 339  :                         return (w);

  005e4	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _w$24[ebp]
  005ea	89 8d e4 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  005f0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005f7	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  005fa	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  005ff	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00605	e9 4b 03 00 00	 jmp	 $LN23@PMC_Greate
$LN11@PMC_Greate:

; 340  :                     }
; 341  :                 }
; 342  :                 else

  0060a	e9 46 03 00 00	 jmp	 $LN23@PMC_Greate
$LN8@PMC_Greate:

; 343  :                 {
; 344  :                     // _UINT64_T が 1 ワードで表現できる場合
; 345  :                     ResourceHolderUINT root;

  0060f	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00615	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0061a	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 346  :                     if (u->UNIT_WORD_COUNT <= 1)

  00621	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00624	83 7a 10 01	 cmp	 DWORD PTR [edx+16], 1
  00628	0f 87 b2 00 00
	00		 ja	 $LN19@PMC_Greate

; 347  :                     {
; 348  :                         // u と v がともに 1 ワードで表現できる場合
; 349  :                         NUMBER_HEADER* w = root.AllocateNumber(__UNIT_TYPE_BIT_COUNT);

  0062e	6a 20		 push	 32			; 00000020H
  00630	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00636	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  0063b	89 85 38 ff ff
	ff		 mov	 DWORD PTR _w$18[ebp], eax

; 350  :                         w->BLOCK[0] = GreatestCommonDivisor_1W_Imp(u->BLOCK[0], (__UNIT_TYPE)v);

  00641	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00644	50		 push	 eax
  00645	b9 04 00 00 00	 mov	 ecx, 4
  0064a	6b d1 00	 imul	 edx, ecx, 0
  0064d	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00650	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00653	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00656	52		 push	 edx
  00657	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_1W_Imp@Internal@Core@Math@Palmtree@@YAIII@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_1W_Imp
  0065c	83 c4 08	 add	 esp, 8
  0065f	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv317[ebp], eax
  00665	b8 04 00 00 00	 mov	 eax, 4
  0066a	6b c8 00	 imul	 ecx, eax, 0
  0066d	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _w$18[ebp]
  00673	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00676	8b 95 c0 fe ff
	ff		 mov	 edx, DWORD PTR tv317[ebp]
  0067c	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 351  :                         root.CheckNumber(w);

  0067f	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _w$18[ebp]
  00685	50		 push	 eax
  00686	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  0068c	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 352  :                         CommitNumber(w);

  00691	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _w$18[ebp]
  00697	51		 push	 ecx
  00698	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  0069d	83 c4 04	 add	 esp, 4

; 353  :                         root.UnlinkNumber(w);

  006a0	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _w$18[ebp]
  006a6	52		 push	 edx
  006a7	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  006ad	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 354  :                         return (w);

  006b2	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _w$18[ebp]
  006b8	89 85 e0 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  006be	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006c5	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  006cb	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  006d0	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  006d6	e9 7a 02 00 00	 jmp	 $LN23@PMC_Greate

; 355  :                     }
; 356  :                     else

  006db	e9 63 02 00 00	 jmp	 $LN20@PMC_Greate
$LN19@PMC_Greate:

; 357  :                     {
; 358  :                         // u と v のどちらかが 1 ワードで表現できない場合
; 359  :                         __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  006e0	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  006e3	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  006e6	89 95 34 ff ff
	ff		 mov	 DWORD PTR _u_bit_count$17[ebp], edx

; 360  :                         __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);

  006ec	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  006ef	50		 push	 eax
  006f0	e8 00 00 00 00	 call	 __LZCNT_ALT_UNIT
  006f5	83 c4 04	 add	 esp, 4
  006f8	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  006fd	2b c8		 sub	 ecx, eax
  006ff	89 8d 30 ff ff
	ff		 mov	 DWORD PTR _v_bit_count$16[ebp], ecx

; 361  :                         __UNIT_TYPE work_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count);

  00705	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR _v_bit_count$16[ebp]
  0070b	52		 push	 edx
  0070c	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _u_bit_count$17[ebp]
  00712	50		 push	 eax
  00713	e8 00 00 00 00	 call	 __MAXIMUM_UNIT
  00718	83 c4 08	 add	 esp, 8
  0071b	89 85 2c ff ff
	ff		 mov	 DWORD PTR _work_bit_count$15[ebp], eax

; 362  : 
; 363  :                         __UNIT_TYPE* work_u_buf = root.AllocateBlock(work_bit_count);

  00721	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _work_bit_count$15[ebp]
  00727	51		 push	 ecx
  00728	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  0072e	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00733	89 85 28 ff ff
	ff		 mov	 DWORD PTR _work_u_buf$14[ebp], eax

; 364  :                         __UNIT_TYPE* work_v_buf = root.AllocateBlock(work_bit_count);

  00739	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR _work_bit_count$15[ebp]
  0073f	52		 push	 edx
  00740	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00746	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  0074b	89 85 24 ff ff
	ff		 mov	 DWORD PTR _work_v_buf$13[ebp], eax

; 365  :                         NUMBER_HEADER* w = root.AllocateNumber(work_bit_count);

  00751	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _work_bit_count$15[ebp]
  00757	50		 push	 eax
  00758	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  0075e	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00763	89 85 20 ff ff
	ff		 mov	 DWORD PTR _w$12[ebp], eax

; 366  :                         __UNIT_TYPE u_tzcnt = u->TRAILING_ZERO_BITS_COUNT;

  00769	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  0076c	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0076f	89 95 1c ff ff
	ff		 mov	 DWORD PTR _u_tzcnt$11[ebp], edx

; 367  :                         __UNIT_TYPE v_tzcnt = _TZCNT_ALT_UNIT((__UNIT_TYPE)v);

  00775	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00778	50		 push	 eax
  00779	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  0077e	83 c4 04	 add	 esp, 4
  00781	89 85 18 ff ff
	ff		 mov	 DWORD PTR _v_tzcnt$10[ebp], eax

; 368  :                         __UNIT_TYPE k = _MINIMUM_UNIT(u_tzcnt, v_tzcnt);

  00787	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR _v_tzcnt$10[ebp]
  0078d	51		 push	 ecx
  0078e	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR _u_tzcnt$11[ebp]
  00794	52		 push	 edx
  00795	e8 00 00 00 00	 call	 __MINIMUM_UNIT
  0079a	83 c4 08	 add	 esp, 8
  0079d	89 85 14 ff ff
	ff		 mov	 DWORD PTR _k$9[ebp], eax

; 369  :                         if (u_tzcnt > 0)

  007a3	83 bd 1c ff ff
	ff 00		 cmp	 DWORD PTR _u_tzcnt$11[ebp], 0
  007aa	76 28		 jbe	 SHORT $LN21@PMC_Greate

; 370  :                             RightShift_Imp(u->BLOCK, u->UNIT_WORD_COUNT, u_tzcnt, work_u_buf, FALSE);

  007ac	6a 00		 push	 0
  007ae	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _work_u_buf$14[ebp]
  007b4	50		 push	 eax
  007b5	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _u_tzcnt$11[ebp]
  007bb	51		 push	 ecx
  007bc	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  007bf	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  007c2	50		 push	 eax
  007c3	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  007c6	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  007c9	52		 push	 edx
  007ca	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
  007cf	83 c4 14	 add	 esp, 20			; 00000014H

; 371  :                         else

  007d2	eb 1d		 jmp	 SHORT $LN22@PMC_Greate
$LN21@PMC_Greate:

; 372  :                             _COPY_MEMORY_UNIT(work_u_buf, u->BLOCK, u->UNIT_WORD_COUNT);

  007d4	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  007d7	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  007da	51		 push	 ecx
  007db	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  007de	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  007e1	50		 push	 eax
  007e2	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _work_u_buf$14[ebp]
  007e8	51		 push	 ecx
  007e9	e8 00 00 00 00	 call	 __COPY_MEMORY_UNIT
  007ee	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN22@PMC_Greate:

; 373  :                         work_v_buf[0] = (__UNIT_TYPE)(v >> v_tzcnt);

  007f1	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  007f4	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp+4]
  007f7	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR _v_tzcnt$10[ebp]
  007fd	e8 00 00 00 00	 call	 __aullshr
  00802	ba 04 00 00 00	 mov	 edx, 4
  00807	6b ca 00	 imul	 ecx, edx, 0
  0080a	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _work_v_buf$13[ebp]
  00810	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 374  : 
; 375  :                         __UNIT_TYPE w_buf_count;
; 376  :                         GreatestCommonDivisor_Imp(work_u_buf, work_v_buf, _DIVIDE_CEILING_UNIT(work_bit_count, __UNIT_TYPE_BIT_COUNT), w->BLOCK, &w_buf_count);

  00813	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _w$12[ebp]
  00819	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0081c	89 8d bc fe ff
	ff		 mov	 DWORD PTR tv408[ebp], ecx
  00822	6a 20		 push	 32			; 00000020H
  00824	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR _work_bit_count$15[ebp]
  0082a	52		 push	 edx
  0082b	e8 00 00 00 00	 call	 __DIVIDE_CEILING_UNIT
  00830	83 c4 08	 add	 esp, 8
  00833	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv406[ebp], eax
  00839	8d 85 0c ff ff
	ff		 lea	 eax, DWORD PTR _w_buf_count$8[ebp]
  0083f	50		 push	 eax
  00840	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv408[ebp]
  00846	51		 push	 ecx
  00847	8b 95 b8 fe ff
	ff		 mov	 edx, DWORD PTR tv406[ebp]
  0084d	52		 push	 edx
  0084e	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _work_v_buf$13[ebp]
  00854	50		 push	 eax
  00855	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _work_u_buf$14[ebp]
  0085b	51		 push	 ecx
  0085c	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_Imp@Internal@Core@Math@Palmtree@@YAXPAI0I00@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_Imp
  00861	83 c4 14	 add	 esp, 20			; 00000014H

; 377  :                         root.CheckBlock(work_u_buf);

  00864	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _work_u_buf$14[ebp]
  0086a	52		 push	 edx
  0086b	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00871	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 378  :                         root.CheckBlock(work_v_buf);

  00876	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _work_v_buf$13[ebp]
  0087c	50		 push	 eax
  0087d	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00883	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 379  :                         root.CheckNumber(w);

  00888	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _w$12[ebp]
  0088e	51		 push	 ecx
  0088f	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00895	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 380  :                         root.DeallocateBlock(work_v_buf);

  0089a	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _work_v_buf$13[ebp]
  008a0	52		 push	 edx
  008a1	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  008a7	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 381  :                         root.DeallocateBlock(work_u_buf);

  008ac	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _work_u_buf$14[ebp]
  008b2	50		 push	 eax
  008b3	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  008b9	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 382  : 
; 383  :                         LeftShift_Imp(w->BLOCK, w_buf_count, k, w->BLOCK, TRUE);

  008be	6a 01		 push	 1
  008c0	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _w$12[ebp]
  008c6	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  008c9	52		 push	 edx
  008ca	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _k$9[ebp]
  008d0	50		 push	 eax
  008d1	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _w_buf_count$8[ebp]
  008d7	51		 push	 ecx
  008d8	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _w$12[ebp]
  008de	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  008e1	50		 push	 eax
  008e2	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp
  008e7	83 c4 14	 add	 esp, 20			; 00000014H

; 384  :                         root.CheckNumber(w);

  008ea	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _w$12[ebp]
  008f0	51		 push	 ecx
  008f1	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  008f7	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 385  :                         CommitNumber(w);

  008fc	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _w$12[ebp]
  00902	52		 push	 edx
  00903	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  00908	83 c4 04	 add	 esp, 4

; 386  :                         root.UnlinkNumber(w);

  0090b	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _w$12[ebp]
  00911	50		 push	 eax
  00912	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00918	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 387  :                         return (w);

  0091d	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _w$12[ebp]
  00923	89 8d dc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00929	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00930	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00936	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0093b	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00941	eb 12		 jmp	 SHORT $LN23@PMC_Greate
$LN20@PMC_Greate:

; 388  :                     }
; 389  :                 }

  00943	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0094a	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00950	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN23@PMC_Greate:

; 390  :             }
; 391  :         }
; 392  :     }

  00955	52		 push	 edx
  00956	8b cd		 mov	 ecx, ebp
  00958	50		 push	 eax
  00959	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN38@PMC_Greate
  0095f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00964	58		 pop	 eax
  00965	5a		 pop	 edx
  00966	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00969	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00970	59		 pop	 ecx
  00971	5f		 pop	 edi
  00972	81 c4 48 01 00
	00		 add	 esp, 328		; 00000148H
  00978	3b ec		 cmp	 ebp, esp
  0097a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0097f	8b e5		 mov	 esp, ebp
  00981	5d		 pop	 ebp
  00982	c3		 ret	 0
  00983	90		 npad	 1
$LN38@PMC_Greate:
  00984	07 00 00 00	 DD	 7
  00988	00 00 00 00	 DD	 $LN37@PMC_Greate
$LN37@PMC_Greate:
  0098c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00990	04 00 00 00	 DD	 4
  00994	00 00 00 00	 DD	 $LN29@PMC_Greate
  00998	cc ff ff ff	 DD	 -52			; ffffffccH
  0099c	10 00 00 00	 DD	 16			; 00000010H
  009a0	00 00 00 00	 DD	 $LN30@PMC_Greate
  009a4	9c ff ff ff	 DD	 -100			; ffffff9cH
  009a8	04 00 00 00	 DD	 4
  009ac	00 00 00 00	 DD	 $LN31@PMC_Greate
  009b0	84 ff ff ff	 DD	 -124			; ffffff84H
  009b4	10 00 00 00	 DD	 16			; 00000010H
  009b8	00 00 00 00	 DD	 $LN32@PMC_Greate
  009bc	58 ff ff ff	 DD	 -168			; ffffff58H
  009c0	04 00 00 00	 DD	 4
  009c4	00 00 00 00	 DD	 $LN33@PMC_Greate
  009c8	40 ff ff ff	 DD	 -192			; ffffff40H
  009cc	10 00 00 00	 DD	 16			; 00000010H
  009d0	00 00 00 00	 DD	 $LN34@PMC_Greate
  009d4	0c ff ff ff	 DD	 -244			; ffffff0cH
  009d8	04 00 00 00	 DD	 4
  009dc	00 00 00 00	 DD	 $LN35@PMC_Greate
$LN35@PMC_Greate:
  009e0	77		 DB	 119			; 00000077H
  009e1	5f		 DB	 95			; 0000005fH
  009e2	62		 DB	 98			; 00000062H
  009e3	75		 DB	 117			; 00000075H
  009e4	66		 DB	 102			; 00000066H
  009e5	5f		 DB	 95			; 0000005fH
  009e6	63		 DB	 99			; 00000063H
  009e7	6f		 DB	 111			; 0000006fH
  009e8	75		 DB	 117			; 00000075H
  009e9	6e		 DB	 110			; 0000006eH
  009ea	74		 DB	 116			; 00000074H
  009eb	00		 DB	 0
$LN34@PMC_Greate:
  009ec	72		 DB	 114			; 00000072H
  009ed	6f		 DB	 111			; 0000006fH
  009ee	6f		 DB	 111			; 0000006fH
  009ef	74		 DB	 116			; 00000074H
  009f0	00		 DB	 0
$LN33@PMC_Greate:
  009f1	77		 DB	 119			; 00000077H
  009f2	5f		 DB	 95			; 0000005fH
  009f3	62		 DB	 98			; 00000062H
  009f4	75		 DB	 117			; 00000075H
  009f5	66		 DB	 102			; 00000066H
  009f6	5f		 DB	 95			; 0000005fH
  009f7	63		 DB	 99			; 00000063H
  009f8	6f		 DB	 111			; 0000006fH
  009f9	75		 DB	 117			; 00000075H
  009fa	6e		 DB	 110			; 0000006eH
  009fb	74		 DB	 116			; 00000074H
  009fc	00		 DB	 0
$LN32@PMC_Greate:
  009fd	72		 DB	 114			; 00000072H
  009fe	6f		 DB	 111			; 0000006fH
  009ff	6f		 DB	 111			; 0000006fH
  00a00	74		 DB	 116			; 00000074H
  00a01	00		 DB	 0
$LN31@PMC_Greate:
  00a02	77		 DB	 119			; 00000077H
  00a03	5f		 DB	 95			; 0000005fH
  00a04	62		 DB	 98			; 00000062H
  00a05	75		 DB	 117			; 00000075H
  00a06	66		 DB	 102			; 00000066H
  00a07	5f		 DB	 95			; 0000005fH
  00a08	63		 DB	 99			; 00000063H
  00a09	6f		 DB	 111			; 0000006fH
  00a0a	75		 DB	 117			; 00000075H
  00a0b	6e		 DB	 110			; 0000006eH
  00a0c	74		 DB	 116			; 00000074H
  00a0d	00		 DB	 0
$LN30@PMC_Greate:
  00a0e	72		 DB	 114			; 00000072H
  00a0f	6f		 DB	 111			; 0000006fH
  00a10	6f		 DB	 111			; 0000006fH
  00a11	74		 DB	 116			; 00000074H
  00a12	00		 DB	 0
$LN29@PMC_Greate:
  00a13	76		 DB	 118			; 00000076H
  00a14	5f		 DB	 95			; 0000005fH
  00a15	68		 DB	 104			; 00000068H
  00a16	69		 DB	 105			; 00000069H
  00a17	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _root$40[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$1:
  00008	8d 4d 84	 lea	 ecx, DWORD PTR _root$29[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$2:
  00010	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _root$19[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z:
  0001b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00022	8b 8a bc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-324]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L_Imp
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
tv181 = -132						; size = 4
tv183 = -128						; size = 4
tv95 = -124						; size = 4
$T2 = -120						; size = 4
$T3 = -116						; size = 4
$T4 = -112						; size = 24
_w_buf_count$5 = -84					; size = 4
_k$6 = -76						; size = 4
_v_tzcnt$7 = -72					; size = 4
_u_tzcnt$8 = -68					; size = 4
_w$9 = -64						; size = 4
_work_v_buf$10 = -60					; size = 4
_work_u_buf$11 = -56					; size = 4
_work_bit_count$12 = -52				; size = 4
_v_bit_count$13 = -48					; size = 4
_u_bit_count$14 = -44					; size = 4
_w$15 = -40						; size = 4
_root$16 = -32						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I_Imp

; 133  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 78	 sub	 esp, 120		; 00000078H
  00014	57		 push	 edi
  00015	8d bd 7c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-132]
  0001b	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0003d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 134  :         if (u->IS_ZERO)

  00042	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00045	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00048	83 e1 01	 and	 ecx, 1
  0004b	74 39		 je	 SHORT $LN2@PMC_Greate

; 135  :         {
; 136  :             // u が 0 である場合
; 137  : 
; 138  :             if (v == 0)

  0004d	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00051	75 1d		 jne	 SHORT $LN4@PMC_Greate

; 139  :             {
; 140  :                 // v が 0 である場合
; 141  : 
; 142  :                 // u と v がともに 0 であり、GCD は一意に存在しないため、エラーを返す。
; 143  :                 throw ArithmeticException(L"引数が2つとも0なのでGCDを一意に求めることができません。");

  00053	68 00 00 00 00	 push	 OFFSET $SG118082
  00058	8d 4d 90	 lea	 ecx, DWORD PTR $T4[ebp]
  0005b	e8 00 00 00 00	 call	 ??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException
  00060	68 00 00 00 00	 push	 OFFSET __TI2?AVArithmeticException@Internal@Core@Math@Palmtree@@
  00065	8d 55 90	 lea	 edx, DWORD PTR $T4[ebp]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 __CxxThrowException@8

; 144  :             }
; 145  :             else

  0006e	eb 11		 jmp	 SHORT $LN5@PMC_Greate
$LN4@PMC_Greate:

; 146  :             {
; 147  :                 // v が 0 ではない場合
; 148  : 
; 149  :                 // GCD は v そのものであるため、v を計算結果として返す。
; 150  :                 return (From_I_Imp(v));

  00070	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?From_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::From_I_Imp
  00079	83 c4 04	 add	 esp, 4
  0007c	e9 8c 02 00 00	 jmp	 $LN12@PMC_Greate
$LN5@PMC_Greate:

; 151  :             }
; 152  :         }
; 153  :         else

  00081	e9 87 02 00 00	 jmp	 $LN12@PMC_Greate
$LN2@PMC_Greate:

; 154  :         {
; 155  :             // u が 0 ではない場合
; 156  : 
; 157  :             if (v == 0)

  00086	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  0008a	75 16		 jne	 SHORT $LN6@PMC_Greate

; 158  :             {
; 159  :                 // v が 0 である場合
; 160  : 
; 161  :                 // GCD は u そのものであるため、u を計算結果として返す。
; 162  :                 return (DuplicateNumber(u));

  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00095	83 c4 04	 add	 esp, 4
  00098	e9 70 02 00 00	 jmp	 $LN12@PMC_Greate

; 163  :             }
; 164  :             else

  0009d	e9 6b 02 00 00	 jmp	 $LN12@PMC_Greate
$LN6@PMC_Greate:

; 165  :             {
; 166  :                 // u と v がともに 0 ではない場合
; 167  :                 // u と v の GCD を計算する
; 168  : 
; 169  :                 ResourceHolderUINT root;

  000a2	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  000a5	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000aa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 170  :                 if (u->UNIT_WORD_COUNT <= 1)

  000b1	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  000b4	83 7a 10 01	 cmp	 DWORD PTR [edx+16], 1
  000b8	0f 87 88 00 00
	00		 ja	 $LN8@PMC_Greate

; 171  :                 {
; 172  :                     // u と v がともに 1 ワードで表現できる場合
; 173  :                     NUMBER_HEADER* w = root.AllocateNumber(__UNIT_TYPE_BIT_COUNT);

  000be	6a 20		 push	 32			; 00000020H
  000c0	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  000c3	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000c8	89 45 d8	 mov	 DWORD PTR _w$15[ebp], eax

; 174  :                     w->BLOCK[0] = GreatestCommonDivisor_1W_Imp(u->BLOCK[0], v);

  000cb	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  000ce	50		 push	 eax
  000cf	b9 04 00 00 00	 mov	 ecx, 4
  000d4	6b d1 00	 imul	 edx, ecx, 0
  000d7	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000da	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000dd	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  000e0	52		 push	 edx
  000e1	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_1W_Imp@Internal@Core@Math@Palmtree@@YAIII@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_1W_Imp
  000e6	83 c4 08	 add	 esp, 8
  000e9	89 45 84	 mov	 DWORD PTR tv95[ebp], eax
  000ec	b8 04 00 00 00	 mov	 eax, 4
  000f1	6b c8 00	 imul	 ecx, eax, 0
  000f4	8b 55 d8	 mov	 edx, DWORD PTR _w$15[ebp]
  000f7	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000fa	8b 55 84	 mov	 edx, DWORD PTR tv95[ebp]
  000fd	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 175  :                     root.CheckNumber(w);

  00100	8b 45 d8	 mov	 eax, DWORD PTR _w$15[ebp]
  00103	50		 push	 eax
  00104	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00107	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 176  :                     CommitNumber(w);

  0010c	8b 4d d8	 mov	 ecx, DWORD PTR _w$15[ebp]
  0010f	51		 push	 ecx
  00110	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  00115	83 c4 04	 add	 esp, 4

; 177  :                     root.UnlinkNumber(w);

  00118	8b 55 d8	 mov	 edx, DWORD PTR _w$15[ebp]
  0011b	52		 push	 edx
  0011c	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0011f	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 178  :                     return (w);

  00124	8b 45 d8	 mov	 eax, DWORD PTR _w$15[ebp]
  00127	89 45 8c	 mov	 DWORD PTR $T3[ebp], eax
  0012a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00131	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00134	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00139	8b 45 8c	 mov	 eax, DWORD PTR $T3[ebp]
  0013c	e9 cc 01 00 00	 jmp	 $LN12@PMC_Greate

; 179  :                 }
; 180  :                 else

  00141	e9 b8 01 00 00	 jmp	 $LN9@PMC_Greate
$LN8@PMC_Greate:

; 181  :                 {
; 182  :                     // u と v のどちらかが 1 ワードで表現できない場合
; 183  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00146	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00149	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0014c	89 55 d4	 mov	 DWORD PTR _u_bit_count$14[ebp], edx

; 184  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  0014f	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  00158	83 c4 04	 add	 esp, 4
  0015b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00160	2b c8		 sub	 ecx, eax
  00162	89 4d d0	 mov	 DWORD PTR _v_bit_count$13[ebp], ecx

; 185  :                     __UNIT_TYPE work_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count);

  00165	8b 55 d0	 mov	 edx, DWORD PTR _v_bit_count$13[ebp]
  00168	52		 push	 edx
  00169	8b 45 d4	 mov	 eax, DWORD PTR _u_bit_count$14[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 __MAXIMUM_UNIT
  00172	83 c4 08	 add	 esp, 8
  00175	89 45 cc	 mov	 DWORD PTR _work_bit_count$12[ebp], eax

; 186  :                     __UNIT_TYPE* work_u_buf = root.AllocateBlock(work_bit_count);

  00178	8b 4d cc	 mov	 ecx, DWORD PTR _work_bit_count$12[ebp]
  0017b	51		 push	 ecx
  0017c	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0017f	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00184	89 45 c8	 mov	 DWORD PTR _work_u_buf$11[ebp], eax

; 187  :                     __UNIT_TYPE* work_v_buf = root.AllocateBlock(work_bit_count);

  00187	8b 55 cc	 mov	 edx, DWORD PTR _work_bit_count$12[ebp]
  0018a	52		 push	 edx
  0018b	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0018e	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00193	89 45 c4	 mov	 DWORD PTR _work_v_buf$10[ebp], eax

; 188  :                     NUMBER_HEADER* w = root.AllocateNumber(work_bit_count);

  00196	8b 45 cc	 mov	 eax, DWORD PTR _work_bit_count$12[ebp]
  00199	50		 push	 eax
  0019a	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0019d	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  001a2	89 45 c0	 mov	 DWORD PTR _w$9[ebp], eax

; 189  :                     __UNIT_TYPE u_tzcnt = u->TRAILING_ZERO_BITS_COUNT;

  001a5	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  001a8	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  001ab	89 55 bc	 mov	 DWORD PTR _u_tzcnt$8[ebp], edx

; 190  :                     __UNIT_TYPE v_tzcnt = _TZCNT_ALT_UNIT(v);

  001ae	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  001b1	50		 push	 eax
  001b2	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  001b7	83 c4 04	 add	 esp, 4
  001ba	89 45 b8	 mov	 DWORD PTR _v_tzcnt$7[ebp], eax

; 191  :                     __UNIT_TYPE k = _MINIMUM_UNIT(u_tzcnt, v_tzcnt);

  001bd	8b 4d b8	 mov	 ecx, DWORD PTR _v_tzcnt$7[ebp]
  001c0	51		 push	 ecx
  001c1	8b 55 bc	 mov	 edx, DWORD PTR _u_tzcnt$8[ebp]
  001c4	52		 push	 edx
  001c5	e8 00 00 00 00	 call	 __MINIMUM_UNIT
  001ca	83 c4 08	 add	 esp, 8
  001cd	89 45 b4	 mov	 DWORD PTR _k$6[ebp], eax

; 192  :                     if (u_tzcnt > 0)

  001d0	83 7d bc 00	 cmp	 DWORD PTR _u_tzcnt$8[ebp], 0
  001d4	76 22		 jbe	 SHORT $LN10@PMC_Greate

; 193  :                         RightShift_Imp(u->BLOCK, u->UNIT_WORD_COUNT, u_tzcnt, work_u_buf, FALSE);

  001d6	6a 00		 push	 0
  001d8	8b 45 c8	 mov	 eax, DWORD PTR _work_u_buf$11[ebp]
  001db	50		 push	 eax
  001dc	8b 4d bc	 mov	 ecx, DWORD PTR _u_tzcnt$8[ebp]
  001df	51		 push	 ecx
  001e0	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  001e3	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  001e6	50		 push	 eax
  001e7	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  001ea	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  001ed	52		 push	 edx
  001ee	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
  001f3	83 c4 14	 add	 esp, 20			; 00000014H

; 194  :                     else

  001f6	eb 1a		 jmp	 SHORT $LN11@PMC_Greate
$LN10@PMC_Greate:

; 195  :                         _COPY_MEMORY_UNIT(work_u_buf, u->BLOCK, u->UNIT_WORD_COUNT);

  001f8	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  001fb	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  001fe	51		 push	 ecx
  001ff	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00202	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00205	50		 push	 eax
  00206	8b 4d c8	 mov	 ecx, DWORD PTR _work_u_buf$11[ebp]
  00209	51		 push	 ecx
  0020a	e8 00 00 00 00	 call	 __COPY_MEMORY_UNIT
  0020f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@PMC_Greate:

; 196  :                     work_v_buf[0] = v >> v_tzcnt;

  00212	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00215	8b 4d b8	 mov	 ecx, DWORD PTR _v_tzcnt$7[ebp]
  00218	d3 ea		 shr	 edx, cl
  0021a	b8 04 00 00 00	 mov	 eax, 4
  0021f	6b c8 00	 imul	 ecx, eax, 0
  00222	8b 45 c4	 mov	 eax, DWORD PTR _work_v_buf$10[ebp]
  00225	89 14 08	 mov	 DWORD PTR [eax+ecx], edx

; 197  :                     __UNIT_TYPE w_buf_count;
; 198  :                     GreatestCommonDivisor_Imp(work_u_buf, work_v_buf, _DIVIDE_CEILING_UNIT(work_bit_count, __UNIT_TYPE_BIT_COUNT), w->BLOCK, &w_buf_count);

  00228	8b 4d c0	 mov	 ecx, DWORD PTR _w$9[ebp]
  0022b	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0022e	89 55 80	 mov	 DWORD PTR tv183[ebp], edx
  00231	6a 20		 push	 32			; 00000020H
  00233	8b 45 cc	 mov	 eax, DWORD PTR _work_bit_count$12[ebp]
  00236	50		 push	 eax
  00237	e8 00 00 00 00	 call	 __DIVIDE_CEILING_UNIT
  0023c	83 c4 08	 add	 esp, 8
  0023f	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv181[ebp], eax
  00245	8d 4d ac	 lea	 ecx, DWORD PTR _w_buf_count$5[ebp]
  00248	51		 push	 ecx
  00249	8b 55 80	 mov	 edx, DWORD PTR tv183[ebp]
  0024c	52		 push	 edx
  0024d	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv181[ebp]
  00253	50		 push	 eax
  00254	8b 4d c4	 mov	 ecx, DWORD PTR _work_v_buf$10[ebp]
  00257	51		 push	 ecx
  00258	8b 55 c8	 mov	 edx, DWORD PTR _work_u_buf$11[ebp]
  0025b	52		 push	 edx
  0025c	e8 00 00 00 00	 call	 ?GreatestCommonDivisor_Imp@Internal@Core@Math@Palmtree@@YAXPAI0I00@Z ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_Imp
  00261	83 c4 14	 add	 esp, 20			; 00000014H

; 199  :                     root.CheckBlock(work_u_buf);

  00264	8b 45 c8	 mov	 eax, DWORD PTR _work_u_buf$11[ebp]
  00267	50		 push	 eax
  00268	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0026b	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 200  :                     root.CheckBlock(work_v_buf);

  00270	8b 4d c4	 mov	 ecx, DWORD PTR _work_v_buf$10[ebp]
  00273	51		 push	 ecx
  00274	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00277	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 201  :                     root.CheckNumber(w);

  0027c	8b 55 c0	 mov	 edx, DWORD PTR _w$9[ebp]
  0027f	52		 push	 edx
  00280	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00283	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 202  :                     root.DeallocateBlock(work_v_buf);

  00288	8b 45 c4	 mov	 eax, DWORD PTR _work_v_buf$10[ebp]
  0028b	50		 push	 eax
  0028c	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0028f	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 203  :                     root.DeallocateBlock(work_u_buf);

  00294	8b 4d c8	 mov	 ecx, DWORD PTR _work_u_buf$11[ebp]
  00297	51		 push	 ecx
  00298	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  0029b	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 204  :                     LeftShift_Imp(w->BLOCK, w_buf_count, k, w->BLOCK, TRUE);

  002a0	6a 01		 push	 1
  002a2	8b 55 c0	 mov	 edx, DWORD PTR _w$9[ebp]
  002a5	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  002a8	50		 push	 eax
  002a9	8b 4d b4	 mov	 ecx, DWORD PTR _k$6[ebp]
  002ac	51		 push	 ecx
  002ad	8b 55 ac	 mov	 edx, DWORD PTR _w_buf_count$5[ebp]
  002b0	52		 push	 edx
  002b1	8b 45 c0	 mov	 eax, DWORD PTR _w$9[ebp]
  002b4	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  002b7	51		 push	 ecx
  002b8	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp
  002bd	83 c4 14	 add	 esp, 20			; 00000014H

; 205  :                     root.CheckNumber(w);

  002c0	8b 55 c0	 mov	 edx, DWORD PTR _w$9[ebp]
  002c3	52		 push	 edx
  002c4	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  002c7	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 206  :                     CommitNumber(w);

  002cc	8b 45 c0	 mov	 eax, DWORD PTR _w$9[ebp]
  002cf	50		 push	 eax
  002d0	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  002d5	83 c4 04	 add	 esp, 4

; 207  :                     root.UnlinkNumber(w);

  002d8	8b 4d c0	 mov	 ecx, DWORD PTR _w$9[ebp]
  002db	51		 push	 ecx
  002dc	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  002df	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 208  :                     return (w);

  002e4	8b 55 c0	 mov	 edx, DWORD PTR _w$9[ebp]
  002e7	89 55 88	 mov	 DWORD PTR $T2[ebp], edx
  002ea	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002f1	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  002f4	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  002f9	8b 45 88	 mov	 eax, DWORD PTR $T2[ebp]
  002fc	eb 0f		 jmp	 SHORT $LN12@PMC_Greate
$LN9@PMC_Greate:

; 209  :                 }
; 210  :             }

  002fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00305	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00308	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN12@PMC_Greate:

; 211  :         }
; 212  :     }

  0030d	52		 push	 edx
  0030e	8b cd		 mov	 ecx, ebp
  00310	50		 push	 eax
  00311	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@PMC_Greate
  00317	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0031c	58		 pop	 eax
  0031d	5a		 pop	 edx
  0031e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00321	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00328	59		 pop	 ecx
  00329	5f		 pop	 edi
  0032a	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  00330	3b ec		 cmp	 ebp, esp
  00332	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00337	8b e5		 mov	 esp, ebp
  00339	5d		 pop	 ebp
  0033a	c3		 ret	 0
  0033b	90		 npad	 1
$LN18@PMC_Greate:
  0033c	02 00 00 00	 DD	 2
  00340	00 00 00 00	 DD	 $LN17@PMC_Greate
$LN17@PMC_Greate:
  00344	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00348	10 00 00 00	 DD	 16			; 00000010H
  0034c	00 00 00 00	 DD	 $LN14@PMC_Greate
  00350	ac ff ff ff	 DD	 -84			; ffffffacH
  00354	04 00 00 00	 DD	 4
  00358	00 00 00 00	 DD	 $LN15@PMC_Greate
$LN15@PMC_Greate:
  0035c	77		 DB	 119			; 00000077H
  0035d	5f		 DB	 95			; 0000005fH
  0035e	62		 DB	 98			; 00000062H
  0035f	75		 DB	 117			; 00000075H
  00360	66		 DB	 102			; 00000066H
  00361	5f		 DB	 95			; 0000005fH
  00362	63		 DB	 99			; 00000063H
  00363	6f		 DB	 111			; 0000006fH
  00364	75		 DB	 117			; 00000075H
  00365	6e		 DB	 110			; 0000006eH
  00366	74		 DB	 116			; 00000074H
  00367	00		 DB	 0
$LN14@PMC_Greate:
  00368	72		 DB	 114			; 00000072H
  00369	6f		 DB	 111			; 0000006fH
  0036a	6f		 DB	 111			; 0000006fH
  0036b	74		 DB	 116			; 00000074H
  0036c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _root$16[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a 80	 mov	 ecx, DWORD PTR [edx-128]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I_Imp
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
tv69 = -48						; size = 4
$T1 = -44						; size = 24
_u_tz_count$2 = -20					; size = 4
_tt$3 = -16						; size = 4
_v_tz_count$4 = -12					; size = 4
_u_tz_count$5 = -8					; size = 4
_k$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?GreatestCommonDivisor_1W_Imp@Internal@Core@Math@Palmtree@@YAIII@Z PROC ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_1W_Imp

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	57		 push	 edi
  00007	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 87   :         int k;
; 88   :         {
; 89   :             int u_tz_count = _TZCNT_ALT_UNIT(u);

  00020	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  00029	83 c4 04	 add	 esp, 4
  0002c	89 45 f8	 mov	 DWORD PTR _u_tz_count$5[ebp], eax

; 90   :             int v_tz_count = _TZCNT_ALT_UNIT(v);

  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  00038	83 c4 04	 add	 esp, 4
  0003b	89 45 f4	 mov	 DWORD PTR _v_tz_count$4[ebp], eax

; 91   :             k = u_tz_count < v_tz_count ? u_tz_count : v_tz_count;

  0003e	8b 55 f8	 mov	 edx, DWORD PTR _u_tz_count$5[ebp]
  00041	3b 55 f4	 cmp	 edx, DWORD PTR _v_tz_count$4[ebp]
  00044	7d 08		 jge	 SHORT $LN13@GreatestCo
  00046	8b 45 f8	 mov	 eax, DWORD PTR _u_tz_count$5[ebp]
  00049	89 45 d0	 mov	 DWORD PTR tv69[ebp], eax
  0004c	eb 06		 jmp	 SHORT $LN14@GreatestCo
$LN13@GreatestCo:
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR _v_tz_count$4[ebp]
  00051	89 4d d0	 mov	 DWORD PTR tv69[ebp], ecx
$LN14@GreatestCo:
  00054	8b 55 d0	 mov	 edx, DWORD PTR tv69[ebp]
  00057	89 55 fc	 mov	 DWORD PTR _k$[ebp], edx

; 92   :             if (u_tz_count > 0)

  0005a	83 7d f8 00	 cmp	 DWORD PTR _u_tz_count$5[ebp], 0
  0005e	7e 0b		 jle	 SHORT $LN5@GreatestCo

; 93   :                 u >>= u_tz_count;

  00060	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _u_tz_count$5[ebp]
  00066	d3 e8		 shr	 eax, cl
  00068	89 45 08	 mov	 DWORD PTR _u$[ebp], eax
$LN5@GreatestCo:

; 94   :             if (v_tz_count > 0)

  0006b	83 7d f4 00	 cmp	 DWORD PTR _v_tz_count$4[ebp], 0
  0006f	7e 0b		 jle	 SHORT $LN4@GreatestCo

; 95   :                 v >>= v_tz_count;

  00071	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR _v_tz_count$4[ebp]
  00077	d3 ea		 shr	 edx, cl
  00079	89 55 0c	 mov	 DWORD PTR _v$[ebp], edx
$LN4@GreatestCo:

; 96   :         }
; 97   :         for (;;)
; 98   :         {
; 99   :             if (u == 0 || v == 0)

  0007c	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00080	74 06		 je	 SHORT $LN8@GreatestCo
  00082	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00086	75 20		 jne	 SHORT $LN7@GreatestCo
$LN8@GreatestCo:

; 100  :             {
; 101  :                 // このルートへの到達はあり得ないはず。
; 102  :                 throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_greatestcommondivisor.cpp;GreatestCommonDivisor_1W_Imp;1");

  00088	68 00 00 00 00	 push	 OFFSET $SG118050
  0008d	68 00 00 00 00	 push	 OFFSET $SG118051
  00092	8d 4d d4	 lea	 ecx, DWORD PTR $T1[ebp]
  00095	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0009a	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0009f	8d 45 d4	 lea	 eax, DWORD PTR $T1[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@GreatestCo:

; 103  :             }
; 104  :             if (u == v)

  000a8	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  000ab	3b 4d 0c	 cmp	 ecx, DWORD PTR _v$[ebp]
  000ae	75 0a		 jne	 SHORT $LN9@GreatestCo

; 105  :             {
; 106  :                 // u == v の場合
; 107  : 
; 108  :                 // GCD を u として復帰
; 109  :                 return (u << k);

  000b0	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _k$[ebp]
  000b6	d3 e0		 shl	 eax, cl
  000b8	eb 48		 jmp	 SHORT $LN12@GreatestCo
$LN9@GreatestCo:

; 110  :             }
; 111  :             if (u < v)

  000ba	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  000bd	3b 55 0c	 cmp	 edx, DWORD PTR _v$[ebp]
  000c0	73 12		 jae	 SHORT $LN10@GreatestCo

; 112  :             {
; 113  :                 __UNIT_TYPE tt = u;

  000c2	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000c5	89 45 f0	 mov	 DWORD PTR _tt$3[ebp], eax

; 114  :                 u = v;

  000c8	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000cb	89 4d 08	 mov	 DWORD PTR _u$[ebp], ecx

; 115  :                 v = tt;

  000ce	8b 55 f0	 mov	 edx, DWORD PTR _tt$3[ebp]
  000d1	89 55 0c	 mov	 DWORD PTR _v$[ebp], edx
$LN10@GreatestCo:

; 116  :             }
; 117  :             // この時点で u > v かつ u と v はともに奇数である
; 118  : 
; 119  :             u = u - v;

  000d4	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000d7	2b 45 0c	 sub	 eax, DWORD PTR _v$[ebp]
  000da	89 45 08	 mov	 DWORD PTR _u$[ebp], eax

; 120  : 
; 121  :             // この時点で u は偶数
; 122  : 
; 123  :             // u が奇数になるまで u を右シフトする
; 124  :             {
; 125  :                 int u_tz_count = _TZCNT_ALT_UNIT(u);

  000dd	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  000e0	51		 push	 ecx
  000e1	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  000e6	83 c4 04	 add	 esp, 4
  000e9	89 45 ec	 mov	 DWORD PTR _u_tz_count$2[ebp], eax

; 126  :                 if (u_tz_count > 0)

  000ec	83 7d ec 00	 cmp	 DWORD PTR _u_tz_count$2[ebp], 0
  000f0	7e 0b		 jle	 SHORT $LN11@GreatestCo

; 127  :                     u >>= u_tz_count;

  000f2	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  000f5	8b 4d ec	 mov	 ecx, DWORD PTR _u_tz_count$2[ebp]
  000f8	d3 ea		 shr	 edx, cl
  000fa	89 55 08	 mov	 DWORD PTR _u$[ebp], edx
$LN11@GreatestCo:

; 128  :             }
; 129  :         }

  000fd	e9 7a ff ff ff	 jmp	 $LN4@GreatestCo
$LN12@GreatestCo:

; 130  :     }

  00102	5f		 pop	 edi
  00103	83 c4 30	 add	 esp, 48			; 00000030H
  00106	3b ec		 cmp	 ebp, esp
  00108	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010d	8b e5		 mov	 esp, ebp
  0010f	5d		 pop	 ebp
  00110	c3		 ret	 0
?GreatestCommonDivisor_1W_Imp@Internal@Core@Math@Palmtree@@YAIII@Z ENDP ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_1W_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
$T1 = -48						; size = 24
_tz_count$2 = -24					; size = 4
_t_ptr$3 = -20						; size = 4
_tt$4 = -16						; size = 4
_c$5 = -12						; size = 4
_v$ = -8						; size = 4
_u$ = -4						; size = 4
_p1_buf$ = 8						; size = 4
_p2_buf$ = 12						; size = 4
_word_count$ = 16					; size = 4
_w_buf$ = 20						; size = 4
_w_buf_count$ = 24					; size = 4
?GreatestCommonDivisor_Imp@Internal@Core@Math@Palmtree@@YAXPAI0I00@Z PROC ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_Imp

; 37   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	57		 push	 edi
  00007	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 38   :         __UNIT_TYPE* u = p1_buf;

  00020	8b 45 08	 mov	 eax, DWORD PTR _p1_buf$[ebp]
  00023	89 45 fc	 mov	 DWORD PTR _u$[ebp], eax

; 39   :         __UNIT_TYPE* v = p2_buf;

  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _p2_buf$[ebp]
  00029	89 4d f8	 mov	 DWORD PTR _v$[ebp], ecx
$LN5@GreatestCo:

; 40   :         for (;;)
; 41   :         {
; 42   :             while (word_count > 0 && u[word_count - 1] == 0 && v[word_count - 1] == 0)

  0002c	83 7d 10 00	 cmp	 DWORD PTR _word_count$[ebp], 0
  00030	76 25		 jbe	 SHORT $LN6@GreatestCo
  00032	8b 55 10	 mov	 edx, DWORD PTR _word_count$[ebp]
  00035	8b 45 fc	 mov	 eax, DWORD PTR _u$[ebp]
  00038	83 7c 90 fc 00	 cmp	 DWORD PTR [eax+edx*4-4], 0
  0003d	75 18		 jne	 SHORT $LN6@GreatestCo
  0003f	8b 4d 10	 mov	 ecx, DWORD PTR _word_count$[ebp]
  00042	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp]
  00045	83 7c 8a fc 00	 cmp	 DWORD PTR [edx+ecx*4-4], 0
  0004a	75 0b		 jne	 SHORT $LN6@GreatestCo

; 43   :                 --word_count;

  0004c	8b 45 10	 mov	 eax, DWORD PTR _word_count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 10	 mov	 DWORD PTR _word_count$[ebp], eax
  00055	eb d5		 jmp	 SHORT $LN5@GreatestCo
$LN6@GreatestCo:

; 44   :             if (word_count <= 0)

  00057	83 7d 10 00	 cmp	 DWORD PTR _word_count$[ebp], 0
  0005b	77 20		 ja	 SHORT $LN9@GreatestCo

; 45   :             {
; 46   :                 // このルートへの到達はあり得ないはず。
; 47   :                 throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_greatestcommondivisor.cpp;GreatestCommonDivisor_Imp;1");

  0005d	68 00 00 00 00	 push	 OFFSET $SG118028
  00062	68 00 00 00 00	 push	 OFFSET $SG118029
  00067	8d 4d d0	 lea	 ecx, DWORD PTR $T1[ebp]
  0006a	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0006f	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00074	8d 4d d0	 lea	 ecx, DWORD PTR $T1[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN9@GreatestCo:

; 48   :             }
; 49   :             int c = Compare_Imp(u, v, word_count);

  0007d	8b 55 10	 mov	 edx, DWORD PTR _word_count$[ebp]
  00080	52		 push	 edx
  00081	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp]
  00084	50		 push	 eax
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _u$[ebp]
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ?Compare_Imp@Internal@Core@Math@Palmtree@@YAHPAI0I@Z ; Palmtree::Math::Core::Internal::Compare_Imp
  0008e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00091	89 45 f4	 mov	 DWORD PTR _c$5[ebp], eax

; 50   :             if (c == 0)

  00094	83 7d f4 00	 cmp	 DWORD PTR _c$5[ebp], 0
  00098	75 21		 jne	 SHORT $LN10@GreatestCo

; 51   :             {
; 52   :                 // u == v の場合
; 53   : 
; 54   :                 // GCD を u として復帰
; 55   :                 _COPY_MEMORY_UNIT(w_buf, u, word_count);

  0009a	8b 55 10	 mov	 edx, DWORD PTR _word_count$[ebp]
  0009d	52		 push	 edx
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _u$[ebp]
  000a1	50		 push	 eax
  000a2	8b 4d 14	 mov	 ecx, DWORD PTR _w_buf$[ebp]
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 __COPY_MEMORY_UNIT
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 56   :                 *w_buf_count = word_count;

  000ae	8b 55 18	 mov	 edx, DWORD PTR _w_buf_count$[ebp]
  000b1	8b 45 10	 mov	 eax, DWORD PTR _word_count$[ebp]
  000b4	89 02		 mov	 DWORD PTR [edx], eax

; 57   :                 return;

  000b6	e9 9a 00 00 00	 jmp	 $LN13@GreatestCo
$LN10@GreatestCo:

; 58   :             }
; 59   :             if (c < 0)

  000bb	83 7d f4 00	 cmp	 DWORD PTR _c$5[ebp], 0
  000bf	7d 12		 jge	 SHORT $LN11@GreatestCo

; 60   :             {
; 61   :                 __UNIT_TYPE* tt = u;

  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _u$[ebp]
  000c4	89 4d f0	 mov	 DWORD PTR _tt$4[ebp], ecx

; 62   :                 u = v;

  000c7	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp]
  000ca	89 55 fc	 mov	 DWORD PTR _u$[ebp], edx

; 63   :                 v = tt;

  000cd	8b 45 f0	 mov	 eax, DWORD PTR _tt$4[ebp]
  000d0	89 45 f8	 mov	 DWORD PTR _v$[ebp], eax
$LN11@GreatestCo:

; 64   :             }
; 65   :             // この時点で u > v かつ u と v はともに奇数である
; 66   : 
; 67   :             Subtruct_Imp(u, word_count, v, word_count, u, word_count);

  000d3	8b 4d 10	 mov	 ecx, DWORD PTR _word_count$[ebp]
  000d6	51		 push	 ecx
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _u$[ebp]
  000da	52		 push	 edx
  000db	8b 45 10	 mov	 eax, DWORD PTR _word_count$[ebp]
  000de	50		 push	 eax
  000df	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp]
  000e2	51		 push	 ecx
  000e3	8b 55 10	 mov	 edx, DWORD PTR _word_count$[ebp]
  000e6	52		 push	 edx
  000e7	8b 45 fc	 mov	 eax, DWORD PTR _u$[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ; Palmtree::Math::Core::Internal::Subtruct_Imp
  000f0	83 c4 18	 add	 esp, 24			; 00000018H

; 68   : 
; 69   :             // この時点で u は偶数
; 70   : 
; 71   :             // u が奇数になるまで u を右シフトする
; 72   :             __UNIT_TYPE* t_ptr = u;

  000f3	8b 4d fc	 mov	 ecx, DWORD PTR _u$[ebp]
  000f6	89 4d ec	 mov	 DWORD PTR _t_ptr$3[ebp], ecx

; 73   :             int tz_count = 0;

  000f9	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _tz_count$2[ebp], 0
$LN7@GreatestCo:

; 74   :             while (*t_ptr == 0)

  00100	8b 55 ec	 mov	 edx, DWORD PTR _t_ptr$3[ebp]
  00103	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00106	75 14		 jne	 SHORT $LN8@GreatestCo

; 75   :             {
; 76   :                 ++t_ptr;

  00108	8b 45 ec	 mov	 eax, DWORD PTR _t_ptr$3[ebp]
  0010b	83 c0 04	 add	 eax, 4
  0010e	89 45 ec	 mov	 DWORD PTR _t_ptr$3[ebp], eax

; 77   :                 tz_count += __UNIT_TYPE_BIT_COUNT;

  00111	8b 4d e8	 mov	 ecx, DWORD PTR _tz_count$2[ebp]
  00114	83 c1 20	 add	 ecx, 32			; 00000020H
  00117	89 4d e8	 mov	 DWORD PTR _tz_count$2[ebp], ecx

; 78   :             }

  0011a	eb e4		 jmp	 SHORT $LN7@GreatestCo
$LN8@GreatestCo:

; 79   :             tz_count += _TZCNT_ALT_UNIT(*t_ptr);

  0011c	8b 55 ec	 mov	 edx, DWORD PTR _t_ptr$3[ebp]
  0011f	8b 02		 mov	 eax, DWORD PTR [edx]
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 __TZCNT_ALT_UNIT
  00127	83 c4 04	 add	 esp, 4
  0012a	03 45 e8	 add	 eax, DWORD PTR _tz_count$2[ebp]
  0012d	89 45 e8	 mov	 DWORD PTR _tz_count$2[ebp], eax

; 80   :             if (tz_count > 0)

  00130	83 7d e8 00	 cmp	 DWORD PTR _tz_count$2[ebp], 0
  00134	7e 1a		 jle	 SHORT $LN12@GreatestCo

; 81   :                 RightShift_Imp(u, word_count, tz_count, u, TRUE);

  00136	6a 01		 push	 1
  00138	8b 4d fc	 mov	 ecx, DWORD PTR _u$[ebp]
  0013b	51		 push	 ecx
  0013c	8b 55 e8	 mov	 edx, DWORD PTR _tz_count$2[ebp]
  0013f	52		 push	 edx
  00140	8b 45 10	 mov	 eax, DWORD PTR _word_count$[ebp]
  00143	50		 push	 eax
  00144	8b 4d fc	 mov	 ecx, DWORD PTR _u$[ebp]
  00147	51		 push	 ecx
  00148	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPAIII0H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
  0014d	83 c4 14	 add	 esp, 20			; 00000014H
$LN12@GreatestCo:

; 82   :         }

  00150	e9 d7 fe ff ff	 jmp	 $LN5@GreatestCo
$LN13@GreatestCo:

; 83   :     }

  00155	5f		 pop	 edi
  00156	83 c4 30	 add	 esp, 48			; 00000030H
  00159	3b ec		 cmp	 ebp, esp
  0015b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00160	8b e5		 mov	 esp, ebp
  00162	5d		 pop	 ebp
  00163	c3		 ret	 0
?GreatestCommonDivisor_Imp@Internal@Core@Math@Palmtree@@YAXPAI0I00@Z ENDP ; Palmtree::Math::Core::Internal::GreatestCommonDivisor_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__TZCNT_ALT_UNIT PROC

; 505  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 506  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@TZCNT_ALT_

; 507  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0a		 jmp	 SHORT $LN1@TZCNT_ALT_
$LN2@TZCNT_ALT_:

; 508  : #ifdef _M_IX86
; 509  :             DWORD pos;
; 510  : #ifdef _MSC_VER
; 511  :             _BitScanForward(&pos, x);

  00032	0f bc 45 08	 bsf	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 512  : #elif defined(__GNUC__)
; 513  :             __asm__("bsfl %1, %0" : "=r"(pos) : "rm"(x));
; 514  : #else
; 515  : #error unknown compiler
; 516  : #endif
; 517  : #elif defined(_M_X64)
; 518  : #ifdef _MSC_VER
; 519  :             DWORD pos;
; 520  :             _BitScanForward64(&pos, x);
; 521  : #elif defined(__GNUC__)
; 522  :             _UINT64_T pos;
; 523  :             __asm__("bsfq %1, %0" : "=r"(pos) : "rm"(x));
; 524  : #else
; 525  : #error unknown compiler
; 526  : #endif
; 527  : #else
; 528  : #error unknown platform
; 529  : #endif
; 530  :             return (pos);

  00039	8b 45 f8	 mov	 eax, DWORD PTR _pos$[ebp]
$LN1@TZCNT_ALT_:

; 531  :         }

  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@TZCNT_ALT_
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@TZCNT_ALT_:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@TZCNT_ALT_
$LN5@TZCNT_ALT_:
  00064	f8 ff ff ff	 DD	 -8			; fffffff8H
  00068	04 00 00 00	 DD	 4
  0006c	00 00 00 00	 DD	 $LN4@TZCNT_ALT_
$LN4@TZCNT_ALT_:
  00070	70		 DB	 112			; 00000070H
  00071	6f		 DB	 111			; 0000006fH
  00072	73		 DB	 115			; 00000073H
  00073	00		 DB	 0
__TZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__LZCNT_ALT_UNIT PROC

; 454  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 455  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0f		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);

  00032	0f bd 45 08	 bsr	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);
; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00039	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  0003e	2b 45 f8	 sub	 eax, DWORD PTR _pos$[ebp]
$LN1@LZCNT_ALT_:

; 480  :         }

  00041	52		 push	 edx
  00042	8b cd		 mov	 ecx, ebp
  00044	50		 push	 eax
  00045	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@LZCNT_ALT_
  0004b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00050	58		 pop	 eax
  00051	5a		 pop	 edx
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN6@LZCNT_ALT_:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@LZCNT_ALT_
$LN5@LZCNT_ALT_:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@LZCNT_ALT_
$LN4@LZCNT_ALT_:
  00074	70		 DB	 112			; 00000070H
  00075	6f		 DB	 111			; 0000006fH
  00076	73		 DB	 115			; 00000073H
  00077	00		 DB	 0
__LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__LZCNT_ALT_32 PROC

; 421  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 422  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0f		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  00032	0f bd 45 08	 bsr	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00039	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  0003e	2b 45 f8	 sub	 eax, DWORD PTR _pos$[ebp]
$LN1@LZCNT_ALT_:

; 433  :         }

  00041	52		 push	 edx
  00042	8b cd		 mov	 ecx, ebp
  00044	50		 push	 eax
  00045	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@LZCNT_ALT_
  0004b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00050	58		 pop	 eax
  00051	5a		 pop	 edx
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN6@LZCNT_ALT_:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@LZCNT_ALT_
$LN5@LZCNT_ALT_:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@LZCNT_ALT_
$LN4@LZCNT_ALT_:
  00074	70		 DB	 112			; 00000070H
  00075	6f		 DB	 111			; 0000006fH
  00076	73		 DB	 115			; 00000073H
  00077	00		 DB	 0
__LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
tv65 = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
__MINIMUM_UNIT PROC

; 171  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 172  :             return (x <= y ? x : y);

  00015	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00018	3b 45 0c	 cmp	 eax, DWORD PTR _y$[ebp]
  0001b	77 08		 ja	 SHORT $LN3@MINIMUM_UN
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00020	89 4d fc	 mov	 DWORD PTR tv65[ebp], ecx
  00023	eb 06		 jmp	 SHORT $LN4@MINIMUM_UN
$LN3@MINIMUM_UN:
  00025	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00028	89 55 fc	 mov	 DWORD PTR tv65[ebp], edx
$LN4@MINIMUM_UN:
  0002b	8b 45 fc	 mov	 eax, DWORD PTR tv65[ebp]

; 173  :         }

  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
__MINIMUM_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
tv65 = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
__MAXIMUM_UNIT PROC

; 166  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 167  :             return (x >= y ? x : y);

  00015	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00018	3b 45 0c	 cmp	 eax, DWORD PTR _y$[ebp]
  0001b	72 08		 jb	 SHORT $LN3@MAXIMUM_UN
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00020	89 4d fc	 mov	 DWORD PTR tv65[ebp], ecx
  00023	eb 06		 jmp	 SHORT $LN4@MAXIMUM_UN
$LN3@MAXIMUM_UN:
  00025	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00028	89 55 fc	 mov	 DWORD PTR tv65[ebp], edx
$LN4@MAXIMUM_UN:
  0002b	8b 45 fc	 mov	 eax, DWORD PTR tv65[ebp]

; 168  :         }

  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
__MAXIMUM_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_u$ = 8							; size = 4
_v$ = 12						; size = 4
__DIVIDE_CEILING_UNIT PROC

; 156  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 157  :             return ((u + v - 1) / v);

  0000d	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00013	8d 44 01 ff	 lea	 eax, DWORD PTR [ecx+eax-1]
  00017	33 d2		 xor	 edx, edx
  00019	f7 75 0c	 div	 DWORD PTR _v$[ebp]

; 158  :         }

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
__DIVIDE_CEILING_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_value$ = 8						; size = 8
_result_high$ = 16					; size = 4
__FROMDWORDTOWORD PROC

; 145  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0000d	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00010	8b 55 0c	 mov	 edx, DWORD PTR _value$[ebp+4]
  00013	b1 20		 mov	 cl, 32			; 00000020H
  00015	e8 00 00 00 00	 call	 __aullshr
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR _result_high$[ebp]
  0001d	89 01		 mov	 DWORD PTR [ecx], eax

; 147  :             return ((_UINT32_T)value);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 148  :         }

  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
__FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_d$ = 8							; size = 4
_s$ = 12						; size = 4
_count$ = 16						; size = 4
__COPY_MEMORY_UNIT PROC

; 63   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  0000a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 64   : #ifdef _M_IX86
; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);

  0000f	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00012	8b 75 0c	 mov	 esi, DWORD PTR _s$[ebp]
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00018	f3 a5		 rep movsd

; 66   : #elif defined(_M_X64)
; 67   :             __movsq(d, s, count);
; 68   : #else
; 69   : #error unknown platform
; 70   : #endif
; 71   :         }

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
__COPY_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
$T2 = -100						; size = 4
$T3 = -96						; size = 24
$T4 = -72						; size = 24
_w$ = -48						; size = 4
_root$ = -40						; size = 16
_nv$ = -20						; size = 4
_nu$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X

; 563  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 58	 sub	 esp, 88			; 00000058H
  00014	57		 push	 edi
  00015	8d 7d 9c	 lea	 edi, DWORD PTR [ebp-100]
  00018	b9 16 00 00 00	 mov	 ecx, 22			; 00000016H
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0003a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 564  :         if (u == nullptr)

  0003f	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00043	75 20		 jne	 SHORT $LN2@PMC_Greate

; 565  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00045	68 00 00 00 00	 push	 OFFSET $SG118300
  0004a	68 00 00 00 00	 push	 OFFSET $SG118301
  0004f	8d 4d b8	 lea	 ecx, DWORD PTR $T4[ebp]
  00052	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00057	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0005c	8d 45 b8	 lea	 eax, DWORD PTR $T4[ebp]
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Greate:

; 566  :         if (v == nullptr)

  00065	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00069	75 20		 jne	 SHORT $LN3@PMC_Greate

; 567  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0006b	68 00 00 00 00	 push	 OFFSET $SG118304
  00070	68 00 00 00 00	 push	 OFFSET $SG118305
  00075	8d 4d a0	 lea	 ecx, DWORD PTR $T3[ebp]
  00078	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0007d	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00082	8d 4d a0	 lea	 ecx, DWORD PTR $T3[ebp]
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Greate:

; 568  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  0008b	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0008e	89 55 f0	 mov	 DWORD PTR _nu$[ebp], edx

; 569  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  00091	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00094	89 45 ec	 mov	 DWORD PTR _nv$[ebp], eax

; 570  :         CheckNumber(nu);

  00097	8b 4d f0	 mov	 ecx, DWORD PTR _nu$[ebp]
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  000a0	83 c4 04	 add	 esp, 4

; 571  :         CheckNumber(nv);

  000a3	8b 55 ec	 mov	 edx, DWORD PTR _nv$[ebp]
  000a6	52		 push	 edx
  000a7	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  000ac	83 c4 04	 add	 esp, 4

; 572  :         ResourceHolderUINT root;

  000af	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  000b2	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000b7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 573  :         NUMBER_HEADER* w = PMC_GreatestCommonDivisor_X_X_Imp(nu, nv);

  000be	8b 45 ec	 mov	 eax, DWORD PTR _nv$[ebp]
  000c1	50		 push	 eax
  000c2	8b 4d f0	 mov	 ecx, DWORD PTR _nu$[ebp]
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ?PMC_GreatestCommonDivisor_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X_Imp
  000cb	83 c4 08	 add	 esp, 8
  000ce	89 45 d0	 mov	 DWORD PTR _w$[ebp], eax

; 574  :         root.HookNumber(w);

  000d1	8b 55 d0	 mov	 edx, DWORD PTR _w$[ebp]
  000d4	52		 push	 edx
  000d5	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  000d8	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 575  : #ifdef _DEBUG
; 576  :         CheckNumber(w);

  000dd	8b 45 d0	 mov	 eax, DWORD PTR _w$[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  000e6	83 c4 04	 add	 esp, 4

; 577  : #endif
; 578  :         root.UnlinkNumber(w);

  000e9	8b 4d d0	 mov	 ecx, DWORD PTR _w$[ebp]
  000ec	51		 push	 ecx
  000ed	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  000f0	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 579  :         return ((PMC_HANDLE_UINT)w);

  000f5	8b 55 d0	 mov	 edx, DWORD PTR _w$[ebp]
  000f8	89 55 9c	 mov	 DWORD PTR $T2[ebp], edx
  000fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00102	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  00105	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0010a	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
$LN4@PMC_Greate:

; 580  :     }

  0010d	52		 push	 edx
  0010e	8b cd		 mov	 ecx, ebp
  00110	50		 push	 eax
  00111	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@PMC_Greate
  00117	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0011c	58		 pop	 eax
  0011d	5a		 pop	 edx
  0011e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00121	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00128	59		 pop	 ecx
  00129	5f		 pop	 edi
  0012a	83 c4 64	 add	 esp, 100		; 00000064H
  0012d	3b ec		 cmp	 ebp, esp
  0012f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c2 08 00	 ret	 8
  0013a	66 90		 npad	 2
$LN9@PMC_Greate:
  0013c	01 00 00 00	 DD	 1
  00140	00 00 00 00	 DD	 $LN8@PMC_Greate
$LN8@PMC_Greate:
  00144	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00148	10 00 00 00	 DD	 16			; 00000010H
  0014c	00 00 00 00	 DD	 $LN6@PMC_Greate
$LN6@PMC_Greate:
  00150	72		 DB	 114			; 00000072H
  00151	6f		 DB	 111			; 0000006fH
  00152	6f		 DB	 111			; 0000006fH
  00153	74		 DB	 116			; 00000074H
  00154	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
$T2 = -92						; size = 4
$T3 = -88						; size = 24
$T4 = -64						; size = 24
_w$ = -40						; size = 4
_root$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L

; 543  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00018	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0003a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 544  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)

  0003f	33 c0		 xor	 eax, eax
  00041	74 20		 je	 SHORT $LN2@PMC_Greate

; 545  :         {
; 546  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 547  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_greatestcommondivisor.cpp;PMC_GreatestCommonDivisor_X_L;1");

  00043	68 00 00 00 00	 push	 OFFSET $SG118280
  00048	68 00 00 00 00	 push	 OFFSET $SG118281
  0004d	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  00050	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00055	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0005a	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Greate:

; 548  :         }
; 549  :         if (u == nullptr)

  00063	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00067	75 20		 jne	 SHORT $LN3@PMC_Greate

; 550  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00069	68 00 00 00 00	 push	 OFFSET $SG118284
  0006e	68 00 00 00 00	 push	 OFFSET $SG118285
  00073	8d 4d a8	 lea	 ecx, DWORD PTR $T3[ebp]
  00076	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00080	8d 55 a8	 lea	 edx, DWORD PTR $T3[ebp]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Greate:

; 551  :         CheckNumber((NUMBER_HEADER*)u);

  00089	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00092	83 c4 04	 add	 esp, 4

; 552  :         ResourceHolderUINT root;

  00095	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00098	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0009d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 553  :         NUMBER_HEADER* w = PMC_GreatestCommonDivisor_X_L_Imp((NUMBER_HEADER*)u, v);

  000a4	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp+4]
  000a7	51		 push	 ecx
  000a8	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  000ab	52		 push	 edx
  000ac	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L_Imp
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b8	89 45 d8	 mov	 DWORD PTR _w$[ebp], eax

; 554  :         root.HookNumber(w);

  000bb	8b 4d d8	 mov	 ecx, DWORD PTR _w$[ebp]
  000be	51		 push	 ecx
  000bf	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000c2	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 555  : #ifdef _DEBUG
; 556  :         CheckNumber(w);

  000c7	8b 55 d8	 mov	 edx, DWORD PTR _w$[ebp]
  000ca	52		 push	 edx
  000cb	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  000d0	83 c4 04	 add	 esp, 4

; 557  : #endif
; 558  :         root.UnlinkNumber(w);

  000d3	8b 45 d8	 mov	 eax, DWORD PTR _w$[ebp]
  000d6	50		 push	 eax
  000d7	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000da	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 559  :         return ((PMC_HANDLE_UINT)w);

  000df	8b 4d d8	 mov	 ecx, DWORD PTR _w$[ebp]
  000e2	89 4d a4	 mov	 DWORD PTR $T2[ebp], ecx
  000e5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ec	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000ef	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000f4	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
$LN4@PMC_Greate:

; 560  :     }

  000f7	52		 push	 edx
  000f8	8b cd		 mov	 ecx, ebp
  000fa	50		 push	 eax
  000fb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@PMC_Greate
  00101	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00106	58		 pop	 eax
  00107	5a		 pop	 edx
  00108	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00112	59		 pop	 ecx
  00113	5f		 pop	 edi
  00114	83 c4 5c	 add	 esp, 92			; 0000005cH
  00117	3b ec		 cmp	 ebp, esp
  00119	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c2 0c 00	 ret	 12			; 0000000cH
$LN9@PMC_Greate:
  00124	01 00 00 00	 DD	 1
  00128	00 00 00 00	 DD	 $LN8@PMC_Greate
$LN8@PMC_Greate:
  0012c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00130	10 00 00 00	 DD	 16			; 00000010H
  00134	00 00 00 00	 DD	 $LN6@PMC_Greate
$LN6@PMC_Greate:
  00138	72		 DB	 114			; 00000072H
  00139	6f		 DB	 111			; 0000006fH
  0013a	6f		 DB	 111			; 0000006fH
  0013b	74		 DB	 116			; 00000074H
  0013c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
$T2 = -92						; size = 4
$T3 = -88						; size = 24
$T4 = -64						; size = 24
_w$ = -40						; size = 4
_root$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I

; 503  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00018	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0003a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 504  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  0003f	33 c0		 xor	 eax, eax
  00041	74 20		 je	 SHORT $LN2@PMC_Greate

; 505  :         {
; 506  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 507  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_greatestcommondivisor.cpp;PMC_GreatestCommonDivisor_X_I;1");

  00043	68 00 00 00 00	 push	 OFFSET $SG118242
  00048	68 00 00 00 00	 push	 OFFSET $SG118243
  0004d	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  00050	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00055	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0005a	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Greate:

; 508  :         }
; 509  :         if (u == nullptr)

  00063	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00067	75 20		 jne	 SHORT $LN3@PMC_Greate

; 510  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00069	68 00 00 00 00	 push	 OFFSET $SG118246
  0006e	68 00 00 00 00	 push	 OFFSET $SG118247
  00073	8d 4d a8	 lea	 ecx, DWORD PTR $T3[ebp]
  00076	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00080	8d 55 a8	 lea	 edx, DWORD PTR $T3[ebp]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Greate:

; 511  :         CheckNumber((NUMBER_HEADER*)u);

  00089	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00092	83 c4 04	 add	 esp, 4

; 512  :         ResourceHolderUINT root;

  00095	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00098	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0009d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 513  :         NUMBER_HEADER* w = PMC_GreatestCommonDivisor_X_I_Imp((NUMBER_HEADER*)u, v);

  000a4	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000a7	51		 push	 ecx
  000a8	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  000ab	52		 push	 edx
  000ac	e8 00 00 00 00	 call	 ?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I_Imp
  000b1	83 c4 08	 add	 esp, 8
  000b4	89 45 d8	 mov	 DWORD PTR _w$[ebp], eax

; 514  :         root.HookNumber(w);

  000b7	8b 45 d8	 mov	 eax, DWORD PTR _w$[ebp]
  000ba	50		 push	 eax
  000bb	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000be	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 515  : #ifdef _DEBUG
; 516  :         CheckNumber(w);

  000c3	8b 4d d8	 mov	 ecx, DWORD PTR _w$[ebp]
  000c6	51		 push	 ecx
  000c7	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  000cc	83 c4 04	 add	 esp, 4

; 517  : #endif
; 518  :         root.UnlinkNumber(w);

  000cf	8b 55 d8	 mov	 edx, DWORD PTR _w$[ebp]
  000d2	52		 push	 edx
  000d3	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000d6	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 519  :         return ((PMC_HANDLE_UINT)w);

  000db	8b 45 d8	 mov	 eax, DWORD PTR _w$[ebp]
  000de	89 45 a4	 mov	 DWORD PTR $T2[ebp], eax
  000e1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e8	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000eb	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000f0	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
$LN4@PMC_Greate:

; 520  :     }

  000f3	52		 push	 edx
  000f4	8b cd		 mov	 ecx, ebp
  000f6	50		 push	 eax
  000f7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@PMC_Greate
  000fd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00102	58		 pop	 eax
  00103	5a		 pop	 edx
  00104	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00107	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010e	59		 pop	 ecx
  0010f	5f		 pop	 edi
  00110	83 c4 5c	 add	 esp, 92			; 0000005cH
  00113	3b ec		 cmp	 ebp, esp
  00115	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c2 08 00	 ret	 8
$LN9@PMC_Greate:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN8@PMC_Greate
$LN8@PMC_Greate:
  00128	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0012c	10 00 00 00	 DD	 16			; 00000010H
  00130	00 00 00 00	 DD	 $LN6@PMC_Greate
$LN6@PMC_Greate:
  00134	72		 DB	 114			; 00000072H
  00135	6f		 DB	 111			; 0000006fH
  00136	6f		 DB	 111			; 0000006fH
  00137	74		 DB	 116			; 00000074H
  00138	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
$T2 = -92						; size = 4
$T3 = -88						; size = 24
$T4 = -64						; size = 24
_w$ = -40						; size = 4
_root$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 8
_v$ = 16						; size = 4
?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_L_X

; 523  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00018	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0003a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 524  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)

  0003f	33 c0		 xor	 eax, eax
  00041	74 20		 je	 SHORT $LN2@PMC_Greate

; 525  :         {
; 526  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 527  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_greatestcommondivisor.cpp;PMC_GreatestCommonDivisor_L_X;1");

  00043	68 00 00 00 00	 push	 OFFSET $SG118261
  00048	68 00 00 00 00	 push	 OFFSET $SG118262
  0004d	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  00050	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00055	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0005a	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Greate:

; 528  :         }
; 529  :         if (v == nullptr)

  00063	83 7d 10 00	 cmp	 DWORD PTR _v$[ebp], 0
  00067	75 20		 jne	 SHORT $LN3@PMC_Greate

; 530  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00069	68 00 00 00 00	 push	 OFFSET $SG118265
  0006e	68 00 00 00 00	 push	 OFFSET $SG118266
  00073	8d 4d a8	 lea	 ecx, DWORD PTR $T3[ebp]
  00076	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00080	8d 55 a8	 lea	 edx, DWORD PTR $T3[ebp]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Greate:

; 531  :         CheckNumber((NUMBER_HEADER*)v);

  00089	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00092	83 c4 04	 add	 esp, 4

; 532  :         ResourceHolderUINT root;

  00095	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00098	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0009d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 533  :         NUMBER_HEADER* w = PMC_GreatestCommonDivisor_X_L_Imp((NUMBER_HEADER*)v, u);

  000a4	8b 4d 0c	 mov	 ecx, DWORD PTR _u$[ebp+4]
  000a7	51		 push	 ecx
  000a8	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  000ab	52		 push	 edx
  000ac	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?PMC_GreatestCommonDivisor_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L_Imp
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b8	89 45 d8	 mov	 DWORD PTR _w$[ebp], eax

; 534  :         root.HookNumber(w);

  000bb	8b 4d d8	 mov	 ecx, DWORD PTR _w$[ebp]
  000be	51		 push	 ecx
  000bf	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000c2	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 535  : #ifdef _DEBUG
; 536  :         CheckNumber(w);

  000c7	8b 55 d8	 mov	 edx, DWORD PTR _w$[ebp]
  000ca	52		 push	 edx
  000cb	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  000d0	83 c4 04	 add	 esp, 4

; 537  : #endif
; 538  :         root.UnlinkNumber(w);

  000d3	8b 45 d8	 mov	 eax, DWORD PTR _w$[ebp]
  000d6	50		 push	 eax
  000d7	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000da	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 539  :         return ((PMC_HANDLE_UINT)w);

  000df	8b 4d d8	 mov	 ecx, DWORD PTR _w$[ebp]
  000e2	89 4d a4	 mov	 DWORD PTR $T2[ebp], ecx
  000e5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ec	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000ef	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000f4	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
$LN4@PMC_Greate:

; 540  :     }

  000f7	52		 push	 edx
  000f8	8b cd		 mov	 ecx, ebp
  000fa	50		 push	 eax
  000fb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@PMC_Greate
  00101	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00106	58		 pop	 eax
  00107	5a		 pop	 edx
  00108	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00112	59		 pop	 ecx
  00113	5f		 pop	 edi
  00114	83 c4 5c	 add	 esp, 92			; 0000005cH
  00117	3b ec		 cmp	 ebp, esp
  00119	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c2 0c 00	 ret	 12			; 0000000cH
$LN9@PMC_Greate:
  00124	01 00 00 00	 DD	 1
  00128	00 00 00 00	 DD	 $LN8@PMC_Greate
$LN8@PMC_Greate:
  0012c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00130	10 00 00 00	 DD	 16			; 00000010H
  00134	00 00 00 00	 DD	 $LN6@PMC_Greate
$LN6@PMC_Greate:
  00138	72		 DB	 114			; 00000072H
  00139	6f		 DB	 111			; 0000006fH
  0013a	6f		 DB	 111			; 0000006fH
  0013b	74		 DB	 116			; 00000074H
  0013c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_L_X
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
$T2 = -92						; size = 4
$T3 = -88						; size = 24
$T4 = -64						; size = 24
_w$ = -40						; size = 4
_root$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_I_X

; 483  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00018	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  0003a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 484  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)

  0003f	33 c0		 xor	 eax, eax
  00041	74 20		 je	 SHORT $LN2@PMC_Greate

; 485  :         {
; 486  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 487  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_greatestcommondivisor.cpp;PMC_GreatestCommonDivisor_I_X;1");

  00043	68 00 00 00 00	 push	 OFFSET $SG118219
  00048	68 00 00 00 00	 push	 OFFSET $SG118220
  0004d	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  00050	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00055	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0005a	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Greate:

; 488  :         }
; 489  :         if (v == nullptr)

  00063	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00067	75 20		 jne	 SHORT $LN3@PMC_Greate

; 490  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00069	68 00 00 00 00	 push	 OFFSET $SG118227
  0006e	68 00 00 00 00	 push	 OFFSET $SG118228
  00073	8d 4d a8	 lea	 ecx, DWORD PTR $T3[ebp]
  00076	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0007b	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00080	8d 55 a8	 lea	 edx, DWORD PTR $T3[ebp]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Greate:

; 491  :         CheckNumber((NUMBER_HEADER*)v);

  00089	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00092	83 c4 04	 add	 esp, 4

; 492  :         ResourceHolderUINT root;

  00095	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00098	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0009d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 493  :         NUMBER_HEADER* w = PMC_GreatestCommonDivisor_X_I_Imp((NUMBER_HEADER*)v, u);

  000a4	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  000a7	51		 push	 ecx
  000a8	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  000ab	52		 push	 edx
  000ac	e8 00 00 00 00	 call	 ?PMC_GreatestCommonDivisor_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I_Imp
  000b1	83 c4 08	 add	 esp, 8
  000b4	89 45 d8	 mov	 DWORD PTR _w$[ebp], eax

; 494  :         root.HookNumber(w);

  000b7	8b 45 d8	 mov	 eax, DWORD PTR _w$[ebp]
  000ba	50		 push	 eax
  000bb	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000be	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 495  : #ifdef _DEBUG
; 496  :         CheckNumber(w);

  000c3	8b 4d d8	 mov	 ecx, DWORD PTR _w$[ebp]
  000c6	51		 push	 ecx
  000c7	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  000cc	83 c4 04	 add	 esp, 4

; 497  : #endif
; 498  :         root.UnlinkNumber(w);

  000cf	8b 55 d8	 mov	 edx, DWORD PTR _w$[ebp]
  000d2	52		 push	 edx
  000d3	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000d6	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 499  :         return ((PMC_HANDLE_UINT)w);

  000db	8b 45 d8	 mov	 eax, DWORD PTR _w$[ebp]
  000de	89 45 a4	 mov	 DWORD PTR $T2[ebp], eax
  000e1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e8	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  000eb	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000f0	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
$LN4@PMC_Greate:

; 500  :     }

  000f3	52		 push	 edx
  000f4	8b cd		 mov	 ecx, ebp
  000f6	50		 push	 eax
  000f7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@PMC_Greate
  000fd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00102	58		 pop	 eax
  00103	5a		 pop	 edx
  00104	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00107	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010e	59		 pop	 ecx
  0010f	5f		 pop	 edi
  00110	83 c4 5c	 add	 esp, 92			; 0000005cH
  00113	3b ec		 cmp	 ebp, esp
  00115	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c2 08 00	 ret	 8
$LN9@PMC_Greate:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN8@PMC_Greate
$LN8@PMC_Greate:
  00128	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0012c	10 00 00 00	 DD	 16			; 00000010H
  00130	00 00 00 00	 DD	 $LN6@PMC_Greate
$LN6@PMC_Greate:
  00134	72		 DB	 114			; 00000072H
  00135	6f		 DB	 111			; 0000006fH
  00136	6f		 DB	 111			; 0000006fH
  00137	74		 DB	 116			; 00000074H
  00138	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_I_X
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_greatestcommondivisor.cpp
_TEXT	SEGMENT
_feature$ = 8						; size = 4
?Initialize_GreatestCommonDivisor@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_GreatestCommonDivisor

; 583  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __AACDA9A0_pmc_greatestcommondivisor@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 584  :         return (PMC_STATUS_OK);

  0000d	33 c0		 xor	 eax, eax

; 585  :     }

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?Initialize_GreatestCommonDivisor@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_GreatestCommonDivisor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT
; _this$ = ecx

; 295  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 296  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 291  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 290  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 291  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 292  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 286  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	68 00 ff ff ff	 push	 -256			; ffffff00H
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 286  :         {

  00053	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00056	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 287  :         }

  0005c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00063	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00069	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00070	59		 pop	 ecx
  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GArithmeticException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GArithmeticException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArithmeticException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArithmeticException::~ArithmeticException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GArithmeticException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArithmeticException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArithmeticException@Internal@Core@Math@Palmtree@@6B@
  00049	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00050	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00056	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005d	59		 pop	 ecx
  0005e	83 c4 10	 add	 esp, 16			; 00000010H
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArithmeticException::~ArithmeticException, COMDAT
; _this$ = ecx

; 200  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ArithmeticException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 201  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArithmeticException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArithmeticException::~ArithmeticException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z PROC ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException, COMDAT
; _this$ = ecx

; 191  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)

  00037	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003a	50		 push	 eax
  0003b	6a fa		 push	 -6			; fffffffaH
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 191  :         {

  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArithmeticException@Internal@Core@Math@Palmtree@@6B@

; 192  :         }

  00055	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	83 c4 10	 add	 esp, 16			; 00000010H
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArithmeticException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ENDP ; Palmtree::Math::Core::Internal::ArithmeticException::ArithmeticException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT
; _this$ = ecx

; 124  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 125  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 120  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 119  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 120  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 121  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_param_name$ = 12					; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 115  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _param_name$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	6a fe		 push	 -2			; fffffffeH
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 115  :         {

  00050	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00053	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 116  :         }

  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT
; _this$ = ecx

; 70   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 71   :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 62   :         Exception(const Exception& p) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 63   :         {
; 64   :             _code = p._code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00055	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00058	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 65   :             _message = p._message;

  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00061	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00064	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 66   :             _data = p._data;

  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0006d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00070	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 67   :         }

  00073	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
_data$ = 16						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 55   :         {
; 56   :             _code = code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _code$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 57   :             _message = message;

  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 58   :             _data = data;

  00061	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  00067	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 59   :         }

  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 48   :         {
; 49   :             _code = code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _code$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 50   :             _message = message;

  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 51   :             _data = nullptr;

  00061	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0

; 52   :         }

  0006b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00078	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007f	59		 pop	 ecx
  00080	83 c4 10	 add	 esp, 16			; 00000010H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00028	74 0b		 je	 SHORT $LN3@what
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00030	89 55 f8	 mov	 DWORD PTR tv69[ebp], edx
  00033	eb 07		 jmp	 SHORT $LN4@what
$LN3@what:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]

; 92   :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 85   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1exception@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 86   :         __std_exception_destroy(&_Data);

  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 04	 add	 ecx, 4
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004c	83 c4 04	 add	 esp, 4

; 87   :     }

  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00059	59		 pop	 ecx
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1exception@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1exception@std@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0exception@std@@QAE@XZ PROC				; std::exception::exception, COMDAT
; _this$ = ecx

; 50   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0exception@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 49   :         : _Data()

  00040	33 c9		 xor	 ecx, ecx
  00042	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00045	83 c2 04	 add	 edx, 4
  00048	89 0a		 mov	 DWORD PTR [edx], ecx
  0004a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 51   :     }

  0004d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0exception@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0exception@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0exception@std@@QAE@XZ ENDP				; std::exception::exception
END
