; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\pmc_equals.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__77F53984_cstddef DB 01H
__188180DA_corecrt_math@h DB 01H
__D23EE329_cstdlib DB 01H
__5ECFF36E_type_traits DB 01H
__331E732B_malloc@h DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__7949CB39_exception DB 01H
__802FEEC0_pmc_exception@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__746E1CEC_xmmintrin@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__39CE6525_pmc_equals@cpp DB 01H
msvcjmc	ENDS
CONST	SEGMENT
$SG117587 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'I', 00H, '_', 00H, 'X', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG117588 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG117595 DB	'v', 00H, 00H, 00H
$SG117596 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117599 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'I', 00H, '_', 00H, 'X', 00H, ';', 00H, '2', 00H, 00H, 00H
$SG117600 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG117616 DB	'u', 00H, 00H, 00H
$SG117612 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'X', 00H, '_', 00H, 'I', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG117613 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG117617 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117621 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG117620 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'X', 00H, '_', 00H, 'I', 00H, ';', 00H, '2', 00H, 00H, 00H
$SG117632 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'L', 00H, '_', 00H, 'X', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG117633 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG117636 DB	'v', 00H, 00H, 00H
$SG117637 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117640 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'L', 00H, '_', 00H, 'X', 00H, ';', 00H, '2', 00H, 00H, 00H
$SG117641 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG117656 DB	'u', 00H, 00H, 00H
$SG117652 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'X', 00H, '_', 00H, 'L', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG117653 DB	088H, 'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H
	DB	'0k00RT', 090H, 'W0~0W0_0', 02H, '0', 00H, 00H
	ORG $+2
$SG117657 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117661 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
$SG117660 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'X', 00H, '_', 00H, 'L', 00H, ';', 00H, '2', 00H, 00H, 00H
$SG117675 DB	'u', 00H, 00H, 00H
$SG117676 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117679 DB	'v', 00H, 00H, 00H
$SG117680 DB	015H, '_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~'
	DB	'0Y0', 02H, '0', 00H, 00H
	ORG $+2
$SG117689 DB	'p', 00H, 'm', 00H, 'c', 00H, '_', 00H, 'e', 00H, 'q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H, '_', 00H
	DB	'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_'
	DB	00H, 'X', 00H, '_', 00H, 'X', 00H, ';', 00H, '1', 00H, 00H, 00H
$SG117690 DB	085H, 'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv'
	DB	01fH, 'uW0~0W0_0', 02H, '0', 00H, 00H
CONST	ENDS
PUBLIC	??0exception@std@@QAE@XZ			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?Initialize_Equals@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Equals
PUBLIC	?PMC_Equals_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Equals_I_X
PUBLIC	?PMC_Equals_L_X@Internal@Core@Math@Palmtree@@YGI_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Equals_L_X
PUBLIC	?PMC_Equals_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_I
PUBLIC	?PMC_Equals_X_L@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_L
PUBLIC	?PMC_Equals_X_X@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@0@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__aullshr:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT __CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DD	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DD	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DD	FLAT:??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1exception@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0exception@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 4
_v$ = 12						; size = 4
_count$ = 16						; size = 4
?Equals_X_X_Imp@Internal@Core@Math@Palmtree@@YAIPAI0I@Z PROC ; Palmtree::Math::Core::Internal::Equals_X_X_Imp

; 142  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
$LN2@Equals_X_X:

; 143  :         while (count > 0)

  0000d	83 7d 10 00	 cmp	 DWORD PTR _count$[ebp], 0
  00011	76 2d		 jbe	 SHORT $LN3@Equals_X_X

; 144  :         {
; 145  :             if (*u != *v)

  00013	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001d	74 04		 je	 SHORT $LN4@Equals_X_X

; 146  :                 return (0);

  0001f	33 c0		 xor	 eax, eax
  00021	eb 22		 jmp	 SHORT $LN1@Equals_X_X
$LN4@Equals_X_X:

; 147  :             ++u;

  00023	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	89 45 08	 mov	 DWORD PTR _u$[ebp], eax

; 148  :             ++v;

  0002c	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0002f	83 c1 04	 add	 ecx, 4
  00032	89 4d 0c	 mov	 DWORD PTR _v$[ebp], ecx

; 149  :             --count;

  00035	8b 55 10	 mov	 edx, DWORD PTR _count$[ebp]
  00038	83 ea 01	 sub	 edx, 1
  0003b	89 55 10	 mov	 DWORD PTR _count$[ebp], edx

; 150  :         }

  0003e	eb cd		 jmp	 SHORT $LN2@Equals_X_X
$LN3@Equals_X_X:

; 151  :         return (1);

  00040	b8 01 00 00 00	 mov	 eax, 1
$LN1@Equals_X_X:

; 152  :     }

  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?Equals_X_X_Imp@Internal@Core@Math@Palmtree@@YAIPAI0I@Z ENDP ; Palmtree::Math::Core::Internal::Equals_X_X_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
tv141 = -60						; size = 4
tv197 = -56						; size = 8
tv129 = -48						; size = 4
tv84 = -44						; size = 4
tv68 = -40						; size = 4
_v_bit_count$1 = -36					; size = 4
_u_bit_count$2 = -32					; size = 4
_v_bit_count$3 = -28					; size = 4
_v_bit_count$4 = -24					; size = 4
_v_lo$5 = -20						; size = 4
_v_hi$6 = -12						; size = 4
_u_bit_count$7 = -4					; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?Equals_X_L_Imp@Internal@Core@Math@Palmtree@@YAIPAU__tag_NUMBER_HEADER@1234@_K@Z PROC ; Palmtree::Math::Core::Internal::Equals_X_L_Imp

; 67   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	57		 push	 edi
  00007	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0000a	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 68   :         if (u->IS_ZERO)

  00020	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00023	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00026	83 e1 01	 and	 ecx, 1
  00029	74 25		 je	 SHORT $LN2@Equals_X_L

; 69   :         {
; 70   :             // u が 0 である場合
; 71   :             return (v == 0);

  0002b	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  0002e	0b 55 10	 or	 edx, DWORD PTR _v$[ebp+4]
  00031	75 09		 jne	 SHORT $LN17@Equals_X_L
  00033	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  0003a	eb 07		 jmp	 SHORT $LN18@Equals_X_L
$LN17@Equals_X_L:
  0003c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN18@Equals_X_L:
  00043	8b 45 d8	 mov	 eax, DWORD PTR tv68[ebp]
  00046	e9 76 01 00 00	 jmp	 $LN1@Equals_X_L
  0004b	e9 71 01 00 00	 jmp	 $LN1@Equals_X_L
$LN2@Equals_X_L:

; 72   :         }
; 73   :         else if (v == 0)

  00050	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00053	0b 45 10	 or	 eax, DWORD PTR _v$[ebp+4]
  00056	75 0c		 jne	 SHORT $LN4@Equals_X_L

; 74   :         {
; 75   :             // v が 0 である場合
; 76   :             return (0);

  00058	33 c0		 xor	 eax, eax
  0005a	e9 62 01 00 00	 jmp	 $LN1@Equals_X_L

; 77   :         }
; 78   :         else

  0005f	e9 5d 01 00 00	 jmp	 $LN1@Equals_X_L
$LN4@Equals_X_L:

; 79   :         {
; 80   :             // u と v がともに 0 ではない場合
; 81   :             if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  00064	b9 01 00 00 00	 mov	 ecx, 1
  00069	85 c9		 test	 ecx, ecx
  0006b	0f 84 e7 00 00
	00		 je	 $LN6@Equals_X_L

; 82   :             {
; 83   :                 // _UINT64_T が 1 ワードで表現しきれない場合
; 84   :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00071	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00074	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00077	89 45 fc	 mov	 DWORD PTR _u_bit_count$7[ebp], eax

; 85   :                 _UINT32_T v_hi;
; 86   :                 _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);

  0007a	8d 4d f4	 lea	 ecx, DWORD PTR _v_hi$6[ebp]
  0007d	51		 push	 ecx
  0007e	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp+4]
  00081	52		 push	 edx
  00082	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 __FROMDWORDTOWORD
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008e	89 45 ec	 mov	 DWORD PTR _v_lo$5[ebp], eax

; 87   :                 if (v_hi == 0)

  00091	83 7d f4 00	 cmp	 DWORD PTR _v_hi$6[ebp], 0
  00095	75 57		 jne	 SHORT $LN8@Equals_X_L

; 88   :                 {
; 89   :                     // v の値が 32bit では表現できる場合
; 90   :                     __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);

  00097	8b 4d ec	 mov	 ecx, DWORD PTR _v_lo$5[ebp]
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  000a0	83 c4 04	 add	 esp, 4
  000a3	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  000a8	2b d0		 sub	 edx, eax
  000aa	89 55 e8	 mov	 DWORD PTR _v_bit_count$4[ebp], edx

; 91   :                     if (u_bit_count != v_bit_count)

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _u_bit_count$7[ebp]
  000b0	3b 45 e8	 cmp	 eax, DWORD PTR _v_bit_count$4[ebp]
  000b3	74 09		 je	 SHORT $LN10@Equals_X_L

; 92   :                     {
; 93   :                         // 明らかに u > v である場合
; 94   :                         return (0);

  000b5	33 c0		 xor	 eax, eax
  000b7	e9 05 01 00 00	 jmp	 $LN1@Equals_X_L

; 95   :                     }
; 96   :                     else

  000bc	eb 2e		 jmp	 SHORT $LN11@Equals_X_L
$LN10@Equals_X_L:

; 97   :                     {
; 98   :                         // u > 0 && v > 0 かつ u のビット長と v のビット長が等しく、かつ v が 1 ワードで表現できる場合
; 99   :                         // ⇒ u と v はともに 1 ワードで表現できる
; 100  :                         return (u->BLOCK[0] == v_lo);

  000be	b9 04 00 00 00	 mov	 ecx, 4
  000c3	6b d1 00	 imul	 edx, ecx, 0
  000c6	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000c9	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000cc	8b 14 0a	 mov	 edx, DWORD PTR [edx+ecx]
  000cf	3b 55 ec	 cmp	 edx, DWORD PTR _v_lo$5[ebp]
  000d2	75 09		 jne	 SHORT $LN19@Equals_X_L
  000d4	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR tv84[ebp], 1
  000db	eb 07		 jmp	 SHORT $LN20@Equals_X_L
$LN19@Equals_X_L:
  000dd	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN20@Equals_X_L:
  000e4	8b 45 d4	 mov	 eax, DWORD PTR tv84[ebp]
  000e7	e9 d5 00 00 00	 jmp	 $LN1@Equals_X_L
$LN11@Equals_X_L:

; 101  :                     }
; 102  :                 }
; 103  :                 else

  000ec	eb 68		 jmp	 SHORT $LN9@Equals_X_L
$LN8@Equals_X_L:

; 104  :                 {
; 105  :                     // v の値が 32bit では表現できない場合
; 106  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);

  000ee	8b 45 f4	 mov	 eax, DWORD PTR _v_hi$6[ebp]
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  000f7	83 c4 04	 add	 esp, 4
  000fa	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  000ff	2b c8		 sub	 ecx, eax
  00101	89 4d e4	 mov	 DWORD PTR _v_bit_count$3[ebp], ecx

; 107  :                     if (u_bit_count != v_bit_count)

  00104	8b 55 fc	 mov	 edx, DWORD PTR _u_bit_count$7[ebp]
  00107	3b 55 e4	 cmp	 edx, DWORD PTR _v_bit_count$3[ebp]
  0010a	74 09		 je	 SHORT $LN12@Equals_X_L

; 108  :                     {
; 109  :                         // 明らかに u > v である場合
; 110  :                         return (0);

  0010c	33 c0		 xor	 eax, eax
  0010e	e9 ae 00 00 00	 jmp	 $LN1@Equals_X_L

; 111  :                     }
; 112  :                     else

  00113	eb 41		 jmp	 SHORT $LN9@Equals_X_L
$LN12@Equals_X_L:

; 113  :                     {
; 114  :                         // u > 0 && v > 0 かつ u のビット長と v のビット長が等しく、かつ v が 2 ワードで表現できる場合
; 115  :                         // ⇒ u と v はともに 2 ワードで表現できる
; 116  :                         return (u->BLOCK[1] == v_hi && u->BLOCK[0] == v_lo);

  00115	b8 04 00 00 00	 mov	 eax, 4
  0011a	c1 e0 00	 shl	 eax, 0
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00120	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00123	8b 04 10	 mov	 eax, DWORD PTR [eax+edx]
  00126	3b 45 f4	 cmp	 eax, DWORD PTR _v_hi$6[ebp]
  00129	75 1f		 jne	 SHORT $LN21@Equals_X_L
  0012b	b9 04 00 00 00	 mov	 ecx, 4
  00130	6b d1 00	 imul	 edx, ecx, 0
  00133	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00136	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00139	8b 14 0a	 mov	 edx, DWORD PTR [edx+ecx]
  0013c	3b 55 ec	 cmp	 edx, DWORD PTR _v_lo$5[ebp]
  0013f	75 09		 jne	 SHORT $LN21@Equals_X_L
  00141	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR tv129[ebp], 1
  00148	eb 07		 jmp	 SHORT $LN22@Equals_X_L
$LN21@Equals_X_L:
  0014a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN22@Equals_X_L:
  00151	8b 45 d0	 mov	 eax, DWORD PTR tv129[ebp]
  00154	eb 6b		 jmp	 SHORT $LN1@Equals_X_L
$LN9@Equals_X_L:

; 117  :                     }
; 118  :                 }
; 119  :             }
; 120  :             else

  00156	eb 69		 jmp	 SHORT $LN1@Equals_X_L
$LN6@Equals_X_L:

; 121  :             {
; 122  :                 // _UINT64_T が 1 ワードで表現できる場合
; 123  : 
; 124  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00158	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0015b	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0015e	89 4d e0	 mov	 DWORD PTR _u_bit_count$2[ebp], ecx

; 125  :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);

  00161	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00164	52		 push	 edx
  00165	e8 00 00 00 00	 call	 __LZCNT_ALT_UNIT
  0016a	83 c4 04	 add	 esp, 4
  0016d	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00172	2b c8		 sub	 ecx, eax
  00174	89 4d dc	 mov	 DWORD PTR _v_bit_count$1[ebp], ecx

; 126  :                 if (u_bit_count != v_bit_count)

  00177	8b 55 e0	 mov	 edx, DWORD PTR _u_bit_count$2[ebp]
  0017a	3b 55 dc	 cmp	 edx, DWORD PTR _v_bit_count$1[ebp]
  0017d	74 06		 je	 SHORT $LN14@Equals_X_L

; 127  :                 {
; 128  :                     // 明らかに u > v である場合
; 129  :                     return (0);

  0017f	33 c0		 xor	 eax, eax
  00181	eb 3e		 jmp	 SHORT $LN1@Equals_X_L

; 130  :                 }
; 131  :                 else

  00183	eb 3c		 jmp	 SHORT $LN1@Equals_X_L
$LN14@Equals_X_L:

; 132  :                 {
; 133  :                     // u > 0 && v > 0 かつ u のビット長と v のビット長が等しく、かつ v が 1 ワードで表現できる場合
; 134  :                     // ⇒ u と v はともに 1 ワードで表現できる
; 135  :                     return (u->BLOCK[0] == v);

  00185	b8 04 00 00 00	 mov	 eax, 4
  0018a	6b c8 00	 imul	 ecx, eax, 0
  0018d	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00190	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00193	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00196	33 d2		 xor	 edx, edx
  00198	89 4d c8	 mov	 DWORD PTR tv197[ebp], ecx
  0019b	89 55 cc	 mov	 DWORD PTR tv197[ebp+4], edx
  0019e	8b 45 c8	 mov	 eax, DWORD PTR tv197[ebp]
  001a1	3b 45 0c	 cmp	 eax, DWORD PTR _v$[ebp]
  001a4	75 11		 jne	 SHORT $LN23@Equals_X_L
  001a6	8b 4d cc	 mov	 ecx, DWORD PTR tv197[ebp+4]
  001a9	3b 4d 10	 cmp	 ecx, DWORD PTR _v$[ebp+4]
  001ac	75 09		 jne	 SHORT $LN23@Equals_X_L
  001ae	c7 45 c4 01 00
	00 00		 mov	 DWORD PTR tv141[ebp], 1
  001b5	eb 07		 jmp	 SHORT $LN24@Equals_X_L
$LN23@Equals_X_L:
  001b7	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN24@Equals_X_L:
  001be	8b 45 c4	 mov	 eax, DWORD PTR tv141[ebp]
$LN1@Equals_X_L:

; 136  :                 }
; 137  :             }
; 138  :         }
; 139  :     }

  001c1	52		 push	 edx
  001c2	8b cd		 mov	 ecx, ebp
  001c4	50		 push	 eax
  001c5	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN27@Equals_X_L
  001cb	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001d0	58		 pop	 eax
  001d1	5a		 pop	 edx
  001d2	5f		 pop	 edi
  001d3	83 c4 3c	 add	 esp, 60			; 0000003cH
  001d6	3b ec		 cmp	 ebp, esp
  001d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001dd	8b e5		 mov	 esp, ebp
  001df	5d		 pop	 ebp
  001e0	c3		 ret	 0
  001e1	0f 1f 00	 npad	 3
$LN27@Equals_X_L:
  001e4	01 00 00 00	 DD	 1
  001e8	00 00 00 00	 DD	 $LN26@Equals_X_L
$LN26@Equals_X_L:
  001ec	f4 ff ff ff	 DD	 -12			; fffffff4H
  001f0	04 00 00 00	 DD	 4
  001f4	00 00 00 00	 DD	 $LN25@Equals_X_L
$LN25@Equals_X_L:
  001f8	76		 DB	 118			; 00000076H
  001f9	5f		 DB	 95			; 0000005fH
  001fa	68		 DB	 104			; 00000068H
  001fb	69		 DB	 105			; 00000069H
  001fc	00		 DB	 0
?Equals_X_L_Imp@Internal@Core@Math@Palmtree@@YAIPAU__tag_NUMBER_HEADER@1234@_K@Z ENDP ; Palmtree::Math::Core::Internal::Equals_X_L_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
tv79 = -16						; size = 4
tv68 = -12						; size = 4
_v_bit_count$1 = -8					; size = 4
_u_bit_count$2 = -4					; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?Equals_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPAU__tag_NUMBER_HEADER@1234@I@Z PROC ; Palmtree::Math::Core::Internal::Equals_X_I_Imp

; 36   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 37   :         if (u->IS_ZERO)

  00021	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00024	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00027	83 e1 01	 and	 ecx, 1
  0002a	74 1d		 je	 SHORT $LN2@Equals_X_I

; 38   :         {
; 39   :             // u が 0 である場合
; 40   :             return (v == 0);

  0002c	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00030	75 09		 jne	 SHORT $LN9@Equals_X_I
  00032	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00039	eb 07		 jmp	 SHORT $LN10@Equals_X_I
$LN9@Equals_X_I:
  0003b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN10@Equals_X_I:
  00042	8b 45 f4	 mov	 eax, DWORD PTR tv68[ebp]
  00045	eb 64		 jmp	 SHORT $LN1@Equals_X_I
  00047	eb 62		 jmp	 SHORT $LN1@Equals_X_I
$LN2@Equals_X_I:

; 41   :         }
; 42   :         else if (v == 0)

  00049	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  0004d	75 06		 jne	 SHORT $LN4@Equals_X_I

; 43   :         {
; 44   :             // v が 0 である場合
; 45   :             return (0);

  0004f	33 c0		 xor	 eax, eax
  00051	eb 58		 jmp	 SHORT $LN1@Equals_X_I

; 46   :         }
; 47   :         else

  00053	eb 56		 jmp	 SHORT $LN1@Equals_X_I
$LN4@Equals_X_I:

; 48   :         {
; 49   :             // x と y がともに 0 ではない場合
; 50   :             __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00055	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  00058	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0005b	89 45 fc	 mov	 DWORD PTR _u_bit_count$2[ebp], eax

; 51   :             __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  0005e	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  00067	83 c4 04	 add	 esp, 4
  0006a	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0006f	2b d0		 sub	 edx, eax
  00071	89 55 f8	 mov	 DWORD PTR _v_bit_count$1[ebp], edx

; 52   :             if (u_bit_count != v_bit_count)

  00074	8b 45 fc	 mov	 eax, DWORD PTR _u_bit_count$2[ebp]
  00077	3b 45 f8	 cmp	 eax, DWORD PTR _v_bit_count$1[ebp]
  0007a	74 06		 je	 SHORT $LN6@Equals_X_I

; 53   :             {
; 54   :                 // 明らかに u != v である場合
; 55   :                 return (0);

  0007c	33 c0		 xor	 eax, eax
  0007e	eb 2b		 jmp	 SHORT $LN1@Equals_X_I

; 56   :             }
; 57   :             else

  00080	eb 29		 jmp	 SHORT $LN1@Equals_X_I
$LN6@Equals_X_I:

; 58   :             {
; 59   :                 // u > 0 && v > 0 かつ u のビット長と v のビット長が等しい場合
; 60   :                 // ⇒ u と v はともに 1 ワードで表現できる
; 61   :                 return (u->BLOCK[0] == v);

  00082	b9 04 00 00 00	 mov	 ecx, 4
  00087	6b d1 00	 imul	 edx, ecx, 0
  0008a	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0008d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00090	8b 14 0a	 mov	 edx, DWORD PTR [edx+ecx]
  00093	3b 55 0c	 cmp	 edx, DWORD PTR _v$[ebp]
  00096	75 09		 jne	 SHORT $LN11@Equals_X_I
  00098	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv79[ebp], 1
  0009f	eb 07		 jmp	 SHORT $LN12@Equals_X_I
$LN11@Equals_X_I:
  000a1	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN12@Equals_X_I:
  000a8	8b 45 f0	 mov	 eax, DWORD PTR tv79[ebp]
$LN1@Equals_X_I:

; 62   :             }
; 63   :         }
; 64   :     }

  000ab	83 c4 10	 add	 esp, 16			; 00000010H
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
?Equals_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPAU__tag_NUMBER_HEADER@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::Equals_X_I_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__LZCNT_ALT_UNIT PROC

; 454  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 455  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0f		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);

  00032	0f bd 45 08	 bsr	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);
; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00039	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  0003e	2b 45 f8	 sub	 eax, DWORD PTR _pos$[ebp]
$LN1@LZCNT_ALT_:

; 480  :         }

  00041	52		 push	 edx
  00042	8b cd		 mov	 ecx, ebp
  00044	50		 push	 eax
  00045	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@LZCNT_ALT_
  0004b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00050	58		 pop	 eax
  00051	5a		 pop	 edx
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN6@LZCNT_ALT_:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@LZCNT_ALT_
$LN5@LZCNT_ALT_:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@LZCNT_ALT_
$LN4@LZCNT_ALT_:
  00074	70		 DB	 112			; 00000070H
  00075	6f		 DB	 111			; 0000006fH
  00076	73		 DB	 115			; 00000073H
  00077	00		 DB	 0
__LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_x$ = 8							; size = 4
__LZCNT_ALT_32 PROC

; 421  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 422  :             if (x == 0)

  00025	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  0002b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00030	eb 0f		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  00032	0f bd 45 08	 bsr	 eax, DWORD PTR _x$[ebp]
  00036	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00039	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  0003e	2b 45 f8	 sub	 eax, DWORD PTR _pos$[ebp]
$LN1@LZCNT_ALT_:

; 433  :         }

  00041	52		 push	 edx
  00042	8b cd		 mov	 ecx, ebp
  00044	50		 push	 eax
  00045	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@LZCNT_ALT_
  0004b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00050	58		 pop	 eax
  00051	5a		 pop	 edx
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN6@LZCNT_ALT_:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@LZCNT_ALT_
$LN5@LZCNT_ALT_:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@LZCNT_ALT_
$LN4@LZCNT_ALT_:
  00074	70		 DB	 112			; 00000070H
  00075	6f		 DB	 111			; 0000006fH
  00076	73		 DB	 115			; 00000073H
  00077	00		 DB	 0
__LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
_TEXT	SEGMENT
_value$ = 8						; size = 8
_result_high$ = 16					; size = 4
__FROMDWORDTOWORD PROC

; 145  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __8CA3E54E_pmc_inline_func@h
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0000d	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00010	8b 55 0c	 mov	 edx, DWORD PTR _value$[ebp+4]
  00013	b1 20		 mov	 cl, 32			; 00000020H
  00015	e8 00 00 00 00	 call	 __aullshr
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR _result_high$[ebp]
  0001d	89 01		 mov	 DWORD PTR [ecx], eax

; 147  :             return ((_UINT32_T)value);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 148  :         }

  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
__FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
tv84 = -96						; size = 4
$T1 = -92						; size = 24
$T2 = -68						; size = 24
$T3 = -44						; size = 24
_v_bit_count$4 = -20					; size = 4
_u_bit_count$5 = -16					; size = 4
_w$ = -12						; size = 4
_nv$ = -8						; size = 4
_nu$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Equals_X_X@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_X

; 227  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	57		 push	 edi
  00007	8d 7d a0	 lea	 edi, DWORD PTR [ebp-96]
  0000a	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 228  :         if (u == nullptr)

  00020	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00024	75 20		 jne	 SHORT $LN2@PMC_Equals

; 229  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00026	68 00 00 00 00	 push	 OFFSET $SG117675
  0002b	68 00 00 00 00	 push	 OFFSET $SG117676
  00030	8d 4d d4	 lea	 ecx, DWORD PTR $T3[ebp]
  00033	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0003d	8d 45 d4	 lea	 eax, DWORD PTR $T3[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Equals:

; 230  :         if (v == nullptr)

  00046	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  0004a	75 20		 jne	 SHORT $LN3@PMC_Equals

; 231  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0004c	68 00 00 00 00	 push	 OFFSET $SG117679
  00051	68 00 00 00 00	 push	 OFFSET $SG117680
  00056	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  00059	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005e	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00063	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Equals:

; 232  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  0006c	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0006f	89 55 fc	 mov	 DWORD PTR _nu$[ebp], edx

; 233  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  00072	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00075	89 45 f8	 mov	 DWORD PTR _nv$[ebp], eax

; 234  :         CheckNumber(nu);

  00078	8b 4d fc	 mov	 ecx, DWORD PTR _nu$[ebp]
  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00081	83 c4 04	 add	 esp, 4

; 235  :         CheckNumber(nv);

  00084	8b 55 f8	 mov	 edx, DWORD PTR _nv$[ebp]
  00087	52		 push	 edx
  00088	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  0008d	83 c4 04	 add	 esp, 4

; 236  :         _INT32_T w;
; 237  :         if (nu->IS_ZERO)

  00090	8b 45 fc	 mov	 eax, DWORD PTR _nu$[ebp]
  00093	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00096	83 e1 01	 and	 ecx, 1
  00099	74 23		 je	 SHORT $LN4@PMC_Equals

; 238  :             w = nv->IS_ZERO ? 1 : 0;

  0009b	8b 55 f8	 mov	 edx, DWORD PTR _nv$[ebp]
  0009e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a1	83 e0 01	 and	 eax, 1
  000a4	74 09		 je	 SHORT $LN12@PMC_Equals
  000a6	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv84[ebp], 1
  000ad	eb 07		 jmp	 SHORT $LN13@PMC_Equals
$LN12@PMC_Equals:
  000af	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN13@PMC_Equals:
  000b6	8b 4d a0	 mov	 ecx, DWORD PTR tv84[ebp]
  000b9	89 4d f4	 mov	 DWORD PTR _w$[ebp], ecx
  000bc	eb 57		 jmp	 SHORT $LN5@PMC_Equals
$LN4@PMC_Equals:

; 239  :         else if (nv->IS_ZERO)

  000be	8b 55 f8	 mov	 edx, DWORD PTR _nv$[ebp]
  000c1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c4	83 e0 01	 and	 eax, 1
  000c7	74 09		 je	 SHORT $LN6@PMC_Equals

; 240  :             w = 0;

  000c9	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _w$[ebp], 0

; 241  :         else

  000d0	eb 43		 jmp	 SHORT $LN5@PMC_Equals
$LN6@PMC_Equals:

; 242  :         {
; 243  :             __UNIT_TYPE u_bit_count = nu->UNIT_BIT_COUNT;

  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _nu$[ebp]
  000d5	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000d8	89 55 f0	 mov	 DWORD PTR _u_bit_count$5[ebp], edx

; 244  :             __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;

  000db	8b 45 f8	 mov	 eax, DWORD PTR _nv$[ebp]
  000de	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000e1	89 4d ec	 mov	 DWORD PTR _v_bit_count$4[ebp], ecx

; 245  :             if (u_bit_count != v_bit_count)

  000e4	8b 55 f0	 mov	 edx, DWORD PTR _u_bit_count$5[ebp]
  000e7	3b 55 ec	 cmp	 edx, DWORD PTR _v_bit_count$4[ebp]
  000ea	74 09		 je	 SHORT $LN8@PMC_Equals

; 246  :             {
; 247  :                 // 明らかに u > v である場合
; 248  :                 w = 0;

  000ec	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _w$[ebp], 0

; 249  :             }
; 250  :             else

  000f3	eb 20		 jmp	 SHORT $LN5@PMC_Equals
$LN8@PMC_Equals:

; 251  :             {
; 252  :                 // u > 0 && v > 0 かつ u のビット長と v のビット長が等しい場合
; 253  :                 w = Equals_X_X_Imp(nu->BLOCK, nv->BLOCK, nu->UNIT_WORD_COUNT);

  000f5	8b 45 fc	 mov	 eax, DWORD PTR _nu$[ebp]
  000f8	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000fb	51		 push	 ecx
  000fc	8b 55 f8	 mov	 edx, DWORD PTR _nv$[ebp]
  000ff	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00102	50		 push	 eax
  00103	8b 4d fc	 mov	 ecx, DWORD PTR _nu$[ebp]
  00106	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00109	52		 push	 edx
  0010a	e8 00 00 00 00	 call	 ?Equals_X_X_Imp@Internal@Core@Math@Palmtree@@YAIPAI0I@Z ; Palmtree::Math::Core::Internal::Equals_X_X_Imp
  0010f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00112	89 45 f4	 mov	 DWORD PTR _w$[ebp], eax
$LN5@PMC_Equals:

; 254  :             }
; 255  :         }
; 256  : #ifdef _DEBUG
; 257  :         if (w != 0 && w != 1)

  00115	83 7d f4 00	 cmp	 DWORD PTR _w$[ebp], 0
  00119	74 26		 je	 SHORT $LN10@PMC_Equals
  0011b	83 7d f4 01	 cmp	 DWORD PTR _w$[ebp], 1
  0011f	74 20		 je	 SHORT $LN10@PMC_Equals

; 258  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_equals.cpp;PMC_Equals_X_X;1");

  00121	68 00 00 00 00	 push	 OFFSET $SG117689
  00126	68 00 00 00 00	 push	 OFFSET $SG117690
  0012b	8d 4d a4	 lea	 ecx, DWORD PTR $T1[ebp]
  0012e	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00133	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00138	8d 45 a4	 lea	 eax, DWORD PTR $T1[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@PMC_Equals:

; 259  : #endif
; 260  :         return (w);

  00141	8b 45 f4	 mov	 eax, DWORD PTR _w$[ebp]
$LN11@PMC_Equals:

; 261  :     }

  00144	5f		 pop	 edi
  00145	83 c4 60	 add	 esp, 96			; 00000060H
  00148	3b ec		 cmp	 ebp, esp
  0014a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 08 00	 ret	 8
?PMC_Equals_X_X@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Equals_X_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
$T3 = -28						; size = 24
_w$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_Equals_X_L@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_L

; 209  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	57		 push	 edi
  00007	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000a	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 210  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)

  00020	33 c0		 xor	 eax, eax
  00022	74 20		 je	 SHORT $LN2@PMC_Equals

; 211  :         {
; 212  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 213  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_equals.cpp;PMC_Equals_X_L;1");

  00024	68 00 00 00 00	 push	 OFFSET $SG117652
  00029	68 00 00 00 00	 push	 OFFSET $SG117653
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00031	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Equals:

; 214  :         }
; 215  :         if (u == nullptr)

  00044	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00048	75 20		 jne	 SHORT $LN3@PMC_Equals

; 216  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117656
  0004f	68 00 00 00 00	 push	 OFFSET $SG117657
  00054	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00061	8d 55 cc	 lea	 edx, DWORD PTR $T2[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Equals:

; 217  :         CheckNumber((NUMBER_HEADER*)u);

  0006a	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00073	83 c4 04	 add	 esp, 4

; 218  :         _UINT32_T w = Equals_X_L_Imp((NUMBER_HEADER*)u, v);

  00076	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp+4]
  00079	51		 push	 ecx
  0007a	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  0007d	52		 push	 edx
  0007e	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?Equals_X_L_Imp@Internal@Core@Math@Palmtree@@YAIPAU__tag_NUMBER_HEADER@1234@_K@Z ; Palmtree::Math::Core::Internal::Equals_X_L_Imp
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008a	89 45 fc	 mov	 DWORD PTR _w$[ebp], eax

; 219  : #ifdef _DEBUG
; 220  :         if (w != 0 && w != 1)

  0008d	83 7d fc 00	 cmp	 DWORD PTR _w$[ebp], 0
  00091	74 26		 je	 SHORT $LN4@PMC_Equals
  00093	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  00097	74 20		 je	 SHORT $LN4@PMC_Equals

; 221  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_equals.cpp;PMC_Equals_X_L;2");

  00099	68 00 00 00 00	 push	 OFFSET $SG117660
  0009e	68 00 00 00 00	 push	 OFFSET $SG117661
  000a3	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000a6	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000ab	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000b0	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000b3	51		 push	 ecx
  000b4	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_Equals:

; 222  : #endif
; 223  :         return (w);

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _w$[ebp]
$LN5@PMC_Equals:

; 224  :     }

  000bc	5f		 pop	 edi
  000bd	83 c4 4c	 add	 esp, 76			; 0000004cH
  000c0	3b ec		 cmp	 ebp, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 0c 00	 ret	 12			; 0000000cH
?PMC_Equals_X_L@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Equals_X_L
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
$T3 = -28						; size = 24
_w$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Equals_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_I

; 173  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	57		 push	 edi
  00007	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000a	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 174  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  00020	33 c0		 xor	 eax, eax
  00022	74 20		 je	 SHORT $LN2@PMC_Equals

; 175  :         {
; 176  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 177  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_equals.cpp;PMC_Equals_X_I;1");

  00024	68 00 00 00 00	 push	 OFFSET $SG117612
  00029	68 00 00 00 00	 push	 OFFSET $SG117613
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00031	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Equals:

; 178  :         }
; 179  :         if (u == nullptr)

  00044	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  00048	75 20		 jne	 SHORT $LN3@PMC_Equals

; 180  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117616
  0004f	68 00 00 00 00	 push	 OFFSET $SG117617
  00054	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00061	8d 55 cc	 lea	 edx, DWORD PTR $T2[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Equals:

; 181  :         CheckNumber((NUMBER_HEADER*)u);

  0006a	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00073	83 c4 04	 add	 esp, 4

; 182  :         _INT32_T w = Equals_X_I_Imp((NUMBER_HEADER*)u, v);

  00076	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00079	51		 push	 ecx
  0007a	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0007d	52		 push	 edx
  0007e	e8 00 00 00 00	 call	 ?Equals_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::Equals_X_I_Imp
  00083	83 c4 08	 add	 esp, 8
  00086	89 45 fc	 mov	 DWORD PTR _w$[ebp], eax

; 183  : #ifdef _DEBUG
; 184  :         if (w != 0 && w != 1)

  00089	83 7d fc 00	 cmp	 DWORD PTR _w$[ebp], 0
  0008d	74 26		 je	 SHORT $LN4@PMC_Equals
  0008f	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  00093	74 20		 je	 SHORT $LN4@PMC_Equals

; 185  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_equals.cpp;PMC_Equals_X_I;2");

  00095	68 00 00 00 00	 push	 OFFSET $SG117620
  0009a	68 00 00 00 00	 push	 OFFSET $SG117621
  0009f	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000a2	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000a7	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000ac	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_Equals:

; 186  : #endif
; 187  :         return (w);

  000b5	8b 45 fc	 mov	 eax, DWORD PTR _w$[ebp]
$LN5@PMC_Equals:

; 188  :     }

  000b8	5f		 pop	 edi
  000b9	83 c4 4c	 add	 esp, 76			; 0000004cH
  000bc	3b ec		 cmp	 ebp, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 08 00	 ret	 8
?PMC_Equals_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Equals_X_I
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
$T3 = -28						; size = 24
_w$ = -4						; size = 4
_u$ = 8							; size = 8
_v$ = 16						; size = 4
?PMC_Equals_L_X@Internal@Core@Math@Palmtree@@YGI_KPAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Equals_L_X

; 191  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	57		 push	 edi
  00007	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000a	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 192  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)

  00020	33 c0		 xor	 eax, eax
  00022	74 20		 je	 SHORT $LN2@PMC_Equals

; 193  :         {
; 194  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 195  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_equals.cpp;PMC_Equals_L_X;1");

  00024	68 00 00 00 00	 push	 OFFSET $SG117632
  00029	68 00 00 00 00	 push	 OFFSET $SG117633
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00031	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Equals:

; 196  :         }
; 197  :         if (v == nullptr)

  00044	83 7d 10 00	 cmp	 DWORD PTR _v$[ebp], 0
  00048	75 20		 jne	 SHORT $LN3@PMC_Equals

; 198  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117636
  0004f	68 00 00 00 00	 push	 OFFSET $SG117637
  00054	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00061	8d 55 cc	 lea	 edx, DWORD PTR $T2[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Equals:

; 199  :         CheckNumber((NUMBER_HEADER*)v);

  0006a	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00073	83 c4 04	 add	 esp, 4

; 200  :         _UINT32_T w = Equals_X_L_Imp((NUMBER_HEADER*)v, u);

  00076	8b 4d 0c	 mov	 ecx, DWORD PTR _u$[ebp+4]
  00079	51		 push	 ecx
  0007a	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0007d	52		 push	 edx
  0007e	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?Equals_X_L_Imp@Internal@Core@Math@Palmtree@@YAIPAU__tag_NUMBER_HEADER@1234@_K@Z ; Palmtree::Math::Core::Internal::Equals_X_L_Imp
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008a	89 45 fc	 mov	 DWORD PTR _w$[ebp], eax

; 201  : #ifdef _DEBUG
; 202  :         if (w != 0 && w != 1)

  0008d	83 7d fc 00	 cmp	 DWORD PTR _w$[ebp], 0
  00091	74 26		 je	 SHORT $LN4@PMC_Equals
  00093	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  00097	74 20		 je	 SHORT $LN4@PMC_Equals

; 203  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_equals.cpp;PMC_Equals_L_X;2");

  00099	68 00 00 00 00	 push	 OFFSET $SG117640
  0009e	68 00 00 00 00	 push	 OFFSET $SG117641
  000a3	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000a6	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000ab	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000b0	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000b3	51		 push	 ecx
  000b4	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_Equals:

; 204  : #endif
; 205  :         return (w);

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _w$[ebp]
$LN5@PMC_Equals:

; 206  :     }

  000bc	5f		 pop	 edi
  000bd	83 c4 4c	 add	 esp, 76			; 0000004cH
  000c0	3b ec		 cmp	 ebp, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 0c 00	 ret	 12			; 0000000cH
?PMC_Equals_L_X@Internal@Core@Math@Palmtree@@YGI_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Equals_L_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
$T3 = -28						; size = 24
_w$ = -4						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Equals_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Equals_I_X

; 155  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	57		 push	 edi
  00007	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000a	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  0001b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 156  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)

  00020	33 c0		 xor	 eax, eax
  00022	74 20		 je	 SHORT $LN2@PMC_Equals

; 157  :         {
; 158  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 159  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_equals.cpp;PMC_Equals_I_X;1");

  00024	68 00 00 00 00	 push	 OFFSET $SG117587
  00029	68 00 00 00 00	 push	 OFFSET $SG117588
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00031	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@PMC_Equals:

; 160  :         }
; 161  :         if (v == nullptr)

  00044	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00048	75 20		 jne	 SHORT $LN3@PMC_Equals

; 162  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0004a	68 00 00 00 00	 push	 OFFSET $SG117595
  0004f	68 00 00 00 00	 push	 OFFSET $SG117596
  00054	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0005c	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00061	8d 55 cc	 lea	 edx, DWORD PTR $T2[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@PMC_Equals:

; 163  :         CheckNumber((NUMBER_HEADER*)v);

  0006a	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00073	83 c4 04	 add	 esp, 4

; 164  :         _UINT32_T w = Equals_X_I_Imp((NUMBER_HEADER*)v, u);

  00076	8b 4d 08	 mov	 ecx, DWORD PTR _u$[ebp]
  00079	51		 push	 ecx
  0007a	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  0007d	52		 push	 edx
  0007e	e8 00 00 00 00	 call	 ?Equals_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::Equals_X_I_Imp
  00083	83 c4 08	 add	 esp, 8
  00086	89 45 fc	 mov	 DWORD PTR _w$[ebp], eax

; 165  : #ifdef _DEBUG
; 166  :         if (w != 0 && w != 1)

  00089	83 7d fc 00	 cmp	 DWORD PTR _w$[ebp], 0
  0008d	74 26		 je	 SHORT $LN4@PMC_Equals
  0008f	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  00093	74 20		 je	 SHORT $LN4@PMC_Equals

; 167  :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_equals.cpp;PMC_Equals_I_X;2");

  00095	68 00 00 00 00	 push	 OFFSET $SG117599
  0009a	68 00 00 00 00	 push	 OFFSET $SG117600
  0009f	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000a2	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000a7	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000ac	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@PMC_Equals:

; 168  : #endif
; 169  :         return (w);

  000b5	8b 45 fc	 mov	 eax, DWORD PTR _w$[ebp]
$LN5@PMC_Equals:

; 170  :     }

  000b8	5f		 pop	 edi
  000b9	83 c4 4c	 add	 esp, 76			; 0000004cH
  000bc	3b ec		 cmp	 ebp, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 08 00	 ret	 8
?PMC_Equals_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Equals_I_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_equals.cpp
_TEXT	SEGMENT
_feature$ = 8						; size = 4
?Initialize_Equals@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Equals

; 264  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __39CE6525_pmc_equals@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 265  :         return (PMC_STATUS_OK);

  0000d	33 c0		 xor	 eax, eax

; 266  :     }

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?Initialize_Equals@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Equals
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT
; _this$ = ecx

; 295  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 296  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 291  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 290  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 291  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 292  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 286  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	68 00 ff ff ff	 push	 -256			; ffffff00H
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 286  :         {

  00053	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00056	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 287  :         }

  0005c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00063	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00069	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00070	59		 pop	 ecx
  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT
; _this$ = ecx

; 124  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 125  :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 120  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 119  :             : Exception(p)

  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 120  :         {

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 121  :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_param_name$ = 12					; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 115  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  00037	8b 45 0c	 mov	 eax, DWORD PTR _param_name$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0003e	51		 push	 ecx
  0003f	6a fe		 push	 -2			; fffffffeH
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 115  :         {

  00050	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00053	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 116  :         }

  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT
; _this$ = ecx

; 70   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 71   :         }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 62   :         Exception(const Exception& p) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 63   :         {
; 64   :             _code = p._code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00055	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00058	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 65   :             _message = p._message;

  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00061	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00064	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 66   :             _data = p._data;

  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0006d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00070	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 67   :         }

  00073	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
_data$ = 16						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __802FEEC0_pmc_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@XZ ; std::exception::exception
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 55   :         {
; 56   :             _code = code;

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 55 08	 mov	 edx, DWORD PTR _code$[ebp]
  00055	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 57   :             _message = message;

  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 58   :             _data = data;

  00061	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  00067	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 59   :         }

  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00028	74 0b		 je	 SHORT $LN3@what
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00030	89 55 f8	 mov	 DWORD PTR tv69[ebp], edx
  00033	eb 07		 jmp	 SHORT $LN4@what
$LN3@what:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]

; 92   :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 85   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1exception@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 86   :         __std_exception_destroy(&_Data);

  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 04	 add	 ecx, 4
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004c	83 c4 04	 add	 esp, 4

; 87   :     }

  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00059	59		 pop	 ecx
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1exception@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1exception@std@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0exception@std@@QAE@XZ PROC				; std::exception::exception, COMDAT
; _this$ = ecx

; 50   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0exception@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __9BB4E194_vcruntime_exception@h
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 49   :         : _Data()

  00040	33 c9		 xor	 ecx, ecx
  00042	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00045	83 c2 04	 add	 edx, 4
  00048	89 0a		 mov	 DWORD PTR [edx], ecx
  0004a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 51   :     }

  0004d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0exception@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0exception@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0exception@std@@QAE@XZ ENDP				; std::exception::exception
END
