; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__331E732B_malloc@h DB 01H
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__E6057659_cpuid@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::GetCPUInfo
PUBLIC	__JustMyCode_Default
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD imagerel $LN6
	DD	imagerel $LN6+543
	DD	imagerel $unwind$?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ZERO_MEMORY_BYTE DD imagerel _ZERO_MEMORY_BYTE
	DD	imagerel _ZERO_MEMORY_BYTE+87
	DD	imagerel $unwind$_ZERO_MEMORY_BYTE
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z DD imagerel ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z
	DD	imagerel ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z+244
	DD	imagerel $unwind$?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z DD imagerel ?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z
	DD	imagerel ?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z+247
	DD	imagerel $unwind$?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z DD 025064819H
	DD	011c2321H
	DD	070150022H
	DD	050133014H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::cpuidex
	DB	065H
	DB	067H
	DB	062H
	DB	075H
	DB	066H
	DB	00H
	ORG $+9
?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::cpuidex
	DD	010H
	DQ	FLAT:?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z$rtcName$0
	ORG $+48
?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::cpuidex
	DD	00H
	DQ	FLAT:?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z DD 025064919H
	DD	011d2322H
	DD	070160022H
	DD	050143015H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::cpuid
	DB	065H
	DB	067H
	DB	062H
	DB	075H
	DB	066H
	DB	00H
	ORG $+9
?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::cpuid
	DD	010H
	DQ	FLAT:?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z$rtcName$0
	ORG $+48
?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::cpuid
	DD	00H
	DQ	FLAT:?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ZERO_MEMORY_BYTE DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD 035052a01H
	DD	010e3313H
	DD	07007003bH
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::GetCPUInfo
	DB	065H
	DB	067H
	DB	05fH
	DB	065H
	DB	061H
	DB	078H
	DB	00H
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcName$1 DB 072H ; Palmtree::Math::Core::Internal::GetCPUInfo
	DB	065H
	DB	067H
	DB	05fH
	DB	065H
	DB	062H
	DB	078H
	DB	00H
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcName$2 DB 072H ; Palmtree::Math::Core::Internal::GetCPUInfo
	DB	065H
	DB	067H
	DB	05fH
	DB	065H
	DB	063H
	DB	078H
	DB	00H
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcName$3 DB 072H ; Palmtree::Math::Core::Internal::GetCPUInfo
	DB	065H
	DB	067H
	DB	05fH
	DB	065H
	DB	064H
	DB	078H
	DB	00H
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcVarDesc DD 094H ; Palmtree::Math::Core::Internal::GetCPUInfo
	DD	04H
	DQ	FLAT:?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcName$3
	DD	074H
	DD	04H
	DQ	FLAT:?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcName$2
	DD	054H
	DD	04H
	DQ	FLAT:?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcName$0
	ORG $+192
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcFrameData DD 04H ; Palmtree::Math::Core::Internal::GetCPUInfo
	DD	00H
	DQ	FLAT:?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp
;	COMDAT ?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z
_TEXT	SEGMENT
regbuf$ = 8
__$ArrayPad$ = 232
op$ = 272
subop$ = 280
reg_eax$ = 288
reg_ebx$ = 296
reg_ecx$ = 304
reg_edx$ = 312
?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z PROC ; Palmtree::Math::Core::Internal::cpuidex, COMDAT

; 46   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00012	55		 push	 rbp
  00013	53		 push	 rbx
  00014	57		 push	 rdi
  00015	48 81 ec 10 01
	00 00		 sub	 rsp, 272		; 00000110H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR [rsp+312]
  00037	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003e	48 33 c5	 xor	 rax, rbp
  00041	48 89 85 e8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00048	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6057659_cpuid@cpp
  0004f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 47   :         _INT32_T regbuf[4];
; 48   :         __cpuidex(regbuf, op, subop);

  00054	8b 85 10 01 00
	00		 mov	 eax, DWORD PTR op$[rbp]
  0005a	8b 8d 18 01 00
	00		 mov	 ecx, DWORD PTR subop$[rbp]
  00060	0f a2		 cpuid
  00062	4c 8d 45 08	 lea	 r8, QWORD PTR regbuf$[rbp]
  00066	41 89 00	 mov	 DWORD PTR [r8], eax
  00069	41 89 58 04	 mov	 DWORD PTR [r8+4], ebx
  0006d	41 89 48 08	 mov	 DWORD PTR [r8+8], ecx
  00071	41 89 50 0c	 mov	 DWORD PTR [r8+12], edx

; 49   :         *reg_eax = regbuf[0];

  00075	b8 04 00 00 00	 mov	 eax, 4
  0007a	48 6b c0 00	 imul	 rax, rax, 0
  0007e	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR reg_eax$[rbp]
  00085	8b 44 05 08	 mov	 eax, DWORD PTR regbuf$[rbp+rax]
  00089	89 01		 mov	 DWORD PTR [rcx], eax

; 50   :         *reg_ebx = regbuf[1];

  0008b	b8 04 00 00 00	 mov	 eax, 4
  00090	48 6b c0 01	 imul	 rax, rax, 1
  00094	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR reg_ebx$[rbp]
  0009b	8b 44 05 08	 mov	 eax, DWORD PTR regbuf$[rbp+rax]
  0009f	89 01		 mov	 DWORD PTR [rcx], eax

; 51   :         *reg_ecx = regbuf[2];

  000a1	b8 04 00 00 00	 mov	 eax, 4
  000a6	48 6b c0 02	 imul	 rax, rax, 2
  000aa	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR reg_ecx$[rbp]
  000b1	8b 44 05 08	 mov	 eax, DWORD PTR regbuf$[rbp+rax]
  000b5	89 01		 mov	 DWORD PTR [rcx], eax

; 52   :         *reg_edx = regbuf[3];

  000b7	b8 04 00 00 00	 mov	 eax, 4
  000bc	48 6b c0 03	 imul	 rax, rax, 3
  000c0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR reg_edx$[rbp]
  000c7	8b 44 05 08	 mov	 eax, DWORD PTR regbuf$[rbp+rax]
  000cb	89 01		 mov	 DWORD PTR [rcx], eax

; 53   :     }

  000cd	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000e4	48 33 cd	 xor	 rcx, rbp
  000e7	e8 00 00 00 00	 call	 __security_check_cookie
  000ec	48 8d a5 f0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+240]
  000f3	5f		 pop	 rdi
  000f4	5b		 pop	 rbx
  000f5	5d		 pop	 rbp
  000f6	c3		 ret	 0
?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z ENDP ; Palmtree::Math::Core::Internal::cpuidex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp
;	COMDAT ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z
_TEXT	SEGMENT
regbuf$ = 8
__$ArrayPad$ = 232
op$ = 272
reg_eax$ = 280
reg_ebx$ = 288
reg_ecx$ = 296
reg_edx$ = 304
?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z PROC	; Palmtree::Math::Core::Internal::cpuid, COMDAT

; 36   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00013	55		 push	 rbp
  00014	53		 push	 rbx
  00015	57		 push	 rdi
  00016	48 81 ec 10 01
	00 00		 sub	 rsp, 272		; 00000110H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR [rsp+312]
  00038	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003f	48 33 c5	 xor	 rax, rbp
  00042	48 89 85 e8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6057659_cpuid@cpp
  00050	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 37   :         _INT32_T regbuf[4];
; 38   :         __cpuid(regbuf, op);

  00055	8b 85 10 01 00
	00		 mov	 eax, DWORD PTR op$[rbp]
  0005b	33 c9		 xor	 ecx, ecx
  0005d	0f a2		 cpuid
  0005f	4c 8d 45 08	 lea	 r8, QWORD PTR regbuf$[rbp]
  00063	41 89 00	 mov	 DWORD PTR [r8], eax
  00066	41 89 58 04	 mov	 DWORD PTR [r8+4], ebx
  0006a	41 89 48 08	 mov	 DWORD PTR [r8+8], ecx
  0006e	41 89 50 0c	 mov	 DWORD PTR [r8+12], edx

; 39   :         *reg_eax = regbuf[0];

  00072	b8 04 00 00 00	 mov	 eax, 4
  00077	48 6b c0 00	 imul	 rax, rax, 0
  0007b	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR reg_eax$[rbp]
  00082	8b 44 05 08	 mov	 eax, DWORD PTR regbuf$[rbp+rax]
  00086	89 01		 mov	 DWORD PTR [rcx], eax

; 40   :         *reg_ebx = regbuf[1];

  00088	b8 04 00 00 00	 mov	 eax, 4
  0008d	48 6b c0 01	 imul	 rax, rax, 1
  00091	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR reg_ebx$[rbp]
  00098	8b 44 05 08	 mov	 eax, DWORD PTR regbuf$[rbp+rax]
  0009c	89 01		 mov	 DWORD PTR [rcx], eax

; 41   :         *reg_ecx = regbuf[2];

  0009e	b8 04 00 00 00	 mov	 eax, 4
  000a3	48 6b c0 02	 imul	 rax, rax, 2
  000a7	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR reg_ecx$[rbp]
  000ae	8b 44 05 08	 mov	 eax, DWORD PTR regbuf$[rbp+rax]
  000b2	89 01		 mov	 DWORD PTR [rcx], eax

; 42   :         *reg_edx = regbuf[3];

  000b4	b8 04 00 00 00	 mov	 eax, 4
  000b9	48 6b c0 03	 imul	 rax, rax, 3
  000bd	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR reg_edx$[rbp]
  000c4	8b 44 05 08	 mov	 eax, DWORD PTR regbuf$[rbp+rax]
  000c8	89 01		 mov	 DWORD PTR [rcx], eax

; 43   :     }

  000ca	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z$rtcFrameData
  000d5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000da	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000e1	48 33 cd	 xor	 rcx, rbp
  000e4	e8 00 00 00 00	 call	 __security_check_cookie
  000e9	48 8d a5 f0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+240]
  000f0	5f		 pop	 rdi
  000f1	5b		 pop	 rbx
  000f2	5d		 pop	 rbp
  000f3	c3		 ret	 0
?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z ENDP	; Palmtree::Math::Core::Internal::cpuid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ZERO_MEMORY_BYTE
_TEXT	SEGMENT
d$ = 224
count$ = 232
_ZERO_MEMORY_BYTE PROC					; COMDAT

; 74   :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 75   :             __stosb((unsigned char*)d, 0, count);

  0003b	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR d$[rbp]
  00042	33 c0		 xor	 eax, eax
  00044	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR count$[rbp]
  0004b	f3 aa		 rep stosb

; 76   :         }

  0004d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
_ZERO_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp
;	COMDAT ?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
reg_eax$ = 4
reg_ebx$ = 36
reg_ecx$ = 68
reg_edx$ = 100
max_function_no$ = 132
max_subleaf_no$ = 164
max_ex_function_no$ = 196
feature$ = 448
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::GetCPUInfo, COMDAT

; 56   :     {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec d8 01
	00 00		 sub	 rsp, 472		; 000001d8H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 76 00 00 00	 mov	 ecx, 118		; 00000076H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 f8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+504]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6057659_cpuid@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 57   :         _UINT32_T reg_eax;
; 58   :         _UINT32_T reg_ebx;
; 59   :         _UINT32_T reg_ecx;
; 60   :         _UINT32_T reg_edx;
; 61   :         _UINT32_T max_function_no = 0;

  00036	c7 85 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR max_function_no$[rbp], 0

; 62   :         _UINT32_T max_subleaf_no = 0;

  00040	c7 85 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR max_subleaf_no$[rbp], 0

; 63   :         _UINT32_T max_ex_function_no = 0;

  0004a	c7 85 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR max_ex_function_no$[rbp], 0

; 64   :         cpuid(0, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);

  00054	48 8d 45 64	 lea	 rax, QWORD PTR reg_edx$[rbp]
  00058	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005d	4c 8d 4d 44	 lea	 r9, QWORD PTR reg_ecx$[rbp]
  00061	4c 8d 45 24	 lea	 r8, QWORD PTR reg_ebx$[rbp]
  00065	48 8d 55 04	 lea	 rdx, QWORD PTR reg_eax$[rbp]
  00069	33 c9		 xor	 ecx, ecx
  0006b	e8 00 00 00 00	 call	 ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z ; Palmtree::Math::Core::Internal::cpuid

; 65   :         max_function_no = reg_eax;

  00070	8b 45 04	 mov	 eax, DWORD PTR reg_eax$[rbp]
  00073	89 85 84 00 00
	00		 mov	 DWORD PTR max_function_no$[rbp], eax

; 66   :         _ZERO_MEMORY_BYTE(feature, sizeof(*feature));

  00079	ba 04 00 00 00	 mov	 edx, 4
  0007e	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  00085	e8 00 00 00 00	 call	 _ZERO_MEMORY_BYTE

; 67   :         if (max_function_no >= 1)

  0008a	83 bd 84 00 00
	00 01		 cmp	 DWORD PTR max_function_no$[rbp], 1
  00091	72 44		 jb	 SHORT $LN2@GetCPUInfo

; 68   :         {
; 69   :             cpuid(1, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);

  00093	48 8d 45 64	 lea	 rax, QWORD PTR reg_edx$[rbp]
  00097	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0009c	4c 8d 4d 44	 lea	 r9, QWORD PTR reg_ecx$[rbp]
  000a0	4c 8d 45 24	 lea	 r8, QWORD PTR reg_ebx$[rbp]
  000a4	48 8d 55 04	 lea	 rdx, QWORD PTR reg_eax$[rbp]
  000a8	b9 01 00 00 00	 mov	 ecx, 1
  000ad	e8 00 00 00 00	 call	 ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z ; Palmtree::Math::Core::Internal::cpuid

; 70   :             feature->PROCESSOR_FEATURE_POPCNT = (reg_ecx >> 23) & 1;

  000b2	8b 45 44	 mov	 eax, DWORD PTR reg_ecx$[rbp]
  000b5	c1 e8 17	 shr	 eax, 23
  000b8	83 e0 01	 and	 eax, 1
  000bb	83 e0 01	 and	 eax, 1
  000be	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  000c5	8b 09		 mov	 ecx, DWORD PTR [rcx]
  000c7	83 e1 fe	 and	 ecx, -2			; fffffffeH
  000ca	0b c8		 or	 ecx, eax
  000cc	8b c1		 mov	 eax, ecx
  000ce	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  000d5	89 01		 mov	 DWORD PTR [rcx], eax
$LN2@GetCPUInfo:

; 71   :         }
; 72   :         if (max_function_no >= 7)

  000d7	83 bd 84 00 00
	00 07		 cmp	 DWORD PTR max_function_no$[rbp], 7
  000de	0f 82 a6 00 00
	00		 jb	 $LN3@GetCPUInfo

; 73   :         {
; 74   :             cpuidex(7, 0, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);

  000e4	48 8d 45 64	 lea	 rax, QWORD PTR reg_edx$[rbp]
  000e8	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000ed	48 8d 45 44	 lea	 rax, QWORD PTR reg_ecx$[rbp]
  000f1	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000f6	4c 8d 4d 24	 lea	 r9, QWORD PTR reg_ebx$[rbp]
  000fa	4c 8d 45 04	 lea	 r8, QWORD PTR reg_eax$[rbp]
  000fe	33 d2		 xor	 edx, edx
  00100	b9 07 00 00 00	 mov	 ecx, 7
  00105	e8 00 00 00 00	 call	 ?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z ; Palmtree::Math::Core::Internal::cpuidex

; 75   :             max_subleaf_no = reg_eax;

  0010a	8b 45 04	 mov	 eax, DWORD PTR reg_eax$[rbp]
  0010d	89 85 a4 00 00
	00		 mov	 DWORD PTR max_subleaf_no$[rbp], eax

; 76   :             feature->PROCESSOR_FEATURE_BMI1 = (reg_ebx >> 3) & 1;

  00113	8b 45 24	 mov	 eax, DWORD PTR reg_ebx$[rbp]
  00116	c1 e8 03	 shr	 eax, 3
  00119	83 e0 01	 and	 eax, 1
  0011c	83 e0 01	 and	 eax, 1
  0011f	c1 e0 02	 shl	 eax, 2
  00122	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  00129	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0012b	83 e1 fb	 and	 ecx, -5			; fffffffbH
  0012e	0b c8		 or	 ecx, eax
  00130	8b c1		 mov	 eax, ecx
  00132	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  00139	89 01		 mov	 DWORD PTR [rcx], eax

; 77   :             feature->PROCESSOR_FEATURE_ADX = (reg_ebx >> 8) & 1;

  0013b	8b 45 24	 mov	 eax, DWORD PTR reg_ebx$[rbp]
  0013e	c1 e8 08	 shr	 eax, 8
  00141	83 e0 01	 and	 eax, 1
  00144	83 e0 01	 and	 eax, 1
  00147	d1 e0		 shl	 eax, 1
  00149	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  00150	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00152	83 e1 fd	 and	 ecx, -3			; fffffffdH
  00155	0b c8		 or	 ecx, eax
  00157	8b c1		 mov	 eax, ecx
  00159	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  00160	89 01		 mov	 DWORD PTR [rcx], eax

; 78   :             feature->PROCESSOR_FEATURE_BMI2 = (reg_ebx >> 19) & 1;

  00162	8b 45 24	 mov	 eax, DWORD PTR reg_ebx$[rbp]
  00165	c1 e8 13	 shr	 eax, 19
  00168	83 e0 01	 and	 eax, 1
  0016b	83 e0 01	 and	 eax, 1
  0016e	c1 e0 03	 shl	 eax, 3
  00171	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  00178	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0017a	83 e1 f7	 and	 ecx, -9			; fffffff7H
  0017d	0b c8		 or	 ecx, eax
  0017f	8b c1		 mov	 eax, ecx
  00181	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  00188	89 01		 mov	 DWORD PTR [rcx], eax
$LN3@GetCPUInfo:

; 79   :         }
; 80   :         cpuid(0x80000000, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);

  0018a	48 8d 45 64	 lea	 rax, QWORD PTR reg_edx$[rbp]
  0018e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00193	4c 8d 4d 44	 lea	 r9, QWORD PTR reg_ecx$[rbp]
  00197	4c 8d 45 24	 lea	 r8, QWORD PTR reg_ebx$[rbp]
  0019b	48 8d 55 04	 lea	 rdx, QWORD PTR reg_eax$[rbp]
  0019f	b9 00 00 00 80	 mov	 ecx, -2147483648	; 80000000H
  001a4	e8 00 00 00 00	 call	 ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z ; Palmtree::Math::Core::Internal::cpuid

; 81   :         max_ex_function_no = reg_eax;

  001a9	8b 45 04	 mov	 eax, DWORD PTR reg_eax$[rbp]
  001ac	89 85 c4 00 00
	00		 mov	 DWORD PTR max_ex_function_no$[rbp], eax

; 82   :         if (max_ex_function_no >= 0x80000001)

  001b2	81 bd c4 00 00
	00 01 00 00 80	 cmp	 DWORD PTR max_ex_function_no$[rbp], -2147483647 ; 80000001H
  001bc	72 47		 jb	 SHORT $LN4@GetCPUInfo

; 83   :         {
; 84   :             cpuid(0x80000001, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);

  001be	48 8d 45 64	 lea	 rax, QWORD PTR reg_edx$[rbp]
  001c2	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001c7	4c 8d 4d 44	 lea	 r9, QWORD PTR reg_ecx$[rbp]
  001cb	4c 8d 45 24	 lea	 r8, QWORD PTR reg_ebx$[rbp]
  001cf	48 8d 55 04	 lea	 rdx, QWORD PTR reg_eax$[rbp]
  001d3	b9 01 00 00 80	 mov	 ecx, -2147483647	; 80000001H
  001d8	e8 00 00 00 00	 call	 ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z ; Palmtree::Math::Core::Internal::cpuid

; 85   :             feature->PROCESSOR_FEATURE_ABM = (reg_ecx >> 5) & 1;

  001dd	8b 45 44	 mov	 eax, DWORD PTR reg_ecx$[rbp]
  001e0	c1 e8 05	 shr	 eax, 5
  001e3	83 e0 01	 and	 eax, 1
  001e6	83 e0 01	 and	 eax, 1
  001e9	c1 e0 04	 shl	 eax, 4
  001ec	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  001f3	8b 09		 mov	 ecx, DWORD PTR [rcx]
  001f5	83 e1 ef	 and	 ecx, -17		; ffffffefH
  001f8	0b c8		 or	 ecx, eax
  001fa	8b c1		 mov	 eax, ecx
  001fc	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR feature$[rbp]
  00203	89 01		 mov	 DWORD PTR [rcx], eax
$LN4@GetCPUInfo:

; 86   :         }
; 87   :     }

  00205	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00209	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z$rtcFrameData
  00210	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00215	48 8d a5 a8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+424]
  0021c	5f		 pop	 rdi
  0021d	5d		 pop	 rbp
  0021e	c3		 ret	 0
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::GetCPUInfo
_TEXT	ENDS
END
