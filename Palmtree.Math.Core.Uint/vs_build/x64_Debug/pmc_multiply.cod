; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__77F53984_cstddef DB 01H
__188180DA_corecrt_math@h DB 01H
__D23EE329_cstdlib DB 01H
__5ECFF36E_type_traits DB 01H
__331E732B_malloc@h DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__7949CB39_exception DB 01H
__802FEEC0_pmc_exception@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__1AB12E38_pmc_resourceholder@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__05528951_pmc_multiply@cpp DB 01H
msvcjmc	ENDS
PUBLIC	??0exception@std@@QEAA@XZ			; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ; Palmtree::Math::Core::Internal::Multiply_X_X_Imp
PUBLIC	?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
PUBLIC	?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Multiply
PUBLIC	?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
PUBLIC	?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
PUBLIC	?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
PUBLIC	?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
PUBLIC	?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ ; `string'
PUBLIC	??_C@_1EI@MFLJEPGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_13JAOPNPKD@?$AAv@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_13ICFKHAEN@?$AAu@				; `string'
PUBLIC	??_C@_1EI@FNBKDIHO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	??_C@_1EI@KKPFNBCM@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::DuplicateNumber
EXTRN	?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::From_I_Imp
EXTRN	?From_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::From_L_Imp
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A:BYTE ; Palmtree::Math::Core::Internal::number_zero
EXTRN	?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A:BYTE ; Palmtree::Math::Core::Internal::statistics_info
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
_BSS	SEGMENT
?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA DQ 01H DUP (?) ; Palmtree::Math::Core::Internal::fp_Multiply_X_1W
?fp_Multiply_X_2W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K110@ZEA DQ 01H DUP (?) ; Palmtree::Math::Core::Internal::fp_Multiply_X_2W
?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA DQ 01H DUP (?) ; Palmtree::Math::Core::Internal::fp_Multiply_X_X
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??0exception@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+182
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD imagerel $LN3
	DD	imagerel $LN3+139
	DD	imagerel $unwind$?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel $LN14
	DD	imagerel $LN14+488
	DD	imagerel $unwind$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA DD imagerel ?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD imagerel $LN7
	DD	imagerel $LN7+312
	DD	imagerel $unwind$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA DD imagerel ?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD imagerel $LN7
	DD	imagerel $LN7+315
	DD	imagerel $unwind$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA DD imagerel ?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD imagerel $LN7
	DD	imagerel $LN7+313
	DD	imagerel $unwind$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA DD imagerel ?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD imagerel $LN7
	DD	imagerel $LN7+315
	DD	imagerel $unwind$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA DD imagerel ?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD imagerel $LN7
	DD	imagerel $LN7+356
	DD	imagerel $unwind$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA DD imagerel ?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ DD imagerel ?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ
	DD	imagerel ?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ+62
	DD	imagerel $unwind$?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ DD imagerel ?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ
	DD	imagerel ?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ+62
	DD	imagerel $unwind$?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z DD imagerel ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
	DD	imagerel ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z+78
	DD	imagerel $unwind$?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z DD imagerel ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
	DD	imagerel ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z+78
	DD	imagerel $unwind$?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_FROMDWORDTOWORD DD imagerel _FROMDWORDTOWORD
	DD	imagerel _FROMDWORDTOWORD+95
	DD	imagerel $unwind$_FROMDWORDTOWORD
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ADD_UNIT DD imagerel _ADD_UNIT
	DD	imagerel _ADD_UNIT+118
	DD	imagerel $unwind$_ADD_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ADDX_UNIT DD imagerel _ADDX_UNIT
	DD	imagerel _ADDX_UNIT+121
	DD	imagerel $unwind$_ADDX_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_MULTIPLY_UNIT DD imagerel _MULTIPLY_UNIT
	DD	imagerel _MULTIPLY_UNIT+118
	DD	imagerel $unwind$_MULTIPLY_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_MULTIPLYX_UNIT DD imagerel _MULTIPLYX_UNIT
	DD	imagerel _MULTIPLYX_UNIT+103
	DD	imagerel $unwind$_MULTIPLYX_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_LZCNT_ALT_32 DD imagerel _LZCNT_ALT_32
	DD	imagerel _LZCNT_ALT_32+126
	DD	imagerel $unwind$_LZCNT_ALT_32
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_LZCNT_ALT_UNIT DD imagerel _LZCNT_ALT_UNIT
	DD	imagerel _LZCNT_ALT_UNIT+131
	DD	imagerel $unwind$_LZCNT_ALT_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z DD imagerel ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z
	DD	imagerel ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z+296
	DD	imagerel $unwind$?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z DD imagerel ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z
	DD	imagerel ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z+296
	DD	imagerel $unwind$?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD imagerel ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
	DD	imagerel ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z+5038
	DD	imagerel $unwind$?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD imagerel ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
	DD	imagerel ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z+5038
	DD	imagerel $unwind$?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD imagerel ?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
	DD	imagerel ?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z+112
	DD	imagerel $unwind$?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD imagerel ?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
	DD	imagerel ?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z+112
	DD	imagerel $unwind$?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z DD imagerel ?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
	DD	imagerel ?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z+181
	DD	imagerel $unwind$?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z DD imagerel ?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
	DD	imagerel ?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z+181
	DD	imagerel $unwind$?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD imagerel ?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
	DD	imagerel ?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z+290
	DD	imagerel $unwind$?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD imagerel ?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
	DD	imagerel ?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z+290
	DD	imagerel $unwind$?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+1055
	DD	imagerel $unwind$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD imagerel ?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD imagerel ?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	imagerel ?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD imagerel ?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	imagerel ?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+521
	DD	imagerel $unwind$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA DD imagerel ?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 01H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EI@KKPFNBCM@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EI@KKPFNBCM@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 'i', 00H, 'p', 00H, 'l', 00H, 'y', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'M', 00H, 'u', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p'
	DB	00H, 'l', 00H, 'y', 00H, '_', 00H, 'X', 00H, '_', 00H, 'L', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@FNBKDIHO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EI@FNBKDIHO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 'i', 00H, 'p', 00H, 'l', 00H, 'y', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'M', 00H, 'u', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p'
	DB	00H, 'l', 00H, 'y', 00H, '_', 00H, 'L', 00H, '_', 00H, 'X', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_13ICFKHAEN@?$AAu@
CONST	SEGMENT
??_C@_13ICFKHAEN@?$AAu@ DB 'u', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13JAOPNPKD@?$AAv@
CONST	SEGMENT
??_C@_13JAOPNPKD@?$AAv@ DB 'v', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1EI@MFLJEPGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EI@MFLJEPGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 'i', 00H, 'p', 00H, 'l', 00H, 'y', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'M', 00H, 'u', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p'
	DB	00H, 'l', 00H, 'y', 00H, '_', 00H, 'I', 00H, '_', 00H, 'X', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
CONST	SEGMENT
??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ DB 088H
	DB	'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H, '0k00RT', 090H
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DQ	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DQ	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DQ	FLAT:??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+261
	DD	00H
	DD	imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+473
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 035053a11H
	DD	01133318H
	DD	0700c003fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcVarDesc DD 038H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp
	DD	020H
	DQ	FLAT:?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcName$0
	ORG $+48
?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp
	DD	00H
	DQ	FLAT:?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcVarDesc
$cppxdata$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	01d8H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+292
	DD	00H
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+484
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+523
	DD	01H
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+735
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+777
	DD	02H
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+1004
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 035053a11H
	DD	01133318H
	DD	0700c0093H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$0 DB 076H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
	DB	05fH
	DB	068H
	DB	069H
	DB	00H
	ORG $+3
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$1 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$2 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$3 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcVarDesc DD 01d8H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
	DD	020H
	DQ	FLAT:?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$3
	DD	0138H
	DD	020H
	DQ	FLAT:?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$2
	DD	098H
	DD	020H
	DQ	FLAT:?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$1
	DD	054H
	DD	04H
	DQ	FLAT:?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$0
	ORG $+192
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcFrameData DD 04H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
	DD	00H
	DQ	FLAT:?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcVarDesc
$cppxdata$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	0478H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD 025053901H
	DD	011d2322H
	DD	070160031H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD 025053901H
	DD	011d2322H
	DD	070160031H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD 025053901H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD 025053901H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z DD 025053901H
	DD	011d2322H
	DD	070160027H
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcName$0 DB 074H ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
	DB	05fH
	DB	068H
	DB	069H
	DB	00H
	ORG $+3
?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcName$1 DB 074H ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
	DB	05fH
	DB	06cH
	DB	06fH
	DB	00H
	ORG $+3
?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcVarDesc DD 048H ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
	DD	08H
	DQ	FLAT:?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcName$0
	ORG $+96
?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
	DD	00H
	DQ	FLAT:?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z DD 025053901H
	DD	011d2322H
	DD	070160027H
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcName$0 DB 074H ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
	DB	05fH
	DB	068H
	DB	069H
	DB	00H
	ORG $+3
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcName$1 DB 074H ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
	DB	05fH
	DB	06cH
	DB	06fH
	DB	00H
	ORG $+3
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcVarDesc DD 048H ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
	DD	08H
	DQ	FLAT:?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcName$0
	ORG $+96
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
	DD	00H
	DQ	FLAT:?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_LZCNT_ALT_UNIT DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
_LZCNT_ALT_UNIT$rtcName$0 DB 070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
_LZCNT_ALT_UNIT$rtcVarDesc DD 024H
	DD	04H
	DQ	FLAT:_LZCNT_ALT_UNIT$rtcName$0
	ORG $+48
_LZCNT_ALT_UNIT$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:_LZCNT_ALT_UNIT$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_LZCNT_ALT_32 DD 025052801H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
_LZCNT_ALT_32$rtcName$0 DB 070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
_LZCNT_ALT_32$rtcVarDesc DD 024H
	DD	04H
	DQ	FLAT:_LZCNT_ALT_32$rtcName$0
	ORG $+48
_LZCNT_ALT_32$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:_LZCNT_ALT_32$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_MULTIPLYX_UNIT DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_MULTIPLY_UNIT DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ADDX_UNIT DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ADD_UNIT DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_FROMDWORDTOWORD DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z DD 025052801H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z DD 025052801H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD imagerel ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+230
	DD	00H
	DD	imagerel ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+308
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 025053a11H
	DD	01132318H
	DD	0700c004dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
	DD	020H
	DQ	FLAT:?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcName$0
	ORG $+48
?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
	DD	00H
	DQ	FLAT:?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcVarDesc
$cppxdata$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	0248H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD imagerel ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z+198
	DD	00H
	DD	imagerel ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z+267
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 025053a11H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
	DD	020H
	DQ	FLAT:?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcName$0
	ORG $+48
?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
	DD	00H
	DQ	FLAT:?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcVarDesc
$cppxdata$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	0208H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD imagerel ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z+197
	DD	00H
	DD	imagerel ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z+265
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 025053911H
	DD	01122317H
	DD	0700b0045H
	DD	0500aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
	DD	020H
	DQ	FLAT:?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcName$0
	ORG $+48
?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
	DD	00H
	DQ	FLAT:?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcVarDesc
$cppxdata$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	0208H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD imagerel ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z+198
	DD	00H
	DD	imagerel ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z+267
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD 025053a11H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
	DD	020H
	DQ	FLAT:?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z$rtcName$0
	ORG $+48
?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
	DD	00H
	DQ	FLAT:?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z$rtcVarDesc
$cppxdata$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
	DD	0208H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD imagerel ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z+196
	DD	00H
	DD	imagerel ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z+264
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD 025053811H
	DD	01122317H
	DD	0700b0045H
	DD	0500aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
	DD	020H
	DQ	FLAT:?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z$rtcName$0
	ORG $+48
?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
	DD	00H
	DQ	FLAT:?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z$rtcVarDesc
$cppxdata$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
	DD	0208H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+233
	DD	00H
	DD	imagerel ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+440
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 025053911H
	DD	01122317H
	DD	0700b003dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
	DD	020H
	DQ	FLAT:?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcName$0
	ORG $+48
?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
	DD	00H
	DQ	FLAT:?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcVarDesc
$cppxdata$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	01c8H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD 035053901H
	DD	011d3322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+108
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 025053f19H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+108
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 025053f19H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+84
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+165
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+93
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+162
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 025054319H
	DD	011c2321H
	DD	070150021H
	DD	05014H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@XZ DD imagerel ??0exception@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0exception@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0exception@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0exception@std@@QEAA@XZ
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
_TEXT	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 424
tv137 = 440
u$ = 480
v$ = 488
?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp, COMDAT

; 679  :     {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 01
	00 00		 sub	 rsp, 504		; 000001f8H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 7e 00 00 00	 mov	 ecx, 126		; 0000007eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR [rsp+536]
  0002f	48 c7 85 a8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T10[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 680  :         if (u->IS_ZERO)

  00046	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 11		 je	 SHORT $LN2@PMC_Multip

; 681  :         {
; 682  :             // u が 0 である場合
; 683  : 
; 684  :             // v の値にかかわらず 0 を返す。
; 685  :             return (&number_zero);

  00057	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0005e	e9 86 01 00 00	 jmp	 $LN1@PMC_Multip
  00063	e9 81 01 00 00	 jmp	 $LN1@PMC_Multip
$LN2@PMC_Multip:

; 686  :         }
; 687  :         else if (u->IS_ONE)

  00068	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0006f	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00072	d1 e8		 shr	 eax, 1
  00074	83 e0 01	 and	 eax, 1
  00077	85 c0		 test	 eax, eax
  00079	74 35		 je	 SHORT $LN4@PMC_Multip

; 688  :         {
; 689  :             // u が 1 である場合
; 690  :             if (v->IS_ZERO)

  0007b	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  00082	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00085	83 e0 01	 and	 eax, 1
  00088	85 c0		 test	 eax, eax
  0008a	74 0e		 je	 SHORT $LN6@PMC_Multip

; 691  :             {
; 692  :                 // v が 0 である場合
; 693  : 
; 694  :                 //  0  を返す。
; 695  :                 return (&number_zero);

  0008c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00093	e9 51 01 00 00	 jmp	 $LN1@PMC_Multip

; 696  :             }
; 697  :             else

  00098	eb 11		 jmp	 SHORT $LN7@PMC_Multip
$LN6@PMC_Multip:

; 698  :             {
; 699  :                 // v が 0 ではない場合
; 700  : 
; 701  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 702  :                 return (DuplicateNumber(v));

  0009a	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  000a1	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000a6	e9 3e 01 00 00	 jmp	 $LN1@PMC_Multip
$LN7@PMC_Multip:

; 703  :             }
; 704  :         }
; 705  :         else

  000ab	e9 39 01 00 00	 jmp	 $LN1@PMC_Multip
$LN4@PMC_Multip:

; 706  :         {
; 707  :             // u が 0 と 1 のどちらでもない場合
; 708  : 
; 709  :             if (v->IS_ZERO)

  000b0	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000b7	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000ba	83 e0 01	 and	 eax, 1
  000bd	85 c0		 test	 eax, eax
  000bf	74 11		 je	 SHORT $LN8@PMC_Multip

; 710  :             {
; 711  :                 // v が 0 である場合
; 712  : 
; 713  :                 //  0  を返す。
; 714  :                 return (&number_zero);

  000c1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  000c8	e9 1c 01 00 00	 jmp	 $LN1@PMC_Multip
  000cd	e9 17 01 00 00	 jmp	 $LN1@PMC_Multip
$LN8@PMC_Multip:

; 715  :             }
; 716  :             else if (v->IS_ONE)

  000d2	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000d9	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000dc	d1 e8		 shr	 eax, 1
  000de	83 e0 01	 and	 eax, 1
  000e1	85 c0		 test	 eax, eax
  000e3	74 16		 je	 SHORT $LN10@PMC_Multip

; 717  :             {
; 718  :                 // v が 1 である場合
; 719  : 
; 720  :                 // 乗算結果は u に等しいため、u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 721  :                 return (DuplicateNumber(u));

  000e5	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000ec	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000f1	e9 f3 00 00 00	 jmp	 $LN1@PMC_Multip

; 722  :             }
; 723  :             else

  000f6	e9 ee 00 00 00	 jmp	 $LN1@PMC_Multip
$LN10@PMC_Multip:

; 724  :             {
; 725  :                 // u と v がともに 0 、1 のどちらでもない場合
; 726  : 
; 727  :                 // u と v の積を計算する
; 728  :                 ResourceHolderUINT root;

  000fb	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  000ff	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00104	90		 npad	 1

; 729  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00105	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0010c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00110	48 89 45 48	 mov	 QWORD PTR u_bit_count$5[rbp], rax

; 730  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  00114	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  0011b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0011f	48 89 45 68	 mov	 QWORD PTR v_bit_count$6[rbp], rax

; 731  :                 __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  00123	48 8b 45 68	 mov	 rax, QWORD PTR v_bit_count$6[rbp]
  00127	48 8b 4d 48	 mov	 rcx, QWORD PTR u_bit_count$5[rbp]
  0012b	48 03 c8	 add	 rcx, rax
  0012e	48 8b c1	 mov	 rax, rcx
  00131	48 89 85 88 00
	00 00		 mov	 QWORD PTR w_bit_count$7[rbp], rax

; 732  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00138	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w_bit_count$7[rbp]
  0013f	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00143	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00148	48 89 85 a8 00
	00 00		 mov	 QWORD PTR w$8[rbp], rax

; 733  :                 (*fp_Multiply_X_X)(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, w->BLOCK);

  0014f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA
  00156	48 89 85 b8 01
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  0015d	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  00164	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00168	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016d	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  00174	4c 8b 48 18	 mov	 r9, QWORD PTR [rax+24]
  00178	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  0017f	4c 8b 40 40	 mov	 r8, QWORD PTR [rax+64]
  00183	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0018a	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  0018e	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00195	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00199	ff 95 b8 01 00
	00		 call	 QWORD PTR tv137[rbp]

; 734  :                 root.CheckNumber(w);

  0019f	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  001a6	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  001aa	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 735  :                 CommitNumber(w);

  001af	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  001b6	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 736  :                 root.UnlinkNumber(w);

  001bb	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  001c2	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  001c6	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 737  :                 return (w);

  001cb	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  001d2	48 89 85 88 01
	00 00		 mov	 QWORD PTR $T9[rbp], rax
  001d9	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  001dd	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001e2	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR $T9[rbp]
$LN1@PMC_Multip:

; 738  : 
; 739  :             }
; 740  :         }
; 741  :     }

  001e9	48 8b f8	 mov	 rdi, rax
  001ec	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  001f0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcFrameData
  001f7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001fc	48 8b c7	 mov	 rax, rdi
  001ff	48 8d a5 c8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+456]
  00206	5f		 pop	 rdi
  00207	5d		 pop	 rbp
  00208	c3		 ret	 0
?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 424
tv137 = 440
u$ = 480
v$ = 488
?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 424
tv137 = 440
u$ = 480
v$ = 488
?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
_TEXT	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
root$10 = 104
v_bit_count$11 = 168
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
u_bit_count$19 = 488
v_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1000
$T24 = 1032
$T25 = 1064
$T26 = 1096
tv190 = 1112
tv164 = 1112
tv136 = 1112
u$ = 1152
v$ = 1160
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp, COMDAT

; 537  :     {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 98 04
	00 00		 sub	 rsp, 1176		; 00000498H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 26 01 00 00	 mov	 ecx, 294		; 00000126H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 b8
	04 00 00	 mov	 rcx, QWORD PTR [rsp+1208]
  0002f	48 c7 85 48 04
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T26[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 538  :         if (u->IS_ZERO)

  00046	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 11		 je	 SHORT $LN2@PMC_Multip

; 539  :         {
; 540  :             // u が 0 である場合
; 541  : 
; 542  :             // v の値にかかわらず 0 を返す。
; 543  :             return (&number_zero);

  00057	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0005e	e9 9c 03 00 00	 jmp	 $LN1@PMC_Multip
  00063	e9 97 03 00 00	 jmp	 $LN1@PMC_Multip
$LN2@PMC_Multip:

; 544  :         }
; 545  :         else if (u->IS_ONE)

  00068	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0006f	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00072	d1 e8		 shr	 eax, 1
  00074	83 e0 01	 and	 eax, 1
  00077	85 c0		 test	 eax, eax
  00079	74 2e		 je	 SHORT $LN4@PMC_Multip

; 546  :         {
; 547  :             // u が 1 である場合
; 548  :             if (v == 0)

  0007b	48 83 bd 88 04
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00083	75 0e		 jne	 SHORT $LN6@PMC_Multip

; 549  :             {
; 550  :                 // v が 0 である場合
; 551  : 
; 552  :                 //  0  を返す。
; 553  :                 return (&number_zero);

  00085	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0008c	e9 6e 03 00 00	 jmp	 $LN1@PMC_Multip

; 554  :             }
; 555  :             else

  00091	eb 11		 jmp	 SHORT $LN7@PMC_Multip
$LN6@PMC_Multip:

; 556  :             {
; 557  :                 // v が 0 ではない場合
; 558  : 
; 559  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 560  :                 return (From_L_Imp(v));

  00093	48 8b 8d 88 04
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  0009a	e8 00 00 00 00	 call	 ?From_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@_K@Z ; Palmtree::Math::Core::Internal::From_L_Imp
  0009f	e9 5b 03 00 00	 jmp	 $LN1@PMC_Multip
$LN7@PMC_Multip:

; 561  :             }
; 562  :         }
; 563  :         else

  000a4	e9 56 03 00 00	 jmp	 $LN1@PMC_Multip
$LN4@PMC_Multip:

; 564  :         {
; 565  :             // u が 0 と 1 のどちらでもない場合
; 566  : 
; 567  :             if (v == 0)

  000a9	48 83 bd 88 04
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  000b1	75 11		 jne	 SHORT $LN8@PMC_Multip

; 568  :             {
; 569  :                 // v が 0 である場合
; 570  : 
; 571  :                 //  0  を返す。
; 572  :                 return (&number_zero);

  000b3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  000ba	e9 40 03 00 00	 jmp	 $LN1@PMC_Multip
  000bf	e9 3b 03 00 00	 jmp	 $LN1@PMC_Multip
$LN8@PMC_Multip:

; 573  :             }
; 574  :             else if (v == 1)

  000c4	48 83 bd 88 04
	00 00 01	 cmp	 QWORD PTR v$[rbp], 1
  000cc	75 16		 jne	 SHORT $LN10@PMC_Multip

; 575  :             {
; 576  :                 // v が 1 である場合
; 577  : 
; 578  :                 // 乗算結果は u に等しいため、u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 579  :                 return (DuplicateNumber(u));

  000ce	48 8b 8d 80 04
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000d5	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000da	e9 20 03 00 00	 jmp	 $LN1@PMC_Multip

; 580  :             }
; 581  :             else

  000df	e9 1b 03 00 00	 jmp	 $LN1@PMC_Multip
$LN10@PMC_Multip:

; 582  :             {
; 583  :                 // u と v がともに 0 、1 のどちらでもない場合
; 584  : 
; 585  :                 // u と v の積を計算する
; 586  :                 if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  000e4	33 c0		 xor	 eax, eax
  000e6	85 c0		 test	 eax, eax
  000e8	0f 84 0e 02 00
	00		 je	 $LN12@PMC_Multip

; 587  :                 {
; 588  :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 589  : 
; 590  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  000ee	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000f5	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000f9	48 89 45 08	 mov	 QWORD PTR u_bit_count$7[rbp], rax

; 591  :                     _UINT32_T v_hi;
; 592  :                     _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);

  000fd	48 8d 55 24	 lea	 rdx, QWORD PTR v_hi$8[rbp]
  00101	48 8b 8d 88 04
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  00108	e8 00 00 00 00	 call	 _FROMDWORDTOWORD
  0010d	89 45 44	 mov	 DWORD PTR v_lo$9[rbp], eax

; 593  :                     if (v_hi == 0)

  00110	83 7d 24 00	 cmp	 DWORD PTR v_hi$8[rbp], 0
  00114	0f 85 e4 00 00
	00		 jne	 $LN14@PMC_Multip

; 594  :                     {
; 595  :                         // v の値が 32bit で表現可能な場合
; 596  :                         ResourceHolderUINT root;

  0011a	48 8d 4d 68	 lea	 rcx, QWORD PTR root$10[rbp]
  0011e	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00123	90		 npad	 1

; 597  :                         __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);

  00124	8b 4d 44	 mov	 ecx, DWORD PTR v_lo$9[rbp]
  00127	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  0012c	48 98		 cdqe
  0012e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00133	48 2b c8	 sub	 rcx, rax
  00136	48 8b c1	 mov	 rax, rcx
  00139	48 89 85 a8 00
	00 00		 mov	 QWORD PTR v_bit_count$11[rbp], rax

; 598  :                         __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  00140	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR v_bit_count$11[rbp]
  00147	48 8b 4d 08	 mov	 rcx, QWORD PTR u_bit_count$7[rbp]
  0014b	48 03 c8	 add	 rcx, rax
  0014e	48 8b c1	 mov	 rax, rcx
  00151	48 89 85 c8 00
	00 00		 mov	 QWORD PTR w_bit_count$12[rbp], rax

; 599  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00158	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR w_bit_count$12[rbp]
  0015f	48 8d 4d 68	 lea	 rcx, QWORD PTR root$10[rbp]
  00163	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00168	48 89 85 e8 00
	00 00		 mov	 QWORD PTR w$13[rbp], rax

; 600  :                         (*fp_Multiply_X_1W)(u->BLOCK, u->UNIT_WORD_COUNT, v_lo, w->BLOCK);

  0016f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA
  00176	48 89 85 58 04
	00 00		 mov	 QWORD PTR tv136[rbp], rax
  0017d	8b 45 44	 mov	 eax, DWORD PTR v_lo$9[rbp]
  00180	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR w$13[rbp]
  00187	4c 8b 49 40	 mov	 r9, QWORD PTR [rcx+64]
  0018b	44 8b c0	 mov	 r8d, eax
  0018e	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00195	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00199	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  001a0	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  001a4	ff 95 58 04 00
	00		 call	 QWORD PTR tv136[rbp]

; 601  :                         root.CheckNumber(w);

  001aa	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR w$13[rbp]
  001b1	48 8d 4d 68	 lea	 rcx, QWORD PTR root$10[rbp]
  001b5	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 602  :                         CommitNumber(w);

  001ba	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR w$13[rbp]
  001c1	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 603  :                         root.UnlinkNumber(w);

  001c6	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR w$13[rbp]
  001cd	48 8d 4d 68	 lea	 rcx, QWORD PTR root$10[rbp]
  001d1	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 604  :                         return (w);

  001d6	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR w$13[rbp]
  001dd	48 89 85 e8 03
	00 00		 mov	 QWORD PTR $T23[rbp], rax
  001e4	48 8d 4d 68	 lea	 rcx, QWORD PTR root$10[rbp]
  001e8	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001ed	48 8b 85 e8 03
	00 00		 mov	 rax, QWORD PTR $T23[rbp]
  001f4	e9 06 02 00 00	 jmp	 $LN1@PMC_Multip

; 605  :                     }
; 606  :                     else

  001f9	e9 f9 00 00 00	 jmp	 $LN15@PMC_Multip
$LN14@PMC_Multip:

; 607  :                     {
; 608  :                         // v の値が 32bit では表現できない場合
; 609  :                         ResourceHolderUINT root;

  001fe	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  00205	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0020a	90		 npad	 1

; 610  :                         __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);

  0020b	8b 4d 24	 mov	 ecx, DWORD PTR v_hi$8[rbp]
  0020e	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  00213	48 98		 cdqe
  00215	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0021a	48 2b c8	 sub	 rcx, rax
  0021d	48 8b c1	 mov	 rax, rcx
  00220	48 89 85 48 01
	00 00		 mov	 QWORD PTR v_bit_count$15[rbp], rax

; 611  :                         __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  00227	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_bit_count$15[rbp]
  0022e	48 8b 4d 08	 mov	 rcx, QWORD PTR u_bit_count$7[rbp]
  00232	48 03 c8	 add	 rcx, rax
  00235	48 8b c1	 mov	 rax, rcx
  00238	48 89 85 68 01
	00 00		 mov	 QWORD PTR w_bit_count$16[rbp], rax

; 612  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0023f	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR w_bit_count$16[rbp]
  00246	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  0024d	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00252	48 89 85 88 01
	00 00		 mov	 QWORD PTR w$17[rbp], rax

; 613  :                         (*fp_Multiply_X_2W)(u->BLOCK, u->UNIT_WORD_COUNT, v_hi, v_lo, w->BLOCK);

  00259	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fp_Multiply_X_2W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K110@ZEA
  00260	48 89 85 58 04
	00 00		 mov	 QWORD PTR tv164[rbp], rax
  00267	8b 45 44	 mov	 eax, DWORD PTR v_lo$9[rbp]
  0026a	8b 4d 24	 mov	 ecx, DWORD PTR v_hi$8[rbp]
  0026d	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR w$17[rbp]
  00274	48 8b 52 40	 mov	 rdx, QWORD PTR [rdx+64]
  00278	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  0027d	44 8b c8	 mov	 r9d, eax
  00280	44 8b c1	 mov	 r8d, ecx
  00283	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0028a	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  0028e	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00295	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00299	ff 95 58 04 00
	00		 call	 QWORD PTR tv164[rbp]

; 614  :                         root.CheckNumber(w);

  0029f	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR w$17[rbp]
  002a6	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  002ad	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 615  :                         CommitNumber(w);

  002b2	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR w$17[rbp]
  002b9	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 616  :                         root.UnlinkNumber(w);

  002be	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR w$17[rbp]
  002c5	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  002cc	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 617  :                         return (w);

  002d1	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR w$17[rbp]
  002d8	48 89 85 08 04
	00 00		 mov	 QWORD PTR $T24[rbp], rax
  002df	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  002e6	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  002eb	48 8b 85 08 04
	00 00		 mov	 rax, QWORD PTR $T24[rbp]
  002f2	e9 08 01 00 00	 jmp	 $LN1@PMC_Multip
$LN15@PMC_Multip:

; 618  :                     }
; 619  :                 }
; 620  :                 else

  002f7	e9 03 01 00 00	 jmp	 $LN1@PMC_Multip
$LN12@PMC_Multip:

; 621  :                 {
; 622  :                     // _UINT64_T が 1 ワードで表現できる場合
; 623  :                     ResourceHolderUINT root;

  002fc	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  00303	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00308	90		 npad	 1

; 624  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00309	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00310	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00314	48 89 85 e8 01
	00 00		 mov	 QWORD PTR u_bit_count$19[rbp], rax

; 625  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);

  0031b	48 8b 8d 88 04
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  00322	e8 00 00 00 00	 call	 _LZCNT_ALT_UNIT
  00327	48 98		 cdqe
  00329	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0032e	48 2b c8	 sub	 rcx, rax
  00331	48 8b c1	 mov	 rax, rcx
  00334	48 89 85 08 02
	00 00		 mov	 QWORD PTR v_bit_count$20[rbp], rax

; 626  :                     __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  0033b	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR v_bit_count$20[rbp]
  00342	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR u_bit_count$19[rbp]
  00349	48 03 c8	 add	 rcx, rax
  0034c	48 8b c1	 mov	 rax, rcx
  0034f	48 89 85 28 02
	00 00		 mov	 QWORD PTR w_bit_count$21[rbp], rax

; 627  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00356	48 8b 95 28 02
	00 00		 mov	 rdx, QWORD PTR w_bit_count$21[rbp]
  0035d	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  00364	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00369	48 89 85 48 02
	00 00		 mov	 QWORD PTR w$22[rbp], rax

; 628  :                     (*fp_Multiply_X_1W)(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK);

  00370	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA
  00377	48 89 85 58 04
	00 00		 mov	 QWORD PTR tv190[rbp], rax
  0037e	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR w$22[rbp]
  00385	4c 8b 48 40	 mov	 r9, QWORD PTR [rax+64]
  00389	4c 8b 85 88 04
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00390	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00397	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  0039b	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  003a2	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  003a6	ff 95 58 04 00
	00		 call	 QWORD PTR tv190[rbp]

; 629  :                     root.CheckNumber(w);

  003ac	48 8b 95 48 02
	00 00		 mov	 rdx, QWORD PTR w$22[rbp]
  003b3	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  003ba	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 630  :                     CommitNumber(w);

  003bf	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR w$22[rbp]
  003c6	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 631  :                     root.UnlinkNumber(w);

  003cb	48 8b 95 48 02
	00 00		 mov	 rdx, QWORD PTR w$22[rbp]
  003d2	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  003d9	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 632  :                     return (w);

  003de	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR w$22[rbp]
  003e5	48 89 85 28 04
	00 00		 mov	 QWORD PTR $T25[rbp], rax
  003ec	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  003f3	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  003f8	48 8b 85 28 04
	00 00		 mov	 rax, QWORD PTR $T25[rbp]
$LN1@PMC_Multip:

; 633  :                 }
; 634  :             }
; 635  :         }
; 636  :     }

  003ff	48 8b f8	 mov	 rdi, rax
  00402	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00406	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcFrameData
  0040d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00412	48 8b c7	 mov	 rax, rdi
  00415	48 8d a5 68 04
	00 00		 lea	 rsp, QWORD PTR [rbp+1128]
  0041c	5f		 pop	 rdi
  0041d	5d		 pop	 rbp
  0041e	c3		 ret	 0
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
root$10 = 104
v_bit_count$11 = 168
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
u_bit_count$19 = 488
v_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1000
$T24 = 1032
$T25 = 1064
$T26 = 1096
tv190 = 1112
tv164 = 1112
tv136 = 1112
u$ = 1152
v$ = 1160
?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR root$10[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
root$10 = 104
v_bit_count$11 = 168
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
u_bit_count$19 = 488
v_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1000
$T24 = 1032
$T25 = 1064
$T26 = 1096
tv190 = 1112
tv164 = 1112
tv136 = 1112
u$ = 1152
v$ = 1160
?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
root$10 = 104
v_bit_count$11 = 168
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
u_bit_count$19 = 488
v_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1000
$T24 = 1032
$T25 = 1064
$T26 = 1096
tv190 = 1112
tv164 = 1112
tv136 = 1112
u$ = 1152
v$ = 1160
?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
root$10 = 104
v_bit_count$11 = 168
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
u_bit_count$19 = 488
v_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1000
$T24 = 1032
$T25 = 1064
$T26 = 1096
tv190 = 1112
tv164 = 1112
tv136 = 1112
u$ = 1152
v$ = 1160
?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR root$10[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
root$10 = 104
v_bit_count$11 = 168
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
u_bit_count$19 = 488
v_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1000
$T24 = 1032
$T25 = 1064
$T26 = 1096
tv190 = 1112
tv164 = 1112
tv136 = 1112
u$ = 1152
v$ = 1160
?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
root$10 = 104
v_bit_count$11 = 168
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
u_bit_count$19 = 488
v_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1000
$T24 = 1032
$T25 = 1064
$T26 = 1096
tv190 = 1112
tv164 = 1112
tv136 = 1112
u$ = 1152
v$ = 1160
?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
_TEXT	SEGMENT
t_buf$1 = 8
t_count$2 = 40
up$ = 72
vp$ = 104
wp$ = 136
u_buf$ = 384
u_count$ = 392
v_buf$ = 400
v_count$ = 408
w_buf$ = 416
?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MULX_ADCX, COMDAT

; 408  :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 409  :         // x のワード長が y のワード長以上であるようにする
; 410  :         if (u_count < v_count)

  00045	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  0004c	48 39 85 88 01
	00 00		 cmp	 QWORD PTR u_count$[rbp], rax
  00053	73 48		 jae	 SHORT $LN5@Multiply_X

; 411  :         {
; 412  :             __UNIT_TYPE* t_buf = u_buf;

  00055	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR u_buf$[rbp]
  0005c	48 89 45 08	 mov	 QWORD PTR t_buf$1[rbp], rax

; 413  :             u_buf = v_buf;

  00060	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR v_buf$[rbp]
  00067	48 89 85 80 01
	00 00		 mov	 QWORD PTR u_buf$[rbp], rax

; 414  :             v_buf = t_buf;

  0006e	48 8b 45 08	 mov	 rax, QWORD PTR t_buf$1[rbp]
  00072	48 89 85 90 01
	00 00		 mov	 QWORD PTR v_buf$[rbp], rax

; 415  :             __UNIT_TYPE t_count = u_count;

  00079	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00080	48 89 45 28	 mov	 QWORD PTR t_count$2[rbp], rax

; 416  :             u_count = v_count;

  00084	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  0008b	48 89 85 88 01
	00 00		 mov	 QWORD PTR u_count$[rbp], rax

; 417  :             v_count = t_count;

  00092	48 8b 45 28	 mov	 rax, QWORD PTR t_count$2[rbp]
  00096	48 89 85 98 01
	00 00		 mov	 QWORD PTR v_count$[rbp], rax
$LN5@Multiply_X:

; 418  :         }
; 419  :         __UNIT_TYPE* up = u_buf;

  0009d	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR u_buf$[rbp]
  000a4	48 89 45 48	 mov	 QWORD PTR up$[rbp], rax

; 420  :         __UNIT_TYPE* vp = v_buf;

  000a8	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR v_buf$[rbp]
  000af	48 89 45 68	 mov	 QWORD PTR vp$[rbp], rax

; 421  :         __UNIT_TYPE* wp = w_buf;

  000b3	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR w_buf$[rbp]
  000ba	48 89 85 88 00
	00 00		 mov	 QWORD PTR wp$[rbp], rax
$LN4@Multiply_X:

; 422  : 
; 423  :         do
; 424  :         {
; 425  :             Multiply_WORD_using_MULX_ADCX(up, u_count, *vp, wp);

  000c1	4c 8b 8d 88 00
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  000c8	48 8b 45 68	 mov	 rax, QWORD PTR vp$[rbp]
  000cc	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000cf	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  000d6	48 8b 4d 48	 mov	 rcx, QWORD PTR up$[rbp]
  000da	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX

; 426  :             ++vp;

  000df	48 8b 45 68	 mov	 rax, QWORD PTR vp$[rbp]
  000e3	48 83 c0 08	 add	 rax, 8
  000e7	48 89 45 68	 mov	 QWORD PTR vp$[rbp], rax

; 427  :             ++wp;

  000eb	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  000f2	48 83 c0 08	 add	 rax, 8
  000f6	48 89 85 88 00
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 428  :             --v_count;

  000fd	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  00104	48 ff c8	 dec	 rax
  00107	48 89 85 98 01
	00 00		 mov	 QWORD PTR v_count$[rbp], rax

; 429  :         } while (v_count != 0);

  0010e	48 83 bd 98 01
	00 00 00	 cmp	 QWORD PTR v_count$[rbp], 0
  00116	75 a9		 jne	 SHORT $LN4@Multiply_X

; 430  :     }

  00118	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  0011f	5f		 pop	 rdi
  00120	5d		 pop	 rbp
  00121	c3		 ret	 0
?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MULX_ADCX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
_TEXT	SEGMENT
t_buf$1 = 8
t_count$2 = 40
up$ = 72
vp$ = 104
wp$ = 136
u_buf$ = 384
u_count$ = 392
v_buf$ = 400
v_count$ = 408
w_buf$ = 416
?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MUL_ADC, COMDAT

; 383  :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 384  :         // x のワード長が y のワード長以上であるようにする
; 385  :         if (u_count < v_count)

  00045	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  0004c	48 39 85 88 01
	00 00		 cmp	 QWORD PTR u_count$[rbp], rax
  00053	73 48		 jae	 SHORT $LN5@Multiply_X

; 386  :         {
; 387  :             __UNIT_TYPE* t_buf = u_buf;

  00055	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR u_buf$[rbp]
  0005c	48 89 45 08	 mov	 QWORD PTR t_buf$1[rbp], rax

; 388  :             u_buf = v_buf;

  00060	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR v_buf$[rbp]
  00067	48 89 85 80 01
	00 00		 mov	 QWORD PTR u_buf$[rbp], rax

; 389  :             v_buf = t_buf;

  0006e	48 8b 45 08	 mov	 rax, QWORD PTR t_buf$1[rbp]
  00072	48 89 85 90 01
	00 00		 mov	 QWORD PTR v_buf$[rbp], rax

; 390  :             __UNIT_TYPE t_count = u_count;

  00079	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00080	48 89 45 28	 mov	 QWORD PTR t_count$2[rbp], rax

; 391  :             u_count = v_count;

  00084	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  0008b	48 89 85 88 01
	00 00		 mov	 QWORD PTR u_count$[rbp], rax

; 392  :             v_count = t_count;

  00092	48 8b 45 28	 mov	 rax, QWORD PTR t_count$2[rbp]
  00096	48 89 85 98 01
	00 00		 mov	 QWORD PTR v_count$[rbp], rax
$LN5@Multiply_X:

; 393  :         }
; 394  :         __UNIT_TYPE* up = u_buf;

  0009d	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR u_buf$[rbp]
  000a4	48 89 45 48	 mov	 QWORD PTR up$[rbp], rax

; 395  :         __UNIT_TYPE* vp = v_buf;

  000a8	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR v_buf$[rbp]
  000af	48 89 45 68	 mov	 QWORD PTR vp$[rbp], rax

; 396  :         __UNIT_TYPE* wp = w_buf;

  000b3	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR w_buf$[rbp]
  000ba	48 89 85 88 00
	00 00		 mov	 QWORD PTR wp$[rbp], rax
$LN4@Multiply_X:

; 397  : 
; 398  :         do
; 399  :         {
; 400  :             Multiply_WORD_using_MUL_ADC(up, u_count, *vp, wp);

  000c1	4c 8b 8d 88 00
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  000c8	48 8b 45 68	 mov	 rax, QWORD PTR vp$[rbp]
  000cc	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000cf	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  000d6	48 8b 4d 48	 mov	 rcx, QWORD PTR up$[rbp]
  000da	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC

; 401  :             ++vp;

  000df	48 8b 45 68	 mov	 rax, QWORD PTR vp$[rbp]
  000e3	48 83 c0 08	 add	 rax, 8
  000e7	48 89 45 68	 mov	 QWORD PTR vp$[rbp], rax

; 402  :             ++wp;

  000eb	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  000f2	48 83 c0 08	 add	 rax, 8
  000f6	48 89 85 88 00
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 403  :             --v_count;

  000fd	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  00104	48 ff c8	 dec	 rax
  00107	48 89 85 98 01
	00 00		 mov	 QWORD PTR v_count$[rbp], rax

; 404  :         } while (v_count != 0);

  0010e	48 83 bd 98 01
	00 00 00	 cmp	 QWORD PTR v_count$[rbp], 0
  00116	75 a9		 jne	 SHORT $LN4@Multiply_X

; 405  :     }

  00118	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  0011f	5f		 pop	 rdi
  00120	5d		 pop	 rbp
  00121	c3		 ret	 0
?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MUL_ADC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
_TEXT	SEGMENT
u_buf$ = 224
u_count$ = 232
v_hi$ = 240
v_lo$ = 248
w_buf$ = 256
?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MULX_ADCX, COMDAT

; 377  :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 378  :         Multiply_WORD_using_MULX_ADCX(u_buf, u_count, v_lo, &w_buf[0]);

  00045	b8 08 00 00 00	 mov	 eax, 8
  0004a	48 6b c0 00	 imul	 rax, rax, 0
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR w_buf$[rbp]
  00055	48 03 c8	 add	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	4c 8b c8	 mov	 r9, rax
  0005e	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR v_lo$[rbp]
  00065	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  0006c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR u_buf$[rbp]
  00073	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX

; 379  :         Multiply_WORD_using_MULX_ADCX(u_buf, u_count, v_hi, &w_buf[1]);

  00078	b8 08 00 00 00	 mov	 eax, 8
  0007d	48 6b c0 01	 imul	 rax, rax, 1
  00081	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR w_buf$[rbp]
  00088	48 03 c8	 add	 rcx, rax
  0008b	48 8b c1	 mov	 rax, rcx
  0008e	4c 8b c8	 mov	 r9, rax
  00091	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR v_hi$[rbp]
  00098	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  0009f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR u_buf$[rbp]
  000a6	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX

; 380  :     }

  000ab	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000b2	5f		 pop	 rdi
  000b3	5d		 pop	 rbp
  000b4	c3		 ret	 0
?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MULX_ADCX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
_TEXT	SEGMENT
u_buf$ = 224
u_count$ = 232
v_hi$ = 240
v_lo$ = 248
w_buf$ = 256
?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MUL_ADC, COMDAT

; 371  :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 372  :         Multiply_WORD_using_MUL_ADC(u_buf, u_count, v_lo, &w_buf[0]);

  00045	b8 08 00 00 00	 mov	 eax, 8
  0004a	48 6b c0 00	 imul	 rax, rax, 0
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR w_buf$[rbp]
  00055	48 03 c8	 add	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	4c 8b c8	 mov	 r9, rax
  0005e	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR v_lo$[rbp]
  00065	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  0006c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR u_buf$[rbp]
  00073	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC

; 373  :         Multiply_WORD_using_MUL_ADC(u_buf, u_count, v_hi, &w_buf[1]);

  00078	b8 08 00 00 00	 mov	 eax, 8
  0007d	48 6b c0 01	 imul	 rax, rax, 1
  00081	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR w_buf$[rbp]
  00088	48 03 c8	 add	 rcx, rax
  0008b	48 8b c1	 mov	 rax, rcx
  0008e	4c 8b c8	 mov	 r9, rax
  00091	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR v_hi$[rbp]
  00098	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  0009f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR u_buf$[rbp]
  000a6	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC

; 374  :     }

  000ab	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000b2	5f		 pop	 rdi
  000b3	5d		 pop	 rbp
  000b4	c3		 ret	 0
?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MUL_ADC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
_TEXT	SEGMENT
u_buf$ = 224
u_count$ = 232
v$ = 240
w_buf$ = 248
?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MULX_ADCX, COMDAT

; 366  :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 367  :         Multiply_WORD_using_MULX_ADCX(u_buf, u_count, v, w_buf);

  00045	4c 8b 8d f8 00
	00 00		 mov	 r9, QWORD PTR w_buf$[rbp]
  0004c	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00053	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  0005a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR u_buf$[rbp]
  00061	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX

; 368  :     }

  00066	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006d	5f		 pop	 rdi
  0006e	5d		 pop	 rbp
  0006f	c3		 ret	 0
?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MULX_ADCX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
_TEXT	SEGMENT
u_buf$ = 224
u_count$ = 232
v$ = 240
w_buf$ = 248
?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MUL_ADC, COMDAT

; 361  :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 362  :         Multiply_WORD_using_MUL_ADC(u_buf, u_count, v, w_buf);

  00045	4c 8b 8d f8 00
	00 00		 mov	 r9, QWORD PTR w_buf$[rbp]
  0004c	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00053	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  0005a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR u_buf$[rbp]
  00061	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC

; 363  :     }

  00066	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006d	5f		 pop	 rdi
  0006e	5d		 pop	 rbp
  0006f	c3		 ret	 0
?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MUL_ADC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
_TEXT	SEGMENT
k$ = 8
count$ = 40
up$ = 288
u_count$ = 296
v$ = 304
wp$ = 312
?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z PROC ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX, COMDAT

; 215  :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 216  :         __UNIT_TYPE k = 0;

  00045	48 c7 45 08 00
	00 00 00	 mov	 QWORD PTR k$[rbp], 0

; 217  :         __UNIT_TYPE count = u_count >> 5;

  0004d	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00054	48 c1 e8 05	 shr	 rax, 5
  00058	48 89 45 28	 mov	 QWORD PTR count$[rbp], rax
$LN2@Multiply_W:

; 218  : 
; 219  :         while (count != 0)

  0005c	48 83 7d 28 00	 cmp	 QWORD PTR count$[rbp], 0
  00061	0f 84 14 09 00
	00		 je	 $LN3@Multiply_W

; 220  :         {
; 221  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  00067	b8 08 00 00 00	 mov	 eax, 8
  0006c	48 6b c0 00	 imul	 rax, rax, 0
  00070	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	b9 08 00 00 00	 mov	 ecx, 8
  00082	48 6b c9 00	 imul	 rcx, rcx, 0
  00086	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0008d	48 03 d1	 add	 rdx, rcx
  00090	48 8b ca	 mov	 rcx, rdx
  00093	4c 8b c8	 mov	 r9, rax
  00096	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0009d	48 8b d1	 mov	 rdx, rcx
  000a0	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  000a4	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  000a9	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 222  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  000ad	b8 08 00 00 00	 mov	 eax, 8
  000b2	48 6b c0 01	 imul	 rax, rax, 1
  000b6	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  000bd	48 03 c8	 add	 rcx, rax
  000c0	48 8b c1	 mov	 rax, rcx
  000c3	b9 08 00 00 00	 mov	 ecx, 8
  000c8	48 6b c9 01	 imul	 rcx, rcx, 1
  000cc	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  000d3	48 03 d1	 add	 rdx, rcx
  000d6	48 8b ca	 mov	 rcx, rdx
  000d9	4c 8b c8	 mov	 r9, rax
  000dc	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  000e3	48 8b d1	 mov	 rdx, rcx
  000e6	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  000ea	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  000ef	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 223  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[2], v, &wp[2]);

  000f3	b8 08 00 00 00	 mov	 eax, 8
  000f8	48 6b c0 02	 imul	 rax, rax, 2
  000fc	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00103	48 03 c8	 add	 rcx, rax
  00106	48 8b c1	 mov	 rax, rcx
  00109	b9 08 00 00 00	 mov	 ecx, 8
  0010e	48 6b c9 02	 imul	 rcx, rcx, 2
  00112	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00119	48 03 d1	 add	 rdx, rcx
  0011c	48 8b ca	 mov	 rcx, rdx
  0011f	4c 8b c8	 mov	 r9, rax
  00122	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00129	48 8b d1	 mov	 rdx, rcx
  0012c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00130	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00135	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 224  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[3], v, &wp[3]);

  00139	b8 08 00 00 00	 mov	 eax, 8
  0013e	48 6b c0 03	 imul	 rax, rax, 3
  00142	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00149	48 03 c8	 add	 rcx, rax
  0014c	48 8b c1	 mov	 rax, rcx
  0014f	b9 08 00 00 00	 mov	 ecx, 8
  00154	48 6b c9 03	 imul	 rcx, rcx, 3
  00158	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0015f	48 03 d1	 add	 rdx, rcx
  00162	48 8b ca	 mov	 rcx, rdx
  00165	4c 8b c8	 mov	 r9, rax
  00168	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0016f	48 8b d1	 mov	 rdx, rcx
  00172	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00176	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0017b	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 225  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[4], v, &wp[4]);

  0017f	b8 08 00 00 00	 mov	 eax, 8
  00184	48 6b c0 04	 imul	 rax, rax, 4
  00188	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0018f	48 03 c8	 add	 rcx, rax
  00192	48 8b c1	 mov	 rax, rcx
  00195	b9 08 00 00 00	 mov	 ecx, 8
  0019a	48 6b c9 04	 imul	 rcx, rcx, 4
  0019e	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  001a5	48 03 d1	 add	 rdx, rcx
  001a8	48 8b ca	 mov	 rcx, rdx
  001ab	4c 8b c8	 mov	 r9, rax
  001ae	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  001b5	48 8b d1	 mov	 rdx, rcx
  001b8	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  001bc	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  001c1	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 226  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[5], v, &wp[5]);

  001c5	b8 08 00 00 00	 mov	 eax, 8
  001ca	48 6b c0 05	 imul	 rax, rax, 5
  001ce	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  001d5	48 03 c8	 add	 rcx, rax
  001d8	48 8b c1	 mov	 rax, rcx
  001db	b9 08 00 00 00	 mov	 ecx, 8
  001e0	48 6b c9 05	 imul	 rcx, rcx, 5
  001e4	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  001eb	48 03 d1	 add	 rdx, rcx
  001ee	48 8b ca	 mov	 rcx, rdx
  001f1	4c 8b c8	 mov	 r9, rax
  001f4	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  001fb	48 8b d1	 mov	 rdx, rcx
  001fe	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00202	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00207	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 227  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[6], v, &wp[6]);

  0020b	b8 08 00 00 00	 mov	 eax, 8
  00210	48 6b c0 06	 imul	 rax, rax, 6
  00214	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0021b	48 03 c8	 add	 rcx, rax
  0021e	48 8b c1	 mov	 rax, rcx
  00221	b9 08 00 00 00	 mov	 ecx, 8
  00226	48 6b c9 06	 imul	 rcx, rcx, 6
  0022a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00231	48 03 d1	 add	 rdx, rcx
  00234	48 8b ca	 mov	 rcx, rdx
  00237	4c 8b c8	 mov	 r9, rax
  0023a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00241	48 8b d1	 mov	 rdx, rcx
  00244	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00248	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0024d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 228  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[7], v, &wp[7]);

  00251	b8 08 00 00 00	 mov	 eax, 8
  00256	48 6b c0 07	 imul	 rax, rax, 7
  0025a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00261	48 03 c8	 add	 rcx, rax
  00264	48 8b c1	 mov	 rax, rcx
  00267	b9 08 00 00 00	 mov	 ecx, 8
  0026c	48 6b c9 07	 imul	 rcx, rcx, 7
  00270	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00277	48 03 d1	 add	 rdx, rcx
  0027a	48 8b ca	 mov	 rcx, rdx
  0027d	4c 8b c8	 mov	 r9, rax
  00280	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00287	48 8b d1	 mov	 rdx, rcx
  0028a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0028e	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00293	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 229  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[8], v, &wp[8]);

  00297	b8 08 00 00 00	 mov	 eax, 8
  0029c	48 6b c0 08	 imul	 rax, rax, 8
  002a0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  002a7	48 03 c8	 add	 rcx, rax
  002aa	48 8b c1	 mov	 rax, rcx
  002ad	b9 08 00 00 00	 mov	 ecx, 8
  002b2	48 6b c9 08	 imul	 rcx, rcx, 8
  002b6	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  002bd	48 03 d1	 add	 rdx, rcx
  002c0	48 8b ca	 mov	 rcx, rdx
  002c3	4c 8b c8	 mov	 r9, rax
  002c6	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  002cd	48 8b d1	 mov	 rdx, rcx
  002d0	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  002d4	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  002d9	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 230  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[9], v, &wp[9]);

  002dd	b8 08 00 00 00	 mov	 eax, 8
  002e2	48 6b c0 09	 imul	 rax, rax, 9
  002e6	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  002ed	48 03 c8	 add	 rcx, rax
  002f0	48 8b c1	 mov	 rax, rcx
  002f3	b9 08 00 00 00	 mov	 ecx, 8
  002f8	48 6b c9 09	 imul	 rcx, rcx, 9
  002fc	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00303	48 03 d1	 add	 rdx, rcx
  00306	48 8b ca	 mov	 rcx, rdx
  00309	4c 8b c8	 mov	 r9, rax
  0030c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00313	48 8b d1	 mov	 rdx, rcx
  00316	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0031a	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0031f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 231  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[10], v, &wp[10]);

  00323	b8 08 00 00 00	 mov	 eax, 8
  00328	48 6b c0 0a	 imul	 rax, rax, 10
  0032c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00333	48 03 c8	 add	 rcx, rax
  00336	48 8b c1	 mov	 rax, rcx
  00339	b9 08 00 00 00	 mov	 ecx, 8
  0033e	48 6b c9 0a	 imul	 rcx, rcx, 10
  00342	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00349	48 03 d1	 add	 rdx, rcx
  0034c	48 8b ca	 mov	 rcx, rdx
  0034f	4c 8b c8	 mov	 r9, rax
  00352	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00359	48 8b d1	 mov	 rdx, rcx
  0035c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00360	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00365	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 232  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[11], v, &wp[11]);

  00369	b8 08 00 00 00	 mov	 eax, 8
  0036e	48 6b c0 0b	 imul	 rax, rax, 11
  00372	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00379	48 03 c8	 add	 rcx, rax
  0037c	48 8b c1	 mov	 rax, rcx
  0037f	b9 08 00 00 00	 mov	 ecx, 8
  00384	48 6b c9 0b	 imul	 rcx, rcx, 11
  00388	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0038f	48 03 d1	 add	 rdx, rcx
  00392	48 8b ca	 mov	 rcx, rdx
  00395	4c 8b c8	 mov	 r9, rax
  00398	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0039f	48 8b d1	 mov	 rdx, rcx
  003a2	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  003a6	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  003ab	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 233  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[12], v, &wp[12]);

  003af	b8 08 00 00 00	 mov	 eax, 8
  003b4	48 6b c0 0c	 imul	 rax, rax, 12
  003b8	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  003bf	48 03 c8	 add	 rcx, rax
  003c2	48 8b c1	 mov	 rax, rcx
  003c5	b9 08 00 00 00	 mov	 ecx, 8
  003ca	48 6b c9 0c	 imul	 rcx, rcx, 12
  003ce	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  003d5	48 03 d1	 add	 rdx, rcx
  003d8	48 8b ca	 mov	 rcx, rdx
  003db	4c 8b c8	 mov	 r9, rax
  003de	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  003e5	48 8b d1	 mov	 rdx, rcx
  003e8	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  003ec	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  003f1	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 234  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[13], v, &wp[13]);

  003f5	b8 08 00 00 00	 mov	 eax, 8
  003fa	48 6b c0 0d	 imul	 rax, rax, 13
  003fe	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00405	48 03 c8	 add	 rcx, rax
  00408	48 8b c1	 mov	 rax, rcx
  0040b	b9 08 00 00 00	 mov	 ecx, 8
  00410	48 6b c9 0d	 imul	 rcx, rcx, 13
  00414	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0041b	48 03 d1	 add	 rdx, rcx
  0041e	48 8b ca	 mov	 rcx, rdx
  00421	4c 8b c8	 mov	 r9, rax
  00424	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0042b	48 8b d1	 mov	 rdx, rcx
  0042e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00432	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00437	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 235  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[14], v, &wp[14]);

  0043b	b8 08 00 00 00	 mov	 eax, 8
  00440	48 6b c0 0e	 imul	 rax, rax, 14
  00444	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0044b	48 03 c8	 add	 rcx, rax
  0044e	48 8b c1	 mov	 rax, rcx
  00451	b9 08 00 00 00	 mov	 ecx, 8
  00456	48 6b c9 0e	 imul	 rcx, rcx, 14
  0045a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00461	48 03 d1	 add	 rdx, rcx
  00464	48 8b ca	 mov	 rcx, rdx
  00467	4c 8b c8	 mov	 r9, rax
  0046a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00471	48 8b d1	 mov	 rdx, rcx
  00474	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00478	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0047d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 236  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[15], v, &wp[15]);

  00481	b8 08 00 00 00	 mov	 eax, 8
  00486	48 6b c0 0f	 imul	 rax, rax, 15
  0048a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00491	48 03 c8	 add	 rcx, rax
  00494	48 8b c1	 mov	 rax, rcx
  00497	b9 08 00 00 00	 mov	 ecx, 8
  0049c	48 6b c9 0f	 imul	 rcx, rcx, 15
  004a0	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  004a7	48 03 d1	 add	 rdx, rcx
  004aa	48 8b ca	 mov	 rcx, rdx
  004ad	4c 8b c8	 mov	 r9, rax
  004b0	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  004b7	48 8b d1	 mov	 rdx, rcx
  004ba	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  004be	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  004c3	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 237  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[16], v, &wp[16]);

  004c7	b8 08 00 00 00	 mov	 eax, 8
  004cc	48 6b c0 10	 imul	 rax, rax, 16
  004d0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  004d7	48 03 c8	 add	 rcx, rax
  004da	48 8b c1	 mov	 rax, rcx
  004dd	b9 08 00 00 00	 mov	 ecx, 8
  004e2	48 6b c9 10	 imul	 rcx, rcx, 16
  004e6	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  004ed	48 03 d1	 add	 rdx, rcx
  004f0	48 8b ca	 mov	 rcx, rdx
  004f3	4c 8b c8	 mov	 r9, rax
  004f6	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  004fd	48 8b d1	 mov	 rdx, rcx
  00500	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00504	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00509	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 238  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[17], v, &wp[17]);

  0050d	b8 08 00 00 00	 mov	 eax, 8
  00512	48 6b c0 11	 imul	 rax, rax, 17
  00516	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0051d	48 03 c8	 add	 rcx, rax
  00520	48 8b c1	 mov	 rax, rcx
  00523	b9 08 00 00 00	 mov	 ecx, 8
  00528	48 6b c9 11	 imul	 rcx, rcx, 17
  0052c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00533	48 03 d1	 add	 rdx, rcx
  00536	48 8b ca	 mov	 rcx, rdx
  00539	4c 8b c8	 mov	 r9, rax
  0053c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00543	48 8b d1	 mov	 rdx, rcx
  00546	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0054a	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0054f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 239  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[18], v, &wp[18]);

  00553	b8 08 00 00 00	 mov	 eax, 8
  00558	48 6b c0 12	 imul	 rax, rax, 18
  0055c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00563	48 03 c8	 add	 rcx, rax
  00566	48 8b c1	 mov	 rax, rcx
  00569	b9 08 00 00 00	 mov	 ecx, 8
  0056e	48 6b c9 12	 imul	 rcx, rcx, 18
  00572	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00579	48 03 d1	 add	 rdx, rcx
  0057c	48 8b ca	 mov	 rcx, rdx
  0057f	4c 8b c8	 mov	 r9, rax
  00582	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00589	48 8b d1	 mov	 rdx, rcx
  0058c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00590	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00595	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 240  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[19], v, &wp[19]);

  00599	b8 08 00 00 00	 mov	 eax, 8
  0059e	48 6b c0 13	 imul	 rax, rax, 19
  005a2	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  005a9	48 03 c8	 add	 rcx, rax
  005ac	48 8b c1	 mov	 rax, rcx
  005af	b9 08 00 00 00	 mov	 ecx, 8
  005b4	48 6b c9 13	 imul	 rcx, rcx, 19
  005b8	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  005bf	48 03 d1	 add	 rdx, rcx
  005c2	48 8b ca	 mov	 rcx, rdx
  005c5	4c 8b c8	 mov	 r9, rax
  005c8	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  005cf	48 8b d1	 mov	 rdx, rcx
  005d2	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  005d6	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  005db	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 241  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[20], v, &wp[20]);

  005df	b8 08 00 00 00	 mov	 eax, 8
  005e4	48 6b c0 14	 imul	 rax, rax, 20
  005e8	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  005ef	48 03 c8	 add	 rcx, rax
  005f2	48 8b c1	 mov	 rax, rcx
  005f5	b9 08 00 00 00	 mov	 ecx, 8
  005fa	48 6b c9 14	 imul	 rcx, rcx, 20
  005fe	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00605	48 03 d1	 add	 rdx, rcx
  00608	48 8b ca	 mov	 rcx, rdx
  0060b	4c 8b c8	 mov	 r9, rax
  0060e	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00615	48 8b d1	 mov	 rdx, rcx
  00618	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0061c	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00621	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 242  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[21], v, &wp[21]);

  00625	b8 08 00 00 00	 mov	 eax, 8
  0062a	48 6b c0 15	 imul	 rax, rax, 21
  0062e	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00635	48 03 c8	 add	 rcx, rax
  00638	48 8b c1	 mov	 rax, rcx
  0063b	b9 08 00 00 00	 mov	 ecx, 8
  00640	48 6b c9 15	 imul	 rcx, rcx, 21
  00644	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0064b	48 03 d1	 add	 rdx, rcx
  0064e	48 8b ca	 mov	 rcx, rdx
  00651	4c 8b c8	 mov	 r9, rax
  00654	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0065b	48 8b d1	 mov	 rdx, rcx
  0065e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00662	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00667	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 243  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[22], v, &wp[22]);

  0066b	b8 08 00 00 00	 mov	 eax, 8
  00670	48 6b c0 16	 imul	 rax, rax, 22
  00674	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0067b	48 03 c8	 add	 rcx, rax
  0067e	48 8b c1	 mov	 rax, rcx
  00681	b9 08 00 00 00	 mov	 ecx, 8
  00686	48 6b c9 16	 imul	 rcx, rcx, 22
  0068a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00691	48 03 d1	 add	 rdx, rcx
  00694	48 8b ca	 mov	 rcx, rdx
  00697	4c 8b c8	 mov	 r9, rax
  0069a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  006a1	48 8b d1	 mov	 rdx, rcx
  006a4	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  006a8	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  006ad	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 244  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[23], v, &wp[23]);

  006b1	b8 08 00 00 00	 mov	 eax, 8
  006b6	48 6b c0 17	 imul	 rax, rax, 23
  006ba	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  006c1	48 03 c8	 add	 rcx, rax
  006c4	48 8b c1	 mov	 rax, rcx
  006c7	b9 08 00 00 00	 mov	 ecx, 8
  006cc	48 6b c9 17	 imul	 rcx, rcx, 23
  006d0	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  006d7	48 03 d1	 add	 rdx, rcx
  006da	48 8b ca	 mov	 rcx, rdx
  006dd	4c 8b c8	 mov	 r9, rax
  006e0	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  006e7	48 8b d1	 mov	 rdx, rcx
  006ea	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  006ee	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  006f3	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 245  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[24], v, &wp[24]);

  006f7	b8 08 00 00 00	 mov	 eax, 8
  006fc	48 6b c0 18	 imul	 rax, rax, 24
  00700	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00707	48 03 c8	 add	 rcx, rax
  0070a	48 8b c1	 mov	 rax, rcx
  0070d	b9 08 00 00 00	 mov	 ecx, 8
  00712	48 6b c9 18	 imul	 rcx, rcx, 24
  00716	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0071d	48 03 d1	 add	 rdx, rcx
  00720	48 8b ca	 mov	 rcx, rdx
  00723	4c 8b c8	 mov	 r9, rax
  00726	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0072d	48 8b d1	 mov	 rdx, rcx
  00730	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00734	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00739	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 246  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[25], v, &wp[25]);

  0073d	b8 08 00 00 00	 mov	 eax, 8
  00742	48 6b c0 19	 imul	 rax, rax, 25
  00746	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0074d	48 03 c8	 add	 rcx, rax
  00750	48 8b c1	 mov	 rax, rcx
  00753	b9 08 00 00 00	 mov	 ecx, 8
  00758	48 6b c9 19	 imul	 rcx, rcx, 25
  0075c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00763	48 03 d1	 add	 rdx, rcx
  00766	48 8b ca	 mov	 rcx, rdx
  00769	4c 8b c8	 mov	 r9, rax
  0076c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00773	48 8b d1	 mov	 rdx, rcx
  00776	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0077a	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0077f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 247  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[26], v, &wp[26]);

  00783	b8 08 00 00 00	 mov	 eax, 8
  00788	48 6b c0 1a	 imul	 rax, rax, 26
  0078c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00793	48 03 c8	 add	 rcx, rax
  00796	48 8b c1	 mov	 rax, rcx
  00799	b9 08 00 00 00	 mov	 ecx, 8
  0079e	48 6b c9 1a	 imul	 rcx, rcx, 26
  007a2	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  007a9	48 03 d1	 add	 rdx, rcx
  007ac	48 8b ca	 mov	 rcx, rdx
  007af	4c 8b c8	 mov	 r9, rax
  007b2	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  007b9	48 8b d1	 mov	 rdx, rcx
  007bc	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  007c0	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  007c5	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 248  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[27], v, &wp[27]);

  007c9	b8 08 00 00 00	 mov	 eax, 8
  007ce	48 6b c0 1b	 imul	 rax, rax, 27
  007d2	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  007d9	48 03 c8	 add	 rcx, rax
  007dc	48 8b c1	 mov	 rax, rcx
  007df	b9 08 00 00 00	 mov	 ecx, 8
  007e4	48 6b c9 1b	 imul	 rcx, rcx, 27
  007e8	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  007ef	48 03 d1	 add	 rdx, rcx
  007f2	48 8b ca	 mov	 rcx, rdx
  007f5	4c 8b c8	 mov	 r9, rax
  007f8	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  007ff	48 8b d1	 mov	 rdx, rcx
  00802	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00806	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0080b	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 249  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[28], v, &wp[28]);

  0080f	b8 08 00 00 00	 mov	 eax, 8
  00814	48 6b c0 1c	 imul	 rax, rax, 28
  00818	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0081f	48 03 c8	 add	 rcx, rax
  00822	48 8b c1	 mov	 rax, rcx
  00825	b9 08 00 00 00	 mov	 ecx, 8
  0082a	48 6b c9 1c	 imul	 rcx, rcx, 28
  0082e	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00835	48 03 d1	 add	 rdx, rcx
  00838	48 8b ca	 mov	 rcx, rdx
  0083b	4c 8b c8	 mov	 r9, rax
  0083e	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00845	48 8b d1	 mov	 rdx, rcx
  00848	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0084c	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00851	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 250  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[29], v, &wp[29]);

  00855	b8 08 00 00 00	 mov	 eax, 8
  0085a	48 6b c0 1d	 imul	 rax, rax, 29
  0085e	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00865	48 03 c8	 add	 rcx, rax
  00868	48 8b c1	 mov	 rax, rcx
  0086b	b9 08 00 00 00	 mov	 ecx, 8
  00870	48 6b c9 1d	 imul	 rcx, rcx, 29
  00874	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0087b	48 03 d1	 add	 rdx, rcx
  0087e	48 8b ca	 mov	 rcx, rdx
  00881	4c 8b c8	 mov	 r9, rax
  00884	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0088b	48 8b d1	 mov	 rdx, rcx
  0088e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00892	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00897	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 251  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[30], v, &wp[30]);

  0089b	b8 08 00 00 00	 mov	 eax, 8
  008a0	48 6b c0 1e	 imul	 rax, rax, 30
  008a4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  008ab	48 03 c8	 add	 rcx, rax
  008ae	48 8b c1	 mov	 rax, rcx
  008b1	b9 08 00 00 00	 mov	 ecx, 8
  008b6	48 6b c9 1e	 imul	 rcx, rcx, 30
  008ba	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  008c1	48 03 d1	 add	 rdx, rcx
  008c4	48 8b ca	 mov	 rcx, rdx
  008c7	4c 8b c8	 mov	 r9, rax
  008ca	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  008d1	48 8b d1	 mov	 rdx, rcx
  008d4	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  008d8	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  008dd	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 252  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[31], v, &wp[31]);

  008e1	b8 08 00 00 00	 mov	 eax, 8
  008e6	48 6b c0 1f	 imul	 rax, rax, 31
  008ea	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  008f1	48 03 c8	 add	 rcx, rax
  008f4	48 8b c1	 mov	 rax, rcx
  008f7	b9 08 00 00 00	 mov	 ecx, 8
  008fc	48 6b c9 1f	 imul	 rcx, rcx, 31
  00900	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00907	48 03 d1	 add	 rdx, rcx
  0090a	48 8b ca	 mov	 rcx, rdx
  0090d	4c 8b c8	 mov	 r9, rax
  00910	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00917	48 8b d1	 mov	 rdx, rcx
  0091a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0091e	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00923	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 253  :             up += 32;

  00927	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  0092e	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  00934	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 254  :             wp += 32;

  0093b	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00942	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  00948	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 255  :             --count;

  0094f	48 8b 45 28	 mov	 rax, QWORD PTR count$[rbp]
  00953	48 ff c8	 dec	 rax
  00956	48 89 45 28	 mov	 QWORD PTR count$[rbp], rax

; 256  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 257  :             if (sizeof(k) == sizeof(_UINT32_T))

  0095a	33 c0		 xor	 eax, eax
  0095c	85 c0		 test	 eax, eax
  0095e	74 0c		 je	 SHORT $LN4@Multiply_W

; 258  :                 AddToMULTI32Counter(32);

  00960	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00965	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 259  :             else

  0096a	eb 0a		 jmp	 SHORT $LN5@Multiply_W
$LN4@Multiply_W:

; 260  :                 AddToMULTI64Counter(32);

  0096c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00971	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN5@Multiply_W:

; 261  : #endif
; 262  :         }

  00976	e9 e1 f6 ff ff	 jmp	 $LN2@Multiply_W
$LN3@Multiply_W:

; 263  : 
; 264  :         if (u_count & 0x10)

  0097b	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00982	48 83 e0 10	 and	 rax, 16
  00986	48 85 c0	 test	 rax, rax
  00989	0f 84 a4 04 00
	00		 je	 $LN6@Multiply_W

; 265  :         {
; 266  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  0098f	b8 08 00 00 00	 mov	 eax, 8
  00994	48 6b c0 00	 imul	 rax, rax, 0
  00998	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0099f	48 03 c8	 add	 rcx, rax
  009a2	48 8b c1	 mov	 rax, rcx
  009a5	b9 08 00 00 00	 mov	 ecx, 8
  009aa	48 6b c9 00	 imul	 rcx, rcx, 0
  009ae	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  009b5	48 03 d1	 add	 rdx, rcx
  009b8	48 8b ca	 mov	 rcx, rdx
  009bb	4c 8b c8	 mov	 r9, rax
  009be	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  009c5	48 8b d1	 mov	 rdx, rcx
  009c8	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  009cc	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  009d1	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 267  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  009d5	b8 08 00 00 00	 mov	 eax, 8
  009da	48 6b c0 01	 imul	 rax, rax, 1
  009de	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  009e5	48 03 c8	 add	 rcx, rax
  009e8	48 8b c1	 mov	 rax, rcx
  009eb	b9 08 00 00 00	 mov	 ecx, 8
  009f0	48 6b c9 01	 imul	 rcx, rcx, 1
  009f4	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  009fb	48 03 d1	 add	 rdx, rcx
  009fe	48 8b ca	 mov	 rcx, rdx
  00a01	4c 8b c8	 mov	 r9, rax
  00a04	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00a0b	48 8b d1	 mov	 rdx, rcx
  00a0e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00a12	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00a17	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 268  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[2], v, &wp[2]);

  00a1b	b8 08 00 00 00	 mov	 eax, 8
  00a20	48 6b c0 02	 imul	 rax, rax, 2
  00a24	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00a2b	48 03 c8	 add	 rcx, rax
  00a2e	48 8b c1	 mov	 rax, rcx
  00a31	b9 08 00 00 00	 mov	 ecx, 8
  00a36	48 6b c9 02	 imul	 rcx, rcx, 2
  00a3a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00a41	48 03 d1	 add	 rdx, rcx
  00a44	48 8b ca	 mov	 rcx, rdx
  00a47	4c 8b c8	 mov	 r9, rax
  00a4a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00a51	48 8b d1	 mov	 rdx, rcx
  00a54	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00a58	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00a5d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 269  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[3], v, &wp[3]);

  00a61	b8 08 00 00 00	 mov	 eax, 8
  00a66	48 6b c0 03	 imul	 rax, rax, 3
  00a6a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00a71	48 03 c8	 add	 rcx, rax
  00a74	48 8b c1	 mov	 rax, rcx
  00a77	b9 08 00 00 00	 mov	 ecx, 8
  00a7c	48 6b c9 03	 imul	 rcx, rcx, 3
  00a80	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00a87	48 03 d1	 add	 rdx, rcx
  00a8a	48 8b ca	 mov	 rcx, rdx
  00a8d	4c 8b c8	 mov	 r9, rax
  00a90	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00a97	48 8b d1	 mov	 rdx, rcx
  00a9a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00a9e	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00aa3	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 270  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[4], v, &wp[4]);

  00aa7	b8 08 00 00 00	 mov	 eax, 8
  00aac	48 6b c0 04	 imul	 rax, rax, 4
  00ab0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ab7	48 03 c8	 add	 rcx, rax
  00aba	48 8b c1	 mov	 rax, rcx
  00abd	b9 08 00 00 00	 mov	 ecx, 8
  00ac2	48 6b c9 04	 imul	 rcx, rcx, 4
  00ac6	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00acd	48 03 d1	 add	 rdx, rcx
  00ad0	48 8b ca	 mov	 rcx, rdx
  00ad3	4c 8b c8	 mov	 r9, rax
  00ad6	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00add	48 8b d1	 mov	 rdx, rcx
  00ae0	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00ae4	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00ae9	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 271  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[5], v, &wp[5]);

  00aed	b8 08 00 00 00	 mov	 eax, 8
  00af2	48 6b c0 05	 imul	 rax, rax, 5
  00af6	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00afd	48 03 c8	 add	 rcx, rax
  00b00	48 8b c1	 mov	 rax, rcx
  00b03	b9 08 00 00 00	 mov	 ecx, 8
  00b08	48 6b c9 05	 imul	 rcx, rcx, 5
  00b0c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00b13	48 03 d1	 add	 rdx, rcx
  00b16	48 8b ca	 mov	 rcx, rdx
  00b19	4c 8b c8	 mov	 r9, rax
  00b1c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00b23	48 8b d1	 mov	 rdx, rcx
  00b26	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00b2a	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00b2f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 272  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[6], v, &wp[6]);

  00b33	b8 08 00 00 00	 mov	 eax, 8
  00b38	48 6b c0 06	 imul	 rax, rax, 6
  00b3c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00b43	48 03 c8	 add	 rcx, rax
  00b46	48 8b c1	 mov	 rax, rcx
  00b49	b9 08 00 00 00	 mov	 ecx, 8
  00b4e	48 6b c9 06	 imul	 rcx, rcx, 6
  00b52	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00b59	48 03 d1	 add	 rdx, rcx
  00b5c	48 8b ca	 mov	 rcx, rdx
  00b5f	4c 8b c8	 mov	 r9, rax
  00b62	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00b69	48 8b d1	 mov	 rdx, rcx
  00b6c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00b70	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00b75	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 273  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[7], v, &wp[7]);

  00b79	b8 08 00 00 00	 mov	 eax, 8
  00b7e	48 6b c0 07	 imul	 rax, rax, 7
  00b82	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00b89	48 03 c8	 add	 rcx, rax
  00b8c	48 8b c1	 mov	 rax, rcx
  00b8f	b9 08 00 00 00	 mov	 ecx, 8
  00b94	48 6b c9 07	 imul	 rcx, rcx, 7
  00b98	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00b9f	48 03 d1	 add	 rdx, rcx
  00ba2	48 8b ca	 mov	 rcx, rdx
  00ba5	4c 8b c8	 mov	 r9, rax
  00ba8	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00baf	48 8b d1	 mov	 rdx, rcx
  00bb2	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00bb6	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00bbb	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 274  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[8], v, &wp[8]);

  00bbf	b8 08 00 00 00	 mov	 eax, 8
  00bc4	48 6b c0 08	 imul	 rax, rax, 8
  00bc8	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00bcf	48 03 c8	 add	 rcx, rax
  00bd2	48 8b c1	 mov	 rax, rcx
  00bd5	b9 08 00 00 00	 mov	 ecx, 8
  00bda	48 6b c9 08	 imul	 rcx, rcx, 8
  00bde	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00be5	48 03 d1	 add	 rdx, rcx
  00be8	48 8b ca	 mov	 rcx, rdx
  00beb	4c 8b c8	 mov	 r9, rax
  00bee	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00bf5	48 8b d1	 mov	 rdx, rcx
  00bf8	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00bfc	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00c01	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 275  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[9], v, &wp[9]);

  00c05	b8 08 00 00 00	 mov	 eax, 8
  00c0a	48 6b c0 09	 imul	 rax, rax, 9
  00c0e	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00c15	48 03 c8	 add	 rcx, rax
  00c18	48 8b c1	 mov	 rax, rcx
  00c1b	b9 08 00 00 00	 mov	 ecx, 8
  00c20	48 6b c9 09	 imul	 rcx, rcx, 9
  00c24	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00c2b	48 03 d1	 add	 rdx, rcx
  00c2e	48 8b ca	 mov	 rcx, rdx
  00c31	4c 8b c8	 mov	 r9, rax
  00c34	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00c3b	48 8b d1	 mov	 rdx, rcx
  00c3e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00c42	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00c47	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 276  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[10], v, &wp[10]);

  00c4b	b8 08 00 00 00	 mov	 eax, 8
  00c50	48 6b c0 0a	 imul	 rax, rax, 10
  00c54	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00c5b	48 03 c8	 add	 rcx, rax
  00c5e	48 8b c1	 mov	 rax, rcx
  00c61	b9 08 00 00 00	 mov	 ecx, 8
  00c66	48 6b c9 0a	 imul	 rcx, rcx, 10
  00c6a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00c71	48 03 d1	 add	 rdx, rcx
  00c74	48 8b ca	 mov	 rcx, rdx
  00c77	4c 8b c8	 mov	 r9, rax
  00c7a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00c81	48 8b d1	 mov	 rdx, rcx
  00c84	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00c88	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00c8d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 277  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[11], v, &wp[11]);

  00c91	b8 08 00 00 00	 mov	 eax, 8
  00c96	48 6b c0 0b	 imul	 rax, rax, 11
  00c9a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ca1	48 03 c8	 add	 rcx, rax
  00ca4	48 8b c1	 mov	 rax, rcx
  00ca7	b9 08 00 00 00	 mov	 ecx, 8
  00cac	48 6b c9 0b	 imul	 rcx, rcx, 11
  00cb0	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00cb7	48 03 d1	 add	 rdx, rcx
  00cba	48 8b ca	 mov	 rcx, rdx
  00cbd	4c 8b c8	 mov	 r9, rax
  00cc0	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00cc7	48 8b d1	 mov	 rdx, rcx
  00cca	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00cce	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00cd3	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 278  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[12], v, &wp[12]);

  00cd7	b8 08 00 00 00	 mov	 eax, 8
  00cdc	48 6b c0 0c	 imul	 rax, rax, 12
  00ce0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ce7	48 03 c8	 add	 rcx, rax
  00cea	48 8b c1	 mov	 rax, rcx
  00ced	b9 08 00 00 00	 mov	 ecx, 8
  00cf2	48 6b c9 0c	 imul	 rcx, rcx, 12
  00cf6	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00cfd	48 03 d1	 add	 rdx, rcx
  00d00	48 8b ca	 mov	 rcx, rdx
  00d03	4c 8b c8	 mov	 r9, rax
  00d06	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00d0d	48 8b d1	 mov	 rdx, rcx
  00d10	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00d14	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00d19	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 279  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[13], v, &wp[13]);

  00d1d	b8 08 00 00 00	 mov	 eax, 8
  00d22	48 6b c0 0d	 imul	 rax, rax, 13
  00d26	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00d2d	48 03 c8	 add	 rcx, rax
  00d30	48 8b c1	 mov	 rax, rcx
  00d33	b9 08 00 00 00	 mov	 ecx, 8
  00d38	48 6b c9 0d	 imul	 rcx, rcx, 13
  00d3c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00d43	48 03 d1	 add	 rdx, rcx
  00d46	48 8b ca	 mov	 rcx, rdx
  00d49	4c 8b c8	 mov	 r9, rax
  00d4c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00d53	48 8b d1	 mov	 rdx, rcx
  00d56	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00d5a	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00d5f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 280  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[14], v, &wp[14]);

  00d63	b8 08 00 00 00	 mov	 eax, 8
  00d68	48 6b c0 0e	 imul	 rax, rax, 14
  00d6c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00d73	48 03 c8	 add	 rcx, rax
  00d76	48 8b c1	 mov	 rax, rcx
  00d79	b9 08 00 00 00	 mov	 ecx, 8
  00d7e	48 6b c9 0e	 imul	 rcx, rcx, 14
  00d82	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00d89	48 03 d1	 add	 rdx, rcx
  00d8c	48 8b ca	 mov	 rcx, rdx
  00d8f	4c 8b c8	 mov	 r9, rax
  00d92	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00d99	48 8b d1	 mov	 rdx, rcx
  00d9c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00da0	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00da5	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 281  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[15], v, &wp[15]);

  00da9	b8 08 00 00 00	 mov	 eax, 8
  00dae	48 6b c0 0f	 imul	 rax, rax, 15
  00db2	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00db9	48 03 c8	 add	 rcx, rax
  00dbc	48 8b c1	 mov	 rax, rcx
  00dbf	b9 08 00 00 00	 mov	 ecx, 8
  00dc4	48 6b c9 0f	 imul	 rcx, rcx, 15
  00dc8	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00dcf	48 03 d1	 add	 rdx, rcx
  00dd2	48 8b ca	 mov	 rcx, rdx
  00dd5	4c 8b c8	 mov	 r9, rax
  00dd8	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00ddf	48 8b d1	 mov	 rdx, rcx
  00de2	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00de6	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00deb	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 282  :             up += 16;

  00def	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00df6	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00dfc	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 283  :             wp += 16;

  00e03	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00e0a	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00e10	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 284  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 285  :             if (sizeof(k) == sizeof(_UINT32_T))

  00e17	33 c0		 xor	 eax, eax
  00e19	85 c0		 test	 eax, eax
  00e1b	74 0c		 je	 SHORT $LN7@Multiply_W

; 286  :                 AddToMULTI32Counter(16);

  00e1d	b9 10 00 00 00	 mov	 ecx, 16
  00e22	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 287  :             else

  00e27	eb 0a		 jmp	 SHORT $LN8@Multiply_W
$LN7@Multiply_W:

; 288  :                 AddToMULTI64Counter(16);

  00e29	b9 10 00 00 00	 mov	 ecx, 16
  00e2e	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN8@Multiply_W:
$LN6@Multiply_W:

; 289  : #endif
; 290  :         }
; 291  : 
; 292  :         if (u_count & 0x8)

  00e33	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00e3a	48 83 e0 08	 and	 rax, 8
  00e3e	48 85 c0	 test	 rax, rax
  00e41	0f 84 70 02 00
	00		 je	 $LN9@Multiply_W

; 293  :         {
; 294  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  00e47	b8 08 00 00 00	 mov	 eax, 8
  00e4c	48 6b c0 00	 imul	 rax, rax, 0
  00e50	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00e57	48 03 c8	 add	 rcx, rax
  00e5a	48 8b c1	 mov	 rax, rcx
  00e5d	b9 08 00 00 00	 mov	 ecx, 8
  00e62	48 6b c9 00	 imul	 rcx, rcx, 0
  00e66	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00e6d	48 03 d1	 add	 rdx, rcx
  00e70	48 8b ca	 mov	 rcx, rdx
  00e73	4c 8b c8	 mov	 r9, rax
  00e76	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00e7d	48 8b d1	 mov	 rdx, rcx
  00e80	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00e84	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00e89	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 295  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  00e8d	b8 08 00 00 00	 mov	 eax, 8
  00e92	48 6b c0 01	 imul	 rax, rax, 1
  00e96	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00e9d	48 03 c8	 add	 rcx, rax
  00ea0	48 8b c1	 mov	 rax, rcx
  00ea3	b9 08 00 00 00	 mov	 ecx, 8
  00ea8	48 6b c9 01	 imul	 rcx, rcx, 1
  00eac	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00eb3	48 03 d1	 add	 rdx, rcx
  00eb6	48 8b ca	 mov	 rcx, rdx
  00eb9	4c 8b c8	 mov	 r9, rax
  00ebc	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00ec3	48 8b d1	 mov	 rdx, rcx
  00ec6	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00eca	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00ecf	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 296  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[2], v, &wp[2]);

  00ed3	b8 08 00 00 00	 mov	 eax, 8
  00ed8	48 6b c0 02	 imul	 rax, rax, 2
  00edc	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ee3	48 03 c8	 add	 rcx, rax
  00ee6	48 8b c1	 mov	 rax, rcx
  00ee9	b9 08 00 00 00	 mov	 ecx, 8
  00eee	48 6b c9 02	 imul	 rcx, rcx, 2
  00ef2	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00ef9	48 03 d1	 add	 rdx, rcx
  00efc	48 8b ca	 mov	 rcx, rdx
  00eff	4c 8b c8	 mov	 r9, rax
  00f02	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00f09	48 8b d1	 mov	 rdx, rcx
  00f0c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00f10	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00f15	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 297  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[3], v, &wp[3]);

  00f19	b8 08 00 00 00	 mov	 eax, 8
  00f1e	48 6b c0 03	 imul	 rax, rax, 3
  00f22	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00f29	48 03 c8	 add	 rcx, rax
  00f2c	48 8b c1	 mov	 rax, rcx
  00f2f	b9 08 00 00 00	 mov	 ecx, 8
  00f34	48 6b c9 03	 imul	 rcx, rcx, 3
  00f38	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00f3f	48 03 d1	 add	 rdx, rcx
  00f42	48 8b ca	 mov	 rcx, rdx
  00f45	4c 8b c8	 mov	 r9, rax
  00f48	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00f4f	48 8b d1	 mov	 rdx, rcx
  00f52	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00f56	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00f5b	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 298  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[4], v, &wp[4]);

  00f5f	b8 08 00 00 00	 mov	 eax, 8
  00f64	48 6b c0 04	 imul	 rax, rax, 4
  00f68	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00f6f	48 03 c8	 add	 rcx, rax
  00f72	48 8b c1	 mov	 rax, rcx
  00f75	b9 08 00 00 00	 mov	 ecx, 8
  00f7a	48 6b c9 04	 imul	 rcx, rcx, 4
  00f7e	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00f85	48 03 d1	 add	 rdx, rcx
  00f88	48 8b ca	 mov	 rcx, rdx
  00f8b	4c 8b c8	 mov	 r9, rax
  00f8e	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00f95	48 8b d1	 mov	 rdx, rcx
  00f98	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00f9c	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00fa1	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 299  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[5], v, &wp[5]);

  00fa5	b8 08 00 00 00	 mov	 eax, 8
  00faa	48 6b c0 05	 imul	 rax, rax, 5
  00fae	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00fb5	48 03 c8	 add	 rcx, rax
  00fb8	48 8b c1	 mov	 rax, rcx
  00fbb	b9 08 00 00 00	 mov	 ecx, 8
  00fc0	48 6b c9 05	 imul	 rcx, rcx, 5
  00fc4	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00fcb	48 03 d1	 add	 rdx, rcx
  00fce	48 8b ca	 mov	 rcx, rdx
  00fd1	4c 8b c8	 mov	 r9, rax
  00fd4	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00fdb	48 8b d1	 mov	 rdx, rcx
  00fde	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00fe2	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  00fe7	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 300  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[6], v, &wp[6]);

  00feb	b8 08 00 00 00	 mov	 eax, 8
  00ff0	48 6b c0 06	 imul	 rax, rax, 6
  00ff4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ffb	48 03 c8	 add	 rcx, rax
  00ffe	48 8b c1	 mov	 rax, rcx
  01001	b9 08 00 00 00	 mov	 ecx, 8
  01006	48 6b c9 06	 imul	 rcx, rcx, 6
  0100a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  01011	48 03 d1	 add	 rdx, rcx
  01014	48 8b ca	 mov	 rcx, rdx
  01017	4c 8b c8	 mov	 r9, rax
  0101a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01021	48 8b d1	 mov	 rdx, rcx
  01024	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01028	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0102d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 301  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[7], v, &wp[7]);

  01031	b8 08 00 00 00	 mov	 eax, 8
  01036	48 6b c0 07	 imul	 rax, rax, 7
  0103a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01041	48 03 c8	 add	 rcx, rax
  01044	48 8b c1	 mov	 rax, rcx
  01047	b9 08 00 00 00	 mov	 ecx, 8
  0104c	48 6b c9 07	 imul	 rcx, rcx, 7
  01050	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  01057	48 03 d1	 add	 rdx, rcx
  0105a	48 8b ca	 mov	 rcx, rdx
  0105d	4c 8b c8	 mov	 r9, rax
  01060	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01067	48 8b d1	 mov	 rdx, rcx
  0106a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0106e	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  01073	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 302  :             up += 8;

  01077	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  0107e	48 83 c0 40	 add	 rax, 64			; 00000040H
  01082	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 303  :             wp += 8;

  01089	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  01090	48 83 c0 40	 add	 rax, 64			; 00000040H
  01094	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 304  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 305  :             if (sizeof(k) == sizeof(_UINT32_T))

  0109b	33 c0		 xor	 eax, eax
  0109d	85 c0		 test	 eax, eax
  0109f	74 0c		 je	 SHORT $LN10@Multiply_W

; 306  :                 AddToMULTI32Counter(8);

  010a1	b9 08 00 00 00	 mov	 ecx, 8
  010a6	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 307  :             else

  010ab	eb 0a		 jmp	 SHORT $LN11@Multiply_W
$LN10@Multiply_W:

; 308  :                 AddToMULTI64Counter(8);

  010ad	b9 08 00 00 00	 mov	 ecx, 8
  010b2	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN11@Multiply_W:
$LN9@Multiply_W:

; 309  : #endif
; 310  :         }
; 311  : 
; 312  :         if (u_count & 0x4)

  010b7	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  010be	48 83 e0 04	 and	 rax, 4
  010c2	48 85 c0	 test	 rax, rax
  010c5	0f 84 58 01 00
	00		 je	 $LN12@Multiply_W

; 313  :         {
; 314  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  010cb	b8 08 00 00 00	 mov	 eax, 8
  010d0	48 6b c0 00	 imul	 rax, rax, 0
  010d4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  010db	48 03 c8	 add	 rcx, rax
  010de	48 8b c1	 mov	 rax, rcx
  010e1	b9 08 00 00 00	 mov	 ecx, 8
  010e6	48 6b c9 00	 imul	 rcx, rcx, 0
  010ea	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  010f1	48 03 d1	 add	 rdx, rcx
  010f4	48 8b ca	 mov	 rcx, rdx
  010f7	4c 8b c8	 mov	 r9, rax
  010fa	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01101	48 8b d1	 mov	 rdx, rcx
  01104	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01108	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  0110d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 315  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  01111	b8 08 00 00 00	 mov	 eax, 8
  01116	48 6b c0 01	 imul	 rax, rax, 1
  0111a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01121	48 03 c8	 add	 rcx, rax
  01124	48 8b c1	 mov	 rax, rcx
  01127	b9 08 00 00 00	 mov	 ecx, 8
  0112c	48 6b c9 01	 imul	 rcx, rcx, 1
  01130	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  01137	48 03 d1	 add	 rdx, rcx
  0113a	48 8b ca	 mov	 rcx, rdx
  0113d	4c 8b c8	 mov	 r9, rax
  01140	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01147	48 8b d1	 mov	 rdx, rcx
  0114a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0114e	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  01153	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 316  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[2], v, &wp[2]);

  01157	b8 08 00 00 00	 mov	 eax, 8
  0115c	48 6b c0 02	 imul	 rax, rax, 2
  01160	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01167	48 03 c8	 add	 rcx, rax
  0116a	48 8b c1	 mov	 rax, rcx
  0116d	b9 08 00 00 00	 mov	 ecx, 8
  01172	48 6b c9 02	 imul	 rcx, rcx, 2
  01176	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0117d	48 03 d1	 add	 rdx, rcx
  01180	48 8b ca	 mov	 rcx, rdx
  01183	4c 8b c8	 mov	 r9, rax
  01186	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0118d	48 8b d1	 mov	 rdx, rcx
  01190	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01194	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  01199	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 317  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[3], v, &wp[3]);

  0119d	b8 08 00 00 00	 mov	 eax, 8
  011a2	48 6b c0 03	 imul	 rax, rax, 3
  011a6	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  011ad	48 03 c8	 add	 rcx, rax
  011b0	48 8b c1	 mov	 rax, rcx
  011b3	b9 08 00 00 00	 mov	 ecx, 8
  011b8	48 6b c9 03	 imul	 rcx, rcx, 3
  011bc	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  011c3	48 03 d1	 add	 rdx, rcx
  011c6	48 8b ca	 mov	 rcx, rdx
  011c9	4c 8b c8	 mov	 r9, rax
  011cc	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  011d3	48 8b d1	 mov	 rdx, rcx
  011d6	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  011da	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  011df	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 318  :             up += 4;

  011e3	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  011ea	48 83 c0 20	 add	 rax, 32			; 00000020H
  011ee	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 319  :             wp += 4;

  011f5	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  011fc	48 83 c0 20	 add	 rax, 32			; 00000020H
  01200	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 320  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 321  :             if (sizeof(k) == sizeof(_UINT32_T))

  01207	33 c0		 xor	 eax, eax
  01209	85 c0		 test	 eax, eax
  0120b	74 0c		 je	 SHORT $LN13@Multiply_W

; 322  :                 AddToMULTI32Counter(4);

  0120d	b9 04 00 00 00	 mov	 ecx, 4
  01212	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 323  :             else

  01217	eb 0a		 jmp	 SHORT $LN14@Multiply_W
$LN13@Multiply_W:

; 324  :                 AddToMULTI64Counter(4);

  01219	b9 04 00 00 00	 mov	 ecx, 4
  0121e	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN14@Multiply_W:
$LN12@Multiply_W:

; 325  : #endif
; 326  :         }
; 327  : 
; 328  :         if (u_count & 0x2)

  01223	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  0122a	48 83 e0 02	 and	 rax, 2
  0122e	48 85 c0	 test	 rax, rax
  01231	0f 84 cc 00 00
	00		 je	 $LN15@Multiply_W

; 329  :         {
; 330  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  01237	b8 08 00 00 00	 mov	 eax, 8
  0123c	48 6b c0 00	 imul	 rax, rax, 0
  01240	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01247	48 03 c8	 add	 rcx, rax
  0124a	48 8b c1	 mov	 rax, rcx
  0124d	b9 08 00 00 00	 mov	 ecx, 8
  01252	48 6b c9 00	 imul	 rcx, rcx, 0
  01256	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0125d	48 03 d1	 add	 rdx, rcx
  01260	48 8b ca	 mov	 rcx, rdx
  01263	4c 8b c8	 mov	 r9, rax
  01266	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0126d	48 8b d1	 mov	 rdx, rcx
  01270	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01274	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  01279	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 331  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  0127d	b8 08 00 00 00	 mov	 eax, 8
  01282	48 6b c0 01	 imul	 rax, rax, 1
  01286	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0128d	48 03 c8	 add	 rcx, rax
  01290	48 8b c1	 mov	 rax, rcx
  01293	b9 08 00 00 00	 mov	 ecx, 8
  01298	48 6b c9 01	 imul	 rcx, rcx, 1
  0129c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  012a3	48 03 d1	 add	 rdx, rcx
  012a6	48 8b ca	 mov	 rcx, rdx
  012a9	4c 8b c8	 mov	 r9, rax
  012ac	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  012b3	48 8b d1	 mov	 rdx, rcx
  012b6	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  012ba	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  012bf	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 332  :             up += 2;

  012c3	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  012ca	48 83 c0 10	 add	 rax, 16
  012ce	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 333  :             wp += 2;

  012d5	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  012dc	48 83 c0 10	 add	 rax, 16
  012e0	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 334  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 335  :             if (sizeof(k) == sizeof(_UINT32_T))

  012e7	33 c0		 xor	 eax, eax
  012e9	85 c0		 test	 eax, eax
  012eb	74 0c		 je	 SHORT $LN16@Multiply_W

; 336  :                 AddToMULTI32Counter(2);

  012ed	b9 02 00 00 00	 mov	 ecx, 2
  012f2	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 337  :             else

  012f7	eb 0a		 jmp	 SHORT $LN17@Multiply_W
$LN16@Multiply_W:

; 338  :                 AddToMULTI64Counter(2);

  012f9	b9 02 00 00 00	 mov	 ecx, 2
  012fe	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN17@Multiply_W:
$LN15@Multiply_W:

; 339  : #endif
; 340  :         }
; 341  : 
; 342  :         if (u_count & 0x1)

  01303	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  0130a	48 83 e0 01	 and	 rax, 1
  0130e	48 85 c0	 test	 rax, rax
  01311	74 7c		 je	 SHORT $LN18@Multiply_W

; 343  :         {
; 344  :             k = _MULTIPLYX_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  01313	b8 08 00 00 00	 mov	 eax, 8
  01318	48 6b c0 00	 imul	 rax, rax, 0
  0131c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01323	48 03 c8	 add	 rcx, rax
  01326	48 8b c1	 mov	 rax, rcx
  01329	b9 08 00 00 00	 mov	 ecx, 8
  0132e	48 6b c9 00	 imul	 rcx, rcx, 0
  01332	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  01339	48 03 d1	 add	 rdx, rcx
  0133c	48 8b ca	 mov	 rcx, rdx
  0133f	4c 8b c8	 mov	 r9, rax
  01342	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01349	48 8b d1	 mov	 rdx, rcx
  0134c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01350	e8 00 00 00 00	 call	 ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
  01355	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 345  :             up += 1;

  01359	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  01360	48 83 c0 08	 add	 rax, 8
  01364	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 346  :             wp += 1;

  0136b	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  01372	48 83 c0 08	 add	 rax, 8
  01376	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 347  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 348  :             if (sizeof(k) == sizeof(_UINT32_T))

  0137d	33 c0		 xor	 eax, eax
  0137f	85 c0		 test	 eax, eax
  01381	74 07		 je	 SHORT $LN19@Multiply_W

; 349  :                 IncrementMULTI32Counter();

  01383	e8 00 00 00 00	 call	 ?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::IncrementMULTI32Counter

; 350  :             else

  01388	eb 05		 jmp	 SHORT $LN20@Multiply_W
$LN19@Multiply_W:

; 351  :                 IncrementMULTI64Counter();

  0138a	e8 00 00 00 00	 call	 ?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::IncrementMULTI64Counter
$LN20@Multiply_W:
$LN18@Multiply_W:

; 352  : #endif
; 353  :         }
; 354  : 
; 355  :         if (k != 0)

  0138f	48 83 7d 08 00	 cmp	 QWORD PTR k$[rbp], 0
  01394	74 0e		 je	 SHORT $LN21@Multiply_W

; 356  :             *wp = k;

  01396	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  0139d	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  013a1	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN21@Multiply_W:

; 357  :     }

  013a4	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  013ab	5f		 pop	 rdi
  013ac	5d		 pop	 rbp
  013ad	c3		 ret	 0
?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
_TEXT	SEGMENT
k$ = 8
count$ = 40
up$ = 288
u_count$ = 296
v$ = 304
wp$ = 312
?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z PROC ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC, COMDAT

; 70   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 71   :         __UNIT_TYPE k = 0;

  00045	48 c7 45 08 00
	00 00 00	 mov	 QWORD PTR k$[rbp], 0

; 72   :         __UNIT_TYPE count = u_count >> 5;

  0004d	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00054	48 c1 e8 05	 shr	 rax, 5
  00058	48 89 45 28	 mov	 QWORD PTR count$[rbp], rax
$LN2@Multiply_W:

; 73   : 
; 74   :         while (count != 0)

  0005c	48 83 7d 28 00	 cmp	 QWORD PTR count$[rbp], 0
  00061	0f 84 14 09 00
	00		 je	 $LN3@Multiply_W

; 75   :         {
; 76   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  00067	b8 08 00 00 00	 mov	 eax, 8
  0006c	48 6b c0 00	 imul	 rax, rax, 0
  00070	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	b9 08 00 00 00	 mov	 ecx, 8
  00082	48 6b c9 00	 imul	 rcx, rcx, 0
  00086	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0008d	48 03 d1	 add	 rdx, rcx
  00090	48 8b ca	 mov	 rcx, rdx
  00093	4c 8b c8	 mov	 r9, rax
  00096	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0009d	48 8b d1	 mov	 rdx, rcx
  000a0	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  000a4	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  000a9	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 77   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  000ad	b8 08 00 00 00	 mov	 eax, 8
  000b2	48 6b c0 01	 imul	 rax, rax, 1
  000b6	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  000bd	48 03 c8	 add	 rcx, rax
  000c0	48 8b c1	 mov	 rax, rcx
  000c3	b9 08 00 00 00	 mov	 ecx, 8
  000c8	48 6b c9 01	 imul	 rcx, rcx, 1
  000cc	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  000d3	48 03 d1	 add	 rdx, rcx
  000d6	48 8b ca	 mov	 rcx, rdx
  000d9	4c 8b c8	 mov	 r9, rax
  000dc	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  000e3	48 8b d1	 mov	 rdx, rcx
  000e6	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  000ea	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  000ef	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 78   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[2], v, &wp[2]);

  000f3	b8 08 00 00 00	 mov	 eax, 8
  000f8	48 6b c0 02	 imul	 rax, rax, 2
  000fc	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00103	48 03 c8	 add	 rcx, rax
  00106	48 8b c1	 mov	 rax, rcx
  00109	b9 08 00 00 00	 mov	 ecx, 8
  0010e	48 6b c9 02	 imul	 rcx, rcx, 2
  00112	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00119	48 03 d1	 add	 rdx, rcx
  0011c	48 8b ca	 mov	 rcx, rdx
  0011f	4c 8b c8	 mov	 r9, rax
  00122	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00129	48 8b d1	 mov	 rdx, rcx
  0012c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00130	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00135	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 79   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[3], v, &wp[3]);

  00139	b8 08 00 00 00	 mov	 eax, 8
  0013e	48 6b c0 03	 imul	 rax, rax, 3
  00142	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00149	48 03 c8	 add	 rcx, rax
  0014c	48 8b c1	 mov	 rax, rcx
  0014f	b9 08 00 00 00	 mov	 ecx, 8
  00154	48 6b c9 03	 imul	 rcx, rcx, 3
  00158	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0015f	48 03 d1	 add	 rdx, rcx
  00162	48 8b ca	 mov	 rcx, rdx
  00165	4c 8b c8	 mov	 r9, rax
  00168	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0016f	48 8b d1	 mov	 rdx, rcx
  00172	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00176	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0017b	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 80   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[4], v, &wp[4]);

  0017f	b8 08 00 00 00	 mov	 eax, 8
  00184	48 6b c0 04	 imul	 rax, rax, 4
  00188	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0018f	48 03 c8	 add	 rcx, rax
  00192	48 8b c1	 mov	 rax, rcx
  00195	b9 08 00 00 00	 mov	 ecx, 8
  0019a	48 6b c9 04	 imul	 rcx, rcx, 4
  0019e	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  001a5	48 03 d1	 add	 rdx, rcx
  001a8	48 8b ca	 mov	 rcx, rdx
  001ab	4c 8b c8	 mov	 r9, rax
  001ae	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  001b5	48 8b d1	 mov	 rdx, rcx
  001b8	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  001bc	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  001c1	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 81   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[5], v, &wp[5]);

  001c5	b8 08 00 00 00	 mov	 eax, 8
  001ca	48 6b c0 05	 imul	 rax, rax, 5
  001ce	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  001d5	48 03 c8	 add	 rcx, rax
  001d8	48 8b c1	 mov	 rax, rcx
  001db	b9 08 00 00 00	 mov	 ecx, 8
  001e0	48 6b c9 05	 imul	 rcx, rcx, 5
  001e4	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  001eb	48 03 d1	 add	 rdx, rcx
  001ee	48 8b ca	 mov	 rcx, rdx
  001f1	4c 8b c8	 mov	 r9, rax
  001f4	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  001fb	48 8b d1	 mov	 rdx, rcx
  001fe	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00202	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00207	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 82   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[6], v, &wp[6]);

  0020b	b8 08 00 00 00	 mov	 eax, 8
  00210	48 6b c0 06	 imul	 rax, rax, 6
  00214	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0021b	48 03 c8	 add	 rcx, rax
  0021e	48 8b c1	 mov	 rax, rcx
  00221	b9 08 00 00 00	 mov	 ecx, 8
  00226	48 6b c9 06	 imul	 rcx, rcx, 6
  0022a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00231	48 03 d1	 add	 rdx, rcx
  00234	48 8b ca	 mov	 rcx, rdx
  00237	4c 8b c8	 mov	 r9, rax
  0023a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00241	48 8b d1	 mov	 rdx, rcx
  00244	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00248	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0024d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 83   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[7], v, &wp[7]);

  00251	b8 08 00 00 00	 mov	 eax, 8
  00256	48 6b c0 07	 imul	 rax, rax, 7
  0025a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00261	48 03 c8	 add	 rcx, rax
  00264	48 8b c1	 mov	 rax, rcx
  00267	b9 08 00 00 00	 mov	 ecx, 8
  0026c	48 6b c9 07	 imul	 rcx, rcx, 7
  00270	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00277	48 03 d1	 add	 rdx, rcx
  0027a	48 8b ca	 mov	 rcx, rdx
  0027d	4c 8b c8	 mov	 r9, rax
  00280	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00287	48 8b d1	 mov	 rdx, rcx
  0028a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0028e	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00293	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 84   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[8], v, &wp[8]);

  00297	b8 08 00 00 00	 mov	 eax, 8
  0029c	48 6b c0 08	 imul	 rax, rax, 8
  002a0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  002a7	48 03 c8	 add	 rcx, rax
  002aa	48 8b c1	 mov	 rax, rcx
  002ad	b9 08 00 00 00	 mov	 ecx, 8
  002b2	48 6b c9 08	 imul	 rcx, rcx, 8
  002b6	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  002bd	48 03 d1	 add	 rdx, rcx
  002c0	48 8b ca	 mov	 rcx, rdx
  002c3	4c 8b c8	 mov	 r9, rax
  002c6	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  002cd	48 8b d1	 mov	 rdx, rcx
  002d0	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  002d4	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  002d9	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 85   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[9], v, &wp[9]);

  002dd	b8 08 00 00 00	 mov	 eax, 8
  002e2	48 6b c0 09	 imul	 rax, rax, 9
  002e6	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  002ed	48 03 c8	 add	 rcx, rax
  002f0	48 8b c1	 mov	 rax, rcx
  002f3	b9 08 00 00 00	 mov	 ecx, 8
  002f8	48 6b c9 09	 imul	 rcx, rcx, 9
  002fc	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00303	48 03 d1	 add	 rdx, rcx
  00306	48 8b ca	 mov	 rcx, rdx
  00309	4c 8b c8	 mov	 r9, rax
  0030c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00313	48 8b d1	 mov	 rdx, rcx
  00316	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0031a	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0031f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 86   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[10], v, &wp[10]);

  00323	b8 08 00 00 00	 mov	 eax, 8
  00328	48 6b c0 0a	 imul	 rax, rax, 10
  0032c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00333	48 03 c8	 add	 rcx, rax
  00336	48 8b c1	 mov	 rax, rcx
  00339	b9 08 00 00 00	 mov	 ecx, 8
  0033e	48 6b c9 0a	 imul	 rcx, rcx, 10
  00342	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00349	48 03 d1	 add	 rdx, rcx
  0034c	48 8b ca	 mov	 rcx, rdx
  0034f	4c 8b c8	 mov	 r9, rax
  00352	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00359	48 8b d1	 mov	 rdx, rcx
  0035c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00360	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00365	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 87   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[11], v, &wp[11]);

  00369	b8 08 00 00 00	 mov	 eax, 8
  0036e	48 6b c0 0b	 imul	 rax, rax, 11
  00372	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00379	48 03 c8	 add	 rcx, rax
  0037c	48 8b c1	 mov	 rax, rcx
  0037f	b9 08 00 00 00	 mov	 ecx, 8
  00384	48 6b c9 0b	 imul	 rcx, rcx, 11
  00388	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0038f	48 03 d1	 add	 rdx, rcx
  00392	48 8b ca	 mov	 rcx, rdx
  00395	4c 8b c8	 mov	 r9, rax
  00398	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0039f	48 8b d1	 mov	 rdx, rcx
  003a2	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  003a6	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  003ab	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 88   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[12], v, &wp[12]);

  003af	b8 08 00 00 00	 mov	 eax, 8
  003b4	48 6b c0 0c	 imul	 rax, rax, 12
  003b8	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  003bf	48 03 c8	 add	 rcx, rax
  003c2	48 8b c1	 mov	 rax, rcx
  003c5	b9 08 00 00 00	 mov	 ecx, 8
  003ca	48 6b c9 0c	 imul	 rcx, rcx, 12
  003ce	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  003d5	48 03 d1	 add	 rdx, rcx
  003d8	48 8b ca	 mov	 rcx, rdx
  003db	4c 8b c8	 mov	 r9, rax
  003de	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  003e5	48 8b d1	 mov	 rdx, rcx
  003e8	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  003ec	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  003f1	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 89   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[13], v, &wp[13]);

  003f5	b8 08 00 00 00	 mov	 eax, 8
  003fa	48 6b c0 0d	 imul	 rax, rax, 13
  003fe	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00405	48 03 c8	 add	 rcx, rax
  00408	48 8b c1	 mov	 rax, rcx
  0040b	b9 08 00 00 00	 mov	 ecx, 8
  00410	48 6b c9 0d	 imul	 rcx, rcx, 13
  00414	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0041b	48 03 d1	 add	 rdx, rcx
  0041e	48 8b ca	 mov	 rcx, rdx
  00421	4c 8b c8	 mov	 r9, rax
  00424	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0042b	48 8b d1	 mov	 rdx, rcx
  0042e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00432	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00437	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 90   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[14], v, &wp[14]);

  0043b	b8 08 00 00 00	 mov	 eax, 8
  00440	48 6b c0 0e	 imul	 rax, rax, 14
  00444	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0044b	48 03 c8	 add	 rcx, rax
  0044e	48 8b c1	 mov	 rax, rcx
  00451	b9 08 00 00 00	 mov	 ecx, 8
  00456	48 6b c9 0e	 imul	 rcx, rcx, 14
  0045a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00461	48 03 d1	 add	 rdx, rcx
  00464	48 8b ca	 mov	 rcx, rdx
  00467	4c 8b c8	 mov	 r9, rax
  0046a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00471	48 8b d1	 mov	 rdx, rcx
  00474	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00478	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0047d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 91   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[15], v, &wp[15]);

  00481	b8 08 00 00 00	 mov	 eax, 8
  00486	48 6b c0 0f	 imul	 rax, rax, 15
  0048a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00491	48 03 c8	 add	 rcx, rax
  00494	48 8b c1	 mov	 rax, rcx
  00497	b9 08 00 00 00	 mov	 ecx, 8
  0049c	48 6b c9 0f	 imul	 rcx, rcx, 15
  004a0	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  004a7	48 03 d1	 add	 rdx, rcx
  004aa	48 8b ca	 mov	 rcx, rdx
  004ad	4c 8b c8	 mov	 r9, rax
  004b0	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  004b7	48 8b d1	 mov	 rdx, rcx
  004ba	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  004be	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  004c3	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 92   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[16], v, &wp[16]);

  004c7	b8 08 00 00 00	 mov	 eax, 8
  004cc	48 6b c0 10	 imul	 rax, rax, 16
  004d0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  004d7	48 03 c8	 add	 rcx, rax
  004da	48 8b c1	 mov	 rax, rcx
  004dd	b9 08 00 00 00	 mov	 ecx, 8
  004e2	48 6b c9 10	 imul	 rcx, rcx, 16
  004e6	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  004ed	48 03 d1	 add	 rdx, rcx
  004f0	48 8b ca	 mov	 rcx, rdx
  004f3	4c 8b c8	 mov	 r9, rax
  004f6	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  004fd	48 8b d1	 mov	 rdx, rcx
  00500	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00504	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00509	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 93   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[17], v, &wp[17]);

  0050d	b8 08 00 00 00	 mov	 eax, 8
  00512	48 6b c0 11	 imul	 rax, rax, 17
  00516	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0051d	48 03 c8	 add	 rcx, rax
  00520	48 8b c1	 mov	 rax, rcx
  00523	b9 08 00 00 00	 mov	 ecx, 8
  00528	48 6b c9 11	 imul	 rcx, rcx, 17
  0052c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00533	48 03 d1	 add	 rdx, rcx
  00536	48 8b ca	 mov	 rcx, rdx
  00539	4c 8b c8	 mov	 r9, rax
  0053c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00543	48 8b d1	 mov	 rdx, rcx
  00546	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0054a	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0054f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 94   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[18], v, &wp[18]);

  00553	b8 08 00 00 00	 mov	 eax, 8
  00558	48 6b c0 12	 imul	 rax, rax, 18
  0055c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00563	48 03 c8	 add	 rcx, rax
  00566	48 8b c1	 mov	 rax, rcx
  00569	b9 08 00 00 00	 mov	 ecx, 8
  0056e	48 6b c9 12	 imul	 rcx, rcx, 18
  00572	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00579	48 03 d1	 add	 rdx, rcx
  0057c	48 8b ca	 mov	 rcx, rdx
  0057f	4c 8b c8	 mov	 r9, rax
  00582	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00589	48 8b d1	 mov	 rdx, rcx
  0058c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00590	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00595	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 95   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[19], v, &wp[19]);

  00599	b8 08 00 00 00	 mov	 eax, 8
  0059e	48 6b c0 13	 imul	 rax, rax, 19
  005a2	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  005a9	48 03 c8	 add	 rcx, rax
  005ac	48 8b c1	 mov	 rax, rcx
  005af	b9 08 00 00 00	 mov	 ecx, 8
  005b4	48 6b c9 13	 imul	 rcx, rcx, 19
  005b8	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  005bf	48 03 d1	 add	 rdx, rcx
  005c2	48 8b ca	 mov	 rcx, rdx
  005c5	4c 8b c8	 mov	 r9, rax
  005c8	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  005cf	48 8b d1	 mov	 rdx, rcx
  005d2	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  005d6	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  005db	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 96   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[20], v, &wp[20]);

  005df	b8 08 00 00 00	 mov	 eax, 8
  005e4	48 6b c0 14	 imul	 rax, rax, 20
  005e8	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  005ef	48 03 c8	 add	 rcx, rax
  005f2	48 8b c1	 mov	 rax, rcx
  005f5	b9 08 00 00 00	 mov	 ecx, 8
  005fa	48 6b c9 14	 imul	 rcx, rcx, 20
  005fe	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00605	48 03 d1	 add	 rdx, rcx
  00608	48 8b ca	 mov	 rcx, rdx
  0060b	4c 8b c8	 mov	 r9, rax
  0060e	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00615	48 8b d1	 mov	 rdx, rcx
  00618	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0061c	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00621	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 97   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[21], v, &wp[21]);

  00625	b8 08 00 00 00	 mov	 eax, 8
  0062a	48 6b c0 15	 imul	 rax, rax, 21
  0062e	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00635	48 03 c8	 add	 rcx, rax
  00638	48 8b c1	 mov	 rax, rcx
  0063b	b9 08 00 00 00	 mov	 ecx, 8
  00640	48 6b c9 15	 imul	 rcx, rcx, 21
  00644	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0064b	48 03 d1	 add	 rdx, rcx
  0064e	48 8b ca	 mov	 rcx, rdx
  00651	4c 8b c8	 mov	 r9, rax
  00654	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0065b	48 8b d1	 mov	 rdx, rcx
  0065e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00662	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00667	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 98   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[22], v, &wp[22]);

  0066b	b8 08 00 00 00	 mov	 eax, 8
  00670	48 6b c0 16	 imul	 rax, rax, 22
  00674	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0067b	48 03 c8	 add	 rcx, rax
  0067e	48 8b c1	 mov	 rax, rcx
  00681	b9 08 00 00 00	 mov	 ecx, 8
  00686	48 6b c9 16	 imul	 rcx, rcx, 22
  0068a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00691	48 03 d1	 add	 rdx, rcx
  00694	48 8b ca	 mov	 rcx, rdx
  00697	4c 8b c8	 mov	 r9, rax
  0069a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  006a1	48 8b d1	 mov	 rdx, rcx
  006a4	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  006a8	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  006ad	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 99   :             k = _MULTIPLY_DIGIT_UNIT(k, &up[23], v, &wp[23]);

  006b1	b8 08 00 00 00	 mov	 eax, 8
  006b6	48 6b c0 17	 imul	 rax, rax, 23
  006ba	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  006c1	48 03 c8	 add	 rcx, rax
  006c4	48 8b c1	 mov	 rax, rcx
  006c7	b9 08 00 00 00	 mov	 ecx, 8
  006cc	48 6b c9 17	 imul	 rcx, rcx, 23
  006d0	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  006d7	48 03 d1	 add	 rdx, rcx
  006da	48 8b ca	 mov	 rcx, rdx
  006dd	4c 8b c8	 mov	 r9, rax
  006e0	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  006e7	48 8b d1	 mov	 rdx, rcx
  006ea	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  006ee	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  006f3	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 100  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[24], v, &wp[24]);

  006f7	b8 08 00 00 00	 mov	 eax, 8
  006fc	48 6b c0 18	 imul	 rax, rax, 24
  00700	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00707	48 03 c8	 add	 rcx, rax
  0070a	48 8b c1	 mov	 rax, rcx
  0070d	b9 08 00 00 00	 mov	 ecx, 8
  00712	48 6b c9 18	 imul	 rcx, rcx, 24
  00716	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0071d	48 03 d1	 add	 rdx, rcx
  00720	48 8b ca	 mov	 rcx, rdx
  00723	4c 8b c8	 mov	 r9, rax
  00726	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0072d	48 8b d1	 mov	 rdx, rcx
  00730	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00734	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00739	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 101  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[25], v, &wp[25]);

  0073d	b8 08 00 00 00	 mov	 eax, 8
  00742	48 6b c0 19	 imul	 rax, rax, 25
  00746	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0074d	48 03 c8	 add	 rcx, rax
  00750	48 8b c1	 mov	 rax, rcx
  00753	b9 08 00 00 00	 mov	 ecx, 8
  00758	48 6b c9 19	 imul	 rcx, rcx, 25
  0075c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00763	48 03 d1	 add	 rdx, rcx
  00766	48 8b ca	 mov	 rcx, rdx
  00769	4c 8b c8	 mov	 r9, rax
  0076c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00773	48 8b d1	 mov	 rdx, rcx
  00776	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0077a	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0077f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 102  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[26], v, &wp[26]);

  00783	b8 08 00 00 00	 mov	 eax, 8
  00788	48 6b c0 1a	 imul	 rax, rax, 26
  0078c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00793	48 03 c8	 add	 rcx, rax
  00796	48 8b c1	 mov	 rax, rcx
  00799	b9 08 00 00 00	 mov	 ecx, 8
  0079e	48 6b c9 1a	 imul	 rcx, rcx, 26
  007a2	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  007a9	48 03 d1	 add	 rdx, rcx
  007ac	48 8b ca	 mov	 rcx, rdx
  007af	4c 8b c8	 mov	 r9, rax
  007b2	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  007b9	48 8b d1	 mov	 rdx, rcx
  007bc	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  007c0	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  007c5	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 103  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[27], v, &wp[27]);

  007c9	b8 08 00 00 00	 mov	 eax, 8
  007ce	48 6b c0 1b	 imul	 rax, rax, 27
  007d2	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  007d9	48 03 c8	 add	 rcx, rax
  007dc	48 8b c1	 mov	 rax, rcx
  007df	b9 08 00 00 00	 mov	 ecx, 8
  007e4	48 6b c9 1b	 imul	 rcx, rcx, 27
  007e8	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  007ef	48 03 d1	 add	 rdx, rcx
  007f2	48 8b ca	 mov	 rcx, rdx
  007f5	4c 8b c8	 mov	 r9, rax
  007f8	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  007ff	48 8b d1	 mov	 rdx, rcx
  00802	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00806	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0080b	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 104  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[28], v, &wp[28]);

  0080f	b8 08 00 00 00	 mov	 eax, 8
  00814	48 6b c0 1c	 imul	 rax, rax, 28
  00818	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0081f	48 03 c8	 add	 rcx, rax
  00822	48 8b c1	 mov	 rax, rcx
  00825	b9 08 00 00 00	 mov	 ecx, 8
  0082a	48 6b c9 1c	 imul	 rcx, rcx, 28
  0082e	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00835	48 03 d1	 add	 rdx, rcx
  00838	48 8b ca	 mov	 rcx, rdx
  0083b	4c 8b c8	 mov	 r9, rax
  0083e	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00845	48 8b d1	 mov	 rdx, rcx
  00848	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0084c	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00851	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 105  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[29], v, &wp[29]);

  00855	b8 08 00 00 00	 mov	 eax, 8
  0085a	48 6b c0 1d	 imul	 rax, rax, 29
  0085e	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00865	48 03 c8	 add	 rcx, rax
  00868	48 8b c1	 mov	 rax, rcx
  0086b	b9 08 00 00 00	 mov	 ecx, 8
  00870	48 6b c9 1d	 imul	 rcx, rcx, 29
  00874	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0087b	48 03 d1	 add	 rdx, rcx
  0087e	48 8b ca	 mov	 rcx, rdx
  00881	4c 8b c8	 mov	 r9, rax
  00884	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0088b	48 8b d1	 mov	 rdx, rcx
  0088e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00892	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00897	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 106  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[30], v, &wp[30]);

  0089b	b8 08 00 00 00	 mov	 eax, 8
  008a0	48 6b c0 1e	 imul	 rax, rax, 30
  008a4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  008ab	48 03 c8	 add	 rcx, rax
  008ae	48 8b c1	 mov	 rax, rcx
  008b1	b9 08 00 00 00	 mov	 ecx, 8
  008b6	48 6b c9 1e	 imul	 rcx, rcx, 30
  008ba	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  008c1	48 03 d1	 add	 rdx, rcx
  008c4	48 8b ca	 mov	 rcx, rdx
  008c7	4c 8b c8	 mov	 r9, rax
  008ca	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  008d1	48 8b d1	 mov	 rdx, rcx
  008d4	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  008d8	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  008dd	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 107  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[31], v, &wp[31]);

  008e1	b8 08 00 00 00	 mov	 eax, 8
  008e6	48 6b c0 1f	 imul	 rax, rax, 31
  008ea	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  008f1	48 03 c8	 add	 rcx, rax
  008f4	48 8b c1	 mov	 rax, rcx
  008f7	b9 08 00 00 00	 mov	 ecx, 8
  008fc	48 6b c9 1f	 imul	 rcx, rcx, 31
  00900	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00907	48 03 d1	 add	 rdx, rcx
  0090a	48 8b ca	 mov	 rcx, rdx
  0090d	4c 8b c8	 mov	 r9, rax
  00910	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00917	48 8b d1	 mov	 rdx, rcx
  0091a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0091e	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00923	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 108  :             up += 32;

  00927	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  0092e	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  00934	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 109  :             wp += 32;

  0093b	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00942	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  00948	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 110  :             --count;

  0094f	48 8b 45 28	 mov	 rax, QWORD PTR count$[rbp]
  00953	48 ff c8	 dec	 rax
  00956	48 89 45 28	 mov	 QWORD PTR count$[rbp], rax

; 111  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 112  :             if (sizeof(k) == sizeof(_UINT32_T))

  0095a	33 c0		 xor	 eax, eax
  0095c	85 c0		 test	 eax, eax
  0095e	74 0c		 je	 SHORT $LN4@Multiply_W

; 113  :                 AddToMULTI32Counter(32);

  00960	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00965	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 114  :             else

  0096a	eb 0a		 jmp	 SHORT $LN5@Multiply_W
$LN4@Multiply_W:

; 115  :                 AddToMULTI64Counter(32);

  0096c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00971	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN5@Multiply_W:

; 116  : #endif
; 117  :         }

  00976	e9 e1 f6 ff ff	 jmp	 $LN2@Multiply_W
$LN3@Multiply_W:

; 118  : 
; 119  :         if (u_count & 0x10)

  0097b	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00982	48 83 e0 10	 and	 rax, 16
  00986	48 85 c0	 test	 rax, rax
  00989	0f 84 a4 04 00
	00		 je	 $LN6@Multiply_W

; 120  :         {
; 121  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  0098f	b8 08 00 00 00	 mov	 eax, 8
  00994	48 6b c0 00	 imul	 rax, rax, 0
  00998	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0099f	48 03 c8	 add	 rcx, rax
  009a2	48 8b c1	 mov	 rax, rcx
  009a5	b9 08 00 00 00	 mov	 ecx, 8
  009aa	48 6b c9 00	 imul	 rcx, rcx, 0
  009ae	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  009b5	48 03 d1	 add	 rdx, rcx
  009b8	48 8b ca	 mov	 rcx, rdx
  009bb	4c 8b c8	 mov	 r9, rax
  009be	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  009c5	48 8b d1	 mov	 rdx, rcx
  009c8	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  009cc	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  009d1	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 122  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  009d5	b8 08 00 00 00	 mov	 eax, 8
  009da	48 6b c0 01	 imul	 rax, rax, 1
  009de	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  009e5	48 03 c8	 add	 rcx, rax
  009e8	48 8b c1	 mov	 rax, rcx
  009eb	b9 08 00 00 00	 mov	 ecx, 8
  009f0	48 6b c9 01	 imul	 rcx, rcx, 1
  009f4	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  009fb	48 03 d1	 add	 rdx, rcx
  009fe	48 8b ca	 mov	 rcx, rdx
  00a01	4c 8b c8	 mov	 r9, rax
  00a04	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00a0b	48 8b d1	 mov	 rdx, rcx
  00a0e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00a12	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00a17	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 123  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[2], v, &wp[2]);

  00a1b	b8 08 00 00 00	 mov	 eax, 8
  00a20	48 6b c0 02	 imul	 rax, rax, 2
  00a24	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00a2b	48 03 c8	 add	 rcx, rax
  00a2e	48 8b c1	 mov	 rax, rcx
  00a31	b9 08 00 00 00	 mov	 ecx, 8
  00a36	48 6b c9 02	 imul	 rcx, rcx, 2
  00a3a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00a41	48 03 d1	 add	 rdx, rcx
  00a44	48 8b ca	 mov	 rcx, rdx
  00a47	4c 8b c8	 mov	 r9, rax
  00a4a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00a51	48 8b d1	 mov	 rdx, rcx
  00a54	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00a58	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00a5d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 124  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[3], v, &wp[3]);

  00a61	b8 08 00 00 00	 mov	 eax, 8
  00a66	48 6b c0 03	 imul	 rax, rax, 3
  00a6a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00a71	48 03 c8	 add	 rcx, rax
  00a74	48 8b c1	 mov	 rax, rcx
  00a77	b9 08 00 00 00	 mov	 ecx, 8
  00a7c	48 6b c9 03	 imul	 rcx, rcx, 3
  00a80	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00a87	48 03 d1	 add	 rdx, rcx
  00a8a	48 8b ca	 mov	 rcx, rdx
  00a8d	4c 8b c8	 mov	 r9, rax
  00a90	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00a97	48 8b d1	 mov	 rdx, rcx
  00a9a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00a9e	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00aa3	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 125  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[4], v, &wp[4]);

  00aa7	b8 08 00 00 00	 mov	 eax, 8
  00aac	48 6b c0 04	 imul	 rax, rax, 4
  00ab0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ab7	48 03 c8	 add	 rcx, rax
  00aba	48 8b c1	 mov	 rax, rcx
  00abd	b9 08 00 00 00	 mov	 ecx, 8
  00ac2	48 6b c9 04	 imul	 rcx, rcx, 4
  00ac6	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00acd	48 03 d1	 add	 rdx, rcx
  00ad0	48 8b ca	 mov	 rcx, rdx
  00ad3	4c 8b c8	 mov	 r9, rax
  00ad6	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00add	48 8b d1	 mov	 rdx, rcx
  00ae0	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00ae4	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00ae9	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 126  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[5], v, &wp[5]);

  00aed	b8 08 00 00 00	 mov	 eax, 8
  00af2	48 6b c0 05	 imul	 rax, rax, 5
  00af6	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00afd	48 03 c8	 add	 rcx, rax
  00b00	48 8b c1	 mov	 rax, rcx
  00b03	b9 08 00 00 00	 mov	 ecx, 8
  00b08	48 6b c9 05	 imul	 rcx, rcx, 5
  00b0c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00b13	48 03 d1	 add	 rdx, rcx
  00b16	48 8b ca	 mov	 rcx, rdx
  00b19	4c 8b c8	 mov	 r9, rax
  00b1c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00b23	48 8b d1	 mov	 rdx, rcx
  00b26	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00b2a	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00b2f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 127  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[6], v, &wp[6]);

  00b33	b8 08 00 00 00	 mov	 eax, 8
  00b38	48 6b c0 06	 imul	 rax, rax, 6
  00b3c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00b43	48 03 c8	 add	 rcx, rax
  00b46	48 8b c1	 mov	 rax, rcx
  00b49	b9 08 00 00 00	 mov	 ecx, 8
  00b4e	48 6b c9 06	 imul	 rcx, rcx, 6
  00b52	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00b59	48 03 d1	 add	 rdx, rcx
  00b5c	48 8b ca	 mov	 rcx, rdx
  00b5f	4c 8b c8	 mov	 r9, rax
  00b62	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00b69	48 8b d1	 mov	 rdx, rcx
  00b6c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00b70	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00b75	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 128  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[7], v, &wp[7]);

  00b79	b8 08 00 00 00	 mov	 eax, 8
  00b7e	48 6b c0 07	 imul	 rax, rax, 7
  00b82	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00b89	48 03 c8	 add	 rcx, rax
  00b8c	48 8b c1	 mov	 rax, rcx
  00b8f	b9 08 00 00 00	 mov	 ecx, 8
  00b94	48 6b c9 07	 imul	 rcx, rcx, 7
  00b98	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00b9f	48 03 d1	 add	 rdx, rcx
  00ba2	48 8b ca	 mov	 rcx, rdx
  00ba5	4c 8b c8	 mov	 r9, rax
  00ba8	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00baf	48 8b d1	 mov	 rdx, rcx
  00bb2	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00bb6	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00bbb	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 129  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[8], v, &wp[8]);

  00bbf	b8 08 00 00 00	 mov	 eax, 8
  00bc4	48 6b c0 08	 imul	 rax, rax, 8
  00bc8	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00bcf	48 03 c8	 add	 rcx, rax
  00bd2	48 8b c1	 mov	 rax, rcx
  00bd5	b9 08 00 00 00	 mov	 ecx, 8
  00bda	48 6b c9 08	 imul	 rcx, rcx, 8
  00bde	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00be5	48 03 d1	 add	 rdx, rcx
  00be8	48 8b ca	 mov	 rcx, rdx
  00beb	4c 8b c8	 mov	 r9, rax
  00bee	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00bf5	48 8b d1	 mov	 rdx, rcx
  00bf8	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00bfc	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00c01	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 130  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[9], v, &wp[9]);

  00c05	b8 08 00 00 00	 mov	 eax, 8
  00c0a	48 6b c0 09	 imul	 rax, rax, 9
  00c0e	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00c15	48 03 c8	 add	 rcx, rax
  00c18	48 8b c1	 mov	 rax, rcx
  00c1b	b9 08 00 00 00	 mov	 ecx, 8
  00c20	48 6b c9 09	 imul	 rcx, rcx, 9
  00c24	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00c2b	48 03 d1	 add	 rdx, rcx
  00c2e	48 8b ca	 mov	 rcx, rdx
  00c31	4c 8b c8	 mov	 r9, rax
  00c34	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00c3b	48 8b d1	 mov	 rdx, rcx
  00c3e	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00c42	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00c47	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 131  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[10], v, &wp[10]);

  00c4b	b8 08 00 00 00	 mov	 eax, 8
  00c50	48 6b c0 0a	 imul	 rax, rax, 10
  00c54	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00c5b	48 03 c8	 add	 rcx, rax
  00c5e	48 8b c1	 mov	 rax, rcx
  00c61	b9 08 00 00 00	 mov	 ecx, 8
  00c66	48 6b c9 0a	 imul	 rcx, rcx, 10
  00c6a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00c71	48 03 d1	 add	 rdx, rcx
  00c74	48 8b ca	 mov	 rcx, rdx
  00c77	4c 8b c8	 mov	 r9, rax
  00c7a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00c81	48 8b d1	 mov	 rdx, rcx
  00c84	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00c88	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00c8d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 132  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[11], v, &wp[11]);

  00c91	b8 08 00 00 00	 mov	 eax, 8
  00c96	48 6b c0 0b	 imul	 rax, rax, 11
  00c9a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ca1	48 03 c8	 add	 rcx, rax
  00ca4	48 8b c1	 mov	 rax, rcx
  00ca7	b9 08 00 00 00	 mov	 ecx, 8
  00cac	48 6b c9 0b	 imul	 rcx, rcx, 11
  00cb0	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00cb7	48 03 d1	 add	 rdx, rcx
  00cba	48 8b ca	 mov	 rcx, rdx
  00cbd	4c 8b c8	 mov	 r9, rax
  00cc0	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00cc7	48 8b d1	 mov	 rdx, rcx
  00cca	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00cce	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00cd3	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 133  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[12], v, &wp[12]);

  00cd7	b8 08 00 00 00	 mov	 eax, 8
  00cdc	48 6b c0 0c	 imul	 rax, rax, 12
  00ce0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ce7	48 03 c8	 add	 rcx, rax
  00cea	48 8b c1	 mov	 rax, rcx
  00ced	b9 08 00 00 00	 mov	 ecx, 8
  00cf2	48 6b c9 0c	 imul	 rcx, rcx, 12
  00cf6	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00cfd	48 03 d1	 add	 rdx, rcx
  00d00	48 8b ca	 mov	 rcx, rdx
  00d03	4c 8b c8	 mov	 r9, rax
  00d06	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00d0d	48 8b d1	 mov	 rdx, rcx
  00d10	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00d14	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00d19	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 134  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[13], v, &wp[13]);

  00d1d	b8 08 00 00 00	 mov	 eax, 8
  00d22	48 6b c0 0d	 imul	 rax, rax, 13
  00d26	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00d2d	48 03 c8	 add	 rcx, rax
  00d30	48 8b c1	 mov	 rax, rcx
  00d33	b9 08 00 00 00	 mov	 ecx, 8
  00d38	48 6b c9 0d	 imul	 rcx, rcx, 13
  00d3c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00d43	48 03 d1	 add	 rdx, rcx
  00d46	48 8b ca	 mov	 rcx, rdx
  00d49	4c 8b c8	 mov	 r9, rax
  00d4c	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00d53	48 8b d1	 mov	 rdx, rcx
  00d56	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00d5a	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00d5f	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 135  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[14], v, &wp[14]);

  00d63	b8 08 00 00 00	 mov	 eax, 8
  00d68	48 6b c0 0e	 imul	 rax, rax, 14
  00d6c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00d73	48 03 c8	 add	 rcx, rax
  00d76	48 8b c1	 mov	 rax, rcx
  00d79	b9 08 00 00 00	 mov	 ecx, 8
  00d7e	48 6b c9 0e	 imul	 rcx, rcx, 14
  00d82	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00d89	48 03 d1	 add	 rdx, rcx
  00d8c	48 8b ca	 mov	 rcx, rdx
  00d8f	4c 8b c8	 mov	 r9, rax
  00d92	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00d99	48 8b d1	 mov	 rdx, rcx
  00d9c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00da0	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00da5	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 136  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[15], v, &wp[15]);

  00da9	b8 08 00 00 00	 mov	 eax, 8
  00dae	48 6b c0 0f	 imul	 rax, rax, 15
  00db2	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00db9	48 03 c8	 add	 rcx, rax
  00dbc	48 8b c1	 mov	 rax, rcx
  00dbf	b9 08 00 00 00	 mov	 ecx, 8
  00dc4	48 6b c9 0f	 imul	 rcx, rcx, 15
  00dc8	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00dcf	48 03 d1	 add	 rdx, rcx
  00dd2	48 8b ca	 mov	 rcx, rdx
  00dd5	4c 8b c8	 mov	 r9, rax
  00dd8	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00ddf	48 8b d1	 mov	 rdx, rcx
  00de2	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00de6	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00deb	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 137  :             up += 16;

  00def	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00df6	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00dfc	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 138  :             wp += 16;

  00e03	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00e0a	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00e10	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 139  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 140  :             if (sizeof(k) == sizeof(_UINT32_T))

  00e17	33 c0		 xor	 eax, eax
  00e19	85 c0		 test	 eax, eax
  00e1b	74 0c		 je	 SHORT $LN7@Multiply_W

; 141  :                 AddToMULTI32Counter(16);

  00e1d	b9 10 00 00 00	 mov	 ecx, 16
  00e22	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 142  :             else

  00e27	eb 0a		 jmp	 SHORT $LN8@Multiply_W
$LN7@Multiply_W:

; 143  :                 AddToMULTI64Counter(16);

  00e29	b9 10 00 00 00	 mov	 ecx, 16
  00e2e	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN8@Multiply_W:
$LN6@Multiply_W:

; 144  : #endif
; 145  :         }
; 146  : 
; 147  :         if (u_count & 0x8)

  00e33	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00e3a	48 83 e0 08	 and	 rax, 8
  00e3e	48 85 c0	 test	 rax, rax
  00e41	0f 84 70 02 00
	00		 je	 $LN9@Multiply_W

; 148  :         {
; 149  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  00e47	b8 08 00 00 00	 mov	 eax, 8
  00e4c	48 6b c0 00	 imul	 rax, rax, 0
  00e50	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00e57	48 03 c8	 add	 rcx, rax
  00e5a	48 8b c1	 mov	 rax, rcx
  00e5d	b9 08 00 00 00	 mov	 ecx, 8
  00e62	48 6b c9 00	 imul	 rcx, rcx, 0
  00e66	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00e6d	48 03 d1	 add	 rdx, rcx
  00e70	48 8b ca	 mov	 rcx, rdx
  00e73	4c 8b c8	 mov	 r9, rax
  00e76	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00e7d	48 8b d1	 mov	 rdx, rcx
  00e80	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00e84	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00e89	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 150  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  00e8d	b8 08 00 00 00	 mov	 eax, 8
  00e92	48 6b c0 01	 imul	 rax, rax, 1
  00e96	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00e9d	48 03 c8	 add	 rcx, rax
  00ea0	48 8b c1	 mov	 rax, rcx
  00ea3	b9 08 00 00 00	 mov	 ecx, 8
  00ea8	48 6b c9 01	 imul	 rcx, rcx, 1
  00eac	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00eb3	48 03 d1	 add	 rdx, rcx
  00eb6	48 8b ca	 mov	 rcx, rdx
  00eb9	4c 8b c8	 mov	 r9, rax
  00ebc	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00ec3	48 8b d1	 mov	 rdx, rcx
  00ec6	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00eca	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00ecf	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 151  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[2], v, &wp[2]);

  00ed3	b8 08 00 00 00	 mov	 eax, 8
  00ed8	48 6b c0 02	 imul	 rax, rax, 2
  00edc	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ee3	48 03 c8	 add	 rcx, rax
  00ee6	48 8b c1	 mov	 rax, rcx
  00ee9	b9 08 00 00 00	 mov	 ecx, 8
  00eee	48 6b c9 02	 imul	 rcx, rcx, 2
  00ef2	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00ef9	48 03 d1	 add	 rdx, rcx
  00efc	48 8b ca	 mov	 rcx, rdx
  00eff	4c 8b c8	 mov	 r9, rax
  00f02	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00f09	48 8b d1	 mov	 rdx, rcx
  00f0c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00f10	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00f15	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 152  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[3], v, &wp[3]);

  00f19	b8 08 00 00 00	 mov	 eax, 8
  00f1e	48 6b c0 03	 imul	 rax, rax, 3
  00f22	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00f29	48 03 c8	 add	 rcx, rax
  00f2c	48 8b c1	 mov	 rax, rcx
  00f2f	b9 08 00 00 00	 mov	 ecx, 8
  00f34	48 6b c9 03	 imul	 rcx, rcx, 3
  00f38	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00f3f	48 03 d1	 add	 rdx, rcx
  00f42	48 8b ca	 mov	 rcx, rdx
  00f45	4c 8b c8	 mov	 r9, rax
  00f48	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00f4f	48 8b d1	 mov	 rdx, rcx
  00f52	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00f56	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00f5b	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 153  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[4], v, &wp[4]);

  00f5f	b8 08 00 00 00	 mov	 eax, 8
  00f64	48 6b c0 04	 imul	 rax, rax, 4
  00f68	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00f6f	48 03 c8	 add	 rcx, rax
  00f72	48 8b c1	 mov	 rax, rcx
  00f75	b9 08 00 00 00	 mov	 ecx, 8
  00f7a	48 6b c9 04	 imul	 rcx, rcx, 4
  00f7e	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00f85	48 03 d1	 add	 rdx, rcx
  00f88	48 8b ca	 mov	 rcx, rdx
  00f8b	4c 8b c8	 mov	 r9, rax
  00f8e	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00f95	48 8b d1	 mov	 rdx, rcx
  00f98	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00f9c	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00fa1	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 154  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[5], v, &wp[5]);

  00fa5	b8 08 00 00 00	 mov	 eax, 8
  00faa	48 6b c0 05	 imul	 rax, rax, 5
  00fae	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00fb5	48 03 c8	 add	 rcx, rax
  00fb8	48 8b c1	 mov	 rax, rcx
  00fbb	b9 08 00 00 00	 mov	 ecx, 8
  00fc0	48 6b c9 05	 imul	 rcx, rcx, 5
  00fc4	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00fcb	48 03 d1	 add	 rdx, rcx
  00fce	48 8b ca	 mov	 rcx, rdx
  00fd1	4c 8b c8	 mov	 r9, rax
  00fd4	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00fdb	48 8b d1	 mov	 rdx, rcx
  00fde	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  00fe2	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  00fe7	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 155  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[6], v, &wp[6]);

  00feb	b8 08 00 00 00	 mov	 eax, 8
  00ff0	48 6b c0 06	 imul	 rax, rax, 6
  00ff4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  00ffb	48 03 c8	 add	 rcx, rax
  00ffe	48 8b c1	 mov	 rax, rcx
  01001	b9 08 00 00 00	 mov	 ecx, 8
  01006	48 6b c9 06	 imul	 rcx, rcx, 6
  0100a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  01011	48 03 d1	 add	 rdx, rcx
  01014	48 8b ca	 mov	 rcx, rdx
  01017	4c 8b c8	 mov	 r9, rax
  0101a	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01021	48 8b d1	 mov	 rdx, rcx
  01024	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01028	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0102d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 156  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[7], v, &wp[7]);

  01031	b8 08 00 00 00	 mov	 eax, 8
  01036	48 6b c0 07	 imul	 rax, rax, 7
  0103a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01041	48 03 c8	 add	 rcx, rax
  01044	48 8b c1	 mov	 rax, rcx
  01047	b9 08 00 00 00	 mov	 ecx, 8
  0104c	48 6b c9 07	 imul	 rcx, rcx, 7
  01050	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  01057	48 03 d1	 add	 rdx, rcx
  0105a	48 8b ca	 mov	 rcx, rdx
  0105d	4c 8b c8	 mov	 r9, rax
  01060	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01067	48 8b d1	 mov	 rdx, rcx
  0106a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0106e	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  01073	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 157  :             up += 8;

  01077	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  0107e	48 83 c0 40	 add	 rax, 64			; 00000040H
  01082	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 158  :             wp += 8;

  01089	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  01090	48 83 c0 40	 add	 rax, 64			; 00000040H
  01094	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 159  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 160  :             if (sizeof(k) == sizeof(_UINT32_T))

  0109b	33 c0		 xor	 eax, eax
  0109d	85 c0		 test	 eax, eax
  0109f	74 0c		 je	 SHORT $LN10@Multiply_W

; 161  :                 AddToMULTI32Counter(8);

  010a1	b9 08 00 00 00	 mov	 ecx, 8
  010a6	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 162  :             else

  010ab	eb 0a		 jmp	 SHORT $LN11@Multiply_W
$LN10@Multiply_W:

; 163  :                 AddToMULTI64Counter(8);

  010ad	b9 08 00 00 00	 mov	 ecx, 8
  010b2	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN11@Multiply_W:
$LN9@Multiply_W:

; 164  : #endif
; 165  :         }
; 166  : 
; 167  :         if (u_count & 0x4)

  010b7	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  010be	48 83 e0 04	 and	 rax, 4
  010c2	48 85 c0	 test	 rax, rax
  010c5	0f 84 58 01 00
	00		 je	 $LN12@Multiply_W

; 168  :         {
; 169  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  010cb	b8 08 00 00 00	 mov	 eax, 8
  010d0	48 6b c0 00	 imul	 rax, rax, 0
  010d4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  010db	48 03 c8	 add	 rcx, rax
  010de	48 8b c1	 mov	 rax, rcx
  010e1	b9 08 00 00 00	 mov	 ecx, 8
  010e6	48 6b c9 00	 imul	 rcx, rcx, 0
  010ea	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  010f1	48 03 d1	 add	 rdx, rcx
  010f4	48 8b ca	 mov	 rcx, rdx
  010f7	4c 8b c8	 mov	 r9, rax
  010fa	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01101	48 8b d1	 mov	 rdx, rcx
  01104	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01108	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  0110d	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 170  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  01111	b8 08 00 00 00	 mov	 eax, 8
  01116	48 6b c0 01	 imul	 rax, rax, 1
  0111a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01121	48 03 c8	 add	 rcx, rax
  01124	48 8b c1	 mov	 rax, rcx
  01127	b9 08 00 00 00	 mov	 ecx, 8
  0112c	48 6b c9 01	 imul	 rcx, rcx, 1
  01130	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  01137	48 03 d1	 add	 rdx, rcx
  0113a	48 8b ca	 mov	 rcx, rdx
  0113d	4c 8b c8	 mov	 r9, rax
  01140	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01147	48 8b d1	 mov	 rdx, rcx
  0114a	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  0114e	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  01153	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 171  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[2], v, &wp[2]);

  01157	b8 08 00 00 00	 mov	 eax, 8
  0115c	48 6b c0 02	 imul	 rax, rax, 2
  01160	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01167	48 03 c8	 add	 rcx, rax
  0116a	48 8b c1	 mov	 rax, rcx
  0116d	b9 08 00 00 00	 mov	 ecx, 8
  01172	48 6b c9 02	 imul	 rcx, rcx, 2
  01176	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0117d	48 03 d1	 add	 rdx, rcx
  01180	48 8b ca	 mov	 rcx, rdx
  01183	4c 8b c8	 mov	 r9, rax
  01186	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0118d	48 8b d1	 mov	 rdx, rcx
  01190	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01194	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  01199	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 172  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[3], v, &wp[3]);

  0119d	b8 08 00 00 00	 mov	 eax, 8
  011a2	48 6b c0 03	 imul	 rax, rax, 3
  011a6	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  011ad	48 03 c8	 add	 rcx, rax
  011b0	48 8b c1	 mov	 rax, rcx
  011b3	b9 08 00 00 00	 mov	 ecx, 8
  011b8	48 6b c9 03	 imul	 rcx, rcx, 3
  011bc	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  011c3	48 03 d1	 add	 rdx, rcx
  011c6	48 8b ca	 mov	 rcx, rdx
  011c9	4c 8b c8	 mov	 r9, rax
  011cc	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  011d3	48 8b d1	 mov	 rdx, rcx
  011d6	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  011da	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  011df	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 173  :             up += 4;

  011e3	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  011ea	48 83 c0 20	 add	 rax, 32			; 00000020H
  011ee	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 174  :             wp += 4;

  011f5	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  011fc	48 83 c0 20	 add	 rax, 32			; 00000020H
  01200	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 175  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 176  :             if (sizeof(k) == sizeof(_UINT32_T))

  01207	33 c0		 xor	 eax, eax
  01209	85 c0		 test	 eax, eax
  0120b	74 0c		 je	 SHORT $LN13@Multiply_W

; 177  :                 AddToMULTI32Counter(4);

  0120d	b9 04 00 00 00	 mov	 ecx, 4
  01212	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 178  :             else

  01217	eb 0a		 jmp	 SHORT $LN14@Multiply_W
$LN13@Multiply_W:

; 179  :                 AddToMULTI64Counter(4);

  01219	b9 04 00 00 00	 mov	 ecx, 4
  0121e	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN14@Multiply_W:
$LN12@Multiply_W:

; 180  : #endif
; 181  :         }
; 182  : 
; 183  :         if (u_count & 0x2)

  01223	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  0122a	48 83 e0 02	 and	 rax, 2
  0122e	48 85 c0	 test	 rax, rax
  01231	0f 84 cc 00 00
	00		 je	 $LN15@Multiply_W

; 184  :         {
; 185  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  01237	b8 08 00 00 00	 mov	 eax, 8
  0123c	48 6b c0 00	 imul	 rax, rax, 0
  01240	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01247	48 03 c8	 add	 rcx, rax
  0124a	48 8b c1	 mov	 rax, rcx
  0124d	b9 08 00 00 00	 mov	 ecx, 8
  01252	48 6b c9 00	 imul	 rcx, rcx, 0
  01256	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0125d	48 03 d1	 add	 rdx, rcx
  01260	48 8b ca	 mov	 rcx, rdx
  01263	4c 8b c8	 mov	 r9, rax
  01266	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0126d	48 8b d1	 mov	 rdx, rcx
  01270	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01274	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  01279	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 186  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[1], v, &wp[1]);

  0127d	b8 08 00 00 00	 mov	 eax, 8
  01282	48 6b c0 01	 imul	 rax, rax, 1
  01286	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  0128d	48 03 c8	 add	 rcx, rax
  01290	48 8b c1	 mov	 rax, rcx
  01293	b9 08 00 00 00	 mov	 ecx, 8
  01298	48 6b c9 01	 imul	 rcx, rcx, 1
  0129c	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  012a3	48 03 d1	 add	 rdx, rcx
  012a6	48 8b ca	 mov	 rcx, rdx
  012a9	4c 8b c8	 mov	 r9, rax
  012ac	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  012b3	48 8b d1	 mov	 rdx, rcx
  012b6	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  012ba	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  012bf	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 187  :             up += 2;

  012c3	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  012ca	48 83 c0 10	 add	 rax, 16
  012ce	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 188  :             wp += 2;

  012d5	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  012dc	48 83 c0 10	 add	 rax, 16
  012e0	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 189  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 190  :             if (sizeof(k) == sizeof(_UINT32_T))

  012e7	33 c0		 xor	 eax, eax
  012e9	85 c0		 test	 eax, eax
  012eb	74 0c		 je	 SHORT $LN16@Multiply_W

; 191  :                 AddToMULTI32Counter(2);

  012ed	b9 02 00 00 00	 mov	 ecx, 2
  012f2	e8 00 00 00 00	 call	 ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI32Counter

; 192  :             else

  012f7	eb 0a		 jmp	 SHORT $LN17@Multiply_W
$LN16@Multiply_W:

; 193  :                 AddToMULTI64Counter(2);

  012f9	b9 02 00 00 00	 mov	 ecx, 2
  012fe	e8 00 00 00 00	 call	 ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
$LN17@Multiply_W:
$LN15@Multiply_W:

; 194  : #endif
; 195  :         }
; 196  : 
; 197  :         if (u_count & 0x1)

  01303	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  0130a	48 83 e0 01	 and	 rax, 1
  0130e	48 85 c0	 test	 rax, rax
  01311	74 7c		 je	 SHORT $LN18@Multiply_W

; 198  :         {
; 199  :             k = _MULTIPLY_DIGIT_UNIT(k, &up[0], v, &wp[0]);

  01313	b8 08 00 00 00	 mov	 eax, 8
  01318	48 6b c0 00	 imul	 rax, rax, 0
  0131c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR wp$[rbp]
  01323	48 03 c8	 add	 rcx, rax
  01326	48 8b c1	 mov	 rax, rcx
  01329	b9 08 00 00 00	 mov	 ecx, 8
  0132e	48 6b c9 00	 imul	 rcx, rcx, 0
  01332	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  01339	48 03 d1	 add	 rdx, rcx
  0133c	48 8b ca	 mov	 rcx, rdx
  0133f	4c 8b c8	 mov	 r9, rax
  01342	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01349	48 8b d1	 mov	 rdx, rcx
  0134c	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  01350	e8 00 00 00 00	 call	 ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
  01355	48 89 45 08	 mov	 QWORD PTR k$[rbp], rax

; 200  :             up += 1;

  01359	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  01360	48 83 c0 08	 add	 rax, 8
  01364	48 89 85 20 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 201  :             wp += 1;

  0136b	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  01372	48 83 c0 08	 add	 rax, 8
  01376	48 89 85 38 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 202  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 203  :             if (sizeof(k) == sizeof(_UINT32_T))

  0137d	33 c0		 xor	 eax, eax
  0137f	85 c0		 test	 eax, eax
  01381	74 07		 je	 SHORT $LN19@Multiply_W

; 204  :                 IncrementMULTI32Counter();

  01383	e8 00 00 00 00	 call	 ?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::IncrementMULTI32Counter

; 205  :             else

  01388	eb 05		 jmp	 SHORT $LN20@Multiply_W
$LN19@Multiply_W:

; 206  :                 IncrementMULTI64Counter();

  0138a	e8 00 00 00 00	 call	 ?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::IncrementMULTI64Counter
$LN20@Multiply_W:
$LN18@Multiply_W:

; 207  : #endif
; 208  :         }
; 209  : 
; 210  :         if (k != 0)

  0138f	48 83 7d 08 00	 cmp	 QWORD PTR k$[rbp], 0
  01394	74 0e		 je	 SHORT $LN21@Multiply_W

; 211  :             *wp = k;

  01396	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  0139d	48 8b 4d 08	 mov	 rcx, QWORD PTR k$[rbp]
  013a1	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN21@Multiply_W:

; 212  :     }

  013a4	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  013ab	5f		 pop	 rdi
  013ac	5d		 pop	 rbp
  013ad	c3		 ret	 0
?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z
_TEXT	SEGMENT
t_hi$ = 8
t_lo$ = 40
tv94 = 248
tv81 = 248
tv92 = 256
tv79 = 256
k$ = 304
up$ = 312
v$ = 320
wp$ = 328
?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z PROC ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT, COMDAT

; 58   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 59   :         __UNIT_TYPE t_hi;
; 60   :         __UNIT_TYPE t_lo;
; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00045	4c 8d 45 08	 lea	 r8, QWORD PTR t_hi$[rbp]
  00049	48 8b 95 40 01
	00 00		 mov	 rdx, QWORD PTR v$[rbp]
  00050	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00057	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0005a	e8 00 00 00 00	 call	 _MULTIPLYX_UNIT
  0005f	48 89 45 28	 mov	 QWORD PTR t_lo$[rbp], rax

; 62   :         _ADDX_UNIT(_ADDX_UNIT(0, t_lo, *wp, &t_lo), t_hi, 0, &t_hi);

  00063	48 8b 45 08	 mov	 rax, QWORD PTR t_hi$[rbp]
  00067	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0006e	4c 8d 4d 28	 lea	 r9, QWORD PTR t_lo$[rbp]
  00072	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00079	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007c	48 8b 55 28	 mov	 rdx, QWORD PTR t_lo$[rbp]
  00080	33 c9		 xor	 ecx, ecx
  00082	e8 00 00 00 00	 call	 _ADDX_UNIT
  00087	88 85 00 01 00
	00		 mov	 BYTE PTR tv79[rbp], al
  0008d	4c 8d 4d 08	 lea	 r9, QWORD PTR t_hi$[rbp]
  00091	45 33 c0	 xor	 r8d, r8d
  00094	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR tv81[rbp]
  0009b	0f b6 8d 00 01
	00 00		 movzx	 ecx, BYTE PTR tv79[rbp]
  000a2	e8 00 00 00 00	 call	 _ADDX_UNIT

; 63   :         _ADDX_UNIT(_ADDX_UNIT(0, t_lo, k, &t_lo), t_hi, 0, &t_hi);

  000a7	48 8b 45 08	 mov	 rax, QWORD PTR t_hi$[rbp]
  000ab	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv94[rbp], rax
  000b2	4c 8d 4d 28	 lea	 r9, QWORD PTR t_lo$[rbp]
  000b6	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR k$[rbp]
  000bd	48 8b 55 28	 mov	 rdx, QWORD PTR t_lo$[rbp]
  000c1	33 c9		 xor	 ecx, ecx
  000c3	e8 00 00 00 00	 call	 _ADDX_UNIT
  000c8	88 85 00 01 00
	00		 mov	 BYTE PTR tv92[rbp], al
  000ce	4c 8d 4d 08	 lea	 r9, QWORD PTR t_hi$[rbp]
  000d2	45 33 c0	 xor	 r8d, r8d
  000d5	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR tv94[rbp]
  000dc	0f b6 8d 00 01
	00 00		 movzx	 ecx, BYTE PTR tv92[rbp]
  000e3	e8 00 00 00 00	 call	 _ADDX_UNIT

; 64   :         *wp = t_lo;

  000e8	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  000ef	48 8b 4d 28	 mov	 rcx, QWORD PTR t_lo$[rbp]
  000f3	48 89 08	 mov	 QWORD PTR [rax], rcx

; 65   :         k = t_hi;

  000f6	48 8b 45 08	 mov	 rax, QWORD PTR t_hi$[rbp]
  000fa	48 89 85 30 01
	00 00		 mov	 QWORD PTR k$[rbp], rax

; 66   :         return (k);

  00101	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR k$[rbp]

; 67   :     }

  00108	48 8b f8	 mov	 rdi, rax
  0010b	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0010f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcFrameData
  00116	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0011b	48 8b c7	 mov	 rax, rdi
  0011e	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  00125	5f		 pop	 rdi
  00126	5d		 pop	 rbp
  00127	c3		 ret	 0
?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ENDP ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z
_TEXT	SEGMENT
t_hi$ = 8
t_lo$ = 40
tv94 = 248
tv81 = 248
tv92 = 256
tv79 = 256
k$ = 304
up$ = 312
v$ = 320
wp$ = 328
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z PROC ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT, COMDAT

; 46   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 47   :         __UNIT_TYPE t_hi;
; 48   :         __UNIT_TYPE t_lo;
; 49   :         t_lo = _MULTIPLY_UNIT(*up, v, &t_hi);

  00045	4c 8d 45 08	 lea	 r8, QWORD PTR t_hi$[rbp]
  00049	48 8b 95 40 01
	00 00		 mov	 rdx, QWORD PTR v$[rbp]
  00050	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00057	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0005a	e8 00 00 00 00	 call	 _MULTIPLY_UNIT
  0005f	48 89 45 28	 mov	 QWORD PTR t_lo$[rbp], rax

; 50   :         _ADD_UNIT(_ADD_UNIT(0, t_lo, *wp, &t_lo), t_hi, 0, &t_hi);

  00063	48 8b 45 08	 mov	 rax, QWORD PTR t_hi$[rbp]
  00067	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0006e	4c 8d 4d 28	 lea	 r9, QWORD PTR t_lo$[rbp]
  00072	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00079	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007c	48 8b 55 28	 mov	 rdx, QWORD PTR t_lo$[rbp]
  00080	33 c9		 xor	 ecx, ecx
  00082	e8 00 00 00 00	 call	 _ADD_UNIT
  00087	88 85 00 01 00
	00		 mov	 BYTE PTR tv79[rbp], al
  0008d	4c 8d 4d 08	 lea	 r9, QWORD PTR t_hi$[rbp]
  00091	45 33 c0	 xor	 r8d, r8d
  00094	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR tv81[rbp]
  0009b	0f b6 8d 00 01
	00 00		 movzx	 ecx, BYTE PTR tv79[rbp]
  000a2	e8 00 00 00 00	 call	 _ADD_UNIT

; 51   :         _ADD_UNIT(_ADD_UNIT(0, t_lo, k, &t_lo), t_hi, 0, &t_hi);

  000a7	48 8b 45 08	 mov	 rax, QWORD PTR t_hi$[rbp]
  000ab	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv94[rbp], rax
  000b2	4c 8d 4d 28	 lea	 r9, QWORD PTR t_lo$[rbp]
  000b6	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR k$[rbp]
  000bd	48 8b 55 28	 mov	 rdx, QWORD PTR t_lo$[rbp]
  000c1	33 c9		 xor	 ecx, ecx
  000c3	e8 00 00 00 00	 call	 _ADD_UNIT
  000c8	88 85 00 01 00
	00		 mov	 BYTE PTR tv92[rbp], al
  000ce	4c 8d 4d 08	 lea	 r9, QWORD PTR t_hi$[rbp]
  000d2	45 33 c0	 xor	 r8d, r8d
  000d5	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR tv94[rbp]
  000dc	0f b6 8d 00 01
	00 00		 movzx	 ecx, BYTE PTR tv92[rbp]
  000e3	e8 00 00 00 00	 call	 _ADD_UNIT

; 52   :         *wp = t_lo;

  000e8	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  000ef	48 8b 4d 28	 mov	 rcx, QWORD PTR t_lo$[rbp]
  000f3	48 89 08	 mov	 QWORD PTR [rax], rcx

; 53   :         k = t_hi;

  000f6	48 8b 45 08	 mov	 rax, QWORD PTR t_hi$[rbp]
  000fa	48 89 85 30 01
	00 00		 mov	 QWORD PTR k$[rbp], rax

; 54   :         return (k);

  00101	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR k$[rbp]

; 55   :     }

  00108	48 8b f8	 mov	 rdi, rax
  0010b	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0010f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z$rtcFrameData
  00116	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0011b	48 8b c7	 mov	 rax, rdi
  0011e	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  00125	5f		 pop	 rdi
  00126	5d		 pop	 rbp
  00127	c3		 ret	 0
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ENDP ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_UNIT
_TEXT	SEGMENT
pos$ = 4
x$ = 256
_LZCNT_ALT_UNIT PROC					; COMDAT

; 454  :         {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 455  :             if (x == 0)

  00036	48 83 bd 00 01
	00 00 00	 cmp	 QWORD PTR x$[rbp], 0
  0003e	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  00040	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00045	eb 1c		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);
; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);

  00047	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  0004e	48 0f bd c0	 bsr	 rax, rax
  00052	89 45 04	 mov	 DWORD PTR pos$[rbp], eax

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00055	8b 45 04	 mov	 eax, DWORD PTR pos$[rbp]
  00058	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
$LN1@LZCNT_ALT_:

; 480  :         }

  00063	48 8b f8	 mov	 rdi, rax
  00066	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_LZCNT_ALT_UNIT$rtcFrameData
  00071	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00076	48 8b c7	 mov	 rax, rdi
  00079	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
_LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_32
_TEXT	SEGMENT
pos$ = 4
x$ = 256
_LZCNT_ALT_32 PROC					; COMDAT

; 421  :         {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR [rsp+296]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 422  :             if (x == 0)

  00034	83 bd 00 01 00
	00 00		 cmp	 DWORD PTR x$[rbp], 0
  0003b	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  0003d	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00042	eb 1a		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  00044	8b 85 00 01 00
	00		 mov	 eax, DWORD PTR x$[rbp]
  0004a	0f bd c0	 bsr	 eax, eax
  0004d	89 45 04	 mov	 DWORD PTR pos$[rbp], eax

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00050	8b 45 04	 mov	 eax, DWORD PTR pos$[rbp]
  00053	b9 1f 00 00 00	 mov	 ecx, 31
  00058	48 2b c8	 sub	 rcx, rax
  0005b	48 8b c1	 mov	 rax, rcx
$LN1@LZCNT_ALT_:

; 433  :         }

  0005e	48 8b f8	 mov	 rdi, rax
  00061	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_LZCNT_ALT_32$rtcFrameData
  0006c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00071	48 8b c7	 mov	 rax, rdi
  00074	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
_LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _MULTIPLYX_UNIT
_TEXT	SEGMENT
u$ = 224
v$ = 232
w_hi$ = 240
_MULTIPLYX_UNIT PROC					; COMDAT

; 228  :         {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  : #ifdef _MSC_VER
; 230  : #ifdef _M_IX86
; 231  :             return (_FROMDWORDTOWORD((_UINT64_T)u * v, w_hi));
; 232  : #elif defined(_M_X64)
; 233  :             return (_mulx_u64(u, v, w_hi));

  00040	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR v$[rbp]
  00047	c4 e2 f3 f6 85
	e0 00 00 00	 mulx	 rax, rcx, QWORD PTR u$[rbp]
  00050	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR w_hi$[rbp]
  00057	48 89 02	 mov	 QWORD PTR [rdx], rax
  0005a	48 8b c1	 mov	 rax, rcx

; 234  : #else
; 235  : #error unknown platform
; 236  : #endif
; 237  : #elif defined(__GNUC__)
; 238  : #ifdef _M_IX86
; 239  :             _UINT32_T w_lo;
; 240  :             __asm__("mulxl %3, %0, %1" : "=r"(w_lo), "=r"(*w_hi), "+d"(u) : "rm"(v));
; 241  :             return (w_lo);
; 242  : #elif defined(_M_X64)
; 243  :             _UINT64_T w_lo;
; 244  :             __asm__("mulxq %3, %0, %1" : "=r"(w_lo), "=r"(*w_hi), "+d"(u) : "rm"(v));
; 245  :             return (w_lo);
; 246  : #else
; 247  : #error unknown platform
; 248  : #endif
; 249  : #else
; 250  : #error unknown compiler
; 251  : #endif
; 252  :         }

  0005d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00064	5f		 pop	 rdi
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
_MULTIPLYX_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _MULTIPLY_UNIT
_TEXT	SEGMENT
tv69 = 192
u$ = 240
v$ = 248
w_hi$ = 256
_MULTIPLY_UNIT PROC					; COMDAT

; 209  :         {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 210  : #ifdef _M_IX86
; 211  : #ifdef _MSC_VER
; 212  :             return (_FROMDWORDTOWORD((_UINT64_T)u * v, w_hi));
; 213  : #elif defined(__GNUC__)
; 214  :             _UINT32_T w_lo;
; 215  :             __asm__("mull %3": "=a"(w_lo), "=d"(*w_hi) : "0"(u), "rm"(v));
; 216  :             return (w_lo);
; 217  : #else
; 218  : #error unknown compiler
; 219  : #endif
; 220  : #elif defined(_M_X64)
; 221  :             return (_umul128(u, v, w_hi));

  00040	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00047	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  0004e	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  00055	48 8b c1	 mov	 rax, rcx
  00058	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  0005f	48 f7 e1	 mul	 rcx
  00062	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR w_hi$[rbp]
  00069	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 222  : #else
; 223  : #error unknown platform
; 224  : #endif
; 225  :         }

  0006c	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
_MULTIPLY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ADDX_UNIT
_TEXT	SEGMENT
carry$ = 224
u$ = 232
v$ = 240
w$ = 248
_ADDX_UNIT PROC						; COMDAT

; 187  :         {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 188  : #ifdef _M_IX86
; 189  :             return (_addcarryx_u32(carry, u, v, w));
; 190  : #elif defined(_M_X64)
; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00044	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR carry$[rbp]
  00052	80 c1 ff	 add	 cl, -1
  00055	66 48 0f 38 f6
	85 f0 00 00 00	 adcx	 rax, QWORD PTR v$[rbp]
  0005f	0f 92 c1	 setb	 cl
  00062	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00069	48 89 02	 mov	 QWORD PTR [rdx], rax
  0006c	0f b6 c1	 movzx	 eax, cl

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  :         }

  0006f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00076	5f		 pop	 rdi
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
_ADDX_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ADD_UNIT
_TEXT	SEGMENT
carry$ = 224
u$ = 232
v$ = 240
w$ = 248
_ADD_UNIT PROC						; COMDAT

; 176  :         {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 177  : #ifdef _M_IX86
; 178  :             return (_addcarry_u32(carry, u, v, w));
; 179  : #elif defined(_M_X64)
; 180  :             return (_addcarry_u64(carry, u, v, w));

  00044	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR carry$[rbp]
  00052	80 c1 ff	 add	 cl, -1
  00055	48 13 85 f0 00
	00 00		 adc	 rax, QWORD PTR v$[rbp]
  0005c	0f 92 c1	 setb	 cl
  0005f	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00066	48 89 02	 mov	 QWORD PTR [rdx], rax
  00069	0f b6 c1	 movzx	 eax, cl

; 181  : #else
; 182  : #error unknown platform
; 183  : #endif
; 184  :         }

  0006c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
_ADD_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _FROMDWORDTOWORD
_TEXT	SEGMENT
value$ = 224
result_high$ = 232
_FROMDWORDTOWORD PROC					; COMDAT

; 145  :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR value$[rbp]
  00042	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  00046	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR result_high$[rbp]
  0004d	89 01		 mov	 DWORD PTR [rcx], eax

; 147  :             return ((_UINT32_T)value);

  0004f	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR value$[rbp]

; 148  :         }

  00055	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
_FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 224
?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToMULTI64Counter, COMDAT

; 359  :     {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR [rsp+264]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB6D3116_pmc_uint_internal@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A ; Palmtree::Math::Core::Internal::statistics_info
  0003b	8b 8d e0 00 00
	00		 mov	 ecx, DWORD PTR value$[rbp]
  00041	f0 01 08	 lock add DWORD PTR [rax], ecx

; 361  :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 224
?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToMULTI32Counter, COMDAT

; 353  :     {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR [rsp+264]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB6D3116_pmc_uint_internal@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 354  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI32, value);

  00034	48 8d 05 04 00
	00 00		 lea	 rax, OFFSET FLAT:?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+4
  0003b	8b 8d e0 00 00
	00		 mov	 ecx, DWORD PTR value$[rbp]
  00041	f0 01 08	 lock add DWORD PTR [rax], ecx

; 355  :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToMULTI32Counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementMULTI64Counter, COMDAT

; 336  :     {

  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB6D3116_pmc_uint_internal@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 337  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI64);

  0002a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A ; Palmtree::Math::Core::Internal::statistics_info
  00031	f0 ff 00	 lock inc DWORD PTR [rax]

; 338  :     }

  00034	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003b	5f		 pop	 rdi
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementMULTI64Counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementMULTI32Counter, COMDAT

; 330  :     {

  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB6D3116_pmc_uint_internal@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 331  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI32);

  0002a	48 8d 05 04 00
	00 00		 lea	 rax, OFFSET FLAT:?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+4
  00031	f0 ff 00	 lock inc DWORD PTR [rax]

; 332  :     }

  00034	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003b	5f		 pop	 rdi
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementMULTI32Counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
_TEXT	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
w$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X, COMDAT

; 744  :     {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 68 02
	00 00		 sub	 rsp, 616		; 00000268H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 9a 00 00 00	 mov	 ecx, 154		; 0000009aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 88
	02 00 00	 mov	 rcx, QWORD PTR [rsp+648]
  0002f	48 c7 85 28 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 745  :         if (u == nullptr)

  00046	48 83 bd 60 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  0004e	75 2d		 jne	 SHORT $LN2@PMC_Multip

; 746  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00050	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00057	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0005e	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00065	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00071	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00078	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Multip:

; 747  :         if (v == nullptr)

  0007d	48 83 bd 68 02
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00085	75 2d		 jne	 SHORT $LN3@PMC_Multip

; 748  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00087	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00095	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  0009c	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a8	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000af	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Multip:

; 749  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  000b4	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000bb	48 89 45 08	 mov	 QWORD PTR nu$[rbp], rax

; 750  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  000bf	48 8b 85 68 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000c6	48 89 45 28	 mov	 QWORD PTR nv$[rbp], rax

; 751  :         CheckNumber(nu);

  000ca	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000ce	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 752  :         CheckNumber(nv);

  000d3	48 8b 4d 28	 mov	 rcx, QWORD PTR nv$[rbp]
  000d7	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 753  :         ResourceHolderUINT root;

  000dc	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  000e0	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000e5	90		 npad	 1

; 754  :         NUMBER_HEADER* w = PMC_Multiply_X_X_Imp(nu, nv);

  000e6	48 8b 55 28	 mov	 rdx, QWORD PTR nv$[rbp]
  000ea	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000ee	e8 00 00 00 00	 call	 ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp
  000f3	48 89 85 88 00
	00 00		 mov	 QWORD PTR w$[rbp], rax

; 755  :         root.HookNumber(w);

  000fa	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00101	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00105	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 756  : #ifdef _DEBUG
; 757  :         CheckNumber(w);

  0010a	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR w$[rbp]
  00111	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 758  : #endif
; 759  :         root.UnlinkNumber(w);

  00116	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0011d	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00121	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 760  :         return ((PMC_HANDLE_UINT)w);

  00126	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  0012d	48 89 85 08 02
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00134	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00138	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0013d	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 761  :     }

  00144	48 8b f8	 mov	 rdi, rax
  00147	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcFrameData
  00152	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00157	48 8b c7	 mov	 rax, rdi
  0015a	48 8d a5 48 02
	00 00		 lea	 rsp, QWORD PTR [rbp+584]
  00161	5f		 pop	 rdi
  00162	5d		 pop	 rbp
  00163	c3		 ret	 0
$LN6@PMC_Multip:
?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
w$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
w$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
_TEXT	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L, COMDAT

; 659  :     {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  0002f	48 c7 85 e8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 660  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)

  00046	33 c0		 xor	 eax, eax
  00048	85 c0		 test	 eax, eax
  0004a	74 2d		 je	 SHORT $LN2@PMC_Multip

; 661  :         {
; 662  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 663  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_multiply.cpp;PMC_Multiply_X_L;1");

  0004c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EI@KKPFNBCM@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@
  00053	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0005a	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00061	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00066	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006d	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00074	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Multip:

; 664  :         }
; 665  :         if (u == nullptr)

  00079	48 83 bd 20 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  00081	75 2d		 jne	 SHORT $LN3@PMC_Multip

; 666  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00083	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00091	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00098	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a4	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000ab	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Multip:

; 667  :         CheckNumber((NUMBER_HEADER*)u);

  000b0	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000b7	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 668  :         ResourceHolderUINT root;

  000bc	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000c0	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000c5	90		 npad	 1

; 669  :         NUMBER_HEADER* w = PMC_Multiply_X_L_Imp((NUMBER_HEADER*)u, v);

  000c6	48 8b 95 28 02
	00 00		 mov	 rdx, QWORD PTR v$[rbp]
  000cd	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000d4	e8 00 00 00 00	 call	 ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
  000d9	48 89 45 48	 mov	 QWORD PTR w$[rbp], rax

; 670  :         root.HookNumber(w);

  000dd	48 8b 55 48	 mov	 rdx, QWORD PTR w$[rbp]
  000e1	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000e5	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 671  : #ifdef _DEBUG
; 672  :         CheckNumber(w);

  000ea	48 8b 4d 48	 mov	 rcx, QWORD PTR w$[rbp]
  000ee	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 673  : #endif
; 674  :         root.UnlinkNumber(w);

  000f3	48 8b 55 48	 mov	 rdx, QWORD PTR w$[rbp]
  000f7	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000fb	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 675  :         return ((PMC_HANDLE_UINT)w);

  00100	48 8b 45 48	 mov	 rax, QWORD PTR w$[rbp]
  00104	48 89 85 c8 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  0010b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0010f	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00114	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 676  :     }

  0011b	48 8b f8	 mov	 rdi, rax
  0011e	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00122	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcFrameData
  00129	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012e	48 8b c7	 mov	 rax, rdi
  00131	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  00138	5f		 pop	 rdi
  00139	5d		 pop	 rbp
  0013a	c3		 ret	 0
$LN6@PMC_Multip:
?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
_TEXT	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I, COMDAT

; 517  :     {

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  0002e	48 c7 85 e8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 518  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  00045	33 c0		 xor	 eax, eax
  00047	85 c0		 test	 eax, eax
  00049	74 2d		 je	 SHORT $LN2@PMC_Multip

; 519  :         {
; 520  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 521  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_multiply.cpp;PMC_Multiply_I_X;1");

  0004b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EI@MFLJEPGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@
  00052	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  00059	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00060	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006c	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00073	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Multip:

; 522  :         }
; 523  :         if (u == nullptr)

  00078	48 83 bd 20 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  00080	75 2d		 jne	 SHORT $LN3@PMC_Multip

; 524  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00082	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00090	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00097	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a3	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000aa	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Multip:

; 525  :         CheckNumber((NUMBER_HEADER*)u);

  000af	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000b6	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 526  :         ResourceHolderUINT root;

  000bb	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000bf	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000c4	90		 npad	 1

; 527  :         NUMBER_HEADER* w = PMC_Multiply_X_I_Imp((NUMBER_HEADER*)u, v);

  000c5	8b 95 28 02 00
	00		 mov	 edx, DWORD PTR v$[rbp]
  000cb	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000d2	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  000d7	48 89 45 48	 mov	 QWORD PTR w$[rbp], rax

; 528  :         root.HookNumber(w);

  000db	48 8b 55 48	 mov	 rdx, QWORD PTR w$[rbp]
  000df	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000e3	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 529  : #ifdef _DEBUG
; 530  :         CheckNumber(w);

  000e8	48 8b 4d 48	 mov	 rcx, QWORD PTR w$[rbp]
  000ec	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 531  : #endif
; 532  :         root.UnlinkNumber(w);

  000f1	48 8b 55 48	 mov	 rdx, QWORD PTR w$[rbp]
  000f5	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000f9	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 533  :         return ((PMC_HANDLE_UINT)w);

  000fe	48 8b 45 48	 mov	 rax, QWORD PTR w$[rbp]
  00102	48 89 85 c8 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00109	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0010d	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00112	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 534  :     }

  00119	48 8b f8	 mov	 rdi, rax
  0011c	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00120	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcFrameData
  00127	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012c	48 8b c7	 mov	 rax, rdi
  0012f	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  00136	5f		 pop	 rdi
  00137	5d		 pop	 rbp
  00138	c3		 ret	 0
$LN6@PMC_Multip:
?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
_TEXT	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X, COMDAT

; 639  :     {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  0002f	48 c7 85 e8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 640  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)

  00046	33 c0		 xor	 eax, eax
  00048	85 c0		 test	 eax, eax
  0004a	74 2d		 je	 SHORT $LN2@PMC_Multip

; 641  :         {
; 642  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 643  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_multiply.cpp;PMC_Multiply_L_X;1");

  0004c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EI@FNBKDIHO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@
  00053	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0005a	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00061	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00066	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006d	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00074	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Multip:

; 644  :         }
; 645  :         if (v == nullptr)

  00079	48 83 bd 28 02
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00081	75 2d		 jne	 SHORT $LN3@PMC_Multip

; 646  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00083	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00091	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00098	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a4	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000ab	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Multip:

; 647  :         CheckNumber((NUMBER_HEADER*)v);

  000b0	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  000b7	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 648  :         ResourceHolderUINT root;

  000bc	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000c0	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000c5	90		 npad	 1

; 649  :         NUMBER_HEADER* w = PMC_Multiply_X_L_Imp((NUMBER_HEADER*)v, u);

  000c6	48 8b 95 20 02
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  000cd	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  000d4	e8 00 00 00 00	 call	 ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
  000d9	48 89 45 48	 mov	 QWORD PTR w$[rbp], rax

; 650  :         root.HookNumber(w);

  000dd	48 8b 55 48	 mov	 rdx, QWORD PTR w$[rbp]
  000e1	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000e5	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 651  : #ifdef _DEBUG
; 652  :         CheckNumber(w);

  000ea	48 8b 4d 48	 mov	 rcx, QWORD PTR w$[rbp]
  000ee	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 653  : #endif
; 654  :         root.UnlinkNumber(w);

  000f3	48 8b 55 48	 mov	 rdx, QWORD PTR w$[rbp]
  000f7	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000fb	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 655  :         return ((PMC_HANDLE_UINT)w);

  00100	48 8b 45 48	 mov	 rax, QWORD PTR w$[rbp]
  00104	48 89 85 c8 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  0010b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0010f	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00114	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 656  :     }

  0011b	48 8b f8	 mov	 rdi, rax
  0011e	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00122	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z$rtcFrameData
  00129	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012e	48 8b c7	 mov	 rax, rdi
  00131	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  00138	5f		 pop	 rdi
  00139	5d		 pop	 rbp
  0013a	c3		 ret	 0
$LN6@PMC_Multip:
?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_L_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_L_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_L_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_L_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
_TEXT	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X, COMDAT

; 497  :     {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	8b 8c 24 48 02
	00 00		 mov	 ecx, DWORD PTR [rsp+584]
  0002d	48 c7 85 e8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 498  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)

  00044	33 c0		 xor	 eax, eax
  00046	85 c0		 test	 eax, eax
  00048	74 2d		 je	 SHORT $LN2@PMC_Multip

; 499  :         {
; 500  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 501  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_multiply.cpp;PMC_Multiply_I_X;1");

  0004a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EI@MFLJEPGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAy?$AA?4?$AAc?$AAp@
  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  00058	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0005f	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006b	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00072	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Multip:

; 502  :         }
; 503  :         if (v == nullptr)

  00077	48 83 bd 28 02
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  0007f	75 2d		 jne	 SHORT $LN3@PMC_Multip

; 504  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00081	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0008f	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00096	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a2	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000a9	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Multip:

; 505  :         CheckNumber((NUMBER_HEADER*)v);

  000ae	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  000b5	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 506  :         ResourceHolderUINT root;

  000ba	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000be	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000c3	90		 npad	 1

; 507  :         NUMBER_HEADER* w = PMC_Multiply_X_I_Imp((NUMBER_HEADER*)v, u);

  000c4	8b 95 20 02 00
	00		 mov	 edx, DWORD PTR u$[rbp]
  000ca	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  000d1	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  000d6	48 89 45 48	 mov	 QWORD PTR w$[rbp], rax

; 508  :         root.HookNumber(w);

  000da	48 8b 55 48	 mov	 rdx, QWORD PTR w$[rbp]
  000de	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000e2	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 509  : #ifdef _DEBUG
; 510  :         CheckNumber(w);

  000e7	48 8b 4d 48	 mov	 rcx, QWORD PTR w$[rbp]
  000eb	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 511  : #endif
; 512  :         root.UnlinkNumber(w);

  000f0	48 8b 55 48	 mov	 rdx, QWORD PTR w$[rbp]
  000f4	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000f8	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 513  :         return ((PMC_HANDLE_UINT)w);

  000fd	48 8b 45 48	 mov	 rax, QWORD PTR w$[rbp]
  00101	48 89 85 c8 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00108	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0010c	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00111	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 514  :     }

  00118	48 8b f8	 mov	 rdi, rax
  0011b	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0011f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z$rtcFrameData
  00126	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012b	48 8b c7	 mov	 rax, rdi
  0012e	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  00135	5f		 pop	 rdi
  00136	5d		 pop	 rbp
  00137	c3		 ret	 0
$LN6@PMC_Multip:
?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_I_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_I_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
w$ = 72
$T4 = 296
$T5 = 376
$T6 = 456
$T7 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_I_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_I_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 224
?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Multiply, COMDAT

; 764  :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 765  :         if (feature->PROCESSOR_FEATURE_ADX && feature->PROCESSOR_FEATURE_BMI2)

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR feature$[rbp]
  0003d	8b 00		 mov	 eax, DWORD PTR [rax]
  0003f	d1 e8		 shr	 eax, 1
  00041	83 e0 01	 and	 eax, 1
  00044	85 c0		 test	 eax, eax
  00046	74 3f		 je	 SHORT $LN2@Initialize
  00048	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR feature$[rbp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	c1 e8 03	 shr	 eax, 3
  00054	83 e0 01	 and	 eax, 1
  00057	85 c0		 test	 eax, eax
  00059	74 2c		 je	 SHORT $LN2@Initialize

; 766  :         {
; 767  :             fp_Multiply_X_1W = Multiply_X_1W_using_MULX_ADCX;

  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MULX_ADCX
  00062	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA, rax

; 768  :             fp_Multiply_X_2W = Multiply_X_2W_using_MULX_ADCX;

  00069	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MULX_ADCX
  00070	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_2W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K110@ZEA, rax

; 769  :             fp_Multiply_X_X = Multiply_X_X_using_MULX_ADCX;

  00077	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MULX_ADCX
  0007e	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA, rax

; 770  :         }
; 771  :         else

  00085	eb 2a		 jmp	 SHORT $LN3@Initialize
$LN2@Initialize:

; 772  :         {
; 773  :             fp_Multiply_X_1W = Multiply_X_1W_using_MUL_ADC;

  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MUL_ADC
  0008e	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA, rax

; 774  :             fp_Multiply_X_2W = Multiply_X_2W_using_MUL_ADC;

  00095	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MUL_ADC
  0009c	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_2W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K110@ZEA, rax

; 775  :             fp_Multiply_X_X = Multiply_X_X_using_MUL_ADC;

  000a3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MUL_ADC
  000aa	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA, rax
$LN3@Initialize:

; 776  :         }
; 777  :         return (PMC_STATUS_OK);

  000b1	33 c0		 xor	 eax, eax

; 778  :     }

  000b3	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000ba	5f		 pop	 rdi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Multiply
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
_TEXT	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 424
tv131 = 440
u$ = 480
v$ = 488
?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp, COMDAT

; 433  :     {

$LN14:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 7a 00 00 00	 mov	 ecx, 122		; 0000007aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	02 00 00	 mov	 rcx, QWORD PTR [rsp+520]
  0002e	48 c7 85 a8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T10[rbp], -2
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 434  :         if (u->IS_ZERO)

  00045	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004c	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0004f	83 e0 01	 and	 eax, 1
  00052	85 c0		 test	 eax, eax
  00054	74 11		 je	 SHORT $LN2@PMC_Multip

; 435  :         {
; 436  :             // u が 0 である場合
; 437  : 
; 438  :             // v の値にかかわらず 0 を返す。
; 439  :             return (&number_zero);

  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0005d	e9 66 01 00 00	 jmp	 $LN1@PMC_Multip
  00062	e9 61 01 00 00	 jmp	 $LN1@PMC_Multip
$LN2@PMC_Multip:

; 440  :         }
; 441  :         else if (u->IS_ONE)

  00067	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0006e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00071	d1 e8		 shr	 eax, 1
  00073	83 e0 01	 and	 eax, 1
  00076	85 c0		 test	 eax, eax
  00078	74 2c		 je	 SHORT $LN4@PMC_Multip

; 442  :         {
; 443  :             // u が 1 である場合
; 444  :             if (v == 0)

  0007a	83 bd e8 01 00
	00 00		 cmp	 DWORD PTR v$[rbp], 0
  00081	75 0e		 jne	 SHORT $LN6@PMC_Multip

; 445  :             {
; 446  :                 // v が 0 である場合
; 447  : 
; 448  :                 //  0  を返す。
; 449  :                 return (&number_zero);

  00083	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0008a	e9 39 01 00 00	 jmp	 $LN1@PMC_Multip

; 450  :             }
; 451  :             else

  0008f	eb 10		 jmp	 SHORT $LN7@PMC_Multip
$LN6@PMC_Multip:

; 452  :             {
; 453  :                 // y が 0 ではない場合
; 454  : 
; 455  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 456  :                 return (From_I_Imp(v));

  00091	8b 8d e8 01 00
	00		 mov	 ecx, DWORD PTR v$[rbp]
  00097	e8 00 00 00 00	 call	 ?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::From_I_Imp
  0009c	e9 27 01 00 00	 jmp	 $LN1@PMC_Multip
$LN7@PMC_Multip:

; 457  :             }
; 458  :         }
; 459  :         else

  000a1	e9 22 01 00 00	 jmp	 $LN1@PMC_Multip
$LN4@PMC_Multip:

; 460  :         {
; 461  :             // u が 0 と 1 のどちらでもない場合
; 462  : 
; 463  :             if (v == 0)

  000a6	83 bd e8 01 00
	00 00		 cmp	 DWORD PTR v$[rbp], 0
  000ad	75 11		 jne	 SHORT $LN8@PMC_Multip

; 464  :             {
; 465  :                 // v が 0 である場合
; 466  : 
; 467  :                 //  0  を返す。
; 468  :                 return (&number_zero);

  000af	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  000b6	e9 0d 01 00 00	 jmp	 $LN1@PMC_Multip
  000bb	e9 08 01 00 00	 jmp	 $LN1@PMC_Multip
$LN8@PMC_Multip:

; 469  :             }
; 470  :             else if (v == 1)

  000c0	83 bd e8 01 00
	00 01		 cmp	 DWORD PTR v$[rbp], 1
  000c7	75 16		 jne	 SHORT $LN10@PMC_Multip

; 471  :             {
; 472  :                 // v が 1 である場合
; 473  : 
; 474  :                 // 乗算結果は u に等しいため、u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 475  :                 return (DuplicateNumber(u));

  000c9	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000d0	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000d5	e9 ee 00 00 00	 jmp	 $LN1@PMC_Multip

; 476  :             }
; 477  :             else

  000da	e9 e9 00 00 00	 jmp	 $LN1@PMC_Multip
$LN10@PMC_Multip:

; 478  :             {
; 479  :                 // u と v がともに 0 、1 のどちらでもない場合
; 480  : 
; 481  :                 // u と v の積を計算する
; 482  :                 ResourceHolderUINT root;

  000df	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  000e3	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000e8	90		 npad	 1

; 483  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  000e9	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000f0	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000f4	48 89 45 48	 mov	 QWORD PTR u_bit_count$5[rbp], rax

; 484  :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  000f8	8b 8d e8 01 00
	00		 mov	 ecx, DWORD PTR v$[rbp]
  000fe	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  00103	48 98		 cdqe
  00105	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0010a	48 2b c8	 sub	 rcx, rax
  0010d	48 8b c1	 mov	 rax, rcx
  00110	48 89 45 68	 mov	 QWORD PTR v_bit_count$6[rbp], rax

; 485  :                 __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  00114	48 8b 45 68	 mov	 rax, QWORD PTR v_bit_count$6[rbp]
  00118	48 8b 4d 48	 mov	 rcx, QWORD PTR u_bit_count$5[rbp]
  0011c	48 03 c8	 add	 rcx, rax
  0011f	48 8b c1	 mov	 rax, rcx
  00122	48 89 85 88 00
	00 00		 mov	 QWORD PTR w_bit_count$7[rbp], rax

; 486  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00129	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w_bit_count$7[rbp]
  00130	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00134	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00139	48 89 85 a8 00
	00 00		 mov	 QWORD PTR w$8[rbp], rax

; 487  :                 (*fp_Multiply_X_1W)(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK);

  00140	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA
  00147	48 89 85 b8 01
	00 00		 mov	 QWORD PTR tv131[rbp], rax
  0014e	8b 85 e8 01 00
	00		 mov	 eax, DWORD PTR v$[rbp]
  00154	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  0015b	4c 8b 49 40	 mov	 r9, QWORD PTR [rcx+64]
  0015f	44 8b c0	 mov	 r8d, eax
  00162	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00169	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  0016d	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00174	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00178	ff 95 b8 01 00
	00		 call	 QWORD PTR tv131[rbp]

; 488  :                 root.CheckNumber(w);

  0017e	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  00185	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00189	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 489  :                 CommitNumber(w);

  0018e	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  00195	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 490  :                 root.UnlinkNumber(w);

  0019a	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  001a1	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  001a5	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 491  :                 return (w);

  001aa	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  001b1	48 89 85 88 01
	00 00		 mov	 QWORD PTR $T9[rbp], rax
  001b8	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  001bc	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001c1	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR $T9[rbp]
$LN1@PMC_Multip:

; 492  :             }
; 493  :         }
; 494  :     }

  001c8	48 8b f8	 mov	 rdi, rax
  001cb	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcFrameData
  001d6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001db	48 8b c7	 mov	 rax, rdi
  001de	48 8d a5 c8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+456]
  001e5	5f		 pop	 rdi
  001e6	5d		 pop	 rbp
  001e7	c3		 ret	 0
?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 424
tv131 = 440
u$ = 480
v$ = 488
?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 424
tv131 = 440
u$ = 480
v$ = 488
?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
_TEXT	SEGMENT
tv70 = 192
u$ = 240
u_count$ = 248
v$ = 256
v_count$ = 264
w$ = 272
?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_X_Imp, COMDAT

; 41   :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__05528951_pmc_multiply@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 42   :         (*fp_Multiply_X_X)(u, u_count, v, v_count, w);

  00045	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  00053	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  0005a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005f	4c 8b 8d 08 01
	00 00		 mov	 r9, QWORD PTR v_count$[rbp]
  00066	4c 8b 85 00 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0006d	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  00074	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  0007b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv70[rbp]

; 43   :     }

  00081	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00088	5f		 pop	 rdi
  00089	5d		 pop	 rbp
  0008a	c3		 ret	 0
?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_X_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT

; 295  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 296  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 291  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 290  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 291  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 292  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 286  :         {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004b	90		 npad	 1

; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  0004c	4c 8b 8d 10 01
	00 00		 mov	 r9, QWORD PTR data$[rbp]
  00053	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0005a	ba 00 ff ff ff	 mov	 edx, -256		; ffffffffffffff00H
  0005f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0006b	90		 npad	 1

; 286  :         {

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  0007a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 287  :         }

  0007d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT

; 124  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 125  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 120  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 119  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 120  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 121  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 115  :         {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004b	90		 npad	 1

; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  0004c	4c 8b 8d 10 01
	00 00		 mov	 r9, QWORD PTR param_name$[rbp]
  00053	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0005a	ba fe ff ff ff	 mov	 edx, -2
  0005f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0006b	90		 npad	 1

; 115  :         {

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  0007a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 116  :         }

  0007d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT

; 70   :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 62   :         Exception(const Exception& p) noexcept(true)

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  00053	90		 npad	 1
  00054	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 63   :         {
; 64   :             _code = p._code;

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00073	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  00076	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 65   :             _message = p._message;

  00079	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00080	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00087	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  0008b	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 66   :             _data = p._data;

  0008f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  0009d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  000a1	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 67   :         }

  000a5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00038	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0004a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004f	90		 npad	 1
  00050	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  0005c	90		 npad	 1
  0005d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 55   :         {
; 56   :             _code = code;

  0006e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	8b 8d 08 01 00
	00		 mov	 ecx, DWORD PTR code$[rbp]
  0007b	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 57   :             _message = message;

  0007e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00085	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR message$[rbp]
  0008c	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 58   :             _data = data;

  00090	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00097	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR data$[rbp]
  0009e	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 59   :         }

  000a2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a9	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b0	5f		 pop	 rdi
  000b1	5d		 pop	 rbp
  000b2	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 90   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00042	74 14		 je	 SHORT $LN3@what
  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00056	eb 0e		 jmp	 SHORT $LN4@what
$LN3@what:
  00058	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0005f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  00066	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 92   :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 86   :         __std_exception_destroy(&_Data);

  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 __std_exception_destroy
  00066	90		 npad	 1

; 87   :     }

  00067	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0exception@std@@QEAA@XZ PROC				; std::exception::exception, COMDAT

; 50   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 49   :         : _Data()

  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b f8	 mov	 rdi, rax
  00061	33 c0		 xor	 eax, eax
  00063	b9 10 00 00 00	 mov	 ecx, 16
  00068	f3 aa		 rep stosb

; 51   :     }

  0006a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??0exception@std@@QEAA@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
