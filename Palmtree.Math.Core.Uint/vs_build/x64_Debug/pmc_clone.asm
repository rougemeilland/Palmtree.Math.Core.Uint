; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__9C731D93_pmc_clone@c DB 01H
msvcjmc	ENDS
PUBLIC	Initialize_Clone
PUBLIC	PMC_Clone_X
PUBLIC	__JustMyCode_Default
EXTRN	CheckNumber:PROC
EXTRN	DuplicateNumber:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	number_zero:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$Initialize_Clone DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$Initialize_Clone
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$PMC_Clone_X DD imagerel $LN10
	DD	imagerel $LN10+263
	DD	imagerel $unwind$PMC_Clone_X
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PMC_Clone_X DD 025052f01H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
PMC_Clone_X$rtcName$0 DB 06eH
	DB	06fH
	DB	00H
	ORG $+13
PMC_Clone_X$rtcVarDesc DD 068H
	DD	08H
	DQ	FLAT:PMC_Clone_X$rtcName$0
	ORG $+48
PMC_Clone_X$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:PMC_Clone_X$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$Initialize_Clone DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_clone.c
;	COMDAT PMC_Clone_X
_TEXT	SEGMENT
nx$ = 8
result$ = 36
no$ = 72
x$ = 320
o$ = 328
PMC_Clone_X PROC					; COMDAT

; 31   : {

$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	lea	rcx, OFFSET FLAT:__9C731D93_pmc_clone@c
	call	__CheckForDebuggerJustMyCode

; 32   :     if (x == NULL)

	cmp	QWORD PTR x$[rbp], 0
	jne	SHORT $LN2@PMC_Clone_

; 33   :         return (PMC_STATUS_ARGUMENT_ERROR);

	mov	eax, -1
	jmp	$LN1@PMC_Clone_
$LN2@PMC_Clone_:

; 34   :     if (o == NULL)

	cmp	QWORD PTR o$[rbp], 0
	jne	SHORT $LN3@PMC_Clone_

; 35   :         return (PMC_STATUS_ARGUMENT_ERROR);

	mov	eax, -1
	jmp	$LN1@PMC_Clone_
$LN3@PMC_Clone_:

; 36   :     NUMBER_HEADER* nx = (NUMBER_HEADER*)x;

	mov	rax, QWORD PTR x$[rbp]
	mov	QWORD PTR nx$[rbp], rax

; 37   :     PMC_STATUS_CODE result;
; 38   :     if ((result = CheckNumber(nx)) != PMC_STATUS_OK)

	mov	rcx, QWORD PTR nx$[rbp]
	call	CheckNumber
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	je	SHORT $LN4@PMC_Clone_

; 39   :         return (result);

	mov	eax, DWORD PTR result$[rbp]
	jmp	SHORT $LN1@PMC_Clone_
$LN4@PMC_Clone_:

; 40   :     NUMBER_HEADER* no;
; 41   :     if (nx->IS_ZERO)

	mov	rax, QWORD PTR nx$[rbp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@PMC_Clone_

; 42   :         no = &number_zero;

	lea	rax, OFFSET FLAT:number_zero
	mov	QWORD PTR no$[rbp], rax
	jmp	SHORT $LN6@PMC_Clone_
$LN5@PMC_Clone_:

; 43   :     else
; 44   :     {
; 45   :         if ((result = DuplicateNumber(nx, &no)) != PMC_STATUS_OK)

	lea	rdx, QWORD PTR no$[rbp]
	mov	rcx, QWORD PTR nx$[rbp]
	call	DuplicateNumber
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	je	SHORT $LN7@PMC_Clone_

; 46   :             return (result);

	mov	eax, DWORD PTR result$[rbp]
	jmp	SHORT $LN1@PMC_Clone_
$LN7@PMC_Clone_:
$LN6@PMC_Clone_:

; 47   :     }
; 48   :     *o = (PMC_HANDLE_UINT)no;

	mov	rax, QWORD PTR o$[rbp]
	mov	rcx, QWORD PTR no$[rbp]
	mov	QWORD PTR [rax], rcx

; 49   : #ifdef _DEBUG
; 50   :     if ((result = CheckNumber((NUMBER_HEADER*)*o)) != PMC_STATUS_OK)

	mov	rax, QWORD PTR o$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	CheckNumber
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	je	SHORT $LN8@PMC_Clone_

; 51   :         return (result);

	mov	eax, DWORD PTR result$[rbp]
	jmp	SHORT $LN1@PMC_Clone_
$LN8@PMC_Clone_:

; 52   : #endif
; 53   :     return (PMC_STATUS_OK);

	xor	eax, eax
$LN1@PMC_Clone_:

; 54   : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:PMC_Clone_X$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
PMC_Clone_X ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_clone.c
;	COMDAT Initialize_Clone
_TEXT	SEGMENT
feature$ = 224
Initialize_Clone PROC					; COMDAT

; 57   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__9C731D93_pmc_clone@c
	call	__CheckForDebuggerJustMyCode

; 58   :     return (PMC_STATUS_OK);

	xor	eax, eax

; 59   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
Initialize_Clone ENDP
_TEXT	ENDS
END
