; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__77F53984_cstddef DB 01H
__188180DA_corecrt_math@h DB 01H
__D23EE329_cstdlib DB 01H
__5ECFF36E_type_traits DB 01H
__331E732B_malloc@h DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__7949CB39_exception DB 01H
__802FEEC0_pmc_exception@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__1AB12E38_pmc_resourceholder@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__E05E7037_autogenerated_inline_func@h DB 01H
__849DF3BE_pmc_subtruct@cpp DB 01H
msvcjmc	ENDS
PUBLIC	??0exception@std@@QEAA@XZ			; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
PUBLIC	??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
PUBLIC	??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::OverflowException::~OverflowException
PUBLIC	??_GOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::OverflowException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K0101@Z ; Palmtree::Math::Core::Internal::Subtruct_Imp
PUBLIC	?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Subtruct
PUBLIC	?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
PUBLIC	?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
PUBLIC	?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
PUBLIC	?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
PUBLIC	?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7OverflowException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::OverflowException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ ; `string'
PUBLIC	_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVOverflowException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::OverflowException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@ ; `string'
PUBLIC	??_C@_1EI@PKFECEIC@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_13JAOPNPKD@?$AAv@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_1EI@NNPILEKE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	??_C@_13ICFKHAEN@?$AAu@				; `string'
PUBLIC	??_C@_1EI@GCPHFDJC@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	??_C@_1EI@JFBILKMA@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Complete Object Locator'
PUBLIC	??_R3OverflowException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OverflowException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@OverflowException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::OverflowException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::DuplicateNumber
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A:BYTE ; Palmtree::Math::Core::Internal::number_zero
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??0exception@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+182
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K0101@Z DD imagerel $LN10
	DD	imagerel $LN10+855
	DD	imagerel $unwind$?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K0101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z DD imagerel $LN14
	DD	imagerel $LN14+506
	DD	imagerel $unwind$?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z DD imagerel $LN29
	DD	imagerel $LN29+1096
	DD	imagerel $unwind$?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD imagerel $LN7
	DD	imagerel $LN7+318
	DD	imagerel $unwind$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA DD imagerel ?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD imagerel $LN7
	DD	imagerel $LN7+320
	DD	imagerel $unwind$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA DD imagerel ?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD imagerel $LN7
	DD	imagerel $LN7+356
	DD	imagerel $unwind$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA DD imagerel ?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_FROMWORDTODWORD DD imagerel _FROMWORDTODWORD
	DD	imagerel _FROMWORDTODWORD+85
	DD	imagerel $unwind$_FROMWORDTODWORD
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_FROMDWORDTOWORD DD imagerel _FROMDWORDTOWORD
	DD	imagerel _FROMDWORDTOWORD+95
	DD	imagerel $unwind$_FROMDWORDTOWORD
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_SUBTRUCT_UNIT DD imagerel _SUBTRUCT_UNIT
	DD	imagerel _SUBTRUCT_UNIT+118
	DD	imagerel $unwind$_SUBTRUCT_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_LZCNT_ALT_32 DD imagerel _LZCNT_ALT_32
	DD	imagerel _LZCNT_ALT_32+126
	DD	imagerel $unwind$_LZCNT_ALT_32
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_LZCNT_ALT_UNIT DD imagerel _LZCNT_ALT_UNIT
	DD	imagerel _LZCNT_ALT_UNIT+131
	DD	imagerel $unwind$_LZCNT_ALT_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_SUBTRUCT_32WORDS_SBB DD imagerel _SUBTRUCT_32WORDS_SBB
	DD	imagerel _SUBTRUCT_32WORDS_SBB+2741
	DD	imagerel $unwind$_SUBTRUCT_32WORDS_SBB
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_SUBTRUCT_16WORDS_SBB DD imagerel _SUBTRUCT_16WORDS_SBB
	DD	imagerel _SUBTRUCT_16WORDS_SBB+1413
	DD	imagerel $unwind$_SUBTRUCT_16WORDS_SBB
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_SUBTRUCT_8WORDS_SBB DD imagerel _SUBTRUCT_8WORDS_SBB
	DD	imagerel _SUBTRUCT_8WORDS_SBB+749
	DD	imagerel $unwind$_SUBTRUCT_8WORDS_SBB
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_SUBTRUCT_4WORDS_SBB DD imagerel _SUBTRUCT_4WORDS_SBB
	DD	imagerel _SUBTRUCT_4WORDS_SBB+417
	DD	imagerel $unwind$_SUBTRUCT_4WORDS_SBB
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_SUBTRUCT_2WORDS_SBB DD imagerel _SUBTRUCT_2WORDS_SBB
	DD	imagerel _SUBTRUCT_2WORDS_SBB+251
	DD	imagerel $unwind$_SUBTRUCT_2WORDS_SBB
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z DD imagerel ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z
	DD	imagerel ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z+423
	DD	imagerel $unwind$?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z DD imagerel ?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z
	DD	imagerel ?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z+253
	DD	imagerel $unwind$?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z DD imagerel ?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z
	DD	imagerel ?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z+408
	DD	imagerel $unwind$?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel ?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	imagerel ?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+543
	DD	imagerel $unwind$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA DD imagerel ?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+1305
	DD	imagerel $unwind$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD imagerel ?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD imagerel ?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	imagerel ?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD imagerel ?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	imagerel ?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD imagerel ?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	imagerel ?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+571
	DD	imagerel $unwind$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA DD imagerel ?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OverflowException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2OverflowException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@OverflowException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3OverflowException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3OverflowException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 01H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EI@JFBILKMA@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EI@JFBILKMA@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 'u', 00H, 'b', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, '_', 00H, 'X', 00H, '_', 00H, 'L', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@GCPHFDJC@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EI@GCPHFDJC@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 'u', 00H, 'b', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, '_', 00H, 'L', 00H, '_', 00H, 'X', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_13ICFKHAEN@?$AAu@
CONST	SEGMENT
??_C@_13ICFKHAEN@?$AAu@ DB 'u', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@NNPILEKE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EI@NNPILEKE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 'u', 00H, 'b', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, '_', 00H, 'X', 00H, '_', 00H, 'I', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13JAOPNPKD@?$AAv@
CONST	SEGMENT
??_C@_13JAOPNPKD@?$AAv@ DB 'v', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1EI@PKFECEIC@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EI@PKFECEIC@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 'u', 00H, 'b', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H, 'M', 00H, 'C', 00H
	DB	'_', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, '_', 00H, 'I', 00H, '_', 00H, 'X', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
CONST	SEGMENT
??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@ DB 01bH
	DB	'n', 097H, '{k0', 088H, '0', 08aH, '0', 0aaH, '0', 0fcH, '0', 0d0H
	DB	'0', 0fcH, '0', 0d5H, '0', 0edH, '0', 0fcH, '0L0zv', 01fH, 'uW'
	DB	'0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::OverflowException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVOverflowException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVOverflowException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVOverflowException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVOverflowException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
CONST	SEGMENT
??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ DB 088H
	DB	'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H, '0k00RT', 090H
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DQ	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7OverflowException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7OverflowException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::OverflowException::`vftable'
	DQ	FLAT:??_EOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DQ	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DQ	FLAT:??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD imagerel ?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+211
	DD	00H
	DD	imagerel ?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+523
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 035053a11H
	DD	01133318H
	DD	0700c0053H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcVarDesc DD 038H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp
	DD	020H
	DQ	FLAT:?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcName$0
	ORG $+48
?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp
	DD	00H
	DQ	FLAT:?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcVarDesc
$cppxdata$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	0278H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+333
	DD	00H
	DD	imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+546
	DD	0ffffffffH
	DD	imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+588
	DD	01H
	DD	imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+891
	DD	0ffffffffH
	DD	imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+933
	DD	02H
	DD	imagerel ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+1254
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 035053a11H
	DD	01133318H
	DD	0700c00d3H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$0 DB 076H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
	DB	05fH
	DB	068H
	DB	069H
	DB	00H
	ORG $+3
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$1 DB 072H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$2 DB 072H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$3 DB 072H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcVarDesc DD 01d8H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
	DD	020H
	DQ	FLAT:?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$3
	DD	0138H
	DD	020H
	DQ	FLAT:?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$2
	DD	0b8H
	DD	020H
	DQ	FLAT:?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$1
	DD	054H
	DD	04H
	DQ	FLAT:?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcName$0
	ORG $+192
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcFrameData DD 04H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
	DD	00H
	DQ	FLAT:?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcVarDesc
$cppxdata$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	0678H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel ?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+291
	DD	00H
	DD	imagerel ?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+495
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 035053911H
	DD	01123317H
	DD	0700b0053H
	DD	0500aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcVarDesc DD 078H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp
	DD	020H
	DQ	FLAT:?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcName$0
	ORG $+48
?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp
	DD	00H
	DQ	FLAT:?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcVarDesc
$cppxdata$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	0278H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z DD 035053901H
	DD	011d3322H
	DD	07016002fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z DD 035053901H
	DD	011d3322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z DD 025053801H
	DD	011c2321H
	DD	070150029H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_SUBTRUCT_2WORDS_SBB DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_SUBTRUCT_4WORDS_SBB DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_SUBTRUCT_8WORDS_SBB DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_SUBTRUCT_16WORDS_SBB DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_SUBTRUCT_32WORDS_SBB DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_LZCNT_ALT_UNIT DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
_LZCNT_ALT_UNIT$rtcName$0 DB 070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
_LZCNT_ALT_UNIT$rtcVarDesc DD 024H
	DD	04H
	DQ	FLAT:_LZCNT_ALT_UNIT$rtcName$0
	ORG $+48
_LZCNT_ALT_UNIT$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:_LZCNT_ALT_UNIT$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_LZCNT_ALT_32 DD 025052801H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
_LZCNT_ALT_32$rtcName$0 DB 070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
_LZCNT_ALT_32$rtcVarDesc DD 024H
	DD	04H
	DQ	FLAT:_LZCNT_ALT_32$rtcName$0
	ORG $+48
_LZCNT_ALT_32$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:_LZCNT_ALT_32$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_SUBTRUCT_UNIT DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_FROMDWORDTOWORD DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_FROMWORDTODWORD DD 025052c01H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD imagerel ?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+230
	DD	00H
	DD	imagerel ?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+308
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 025053a11H
	DD	01132318H
	DD	0700c004dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
	DD	020H
	DQ	FLAT:?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcName$0
	ORG $+48
?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
	DD	00H
	DQ	FLAT:?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcVarDesc
$cppxdata$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	0248H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD imagerel ?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z+206
	DD	00H
	DD	imagerel ?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z+272
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 025053a11H
	DD	01132318H
	DD	0700c0049H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcVarDesc DD 048H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
	DD	020H
	DQ	FLAT:?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcName$0
	ORG $+48
?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
	DD	00H
	DQ	FLAT:?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcVarDesc
$cppxdata$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	0228H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD imagerel ?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z+205
	DD	00H
	DD	imagerel ?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z+270
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 025053911H
	DD	01122317H
	DD	0700b0049H
	DD	0500aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcVarDesc DD 048H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
	DD	020H
	DQ	FLAT:?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcName$0
	ORG $+48
?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
	DD	00H
	DQ	FLAT:?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcVarDesc
$cppxdata$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	0228H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z DD 025052f01H
	DD	01132318H
	DD	0700c00e7H
	DD	0500bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$0 DB 075H ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
	DB	05fH
	DB	068H
	DB	069H
	DB	00H
	ORG $+3
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$1 DB 074H ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
	DB	065H
	DB	06dH
	DB	070H
	DB	05fH
	DB	077H
	DB	00H
	ORG $+1
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$2 DB 074H ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
	DB	065H
	DB	06dH
	DB	070H
	DB	05fH
	DB	077H
	DB	05fH
	DB	068H
	DB	069H
	DB	00H
	ORG $+6
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$3 DB 074H ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
	DB	065H
	DB	06dH
	DB	070H
	DB	05fH
	DB	077H
	DB	05fH
	DB	06cH
	DB	06fH
	DB	00H
	ORG $+2
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$4 DB 074H ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
	DB	065H
	DB	06dH
	DB	070H
	DB	05fH
	DB	077H
	DB	00H
	ORG $+5
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcFrameData DD 05H ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
	DD	00H
	DQ	FLAT:?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcVarDesc
	ORG $+8
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcVarDesc DD 01e8H ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
	DD	08H
	DQ	FLAT:?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$4
	DD	0168H
	DD	08H
	DQ	FLAT:?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$3
	DD	0148H
	DD	08H
	DQ	FLAT:?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$2
	DD	0c8H
	DD	08H
	DQ	FLAT:?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$1
	DD	044H
	DD	04H
	DQ	FLAT:?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z DD 025052d01H
	DD	01122317H
	DD	0700b007bH
	DD	0500aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$0 DB 074H ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
	DB	065H
	DB	06dH
	DB	070H
	DB	05fH
	DB	077H
	DB	00H
	ORG $+9
?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcVarDesc DD 088H ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
	DD	08H
	DQ	FLAT:?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$0
	ORG $+48
?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
	DD	00H
	DQ	FLAT:?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K0101@Z DD 035053901H
	DD	011d3322H
	DD	070160029H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+108
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 025053f19H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+96
	DD	00H
	DD	imagerel ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+113
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+108
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 025053f19H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+84
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+165
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+93
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+162
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 025054319H
	DD	011c2321H
	DD	070150021H
	DD	05014H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z+88
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z+154
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 025053e19H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@XZ DD imagerel ??0exception@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0exception@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0exception@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0exception@std@@QEAA@XZ
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
_TEXT	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 472
$T11 = 552
$T12 = 584
u$ = 640
v$ = 648
?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp, COMDAT

; 652  :     {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 98 02
	00 00		 sub	 rsp, 664		; 00000298H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 a6 00 00 00	 mov	 ecx, 166		; 000000a6H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR [rsp+696]
  0002f	48 c7 85 48 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T12[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 653  :         if (u->IS_ZERO)

  00046	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 4b		 je	 SHORT $LN2@PMC_Subtru

; 654  :         {
; 655  :             if (v->IS_ZERO)

  00057	48 8b 85 88 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  0005e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00061	83 e0 01	 and	 eax, 1
  00064	85 c0		 test	 eax, eax
  00066	74 0e		 je	 SHORT $LN4@PMC_Subtru

; 656  :             {
; 657  :                 // y が 0 である場合
; 658  : 
; 659  :                 // x と y がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 660  :                 return (&number_zero);

  00068	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0006f	e9 a7 01 00 00	 jmp	 $LN11@PMC_Subtru

; 661  :             }
; 662  :             else

  00074	eb 27		 jmp	 SHORT $LN5@PMC_Subtru
$LN4@PMC_Subtru:

; 663  :             {
; 664  :                 // y が 0 ではない場合
; 665  : 
; 666  :                 // 演算結果は負となってしまうのでエラーを返す。
; 667  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0007d	48 8d 8d 88 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  00084	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00090	48 8d 8d 88 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  00097	e8 00 00 00 00	 call	 _CxxThrowException
  0009c	90		 npad	 1
$LN5@PMC_Subtru:

; 668  :             }
; 669  :         }
; 670  :         else

  0009d	e9 79 01 00 00	 jmp	 $LN11@PMC_Subtru
$LN2@PMC_Subtru:

; 671  :         {
; 672  :             // x が 0 ではない場合
; 673  : 
; 674  :             if (v->IS_ZERO)

  000a2	48 8b 85 88 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000a9	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000ac	83 e0 01	 and	 eax, 1
  000af	85 c0		 test	 eax, eax
  000b1	74 16		 je	 SHORT $LN6@PMC_Subtru

; 675  :             {
; 676  :                 // y が 0 である場合
; 677  : 
; 678  :                 // 演算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 679  :                 return (DuplicateNumber(u));

  000b3	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000ba	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000bf	e9 57 01 00 00	 jmp	 $LN11@PMC_Subtru

; 680  :             }
; 681  :             else

  000c4	e9 52 01 00 00	 jmp	 $LN11@PMC_Subtru
$LN6@PMC_Subtru:

; 682  :             {
; 683  :                 // x と y がともに 0 ではない場合
; 684  : 
; 685  :                 // x と y の差を計算する
; 686  :                 ResourceHolderUINT root;

  000c9	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  000cd	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000d2	90		 npad	 1

; 687  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  000d3	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000da	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000de	48 89 45 48	 mov	 QWORD PTR u_bit_count$5[rbp], rax

; 688  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  000e2	48 8b 85 88 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000e9	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000ed	48 89 45 68	 mov	 QWORD PTR v_bit_count$6[rbp], rax

; 689  :                 if (u_bit_count < v_bit_count)

  000f1	48 8b 45 68	 mov	 rax, QWORD PTR v_bit_count$6[rbp]
  000f5	48 39 45 48	 cmp	 QWORD PTR u_bit_count$5[rbp], rax
  000f9	73 26		 jae	 SHORT $LN8@PMC_Subtru

; 690  :                 {
; 691  :                     // 演算結果は負となってしまうのでエラーを返す。
; 692  :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");

  000fb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00102	48 8d 8d d8 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00109	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  0010e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00115	48 8d 8d d8 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0011c	e8 00 00 00 00	 call	 _CxxThrowException
$LN8@PMC_Subtru:

; 693  :                 }
; 694  :                 __UNIT_TYPE w_bit_count = u_bit_count;

  00121	48 8b 45 48	 mov	 rax, QWORD PTR u_bit_count$5[rbp]
  00125	48 89 85 88 00
	00 00		 mov	 QWORD PTR w_bit_count$7[rbp], rax

; 695  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0012c	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w_bit_count$7[rbp]
  00133	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00137	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  0013c	48 89 85 a8 00
	00 00		 mov	 QWORD PTR w$8[rbp], rax

; 696  :                 Subtruct_Imp(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, w->BLOCK, w->BLOCK_COUNT);

  00143	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  0014a	48 8b 40 38	 mov	 rax, QWORD PTR [rax+56]
  0014e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00153	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  0015a	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  0015e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00163	48 8b 85 88 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  0016a	4c 8b 48 18	 mov	 r9, QWORD PTR [rax+24]
  0016e	48 8b 85 88 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  00175	4c 8b 40 40	 mov	 r8, QWORD PTR [rax+64]
  00179	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00180	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00184	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0018b	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0018f	e8 00 00 00 00	 call	 ?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K0101@Z ; Palmtree::Math::Core::Internal::Subtruct_Imp

; 697  :                 root.CheckNumber(w);

  00194	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  0019b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  0019f	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 698  :                 CommitNumber(w);

  001a4	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  001ab	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 699  :                 CommitNumber(w);

  001b0	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  001b7	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 700  :                 if (w->IS_ZERO)

  001bc	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  001c3	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  001c6	83 e0 01	 and	 eax, 1
  001c9	85 c0		 test	 eax, eax
  001cb	74 20		 je	 SHORT $LN9@PMC_Subtru

; 701  :                 {
; 702  :                     root.DeallocateNumber(w);

  001cd	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  001d4	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  001d8	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 703  :                     w = &number_zero;

  001dd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  001e4	48 89 85 a8 00
	00 00		 mov	 QWORD PTR w$8[rbp], rax

; 704  :                 }
; 705  :                 else

  001eb	eb 10		 jmp	 SHORT $LN10@PMC_Subtru
$LN9@PMC_Subtru:

; 706  :                     root.UnlinkNumber(w);

  001ed	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  001f4	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  001f8	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN10@PMC_Subtru:

; 707  :                 return (w);

  001fd	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  00204	48 89 85 28 02
	00 00		 mov	 QWORD PTR $T11[rbp], rax
  0020b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  0020f	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00214	48 8b 85 28 02
	00 00		 mov	 rax, QWORD PTR $T11[rbp]
$LN11@PMC_Subtru:

; 708  :             }
; 709  :         }
; 710  :     }

  0021b	48 8b f8	 mov	 rdi, rax
  0021e	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00222	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcFrameData
  00229	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0022e	48 8b c7	 mov	 rax, rdi
  00231	48 8d a5 68 02
	00 00		 lea	 rsp, QWORD PTR [rbp+616]
  00238	5f		 pop	 rdi
  00239	5d		 pop	 rbp
  0023a	c3		 ret	 0
$LN13@PMC_Subtru:
?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 472
$T11 = 552
$T12 = 584
u$ = 640
v$ = 648
?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 472
$T11 = 552
$T12 = 584
u$ = 640
v$ = 648
?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
_TEXT	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
v_bit_count$10 = 104
root$11 = 136
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
x_bit_count$19 = 488
y_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1192
$T24 = 1272
$T25 = 1352
$T26 = 1384
$T27 = 1464
$T28 = 1496
$T29 = 1576
$T30 = 1608
u$ = 1664
v$ = 1672
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp, COMDAT

; 506  :     {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 98 06
	00 00		 sub	 rsp, 1688		; 00000698H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 a6 01 00 00	 mov	 ecx, 422		; 000001a6H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR [rsp+1720]
  0002f	48 c7 85 48 06
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T30[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 507  :         if (u->IS_ZERO)

  00046	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 44		 je	 SHORT $LN2@PMC_Subtru

; 508  :         {
; 509  :             // u が 0 である場合
; 510  : 
; 511  :             if (v == 0)

  00057	48 83 bd 88 06
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  0005f	75 0e		 jne	 SHORT $LN4@PMC_Subtru

; 512  :             {
; 513  :                 // v が 0 である場合
; 514  : 
; 515  :                 // u と v がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 516  :                 return (&number_zero);

  00061	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00068	e9 8c 04 00 00	 jmp	 $LN22@PMC_Subtru

; 517  :             }
; 518  :             else

  0006d	eb 27		 jmp	 SHORT $LN5@PMC_Subtru
$LN4@PMC_Subtru:

; 519  :             {
; 520  :                 // v が 0 ではない場合
; 521  : 
; 522  :                 // 演算結果は負となってしまうのでエラーを返す。
; 523  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00076	48 8d 8d a8 04
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  0007d	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00082	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00089	48 8d 8d a8 04
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  00090	e8 00 00 00 00	 call	 _CxxThrowException
  00095	90		 npad	 1
$LN5@PMC_Subtru:

; 524  :             }
; 525  :         }
; 526  :         else

  00096	e9 5e 04 00 00	 jmp	 $LN22@PMC_Subtru
$LN2@PMC_Subtru:

; 527  :         {
; 528  :             // u が 0 ではない場合
; 529  : 
; 530  :             if (v == 0)

  0009b	48 83 bd 88 06
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  000a3	75 16		 jne	 SHORT $LN6@PMC_Subtru

; 531  :             {
; 532  :                 // v が 0 である場合
; 533  : 
; 534  :                 // 演算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 535  :                 return (DuplicateNumber(u));

  000a5	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000ac	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000b1	e9 43 04 00 00	 jmp	 $LN22@PMC_Subtru

; 536  :             }
; 537  :             else

  000b6	e9 3e 04 00 00	 jmp	 $LN22@PMC_Subtru
$LN6@PMC_Subtru:

; 538  :             {
; 539  :                 // u と v がともに 0 ではない場合
; 540  : 
; 541  :                 // u と v の差を計算する
; 542  :                 if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	0f 84 d3 02 00
	00		 je	 $LN8@PMC_Subtru

; 543  :                 {
; 544  :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 545  : 
; 546  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  000c5	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000cc	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000d0	48 89 45 08	 mov	 QWORD PTR u_bit_count$7[rbp], rax

; 547  :                     _UINT32_T v_hi;
; 548  :                     _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);

  000d4	48 8d 55 24	 lea	 rdx, QWORD PTR v_hi$8[rbp]
  000d8	48 8b 8d 88 06
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  000df	e8 00 00 00 00	 call	 _FROMDWORDTOWORD
  000e4	89 45 44	 mov	 DWORD PTR v_lo$9[rbp], eax

; 549  :                     if (v_hi == 0)

  000e7	83 7d 24 00	 cmp	 DWORD PTR v_hi$8[rbp], 0
  000eb	0f 85 4e 01 00
	00		 jne	 $LN10@PMC_Subtru

; 550  :                     {
; 551  :                         // y の値が 32bit で表現可能な場合
; 552  :                         __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);

  000f1	8b 4d 44	 mov	 ecx, DWORD PTR v_lo$9[rbp]
  000f4	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  000f9	48 98		 cdqe
  000fb	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00100	48 2b c8	 sub	 rcx, rax
  00103	48 8b c1	 mov	 rax, rcx
  00106	48 89 45 68	 mov	 QWORD PTR v_bit_count$10[rbp], rax

; 553  :                         if (u_bit_count < v_bit_count)

  0010a	48 8b 45 68	 mov	 rax, QWORD PTR v_bit_count$10[rbp]
  0010e	48 39 45 08	 cmp	 QWORD PTR u_bit_count$7[rbp], rax
  00112	73 2c		 jae	 SHORT $LN12@PMC_Subtru

; 554  :                         {
; 555  :                             // 演算結果は負となってしまうのでエラーを返す。
; 556  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0011b	48 8d 8d f8 04
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  00122	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0012e	48 8d 8d f8 04
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  00135	e8 00 00 00 00	 call	 _CxxThrowException
  0013a	90		 npad	 1

; 557  :                         }
; 558  :                         else

  0013b	e9 fa 00 00 00	 jmp	 $LN13@PMC_Subtru
$LN12@PMC_Subtru:

; 559  :                         {
; 560  :                             ResourceHolderUINT root;

  00140	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR root$11[rbp]
  00147	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0014c	90		 npad	 1

; 561  :                             __UNIT_TYPE w_bit_count = u_bit_count;

  0014d	48 8b 45 08	 mov	 rax, QWORD PTR u_bit_count$7[rbp]
  00151	48 89 85 c8 00
	00 00		 mov	 QWORD PTR w_bit_count$12[rbp], rax

; 562  :                             NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00158	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR w_bit_count$12[rbp]
  0015f	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR root$11[rbp]
  00166	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  0016b	48 89 85 e8 00
	00 00		 mov	 QWORD PTR w$13[rbp], rax

; 563  :                             Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v_lo, w->BLOCK, w->BLOCK_COUNT);

  00172	8b 45 44	 mov	 eax, DWORD PTR v_lo$9[rbp]
  00175	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR w$13[rbp]
  0017c	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  00180	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00185	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR w$13[rbp]
  0018c	4c 8b 49 40	 mov	 r9, QWORD PTR [rcx+64]
  00190	44 8b c0	 mov	 r8d, eax
  00193	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0019a	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  0019e	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  001a5	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  001a9	e8 00 00 00 00	 call	 ?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z ; Palmtree::Math::Core::Internal::Subtruct_X_1W

; 564  :                             root.CheckNumber(w);

  001ae	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR w$13[rbp]
  001b5	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR root$11[rbp]
  001bc	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 565  :                             CommitNumber(w);

  001c1	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR w$13[rbp]
  001c8	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 566  :                             if (w->IS_ZERO)

  001cd	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR w$13[rbp]
  001d4	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  001d7	83 e0 01	 and	 eax, 1
  001da	85 c0		 test	 eax, eax
  001dc	74 23		 je	 SHORT $LN14@PMC_Subtru

; 567  :                             {
; 568  :                                 root.DeallocateNumber(w);

  001de	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR w$13[rbp]
  001e5	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR root$11[rbp]
  001ec	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 569  :                                 w = &number_zero;

  001f1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  001f8	48 89 85 e8 00
	00 00		 mov	 QWORD PTR w$13[rbp], rax

; 570  :                             }
; 571  :                             else

  001ff	eb 13		 jmp	 SHORT $LN15@PMC_Subtru
$LN14@PMC_Subtru:

; 572  :                                 root.UnlinkNumber(w);

  00201	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR w$13[rbp]
  00208	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR root$11[rbp]
  0020f	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN15@PMC_Subtru:

; 573  :                             return (w);

  00214	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR w$13[rbp]
  0021b	48 89 85 48 05
	00 00		 mov	 QWORD PTR $T25[rbp], rax
  00222	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR root$11[rbp]
  00229	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0022e	48 8b 85 48 05
	00 00		 mov	 rax, QWORD PTR $T25[rbp]
  00235	e9 bf 02 00 00	 jmp	 $LN22@PMC_Subtru
$LN13@PMC_Subtru:

; 574  :                         }
; 575  :                     }
; 576  :                     else

  0023a	e9 54 01 00 00	 jmp	 $LN11@PMC_Subtru
$LN10@PMC_Subtru:

; 577  :                     {
; 578  :                         // y の値が 32bit では表現できない場合
; 579  :                         ResourceHolderUINT root;

  0023f	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  00246	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0024b	90		 npad	 1

; 580  :                         __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);

  0024c	8b 4d 24	 mov	 ecx, DWORD PTR v_hi$8[rbp]
  0024f	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  00254	48 98		 cdqe
  00256	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0025b	48 2b c8	 sub	 rcx, rax
  0025e	48 8b c1	 mov	 rax, rcx
  00261	48 89 85 48 01
	00 00		 mov	 QWORD PTR v_bit_count$15[rbp], rax

; 581  :                         if (u_bit_count < v_bit_count)

  00268	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_bit_count$15[rbp]
  0026f	48 39 45 08	 cmp	 QWORD PTR u_bit_count$7[rbp], rax
  00273	73 26		 jae	 SHORT $LN16@PMC_Subtru

; 582  :                         {
; 583  :                             // 演算結果は負となってしまうのでエラーを返す。
; 584  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00275	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0027c	48 8d 8d 68 05
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  00283	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00288	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0028f	48 8d 8d 68 05
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  00296	e8 00 00 00 00	 call	 _CxxThrowException
$LN16@PMC_Subtru:

; 585  :                         }
; 586  :                         __UNIT_TYPE w_bit_count = u_bit_count;

  0029b	48 8b 45 08	 mov	 rax, QWORD PTR u_bit_count$7[rbp]
  0029f	48 89 85 68 01
	00 00		 mov	 QWORD PTR w_bit_count$16[rbp], rax

; 587  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  002a6	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR w_bit_count$16[rbp]
  002ad	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  002b4	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  002b9	48 89 85 88 01
	00 00		 mov	 QWORD PTR w$17[rbp], rax

; 588  :                         Subtruct_X_2W(u->BLOCK, u->UNIT_WORD_COUNT, v_hi, v_lo, w->BLOCK, w->BLOCK_COUNT);

  002c0	8b 45 44	 mov	 eax, DWORD PTR v_lo$9[rbp]
  002c3	8b 4d 24	 mov	 ecx, DWORD PTR v_hi$8[rbp]
  002c6	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR w$17[rbp]
  002cd	48 8b 52 38	 mov	 rdx, QWORD PTR [rdx+56]
  002d1	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  002d6	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR w$17[rbp]
  002dd	48 8b 52 40	 mov	 rdx, QWORD PTR [rdx+64]
  002e1	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  002e6	44 8b c8	 mov	 r9d, eax
  002e9	44 8b c1	 mov	 r8d, ecx
  002ec	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  002f3	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  002f7	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  002fe	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00302	e8 00 00 00 00	 call	 ?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z ; Palmtree::Math::Core::Internal::Subtruct_X_2W

; 589  :                         root.CheckNumber(w);

  00307	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR w$17[rbp]
  0030e	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  00315	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 590  :                         CommitNumber(w);

  0031a	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR w$17[rbp]
  00321	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 591  :                         if (w->IS_ZERO)

  00326	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR w$17[rbp]
  0032d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00330	83 e0 01	 and	 eax, 1
  00333	85 c0		 test	 eax, eax
  00335	74 23		 je	 SHORT $LN17@PMC_Subtru

; 592  :                         {
; 593  :                             root.DeallocateNumber(w);

  00337	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR w$17[rbp]
  0033e	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  00345	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 594  :                             w = &number_zero;

  0034a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00351	48 89 85 88 01
	00 00		 mov	 QWORD PTR w$17[rbp], rax

; 595  :                         }
; 596  :                         else

  00358	eb 13		 jmp	 SHORT $LN18@PMC_Subtru
$LN17@PMC_Subtru:

; 597  :                             root.UnlinkNumber(w);

  0035a	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR w$17[rbp]
  00361	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  00368	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN18@PMC_Subtru:

; 598  :                         return (w);

  0036d	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR w$17[rbp]
  00374	48 89 85 b8 05
	00 00		 mov	 QWORD PTR $T27[rbp], rax
  0037b	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  00382	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00387	48 8b 85 b8 05
	00 00		 mov	 rax, QWORD PTR $T27[rbp]
  0038e	e9 66 01 00 00	 jmp	 $LN22@PMC_Subtru
$LN11@PMC_Subtru:

; 599  :                     }
; 600  :                 }
; 601  :                 else

  00393	e9 61 01 00 00	 jmp	 $LN22@PMC_Subtru
$LN8@PMC_Subtru:

; 602  :                 {
; 603  :                     // _UINT64_T が 1 ワードで表現できる場合
; 604  :                     ResourceHolderUINT root;

  00398	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  0039f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  003a4	90		 npad	 1

; 605  :                     __UNIT_TYPE x_bit_count = u->UNIT_BIT_COUNT;

  003a5	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  003ac	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  003b0	48 89 85 e8 01
	00 00		 mov	 QWORD PTR x_bit_count$19[rbp], rax

; 606  :                     __UNIT_TYPE y_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);

  003b7	48 8b 8d 88 06
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  003be	e8 00 00 00 00	 call	 _LZCNT_ALT_UNIT
  003c3	48 98		 cdqe
  003c5	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  003ca	48 2b c8	 sub	 rcx, rax
  003cd	48 8b c1	 mov	 rax, rcx
  003d0	48 89 85 08 02
	00 00		 mov	 QWORD PTR y_bit_count$20[rbp], rax

; 607  :                     if (x_bit_count < y_bit_count)

  003d7	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR y_bit_count$20[rbp]
  003de	48 39 85 e8 01
	00 00		 cmp	 QWORD PTR x_bit_count$19[rbp], rax
  003e5	73 26		 jae	 SHORT $LN19@PMC_Subtru

; 608  :                     {
; 609  :                         // 演算結果は負となってしまうのでエラーを返す。
; 610  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");

  003e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  003ee	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  003f5	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  003fa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00401	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  00408	e8 00 00 00 00	 call	 _CxxThrowException
$LN19@PMC_Subtru:

; 611  :                     }
; 612  :                     __UNIT_TYPE w_bit_count = x_bit_count;

  0040d	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR x_bit_count$19[rbp]
  00414	48 89 85 28 02
	00 00		 mov	 QWORD PTR w_bit_count$21[rbp], rax

; 613  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0041b	48 8b 95 28 02
	00 00		 mov	 rdx, QWORD PTR w_bit_count$21[rbp]
  00422	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  00429	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  0042e	48 89 85 48 02
	00 00		 mov	 QWORD PTR w$22[rbp], rax

; 614  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);

  00435	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR w$22[rbp]
  0043c	48 8b 40 38	 mov	 rax, QWORD PTR [rax+56]
  00440	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00445	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR w$22[rbp]
  0044c	4c 8b 48 40	 mov	 r9, QWORD PTR [rax+64]
  00450	4c 8b 85 88 06
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00457	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0045e	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00462	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00469	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0046d	e8 00 00 00 00	 call	 ?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z ; Palmtree::Math::Core::Internal::Subtruct_X_1W

; 615  :                     root.CheckNumber(w);

  00472	48 8b 95 48 02
	00 00		 mov	 rdx, QWORD PTR w$22[rbp]
  00479	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  00480	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 616  :                     CommitNumber(w);

  00485	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR w$22[rbp]
  0048c	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 617  :                     if (w->IS_ZERO)

  00491	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR w$22[rbp]
  00498	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0049b	83 e0 01	 and	 eax, 1
  0049e	85 c0		 test	 eax, eax
  004a0	74 23		 je	 SHORT $LN20@PMC_Subtru

; 618  :                     {
; 619  :                         root.DeallocateNumber(w);

  004a2	48 8b 95 48 02
	00 00		 mov	 rdx, QWORD PTR w$22[rbp]
  004a9	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  004b0	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 620  :                         w = &number_zero;

  004b5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  004bc	48 89 85 48 02
	00 00		 mov	 QWORD PTR w$22[rbp], rax

; 621  :                     }
; 622  :                     else

  004c3	eb 13		 jmp	 SHORT $LN21@PMC_Subtru
$LN20@PMC_Subtru:

; 623  :                         root.UnlinkNumber(w);

  004c5	48 8b 95 48 02
	00 00		 mov	 rdx, QWORD PTR w$22[rbp]
  004cc	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  004d3	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN21@PMC_Subtru:

; 624  :                     return (w);

  004d8	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR w$22[rbp]
  004df	48 89 85 28 06
	00 00		 mov	 QWORD PTR $T29[rbp], rax
  004e6	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  004ed	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  004f2	48 8b 85 28 06
	00 00		 mov	 rax, QWORD PTR $T29[rbp]
$LN22@PMC_Subtru:

; 625  :                 }
; 626  :             }
; 627  :         }
; 628  :     }

  004f9	48 8b f8	 mov	 rdi, rax
  004fc	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00500	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z$rtcFrameData
  00507	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0050c	48 8b c7	 mov	 rax, rdi
  0050f	48 8d a5 68 06
	00 00		 lea	 rsp, QWORD PTR [rbp+1640]
  00516	5f		 pop	 rdi
  00517	5d		 pop	 rbp
  00518	c3		 ret	 0
$LN26@PMC_Subtru:
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
v_bit_count$10 = 104
root$11 = 136
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
x_bit_count$19 = 488
y_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1192
$T24 = 1272
$T25 = 1352
$T26 = 1384
$T27 = 1464
$T28 = 1496
$T29 = 1576
$T30 = 1608
u$ = 1664
v$ = 1672
?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR root$11[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
v_bit_count$10 = 104
root$11 = 136
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
x_bit_count$19 = 488
y_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1192
$T24 = 1272
$T25 = 1352
$T26 = 1384
$T27 = 1464
$T28 = 1496
$T29 = 1576
$T30 = 1608
u$ = 1664
v$ = 1672
?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
v_bit_count$10 = 104
root$11 = 136
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
x_bit_count$19 = 488
y_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1192
$T24 = 1272
$T25 = 1352
$T26 = 1384
$T27 = 1464
$T28 = 1496
$T29 = 1576
$T30 = 1608
u$ = 1664
v$ = 1672
?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
v_bit_count$10 = 104
root$11 = 136
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
x_bit_count$19 = 488
y_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1192
$T24 = 1272
$T25 = 1352
$T26 = 1384
$T27 = 1464
$T28 = 1496
$T29 = 1576
$T30 = 1608
u$ = 1664
v$ = 1672
?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR root$11[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
v_bit_count$10 = 104
root$11 = 136
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
x_bit_count$19 = 488
y_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1192
$T24 = 1272
$T25 = 1352
$T26 = 1384
$T27 = 1464
$T28 = 1496
$T29 = 1576
$T30 = 1608
u$ = 1664
v$ = 1672
?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR root$14[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$7 = 8
v_hi$8 = 36
v_lo$9 = 68
v_bit_count$10 = 104
root$11 = 136
w_bit_count$12 = 200
w$13 = 232
root$14 = 264
v_bit_count$15 = 328
w_bit_count$16 = 360
w$17 = 392
root$18 = 424
x_bit_count$19 = 488
y_bit_count$20 = 520
w_bit_count$21 = 552
w$22 = 584
$T23 = 1192
$T24 = 1272
$T25 = 1352
$T26 = 1384
$T27 = 1464
$T28 = 1496
$T29 = 1576
$T30 = 1608
u$ = 1664
v$ = 1672
?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR root$18[rbp]
  0001b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0??PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
_TEXT	SEGMENT
u_bit_count$4 = 8
v_bit_count$5 = 40
root$6 = 72
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 472
$T11 = 552
$T12 = 584
u$ = 640
v$ = 648
?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp, COMDAT

; 259  :     {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 98 02
	00 00		 sub	 rsp, 664		; 00000298H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 a6 00 00 00	 mov	 ecx, 166		; 000000a6H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR [rsp+696]
  0002e	48 c7 85 48 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T12[rbp], -2
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 260  :         if (u->IS_ZERO)

  00045	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004c	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0004f	83 e0 01	 and	 eax, 1
  00052	85 c0		 test	 eax, eax
  00054	74 43		 je	 SHORT $LN2@PMC_Subtru

; 261  :         {
; 262  :             // u が 0 である場合
; 263  : 
; 264  :             if (v == 0)

  00056	83 bd 88 02 00
	00 00		 cmp	 DWORD PTR v$[rbp], 0
  0005d	75 0e		 jne	 SHORT $LN4@PMC_Subtru

; 265  :             {
; 266  :                 // v が 0 である場合
; 267  : 
; 268  :                 // u と v がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 269  :                 return (&number_zero);

  0005f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00066	e9 94 01 00 00	 jmp	 $LN12@PMC_Subtru

; 270  :             }
; 271  :             else

  0006b	eb 27		 jmp	 SHORT $LN5@PMC_Subtru
$LN4@PMC_Subtru:

; 272  :             {
; 273  :                 // v が 0 ではない場合
; 274  : 
; 275  :                 // 演算結果は負となってしまうのでエラーを返す。
; 276  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00074	48 8d 8d 88 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0007b	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00080	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00087	48 8d 8d 88 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0008e	e8 00 00 00 00	 call	 _CxxThrowException
  00093	90		 npad	 1
$LN5@PMC_Subtru:

; 277  :             }
; 278  :         }
; 279  :         else

  00094	e9 66 01 00 00	 jmp	 $LN12@PMC_Subtru
$LN2@PMC_Subtru:

; 280  :         {
; 281  :             // u が 0 ではない場合
; 282  : 
; 283  :             if (v == 0)

  00099	83 bd 88 02 00
	00 00		 cmp	 DWORD PTR v$[rbp], 0
  000a0	75 16		 jne	 SHORT $LN6@PMC_Subtru

; 284  :             {
; 285  :                 // v が 0 である場合
; 286  : 
; 287  :                 // 演算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 288  :                 return (DuplicateNumber(u));

  000a2	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000a9	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  000ae	e9 4c 01 00 00	 jmp	 $LN12@PMC_Subtru

; 289  :             }
; 290  :             else

  000b3	e9 47 01 00 00	 jmp	 $LN12@PMC_Subtru
$LN6@PMC_Subtru:

; 291  :             {
; 292  :                 // u と v がともに 0 ではない場合
; 293  : 
; 294  :                 // u と v の差を計算する
; 295  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  000b8	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000bf	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000c3	48 89 45 08	 mov	 QWORD PTR u_bit_count$4[rbp], rax

; 296  :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  000c7	8b 8d 88 02 00
	00		 mov	 ecx, DWORD PTR v$[rbp]
  000cd	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  000d2	48 98		 cdqe
  000d4	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000d9	48 2b c8	 sub	 rcx, rax
  000dc	48 8b c1	 mov	 rax, rcx
  000df	48 89 45 28	 mov	 QWORD PTR v_bit_count$5[rbp], rax

; 297  :                 if (u_bit_count < v_bit_count)

  000e3	48 8b 45 28	 mov	 rax, QWORD PTR v_bit_count$5[rbp]
  000e7	48 39 45 08	 cmp	 QWORD PTR u_bit_count$4[rbp], rax
  000eb	73 2c		 jae	 SHORT $LN8@PMC_Subtru

; 298  :                 {
; 299  :                     // 演算結果は負となってしまうのでエラーを返す。
; 300  :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");

  000ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  000f4	48 8d 8d d8 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  000fb	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00100	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00107	48 8d 8d d8 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0010e	e8 00 00 00 00	 call	 _CxxThrowException
  00113	90		 npad	 1

; 301  :                 }
; 302  :                 else

  00114	e9 e6 00 00 00	 jmp	 $LN12@PMC_Subtru
$LN8@PMC_Subtru:

; 303  :                 {
; 304  :                     ResourceHolderUINT root;

  00119	48 8d 4d 48	 lea	 rcx, QWORD PTR root$6[rbp]
  0011d	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00122	90		 npad	 1

; 305  :                     __UNIT_TYPE w_bit_count = u_bit_count;

  00123	48 8b 45 08	 mov	 rax, QWORD PTR u_bit_count$4[rbp]
  00127	48 89 85 88 00
	00 00		 mov	 QWORD PTR w_bit_count$7[rbp], rax

; 306  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0012e	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w_bit_count$7[rbp]
  00135	48 8d 4d 48	 lea	 rcx, QWORD PTR root$6[rbp]
  00139	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  0013e	48 89 85 a8 00
	00 00		 mov	 QWORD PTR w$8[rbp], rax

; 307  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK, w->BLOCK_COUNT);

  00145	8b 85 88 02 00
	00		 mov	 eax, DWORD PTR v$[rbp]
  0014b	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  00152	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  00156	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0015b	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  00162	4c 8b 49 40	 mov	 r9, QWORD PTR [rcx+64]
  00166	44 8b c0	 mov	 r8d, eax
  00169	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00170	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00174	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0017b	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0017f	e8 00 00 00 00	 call	 ?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z ; Palmtree::Math::Core::Internal::Subtruct_X_1W

; 308  :                     root.CheckNumber(w);

  00184	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  0018b	48 8d 4d 48	 lea	 rcx, QWORD PTR root$6[rbp]
  0018f	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 309  :                     CommitNumber(w);

  00194	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  0019b	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 310  :                     if (w->IS_ZERO)

  001a0	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  001a7	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  001aa	83 e0 01	 and	 eax, 1
  001ad	85 c0		 test	 eax, eax
  001af	74 20		 je	 SHORT $LN10@PMC_Subtru

; 311  :                     {
; 312  :                         root.DeallocateNumber(w);

  001b1	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  001b8	48 8d 4d 48	 lea	 rcx, QWORD PTR root$6[rbp]
  001bc	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 313  :                         w = &number_zero;

  001c1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  001c8	48 89 85 a8 00
	00 00		 mov	 QWORD PTR w$8[rbp], rax

; 314  :                     }
; 315  :                     else

  001cf	eb 10		 jmp	 SHORT $LN11@PMC_Subtru
$LN10@PMC_Subtru:

; 316  :                         root.UnlinkNumber(w);

  001d1	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  001d8	48 8d 4d 48	 lea	 rcx, QWORD PTR root$6[rbp]
  001dc	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN11@PMC_Subtru:

; 317  :                     return (w);

  001e1	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  001e8	48 89 85 28 02
	00 00		 mov	 QWORD PTR $T11[rbp], rax
  001ef	48 8d 4d 48	 lea	 rcx, QWORD PTR root$6[rbp]
  001f3	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001f8	48 8b 85 28 02
	00 00		 mov	 rax, QWORD PTR $T11[rbp]
$LN12@PMC_Subtru:

; 318  :                 }
; 319  :             }
; 320  :         }
; 321  :     }

  001ff	48 8b f8	 mov	 rdi, rax
  00202	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00206	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z$rtcFrameData
  0020d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00212	48 8b c7	 mov	 rax, rdi
  00215	48 8d a5 68 02
	00 00		 lea	 rsp, QWORD PTR [rbp+616]
  0021c	5f		 pop	 rdi
  0021d	5d		 pop	 rbp
  0021e	c3		 ret	 0
$LN14@PMC_Subtru:
?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$4 = 8
v_bit_count$5 = 40
root$6 = 72
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 472
$T11 = 552
$T12 = 584
u$ = 640
v$ = 648
?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$6[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
u_bit_count$4 = 8
v_bit_count$5 = 40
root$6 = 72
w_bit_count$7 = 136
w$8 = 168
$T9 = 392
$T10 = 472
$T11 = 552
$T12 = 584
u$ = 640
v$ = 648
?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$6[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z
_TEXT	SEGMENT
c$1 = 4
$T2 = 232
tv80 = 296
tv71 = 296
tv84 = 304
tv75 = 304
up$ = 352
u_count$ = 360
v_hi$ = 368
v_lo$ = 376
wp$ = 384
w_count$ = 392
?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z PROC ; Palmtree::Math::Core::Internal::Subtruct_X_2W, COMDAT

; 96   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 97   :         if (u_count < 2)

  00045	48 83 bd 68 01
	00 00 02	 cmp	 QWORD PTR u_count$[rbp], 2
  0004d	73 2b		 jae	 SHORT $LN2@Subtruct_X

; 98   :         {
; 99   :             // u が 1 ワードしかなかった場合
; 100  : 
; 101  :             // 明らかに演算結果が負になるのでエラーを通知する。
; 102  :             throw OverflowException(L"減算によりオーバーフローが発生しました。");

  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00056	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0005d	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00069	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00070	e8 00 00 00 00	 call	 _CxxThrowException

; 103  :         }
; 104  :         else

  00075	e9 14 01 00 00	 jmp	 $LN3@Subtruct_X
$LN2@Subtruct_X:

; 105  :         {
; 106  :             // x が 2 ワード以上あった場合
; 107  : 
; 108  :             // 最下位のワードの減算をする
; 109  :             char c = _SUBTRUCT_UNIT(0, *up++, v_lo, wp++);

  0007a	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00081	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00088	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  0008f	48 83 c0 08	 add	 rax, 8
  00093	48 89 85 80 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
  0009a	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  000a1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a4	48 89 85 30 01
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  000ab	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  000b2	48 83 c0 08	 add	 rax, 8
  000b6	48 89 85 60 01
	00 00		 mov	 QWORD PTR up$[rbp], rax
  000bd	4c 8b 8d 28 01
	00 00		 mov	 r9, QWORD PTR tv71[rbp]
  000c4	4c 8b 85 78 01
	00 00		 mov	 r8, QWORD PTR v_lo$[rbp]
  000cb	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  000d2	33 c9		 xor	 ecx, ecx
  000d4	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  000d9	88 45 04	 mov	 BYTE PTR c$1[rbp], al

; 110  : 
; 111  :             // 最下位から 2 番目のワードの減算をする。
; 112  :             c = _SUBTRUCT_UNIT(c, *up++, v_hi, wp++);

  000dc	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  000e3	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  000ea	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  000f1	48 83 c0 08	 add	 rax, 8
  000f5	48 89 85 80 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
  000fc	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 89 85 30 01
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  0010d	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00114	48 83 c0 08	 add	 rax, 8
  00118	48 89 85 60 01
	00 00		 mov	 QWORD PTR up$[rbp], rax
  0011f	4c 8b 8d 28 01
	00 00		 mov	 r9, QWORD PTR tv80[rbp]
  00126	4c 8b 85 70 01
	00 00		 mov	 r8, QWORD PTR v_hi$[rbp]
  0012d	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR tv84[rbp]
  00134	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$1[rbp]
  00138	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0013d	88 45 04	 mov	 BYTE PTR c$1[rbp], al

; 113  :             u_count -= 2;

  00140	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00147	48 83 e8 02	 sub	 rax, 2
  0014b	48 89 85 68 01
	00 00		 mov	 QWORD PTR u_count$[rbp], rax

; 114  :             w_count -= 2;

  00152	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  00159	48 83 e8 02	 sub	 rax, 2
  0015d	48 89 85 88 01
	00 00		 mov	 QWORD PTR w_count$[rbp], rax

; 115  : 
; 116  :             // 残りの桁の繰り上がりを計算し、復帰する。
; 117  :             DoBorrow(c, up, u_count, wp, w_count);

  00164	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  0016b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00170	4c 8b 8d 80 01
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  00177	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR u_count$[rbp]
  0017e	48 8b 95 60 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00185	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$1[rbp]
  00189	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z ; Palmtree::Math::Core::Internal::DoBorrow
$LN3@Subtruct_X:
$LN4@Subtruct_X:

; 118  :         }
; 119  :     }

  0018e	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  00195	5f		 pop	 rdi
  00196	5d		 pop	 rbp
  00197	c3		 ret	 0
?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPEA_K_K1101@Z ENDP ; Palmtree::Math::Core::Internal::Subtruct_X_2W
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z
_TEXT	SEGMENT
c$ = 4
tv66 = 216
tv70 = 224
up$ = 272
u_count$ = 280
v$ = 288
wp$ = 296
w_count$ = 304
?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z PROC ; Palmtree::Math::Core::Internal::Subtruct_X_1W, COMDAT

; 84   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 85   :         // 最下桁の減算を行う
; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  00045	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  0004c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv66[rbp], rax
  00053	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 89 85 28 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
  00065	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  0006c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006f	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  00076	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  0007d	48 83 c0 08	 add	 rax, 8
  00081	48 89 85 10 01
	00 00		 mov	 QWORD PTR up$[rbp], rax
  00088	4c 8b 8d d8 00
	00 00		 mov	 r9, QWORD PTR tv66[rbp]
  0008f	4c 8b 85 20 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00096	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv70[rbp]
  0009d	33 c9		 xor	 ecx, ecx
  0009f	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  000a4	88 45 04	 mov	 BYTE PTR c$[rbp], al

; 87   :         --u_count;

  000a7	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  000ae	48 ff c8	 dec	 rax
  000b1	48 89 85 18 01
	00 00		 mov	 QWORD PTR u_count$[rbp], rax

; 88   :         --w_count;

  000b8	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  000bf	48 ff c8	 dec	 rax
  000c2	48 89 85 30 01
	00 00		 mov	 QWORD PTR w_count$[rbp], rax

; 89   : 
; 90   :         // 残りの桁の繰上りを行い復帰する。
; 91   :         DoBorrow(c, up, u_count, wp, w_count);

  000c9	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  000d0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000d5	4c 8b 8d 28 01
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  000dc	4c 8b 85 18 01
	00 00		 mov	 r8, QWORD PTR u_count$[rbp]
  000e3	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  000ea	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$[rbp]
  000ee	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z ; Palmtree::Math::Core::Internal::DoBorrow

; 92   :     }

  000f3	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000fa	5f		 pop	 rdi
  000fb	5d		 pop	 rbp
  000fc	c3		 ret	 0
?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K101@Z ENDP ; Palmtree::Math::Core::Internal::Subtruct_X_1W
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z
_TEXT	SEGMENT
$T1 = 200
tv88 = 264
tv75 = 264
tv79 = 272
c$ = 320
up$ = 328
u_count$ = 336
wp$ = 344
w_count$ = 352
?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z PROC ; Palmtree::Math::Core::Internal::DoBorrow, COMDAT

; 38   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 68
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+360]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@DoBorrow:

; 39   :         // 桁借りを続く限り行う
; 40   :         for (;;)
; 41   :         {
; 42   :             if (u_count <= 0)

  00044	48 83 bd 50 01
	00 00 00	 cmp	 QWORD PTR u_count$[rbp], 0
  0004c	77 3b		 ja	 SHORT $LN7@DoBorrow

; 43   :             {
; 44   :                 // x の最上位まで達してしまった場合
; 45   : 
; 46   :                 if (c)

  0004e	0f be 85 40 01
	00 00		 movsx	 eax, BYTE PTR c$[rbp]
  00055	85 c0		 test	 eax, eax
  00057	74 26		 je	 SHORT $LN9@DoBorrow

; 47   :                 {
; 48   :                     // かつそれでも桁借りを行う必要がある場合
; 49   : 
; 50   :                     // 減算結果が負になってしまったので呼び出し元に通知する。
; 51   :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00059	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00060	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00067	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  0006c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00073	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0007a	e8 00 00 00 00	 call	 _CxxThrowException
$LN9@DoBorrow:

; 52   :                 }
; 53   : 
; 54   :                 // xの最上位に達してしまった場合はいずれにしろループを中断して正常復帰する。
; 55   : 
; 56   :                 return;

  0007f	e9 19 01 00 00	 jmp	 $LN1@DoBorrow
  00084	e9 0f 01 00 00	 jmp	 $LN8@DoBorrow
$LN7@DoBorrow:

; 57   :             }
; 58   :             else if (c)

  00089	0f be 85 40 01
	00 00		 movsx	 eax, BYTE PTR c$[rbp]
  00090	85 c0		 test	 eax, eax
  00092	0f 84 8a 00 00
	00		 je	 $LN10@DoBorrow

; 59   :             {
; 60   :                 // xの最上位に達しておらず、かつボローが立っている場合
; 61   : 
; 62   :                 // 桁借りを継続する
; 63   :                 c = _SUBTRUCT_UNIT(c, *up++, 0, wp++);

  00098	48 8b 85 58 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  0009f	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  000a6	48 8b 85 58 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	48 89 85 58 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
  000b8	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  000bf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c2	48 89 85 10 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  000c9	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  000d0	48 83 c0 08	 add	 rax, 8
  000d4	48 89 85 48 01
	00 00		 mov	 QWORD PTR up$[rbp], rax
  000db	4c 8b 8d 08 01
	00 00		 mov	 r9, QWORD PTR tv75[rbp]
  000e2	45 33 c0	 xor	 r8d, r8d
  000e5	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR tv79[rbp]
  000ec	0f b6 8d 40 01
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  000f3	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  000f8	88 85 40 01 00
	00		 mov	 BYTE PTR c$[rbp], al

; 64   :                 --u_count;

  000fe	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00105	48 ff c8	 dec	 rax
  00108	48 89 85 50 01
	00 00		 mov	 QWORD PTR u_count$[rbp], rax

; 65   :                 --w_count;

  0010f	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  00116	48 ff c8	 dec	 rax
  00119	48 89 85 60 01
	00 00		 mov	 QWORD PTR w_count$[rbp], rax

; 66   :             }
; 67   :             else

  00120	eb 76		 jmp	 SHORT $LN11@DoBorrow
$LN10@DoBorrow:
$LN5@DoBorrow:

; 68   :             {
; 69   :                 // xの最上位に達しておらず、かつボローが立っていない場合
; 70   : 
; 71   :                 // 桁借りを中断し、xの残りのデータをzにそのまま複写し、正常復帰する。
; 72   :                 while (u_count > 0)

  00122	48 83 bd 50 01
	00 00 00	 cmp	 QWORD PTR u_count$[rbp], 0
  0012a	76 6a		 jbe	 SHORT $LN6@DoBorrow

; 73   :                 {
; 74   :                     *wp++ = *up++;

  0012c	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00133	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00136	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  0013d	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00144	48 83 c0 08	 add	 rax, 8
  00148	48 89 85 48 01
	00 00		 mov	 QWORD PTR up$[rbp], rax
  0014f	48 8b 85 58 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00156	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR tv88[rbp]
  0015d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00160	48 8b 85 58 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00167	48 83 c0 08	 add	 rax, 8
  0016b	48 89 85 58 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 75   :                     --u_count;

  00172	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  00179	48 ff c8	 dec	 rax
  0017c	48 89 85 50 01
	00 00		 mov	 QWORD PTR u_count$[rbp], rax

; 76   :                     --w_count;

  00183	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  0018a	48 ff c8	 dec	 rax
  0018d	48 89 85 60 01
	00 00		 mov	 QWORD PTR w_count$[rbp], rax

; 77   :                 }

  00194	eb 8c		 jmp	 SHORT $LN5@DoBorrow
$LN6@DoBorrow:

; 78   :                 return;

  00196	eb 05		 jmp	 SHORT $LN1@DoBorrow
$LN11@DoBorrow:
$LN8@DoBorrow:

; 79   :             }
; 80   :         }

  00198	e9 a7 fe ff ff	 jmp	 $LN2@DoBorrow
$LN1@DoBorrow:
$LN12@DoBorrow:

; 81   :     }

  0019d	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  001a4	5f		 pop	 rdi
  001a5	5d		 pop	 rbp
  001a6	c3		 ret	 0
?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z ENDP ; Palmtree::Math::Core::Internal::DoBorrow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _SUBTRUCT_2WORDS_SBB
_TEXT	SEGMENT
c$ = 224
xp$ = 232
yp$ = 240
zp$ = 248
_SUBTRUCT_2WORDS_SBB PROC				; COMDAT

; 2314 : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E05E7037_autogenerated_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2315 : #ifdef _MSC_VER
; 2316 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 00	 imul	 rax, rax, 0
  0004d	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00054	48 03 c8	 add	 rcx, rax
  00057	48 8b c1	 mov	 rax, rcx
  0005a	b9 08 00 00 00	 mov	 ecx, 8
  0005f	48 6b c9 00	 imul	 rcx, rcx, 0
  00063	ba 08 00 00 00	 mov	 edx, 8
  00068	48 6b d2 00	 imul	 rdx, rdx, 0
  0006c	4c 8b c8	 mov	 r9, rax
  0006f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00076	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0007a	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00081	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00085	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0008c	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00091	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 2317 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00097	b8 08 00 00 00	 mov	 eax, 8
  0009c	48 6b c0 01	 imul	 rax, rax, 1
  000a0	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000a7	48 03 c8	 add	 rcx, rax
  000aa	48 8b c1	 mov	 rax, rcx
  000ad	b9 08 00 00 00	 mov	 ecx, 8
  000b2	48 6b c9 01	 imul	 rcx, rcx, 1
  000b6	ba 08 00 00 00	 mov	 edx, 8
  000bb	48 6b d2 01	 imul	 rdx, rdx, 1
  000bf	4c 8b c8	 mov	 r9, rax
  000c2	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  000c9	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  000cd	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  000d4	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  000d8	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  000df	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  000e4	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 2318 : #elif defined(__GNUC__)
; 2319 : #ifdef _M_IX86
; 2320 :     __asm__ volatile (
; 2321 :         "addb\t$-1, %0\n\t"
; 2322 :         "movl\t(%1), %%ecx\n\t"
; 2323 :         "sbbl\t(%2), %%ecx\n\t"
; 2324 :         "movl\t%%ecx, (%3)\n\t"
; 2325 :         "movl\t4(%1), %%ecx\n\t"
; 2326 :         "sbbl\t4(%2), %%ecx\n\t"
; 2327 :         "movl\t%%ecx, 4(%3)\n\t"
; 2328 :         "setc\t%0"
; 2329 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 2330 :         :
; 2331 :         : "cc", "memory", "%ecx"
; 2332 : );
; 2333 : #elif defined(_M_X64)
; 2334 :     __asm__ volatile (
; 2335 :         "addb\t$-1, %0\n\t"
; 2336 :         "movq\t(%1), %%rcx\n\t"
; 2337 :         "sbbq\t(%2), %%rcx\n\t"
; 2338 :         "movq\t%%rcx, (%3)\n\t"
; 2339 :         "movq\t8(%1), %%rcx\n\t"
; 2340 :         "sbbq\t8(%2), %%rcx\n\t"
; 2341 :         "movq\t%%rcx, 8(%3)\n\t"
; 2342 :         "setc\t%0"
; 2343 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 2344 :         :
; 2345 :         : "cc", "memory", "%rcx"
; 2346 : );
; 2347 : #else
; 2348 : #error unknown platform
; 2349 : #endif
; 2350 : #else
; 2351 : #error unknown compiler
; 2352 : #endif
; 2353 :     return (c);

  000ea	0f b6 85 e0 00
	00 00		 movzx	 eax, BYTE PTR c$[rbp]

; 2354 : }

  000f1	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000f8	5f		 pop	 rdi
  000f9	5d		 pop	 rbp
  000fa	c3		 ret	 0
_SUBTRUCT_2WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _SUBTRUCT_4WORDS_SBB
_TEXT	SEGMENT
c$ = 224
xp$ = 232
yp$ = 240
zp$ = 248
_SUBTRUCT_4WORDS_SBB PROC				; COMDAT

; 2128 : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E05E7037_autogenerated_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2129 : #ifdef _MSC_VER
; 2130 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 00	 imul	 rax, rax, 0
  0004d	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00054	48 03 c8	 add	 rcx, rax
  00057	48 8b c1	 mov	 rax, rcx
  0005a	b9 08 00 00 00	 mov	 ecx, 8
  0005f	48 6b c9 00	 imul	 rcx, rcx, 0
  00063	ba 08 00 00 00	 mov	 edx, 8
  00068	48 6b d2 00	 imul	 rdx, rdx, 0
  0006c	4c 8b c8	 mov	 r9, rax
  0006f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00076	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0007a	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00081	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00085	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0008c	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00091	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 2131 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00097	b8 08 00 00 00	 mov	 eax, 8
  0009c	48 6b c0 01	 imul	 rax, rax, 1
  000a0	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000a7	48 03 c8	 add	 rcx, rax
  000aa	48 8b c1	 mov	 rax, rcx
  000ad	b9 08 00 00 00	 mov	 ecx, 8
  000b2	48 6b c9 01	 imul	 rcx, rcx, 1
  000b6	ba 08 00 00 00	 mov	 edx, 8
  000bb	48 6b d2 01	 imul	 rdx, rdx, 1
  000bf	4c 8b c8	 mov	 r9, rax
  000c2	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  000c9	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  000cd	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  000d4	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  000d8	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  000df	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  000e4	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 2132 :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  000ea	b8 08 00 00 00	 mov	 eax, 8
  000ef	48 6b c0 02	 imul	 rax, rax, 2
  000f3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000fa	48 03 c8	 add	 rcx, rax
  000fd	48 8b c1	 mov	 rax, rcx
  00100	b9 08 00 00 00	 mov	 ecx, 8
  00105	48 6b c9 02	 imul	 rcx, rcx, 2
  00109	ba 08 00 00 00	 mov	 edx, 8
  0010e	48 6b d2 02	 imul	 rdx, rdx, 2
  00112	4c 8b c8	 mov	 r9, rax
  00115	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0011c	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00120	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00127	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0012b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00132	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00137	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 2133 :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0013d	b8 08 00 00 00	 mov	 eax, 8
  00142	48 6b c0 03	 imul	 rax, rax, 3
  00146	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0014d	48 03 c8	 add	 rcx, rax
  00150	48 8b c1	 mov	 rax, rcx
  00153	b9 08 00 00 00	 mov	 ecx, 8
  00158	48 6b c9 03	 imul	 rcx, rcx, 3
  0015c	ba 08 00 00 00	 mov	 edx, 8
  00161	48 6b d2 03	 imul	 rdx, rdx, 3
  00165	4c 8b c8	 mov	 r9, rax
  00168	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0016f	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00173	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0017a	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0017e	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00185	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0018a	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 2134 : #elif defined(__GNUC__)
; 2135 : #ifdef _M_IX86
; 2136 :     __asm__ volatile (
; 2137 :         "addb\t$-1, %0\n\t"
; 2138 :         "movl\t(%1), %%ecx\n\t"
; 2139 :         "sbbl\t(%2), %%ecx\n\t"
; 2140 :         "movl\t%%ecx, (%3)\n\t"
; 2141 :         "movl\t4(%1), %%ecx\n\t"
; 2142 :         "sbbl\t4(%2), %%ecx\n\t"
; 2143 :         "movl\t%%ecx, 4(%3)\n\t"
; 2144 :         "movl\t8(%1), %%ecx\n\t"
; 2145 :         "sbbl\t8(%2), %%ecx\n\t"
; 2146 :         "movl\t%%ecx, 8(%3)\n\t"
; 2147 :         "movl\t12(%1), %%ecx\n\t"
; 2148 :         "sbbl\t12(%2), %%ecx\n\t"
; 2149 :         "movl\t%%ecx, 12(%3)\n\t"
; 2150 :         "setc\t%0"
; 2151 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 2152 :         :
; 2153 :         : "cc", "memory", "%ecx"
; 2154 : );
; 2155 : #elif defined(_M_X64)
; 2156 :     __asm__ volatile (
; 2157 :         "addb\t$-1, %0\n\t"
; 2158 :         "movq\t(%1), %%rcx\n\t"
; 2159 :         "sbbq\t(%2), %%rcx\n\t"
; 2160 :         "movq\t%%rcx, (%3)\n\t"
; 2161 :         "movq\t8(%1), %%rcx\n\t"
; 2162 :         "sbbq\t8(%2), %%rcx\n\t"
; 2163 :         "movq\t%%rcx, 8(%3)\n\t"
; 2164 :         "movq\t16(%1), %%rcx\n\t"
; 2165 :         "sbbq\t16(%2), %%rcx\n\t"
; 2166 :         "movq\t%%rcx, 16(%3)\n\t"
; 2167 :         "movq\t24(%1), %%rcx\n\t"
; 2168 :         "sbbq\t24(%2), %%rcx\n\t"
; 2169 :         "movq\t%%rcx, 24(%3)\n\t"
; 2170 :         "setc\t%0"
; 2171 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 2172 :         :
; 2173 :         : "cc", "memory", "%rcx"
; 2174 : );
; 2175 : #else
; 2176 : #error unknown platform
; 2177 : #endif
; 2178 : #else
; 2179 : #error unknown compiler
; 2180 : #endif
; 2181 :     return (c);

  00190	0f b6 85 e0 00
	00 00		 movzx	 eax, BYTE PTR c$[rbp]

; 2182 : }

  00197	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0019e	5f		 pop	 rdi
  0019f	5d		 pop	 rbp
  001a0	c3		 ret	 0
_SUBTRUCT_4WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _SUBTRUCT_8WORDS_SBB
_TEXT	SEGMENT
c$ = 224
xp$ = 232
yp$ = 240
zp$ = 248
_SUBTRUCT_8WORDS_SBB PROC				; COMDAT

; 1872 : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E05E7037_autogenerated_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1873 : #ifdef _MSC_VER
; 1874 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 00	 imul	 rax, rax, 0
  0004d	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00054	48 03 c8	 add	 rcx, rax
  00057	48 8b c1	 mov	 rax, rcx
  0005a	b9 08 00 00 00	 mov	 ecx, 8
  0005f	48 6b c9 00	 imul	 rcx, rcx, 0
  00063	ba 08 00 00 00	 mov	 edx, 8
  00068	48 6b d2 00	 imul	 rdx, rdx, 0
  0006c	4c 8b c8	 mov	 r9, rax
  0006f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00076	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0007a	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00081	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00085	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0008c	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00091	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1875 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00097	b8 08 00 00 00	 mov	 eax, 8
  0009c	48 6b c0 01	 imul	 rax, rax, 1
  000a0	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000a7	48 03 c8	 add	 rcx, rax
  000aa	48 8b c1	 mov	 rax, rcx
  000ad	b9 08 00 00 00	 mov	 ecx, 8
  000b2	48 6b c9 01	 imul	 rcx, rcx, 1
  000b6	ba 08 00 00 00	 mov	 edx, 8
  000bb	48 6b d2 01	 imul	 rdx, rdx, 1
  000bf	4c 8b c8	 mov	 r9, rax
  000c2	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  000c9	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  000cd	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  000d4	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  000d8	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  000df	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  000e4	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1876 :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  000ea	b8 08 00 00 00	 mov	 eax, 8
  000ef	48 6b c0 02	 imul	 rax, rax, 2
  000f3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000fa	48 03 c8	 add	 rcx, rax
  000fd	48 8b c1	 mov	 rax, rcx
  00100	b9 08 00 00 00	 mov	 ecx, 8
  00105	48 6b c9 02	 imul	 rcx, rcx, 2
  00109	ba 08 00 00 00	 mov	 edx, 8
  0010e	48 6b d2 02	 imul	 rdx, rdx, 2
  00112	4c 8b c8	 mov	 r9, rax
  00115	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0011c	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00120	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00127	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0012b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00132	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00137	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1877 :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0013d	b8 08 00 00 00	 mov	 eax, 8
  00142	48 6b c0 03	 imul	 rax, rax, 3
  00146	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0014d	48 03 c8	 add	 rcx, rax
  00150	48 8b c1	 mov	 rax, rcx
  00153	b9 08 00 00 00	 mov	 ecx, 8
  00158	48 6b c9 03	 imul	 rcx, rcx, 3
  0015c	ba 08 00 00 00	 mov	 edx, 8
  00161	48 6b d2 03	 imul	 rdx, rdx, 3
  00165	4c 8b c8	 mov	 r9, rax
  00168	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0016f	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00173	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0017a	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0017e	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00185	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0018a	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1878 :     c = _SUBTRUCT_UNIT(c, xp[4], yp[4], &zp[4]);

  00190	b8 08 00 00 00	 mov	 eax, 8
  00195	48 6b c0 04	 imul	 rax, rax, 4
  00199	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  001a0	48 03 c8	 add	 rcx, rax
  001a3	48 8b c1	 mov	 rax, rcx
  001a6	b9 08 00 00 00	 mov	 ecx, 8
  001ab	48 6b c9 04	 imul	 rcx, rcx, 4
  001af	ba 08 00 00 00	 mov	 edx, 8
  001b4	48 6b d2 04	 imul	 rdx, rdx, 4
  001b8	4c 8b c8	 mov	 r9, rax
  001bb	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  001c2	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  001c6	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  001cd	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  001d1	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  001d8	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  001dd	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1879 :     c = _SUBTRUCT_UNIT(c, xp[5], yp[5], &zp[5]);

  001e3	b8 08 00 00 00	 mov	 eax, 8
  001e8	48 6b c0 05	 imul	 rax, rax, 5
  001ec	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  001f3	48 03 c8	 add	 rcx, rax
  001f6	48 8b c1	 mov	 rax, rcx
  001f9	b9 08 00 00 00	 mov	 ecx, 8
  001fe	48 6b c9 05	 imul	 rcx, rcx, 5
  00202	ba 08 00 00 00	 mov	 edx, 8
  00207	48 6b d2 05	 imul	 rdx, rdx, 5
  0020b	4c 8b c8	 mov	 r9, rax
  0020e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00215	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00219	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00220	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00224	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0022b	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00230	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1880 :     c = _SUBTRUCT_UNIT(c, xp[6], yp[6], &zp[6]);

  00236	b8 08 00 00 00	 mov	 eax, 8
  0023b	48 6b c0 06	 imul	 rax, rax, 6
  0023f	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00246	48 03 c8	 add	 rcx, rax
  00249	48 8b c1	 mov	 rax, rcx
  0024c	b9 08 00 00 00	 mov	 ecx, 8
  00251	48 6b c9 06	 imul	 rcx, rcx, 6
  00255	ba 08 00 00 00	 mov	 edx, 8
  0025a	48 6b d2 06	 imul	 rdx, rdx, 6
  0025e	4c 8b c8	 mov	 r9, rax
  00261	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00268	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0026c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00273	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00277	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0027e	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00283	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1881 :     c = _SUBTRUCT_UNIT(c, xp[7], yp[7], &zp[7]);

  00289	b8 08 00 00 00	 mov	 eax, 8
  0028e	48 6b c0 07	 imul	 rax, rax, 7
  00292	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00299	48 03 c8	 add	 rcx, rax
  0029c	48 8b c1	 mov	 rax, rcx
  0029f	b9 08 00 00 00	 mov	 ecx, 8
  002a4	48 6b c9 07	 imul	 rcx, rcx, 7
  002a8	ba 08 00 00 00	 mov	 edx, 8
  002ad	48 6b d2 07	 imul	 rdx, rdx, 7
  002b1	4c 8b c8	 mov	 r9, rax
  002b4	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  002bb	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  002bf	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  002c6	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  002ca	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  002d1	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  002d6	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1882 : #elif defined(__GNUC__)
; 1883 : #ifdef _M_IX86
; 1884 :     __asm__ volatile (
; 1885 :         "addb\t$-1, %0\n\t"
; 1886 :         "movl\t(%1), %%ecx\n\t"
; 1887 :         "sbbl\t(%2), %%ecx\n\t"
; 1888 :         "movl\t%%ecx, (%3)\n\t"
; 1889 :         "movl\t4(%1), %%ecx\n\t"
; 1890 :         "sbbl\t4(%2), %%ecx\n\t"
; 1891 :         "movl\t%%ecx, 4(%3)\n\t"
; 1892 :         "movl\t8(%1), %%ecx\n\t"
; 1893 :         "sbbl\t8(%2), %%ecx\n\t"
; 1894 :         "movl\t%%ecx, 8(%3)\n\t"
; 1895 :         "movl\t12(%1), %%ecx\n\t"
; 1896 :         "sbbl\t12(%2), %%ecx\n\t"
; 1897 :         "movl\t%%ecx, 12(%3)\n\t"
; 1898 :         "movl\t16(%1), %%ecx\n\t"
; 1899 :         "sbbl\t16(%2), %%ecx\n\t"
; 1900 :         "movl\t%%ecx, 16(%3)\n\t"
; 1901 :         "movl\t20(%1), %%ecx\n\t"
; 1902 :         "sbbl\t20(%2), %%ecx\n\t"
; 1903 :         "movl\t%%ecx, 20(%3)\n\t"
; 1904 :         "movl\t24(%1), %%ecx\n\t"
; 1905 :         "sbbl\t24(%2), %%ecx\n\t"
; 1906 :         "movl\t%%ecx, 24(%3)\n\t"
; 1907 :         "movl\t28(%1), %%ecx\n\t"
; 1908 :         "sbbl\t28(%2), %%ecx\n\t"
; 1909 :         "movl\t%%ecx, 28(%3)\n\t"
; 1910 :         "setc\t%0"
; 1911 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 1912 :         :
; 1913 :         : "cc", "memory", "%ecx"
; 1914 : );
; 1915 : #elif defined(_M_X64)
; 1916 :     __asm__ volatile (
; 1917 :         "addb\t$-1, %0\n\t"
; 1918 :         "movq\t(%1), %%rcx\n\t"
; 1919 :         "sbbq\t(%2), %%rcx\n\t"
; 1920 :         "movq\t%%rcx, (%3)\n\t"
; 1921 :         "movq\t8(%1), %%rcx\n\t"
; 1922 :         "sbbq\t8(%2), %%rcx\n\t"
; 1923 :         "movq\t%%rcx, 8(%3)\n\t"
; 1924 :         "movq\t16(%1), %%rcx\n\t"
; 1925 :         "sbbq\t16(%2), %%rcx\n\t"
; 1926 :         "movq\t%%rcx, 16(%3)\n\t"
; 1927 :         "movq\t24(%1), %%rcx\n\t"
; 1928 :         "sbbq\t24(%2), %%rcx\n\t"
; 1929 :         "movq\t%%rcx, 24(%3)\n\t"
; 1930 :         "movq\t32(%1), %%rcx\n\t"
; 1931 :         "sbbq\t32(%2), %%rcx\n\t"
; 1932 :         "movq\t%%rcx, 32(%3)\n\t"
; 1933 :         "movq\t40(%1), %%rcx\n\t"
; 1934 :         "sbbq\t40(%2), %%rcx\n\t"
; 1935 :         "movq\t%%rcx, 40(%3)\n\t"
; 1936 :         "movq\t48(%1), %%rcx\n\t"
; 1937 :         "sbbq\t48(%2), %%rcx\n\t"
; 1938 :         "movq\t%%rcx, 48(%3)\n\t"
; 1939 :         "movq\t56(%1), %%rcx\n\t"
; 1940 :         "sbbq\t56(%2), %%rcx\n\t"
; 1941 :         "movq\t%%rcx, 56(%3)\n\t"
; 1942 :         "setc\t%0"
; 1943 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 1944 :         :
; 1945 :         : "cc", "memory", "%rcx"
; 1946 : );
; 1947 : #else
; 1948 : #error unknown platform
; 1949 : #endif
; 1950 : #else
; 1951 : #error unknown compiler
; 1952 : #endif
; 1953 :     return (c);

  002dc	0f b6 85 e0 00
	00 00		 movzx	 eax, BYTE PTR c$[rbp]

; 1954 : }

  002e3	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  002ea	5f		 pop	 rdi
  002eb	5d		 pop	 rbp
  002ec	c3		 ret	 0
_SUBTRUCT_8WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _SUBTRUCT_16WORDS_SBB
_TEXT	SEGMENT
c$ = 224
xp$ = 232
yp$ = 240
zp$ = 248
_SUBTRUCT_16WORDS_SBB PROC				; COMDAT

; 1476 : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E05E7037_autogenerated_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1477 : #ifdef _MSC_VER
; 1478 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 00	 imul	 rax, rax, 0
  0004d	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00054	48 03 c8	 add	 rcx, rax
  00057	48 8b c1	 mov	 rax, rcx
  0005a	b9 08 00 00 00	 mov	 ecx, 8
  0005f	48 6b c9 00	 imul	 rcx, rcx, 0
  00063	ba 08 00 00 00	 mov	 edx, 8
  00068	48 6b d2 00	 imul	 rdx, rdx, 0
  0006c	4c 8b c8	 mov	 r9, rax
  0006f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00076	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0007a	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00081	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00085	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0008c	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00091	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1479 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00097	b8 08 00 00 00	 mov	 eax, 8
  0009c	48 6b c0 01	 imul	 rax, rax, 1
  000a0	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000a7	48 03 c8	 add	 rcx, rax
  000aa	48 8b c1	 mov	 rax, rcx
  000ad	b9 08 00 00 00	 mov	 ecx, 8
  000b2	48 6b c9 01	 imul	 rcx, rcx, 1
  000b6	ba 08 00 00 00	 mov	 edx, 8
  000bb	48 6b d2 01	 imul	 rdx, rdx, 1
  000bf	4c 8b c8	 mov	 r9, rax
  000c2	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  000c9	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  000cd	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  000d4	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  000d8	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  000df	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  000e4	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1480 :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  000ea	b8 08 00 00 00	 mov	 eax, 8
  000ef	48 6b c0 02	 imul	 rax, rax, 2
  000f3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000fa	48 03 c8	 add	 rcx, rax
  000fd	48 8b c1	 mov	 rax, rcx
  00100	b9 08 00 00 00	 mov	 ecx, 8
  00105	48 6b c9 02	 imul	 rcx, rcx, 2
  00109	ba 08 00 00 00	 mov	 edx, 8
  0010e	48 6b d2 02	 imul	 rdx, rdx, 2
  00112	4c 8b c8	 mov	 r9, rax
  00115	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0011c	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00120	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00127	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0012b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00132	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00137	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1481 :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0013d	b8 08 00 00 00	 mov	 eax, 8
  00142	48 6b c0 03	 imul	 rax, rax, 3
  00146	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0014d	48 03 c8	 add	 rcx, rax
  00150	48 8b c1	 mov	 rax, rcx
  00153	b9 08 00 00 00	 mov	 ecx, 8
  00158	48 6b c9 03	 imul	 rcx, rcx, 3
  0015c	ba 08 00 00 00	 mov	 edx, 8
  00161	48 6b d2 03	 imul	 rdx, rdx, 3
  00165	4c 8b c8	 mov	 r9, rax
  00168	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0016f	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00173	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0017a	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0017e	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00185	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0018a	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1482 :     c = _SUBTRUCT_UNIT(c, xp[4], yp[4], &zp[4]);

  00190	b8 08 00 00 00	 mov	 eax, 8
  00195	48 6b c0 04	 imul	 rax, rax, 4
  00199	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  001a0	48 03 c8	 add	 rcx, rax
  001a3	48 8b c1	 mov	 rax, rcx
  001a6	b9 08 00 00 00	 mov	 ecx, 8
  001ab	48 6b c9 04	 imul	 rcx, rcx, 4
  001af	ba 08 00 00 00	 mov	 edx, 8
  001b4	48 6b d2 04	 imul	 rdx, rdx, 4
  001b8	4c 8b c8	 mov	 r9, rax
  001bb	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  001c2	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  001c6	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  001cd	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  001d1	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  001d8	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  001dd	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1483 :     c = _SUBTRUCT_UNIT(c, xp[5], yp[5], &zp[5]);

  001e3	b8 08 00 00 00	 mov	 eax, 8
  001e8	48 6b c0 05	 imul	 rax, rax, 5
  001ec	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  001f3	48 03 c8	 add	 rcx, rax
  001f6	48 8b c1	 mov	 rax, rcx
  001f9	b9 08 00 00 00	 mov	 ecx, 8
  001fe	48 6b c9 05	 imul	 rcx, rcx, 5
  00202	ba 08 00 00 00	 mov	 edx, 8
  00207	48 6b d2 05	 imul	 rdx, rdx, 5
  0020b	4c 8b c8	 mov	 r9, rax
  0020e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00215	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00219	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00220	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00224	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0022b	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00230	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1484 :     c = _SUBTRUCT_UNIT(c, xp[6], yp[6], &zp[6]);

  00236	b8 08 00 00 00	 mov	 eax, 8
  0023b	48 6b c0 06	 imul	 rax, rax, 6
  0023f	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00246	48 03 c8	 add	 rcx, rax
  00249	48 8b c1	 mov	 rax, rcx
  0024c	b9 08 00 00 00	 mov	 ecx, 8
  00251	48 6b c9 06	 imul	 rcx, rcx, 6
  00255	ba 08 00 00 00	 mov	 edx, 8
  0025a	48 6b d2 06	 imul	 rdx, rdx, 6
  0025e	4c 8b c8	 mov	 r9, rax
  00261	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00268	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0026c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00273	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00277	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0027e	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00283	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1485 :     c = _SUBTRUCT_UNIT(c, xp[7], yp[7], &zp[7]);

  00289	b8 08 00 00 00	 mov	 eax, 8
  0028e	48 6b c0 07	 imul	 rax, rax, 7
  00292	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00299	48 03 c8	 add	 rcx, rax
  0029c	48 8b c1	 mov	 rax, rcx
  0029f	b9 08 00 00 00	 mov	 ecx, 8
  002a4	48 6b c9 07	 imul	 rcx, rcx, 7
  002a8	ba 08 00 00 00	 mov	 edx, 8
  002ad	48 6b d2 07	 imul	 rdx, rdx, 7
  002b1	4c 8b c8	 mov	 r9, rax
  002b4	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  002bb	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  002bf	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  002c6	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  002ca	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  002d1	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  002d6	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1486 :     c = _SUBTRUCT_UNIT(c, xp[8], yp[8], &zp[8]);

  002dc	b8 08 00 00 00	 mov	 eax, 8
  002e1	48 6b c0 08	 imul	 rax, rax, 8
  002e5	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  002ec	48 03 c8	 add	 rcx, rax
  002ef	48 8b c1	 mov	 rax, rcx
  002f2	b9 08 00 00 00	 mov	 ecx, 8
  002f7	48 6b c9 08	 imul	 rcx, rcx, 8
  002fb	ba 08 00 00 00	 mov	 edx, 8
  00300	48 6b d2 08	 imul	 rdx, rdx, 8
  00304	4c 8b c8	 mov	 r9, rax
  00307	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0030e	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00312	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00319	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0031d	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00324	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00329	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1487 :     c = _SUBTRUCT_UNIT(c, xp[9], yp[9], &zp[9]);

  0032f	b8 08 00 00 00	 mov	 eax, 8
  00334	48 6b c0 09	 imul	 rax, rax, 9
  00338	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0033f	48 03 c8	 add	 rcx, rax
  00342	48 8b c1	 mov	 rax, rcx
  00345	b9 08 00 00 00	 mov	 ecx, 8
  0034a	48 6b c9 09	 imul	 rcx, rcx, 9
  0034e	ba 08 00 00 00	 mov	 edx, 8
  00353	48 6b d2 09	 imul	 rdx, rdx, 9
  00357	4c 8b c8	 mov	 r9, rax
  0035a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00361	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00365	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0036c	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00370	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00377	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0037c	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1488 :     c = _SUBTRUCT_UNIT(c, xp[10], yp[10], &zp[10]);

  00382	b8 08 00 00 00	 mov	 eax, 8
  00387	48 6b c0 0a	 imul	 rax, rax, 10
  0038b	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00392	48 03 c8	 add	 rcx, rax
  00395	48 8b c1	 mov	 rax, rcx
  00398	b9 08 00 00 00	 mov	 ecx, 8
  0039d	48 6b c9 0a	 imul	 rcx, rcx, 10
  003a1	ba 08 00 00 00	 mov	 edx, 8
  003a6	48 6b d2 0a	 imul	 rdx, rdx, 10
  003aa	4c 8b c8	 mov	 r9, rax
  003ad	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  003b4	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  003b8	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  003bf	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  003c3	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  003ca	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  003cf	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1489 :     c = _SUBTRUCT_UNIT(c, xp[11], yp[11], &zp[11]);

  003d5	b8 08 00 00 00	 mov	 eax, 8
  003da	48 6b c0 0b	 imul	 rax, rax, 11
  003de	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  003e5	48 03 c8	 add	 rcx, rax
  003e8	48 8b c1	 mov	 rax, rcx
  003eb	b9 08 00 00 00	 mov	 ecx, 8
  003f0	48 6b c9 0b	 imul	 rcx, rcx, 11
  003f4	ba 08 00 00 00	 mov	 edx, 8
  003f9	48 6b d2 0b	 imul	 rdx, rdx, 11
  003fd	4c 8b c8	 mov	 r9, rax
  00400	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00407	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0040b	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00412	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00416	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0041d	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00422	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1490 :     c = _SUBTRUCT_UNIT(c, xp[12], yp[12], &zp[12]);

  00428	b8 08 00 00 00	 mov	 eax, 8
  0042d	48 6b c0 0c	 imul	 rax, rax, 12
  00431	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00438	48 03 c8	 add	 rcx, rax
  0043b	48 8b c1	 mov	 rax, rcx
  0043e	b9 08 00 00 00	 mov	 ecx, 8
  00443	48 6b c9 0c	 imul	 rcx, rcx, 12
  00447	ba 08 00 00 00	 mov	 edx, 8
  0044c	48 6b d2 0c	 imul	 rdx, rdx, 12
  00450	4c 8b c8	 mov	 r9, rax
  00453	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0045a	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0045e	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00465	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00469	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00470	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00475	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1491 :     c = _SUBTRUCT_UNIT(c, xp[13], yp[13], &zp[13]);

  0047b	b8 08 00 00 00	 mov	 eax, 8
  00480	48 6b c0 0d	 imul	 rax, rax, 13
  00484	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0048b	48 03 c8	 add	 rcx, rax
  0048e	48 8b c1	 mov	 rax, rcx
  00491	b9 08 00 00 00	 mov	 ecx, 8
  00496	48 6b c9 0d	 imul	 rcx, rcx, 13
  0049a	ba 08 00 00 00	 mov	 edx, 8
  0049f	48 6b d2 0d	 imul	 rdx, rdx, 13
  004a3	4c 8b c8	 mov	 r9, rax
  004a6	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  004ad	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  004b1	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  004b8	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  004bc	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  004c3	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  004c8	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1492 :     c = _SUBTRUCT_UNIT(c, xp[14], yp[14], &zp[14]);

  004ce	b8 08 00 00 00	 mov	 eax, 8
  004d3	48 6b c0 0e	 imul	 rax, rax, 14
  004d7	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  004de	48 03 c8	 add	 rcx, rax
  004e1	48 8b c1	 mov	 rax, rcx
  004e4	b9 08 00 00 00	 mov	 ecx, 8
  004e9	48 6b c9 0e	 imul	 rcx, rcx, 14
  004ed	ba 08 00 00 00	 mov	 edx, 8
  004f2	48 6b d2 0e	 imul	 rdx, rdx, 14
  004f6	4c 8b c8	 mov	 r9, rax
  004f9	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00500	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00504	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0050b	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0050f	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00516	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0051b	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1493 :     c = _SUBTRUCT_UNIT(c, xp[15], yp[15], &zp[15]);

  00521	b8 08 00 00 00	 mov	 eax, 8
  00526	48 6b c0 0f	 imul	 rax, rax, 15
  0052a	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00531	48 03 c8	 add	 rcx, rax
  00534	48 8b c1	 mov	 rax, rcx
  00537	b9 08 00 00 00	 mov	 ecx, 8
  0053c	48 6b c9 0f	 imul	 rcx, rcx, 15
  00540	ba 08 00 00 00	 mov	 edx, 8
  00545	48 6b d2 0f	 imul	 rdx, rdx, 15
  00549	4c 8b c8	 mov	 r9, rax
  0054c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00553	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00557	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0055e	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00562	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00569	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0056e	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 1494 : #elif defined(__GNUC__)
; 1495 : #ifdef _M_IX86
; 1496 :     __asm__ volatile (
; 1497 :         "addb\t$-1, %0\n\t"
; 1498 :         "movl\t(%1), %%ecx\n\t"
; 1499 :         "sbbl\t(%2), %%ecx\n\t"
; 1500 :         "movl\t%%ecx, (%3)\n\t"
; 1501 :         "movl\t4(%1), %%ecx\n\t"
; 1502 :         "sbbl\t4(%2), %%ecx\n\t"
; 1503 :         "movl\t%%ecx, 4(%3)\n\t"
; 1504 :         "movl\t8(%1), %%ecx\n\t"
; 1505 :         "sbbl\t8(%2), %%ecx\n\t"
; 1506 :         "movl\t%%ecx, 8(%3)\n\t"
; 1507 :         "movl\t12(%1), %%ecx\n\t"
; 1508 :         "sbbl\t12(%2), %%ecx\n\t"
; 1509 :         "movl\t%%ecx, 12(%3)\n\t"
; 1510 :         "movl\t16(%1), %%ecx\n\t"
; 1511 :         "sbbl\t16(%2), %%ecx\n\t"
; 1512 :         "movl\t%%ecx, 16(%3)\n\t"
; 1513 :         "movl\t20(%1), %%ecx\n\t"
; 1514 :         "sbbl\t20(%2), %%ecx\n\t"
; 1515 :         "movl\t%%ecx, 20(%3)\n\t"
; 1516 :         "movl\t24(%1), %%ecx\n\t"
; 1517 :         "sbbl\t24(%2), %%ecx\n\t"
; 1518 :         "movl\t%%ecx, 24(%3)\n\t"
; 1519 :         "movl\t28(%1), %%ecx\n\t"
; 1520 :         "sbbl\t28(%2), %%ecx\n\t"
; 1521 :         "movl\t%%ecx, 28(%3)\n\t"
; 1522 :         "movl\t32(%1), %%ecx\n\t"
; 1523 :         "sbbl\t32(%2), %%ecx\n\t"
; 1524 :         "movl\t%%ecx, 32(%3)\n\t"
; 1525 :         "movl\t36(%1), %%ecx\n\t"
; 1526 :         "sbbl\t36(%2), %%ecx\n\t"
; 1527 :         "movl\t%%ecx, 36(%3)\n\t"
; 1528 :         "movl\t40(%1), %%ecx\n\t"
; 1529 :         "sbbl\t40(%2), %%ecx\n\t"
; 1530 :         "movl\t%%ecx, 40(%3)\n\t"
; 1531 :         "movl\t44(%1), %%ecx\n\t"
; 1532 :         "sbbl\t44(%2), %%ecx\n\t"
; 1533 :         "movl\t%%ecx, 44(%3)\n\t"
; 1534 :         "movl\t48(%1), %%ecx\n\t"
; 1535 :         "sbbl\t48(%2), %%ecx\n\t"
; 1536 :         "movl\t%%ecx, 48(%3)\n\t"
; 1537 :         "movl\t52(%1), %%ecx\n\t"
; 1538 :         "sbbl\t52(%2), %%ecx\n\t"
; 1539 :         "movl\t%%ecx, 52(%3)\n\t"
; 1540 :         "movl\t56(%1), %%ecx\n\t"
; 1541 :         "sbbl\t56(%2), %%ecx\n\t"
; 1542 :         "movl\t%%ecx, 56(%3)\n\t"
; 1543 :         "movl\t60(%1), %%ecx\n\t"
; 1544 :         "sbbl\t60(%2), %%ecx\n\t"
; 1545 :         "movl\t%%ecx, 60(%3)\n\t"
; 1546 :         "setc\t%0"
; 1547 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 1548 :         :
; 1549 :         : "cc", "memory", "%ecx"
; 1550 : );
; 1551 : #elif defined(_M_X64)
; 1552 :     __asm__ volatile (
; 1553 :         "addb\t$-1, %0\n\t"
; 1554 :         "movq\t(%1), %%rcx\n\t"
; 1555 :         "sbbq\t(%2), %%rcx\n\t"
; 1556 :         "movq\t%%rcx, (%3)\n\t"
; 1557 :         "movq\t8(%1), %%rcx\n\t"
; 1558 :         "sbbq\t8(%2), %%rcx\n\t"
; 1559 :         "movq\t%%rcx, 8(%3)\n\t"
; 1560 :         "movq\t16(%1), %%rcx\n\t"
; 1561 :         "sbbq\t16(%2), %%rcx\n\t"
; 1562 :         "movq\t%%rcx, 16(%3)\n\t"
; 1563 :         "movq\t24(%1), %%rcx\n\t"
; 1564 :         "sbbq\t24(%2), %%rcx\n\t"
; 1565 :         "movq\t%%rcx, 24(%3)\n\t"
; 1566 :         "movq\t32(%1), %%rcx\n\t"
; 1567 :         "sbbq\t32(%2), %%rcx\n\t"
; 1568 :         "movq\t%%rcx, 32(%3)\n\t"
; 1569 :         "movq\t40(%1), %%rcx\n\t"
; 1570 :         "sbbq\t40(%2), %%rcx\n\t"
; 1571 :         "movq\t%%rcx, 40(%3)\n\t"
; 1572 :         "movq\t48(%1), %%rcx\n\t"
; 1573 :         "sbbq\t48(%2), %%rcx\n\t"
; 1574 :         "movq\t%%rcx, 48(%3)\n\t"
; 1575 :         "movq\t56(%1), %%rcx\n\t"
; 1576 :         "sbbq\t56(%2), %%rcx\n\t"
; 1577 :         "movq\t%%rcx, 56(%3)\n\t"
; 1578 :         "movq\t64(%1), %%rcx\n\t"
; 1579 :         "sbbq\t64(%2), %%rcx\n\t"
; 1580 :         "movq\t%%rcx, 64(%3)\n\t"
; 1581 :         "movq\t72(%1), %%rcx\n\t"
; 1582 :         "sbbq\t72(%2), %%rcx\n\t"
; 1583 :         "movq\t%%rcx, 72(%3)\n\t"
; 1584 :         "movq\t80(%1), %%rcx\n\t"
; 1585 :         "sbbq\t80(%2), %%rcx\n\t"
; 1586 :         "movq\t%%rcx, 80(%3)\n\t"
; 1587 :         "movq\t88(%1), %%rcx\n\t"
; 1588 :         "sbbq\t88(%2), %%rcx\n\t"
; 1589 :         "movq\t%%rcx, 88(%3)\n\t"
; 1590 :         "movq\t96(%1), %%rcx\n\t"
; 1591 :         "sbbq\t96(%2), %%rcx\n\t"
; 1592 :         "movq\t%%rcx, 96(%3)\n\t"
; 1593 :         "movq\t104(%1), %%rcx\n\t"
; 1594 :         "sbbq\t104(%2), %%rcx\n\t"
; 1595 :         "movq\t%%rcx, 104(%3)\n\t"
; 1596 :         "movq\t112(%1), %%rcx\n\t"
; 1597 :         "sbbq\t112(%2), %%rcx\n\t"
; 1598 :         "movq\t%%rcx, 112(%3)\n\t"
; 1599 :         "movq\t120(%1), %%rcx\n\t"
; 1600 :         "sbbq\t120(%2), %%rcx\n\t"
; 1601 :         "movq\t%%rcx, 120(%3)\n\t"
; 1602 :         "setc\t%0"
; 1603 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 1604 :         :
; 1605 :         : "cc", "memory", "%rcx"
; 1606 : );
; 1607 : #else
; 1608 : #error unknown platform
; 1609 : #endif
; 1610 : #else
; 1611 : #error unknown compiler
; 1612 : #endif
; 1613 :     return (c);

  00574	0f b6 85 e0 00
	00 00		 movzx	 eax, BYTE PTR c$[rbp]

; 1614 : }

  0057b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00582	5f		 pop	 rdi
  00583	5d		 pop	 rbp
  00584	c3		 ret	 0
_SUBTRUCT_16WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _SUBTRUCT_32WORDS_SBB
_TEXT	SEGMENT
c$ = 224
xp$ = 232
yp$ = 240
zp$ = 248
_SUBTRUCT_32WORDS_SBB PROC				; COMDAT

; 800  : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E05E7037_autogenerated_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 801  : #ifdef _MSC_VER
; 802  :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 00	 imul	 rax, rax, 0
  0004d	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00054	48 03 c8	 add	 rcx, rax
  00057	48 8b c1	 mov	 rax, rcx
  0005a	b9 08 00 00 00	 mov	 ecx, 8
  0005f	48 6b c9 00	 imul	 rcx, rcx, 0
  00063	ba 08 00 00 00	 mov	 edx, 8
  00068	48 6b d2 00	 imul	 rdx, rdx, 0
  0006c	4c 8b c8	 mov	 r9, rax
  0006f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00076	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0007a	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00081	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00085	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0008c	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00091	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 803  :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00097	b8 08 00 00 00	 mov	 eax, 8
  0009c	48 6b c0 01	 imul	 rax, rax, 1
  000a0	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000a7	48 03 c8	 add	 rcx, rax
  000aa	48 8b c1	 mov	 rax, rcx
  000ad	b9 08 00 00 00	 mov	 ecx, 8
  000b2	48 6b c9 01	 imul	 rcx, rcx, 1
  000b6	ba 08 00 00 00	 mov	 edx, 8
  000bb	48 6b d2 01	 imul	 rdx, rdx, 1
  000bf	4c 8b c8	 mov	 r9, rax
  000c2	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  000c9	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  000cd	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  000d4	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  000d8	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  000df	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  000e4	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 804  :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  000ea	b8 08 00 00 00	 mov	 eax, 8
  000ef	48 6b c0 02	 imul	 rax, rax, 2
  000f3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  000fa	48 03 c8	 add	 rcx, rax
  000fd	48 8b c1	 mov	 rax, rcx
  00100	b9 08 00 00 00	 mov	 ecx, 8
  00105	48 6b c9 02	 imul	 rcx, rcx, 2
  00109	ba 08 00 00 00	 mov	 edx, 8
  0010e	48 6b d2 02	 imul	 rdx, rdx, 2
  00112	4c 8b c8	 mov	 r9, rax
  00115	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0011c	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00120	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00127	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0012b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00132	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00137	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 805  :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0013d	b8 08 00 00 00	 mov	 eax, 8
  00142	48 6b c0 03	 imul	 rax, rax, 3
  00146	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0014d	48 03 c8	 add	 rcx, rax
  00150	48 8b c1	 mov	 rax, rcx
  00153	b9 08 00 00 00	 mov	 ecx, 8
  00158	48 6b c9 03	 imul	 rcx, rcx, 3
  0015c	ba 08 00 00 00	 mov	 edx, 8
  00161	48 6b d2 03	 imul	 rdx, rdx, 3
  00165	4c 8b c8	 mov	 r9, rax
  00168	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0016f	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00173	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0017a	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0017e	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00185	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0018a	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 806  :     c = _SUBTRUCT_UNIT(c, xp[4], yp[4], &zp[4]);

  00190	b8 08 00 00 00	 mov	 eax, 8
  00195	48 6b c0 04	 imul	 rax, rax, 4
  00199	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  001a0	48 03 c8	 add	 rcx, rax
  001a3	48 8b c1	 mov	 rax, rcx
  001a6	b9 08 00 00 00	 mov	 ecx, 8
  001ab	48 6b c9 04	 imul	 rcx, rcx, 4
  001af	ba 08 00 00 00	 mov	 edx, 8
  001b4	48 6b d2 04	 imul	 rdx, rdx, 4
  001b8	4c 8b c8	 mov	 r9, rax
  001bb	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  001c2	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  001c6	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  001cd	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  001d1	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  001d8	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  001dd	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 807  :     c = _SUBTRUCT_UNIT(c, xp[5], yp[5], &zp[5]);

  001e3	b8 08 00 00 00	 mov	 eax, 8
  001e8	48 6b c0 05	 imul	 rax, rax, 5
  001ec	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  001f3	48 03 c8	 add	 rcx, rax
  001f6	48 8b c1	 mov	 rax, rcx
  001f9	b9 08 00 00 00	 mov	 ecx, 8
  001fe	48 6b c9 05	 imul	 rcx, rcx, 5
  00202	ba 08 00 00 00	 mov	 edx, 8
  00207	48 6b d2 05	 imul	 rdx, rdx, 5
  0020b	4c 8b c8	 mov	 r9, rax
  0020e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00215	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00219	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00220	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00224	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0022b	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00230	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 808  :     c = _SUBTRUCT_UNIT(c, xp[6], yp[6], &zp[6]);

  00236	b8 08 00 00 00	 mov	 eax, 8
  0023b	48 6b c0 06	 imul	 rax, rax, 6
  0023f	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00246	48 03 c8	 add	 rcx, rax
  00249	48 8b c1	 mov	 rax, rcx
  0024c	b9 08 00 00 00	 mov	 ecx, 8
  00251	48 6b c9 06	 imul	 rcx, rcx, 6
  00255	ba 08 00 00 00	 mov	 edx, 8
  0025a	48 6b d2 06	 imul	 rdx, rdx, 6
  0025e	4c 8b c8	 mov	 r9, rax
  00261	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00268	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0026c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00273	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00277	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0027e	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00283	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 809  :     c = _SUBTRUCT_UNIT(c, xp[7], yp[7], &zp[7]);

  00289	b8 08 00 00 00	 mov	 eax, 8
  0028e	48 6b c0 07	 imul	 rax, rax, 7
  00292	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00299	48 03 c8	 add	 rcx, rax
  0029c	48 8b c1	 mov	 rax, rcx
  0029f	b9 08 00 00 00	 mov	 ecx, 8
  002a4	48 6b c9 07	 imul	 rcx, rcx, 7
  002a8	ba 08 00 00 00	 mov	 edx, 8
  002ad	48 6b d2 07	 imul	 rdx, rdx, 7
  002b1	4c 8b c8	 mov	 r9, rax
  002b4	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  002bb	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  002bf	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  002c6	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  002ca	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  002d1	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  002d6	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 810  :     c = _SUBTRUCT_UNIT(c, xp[8], yp[8], &zp[8]);

  002dc	b8 08 00 00 00	 mov	 eax, 8
  002e1	48 6b c0 08	 imul	 rax, rax, 8
  002e5	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  002ec	48 03 c8	 add	 rcx, rax
  002ef	48 8b c1	 mov	 rax, rcx
  002f2	b9 08 00 00 00	 mov	 ecx, 8
  002f7	48 6b c9 08	 imul	 rcx, rcx, 8
  002fb	ba 08 00 00 00	 mov	 edx, 8
  00300	48 6b d2 08	 imul	 rdx, rdx, 8
  00304	4c 8b c8	 mov	 r9, rax
  00307	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0030e	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00312	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00319	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0031d	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00324	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00329	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 811  :     c = _SUBTRUCT_UNIT(c, xp[9], yp[9], &zp[9]);

  0032f	b8 08 00 00 00	 mov	 eax, 8
  00334	48 6b c0 09	 imul	 rax, rax, 9
  00338	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0033f	48 03 c8	 add	 rcx, rax
  00342	48 8b c1	 mov	 rax, rcx
  00345	b9 08 00 00 00	 mov	 ecx, 8
  0034a	48 6b c9 09	 imul	 rcx, rcx, 9
  0034e	ba 08 00 00 00	 mov	 edx, 8
  00353	48 6b d2 09	 imul	 rdx, rdx, 9
  00357	4c 8b c8	 mov	 r9, rax
  0035a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00361	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00365	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0036c	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00370	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00377	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0037c	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 812  :     c = _SUBTRUCT_UNIT(c, xp[10], yp[10], &zp[10]);

  00382	b8 08 00 00 00	 mov	 eax, 8
  00387	48 6b c0 0a	 imul	 rax, rax, 10
  0038b	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00392	48 03 c8	 add	 rcx, rax
  00395	48 8b c1	 mov	 rax, rcx
  00398	b9 08 00 00 00	 mov	 ecx, 8
  0039d	48 6b c9 0a	 imul	 rcx, rcx, 10
  003a1	ba 08 00 00 00	 mov	 edx, 8
  003a6	48 6b d2 0a	 imul	 rdx, rdx, 10
  003aa	4c 8b c8	 mov	 r9, rax
  003ad	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  003b4	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  003b8	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  003bf	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  003c3	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  003ca	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  003cf	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 813  :     c = _SUBTRUCT_UNIT(c, xp[11], yp[11], &zp[11]);

  003d5	b8 08 00 00 00	 mov	 eax, 8
  003da	48 6b c0 0b	 imul	 rax, rax, 11
  003de	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  003e5	48 03 c8	 add	 rcx, rax
  003e8	48 8b c1	 mov	 rax, rcx
  003eb	b9 08 00 00 00	 mov	 ecx, 8
  003f0	48 6b c9 0b	 imul	 rcx, rcx, 11
  003f4	ba 08 00 00 00	 mov	 edx, 8
  003f9	48 6b d2 0b	 imul	 rdx, rdx, 11
  003fd	4c 8b c8	 mov	 r9, rax
  00400	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00407	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0040b	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00412	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00416	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0041d	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00422	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 814  :     c = _SUBTRUCT_UNIT(c, xp[12], yp[12], &zp[12]);

  00428	b8 08 00 00 00	 mov	 eax, 8
  0042d	48 6b c0 0c	 imul	 rax, rax, 12
  00431	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00438	48 03 c8	 add	 rcx, rax
  0043b	48 8b c1	 mov	 rax, rcx
  0043e	b9 08 00 00 00	 mov	 ecx, 8
  00443	48 6b c9 0c	 imul	 rcx, rcx, 12
  00447	ba 08 00 00 00	 mov	 edx, 8
  0044c	48 6b d2 0c	 imul	 rdx, rdx, 12
  00450	4c 8b c8	 mov	 r9, rax
  00453	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0045a	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0045e	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00465	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00469	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00470	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00475	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 815  :     c = _SUBTRUCT_UNIT(c, xp[13], yp[13], &zp[13]);

  0047b	b8 08 00 00 00	 mov	 eax, 8
  00480	48 6b c0 0d	 imul	 rax, rax, 13
  00484	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0048b	48 03 c8	 add	 rcx, rax
  0048e	48 8b c1	 mov	 rax, rcx
  00491	b9 08 00 00 00	 mov	 ecx, 8
  00496	48 6b c9 0d	 imul	 rcx, rcx, 13
  0049a	ba 08 00 00 00	 mov	 edx, 8
  0049f	48 6b d2 0d	 imul	 rdx, rdx, 13
  004a3	4c 8b c8	 mov	 r9, rax
  004a6	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  004ad	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  004b1	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  004b8	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  004bc	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  004c3	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  004c8	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 816  :     c = _SUBTRUCT_UNIT(c, xp[14], yp[14], &zp[14]);

  004ce	b8 08 00 00 00	 mov	 eax, 8
  004d3	48 6b c0 0e	 imul	 rax, rax, 14
  004d7	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  004de	48 03 c8	 add	 rcx, rax
  004e1	48 8b c1	 mov	 rax, rcx
  004e4	b9 08 00 00 00	 mov	 ecx, 8
  004e9	48 6b c9 0e	 imul	 rcx, rcx, 14
  004ed	ba 08 00 00 00	 mov	 edx, 8
  004f2	48 6b d2 0e	 imul	 rdx, rdx, 14
  004f6	4c 8b c8	 mov	 r9, rax
  004f9	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00500	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00504	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0050b	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0050f	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00516	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0051b	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 817  :     c = _SUBTRUCT_UNIT(c, xp[15], yp[15], &zp[15]);

  00521	b8 08 00 00 00	 mov	 eax, 8
  00526	48 6b c0 0f	 imul	 rax, rax, 15
  0052a	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00531	48 03 c8	 add	 rcx, rax
  00534	48 8b c1	 mov	 rax, rcx
  00537	b9 08 00 00 00	 mov	 ecx, 8
  0053c	48 6b c9 0f	 imul	 rcx, rcx, 15
  00540	ba 08 00 00 00	 mov	 edx, 8
  00545	48 6b d2 0f	 imul	 rdx, rdx, 15
  00549	4c 8b c8	 mov	 r9, rax
  0054c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00553	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00557	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0055e	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00562	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00569	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0056e	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 818  :     c = _SUBTRUCT_UNIT(c, xp[16], yp[16], &zp[16]);

  00574	b8 08 00 00 00	 mov	 eax, 8
  00579	48 6b c0 10	 imul	 rax, rax, 16
  0057d	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00584	48 03 c8	 add	 rcx, rax
  00587	48 8b c1	 mov	 rax, rcx
  0058a	b9 08 00 00 00	 mov	 ecx, 8
  0058f	48 6b c9 10	 imul	 rcx, rcx, 16
  00593	ba 08 00 00 00	 mov	 edx, 8
  00598	48 6b d2 10	 imul	 rdx, rdx, 16
  0059c	4c 8b c8	 mov	 r9, rax
  0059f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  005a6	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  005aa	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  005b1	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  005b5	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  005bc	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  005c1	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 819  :     c = _SUBTRUCT_UNIT(c, xp[17], yp[17], &zp[17]);

  005c7	b8 08 00 00 00	 mov	 eax, 8
  005cc	48 6b c0 11	 imul	 rax, rax, 17
  005d0	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  005d7	48 03 c8	 add	 rcx, rax
  005da	48 8b c1	 mov	 rax, rcx
  005dd	b9 08 00 00 00	 mov	 ecx, 8
  005e2	48 6b c9 11	 imul	 rcx, rcx, 17
  005e6	ba 08 00 00 00	 mov	 edx, 8
  005eb	48 6b d2 11	 imul	 rdx, rdx, 17
  005ef	4c 8b c8	 mov	 r9, rax
  005f2	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  005f9	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  005fd	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00604	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00608	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0060f	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00614	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 820  :     c = _SUBTRUCT_UNIT(c, xp[18], yp[18], &zp[18]);

  0061a	b8 08 00 00 00	 mov	 eax, 8
  0061f	48 6b c0 12	 imul	 rax, rax, 18
  00623	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0062a	48 03 c8	 add	 rcx, rax
  0062d	48 8b c1	 mov	 rax, rcx
  00630	b9 08 00 00 00	 mov	 ecx, 8
  00635	48 6b c9 12	 imul	 rcx, rcx, 18
  00639	ba 08 00 00 00	 mov	 edx, 8
  0063e	48 6b d2 12	 imul	 rdx, rdx, 18
  00642	4c 8b c8	 mov	 r9, rax
  00645	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0064c	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00650	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00657	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0065b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00662	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00667	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 821  :     c = _SUBTRUCT_UNIT(c, xp[19], yp[19], &zp[19]);

  0066d	b8 08 00 00 00	 mov	 eax, 8
  00672	48 6b c0 13	 imul	 rax, rax, 19
  00676	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0067d	48 03 c8	 add	 rcx, rax
  00680	48 8b c1	 mov	 rax, rcx
  00683	b9 08 00 00 00	 mov	 ecx, 8
  00688	48 6b c9 13	 imul	 rcx, rcx, 19
  0068c	ba 08 00 00 00	 mov	 edx, 8
  00691	48 6b d2 13	 imul	 rdx, rdx, 19
  00695	4c 8b c8	 mov	 r9, rax
  00698	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0069f	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  006a3	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  006aa	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  006ae	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  006b5	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  006ba	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 822  :     c = _SUBTRUCT_UNIT(c, xp[20], yp[20], &zp[20]);

  006c0	b8 08 00 00 00	 mov	 eax, 8
  006c5	48 6b c0 14	 imul	 rax, rax, 20
  006c9	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  006d0	48 03 c8	 add	 rcx, rax
  006d3	48 8b c1	 mov	 rax, rcx
  006d6	b9 08 00 00 00	 mov	 ecx, 8
  006db	48 6b c9 14	 imul	 rcx, rcx, 20
  006df	ba 08 00 00 00	 mov	 edx, 8
  006e4	48 6b d2 14	 imul	 rdx, rdx, 20
  006e8	4c 8b c8	 mov	 r9, rax
  006eb	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  006f2	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  006f6	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  006fd	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00701	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00708	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  0070d	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 823  :     c = _SUBTRUCT_UNIT(c, xp[21], yp[21], &zp[21]);

  00713	b8 08 00 00 00	 mov	 eax, 8
  00718	48 6b c0 15	 imul	 rax, rax, 21
  0071c	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00723	48 03 c8	 add	 rcx, rax
  00726	48 8b c1	 mov	 rax, rcx
  00729	b9 08 00 00 00	 mov	 ecx, 8
  0072e	48 6b c9 15	 imul	 rcx, rcx, 21
  00732	ba 08 00 00 00	 mov	 edx, 8
  00737	48 6b d2 15	 imul	 rdx, rdx, 21
  0073b	4c 8b c8	 mov	 r9, rax
  0073e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00745	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00749	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00750	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00754	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0075b	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00760	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 824  :     c = _SUBTRUCT_UNIT(c, xp[22], yp[22], &zp[22]);

  00766	b8 08 00 00 00	 mov	 eax, 8
  0076b	48 6b c0 16	 imul	 rax, rax, 22
  0076f	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00776	48 03 c8	 add	 rcx, rax
  00779	48 8b c1	 mov	 rax, rcx
  0077c	b9 08 00 00 00	 mov	 ecx, 8
  00781	48 6b c9 16	 imul	 rcx, rcx, 22
  00785	ba 08 00 00 00	 mov	 edx, 8
  0078a	48 6b d2 16	 imul	 rdx, rdx, 22
  0078e	4c 8b c8	 mov	 r9, rax
  00791	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00798	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0079c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  007a3	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  007a7	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  007ae	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  007b3	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 825  :     c = _SUBTRUCT_UNIT(c, xp[23], yp[23], &zp[23]);

  007b9	b8 08 00 00 00	 mov	 eax, 8
  007be	48 6b c0 17	 imul	 rax, rax, 23
  007c2	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  007c9	48 03 c8	 add	 rcx, rax
  007cc	48 8b c1	 mov	 rax, rcx
  007cf	b9 08 00 00 00	 mov	 ecx, 8
  007d4	48 6b c9 17	 imul	 rcx, rcx, 23
  007d8	ba 08 00 00 00	 mov	 edx, 8
  007dd	48 6b d2 17	 imul	 rdx, rdx, 23
  007e1	4c 8b c8	 mov	 r9, rax
  007e4	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  007eb	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  007ef	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  007f6	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  007fa	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00801	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00806	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 826  :     c = _SUBTRUCT_UNIT(c, xp[24], yp[24], &zp[24]);

  0080c	b8 08 00 00 00	 mov	 eax, 8
  00811	48 6b c0 18	 imul	 rax, rax, 24
  00815	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0081c	48 03 c8	 add	 rcx, rax
  0081f	48 8b c1	 mov	 rax, rcx
  00822	b9 08 00 00 00	 mov	 ecx, 8
  00827	48 6b c9 18	 imul	 rcx, rcx, 24
  0082b	ba 08 00 00 00	 mov	 edx, 8
  00830	48 6b d2 18	 imul	 rdx, rdx, 24
  00834	4c 8b c8	 mov	 r9, rax
  00837	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0083e	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00842	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00849	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  0084d	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00854	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00859	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 827  :     c = _SUBTRUCT_UNIT(c, xp[25], yp[25], &zp[25]);

  0085f	b8 08 00 00 00	 mov	 eax, 8
  00864	48 6b c0 19	 imul	 rax, rax, 25
  00868	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  0086f	48 03 c8	 add	 rcx, rax
  00872	48 8b c1	 mov	 rax, rcx
  00875	b9 08 00 00 00	 mov	 ecx, 8
  0087a	48 6b c9 19	 imul	 rcx, rcx, 25
  0087e	ba 08 00 00 00	 mov	 edx, 8
  00883	48 6b d2 19	 imul	 rdx, rdx, 25
  00887	4c 8b c8	 mov	 r9, rax
  0088a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00891	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00895	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  0089c	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  008a0	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  008a7	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  008ac	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 828  :     c = _SUBTRUCT_UNIT(c, xp[26], yp[26], &zp[26]);

  008b2	b8 08 00 00 00	 mov	 eax, 8
  008b7	48 6b c0 1a	 imul	 rax, rax, 26
  008bb	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  008c2	48 03 c8	 add	 rcx, rax
  008c5	48 8b c1	 mov	 rax, rcx
  008c8	b9 08 00 00 00	 mov	 ecx, 8
  008cd	48 6b c9 1a	 imul	 rcx, rcx, 26
  008d1	ba 08 00 00 00	 mov	 edx, 8
  008d6	48 6b d2 1a	 imul	 rdx, rdx, 26
  008da	4c 8b c8	 mov	 r9, rax
  008dd	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  008e4	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  008e8	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  008ef	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  008f3	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  008fa	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  008ff	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 829  :     c = _SUBTRUCT_UNIT(c, xp[27], yp[27], &zp[27]);

  00905	b8 08 00 00 00	 mov	 eax, 8
  0090a	48 6b c0 1b	 imul	 rax, rax, 27
  0090e	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00915	48 03 c8	 add	 rcx, rax
  00918	48 8b c1	 mov	 rax, rcx
  0091b	b9 08 00 00 00	 mov	 ecx, 8
  00920	48 6b c9 1b	 imul	 rcx, rcx, 27
  00924	ba 08 00 00 00	 mov	 edx, 8
  00929	48 6b d2 1b	 imul	 rdx, rdx, 27
  0092d	4c 8b c8	 mov	 r9, rax
  00930	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00937	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0093b	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00942	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00946	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  0094d	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00952	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 830  :     c = _SUBTRUCT_UNIT(c, xp[28], yp[28], &zp[28]);

  00958	b8 08 00 00 00	 mov	 eax, 8
  0095d	48 6b c0 1c	 imul	 rax, rax, 28
  00961	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00968	48 03 c8	 add	 rcx, rax
  0096b	48 8b c1	 mov	 rax, rcx
  0096e	b9 08 00 00 00	 mov	 ecx, 8
  00973	48 6b c9 1c	 imul	 rcx, rcx, 28
  00977	ba 08 00 00 00	 mov	 edx, 8
  0097c	48 6b d2 1c	 imul	 rdx, rdx, 28
  00980	4c 8b c8	 mov	 r9, rax
  00983	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  0098a	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  0098e	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00995	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00999	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  009a0	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  009a5	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 831  :     c = _SUBTRUCT_UNIT(c, xp[29], yp[29], &zp[29]);

  009ab	b8 08 00 00 00	 mov	 eax, 8
  009b0	48 6b c0 1d	 imul	 rax, rax, 29
  009b4	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  009bb	48 03 c8	 add	 rcx, rax
  009be	48 8b c1	 mov	 rax, rcx
  009c1	b9 08 00 00 00	 mov	 ecx, 8
  009c6	48 6b c9 1d	 imul	 rcx, rcx, 29
  009ca	ba 08 00 00 00	 mov	 edx, 8
  009cf	48 6b d2 1d	 imul	 rdx, rdx, 29
  009d3	4c 8b c8	 mov	 r9, rax
  009d6	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  009dd	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  009e1	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  009e8	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  009ec	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  009f3	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  009f8	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 832  :     c = _SUBTRUCT_UNIT(c, xp[30], yp[30], &zp[30]);

  009fe	b8 08 00 00 00	 mov	 eax, 8
  00a03	48 6b c0 1e	 imul	 rax, rax, 30
  00a07	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00a0e	48 03 c8	 add	 rcx, rax
  00a11	48 8b c1	 mov	 rax, rcx
  00a14	b9 08 00 00 00	 mov	 ecx, 8
  00a19	48 6b c9 1e	 imul	 rcx, rcx, 30
  00a1d	ba 08 00 00 00	 mov	 edx, 8
  00a22	48 6b d2 1e	 imul	 rdx, rdx, 30
  00a26	4c 8b c8	 mov	 r9, rax
  00a29	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00a30	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00a34	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00a3b	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00a3f	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00a46	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00a4b	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 833  :     c = _SUBTRUCT_UNIT(c, xp[31], yp[31], &zp[31]);

  00a51	b8 08 00 00 00	 mov	 eax, 8
  00a56	48 6b c0 1f	 imul	 rax, rax, 31
  00a5a	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR zp$[rbp]
  00a61	48 03 c8	 add	 rcx, rax
  00a64	48 8b c1	 mov	 rax, rcx
  00a67	b9 08 00 00 00	 mov	 ecx, 8
  00a6c	48 6b c9 1f	 imul	 rcx, rcx, 31
  00a70	ba 08 00 00 00	 mov	 edx, 8
  00a75	48 6b d2 1f	 imul	 rdx, rdx, 31
  00a79	4c 8b c8	 mov	 r9, rax
  00a7c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR yp$[rbp]
  00a83	4c 8b 04 08	 mov	 r8, QWORD PTR [rax+rcx]
  00a87	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR xp$[rbp]
  00a8e	48 8b 14 10	 mov	 rdx, QWORD PTR [rax+rdx]
  00a92	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR c$[rbp]
  00a99	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00a9e	88 85 e0 00 00
	00		 mov	 BYTE PTR c$[rbp], al

; 834  : #elif defined(__GNUC__)
; 835  : #ifdef _M_IX86
; 836  :     __asm__ volatile (
; 837  :         "addb\t$-1, %0\n\t"
; 838  :         "movl\t(%1), %%ecx\n\t"
; 839  :         "sbbl\t(%2), %%ecx\n\t"
; 840  :         "movl\t%%ecx, (%3)\n\t"
; 841  :         "movl\t4(%1), %%ecx\n\t"
; 842  :         "sbbl\t4(%2), %%ecx\n\t"
; 843  :         "movl\t%%ecx, 4(%3)\n\t"
; 844  :         "movl\t8(%1), %%ecx\n\t"
; 845  :         "sbbl\t8(%2), %%ecx\n\t"
; 846  :         "movl\t%%ecx, 8(%3)\n\t"
; 847  :         "movl\t12(%1), %%ecx\n\t"
; 848  :         "sbbl\t12(%2), %%ecx\n\t"
; 849  :         "movl\t%%ecx, 12(%3)\n\t"
; 850  :         "movl\t16(%1), %%ecx\n\t"
; 851  :         "sbbl\t16(%2), %%ecx\n\t"
; 852  :         "movl\t%%ecx, 16(%3)\n\t"
; 853  :         "movl\t20(%1), %%ecx\n\t"
; 854  :         "sbbl\t20(%2), %%ecx\n\t"
; 855  :         "movl\t%%ecx, 20(%3)\n\t"
; 856  :         "movl\t24(%1), %%ecx\n\t"
; 857  :         "sbbl\t24(%2), %%ecx\n\t"
; 858  :         "movl\t%%ecx, 24(%3)\n\t"
; 859  :         "movl\t28(%1), %%ecx\n\t"
; 860  :         "sbbl\t28(%2), %%ecx\n\t"
; 861  :         "movl\t%%ecx, 28(%3)\n\t"
; 862  :         "movl\t32(%1), %%ecx\n\t"
; 863  :         "sbbl\t32(%2), %%ecx\n\t"
; 864  :         "movl\t%%ecx, 32(%3)\n\t"
; 865  :         "movl\t36(%1), %%ecx\n\t"
; 866  :         "sbbl\t36(%2), %%ecx\n\t"
; 867  :         "movl\t%%ecx, 36(%3)\n\t"
; 868  :         "movl\t40(%1), %%ecx\n\t"
; 869  :         "sbbl\t40(%2), %%ecx\n\t"
; 870  :         "movl\t%%ecx, 40(%3)\n\t"
; 871  :         "movl\t44(%1), %%ecx\n\t"
; 872  :         "sbbl\t44(%2), %%ecx\n\t"
; 873  :         "movl\t%%ecx, 44(%3)\n\t"
; 874  :         "movl\t48(%1), %%ecx\n\t"
; 875  :         "sbbl\t48(%2), %%ecx\n\t"
; 876  :         "movl\t%%ecx, 48(%3)\n\t"
; 877  :         "movl\t52(%1), %%ecx\n\t"
; 878  :         "sbbl\t52(%2), %%ecx\n\t"
; 879  :         "movl\t%%ecx, 52(%3)\n\t"
; 880  :         "movl\t56(%1), %%ecx\n\t"
; 881  :         "sbbl\t56(%2), %%ecx\n\t"
; 882  :         "movl\t%%ecx, 56(%3)\n\t"
; 883  :         "movl\t60(%1), %%ecx\n\t"
; 884  :         "sbbl\t60(%2), %%ecx\n\t"
; 885  :         "movl\t%%ecx, 60(%3)\n\t"
; 886  :         "movl\t64(%1), %%ecx\n\t"
; 887  :         "sbbl\t64(%2), %%ecx\n\t"
; 888  :         "movl\t%%ecx, 64(%3)\n\t"
; 889  :         "movl\t68(%1), %%ecx\n\t"
; 890  :         "sbbl\t68(%2), %%ecx\n\t"
; 891  :         "movl\t%%ecx, 68(%3)\n\t"
; 892  :         "movl\t72(%1), %%ecx\n\t"
; 893  :         "sbbl\t72(%2), %%ecx\n\t"
; 894  :         "movl\t%%ecx, 72(%3)\n\t"
; 895  :         "movl\t76(%1), %%ecx\n\t"
; 896  :         "sbbl\t76(%2), %%ecx\n\t"
; 897  :         "movl\t%%ecx, 76(%3)\n\t"
; 898  :         "movl\t80(%1), %%ecx\n\t"
; 899  :         "sbbl\t80(%2), %%ecx\n\t"
; 900  :         "movl\t%%ecx, 80(%3)\n\t"
; 901  :         "movl\t84(%1), %%ecx\n\t"
; 902  :         "sbbl\t84(%2), %%ecx\n\t"
; 903  :         "movl\t%%ecx, 84(%3)\n\t"
; 904  :         "movl\t88(%1), %%ecx\n\t"
; 905  :         "sbbl\t88(%2), %%ecx\n\t"
; 906  :         "movl\t%%ecx, 88(%3)\n\t"
; 907  :         "movl\t92(%1), %%ecx\n\t"
; 908  :         "sbbl\t92(%2), %%ecx\n\t"
; 909  :         "movl\t%%ecx, 92(%3)\n\t"
; 910  :         "movl\t96(%1), %%ecx\n\t"
; 911  :         "sbbl\t96(%2), %%ecx\n\t"
; 912  :         "movl\t%%ecx, 96(%3)\n\t"
; 913  :         "movl\t100(%1), %%ecx\n\t"
; 914  :         "sbbl\t100(%2), %%ecx\n\t"
; 915  :         "movl\t%%ecx, 100(%3)\n\t"
; 916  :         "movl\t104(%1), %%ecx\n\t"
; 917  :         "sbbl\t104(%2), %%ecx\n\t"
; 918  :         "movl\t%%ecx, 104(%3)\n\t"
; 919  :         "movl\t108(%1), %%ecx\n\t"
; 920  :         "sbbl\t108(%2), %%ecx\n\t"
; 921  :         "movl\t%%ecx, 108(%3)\n\t"
; 922  :         "movl\t112(%1), %%ecx\n\t"
; 923  :         "sbbl\t112(%2), %%ecx\n\t"
; 924  :         "movl\t%%ecx, 112(%3)\n\t"
; 925  :         "movl\t116(%1), %%ecx\n\t"
; 926  :         "sbbl\t116(%2), %%ecx\n\t"
; 927  :         "movl\t%%ecx, 116(%3)\n\t"
; 928  :         "movl\t120(%1), %%ecx\n\t"
; 929  :         "sbbl\t120(%2), %%ecx\n\t"
; 930  :         "movl\t%%ecx, 120(%3)\n\t"
; 931  :         "movl\t124(%1), %%ecx\n\t"
; 932  :         "sbbl\t124(%2), %%ecx\n\t"
; 933  :         "movl\t%%ecx, 124(%3)\n\t"
; 934  :         "setc\t%0"
; 935  :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 936  :         :
; 937  :         : "cc", "memory", "%ecx"
; 938  : );
; 939  : #elif defined(_M_X64)
; 940  :     __asm__ volatile (
; 941  :         "addb\t$-1, %0\n\t"
; 942  :         "movq\t(%1), %%rcx\n\t"
; 943  :         "sbbq\t(%2), %%rcx\n\t"
; 944  :         "movq\t%%rcx, (%3)\n\t"
; 945  :         "movq\t8(%1), %%rcx\n\t"
; 946  :         "sbbq\t8(%2), %%rcx\n\t"
; 947  :         "movq\t%%rcx, 8(%3)\n\t"
; 948  :         "movq\t16(%1), %%rcx\n\t"
; 949  :         "sbbq\t16(%2), %%rcx\n\t"
; 950  :         "movq\t%%rcx, 16(%3)\n\t"
; 951  :         "movq\t24(%1), %%rcx\n\t"
; 952  :         "sbbq\t24(%2), %%rcx\n\t"
; 953  :         "movq\t%%rcx, 24(%3)\n\t"
; 954  :         "movq\t32(%1), %%rcx\n\t"
; 955  :         "sbbq\t32(%2), %%rcx\n\t"
; 956  :         "movq\t%%rcx, 32(%3)\n\t"
; 957  :         "movq\t40(%1), %%rcx\n\t"
; 958  :         "sbbq\t40(%2), %%rcx\n\t"
; 959  :         "movq\t%%rcx, 40(%3)\n\t"
; 960  :         "movq\t48(%1), %%rcx\n\t"
; 961  :         "sbbq\t48(%2), %%rcx\n\t"
; 962  :         "movq\t%%rcx, 48(%3)\n\t"
; 963  :         "movq\t56(%1), %%rcx\n\t"
; 964  :         "sbbq\t56(%2), %%rcx\n\t"
; 965  :         "movq\t%%rcx, 56(%3)\n\t"
; 966  :         "movq\t64(%1), %%rcx\n\t"
; 967  :         "sbbq\t64(%2), %%rcx\n\t"
; 968  :         "movq\t%%rcx, 64(%3)\n\t"
; 969  :         "movq\t72(%1), %%rcx\n\t"
; 970  :         "sbbq\t72(%2), %%rcx\n\t"
; 971  :         "movq\t%%rcx, 72(%3)\n\t"
; 972  :         "movq\t80(%1), %%rcx\n\t"
; 973  :         "sbbq\t80(%2), %%rcx\n\t"
; 974  :         "movq\t%%rcx, 80(%3)\n\t"
; 975  :         "movq\t88(%1), %%rcx\n\t"
; 976  :         "sbbq\t88(%2), %%rcx\n\t"
; 977  :         "movq\t%%rcx, 88(%3)\n\t"
; 978  :         "movq\t96(%1), %%rcx\n\t"
; 979  :         "sbbq\t96(%2), %%rcx\n\t"
; 980  :         "movq\t%%rcx, 96(%3)\n\t"
; 981  :         "movq\t104(%1), %%rcx\n\t"
; 982  :         "sbbq\t104(%2), %%rcx\n\t"
; 983  :         "movq\t%%rcx, 104(%3)\n\t"
; 984  :         "movq\t112(%1), %%rcx\n\t"
; 985  :         "sbbq\t112(%2), %%rcx\n\t"
; 986  :         "movq\t%%rcx, 112(%3)\n\t"
; 987  :         "movq\t120(%1), %%rcx\n\t"
; 988  :         "sbbq\t120(%2), %%rcx\n\t"
; 989  :         "movq\t%%rcx, 120(%3)\n\t"
; 990  :         "movq\t128(%1), %%rcx\n\t"
; 991  :         "sbbq\t128(%2), %%rcx\n\t"
; 992  :         "movq\t%%rcx, 128(%3)\n\t"
; 993  :         "movq\t136(%1), %%rcx\n\t"
; 994  :         "sbbq\t136(%2), %%rcx\n\t"
; 995  :         "movq\t%%rcx, 136(%3)\n\t"
; 996  :         "movq\t144(%1), %%rcx\n\t"
; 997  :         "sbbq\t144(%2), %%rcx\n\t"
; 998  :         "movq\t%%rcx, 144(%3)\n\t"
; 999  :         "movq\t152(%1), %%rcx\n\t"
; 1000 :         "sbbq\t152(%2), %%rcx\n\t"
; 1001 :         "movq\t%%rcx, 152(%3)\n\t"
; 1002 :         "movq\t160(%1), %%rcx\n\t"
; 1003 :         "sbbq\t160(%2), %%rcx\n\t"
; 1004 :         "movq\t%%rcx, 160(%3)\n\t"
; 1005 :         "movq\t168(%1), %%rcx\n\t"
; 1006 :         "sbbq\t168(%2), %%rcx\n\t"
; 1007 :         "movq\t%%rcx, 168(%3)\n\t"
; 1008 :         "movq\t176(%1), %%rcx\n\t"
; 1009 :         "sbbq\t176(%2), %%rcx\n\t"
; 1010 :         "movq\t%%rcx, 176(%3)\n\t"
; 1011 :         "movq\t184(%1), %%rcx\n\t"
; 1012 :         "sbbq\t184(%2), %%rcx\n\t"
; 1013 :         "movq\t%%rcx, 184(%3)\n\t"
; 1014 :         "movq\t192(%1), %%rcx\n\t"
; 1015 :         "sbbq\t192(%2), %%rcx\n\t"
; 1016 :         "movq\t%%rcx, 192(%3)\n\t"
; 1017 :         "movq\t200(%1), %%rcx\n\t"
; 1018 :         "sbbq\t200(%2), %%rcx\n\t"
; 1019 :         "movq\t%%rcx, 200(%3)\n\t"
; 1020 :         "movq\t208(%1), %%rcx\n\t"
; 1021 :         "sbbq\t208(%2), %%rcx\n\t"
; 1022 :         "movq\t%%rcx, 208(%3)\n\t"
; 1023 :         "movq\t216(%1), %%rcx\n\t"
; 1024 :         "sbbq\t216(%2), %%rcx\n\t"
; 1025 :         "movq\t%%rcx, 216(%3)\n\t"
; 1026 :         "movq\t224(%1), %%rcx\n\t"
; 1027 :         "sbbq\t224(%2), %%rcx\n\t"
; 1028 :         "movq\t%%rcx, 224(%3)\n\t"
; 1029 :         "movq\t232(%1), %%rcx\n\t"
; 1030 :         "sbbq\t232(%2), %%rcx\n\t"
; 1031 :         "movq\t%%rcx, 232(%3)\n\t"
; 1032 :         "movq\t240(%1), %%rcx\n\t"
; 1033 :         "sbbq\t240(%2), %%rcx\n\t"
; 1034 :         "movq\t%%rcx, 240(%3)\n\t"
; 1035 :         "movq\t248(%1), %%rcx\n\t"
; 1036 :         "sbbq\t248(%2), %%rcx\n\t"
; 1037 :         "movq\t%%rcx, 248(%3)\n\t"
; 1038 :         "setc\t%0"
; 1039 :         : "+r"(c), "+r"(xp), "+r"(yp), "+r"(zp)
; 1040 :         :
; 1041 :         : "cc", "memory", "%rcx"
; 1042 : );
; 1043 : #else
; 1044 : #error unknown platform
; 1045 : #endif
; 1046 : #else
; 1047 : #error unknown compiler
; 1048 : #endif
; 1049 :     return (c);

  00aa4	0f b6 85 e0 00
	00 00		 movzx	 eax, BYTE PTR c$[rbp]

; 1050 : }

  00aab	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00ab2	5f		 pop	 rdi
  00ab3	5d		 pop	 rbp
  00ab4	c3		 ret	 0
_SUBTRUCT_32WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_UNIT
_TEXT	SEGMENT
pos$ = 4
x$ = 256
_LZCNT_ALT_UNIT PROC					; COMDAT

; 454  :         {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 455  :             if (x == 0)

  00036	48 83 bd 00 01
	00 00 00	 cmp	 QWORD PTR x$[rbp], 0
  0003e	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  00040	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00045	eb 1c		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);
; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);

  00047	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  0004e	48 0f bd c0	 bsr	 rax, rax
  00052	89 45 04	 mov	 DWORD PTR pos$[rbp], eax

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00055	8b 45 04	 mov	 eax, DWORD PTR pos$[rbp]
  00058	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
$LN1@LZCNT_ALT_:

; 480  :         }

  00063	48 8b f8	 mov	 rdi, rax
  00066	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_LZCNT_ALT_UNIT$rtcFrameData
  00071	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00076	48 8b c7	 mov	 rax, rdi
  00079	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
_LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_32
_TEXT	SEGMENT
pos$ = 4
x$ = 256
_LZCNT_ALT_32 PROC					; COMDAT

; 421  :         {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR [rsp+296]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 422  :             if (x == 0)

  00034	83 bd 00 01 00
	00 00		 cmp	 DWORD PTR x$[rbp], 0
  0003b	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  0003d	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00042	eb 1a		 jmp	 SHORT $LN1@LZCNT_ALT_
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  00044	8b 85 00 01 00
	00		 mov	 eax, DWORD PTR x$[rbp]
  0004a	0f bd c0	 bsr	 eax, eax
  0004d	89 45 04	 mov	 DWORD PTR pos$[rbp], eax

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00050	8b 45 04	 mov	 eax, DWORD PTR pos$[rbp]
  00053	b9 1f 00 00 00	 mov	 ecx, 31
  00058	48 2b c8	 sub	 rcx, rax
  0005b	48 8b c1	 mov	 rax, rcx
$LN1@LZCNT_ALT_:

; 433  :         }

  0005e	48 8b f8	 mov	 rdi, rax
  00061	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_LZCNT_ALT_32$rtcFrameData
  0006c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00071	48 8b c7	 mov	 rax, rdi
  00074	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
_LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _SUBTRUCT_UNIT
_TEXT	SEGMENT
borrow$ = 224
u$ = 232
v$ = 240
w$ = 248
_SUBTRUCT_UNIT PROC					; COMDAT

; 198  :         {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 199  : #ifdef _M_IX86
; 200  :             return (_subborrow_u32(borrow, u, v, w));
; 201  : #elif defined(_M_X64)
; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00044	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR borrow$[rbp]
  00052	80 c1 ff	 add	 cl, -1
  00055	48 1b 85 f0 00
	00 00		 sbb	 rax, QWORD PTR v$[rbp]
  0005c	0f 92 c1	 setb	 cl
  0005f	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00066	48 89 02	 mov	 QWORD PTR [rdx], rax
  00069	0f b6 c1	 movzx	 eax, cl

; 203  : #else
; 204  : #error unknown platform
; 205  : #endif
; 206  :         }

  0006c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
_SUBTRUCT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _FROMDWORDTOWORD
_TEXT	SEGMENT
value$ = 224
result_high$ = 232
_FROMDWORDTOWORD PROC					; COMDAT

; 145  :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR value$[rbp]
  00042	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  00046	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR result_high$[rbp]
  0004d	89 01		 mov	 DWORD PTR [rcx], eax

; 147  :             return ((_UINT32_T)value);

  0004f	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR value$[rbp]

; 148  :         }

  00055	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
_FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _FROMWORDTODWORD
_TEXT	SEGMENT
value_high$ = 224
value_low$ = 232
_FROMWORDTODWORD PROC					; COMDAT

; 140  :         {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	55		 push	 rbp
  00009	57		 push	 rdi
  0000a	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR [rsp+264]
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00033	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00038	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR value_high$[rbp]
  0003e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00042	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR value_low$[rbp]
  00048	48 0b c1	 or	 rax, rcx

; 142  :         }

  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
_FROMWORDTODWORD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
_TEXT	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
w$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X, COMDAT

; 713  :     {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 68 02
	00 00		 sub	 rsp, 616		; 00000268H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 9a 00 00 00	 mov	 ecx, 154		; 0000009aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 88
	02 00 00	 mov	 rcx, QWORD PTR [rsp+648]
  0002f	48 c7 85 28 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 714  :         if (u == nullptr)

  00046	48 83 bd 60 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  0004e	75 2d		 jne	 SHORT $LN2@PMC_Subtru

; 715  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00050	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00057	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0005e	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00065	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00071	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00078	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Subtru:

; 716  :         if (v == nullptr)

  0007d	48 83 bd 68 02
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00085	75 2d		 jne	 SHORT $LN3@PMC_Subtru

; 717  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00087	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00095	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  0009c	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a8	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000af	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Subtru:

; 718  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  000b4	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000bb	48 89 45 08	 mov	 QWORD PTR nu$[rbp], rax

; 719  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  000bf	48 8b 85 68 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000c6	48 89 45 28	 mov	 QWORD PTR nv$[rbp], rax

; 720  :         CheckNumber(nu);

  000ca	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000ce	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 721  :         CheckNumber(nv);

  000d3	48 8b 4d 28	 mov	 rcx, QWORD PTR nv$[rbp]
  000d7	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 722  :         ResourceHolderUINT root;

  000dc	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  000e0	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000e5	90		 npad	 1

; 723  :         NUMBER_HEADER* w = PMC_Subtruct_X_X_Imp(nu, nv);

  000e6	48 8b 55 28	 mov	 rdx, QWORD PTR nv$[rbp]
  000ea	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000ee	e8 00 00 00 00	 call	 ?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp
  000f3	48 89 85 88 00
	00 00		 mov	 QWORD PTR w$[rbp], rax

; 724  :         root.HookNumber(w);

  000fa	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00101	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00105	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 725  : #ifdef _DEBUG
; 726  :         CheckNumber(w);

  0010a	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR w$[rbp]
  00111	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 727  : #endif
; 728  :         root.UnlinkNumber(w);

  00116	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0011d	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00121	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 729  :         return ((PMC_HANDLE_UINT)w);

  00126	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  0012d	48 89 85 08 02
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00134	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00138	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0013d	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 730  :     }

  00144	48 8b f8	 mov	 rdi, rax
  00147	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcFrameData
  00152	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00157	48 8b c7	 mov	 rax, rdi
  0015a	48 8d a5 48 02
	00 00		 lea	 rsp, QWORD PTR [rbp+584]
  00161	5f		 pop	 rdi
  00162	5d		 pop	 rbp
  00163	c3		 ret	 0
$LN6@PMC_Subtru:
?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
w$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
w$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
_TEXT	SEGMENT
nu$ = 8
root$ = 40
w$ = 104
$T4 = 328
$T5 = 408
$T6 = 488
$T7 = 520
u$ = 576
v$ = 584
?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L, COMDAT

; 631  :     {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 48 02
	00 00		 sub	 rsp, 584		; 00000248H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 92 00 00 00	 mov	 ecx, 146		; 00000092H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 68
	02 00 00	 mov	 rcx, QWORD PTR [rsp+616]
  0002f	48 c7 85 08 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 632  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)

  00046	33 c0		 xor	 eax, eax
  00048	85 c0		 test	 eax, eax
  0004a	74 2d		 je	 SHORT $LN2@PMC_Subtru

; 633  :         {
; 634  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 635  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_subtruct.cpp;PMC_Subtruct_X_L;1");

  0004c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EI@JFBILKMA@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@
  00053	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0005a	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00061	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00066	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006d	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00074	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Subtru:

; 636  :         }
; 637  :         if (u == nullptr)

  00079	48 83 bd 40 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  00081	75 2d		 jne	 SHORT $LN3@PMC_Subtru

; 638  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00083	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00091	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00098	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a4	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000ab	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Subtru:

; 639  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  000b0	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000b7	48 89 45 08	 mov	 QWORD PTR nu$[rbp], rax

; 640  :         CheckNumber(nu);

  000bb	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000bf	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 641  :         ResourceHolderUINT root;

  000c4	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  000c8	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000cd	90		 npad	 1

; 642  :         NUMBER_HEADER* w = PMC_Subtruct_X_L_Imp(nu, v);

  000ce	48 8b 95 48 02
	00 00		 mov	 rdx, QWORD PTR v$[rbp]
  000d5	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000d9	e8 00 00 00 00	 call	 ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
  000de	48 89 45 68	 mov	 QWORD PTR w$[rbp], rax

; 643  :         root.HookNumber(w);

  000e2	48 8b 55 68	 mov	 rdx, QWORD PTR w$[rbp]
  000e6	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  000ea	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 644  : #ifdef _DEBUG
; 645  :         CheckNumber(w);

  000ef	48 8b 4d 68	 mov	 rcx, QWORD PTR w$[rbp]
  000f3	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 646  : #endif
; 647  :         root.UnlinkNumber(w);

  000f8	48 8b 55 68	 mov	 rdx, QWORD PTR w$[rbp]
  000fc	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  00100	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 648  :         return ((PMC_HANDLE_UINT)w);

  00105	48 8b 45 68	 mov	 rax, QWORD PTR w$[rbp]
  00109	48 89 85 e8 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00110	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  00114	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00119	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 649  :     }

  00120	48 8b f8	 mov	 rdi, rax
  00123	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z$rtcFrameData
  0012e	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00133	48 8b c7	 mov	 rax, rdi
  00136	48 8d a5 28 02
	00 00		 lea	 rsp, QWORD PTR [rbp+552]
  0013d	5f		 pop	 rdi
  0013e	5d		 pop	 rbp
  0013f	c3		 ret	 0
$LN6@PMC_Subtru:
?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
root$ = 40
w$ = 104
$T4 = 328
$T5 = 408
$T6 = 488
$T7 = 520
u$ = 576
v$ = 584
?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
root$ = 40
w$ = 104
$T4 = 328
$T5 = 408
$T6 = 488
$T7 = 520
u$ = 576
v$ = 584
?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_L'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
_TEXT	SEGMENT
nu$ = 8
root$ = 40
w$ = 104
$T4 = 328
$T5 = 408
$T6 = 488
$T7 = 520
u$ = 576
v$ = 584
?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I, COMDAT

; 324  :     {

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 48 02
	00 00		 sub	 rsp, 584		; 00000248H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 92 00 00 00	 mov	 ecx, 146		; 00000092H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 68
	02 00 00	 mov	 rcx, QWORD PTR [rsp+616]
  0002e	48 c7 85 08 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 325  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  00045	33 c0		 xor	 eax, eax
  00047	85 c0		 test	 eax, eax
  00049	74 2d		 je	 SHORT $LN2@PMC_Subtru

; 326  :         {
; 327  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 328  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_subtruct.cpp;PMC_Subtruct_X_I;1");

  0004b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EI@NNPILEKE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@
  00052	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  00059	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00060	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006c	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00073	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Subtru:

; 329  :         }
; 330  :         if (u == nullptr)

  00078	48 83 bd 40 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  00080	75 2d		 jne	 SHORT $LN3@PMC_Subtru

; 331  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00082	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00090	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00097	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a3	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000aa	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Subtru:

; 332  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  000af	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000b6	48 89 45 08	 mov	 QWORD PTR nu$[rbp], rax

; 333  :         CheckNumber(nu);

  000ba	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000be	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 334  :         ResourceHolderUINT root;

  000c3	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  000c7	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000cc	90		 npad	 1

; 335  :         NUMBER_HEADER* w = PMC_Subtruct_X_I_Imp(nu, v);

  000cd	8b 95 48 02 00
	00		 mov	 edx, DWORD PTR v$[rbp]
  000d3	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000d7	e8 00 00 00 00	 call	 ?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp
  000dc	48 89 45 68	 mov	 QWORD PTR w$[rbp], rax

; 336  :         root.HookNumber(w);

  000e0	48 8b 55 68	 mov	 rdx, QWORD PTR w$[rbp]
  000e4	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  000e8	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 337  : #ifdef _DEBUG
; 338  :         CheckNumber(w);

  000ed	48 8b 4d 68	 mov	 rcx, QWORD PTR w$[rbp]
  000f1	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 339  : #endif
; 340  :         root.UnlinkNumber(w);

  000f6	48 8b 55 68	 mov	 rdx, QWORD PTR w$[rbp]
  000fa	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  000fe	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 341  :         return ((PMC_HANDLE_UINT)w);

  00103	48 8b 45 68	 mov	 rax, QWORD PTR w$[rbp]
  00107	48 89 85 e8 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  0010e	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  00112	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00117	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 342  :     }

  0011e	48 8b f8	 mov	 rdi, rax
  00121	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00125	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z$rtcFrameData
  0012c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00131	48 8b c7	 mov	 rax, rdi
  00134	48 8d a5 28 02
	00 00		 lea	 rsp, QWORD PTR [rbp+552]
  0013b	5f		 pop	 rdi
  0013c	5d		 pop	 rbp
  0013d	c3		 ret	 0
$LN6@PMC_Subtru:
?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
root$ = 40
w$ = 104
$T4 = 328
$T5 = 408
$T6 = 488
$T7 = 520
u$ = 576
v$ = 584
?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_I'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
root$ = 40
w$ = 104
$T4 = 328
$T5 = 408
$T6 = 488
$T7 = 520
u$ = 576
v$ = 584
?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_I'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 28	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Subtruct_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z
_TEXT	SEGMENT
nv$ = 8
u_hi$8 = 36
u_lo$9 = 68
u_bit_count$10 = 104
v_bit_count$11 = 136
temp_w$12 = 168
borrow$13 = 196
u_bit_count$14 = 232
v_bit_count$15 = 264
temp_w_hi$16 = 296
temp_w_lo$17 = 328
borrow$18 = 356
u_bit_count$19 = 392
v_bit_count$20 = 424
temp_w$21 = 456
borrow$22 = 484
$T23 = 1096
$T24 = 1176
$T25 = 1256
$T26 = 1336
$T27 = 1416
$T28 = 1496
$T29 = 1576
$T30 = 1656
$T31 = 1736
u$ = 1840
v$ = 1848
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X, COMDAT

; 345  :     {

$LN29:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 07
	00 00		 sub	 rsp, 1848		; 00000738H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 ce 01 00 00	 mov	 ecx, 462		; 000001ceH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	07 00 00	 mov	 rcx, QWORD PTR [rsp+1880]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 346  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)

  0003b	33 c0		 xor	 eax, eax
  0003d	85 c0		 test	 eax, eax
  0003f	74 2d		 je	 SHORT $LN2@PMC_Subtru

; 347  :         {
; 348  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 349  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_subtruct.cpp;PMC_Subtruct_L_X;1");

  00041	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EI@GCPHFDJC@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0004f	48 8d 8d 48 04
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  00056	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0005b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00062	48 8d 8d 48 04
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  00069	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Subtru:

; 350  :         }
; 351  :         if (v == nullptr)

  0006e	48 83 bd 38 07
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00076	75 2d		 jne	 SHORT $LN3@PMC_Subtru

; 352  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00078	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0007f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00086	48 8d 8d 98 04
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  0008d	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00092	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00099	48 8d 8d 98 04
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  000a0	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Subtru:

; 353  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  000a5	48 8b 85 38 07
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000ac	48 89 45 08	 mov	 QWORD PTR nv$[rbp], rax

; 354  :         CheckNumber(nv);

  000b0	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  000b4	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 355  :         if (u == 0)

  000b9	48 83 bd 30 07
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  000c1	75 42		 jne	 SHORT $LN4@PMC_Subtru

; 356  :         {
; 357  :             // u が 0 である場合
; 358  : 
; 359  :             if (nv->IS_ZERO)

  000c3	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  000c7	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000ca	83 e0 01	 and	 eax, 1
  000cd	85 c0		 test	 eax, eax
  000cf	74 09		 je	 SHORT $LN6@PMC_Subtru

; 360  :             {
; 361  :                 // v が 0 である場合
; 362  : 
; 363  :                 // x と y がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 364  :                 return (0);

  000d1	33 c0		 xor	 eax, eax
  000d3	e9 50 03 00 00	 jmp	 $LN1@PMC_Subtru

; 365  :             }
; 366  :             else

  000d8	eb 26		 jmp	 SHORT $LN7@PMC_Subtru
$LN6@PMC_Subtru:

; 367  :             {
; 368  :                 // v が 0 ではない場合
; 369  : 
; 370  :                 // 演算結果は負となってしまうのでエラーを返す。
; 371  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  000da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  000e1	48 8d 8d e8 04
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  000e8	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  000ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  000f4	48 8d 8d e8 04
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  000fb	e8 00 00 00 00	 call	 _CxxThrowException
$LN7@PMC_Subtru:

; 372  :             }
; 373  :         }
; 374  :         else

  00100	e9 23 03 00 00	 jmp	 $LN5@PMC_Subtru
$LN4@PMC_Subtru:

; 375  :         {
; 376  :             // u が 0 ではない場合
; 377  : 
; 378  :             if (nv->IS_ZERO)

  00105	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  00109	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0010c	83 e0 01	 and	 eax, 1
  0010f	85 c0		 test	 eax, eax
  00111	74 11		 je	 SHORT $LN8@PMC_Subtru

; 379  :             {
; 380  :                 // v が 0 である場合
; 381  : 
; 382  :                 // 演算結果となる u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 383  :                 return (u);

  00113	48 8b 85 30 07
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0011a	e9 09 03 00 00	 jmp	 $LN1@PMC_Subtru

; 384  :             }
; 385  :             else

  0011f	e9 04 03 00 00	 jmp	 $LN9@PMC_Subtru
$LN8@PMC_Subtru:

; 386  :             {
; 387  :                 // u と v がともに 0 ではない場合
; 388  : 
; 389  :                 // u と v の差を計算する
; 390  :                 if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)

  00124	33 c0		 xor	 eax, eax
  00126	85 c0		 test	 eax, eax
  00128	0f 84 29 02 00
	00		 je	 $LN10@PMC_Subtru

; 391  :                 {
; 392  :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 393  : 
; 394  :                     _UINT32_T u_hi;
; 395  :                     _UINT32_T u_lo = _FROMDWORDTOWORD(u, &u_hi);

  0012e	48 8d 55 24	 lea	 rdx, QWORD PTR u_hi$8[rbp]
  00132	48 8b 8d 30 07
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  00139	e8 00 00 00 00	 call	 _FROMDWORDTOWORD
  0013e	89 45 44	 mov	 DWORD PTR u_lo$9[rbp], eax

; 396  :                     if (u_hi == 0)

  00141	83 7d 24 00	 cmp	 DWORD PTR u_hi$8[rbp], 0
  00145	0f 85 cd 00 00
	00		 jne	 $LN12@PMC_Subtru

; 397  :                     {
; 398  :                         // u の値が 32bit で表現可能な場合
; 399  :                         __UNIT_TYPE u_bit_count = sizeof(u_lo) * 8 - _LZCNT_ALT_32(u_lo);

  0014b	8b 4d 44	 mov	 ecx, DWORD PTR u_lo$9[rbp]
  0014e	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  00153	48 98		 cdqe
  00155	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0015a	48 2b c8	 sub	 rcx, rax
  0015d	48 8b c1	 mov	 rax, rcx
  00160	48 89 45 68	 mov	 QWORD PTR u_bit_count$10[rbp], rax

; 400  :                         __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;

  00164	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  00168	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0016c	48 89 85 88 00
	00 00		 mov	 QWORD PTR v_bit_count$11[rbp], rax

; 401  :                         if (u_bit_count < v_bit_count)

  00173	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR v_bit_count$11[rbp]
  0017a	48 39 45 68	 cmp	 QWORD PTR u_bit_count$10[rbp], rax
  0017e	73 28		 jae	 SHORT $LN14@PMC_Subtru

; 402  :                         {
; 403  :                             // 明らかに u < v である場合
; 404  : 
; 405  :                             // 演算結果は負となってしまうのでエラーを返す。
; 406  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00180	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00187	48 8d 8d 38 05
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  0018e	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00193	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0019a	48 8d 8d 38 05
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  001a1	e8 00 00 00 00	 call	 _CxxThrowException

; 407  :                         }
; 408  :                         else

  001a6	eb 6b		 jmp	 SHORT $LN15@PMC_Subtru
$LN14@PMC_Subtru:

; 409  :                         {
; 410  :                             // u のビット長が v のビット長以上である場合
; 411  : 
; 412  :                             // u が32bit 整数で表現できるので v も 32bit 整数で表現できる
; 413  : 
; 414  :                             __UNIT_TYPE temp_w;
; 415  :                             char borrow = _SUBTRUCT_UNIT(0, u_lo, nv->BLOCK[0], &temp_w);

  001a8	b8 08 00 00 00	 mov	 eax, 8
  001ad	48 6b c0 00	 imul	 rax, rax, 0
  001b1	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  001b5	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  001b9	8b 55 44	 mov	 edx, DWORD PTR u_lo$9[rbp]
  001bc	4c 8d 8d a8 00
	00 00		 lea	 r9, QWORD PTR temp_w$12[rbp]
  001c3	4c 8b 04 01	 mov	 r8, QWORD PTR [rcx+rax]
  001c7	33 c9		 xor	 ecx, ecx
  001c9	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  001ce	88 85 c4 00 00
	00		 mov	 BYTE PTR borrow$13[rbp], al

; 416  :                             if (borrow)

  001d4	0f be 85 c4 00
	00 00		 movsx	 eax, BYTE PTR borrow$13[rbp]
  001db	85 c0		 test	 eax, eax
  001dd	74 28		 je	 SHORT $LN16@PMC_Subtru

; 417  :                             {
; 418  :                                 // ボローが発生した場合は演算結果が負なのでエラーとする
; 419  :                                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  001df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  001e6	48 8d 8d 88 05
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  001ed	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  001f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  001f9	48 8d 8d 88 05
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  00200	e8 00 00 00 00	 call	 _CxxThrowException

; 420  :                             }
; 421  :                             else

  00205	eb 0c		 jmp	 SHORT $LN17@PMC_Subtru
$LN16@PMC_Subtru:

; 422  :                                 return (temp_w);

  00207	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR temp_w$12[rbp]
  0020e	e9 15 02 00 00	 jmp	 $LN1@PMC_Subtru
$LN17@PMC_Subtru:
$LN15@PMC_Subtru:

; 423  :                         }
; 424  :                     }
; 425  :                     else

  00213	e9 3a 01 00 00	 jmp	 $LN13@PMC_Subtru
$LN12@PMC_Subtru:

; 426  :                     {
; 427  :                         // u の値が 32bit では表現できない場合
; 428  :                         __UNIT_TYPE u_bit_count = sizeof(u) * 8 - _LZCNT_ALT_32(u_hi);

  00218	8b 4d 24	 mov	 ecx, DWORD PTR u_hi$8[rbp]
  0021b	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  00220	48 98		 cdqe
  00222	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00227	48 2b c8	 sub	 rcx, rax
  0022a	48 8b c1	 mov	 rax, rcx
  0022d	48 89 85 e8 00
	00 00		 mov	 QWORD PTR u_bit_count$14[rbp], rax

; 429  :                         __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;

  00234	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  00238	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0023c	48 89 85 08 01
	00 00		 mov	 QWORD PTR v_bit_count$15[rbp], rax

; 430  :                         if (u_bit_count < v_bit_count)

  00243	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR v_bit_count$15[rbp]
  0024a	48 39 85 e8 00
	00 00		 cmp	 QWORD PTR u_bit_count$14[rbp], rax
  00251	73 2b		 jae	 SHORT $LN18@PMC_Subtru

; 431  :                         {
; 432  :                             // 明らかに u < v である場合
; 433  : 
; 434  :                             // 演算結果は負となってしまうのでエラーを返す。
; 435  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00253	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0025a	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  00261	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00266	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0026d	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  00274	e8 00 00 00 00	 call	 _CxxThrowException

; 436  :                         }
; 437  :                         else

  00279	e9 d4 00 00 00	 jmp	 $LN19@PMC_Subtru
$LN18@PMC_Subtru:

; 438  :                         {
; 439  :                             // u のビット長が v のビット長以上である場合
; 440  : 
; 441  :                             // この時点では u は 33 ～ 64bit 整数であり、v は 1 ～ 64bit整数である
; 442  : 
; 443  :                             __UNIT_TYPE temp_w_hi;
; 444  :                             __UNIT_TYPE temp_w_lo;
; 445  :                             char borrow;
; 446  :                             borrow = _SUBTRUCT_UNIT(0, u_lo, nv->BLOCK[0], &temp_w_lo);

  0027e	b8 08 00 00 00	 mov	 eax, 8
  00283	48 6b c0 00	 imul	 rax, rax, 0
  00287	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  0028b	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0028f	8b 55 44	 mov	 edx, DWORD PTR u_lo$9[rbp]
  00292	4c 8d 8d 48 01
	00 00		 lea	 r9, QWORD PTR temp_w_lo$17[rbp]
  00299	4c 8b 04 01	 mov	 r8, QWORD PTR [rcx+rax]
  0029d	33 c9		 xor	 ecx, ecx
  0029f	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  002a4	88 85 64 01 00
	00		 mov	 BYTE PTR borrow$18[rbp], al

; 447  :                             if (nv->UNIT_WORD_COUNT <= 1)

  002aa	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  002ae	48 83 78 18 01	 cmp	 QWORD PTR [rax+24], 1
  002b3	77 23		 ja	 SHORT $LN20@PMC_Subtru

; 448  :                             {
; 449  :                                 // v が 1 ワードで表現できる場合(1 ～ 32bit 整数)
; 450  :                                 borrow = _SUBTRUCT_UNIT(borrow, u_hi, 0, &temp_w_hi);

  002b5	8b 45 24	 mov	 eax, DWORD PTR u_hi$8[rbp]
  002b8	4c 8d 8d 28 01
	00 00		 lea	 r9, QWORD PTR temp_w_hi$16[rbp]
  002bf	45 33 c0	 xor	 r8d, r8d
  002c2	8b d0		 mov	 edx, eax
  002c4	0f b6 8d 64 01
	00 00		 movzx	 ecx, BYTE PTR borrow$18[rbp]
  002cb	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  002d0	88 85 64 01 00
	00		 mov	 BYTE PTR borrow$18[rbp], al

; 451  :                             }
; 452  :                             else

  002d6	eb 31		 jmp	 SHORT $LN21@PMC_Subtru
$LN20@PMC_Subtru:

; 453  :                             {
; 454  :                                 // v が 1 ワードで表現できない場合(33 ～ 64bit 整数)
; 455  :                                 borrow = _SUBTRUCT_UNIT(borrow, u_hi, nv->BLOCK[1], &temp_w_hi);

  002d8	b8 08 00 00 00	 mov	 eax, 8
  002dd	48 6b c0 01	 imul	 rax, rax, 1
  002e1	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  002e5	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  002e9	8b 55 24	 mov	 edx, DWORD PTR u_hi$8[rbp]
  002ec	4c 8d 8d 28 01
	00 00		 lea	 r9, QWORD PTR temp_w_hi$16[rbp]
  002f3	4c 8b 04 01	 mov	 r8, QWORD PTR [rcx+rax]
  002f7	0f b6 8d 64 01
	00 00		 movzx	 ecx, BYTE PTR borrow$18[rbp]
  002fe	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00303	88 85 64 01 00
	00		 mov	 BYTE PTR borrow$18[rbp], al
$LN21@PMC_Subtru:

; 456  :                             }
; 457  :                             if (borrow)

  00309	0f be 85 64 01
	00 00		 movsx	 eax, BYTE PTR borrow$18[rbp]
  00310	85 c0		 test	 eax, eax
  00312	74 28		 je	 SHORT $LN22@PMC_Subtru

; 458  :                             {
; 459  :                                 // ボローが発生した場合は演算結果が負なのでエラーとする
; 460  :                                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00314	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0031b	48 8d 8d 28 06
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  00322	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00327	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0032e	48 8d 8d 28 06
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  00335	e8 00 00 00 00	 call	 _CxxThrowException

; 461  :                             }
; 462  :                             else

  0033a	eb 16		 jmp	 SHORT $LN23@PMC_Subtru
$LN22@PMC_Subtru:

; 463  :                             {
; 464  :                                 return (_FROMWORDTODWORD((_UINT32_T)temp_w_hi, (_UINT32_T)temp_w_lo));

  0033c	8b 95 48 01 00
	00		 mov	 edx, DWORD PTR temp_w_lo$17[rbp]
  00342	8b 8d 28 01 00
	00		 mov	 ecx, DWORD PTR temp_w_hi$16[rbp]
  00348	e8 00 00 00 00	 call	 _FROMWORDTODWORD
  0034d	e9 d6 00 00 00	 jmp	 $LN1@PMC_Subtru
$LN23@PMC_Subtru:
$LN19@PMC_Subtru:
$LN13@PMC_Subtru:

; 465  :                             }
; 466  :                         }
; 467  :                     }
; 468  :                 }
; 469  :                 else

  00352	e9 d1 00 00 00	 jmp	 $LN11@PMC_Subtru
$LN10@PMC_Subtru:

; 470  :                 {
; 471  :                     // _UINT64_T が 1 ワードで表現できる場合
; 472  : 
; 473  :                     __UNIT_TYPE u_bit_count = sizeof(u) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)u);

  00357	48 8b 8d 30 07
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  0035e	e8 00 00 00 00	 call	 _LZCNT_ALT_UNIT
  00363	48 98		 cdqe
  00365	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0036a	48 2b c8	 sub	 rcx, rax
  0036d	48 8b c1	 mov	 rax, rcx
  00370	48 89 85 88 01
	00 00		 mov	 QWORD PTR u_bit_count$19[rbp], rax

; 474  :                     __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;

  00377	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  0037b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0037f	48 89 85 a8 01
	00 00		 mov	 QWORD PTR v_bit_count$20[rbp], rax

; 475  :                     if (u_bit_count < v_bit_count)

  00386	48 8b 85 a8 01
	00 00		 mov	 rax, QWORD PTR v_bit_count$20[rbp]
  0038d	48 39 85 88 01
	00 00		 cmp	 QWORD PTR u_bit_count$19[rbp], rax
  00394	73 28		 jae	 SHORT $LN24@PMC_Subtru

; 476  :                     {
; 477  :                         // 明らかに u < v である場合
; 478  : 
; 479  :                         // 演算結果は負となってしまうのでエラーを返す。
; 480  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00396	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0039d	48 8d 8d 78 06
	00 00		 lea	 rcx, QWORD PTR $T30[rbp]
  003a4	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  003a9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  003b0	48 8d 8d 78 06
	00 00		 lea	 rcx, QWORD PTR $T30[rbp]
  003b7	e8 00 00 00 00	 call	 _CxxThrowException

; 481  :                     }
; 482  :                     else

  003bc	eb 6a		 jmp	 SHORT $LN25@PMC_Subtru
$LN24@PMC_Subtru:

; 483  :                     {
; 484  :                         // u のビット長が v のビット長以上である場合
; 485  : 
; 486  :                         // u が 64bit 整数で表現できるので v も 64bit 整数で表現できる
; 487  : 
; 488  :                         __UNIT_TYPE temp_w;
; 489  :                         char borrow = _SUBTRUCT_UNIT(0, (__UNIT_TYPE)u, nv->BLOCK[0], &temp_w);

  003be	b8 08 00 00 00	 mov	 eax, 8
  003c3	48 6b c0 00	 imul	 rax, rax, 0
  003c7	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  003cb	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  003cf	4c 8d 8d c8 01
	00 00		 lea	 r9, QWORD PTR temp_w$21[rbp]
  003d6	4c 8b 04 01	 mov	 r8, QWORD PTR [rcx+rax]
  003da	48 8b 95 30 07
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  003e1	33 c9		 xor	 ecx, ecx
  003e3	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  003e8	88 85 e4 01 00
	00		 mov	 BYTE PTR borrow$22[rbp], al

; 490  :                         if (borrow)

  003ee	0f be 85 e4 01
	00 00		 movsx	 eax, BYTE PTR borrow$22[rbp]
  003f5	85 c0		 test	 eax, eax
  003f7	74 28		 je	 SHORT $LN26@PMC_Subtru

; 491  :                         {
; 492  :                             // ボローが発生した場合は演算結果が負なのでエラーとする
; 493  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");

  003f9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00400	48 8d 8d c8 06
	00 00		 lea	 rcx, QWORD PTR $T31[rbp]
  00407	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  0040c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00413	48 8d 8d c8 06
	00 00		 lea	 rcx, QWORD PTR $T31[rbp]
  0041a	e8 00 00 00 00	 call	 _CxxThrowException

; 494  :                         }
; 495  :                         else

  0041f	eb 07		 jmp	 SHORT $LN27@PMC_Subtru
$LN26@PMC_Subtru:

; 496  :                         {
; 497  :                             return (temp_w);

  00421	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR temp_w$21[rbp]
$LN27@PMC_Subtru:
$LN25@PMC_Subtru:
$LN11@PMC_Subtru:
$LN9@PMC_Subtru:
$LN5@PMC_Subtru:
$LN1@PMC_Subtru:
$LN28@PMC_Subtru:

; 498  :                         }
; 499  :                     }
; 500  :                 }
; 501  :             }
; 502  :         }
; 503  :     }

  00428	48 8b f8	 mov	 rdi, rax
  0042b	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0042f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcFrameData
  00436	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0043b	48 8b c7	 mov	 rax, rdi
  0043e	48 8d a5 18 07
	00 00		 lea	 rsp, QWORD PTR [rbp+1816]
  00445	5f		 pop	 rdi
  00446	5d		 pop	 rbp
  00447	c3		 ret	 0
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z
_TEXT	SEGMENT
nv$ = 8
u_bit_count$4 = 40
v_bit_count$5 = 72
temp_w$6 = 104
borrow$7 = 132
$T8 = 552
$T9 = 632
$T10 = 712
$T11 = 792
$T12 = 872
u$ = 976
v$ = 984
?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X, COMDAT

; 187  :     {

$LN14:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec d8 03
	00 00		 sub	 rsp, 984		; 000003d8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 f6 00 00 00	 mov	 ecx, 246		; 000000f6H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	8b 8c 24 f8 03
	00 00		 mov	 ecx, DWORD PTR [rsp+1016]
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00034	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 188  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)

  00039	33 c0		 xor	 eax, eax
  0003b	85 c0		 test	 eax, eax
  0003d	74 2d		 je	 SHORT $LN2@PMC_Subtru

; 189  :         {
; 190  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 191  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_subtruct.cpp;PMC_Subtruct_I_X;1");

  0003f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EI@PKFECEIC@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAu?$AAb?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?4?$AAc?$AAp@
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0004d	48 8d 8d 28 02
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  00054	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00059	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00060	48 8d 8d 28 02
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  00067	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Subtru:

; 192  :         }
; 193  :         if (v == nullptr)

  0006c	48 83 bd d8 03
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00074	75 2d		 jne	 SHORT $LN3@PMC_Subtru

; 194  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00084	48 8d 8d 78 02
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0008b	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00090	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00097	48 8d 8d 78 02
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0009e	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Subtru:

; 195  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  000a3	48 8b 85 d8 03
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000aa	48 89 45 08	 mov	 QWORD PTR nv$[rbp], rax

; 196  :         CheckNumber(nv);

  000ae	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  000b2	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 197  :         if (u == 0)

  000b7	83 bd d0 03 00
	00 00		 cmp	 DWORD PTR u$[rbp], 0
  000be	75 42		 jne	 SHORT $LN4@PMC_Subtru

; 198  :         {
; 199  :             // u が 0 である場合
; 200  : 
; 201  :             if (nv->IS_ZERO)

  000c0	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  000c4	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000c7	83 e0 01	 and	 eax, 1
  000ca	85 c0		 test	 eax, eax
  000cc	74 09		 je	 SHORT $LN6@PMC_Subtru

; 202  :             {
; 203  :                 // v が 0 である場合
; 204  : 
; 205  :                 // u と v がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 206  :                 return (0);

  000ce	33 c0		 xor	 eax, eax
  000d0	e9 05 01 00 00	 jmp	 $LN1@PMC_Subtru

; 207  :             }
; 208  :             else

  000d5	eb 26		 jmp	 SHORT $LN7@PMC_Subtru
$LN6@PMC_Subtru:

; 209  :             {
; 210  :                 // v が 0 ではない場合
; 211  : 
; 212  :                 // 演算結果は負となってしまうのでエラーを返す。
; 213  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  000d7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  000de	48 8d 8d c8 02
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  000e5	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  000ea	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  000f1	48 8d 8d c8 02
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  000f8	e8 00 00 00 00	 call	 _CxxThrowException
$LN7@PMC_Subtru:

; 214  :             }
; 215  :         }
; 216  :         else

  000fd	e9 d8 00 00 00	 jmp	 $LN5@PMC_Subtru
$LN4@PMC_Subtru:

; 217  :         {
; 218  :             // u が 0 ではない場合
; 219  : 
; 220  :             if (nv->IS_ZERO)

  00102	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  00106	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00109	83 e0 01	 and	 eax, 1
  0010c	85 c0		 test	 eax, eax
  0010e	74 10		 je	 SHORT $LN8@PMC_Subtru

; 221  :             {
; 222  :                 // v が 0 である場合
; 223  : 
; 224  :                 // 演算結果となる u の値を返す。
; 225  :                 return (u);

  00110	8b 85 d0 03 00
	00		 mov	 eax, DWORD PTR u$[rbp]
  00116	e9 bf 00 00 00	 jmp	 $LN1@PMC_Subtru

; 226  :             }
; 227  :             else

  0011b	e9 ba 00 00 00	 jmp	 $LN9@PMC_Subtru
$LN8@PMC_Subtru:

; 228  :             {
; 229  :                 // u と v がともに 0 ではない場合
; 230  : 
; 231  :                 // x と y の差を計算する
; 232  :                 __UNIT_TYPE u_bit_count = sizeof(u) * 8 - _LZCNT_ALT_32(u);

  00120	8b 8d d0 03 00
	00		 mov	 ecx, DWORD PTR u$[rbp]
  00126	e8 00 00 00 00	 call	 _LZCNT_ALT_32
  0012b	48 98		 cdqe
  0012d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00132	48 2b c8	 sub	 rcx, rax
  00135	48 8b c1	 mov	 rax, rcx
  00138	48 89 45 28	 mov	 QWORD PTR u_bit_count$4[rbp], rax

; 233  :                 __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;

  0013c	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  00140	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00144	48 89 45 48	 mov	 QWORD PTR v_bit_count$5[rbp], rax

; 234  :                 if (u_bit_count < v_bit_count)

  00148	48 8b 45 48	 mov	 rax, QWORD PTR v_bit_count$5[rbp]
  0014c	48 39 45 28	 cmp	 QWORD PTR u_bit_count$4[rbp], rax
  00150	73 28		 jae	 SHORT $LN10@PMC_Subtru

; 235  :                 {
; 236  :                     // 明らかに u < v である場合
; 237  :                     // 演算結果は負となってしまうのでエラーを返す。
; 238  :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00152	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00159	48 8d 8d 18 03
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00160	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00165	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0016c	48 8d 8d 18 03
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00173	e8 00 00 00 00	 call	 _CxxThrowException

; 239  :                 }
; 240  :                 else

  00178	eb 60		 jmp	 SHORT $LN11@PMC_Subtru
$LN10@PMC_Subtru:

; 241  :                 {
; 242  :                     // u のビット長が v のビット長以上である場合
; 243  : 
; 244  :                     // u が 32bit 整数なので、v も32bit 整数で表現できる
; 245  :                     __UNIT_TYPE temp_w;
; 246  :                     char borrow = _SUBTRUCT_UNIT(0, u, nv->BLOCK[0], &temp_w);

  0017a	b8 08 00 00 00	 mov	 eax, 8
  0017f	48 6b c0 00	 imul	 rax, rax, 0
  00183	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  00187	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0018b	8b 95 d0 03 00
	00		 mov	 edx, DWORD PTR u$[rbp]
  00191	4c 8d 4d 68	 lea	 r9, QWORD PTR temp_w$6[rbp]
  00195	4c 8b 04 01	 mov	 r8, QWORD PTR [rcx+rax]
  00199	33 c9		 xor	 ecx, ecx
  0019b	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  001a0	88 85 84 00 00
	00		 mov	 BYTE PTR borrow$7[rbp], al

; 247  :                     if (borrow)

  001a6	0f be 85 84 00
	00 00		 movsx	 eax, BYTE PTR borrow$7[rbp]
  001ad	85 c0		 test	 eax, eax
  001af	74 26		 je	 SHORT $LN12@PMC_Subtru

; 248  :                     {
; 249  :                         // ボローが発生した場合は演算結果が負なのでエラーとする
; 250  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");

  001b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  001b8	48 8d 8d 68 03
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  001bf	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  001c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  001cb	48 8d 8d 68 03
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  001d2	e8 00 00 00 00	 call	 _CxxThrowException
$LN12@PMC_Subtru:

; 251  :                     }
; 252  :                     return ((_UINT32_T)temp_w);

  001d7	8b 45 68	 mov	 eax, DWORD PTR temp_w$6[rbp]
$LN11@PMC_Subtru:
$LN9@PMC_Subtru:
$LN5@PMC_Subtru:
$LN1@PMC_Subtru:
$LN13@PMC_Subtru:

; 253  :                 }
; 254  :             }
; 255  :         }
; 256  :     }

  001da	48 8b f8	 mov	 rdi, rax
  001dd	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001e1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcFrameData
  001e8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ed	48 8b c7	 mov	 rax, rdi
  001f0	48 8d a5 b8 03
	00 00		 lea	 rsp, QWORD PTR [rbp+952]
  001f7	5f		 pop	 rdi
  001f8	5d		 pop	 rbp
  001f9	c3		 ret	 0
?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 224
?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Subtruct, COMDAT

; 733  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 734  :         return (PMC_STATUS_OK);

  00036	33 c0		 xor	 eax, eax

; 735  :     }

  00038	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003f	5f		 pop	 rdi
  00040	5d		 pop	 rbp
  00041	c3		 ret	 0
?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Subtruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K0101@Z
_TEXT	SEGMENT
c$ = 4
count$ = 40
tv151 = 248
tv154 = 256
tv157 = 264
up$ = 304
u_count$ = 312
vp$ = 320
v_count$ = 328
wp$ = 336
w_count$ = 344
?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K0101@Z PROC ; Palmtree::Math::Core::Internal::Subtruct_Imp, COMDAT

; 123  :     {

$LN10:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__849DF3BE_pmc_subtruct@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 124  :         char c = 0;

  00045	c6 45 04 00	 mov	 BYTE PTR c$[rbp], 0

; 125  : 
; 126  :         // まず 32 ワードずつ減算をする。
; 127  :         __UNIT_TYPE count = v_count >> 5;

  00049	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  00050	48 c1 e8 05	 shr	 rax, 5
  00054	48 89 45 28	 mov	 QWORD PTR count$[rbp], rax
$LN2@Subtruct_I:

; 128  :         while (count != 0)

  00058	48 83 7d 28 00	 cmp	 QWORD PTR count$[rbp], 0
  0005d	74 6a		 je	 SHORT $LN3@Subtruct_I

; 129  :         {
; 130  :             c = _SUBTRUCT_32WORDS_SBB(c, up, vp, wp);

  0005f	4c 8b 8d 50 01
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  00066	4c 8b 85 40 01
	00 00		 mov	 r8, QWORD PTR vp$[rbp]
  0006d	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00074	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$[rbp]
  00078	e8 00 00 00 00	 call	 _SUBTRUCT_32WORDS_SBB
  0007d	88 45 04	 mov	 BYTE PTR c$[rbp], al

; 131  :             up += 32;

  00080	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00087	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  0008d	48 89 85 30 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 132  :             vp += 32;

  00094	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR vp$[rbp]
  0009b	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  000a1	48 89 85 40 01
	00 00		 mov	 QWORD PTR vp$[rbp], rax

; 133  :             wp += 32;

  000a8	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  000af	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  000b5	48 89 85 50 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax

; 134  :             --count;

  000bc	48 8b 45 28	 mov	 rax, QWORD PTR count$[rbp]
  000c0	48 ff c8	 dec	 rax
  000c3	48 89 45 28	 mov	 QWORD PTR count$[rbp], rax

; 135  :         }

  000c7	eb 8f		 jmp	 SHORT $LN2@Subtruct_I
$LN3@Subtruct_I:

; 136  :         // この時点で未処理の桁は 32 ワード未満のはず
; 137  : 
; 138  :         // 未処理の桁が 16 ワード以上あるなら 16 ワード減算を行う。
; 139  :         if (v_count & 0x10)

  000c9	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  000d0	48 83 e0 10	 and	 rax, 16
  000d4	48 85 c0	 test	 rax, rax
  000d7	74 5d		 je	 SHORT $LN4@Subtruct_I

; 140  :         {
; 141  :             c = _SUBTRUCT_16WORDS_SBB(c, up, vp, wp);

  000d9	4c 8b 8d 50 01
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  000e0	4c 8b 85 40 01
	00 00		 mov	 r8, QWORD PTR vp$[rbp]
  000e7	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  000ee	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$[rbp]
  000f2	e8 00 00 00 00	 call	 _SUBTRUCT_16WORDS_SBB
  000f7	88 45 04	 mov	 BYTE PTR c$[rbp], al

; 142  :             up += 16;

  000fa	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  00101	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00107	48 89 85 30 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 143  :             vp += 16;

  0010e	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR vp$[rbp]
  00115	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  0011b	48 89 85 40 01
	00 00		 mov	 QWORD PTR vp$[rbp], rax

; 144  :             wp += 16;

  00122	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00129	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  0012f	48 89 85 50 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
$LN4@Subtruct_I:

; 145  :         }
; 146  :         // この時点で未処理の桁は 16 ワード未満のはず
; 147  : 
; 148  :         // 未処理の桁が 8 ワード以上あるなら 8 ワード減算を行う。
; 149  :         if (v_count & 0x8)

  00136	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  0013d	48 83 e0 08	 and	 rax, 8
  00141	48 85 c0	 test	 rax, rax
  00144	74 57		 je	 SHORT $LN5@Subtruct_I

; 150  :         {
; 151  :             c = _SUBTRUCT_8WORDS_SBB(c, up, vp, wp);

  00146	4c 8b 8d 50 01
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  0014d	4c 8b 85 40 01
	00 00		 mov	 r8, QWORD PTR vp$[rbp]
  00154	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  0015b	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$[rbp]
  0015f	e8 00 00 00 00	 call	 _SUBTRUCT_8WORDS_SBB
  00164	88 45 04	 mov	 BYTE PTR c$[rbp], al

; 152  :             up += 8;

  00167	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  0016e	48 83 c0 40	 add	 rax, 64			; 00000040H
  00172	48 89 85 30 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 153  :             vp += 8;

  00179	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR vp$[rbp]
  00180	48 83 c0 40	 add	 rax, 64			; 00000040H
  00184	48 89 85 40 01
	00 00		 mov	 QWORD PTR vp$[rbp], rax

; 154  :             wp += 8;

  0018b	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00192	48 83 c0 40	 add	 rax, 64			; 00000040H
  00196	48 89 85 50 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
$LN5@Subtruct_I:

; 155  :         }
; 156  :         // この時点で未処理の桁は 8 ワード未満のはず
; 157  : 
; 158  :         // 未処理の桁が 4 ワード以上あるなら 4 ワード減算を行う。
; 159  :         if (v_count & 0x4)

  0019d	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  001a4	48 83 e0 04	 and	 rax, 4
  001a8	48 85 c0	 test	 rax, rax
  001ab	74 57		 je	 SHORT $LN6@Subtruct_I

; 160  :         {
; 161  :             c = _SUBTRUCT_4WORDS_SBB(c, up, vp, wp);

  001ad	4c 8b 8d 50 01
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  001b4	4c 8b 85 40 01
	00 00		 mov	 r8, QWORD PTR vp$[rbp]
  001bb	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  001c2	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$[rbp]
  001c6	e8 00 00 00 00	 call	 _SUBTRUCT_4WORDS_SBB
  001cb	88 45 04	 mov	 BYTE PTR c$[rbp], al

; 162  :             up += 4;

  001ce	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  001d5	48 83 c0 20	 add	 rax, 32			; 00000020H
  001d9	48 89 85 30 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 163  :             vp += 4;

  001e0	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR vp$[rbp]
  001e7	48 83 c0 20	 add	 rax, 32			; 00000020H
  001eb	48 89 85 40 01
	00 00		 mov	 QWORD PTR vp$[rbp], rax

; 164  :             wp += 4;

  001f2	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  001f9	48 83 c0 20	 add	 rax, 32			; 00000020H
  001fd	48 89 85 50 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
$LN6@Subtruct_I:

; 165  :         }
; 166  :         // この時点で未処理の桁は 4 ワード未満のはず
; 167  : 
; 168  :         // 未処理の桁が 2 ワード以上あるなら 2 ワード減算を行う。
; 169  :         if (v_count & 0x2)

  00204	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  0020b	48 83 e0 02	 and	 rax, 2
  0020f	48 85 c0	 test	 rax, rax
  00212	74 57		 je	 SHORT $LN7@Subtruct_I

; 170  :         {
; 171  :             c = _SUBTRUCT_2WORDS_SBB(c, up, vp, wp);

  00214	4c 8b 8d 50 01
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  0021b	4c 8b 85 40 01
	00 00		 mov	 r8, QWORD PTR vp$[rbp]
  00222	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00229	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$[rbp]
  0022d	e8 00 00 00 00	 call	 _SUBTRUCT_2WORDS_SBB
  00232	88 45 04	 mov	 BYTE PTR c$[rbp], al

; 172  :             up += 2;

  00235	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  0023c	48 83 c0 10	 add	 rax, 16
  00240	48 89 85 30 01
	00 00		 mov	 QWORD PTR up$[rbp], rax

; 173  :             vp += 2;

  00247	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR vp$[rbp]
  0024e	48 83 c0 10	 add	 rax, 16
  00252	48 89 85 40 01
	00 00		 mov	 QWORD PTR vp$[rbp], rax

; 174  :             wp += 2;

  00259	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00260	48 83 c0 10	 add	 rax, 16
  00264	48 89 85 50 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
$LN7@Subtruct_I:

; 175  :         }
; 176  :         // この時点で未処理の桁は 2 ワード未満のはず
; 177  : 
; 178  :         // 未処理の桁が 1 ワード以上あるなら 1 ワード減算を行う。
; 179  :         if (v_count & 1)

  0026b	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  00272	48 83 e0 01	 and	 rax, 1
  00276	48 85 c0	 test	 rax, rax
  00279	0f 84 87 00 00
	00		 je	 $LN8@Subtruct_I

; 180  :             c = _SUBTRUCT_UNIT(c, *up++, *vp++, wp++);

  0027f	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00286	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv151[rbp], rax
  0028d	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR wp$[rbp]
  00294	48 83 c0 08	 add	 rax, 8
  00298	48 89 85 50 01
	00 00		 mov	 QWORD PTR wp$[rbp], rax
  0029f	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR vp$[rbp]
  002a6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002a9	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv154[rbp], rax
  002b0	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR vp$[rbp]
  002b7	48 83 c0 08	 add	 rax, 8
  002bb	48 89 85 40 01
	00 00		 mov	 QWORD PTR vp$[rbp], rax
  002c2	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  002c9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002cc	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv157[rbp], rax
  002d3	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR up$[rbp]
  002da	48 83 c0 08	 add	 rax, 8
  002de	48 89 85 30 01
	00 00		 mov	 QWORD PTR up$[rbp], rax
  002e5	4c 8b 8d f8 00
	00 00		 mov	 r9, QWORD PTR tv151[rbp]
  002ec	4c 8b 85 00 01
	00 00		 mov	 r8, QWORD PTR tv154[rbp]
  002f3	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR tv157[rbp]
  002fa	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$[rbp]
  002fe	e8 00 00 00 00	 call	 _SUBTRUCT_UNIT
  00303	88 45 04	 mov	 BYTE PTR c$[rbp], al
$LN8@Subtruct_I:

; 181  : 
; 182  :         // 残りの桁の繰り上がりを計算し、復帰する。
; 183  :         DoBorrow(c, up, u_count - v_count, wp, w_count - v_count);

  00306	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR v_count$[rbp]
  0030d	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR w_count$[rbp]
  00314	48 2b c8	 sub	 rcx, rax
  00317	48 8b c1	 mov	 rax, rcx
  0031a	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR v_count$[rbp]
  00321	48 8b 95 38 01
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  00328	48 2b d1	 sub	 rdx, rcx
  0032b	48 8b ca	 mov	 rcx, rdx
  0032e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00333	4c 8b 8d 50 01
	00 00		 mov	 r9, QWORD PTR wp$[rbp]
  0033a	4c 8b c1	 mov	 r8, rcx
  0033d	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR up$[rbp]
  00344	0f b6 4d 04	 movzx	 ecx, BYTE PTR c$[rbp]
  00348	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPEA_K_K01@Z ; Palmtree::Math::Core::Internal::DoBorrow

; 184  :     }

  0034d	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  00354	5f		 pop	 rdi
  00355	5d		 pop	 rbp
  00356	c3		 ret	 0
?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K0101@Z ENDP ; Palmtree::Math::Core::Internal::Subtruct_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT

; 295  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 296  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 291  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 290  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 291  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 292  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 286  :         {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004b	90		 npad	 1

; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  0004c	4c 8b 8d 10 01
	00 00		 mov	 r9, QWORD PTR data$[rbp]
  00053	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0005a	ba 00 ff ff ff	 mov	 edx, -256		; ffffffffffffff00H
  0005f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0006b	90		 npad	 1

; 286  :         {

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  0007a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 287  :         }

  0007d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::OverflowException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::OverflowException::~OverflowException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GOverflowException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::OverflowException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::OverflowException::~OverflowException, COMDAT

; 162  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7OverflowException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 163  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::OverflowException::~OverflowException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::OverflowException::~OverflowException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::OverflowException::~OverflowException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::OverflowException::~OverflowException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1OverflowException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::OverflowException::~OverflowException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::OverflowException::OverflowException, COMDAT

; 158  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 157  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 158  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7OverflowException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 159  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::OverflowException::OverflowException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::OverflowException::OverflowException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::OverflowException::OverflowException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::OverflowException::OverflowException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::OverflowException::OverflowException, COMDAT

; 153  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)

  00047	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0004e	ba fc ff ff ff	 mov	 edx, -4
  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005f	90		 npad	 1

; 153  :         {

  00060	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7OverflowException@Internal@Core@Math@Palmtree@@6B@
  0006e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 154  :         }

  00071	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::OverflowException::OverflowException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::OverflowException::OverflowException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::OverflowException::OverflowException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0OverflowException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::OverflowException::OverflowException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT

; 124  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 125  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 120  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 119  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 120  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 121  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 115  :         {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004b	90		 npad	 1

; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  0004c	4c 8b 8d 10 01
	00 00		 mov	 r9, QWORD PTR param_name$[rbp]
  00053	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0005a	ba fe ff ff ff	 mov	 edx, -2
  0005f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0006b	90		 npad	 1

; 115  :         {

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  0007a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 116  :         }

  0007d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT

; 70   :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 62   :         Exception(const Exception& p) noexcept(true)

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  00053	90		 npad	 1
  00054	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 63   :         {
; 64   :             _code = p._code;

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00073	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  00076	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 65   :             _message = p._message;

  00079	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00080	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00087	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  0008b	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 66   :             _data = p._data;

  0008f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  0009d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  000a1	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 67   :         }

  000a5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00038	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0004a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004f	90		 npad	 1
  00050	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  0005c	90		 npad	 1
  0005d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 55   :         {
; 56   :             _code = code;

  0006e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	8b 8d 08 01 00
	00		 mov	 ecx, DWORD PTR code$[rbp]
  0007b	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 57   :             _message = message;

  0007e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00085	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR message$[rbp]
  0008c	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 58   :             _data = data;

  00090	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00097	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR data$[rbp]
  0009e	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 59   :         }

  000a2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a9	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b0	5f		 pop	 rdi
  000b1	5d		 pop	 rbp
  000b2	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00045	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004a	90		 npad	 1
  0004b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  00057	90		 npad	 1
  00058	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00066	48 89 08	 mov	 QWORD PTR [rax], rcx

; 48   :         {
; 49   :             _code = code;

  00069	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00070	8b 8d 08 01 00
	00		 mov	 ecx, DWORD PTR code$[rbp]
  00076	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 50   :             _message = message;

  00079	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00080	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR message$[rbp]
  00087	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 51   :             _data = nullptr;

  0008b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00092	48 c7 40 28 00
	00 00 00	 mov	 QWORD PTR [rax+40], 0

; 52   :         }

  0009a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a1	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000a8	5f		 pop	 rdi
  000a9	5d		 pop	 rbp
  000aa	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 90   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00042	74 14		 je	 SHORT $LN3@what
  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00056	eb 0e		 jmp	 SHORT $LN4@what
$LN3@what:
  00058	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0005f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  00066	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 92   :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 86   :         __std_exception_destroy(&_Data);

  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 __std_exception_destroy
  00066	90		 npad	 1

; 87   :     }

  00067	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0exception@std@@QEAA@XZ PROC				; std::exception::exception, COMDAT

; 50   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 49   :         : _Data()

  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b f8	 mov	 rdi, rax
  00061	33 c0		 xor	 eax, eax
  00063	b9 10 00 00 00	 mov	 ecx, 16
  00068	f3 aa		 rep stosb

; 51   :     }

  0006a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??0exception@std@@QEAA@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
