; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__630249ED_pmc_uint_debug@h DB 01H
__8E312870_test_op_getpropertyvalue@c DB 01H
msvcjmc	ENDS
PUBLIC	TEST_PMC_GetPropertyValue_X_I
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1EK@HDEICNAJ@?$AAP?$AAM?$AAC?$AA_?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr@ ; `string'
PUBLIC	??_C@_1EC@HOEMJOKC@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@ ; `string'
PUBLIC	??_C@_1FI@HMOCLLMA@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@ ; `string'
PUBLIC	??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@ ; `string'
EXTRN	TEST_Assert:PROC
EXTRN	FormatTestLabel:PROC
EXTRN	FormatTestMesssage:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_PMC_GetPropertyValue_X_I DD imagerel $LN10
	DD	imagerel $LN10+471
	DD	imagerel $unwind$TEST_PMC_GetPropertyValue_X_I
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
CONST	SEGMENT
??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@ DB 0c7H
	DB	'0', 0fcH, '0', 0bfH, '0n0', 085H, 'Q', 0b9H, '[L0', 00H, 'N', 0f4H
	DB	081H, 'W0j0D0', 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@HMOCLLMA@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@
CONST	SEGMENT
??_C@_1FI@HMOCLLMA@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@ DB 'P'
	DB	00H, 'M', 00H, 'C', 00H, '_', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 't'
	DB	00H, 'y', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'I', 00H, 'n0', 0a9H, '_0^', 0b3H
	DB	'0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HOEMJOKC@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@
CONST	SEGMENT
??_C@_1EC@HOEMJOKC@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@ DB 'P'
	DB	00H, 'M', 00H, 'C', 00H, '_', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 't'
	DB	00H, 'y', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'I', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@HDEICNAJ@?$AAP?$AAM?$AAC?$AA_?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr@
CONST	SEGMENT
??_C@_1EK@HDEICNAJ@?$AAP?$AAM?$AAC?$AA_?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr@ DB 'P'
	DB	00H, 'M', 00H, 'C', 00H, '_', 00H, 'F', 00H, 'r', 00H, 'o', 00H
	DB	'm', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 'A', 00H, 'r'
	DB	00H, 'r', 00H, 'a', 00H, 'y', 00H, 'n0', 0a9H, '_0^', 0b3H, '0'
	DB	0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_PMC_GetPropertyValue_X_I DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
TEST_PMC_GetPropertyValue_X_I$rtcName$0 DB 078H
	DB	00H
	ORG $+6
TEST_PMC_GetPropertyValue_X_I$rtcName$1 DB 061H
	DB	063H
	DB	074H
	DB	075H
	DB	061H
	DB	06cH
	DB	05fH
	DB	076H
	DB	061H
	DB	06cH
	DB	075H
	DB	065H
	DB	00H
	ORG $+11
TEST_PMC_GetPropertyValue_X_I$rtcVarDesc DD 044H
	DD	04H
	DQ	FLAT:TEST_PMC_GetPropertyValue_X_I$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:TEST_PMC_GetPropertyValue_X_I$rtcName$0
	ORG $+96
TEST_PMC_GetPropertyValue_X_I$rtcFrameData DD 02H
	DD	00H
	DQ	FLAT:TEST_PMC_GetPropertyValue_X_I$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\test_op_getpropertyvalue.c
;	COMDAT TEST_PMC_GetPropertyValue_X_I
_TEXT	SEGMENT
x$ = 8
actual_value$ = 36
result$ = 68
x_result$ = 100
tv134 = 308
tv92 = 308
tv74 = 308
tv82 = 312
tv64 = 312
env$ = 352
ep$ = 360
no$ = 368
x_buf$ = 376
x_buf_size$ = 384
function_code$ = 392
desired_value$ = 400
TEST_PMC_GetPropertyValue_X_I PROC			; COMDAT

; 33   : {

$LN10:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__8E312870_test_op_getpropertyvalue@c
	call	__CheckForDebuggerJustMyCode

; 34   :     PMC_HANDLE_UINT x;
; 35   :     _INT32_T actual_value;
; 36   :     PMC_STATUS_CODE result;
; 37   :     PMC_STATUS_CODE x_result;
; 38   :     TEST_Assert(env, FormatTestLabel(L"PMC_GetPropertyValue_X_I (%d.%d)", no, 1), (x_result = ep->PMC_FromByteArray(x_buf, x_buf_size, &x)) == PMC_STATUS_OK, FormatTestMesssage(L"PMC_FromByteArrayの復帰コードが期待通りではない(%d)", x_result));

	lea	r8, QWORD PTR x$[rbp]
	mov	rdx, QWORD PTR x_buf_size$[rbp]
	mov	rcx, QWORD PTR x_buf$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+48]
	mov	DWORD PTR x_result$[rbp], eax
	cmp	DWORD PTR x_result$[rbp], 0
	jne	SHORT $LN4@TEST_PMC_G
	mov	DWORD PTR tv74[rbp], 1
	jmp	SHORT $LN5@TEST_PMC_G
$LN4@TEST_PMC_G:
	mov	DWORD PTR tv74[rbp], 0
$LN5@TEST_PMC_G:
	mov	edx, DWORD PTR x_result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_1EK@HDEICNAJ@?$AAP?$AAM?$AAC?$AA_?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr@
	call	FormatTestMesssage
	mov	QWORD PTR tv64[rbp], rax
	mov	r8d, 1
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_1EC@HOEMJOKC@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv64[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv74[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 39   :     TEST_Assert(env, FormatTestLabel(L"PMC_GetPropertyValue_X_I (%d.%d)", no, 2), (result = ep->PMC_GetPropertyValue_X_I(x, function_code, &actual_value)) == PMC_STATUS_OK, FormatTestMesssage(L"PMC_GetPropertyValue_X_Iの復帰コードが期待通りではない(%d)", result));

	lea	r8, QWORD PTR actual_value$[rbp]
	mov	edx, DWORD PTR function_code$[rbp]
	mov	rcx, QWORD PTR x$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+40]
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	jne	SHORT $LN6@TEST_PMC_G
	mov	DWORD PTR tv92[rbp], 1
	jmp	SHORT $LN7@TEST_PMC_G
$LN6@TEST_PMC_G:
	mov	DWORD PTR tv92[rbp], 0
$LN7@TEST_PMC_G:
	mov	edx, DWORD PTR result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_1FI@HMOCLLMA@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@
	call	FormatTestMesssage
	mov	QWORD PTR tv82[rbp], rax
	mov	r8d, 2
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_1EC@HOEMJOKC@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv92[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 40   :     TEST_Assert(env, FormatTestLabel(L"PMC_GetPropertyValue_X_I (%d.%d)", no, 3), actual_value == desired_value, L"データの内容が一致しない");

	mov	eax, DWORD PTR desired_value$[rbp]
	cmp	DWORD PTR actual_value$[rbp], eax
	jne	SHORT $LN8@TEST_PMC_G
	mov	DWORD PTR tv134[rbp], 1
	jmp	SHORT $LN9@TEST_PMC_G
$LN8@TEST_PMC_G:
	mov	DWORD PTR tv134[rbp], 0
$LN9@TEST_PMC_G:
	mov	r8d, 3
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_1EC@HOEMJOKC@?$AAP?$AAM?$AAC?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy@
	call	FormatTestLabel
	lea	r9, OFFSET FLAT:??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	r8d, DWORD PTR tv134[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 41   :     if (x_result == PMC_STATUS_OK)

	cmp	DWORD PTR x_result$[rbp], 0
	jne	SHORT $LN2@TEST_PMC_G

; 42   :         ep->PMC_Dispose(x);

	mov	rcx, QWORD PTR x$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+32]
$LN2@TEST_PMC_G:

; 43   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:TEST_PMC_GetPropertyValue_X_I$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
TEST_PMC_GetPropertyValue_X_I ENDP
_TEXT	ENDS
END
