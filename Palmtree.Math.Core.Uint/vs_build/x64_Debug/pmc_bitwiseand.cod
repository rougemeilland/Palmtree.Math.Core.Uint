; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__77F53984_cstddef DB 01H
__188180DA_corecrt_math@h DB 01H
__D23EE329_cstdlib DB 01H
__5ECFF36E_type_traits DB 01H
__331E732B_malloc@h DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__7949CB39_exception DB 01H
__802FEEC0_pmc_exception@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__1AB12E38_pmc_resourceholder@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__59184A5E_pmc_bitwiseand@cpp DB 01H
msvcjmc	ENDS
PUBLIC	??0exception@std@@QEAA@XZ			; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_BitwiseAnd
PUBLIC	?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_I_X
PUBLIC	?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X
PUBLIC	?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_I
PUBLIC	?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L
PUBLIC	?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ ; `string'
PUBLIC	??_C@_1FA@BAKBKFFB@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@ ; `string'
PUBLIC	_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_13JAOPNPKD@?$AAv@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_1FA@DHANDFHH@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@ ; `string'
PUBLIC	??_C@_13ICFKHAEN@?$AAu@				; `string'
PUBLIC	??_C@_1FA@IIACNCEB@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@ ; `string'
PUBLIC	??_C@_1FA@HPONDLBD@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A:BYTE ; Palmtree::Math::Core::Internal::number_zero
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??0exception@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+182
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z DD imagerel $LN9
	DD	imagerel $LN9+258
	DD	imagerel $unwind$?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z DD imagerel $LN13
	DD	imagerel $LN13+443
	DD	imagerel $unwind$?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z DD imagerel $LN9
	DD	imagerel $LN9+259
	DD	imagerel $unwind$?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+443
	DD	imagerel $unwind$?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD imagerel $LN7
	DD	imagerel $LN7+356
	DD	imagerel $unwind$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA DD imagerel ?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_FROMWORDTODWORD DD imagerel _FROMWORDTODWORD
	DD	imagerel _FROMWORDTODWORD+85
	DD	imagerel $unwind$_FROMWORDTODWORD
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_FROMDWORDTOWORD DD imagerel _FROMDWORDTOWORD
	DD	imagerel _FROMDWORDTOWORD+95
	DD	imagerel $unwind$_FROMDWORDTOWORD
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_DIVIDE_CEILING_UNIT DD imagerel _DIVIDE_CEILING_UNIT
	DD	imagerel _DIVIDE_CEILING_UNIT+97
	DD	imagerel $unwind$_DIVIDE_CEILING_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_MINIMUM_UNIT DD imagerel _MINIMUM_UNIT
	DD	imagerel _MINIMUM_UNIT+122
	DD	imagerel $unwind$_MINIMUM_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z DD imagerel ?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z
	DD	imagerel ?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z+4522
	DD	imagerel $unwind$?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD imagerel ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	imagerel ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+461
	DD	imagerel $unwind$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA DD imagerel ?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
	DD	imagerel ?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 01H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1FA@HPONDLBD@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@
CONST	SEGMENT
??_C@_1FA@HPONDLBD@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'b', 00H, 'i', 00H, 't', 00H
	DB	'w', 00H, 'i', 00H, 's', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 'd'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H
	DB	'M', 00H, 'C', 00H, '_', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'w'
	DB	00H, 'i', 00H, 's', 00H, 'e', 00H, 'A', 00H, 'n', 00H, 'd', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'L', 00H, ';', 00H, '1', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@IIACNCEB@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@
CONST	SEGMENT
??_C@_1FA@IIACNCEB@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'b', 00H, 'i', 00H, 't', 00H
	DB	'w', 00H, 'i', 00H, 's', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 'd'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H
	DB	'M', 00H, 'C', 00H, '_', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'w'
	DB	00H, 'i', 00H, 's', 00H, 'e', 00H, 'A', 00H, 'n', 00H, 'd', 00H
	DB	'_', 00H, 'L', 00H, '_', 00H, 'X', 00H, ';', 00H, '1', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_13ICFKHAEN@?$AAu@
CONST	SEGMENT
??_C@_13ICFKHAEN@?$AAu@ DB 'u', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@DHANDFHH@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@
CONST	SEGMENT
??_C@_1FA@DHANDFHH@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'b', 00H, 'i', 00H, 't', 00H
	DB	'w', 00H, 'i', 00H, 's', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 'd'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H
	DB	'M', 00H, 'C', 00H, '_', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'w'
	DB	00H, 'i', 00H, 's', 00H, 'e', 00H, 'A', 00H, 'n', 00H, 'd', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'I', 00H, ';', 00H, '1', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13JAOPNPKD@?$AAv@
CONST	SEGMENT
??_C@_13JAOPNPKD@?$AAv@ DB 'v', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1FA@BAKBKFFB@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@
CONST	SEGMENT
??_C@_1FA@BAKBKFFB@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'b', 00H, 'i', 00H, 't', 00H
	DB	'w', 00H, 'i', 00H, 's', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 'd'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'P', 00H
	DB	'M', 00H, 'C', 00H, '_', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'w'
	DB	00H, 'i', 00H, 's', 00H, 'e', 00H, 'A', 00H, 'n', 00H, 'd', 00H
	DB	'_', 00H, 'I', 00H, '_', 00H, 'X', 00H, ';', 00H, '1', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
CONST	SEGMENT
??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ DB 088H
	DB	'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H, '0k00RT', 090H
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DQ	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DQ	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DQ	FLAT:??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD imagerel ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+148
	DD	00H
	DD	imagerel ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+365
	DD	0ffffffffH
	DD	imagerel ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+383
	DD	00H
	DD	imagerel ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+413
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 025053a11H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp
	DD	020H
	DQ	FLAT:?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcName$0
	ORG $+48
?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp
	DD	00H
	DQ	FLAT:?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcVarDesc
$cppxdata$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	0208H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_MINIMUM_UNIT DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_DIVIDE_CEILING_UNIT DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_FROMDWORDTOWORD DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_FROMWORDTODWORD DD 025052c01H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD imagerel ?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+230
	DD	00H
	DD	imagerel ?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+308
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 025053a11H
	DD	01132318H
	DD	0700c004dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X
	DD	020H
	DQ	FLAT:?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcName$0
	ORG $+48
?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X
	DD	00H
	DQ	FLAT:?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcVarDesc
$cppxdata$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	0248H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z$rtcName$0 DB 076H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L
	DB	05fH
	DB	068H
	DB	069H
	DB	00H
	ORG $+11
?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z$rtcVarDesc DD 044H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L
	DD	04H
	DQ	FLAT:?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z$rtcName$0
	ORG $+48
?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L
	DD	00H
	DQ	FLAT:?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z DD 025052e01H
	DD	01122317H
	DD	0700b0035H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$0 DB 075H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X
	DB	05fH
	DB	068H
	DB	069H
	DB	00H
	ORG $+11
?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcVarDesc DD 044H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X
	DD	04H
	DQ	FLAT:?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcName$0
	ORG $+48
?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X
	DD	00H
	DQ	FLAT:?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z DD 025052d01H
	DD	01122317H
	DD	0700b0035H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+108
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 025053f19H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+108
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 025053f19H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+84
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+165
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+93
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+162
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 025054319H
	DD	011c2321H
	DD	070150021H
	DD	05014H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@XZ DD imagerel ??0exception@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0exception@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0exception@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0exception@std@@QEAA@XZ
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_bitwiseand.cpp
;	COMDAT ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
_TEXT	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
w_word_count$9 = 200
$T10 = 424
$T11 = 456
$T12 = 488
u$ = 544
v$ = 552
?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp, COMDAT

; 295  :     {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  0002f	48 c7 85 e8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T12[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__59184A5E_pmc_bitwiseand@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 296  :         if (u->IS_ZERO)

  00046	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 11		 je	 SHORT $LN2@PMC_Bitwis

; 297  :             return (&number_zero);

  00057	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0005e	e9 4a 01 00 00	 jmp	 $LN1@PMC_Bitwis
  00063	e9 45 01 00 00	 jmp	 $LN1@PMC_Bitwis
$LN2@PMC_Bitwis:

; 298  :         else if (v->IS_ZERO)

  00068	48 8b 85 28 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  0006f	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00072	83 e0 01	 and	 eax, 1
  00075	85 c0		 test	 eax, eax
  00077	74 11		 je	 SHORT $LN4@PMC_Bitwis

; 299  :             return (&number_zero);

  00079	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00080	e9 28 01 00 00	 jmp	 $LN1@PMC_Bitwis

; 300  :         else

  00085	e9 23 01 00 00	 jmp	 $LN1@PMC_Bitwis
$LN4@PMC_Bitwis:

; 301  :         {
; 302  :             ResourceHolderUINT root;

  0008a	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  0008e	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00093	90		 npad	 1

; 303  :             __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00094	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0009b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0009f	48 89 45 48	 mov	 QWORD PTR u_bit_count$5[rbp], rax

; 304  :             __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  000a3	48 8b 85 28 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000aa	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000ae	48 89 45 68	 mov	 QWORD PTR v_bit_count$6[rbp], rax

; 305  :             __UNIT_TYPE w_bit_count = _MINIMUM_UNIT(u_bit_count, v_bit_count);

  000b2	48 8b 55 68	 mov	 rdx, QWORD PTR v_bit_count$6[rbp]
  000b6	48 8b 4d 48	 mov	 rcx, QWORD PTR u_bit_count$5[rbp]
  000ba	e8 00 00 00 00	 call	 _MINIMUM_UNIT
  000bf	48 89 85 88 00
	00 00		 mov	 QWORD PTR w_bit_count$7[rbp], rax

; 306  :             NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000c6	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR w_bit_count$7[rbp]
  000cd	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  000d1	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000d6	48 89 85 a8 00
	00 00		 mov	 QWORD PTR w$8[rbp], rax

; 307  :             __UNIT_TYPE w_word_count = _DIVIDE_CEILING_UNIT(w_bit_count, __UNIT_TYPE_BIT_COUNT);

  000dd	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  000e2	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR w_bit_count$7[rbp]
  000e9	e8 00 00 00 00	 call	 _DIVIDE_CEILING_UNIT
  000ee	48 89 85 c8 00
	00 00		 mov	 QWORD PTR w_word_count$9[rbp], rax

; 308  :             BitwiseAnd_X_X(u->BLOCK, v->BLOCK, w->BLOCK, w_word_count);

  000f5	4c 8b 8d c8 00
	00 00		 mov	 r9, QWORD PTR w_word_count$9[rbp]
  000fc	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  00103	4c 8b 40 40	 mov	 r8, QWORD PTR [rax+64]
  00107	48 8b 85 28 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  0010e	48 8b 50 40	 mov	 rdx, QWORD PTR [rax+64]
  00112	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00119	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0011d	e8 00 00 00 00	 call	 ?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z ; Palmtree::Math::Core::Internal::BitwiseAnd_X_X

; 309  :             root.CheckNumber(w);

  00122	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  00129	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  0012d	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 310  :             CommitNumber(w);

  00132	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR w$8[rbp]
  00139	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 311  :             if (w->IS_ZERO)

  0013e	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  00145	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00148	83 e0 01	 and	 eax, 1
  0014b	85 c0		 test	 eax, eax
  0014d	74 30		 je	 SHORT $LN6@PMC_Bitwis

; 312  :             {
; 313  :                 root.DeallocateNumber(w);

  0014f	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  00156	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  0015a	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 314  :                 return (&number_zero);

  0015f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00166	48 89 85 a8 01
	00 00		 mov	 QWORD PTR $T10[rbp], rax
  0016d	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00171	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00176	48 8b 85 a8 01
	00 00		 mov	 rax, QWORD PTR $T10[rbp]
  0017d	eb 2e		 jmp	 SHORT $LN1@PMC_Bitwis
$LN6@PMC_Bitwis:

; 315  :             }
; 316  :             root.UnlinkNumber(w);

  0017f	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR w$8[rbp]
  00186	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  0018a	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 317  :             return (w);

  0018f	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR w$8[rbp]
  00196	48 89 85 c8 01
	00 00		 mov	 QWORD PTR $T11[rbp], rax
  0019d	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  001a1	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001a6	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR $T11[rbp]
$LN1@PMC_Bitwis:

; 318  :         }
; 319  :     }

  001ad	48 8b f8	 mov	 rdi, rax
  001b0	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001b4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z$rtcFrameData
  001bb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001c0	48 8b c7	 mov	 rax, rdi
  001c3	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  001ca	5f		 pop	 rdi
  001cb	5d		 pop	 rbp
  001cc	c3		 ret	 0
?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
w_word_count$9 = 200
$T10 = 424
$T11 = 456
$T12 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$4 = 8
u_bit_count$5 = 72
v_bit_count$6 = 104
w_bit_count$7 = 136
w$8 = 168
w_word_count$9 = 200
$T10 = 424
$T11 = 456
$T12 = 488
u$ = 544
v$ = 552
?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$4[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_bitwiseand.cpp
;	COMDAT ?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z
_TEXT	SEGMENT
count$ = 8
u$ = 256
v$ = 264
w$ = 272
w_count$ = 280
?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z PROC ; Palmtree::Math::Core::Internal::BitwiseAnd_X_X, COMDAT

; 37   :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__59184A5E_pmc_bitwiseand@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 38   :         __UNIT_TYPE count = w_count >> 5;

  00045	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  0004c	48 c1 e8 05	 shr	 rax, 5
  00050	48 89 45 08	 mov	 QWORD PTR count$[rbp], rax
$LN2@BitwiseAnd:

; 39   :         while (count != 0)

  00054	48 83 7d 08 00	 cmp	 QWORD PTR count$[rbp], 0
  00059	0f 84 2c 08 00
	00		 je	 $LN3@BitwiseAnd

; 40   :         {
; 41   :             w[0] = u[0] & v[0];

  0005f	b8 08 00 00 00	 mov	 eax, 8
  00064	48 6b c0 00	 imul	 rax, rax, 0
  00068	b9 08 00 00 00	 mov	 ecx, 8
  0006d	48 6b c9 00	 imul	 rcx, rcx, 0
  00071	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00078	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0007f	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00083	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00087	48 23 c1	 and	 rax, rcx
  0008a	b9 08 00 00 00	 mov	 ecx, 8
  0008f	48 6b c9 00	 imul	 rcx, rcx, 0
  00093	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0009a	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 42   :             w[1] = u[1] & v[1];

  0009e	b8 08 00 00 00	 mov	 eax, 8
  000a3	48 6b c0 01	 imul	 rax, rax, 1
  000a7	b9 08 00 00 00	 mov	 ecx, 8
  000ac	48 6b c9 01	 imul	 rcx, rcx, 1
  000b0	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  000b7	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  000be	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  000c2	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  000c6	48 23 c1	 and	 rax, rcx
  000c9	b9 08 00 00 00	 mov	 ecx, 8
  000ce	48 6b c9 01	 imul	 rcx, rcx, 1
  000d2	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  000d9	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 43   :             w[2] = u[2] & v[2];

  000dd	b8 08 00 00 00	 mov	 eax, 8
  000e2	48 6b c0 02	 imul	 rax, rax, 2
  000e6	b9 08 00 00 00	 mov	 ecx, 8
  000eb	48 6b c9 02	 imul	 rcx, rcx, 2
  000ef	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  000f6	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  000fd	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00101	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00105	48 23 c1	 and	 rax, rcx
  00108	b9 08 00 00 00	 mov	 ecx, 8
  0010d	48 6b c9 02	 imul	 rcx, rcx, 2
  00111	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00118	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 44   :             w[3] = u[3] & v[3];

  0011c	b8 08 00 00 00	 mov	 eax, 8
  00121	48 6b c0 03	 imul	 rax, rax, 3
  00125	b9 08 00 00 00	 mov	 ecx, 8
  0012a	48 6b c9 03	 imul	 rcx, rcx, 3
  0012e	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00135	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0013c	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00140	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00144	48 23 c1	 and	 rax, rcx
  00147	b9 08 00 00 00	 mov	 ecx, 8
  0014c	48 6b c9 03	 imul	 rcx, rcx, 3
  00150	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00157	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 45   :             w[4] = u[4] & v[4];

  0015b	b8 08 00 00 00	 mov	 eax, 8
  00160	48 6b c0 04	 imul	 rax, rax, 4
  00164	b9 08 00 00 00	 mov	 ecx, 8
  00169	48 6b c9 04	 imul	 rcx, rcx, 4
  0016d	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00174	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0017b	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  0017f	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00183	48 23 c1	 and	 rax, rcx
  00186	b9 08 00 00 00	 mov	 ecx, 8
  0018b	48 6b c9 04	 imul	 rcx, rcx, 4
  0018f	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00196	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 46   :             w[5] = u[5] & v[5];

  0019a	b8 08 00 00 00	 mov	 eax, 8
  0019f	48 6b c0 05	 imul	 rax, rax, 5
  001a3	b9 08 00 00 00	 mov	 ecx, 8
  001a8	48 6b c9 05	 imul	 rcx, rcx, 5
  001ac	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  001b3	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  001ba	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  001be	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  001c2	48 23 c1	 and	 rax, rcx
  001c5	b9 08 00 00 00	 mov	 ecx, 8
  001ca	48 6b c9 05	 imul	 rcx, rcx, 5
  001ce	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  001d5	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 47   :             w[6] = u[6] & v[6];

  001d9	b8 08 00 00 00	 mov	 eax, 8
  001de	48 6b c0 06	 imul	 rax, rax, 6
  001e2	b9 08 00 00 00	 mov	 ecx, 8
  001e7	48 6b c9 06	 imul	 rcx, rcx, 6
  001eb	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  001f2	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  001f9	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  001fd	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00201	48 23 c1	 and	 rax, rcx
  00204	b9 08 00 00 00	 mov	 ecx, 8
  00209	48 6b c9 06	 imul	 rcx, rcx, 6
  0020d	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00214	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 48   :             w[7] = u[7] & v[7];

  00218	b8 08 00 00 00	 mov	 eax, 8
  0021d	48 6b c0 07	 imul	 rax, rax, 7
  00221	b9 08 00 00 00	 mov	 ecx, 8
  00226	48 6b c9 07	 imul	 rcx, rcx, 7
  0022a	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00231	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00238	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  0023c	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00240	48 23 c1	 and	 rax, rcx
  00243	b9 08 00 00 00	 mov	 ecx, 8
  00248	48 6b c9 07	 imul	 rcx, rcx, 7
  0024c	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00253	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 49   :             w[8] = u[8] & v[8];

  00257	b8 08 00 00 00	 mov	 eax, 8
  0025c	48 6b c0 08	 imul	 rax, rax, 8
  00260	b9 08 00 00 00	 mov	 ecx, 8
  00265	48 6b c9 08	 imul	 rcx, rcx, 8
  00269	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00270	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00277	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  0027b	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  0027f	48 23 c1	 and	 rax, rcx
  00282	b9 08 00 00 00	 mov	 ecx, 8
  00287	48 6b c9 08	 imul	 rcx, rcx, 8
  0028b	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00292	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 50   :             w[9] = u[9] & v[9];

  00296	b8 08 00 00 00	 mov	 eax, 8
  0029b	48 6b c0 09	 imul	 rax, rax, 9
  0029f	b9 08 00 00 00	 mov	 ecx, 8
  002a4	48 6b c9 09	 imul	 rcx, rcx, 9
  002a8	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  002af	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  002b6	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  002ba	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  002be	48 23 c1	 and	 rax, rcx
  002c1	b9 08 00 00 00	 mov	 ecx, 8
  002c6	48 6b c9 09	 imul	 rcx, rcx, 9
  002ca	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  002d1	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 51   :             w[10] = u[10] & v[10];

  002d5	b8 08 00 00 00	 mov	 eax, 8
  002da	48 6b c0 0a	 imul	 rax, rax, 10
  002de	b9 08 00 00 00	 mov	 ecx, 8
  002e3	48 6b c9 0a	 imul	 rcx, rcx, 10
  002e7	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  002ee	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  002f5	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  002f9	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  002fd	48 23 c1	 and	 rax, rcx
  00300	b9 08 00 00 00	 mov	 ecx, 8
  00305	48 6b c9 0a	 imul	 rcx, rcx, 10
  00309	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00310	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 52   :             w[11] = u[11] & v[11];

  00314	b8 08 00 00 00	 mov	 eax, 8
  00319	48 6b c0 0b	 imul	 rax, rax, 11
  0031d	b9 08 00 00 00	 mov	 ecx, 8
  00322	48 6b c9 0b	 imul	 rcx, rcx, 11
  00326	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  0032d	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00334	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00338	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  0033c	48 23 c1	 and	 rax, rcx
  0033f	b9 08 00 00 00	 mov	 ecx, 8
  00344	48 6b c9 0b	 imul	 rcx, rcx, 11
  00348	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0034f	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 53   :             w[12] = u[12] & v[12];

  00353	b8 08 00 00 00	 mov	 eax, 8
  00358	48 6b c0 0c	 imul	 rax, rax, 12
  0035c	b9 08 00 00 00	 mov	 ecx, 8
  00361	48 6b c9 0c	 imul	 rcx, rcx, 12
  00365	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  0036c	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00373	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00377	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  0037b	48 23 c1	 and	 rax, rcx
  0037e	b9 08 00 00 00	 mov	 ecx, 8
  00383	48 6b c9 0c	 imul	 rcx, rcx, 12
  00387	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0038e	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 54   :             w[13] = u[13] & v[13];

  00392	b8 08 00 00 00	 mov	 eax, 8
  00397	48 6b c0 0d	 imul	 rax, rax, 13
  0039b	b9 08 00 00 00	 mov	 ecx, 8
  003a0	48 6b c9 0d	 imul	 rcx, rcx, 13
  003a4	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  003ab	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  003b2	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  003b6	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  003ba	48 23 c1	 and	 rax, rcx
  003bd	b9 08 00 00 00	 mov	 ecx, 8
  003c2	48 6b c9 0d	 imul	 rcx, rcx, 13
  003c6	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  003cd	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 55   :             w[14] = u[14] & v[14];

  003d1	b8 08 00 00 00	 mov	 eax, 8
  003d6	48 6b c0 0e	 imul	 rax, rax, 14
  003da	b9 08 00 00 00	 mov	 ecx, 8
  003df	48 6b c9 0e	 imul	 rcx, rcx, 14
  003e3	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  003ea	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  003f1	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  003f5	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  003f9	48 23 c1	 and	 rax, rcx
  003fc	b9 08 00 00 00	 mov	 ecx, 8
  00401	48 6b c9 0e	 imul	 rcx, rcx, 14
  00405	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0040c	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 56   :             w[15] = u[15] & v[15];

  00410	b8 08 00 00 00	 mov	 eax, 8
  00415	48 6b c0 0f	 imul	 rax, rax, 15
  00419	b9 08 00 00 00	 mov	 ecx, 8
  0041e	48 6b c9 0f	 imul	 rcx, rcx, 15
  00422	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00429	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00430	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00434	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00438	48 23 c1	 and	 rax, rcx
  0043b	b9 08 00 00 00	 mov	 ecx, 8
  00440	48 6b c9 0f	 imul	 rcx, rcx, 15
  00444	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0044b	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 57   :             w[16] = u[16] & v[16];

  0044f	b8 08 00 00 00	 mov	 eax, 8
  00454	48 6b c0 10	 imul	 rax, rax, 16
  00458	b9 08 00 00 00	 mov	 ecx, 8
  0045d	48 6b c9 10	 imul	 rcx, rcx, 16
  00461	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00468	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0046f	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00473	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00477	48 23 c1	 and	 rax, rcx
  0047a	b9 08 00 00 00	 mov	 ecx, 8
  0047f	48 6b c9 10	 imul	 rcx, rcx, 16
  00483	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0048a	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 58   :             w[17] = u[17] & v[17];

  0048e	b8 08 00 00 00	 mov	 eax, 8
  00493	48 6b c0 11	 imul	 rax, rax, 17
  00497	b9 08 00 00 00	 mov	 ecx, 8
  0049c	48 6b c9 11	 imul	 rcx, rcx, 17
  004a0	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  004a7	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  004ae	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  004b2	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  004b6	48 23 c1	 and	 rax, rcx
  004b9	b9 08 00 00 00	 mov	 ecx, 8
  004be	48 6b c9 11	 imul	 rcx, rcx, 17
  004c2	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  004c9	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 59   :             w[18] = u[18] & v[18];

  004cd	b8 08 00 00 00	 mov	 eax, 8
  004d2	48 6b c0 12	 imul	 rax, rax, 18
  004d6	b9 08 00 00 00	 mov	 ecx, 8
  004db	48 6b c9 12	 imul	 rcx, rcx, 18
  004df	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  004e6	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  004ed	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  004f1	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  004f5	48 23 c1	 and	 rax, rcx
  004f8	b9 08 00 00 00	 mov	 ecx, 8
  004fd	48 6b c9 12	 imul	 rcx, rcx, 18
  00501	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00508	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 60   :             w[19] = u[19] & v[19];

  0050c	b8 08 00 00 00	 mov	 eax, 8
  00511	48 6b c0 13	 imul	 rax, rax, 19
  00515	b9 08 00 00 00	 mov	 ecx, 8
  0051a	48 6b c9 13	 imul	 rcx, rcx, 19
  0051e	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00525	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0052c	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00530	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00534	48 23 c1	 and	 rax, rcx
  00537	b9 08 00 00 00	 mov	 ecx, 8
  0053c	48 6b c9 13	 imul	 rcx, rcx, 19
  00540	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00547	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 61   :             w[20] = u[20] & v[20];

  0054b	b8 08 00 00 00	 mov	 eax, 8
  00550	48 6b c0 14	 imul	 rax, rax, 20
  00554	b9 08 00 00 00	 mov	 ecx, 8
  00559	48 6b c9 14	 imul	 rcx, rcx, 20
  0055d	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00564	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0056b	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  0056f	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00573	48 23 c1	 and	 rax, rcx
  00576	b9 08 00 00 00	 mov	 ecx, 8
  0057b	48 6b c9 14	 imul	 rcx, rcx, 20
  0057f	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00586	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 62   :             w[21] = u[21] & v[21];

  0058a	b8 08 00 00 00	 mov	 eax, 8
  0058f	48 6b c0 15	 imul	 rax, rax, 21
  00593	b9 08 00 00 00	 mov	 ecx, 8
  00598	48 6b c9 15	 imul	 rcx, rcx, 21
  0059c	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  005a3	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  005aa	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  005ae	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  005b2	48 23 c1	 and	 rax, rcx
  005b5	b9 08 00 00 00	 mov	 ecx, 8
  005ba	48 6b c9 15	 imul	 rcx, rcx, 21
  005be	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  005c5	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 63   :             w[22] = u[22] & v[22];

  005c9	b8 08 00 00 00	 mov	 eax, 8
  005ce	48 6b c0 16	 imul	 rax, rax, 22
  005d2	b9 08 00 00 00	 mov	 ecx, 8
  005d7	48 6b c9 16	 imul	 rcx, rcx, 22
  005db	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  005e2	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  005e9	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  005ed	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  005f1	48 23 c1	 and	 rax, rcx
  005f4	b9 08 00 00 00	 mov	 ecx, 8
  005f9	48 6b c9 16	 imul	 rcx, rcx, 22
  005fd	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00604	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 64   :             w[23] = u[23] & v[23];

  00608	b8 08 00 00 00	 mov	 eax, 8
  0060d	48 6b c0 17	 imul	 rax, rax, 23
  00611	b9 08 00 00 00	 mov	 ecx, 8
  00616	48 6b c9 17	 imul	 rcx, rcx, 23
  0061a	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00621	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00628	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  0062c	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00630	48 23 c1	 and	 rax, rcx
  00633	b9 08 00 00 00	 mov	 ecx, 8
  00638	48 6b c9 17	 imul	 rcx, rcx, 23
  0063c	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00643	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 65   :             w[24] = u[24] & v[24];

  00647	b8 08 00 00 00	 mov	 eax, 8
  0064c	48 6b c0 18	 imul	 rax, rax, 24
  00650	b9 08 00 00 00	 mov	 ecx, 8
  00655	48 6b c9 18	 imul	 rcx, rcx, 24
  00659	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00660	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00667	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  0066b	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  0066f	48 23 c1	 and	 rax, rcx
  00672	b9 08 00 00 00	 mov	 ecx, 8
  00677	48 6b c9 18	 imul	 rcx, rcx, 24
  0067b	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00682	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 66   :             w[25] = u[25] & v[25];

  00686	b8 08 00 00 00	 mov	 eax, 8
  0068b	48 6b c0 19	 imul	 rax, rax, 25
  0068f	b9 08 00 00 00	 mov	 ecx, 8
  00694	48 6b c9 19	 imul	 rcx, rcx, 25
  00698	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  0069f	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  006a6	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  006aa	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  006ae	48 23 c1	 and	 rax, rcx
  006b1	b9 08 00 00 00	 mov	 ecx, 8
  006b6	48 6b c9 19	 imul	 rcx, rcx, 25
  006ba	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  006c1	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 67   :             w[26] = u[26] & v[26];

  006c5	b8 08 00 00 00	 mov	 eax, 8
  006ca	48 6b c0 1a	 imul	 rax, rax, 26
  006ce	b9 08 00 00 00	 mov	 ecx, 8
  006d3	48 6b c9 1a	 imul	 rcx, rcx, 26
  006d7	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  006de	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  006e5	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  006e9	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  006ed	48 23 c1	 and	 rax, rcx
  006f0	b9 08 00 00 00	 mov	 ecx, 8
  006f5	48 6b c9 1a	 imul	 rcx, rcx, 26
  006f9	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00700	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 68   :             w[27] = u[27] & v[27];

  00704	b8 08 00 00 00	 mov	 eax, 8
  00709	48 6b c0 1b	 imul	 rax, rax, 27
  0070d	b9 08 00 00 00	 mov	 ecx, 8
  00712	48 6b c9 1b	 imul	 rcx, rcx, 27
  00716	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  0071d	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00724	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00728	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  0072c	48 23 c1	 and	 rax, rcx
  0072f	b9 08 00 00 00	 mov	 ecx, 8
  00734	48 6b c9 1b	 imul	 rcx, rcx, 27
  00738	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0073f	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 69   :             w[28] = u[28] & v[28];

  00743	b8 08 00 00 00	 mov	 eax, 8
  00748	48 6b c0 1c	 imul	 rax, rax, 28
  0074c	b9 08 00 00 00	 mov	 ecx, 8
  00751	48 6b c9 1c	 imul	 rcx, rcx, 28
  00755	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  0075c	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00763	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00767	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  0076b	48 23 c1	 and	 rax, rcx
  0076e	b9 08 00 00 00	 mov	 ecx, 8
  00773	48 6b c9 1c	 imul	 rcx, rcx, 28
  00777	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0077e	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 70   :             w[29] = u[29] & v[29];

  00782	b8 08 00 00 00	 mov	 eax, 8
  00787	48 6b c0 1d	 imul	 rax, rax, 29
  0078b	b9 08 00 00 00	 mov	 ecx, 8
  00790	48 6b c9 1d	 imul	 rcx, rcx, 29
  00794	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  0079b	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  007a2	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  007a6	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  007aa	48 23 c1	 and	 rax, rcx
  007ad	b9 08 00 00 00	 mov	 ecx, 8
  007b2	48 6b c9 1d	 imul	 rcx, rcx, 29
  007b6	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  007bd	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 71   :             w[30] = u[30] & v[30];

  007c1	b8 08 00 00 00	 mov	 eax, 8
  007c6	48 6b c0 1e	 imul	 rax, rax, 30
  007ca	b9 08 00 00 00	 mov	 ecx, 8
  007cf	48 6b c9 1e	 imul	 rcx, rcx, 30
  007d3	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  007da	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  007e1	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  007e5	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  007e9	48 23 c1	 and	 rax, rcx
  007ec	b9 08 00 00 00	 mov	 ecx, 8
  007f1	48 6b c9 1e	 imul	 rcx, rcx, 30
  007f5	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  007fc	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 72   :             w[31] = u[31] & v[31];

  00800	b8 08 00 00 00	 mov	 eax, 8
  00805	48 6b c0 1f	 imul	 rax, rax, 31
  00809	b9 08 00 00 00	 mov	 ecx, 8
  0080e	48 6b c9 1f	 imul	 rcx, rcx, 31
  00812	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00819	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00820	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00824	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00828	48 23 c1	 and	 rax, rcx
  0082b	b9 08 00 00 00	 mov	 ecx, 8
  00830	48 6b c9 1f	 imul	 rcx, rcx, 31
  00834	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  0083b	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 73   :             u += 32;

  0083f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00846	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  0084c	48 89 85 00 01
	00 00		 mov	 QWORD PTR u$[rbp], rax

; 74   :             v += 32;

  00853	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  0085a	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  00860	48 89 85 08 01
	00 00		 mov	 QWORD PTR v$[rbp], rax

; 75   :             w += 32;

  00867	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  0086e	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  00874	48 89 85 10 01
	00 00		 mov	 QWORD PTR w$[rbp], rax

; 76   :             --count;

  0087b	48 8b 45 08	 mov	 rax, QWORD PTR count$[rbp]
  0087f	48 ff c8	 dec	 rax
  00882	48 89 45 08	 mov	 QWORD PTR count$[rbp], rax

; 77   :         }

  00886	e9 c9 f7 ff ff	 jmp	 $LN2@BitwiseAnd
$LN3@BitwiseAnd:

; 78   : 
; 79   :         if (w_count & 0x10)

  0088b	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  00892	48 83 e0 10	 and	 rax, 16
  00896	48 85 c0	 test	 rax, rax
  00899	0f 84 2c 04 00
	00		 je	 $LN4@BitwiseAnd

; 80   :         {
; 81   :             w[0] = u[0] & v[0];

  0089f	b8 08 00 00 00	 mov	 eax, 8
  008a4	48 6b c0 00	 imul	 rax, rax, 0
  008a8	b9 08 00 00 00	 mov	 ecx, 8
  008ad	48 6b c9 00	 imul	 rcx, rcx, 0
  008b1	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  008b8	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  008bf	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  008c3	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  008c7	48 23 c1	 and	 rax, rcx
  008ca	b9 08 00 00 00	 mov	 ecx, 8
  008cf	48 6b c9 00	 imul	 rcx, rcx, 0
  008d3	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  008da	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 82   :             w[1] = u[1] & v[1];

  008de	b8 08 00 00 00	 mov	 eax, 8
  008e3	48 6b c0 01	 imul	 rax, rax, 1
  008e7	b9 08 00 00 00	 mov	 ecx, 8
  008ec	48 6b c9 01	 imul	 rcx, rcx, 1
  008f0	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  008f7	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  008fe	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00902	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00906	48 23 c1	 and	 rax, rcx
  00909	b9 08 00 00 00	 mov	 ecx, 8
  0090e	48 6b c9 01	 imul	 rcx, rcx, 1
  00912	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00919	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 83   :             w[2] = u[2] & v[2];

  0091d	b8 08 00 00 00	 mov	 eax, 8
  00922	48 6b c0 02	 imul	 rax, rax, 2
  00926	b9 08 00 00 00	 mov	 ecx, 8
  0092b	48 6b c9 02	 imul	 rcx, rcx, 2
  0092f	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00936	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0093d	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00941	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00945	48 23 c1	 and	 rax, rcx
  00948	b9 08 00 00 00	 mov	 ecx, 8
  0094d	48 6b c9 02	 imul	 rcx, rcx, 2
  00951	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00958	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 84   :             w[3] = u[3] & v[3];

  0095c	b8 08 00 00 00	 mov	 eax, 8
  00961	48 6b c0 03	 imul	 rax, rax, 3
  00965	b9 08 00 00 00	 mov	 ecx, 8
  0096a	48 6b c9 03	 imul	 rcx, rcx, 3
  0096e	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00975	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0097c	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00980	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00984	48 23 c1	 and	 rax, rcx
  00987	b9 08 00 00 00	 mov	 ecx, 8
  0098c	48 6b c9 03	 imul	 rcx, rcx, 3
  00990	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00997	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 85   :             w[4] = u[4] & v[4];

  0099b	b8 08 00 00 00	 mov	 eax, 8
  009a0	48 6b c0 04	 imul	 rax, rax, 4
  009a4	b9 08 00 00 00	 mov	 ecx, 8
  009a9	48 6b c9 04	 imul	 rcx, rcx, 4
  009ad	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  009b4	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  009bb	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  009bf	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  009c3	48 23 c1	 and	 rax, rcx
  009c6	b9 08 00 00 00	 mov	 ecx, 8
  009cb	48 6b c9 04	 imul	 rcx, rcx, 4
  009cf	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  009d6	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 86   :             w[5] = u[5] & v[5];

  009da	b8 08 00 00 00	 mov	 eax, 8
  009df	48 6b c0 05	 imul	 rax, rax, 5
  009e3	b9 08 00 00 00	 mov	 ecx, 8
  009e8	48 6b c9 05	 imul	 rcx, rcx, 5
  009ec	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  009f3	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  009fa	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  009fe	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00a02	48 23 c1	 and	 rax, rcx
  00a05	b9 08 00 00 00	 mov	 ecx, 8
  00a0a	48 6b c9 05	 imul	 rcx, rcx, 5
  00a0e	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00a15	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 87   :             w[6] = u[6] & v[6];

  00a19	b8 08 00 00 00	 mov	 eax, 8
  00a1e	48 6b c0 06	 imul	 rax, rax, 6
  00a22	b9 08 00 00 00	 mov	 ecx, 8
  00a27	48 6b c9 06	 imul	 rcx, rcx, 6
  00a2b	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00a32	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00a39	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00a3d	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00a41	48 23 c1	 and	 rax, rcx
  00a44	b9 08 00 00 00	 mov	 ecx, 8
  00a49	48 6b c9 06	 imul	 rcx, rcx, 6
  00a4d	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00a54	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 88   :             w[7] = u[7] & v[7];

  00a58	b8 08 00 00 00	 mov	 eax, 8
  00a5d	48 6b c0 07	 imul	 rax, rax, 7
  00a61	b9 08 00 00 00	 mov	 ecx, 8
  00a66	48 6b c9 07	 imul	 rcx, rcx, 7
  00a6a	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00a71	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00a78	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00a7c	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00a80	48 23 c1	 and	 rax, rcx
  00a83	b9 08 00 00 00	 mov	 ecx, 8
  00a88	48 6b c9 07	 imul	 rcx, rcx, 7
  00a8c	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00a93	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 89   :             w[8] = u[8] & v[8];

  00a97	b8 08 00 00 00	 mov	 eax, 8
  00a9c	48 6b c0 08	 imul	 rax, rax, 8
  00aa0	b9 08 00 00 00	 mov	 ecx, 8
  00aa5	48 6b c9 08	 imul	 rcx, rcx, 8
  00aa9	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00ab0	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00ab7	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00abb	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00abf	48 23 c1	 and	 rax, rcx
  00ac2	b9 08 00 00 00	 mov	 ecx, 8
  00ac7	48 6b c9 08	 imul	 rcx, rcx, 8
  00acb	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00ad2	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 90   :             w[9] = u[9] & v[9];

  00ad6	b8 08 00 00 00	 mov	 eax, 8
  00adb	48 6b c0 09	 imul	 rax, rax, 9
  00adf	b9 08 00 00 00	 mov	 ecx, 8
  00ae4	48 6b c9 09	 imul	 rcx, rcx, 9
  00ae8	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00aef	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00af6	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00afa	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00afe	48 23 c1	 and	 rax, rcx
  00b01	b9 08 00 00 00	 mov	 ecx, 8
  00b06	48 6b c9 09	 imul	 rcx, rcx, 9
  00b0a	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00b11	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 91   :             w[10] = u[10] & v[10];

  00b15	b8 08 00 00 00	 mov	 eax, 8
  00b1a	48 6b c0 0a	 imul	 rax, rax, 10
  00b1e	b9 08 00 00 00	 mov	 ecx, 8
  00b23	48 6b c9 0a	 imul	 rcx, rcx, 10
  00b27	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00b2e	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00b35	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00b39	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00b3d	48 23 c1	 and	 rax, rcx
  00b40	b9 08 00 00 00	 mov	 ecx, 8
  00b45	48 6b c9 0a	 imul	 rcx, rcx, 10
  00b49	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00b50	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 92   :             w[11] = u[11] & v[11];

  00b54	b8 08 00 00 00	 mov	 eax, 8
  00b59	48 6b c0 0b	 imul	 rax, rax, 11
  00b5d	b9 08 00 00 00	 mov	 ecx, 8
  00b62	48 6b c9 0b	 imul	 rcx, rcx, 11
  00b66	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00b6d	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00b74	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00b78	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00b7c	48 23 c1	 and	 rax, rcx
  00b7f	b9 08 00 00 00	 mov	 ecx, 8
  00b84	48 6b c9 0b	 imul	 rcx, rcx, 11
  00b88	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00b8f	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 93   :             w[12] = u[12] & v[12];

  00b93	b8 08 00 00 00	 mov	 eax, 8
  00b98	48 6b c0 0c	 imul	 rax, rax, 12
  00b9c	b9 08 00 00 00	 mov	 ecx, 8
  00ba1	48 6b c9 0c	 imul	 rcx, rcx, 12
  00ba5	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00bac	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00bb3	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00bb7	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00bbb	48 23 c1	 and	 rax, rcx
  00bbe	b9 08 00 00 00	 mov	 ecx, 8
  00bc3	48 6b c9 0c	 imul	 rcx, rcx, 12
  00bc7	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00bce	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 94   :             w[13] = u[13] & v[13];

  00bd2	b8 08 00 00 00	 mov	 eax, 8
  00bd7	48 6b c0 0d	 imul	 rax, rax, 13
  00bdb	b9 08 00 00 00	 mov	 ecx, 8
  00be0	48 6b c9 0d	 imul	 rcx, rcx, 13
  00be4	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00beb	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00bf2	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00bf6	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00bfa	48 23 c1	 and	 rax, rcx
  00bfd	b9 08 00 00 00	 mov	 ecx, 8
  00c02	48 6b c9 0d	 imul	 rcx, rcx, 13
  00c06	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00c0d	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 95   :             w[14] = u[14] & v[14];

  00c11	b8 08 00 00 00	 mov	 eax, 8
  00c16	48 6b c0 0e	 imul	 rax, rax, 14
  00c1a	b9 08 00 00 00	 mov	 ecx, 8
  00c1f	48 6b c9 0e	 imul	 rcx, rcx, 14
  00c23	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00c2a	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00c31	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00c35	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00c39	48 23 c1	 and	 rax, rcx
  00c3c	b9 08 00 00 00	 mov	 ecx, 8
  00c41	48 6b c9 0e	 imul	 rcx, rcx, 14
  00c45	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00c4c	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 96   :             w[15] = u[15] & v[15];

  00c50	b8 08 00 00 00	 mov	 eax, 8
  00c55	48 6b c0 0f	 imul	 rax, rax, 15
  00c59	b9 08 00 00 00	 mov	 ecx, 8
  00c5e	48 6b c9 0f	 imul	 rcx, rcx, 15
  00c62	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00c69	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00c70	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00c74	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00c78	48 23 c1	 and	 rax, rcx
  00c7b	b9 08 00 00 00	 mov	 ecx, 8
  00c80	48 6b c9 0f	 imul	 rcx, rcx, 15
  00c84	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00c8b	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 97   :             u += 16;

  00c8f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00c96	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00c9c	48 89 85 00 01
	00 00		 mov	 QWORD PTR u$[rbp], rax

; 98   :             v += 16;

  00ca3	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  00caa	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00cb0	48 89 85 08 01
	00 00		 mov	 QWORD PTR v$[rbp], rax

; 99   :             w += 16;

  00cb7	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  00cbe	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00cc4	48 89 85 10 01
	00 00		 mov	 QWORD PTR w$[rbp], rax
$LN4@BitwiseAnd:

; 100  :         }
; 101  : 
; 102  :         if (w_count & 0x8)

  00ccb	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  00cd2	48 83 e0 08	 and	 rax, 8
  00cd6	48 85 c0	 test	 rax, rax
  00cd9	0f 84 2e 02 00
	00		 je	 $LN5@BitwiseAnd

; 103  :         {
; 104  :             w[0] = u[0] & v[0];

  00cdf	b8 08 00 00 00	 mov	 eax, 8
  00ce4	48 6b c0 00	 imul	 rax, rax, 0
  00ce8	b9 08 00 00 00	 mov	 ecx, 8
  00ced	48 6b c9 00	 imul	 rcx, rcx, 0
  00cf1	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00cf8	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00cff	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00d03	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00d07	48 23 c1	 and	 rax, rcx
  00d0a	b9 08 00 00 00	 mov	 ecx, 8
  00d0f	48 6b c9 00	 imul	 rcx, rcx, 0
  00d13	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00d1a	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 105  :             w[1] = u[1] & v[1];

  00d1e	b8 08 00 00 00	 mov	 eax, 8
  00d23	48 6b c0 01	 imul	 rax, rax, 1
  00d27	b9 08 00 00 00	 mov	 ecx, 8
  00d2c	48 6b c9 01	 imul	 rcx, rcx, 1
  00d30	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00d37	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00d3e	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00d42	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00d46	48 23 c1	 and	 rax, rcx
  00d49	b9 08 00 00 00	 mov	 ecx, 8
  00d4e	48 6b c9 01	 imul	 rcx, rcx, 1
  00d52	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00d59	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 106  :             w[2] = u[2] & v[2];

  00d5d	b8 08 00 00 00	 mov	 eax, 8
  00d62	48 6b c0 02	 imul	 rax, rax, 2
  00d66	b9 08 00 00 00	 mov	 ecx, 8
  00d6b	48 6b c9 02	 imul	 rcx, rcx, 2
  00d6f	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00d76	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00d7d	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00d81	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00d85	48 23 c1	 and	 rax, rcx
  00d88	b9 08 00 00 00	 mov	 ecx, 8
  00d8d	48 6b c9 02	 imul	 rcx, rcx, 2
  00d91	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00d98	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 107  :             w[3] = u[3] & v[3];

  00d9c	b8 08 00 00 00	 mov	 eax, 8
  00da1	48 6b c0 03	 imul	 rax, rax, 3
  00da5	b9 08 00 00 00	 mov	 ecx, 8
  00daa	48 6b c9 03	 imul	 rcx, rcx, 3
  00dae	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00db5	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00dbc	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00dc0	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00dc4	48 23 c1	 and	 rax, rcx
  00dc7	b9 08 00 00 00	 mov	 ecx, 8
  00dcc	48 6b c9 03	 imul	 rcx, rcx, 3
  00dd0	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00dd7	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 108  :             w[4] = u[4] & v[4];

  00ddb	b8 08 00 00 00	 mov	 eax, 8
  00de0	48 6b c0 04	 imul	 rax, rax, 4
  00de4	b9 08 00 00 00	 mov	 ecx, 8
  00de9	48 6b c9 04	 imul	 rcx, rcx, 4
  00ded	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00df4	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00dfb	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00dff	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00e03	48 23 c1	 and	 rax, rcx
  00e06	b9 08 00 00 00	 mov	 ecx, 8
  00e0b	48 6b c9 04	 imul	 rcx, rcx, 4
  00e0f	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00e16	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 109  :             w[5] = u[5] & v[5];

  00e1a	b8 08 00 00 00	 mov	 eax, 8
  00e1f	48 6b c0 05	 imul	 rax, rax, 5
  00e23	b9 08 00 00 00	 mov	 ecx, 8
  00e28	48 6b c9 05	 imul	 rcx, rcx, 5
  00e2c	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00e33	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00e3a	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00e3e	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00e42	48 23 c1	 and	 rax, rcx
  00e45	b9 08 00 00 00	 mov	 ecx, 8
  00e4a	48 6b c9 05	 imul	 rcx, rcx, 5
  00e4e	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00e55	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 110  :             w[6] = u[6] & v[6];

  00e59	b8 08 00 00 00	 mov	 eax, 8
  00e5e	48 6b c0 06	 imul	 rax, rax, 6
  00e62	b9 08 00 00 00	 mov	 ecx, 8
  00e67	48 6b c9 06	 imul	 rcx, rcx, 6
  00e6b	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00e72	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00e79	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00e7d	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00e81	48 23 c1	 and	 rax, rcx
  00e84	b9 08 00 00 00	 mov	 ecx, 8
  00e89	48 6b c9 06	 imul	 rcx, rcx, 6
  00e8d	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00e94	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 111  :             w[7] = u[7] & v[7];

  00e98	b8 08 00 00 00	 mov	 eax, 8
  00e9d	48 6b c0 07	 imul	 rax, rax, 7
  00ea1	b9 08 00 00 00	 mov	 ecx, 8
  00ea6	48 6b c9 07	 imul	 rcx, rcx, 7
  00eaa	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00eb1	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00eb8	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00ebc	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00ec0	48 23 c1	 and	 rax, rcx
  00ec3	b9 08 00 00 00	 mov	 ecx, 8
  00ec8	48 6b c9 07	 imul	 rcx, rcx, 7
  00ecc	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00ed3	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 112  :             u += 8;

  00ed7	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00ede	48 83 c0 40	 add	 rax, 64			; 00000040H
  00ee2	48 89 85 00 01
	00 00		 mov	 QWORD PTR u$[rbp], rax

; 113  :             v += 8;

  00ee9	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  00ef0	48 83 c0 40	 add	 rax, 64			; 00000040H
  00ef4	48 89 85 08 01
	00 00		 mov	 QWORD PTR v$[rbp], rax

; 114  :             w += 8;

  00efb	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  00f02	48 83 c0 40	 add	 rax, 64			; 00000040H
  00f06	48 89 85 10 01
	00 00		 mov	 QWORD PTR w$[rbp], rax
$LN5@BitwiseAnd:

; 115  :         }
; 116  : 
; 117  :         if (w_count & 0x4)

  00f0d	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  00f14	48 83 e0 04	 and	 rax, 4
  00f18	48 85 c0	 test	 rax, rax
  00f1b	0f 84 32 01 00
	00		 je	 $LN6@BitwiseAnd

; 118  :         {
; 119  :             w[0] = u[0] & v[0];

  00f21	b8 08 00 00 00	 mov	 eax, 8
  00f26	48 6b c0 00	 imul	 rax, rax, 0
  00f2a	b9 08 00 00 00	 mov	 ecx, 8
  00f2f	48 6b c9 00	 imul	 rcx, rcx, 0
  00f33	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00f3a	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00f41	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00f45	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00f49	48 23 c1	 and	 rax, rcx
  00f4c	b9 08 00 00 00	 mov	 ecx, 8
  00f51	48 6b c9 00	 imul	 rcx, rcx, 0
  00f55	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00f5c	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 120  :             w[1] = u[1] & v[1];

  00f60	b8 08 00 00 00	 mov	 eax, 8
  00f65	48 6b c0 01	 imul	 rax, rax, 1
  00f69	b9 08 00 00 00	 mov	 ecx, 8
  00f6e	48 6b c9 01	 imul	 rcx, rcx, 1
  00f72	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00f79	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00f80	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00f84	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00f88	48 23 c1	 and	 rax, rcx
  00f8b	b9 08 00 00 00	 mov	 ecx, 8
  00f90	48 6b c9 01	 imul	 rcx, rcx, 1
  00f94	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00f9b	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 121  :             w[2] = u[2] & v[2];

  00f9f	b8 08 00 00 00	 mov	 eax, 8
  00fa4	48 6b c0 02	 imul	 rax, rax, 2
  00fa8	b9 08 00 00 00	 mov	 ecx, 8
  00fad	48 6b c9 02	 imul	 rcx, rcx, 2
  00fb1	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00fb8	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00fbf	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  00fc3	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00fc7	48 23 c1	 and	 rax, rcx
  00fca	b9 08 00 00 00	 mov	 ecx, 8
  00fcf	48 6b c9 02	 imul	 rcx, rcx, 2
  00fd3	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00fda	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 122  :             w[3] = u[3] & v[3];

  00fde	b8 08 00 00 00	 mov	 eax, 8
  00fe3	48 6b c0 03	 imul	 rax, rax, 3
  00fe7	b9 08 00 00 00	 mov	 ecx, 8
  00fec	48 6b c9 03	 imul	 rcx, rcx, 3
  00ff0	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00ff7	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  00ffe	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  01002	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  01006	48 23 c1	 and	 rax, rcx
  01009	b9 08 00 00 00	 mov	 ecx, 8
  0100e	48 6b c9 03	 imul	 rcx, rcx, 3
  01012	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  01019	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 123  :             u += 4;

  0101d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  01024	48 83 c0 20	 add	 rax, 32			; 00000020H
  01028	48 89 85 00 01
	00 00		 mov	 QWORD PTR u$[rbp], rax

; 124  :             v += 4;

  0102f	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  01036	48 83 c0 20	 add	 rax, 32			; 00000020H
  0103a	48 89 85 08 01
	00 00		 mov	 QWORD PTR v$[rbp], rax

; 125  :             w += 4;

  01041	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  01048	48 83 c0 20	 add	 rax, 32			; 00000020H
  0104c	48 89 85 10 01
	00 00		 mov	 QWORD PTR w$[rbp], rax
$LN6@BitwiseAnd:

; 126  :         }
; 127  : 
; 128  :         if (w_count & 0x2)

  01053	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  0105a	48 83 e0 02	 and	 rax, 2
  0105e	48 85 c0	 test	 rax, rax
  01061	0f 84 b4 00 00
	00		 je	 $LN7@BitwiseAnd

; 129  :         {
; 130  :             w[0] = u[0] & v[0];

  01067	b8 08 00 00 00	 mov	 eax, 8
  0106c	48 6b c0 00	 imul	 rax, rax, 0
  01070	b9 08 00 00 00	 mov	 ecx, 8
  01075	48 6b c9 00	 imul	 rcx, rcx, 0
  01079	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  01080	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  01087	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  0108b	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  0108f	48 23 c1	 and	 rax, rcx
  01092	b9 08 00 00 00	 mov	 ecx, 8
  01097	48 6b c9 00	 imul	 rcx, rcx, 0
  0109b	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  010a2	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 131  :             w[1] = u[1] & v[1];

  010a6	b8 08 00 00 00	 mov	 eax, 8
  010ab	48 6b c0 01	 imul	 rax, rax, 1
  010af	b9 08 00 00 00	 mov	 ecx, 8
  010b4	48 6b c9 01	 imul	 rcx, rcx, 1
  010b8	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  010bf	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  010c6	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  010ca	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  010ce	48 23 c1	 and	 rax, rcx
  010d1	b9 08 00 00 00	 mov	 ecx, 8
  010d6	48 6b c9 01	 imul	 rcx, rcx, 1
  010da	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  010e1	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 132  :             u += 2;

  010e5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  010ec	48 83 c0 10	 add	 rax, 16
  010f0	48 89 85 00 01
	00 00		 mov	 QWORD PTR u$[rbp], rax

; 133  :             v += 2;

  010f7	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  010fe	48 83 c0 10	 add	 rax, 16
  01102	48 89 85 08 01
	00 00		 mov	 QWORD PTR v$[rbp], rax

; 134  :             w += 2;

  01109	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  01110	48 83 c0 10	 add	 rax, 16
  01114	48 89 85 10 01
	00 00		 mov	 QWORD PTR w$[rbp], rax
$LN7@BitwiseAnd:

; 135  :         }
; 136  : 
; 137  :         if (w_count & 0x1)

  0111b	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR w_count$[rbp]
  01122	48 83 e0 01	 and	 rax, 1
  01126	48 85 c0	 test	 rax, rax
  01129	74 75		 je	 SHORT $LN8@BitwiseAnd

; 138  :         {
; 139  :             w[0] = u[0] & v[0];

  0112b	b8 08 00 00 00	 mov	 eax, 8
  01130	48 6b c0 00	 imul	 rax, rax, 0
  01134	b9 08 00 00 00	 mov	 ecx, 8
  01139	48 6b c9 00	 imul	 rcx, rcx, 0
  0113d	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  01144	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR v$[rbp]
  0114b	49 8b 0c 08	 mov	 rcx, QWORD PTR [r8+rcx]
  0114f	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  01153	48 23 c1	 and	 rax, rcx
  01156	b9 08 00 00 00	 mov	 ecx, 8
  0115b	48 6b c9 00	 imul	 rcx, rcx, 0
  0115f	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  01166	48 89 04 0a	 mov	 QWORD PTR [rdx+rcx], rax

; 140  :             u += 1;

  0116a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  01171	48 83 c0 08	 add	 rax, 8
  01175	48 89 85 00 01
	00 00		 mov	 QWORD PTR u$[rbp], rax

; 141  :             v += 1;

  0117c	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  01183	48 83 c0 08	 add	 rax, 8
  01187	48 89 85 08 01
	00 00		 mov	 QWORD PTR v$[rbp], rax

; 142  :             w += 1;

  0118e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR w$[rbp]
  01195	48 83 c0 08	 add	 rax, 8
  01199	48 89 85 10 01
	00 00		 mov	 QWORD PTR w$[rbp], rax
$LN8@BitwiseAnd:

; 143  :         }
; 144  :     }

  011a0	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  011a7	5f		 pop	 rdi
  011a8	5d		 pop	 rbp
  011a9	c3		 ret	 0
?BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K00_K@Z ENDP ; Palmtree::Math::Core::Internal::BitwiseAnd_X_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _MINIMUM_UNIT
_TEXT	SEGMENT
tv65 = 192
x$ = 240
y$ = 248
_MINIMUM_UNIT PROC					; COMDAT

; 171  :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 172  :             return (x <= y ? x : y);

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR y$[rbp]
  00042	48 39 85 f0 00
	00 00		 cmp	 QWORD PTR x$[rbp], rax
  00049	77 10		 ja	 SHORT $LN3@MINIMUM_UN
  0004b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00052	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
  00059	eb 0e		 jmp	 SHORT $LN4@MINIMUM_UN
$LN3@MINIMUM_UN:
  0005b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR y$[rbp]
  00062	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
$LN4@MINIMUM_UN:
  00069	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv65[rbp]

; 173  :         }

  00070	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00077	5f		 pop	 rdi
  00078	5d		 pop	 rbp
  00079	c3		 ret	 0
_MINIMUM_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _DIVIDE_CEILING_UNIT
_TEXT	SEGMENT
u$ = 224
v$ = 232
_DIVIDE_CEILING_UNIT PROC				; COMDAT

; 156  :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 157  :             return ((u + v - 1) / v);

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  00049	48 8d 44 08 ff	 lea	 rax, QWORD PTR [rax+rcx-1]
  0004e	33 d2		 xor	 edx, edx
  00050	48 f7 b5 e8 00
	00 00		 div	 QWORD PTR v$[rbp]

; 158  :         }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
_DIVIDE_CEILING_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _FROMDWORDTOWORD
_TEXT	SEGMENT
value$ = 224
result_high$ = 232
_FROMDWORDTOWORD PROC					; COMDAT

; 145  :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR value$[rbp]
  00042	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  00046	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR result_high$[rbp]
  0004d	89 01		 mov	 DWORD PTR [rcx], eax

; 147  :             return ((_UINT32_T)value);

  0004f	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR value$[rbp]

; 148  :         }

  00055	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
_FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _FROMWORDTODWORD
_TEXT	SEGMENT
value_high$ = 224
value_low$ = 232
_FROMWORDTODWORD PROC					; COMDAT

; 140  :         {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	55		 push	 rbp
  00009	57		 push	 rdi
  0000a	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR [rsp+264]
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00033	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00038	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR value_high$[rbp]
  0003e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00042	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR value_low$[rbp]
  00048	48 0b c1	 or	 rax, rcx

; 142  :         }

  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
_FROMWORDTODWORD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_bitwiseand.cpp
;	COMDAT ?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
_TEXT	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
nw$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X, COMDAT

; 322  :     {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 68 02
	00 00		 sub	 rsp, 616		; 00000268H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 9a 00 00 00	 mov	 ecx, 154		; 0000009aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 88
	02 00 00	 mov	 rcx, QWORD PTR [rsp+648]
  0002f	48 c7 85 28 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__59184A5E_pmc_bitwiseand@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 323  :         if (u == nullptr)

  00046	48 83 bd 60 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  0004e	75 2d		 jne	 SHORT $LN2@PMC_Bitwis

; 324  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00050	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00057	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0005e	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00065	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00071	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00078	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Bitwis:

; 325  :         if (v == nullptr)

  0007d	48 83 bd 68 02
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00085	75 2d		 jne	 SHORT $LN3@PMC_Bitwis

; 326  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00087	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00095	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  0009c	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a8	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000af	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Bitwis:

; 327  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  000b4	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000bb	48 89 45 08	 mov	 QWORD PTR nu$[rbp], rax

; 328  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  000bf	48 8b 85 68 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000c6	48 89 45 28	 mov	 QWORD PTR nv$[rbp], rax

; 329  :         CheckNumber(nu);

  000ca	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000ce	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 330  :         CheckNumber(nv);

  000d3	48 8b 4d 28	 mov	 rcx, QWORD PTR nv$[rbp]
  000d7	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 331  :         ResourceHolderUINT root;

  000dc	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  000e0	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000e5	90		 npad	 1

; 332  :         NUMBER_HEADER* nw = PMC_BitwiseAnd_X_X_Imp(nu, nv);

  000e6	48 8b 55 28	 mov	 rdx, QWORD PTR nv$[rbp]
  000ea	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000ee	e8 00 00 00 00	 call	 ?PMC_BitwiseAnd_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X_Imp
  000f3	48 89 85 88 00
	00 00		 mov	 QWORD PTR nw$[rbp], rax

; 333  :         root.HookNumber(nw);

  000fa	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR nw$[rbp]
  00101	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00105	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 334  : #ifdef _DEBUG
; 335  :         CheckNumber(nw);

  0010a	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR nw$[rbp]
  00111	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 336  : #endif
; 337  :         root.UnlinkNumber(nw);

  00116	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR nw$[rbp]
  0011d	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00121	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 338  :         return ((PMC_HANDLE_UINT)nw);

  00126	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR nw$[rbp]
  0012d	48 89 85 08 02
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00134	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00138	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0013d	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 339  :     }

  00144	48 8b f8	 mov	 rdi, rax
  00147	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z$rtcFrameData
  00152	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00157	48 8b c7	 mov	 rax, rdi
  0015a	48 8d a5 48 02
	00 00		 lea	 rsp, QWORD PTR [rbp+584]
  00161	5f		 pop	 rdi
  00162	5d		 pop	 rbp
  00163	c3		 ret	 0
$LN6@PMC_Bitwis:
?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
nw$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
nu$ = 8
nv$ = 40
root$ = 72
nw$ = 136
$T4 = 360
$T5 = 440
$T6 = 520
$T7 = 552
u$ = 608
v$ = 616
?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_bitwiseand.cpp
;	COMDAT ?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z
_TEXT	SEGMENT
nu$ = 8
v_hi$4 = 36
v_lo$5 = 68
w_hi$6 = 100
w_lo$7 = 132
$T8 = 360
$T9 = 440
tv92 = 504
u$ = 544
v$ = 552
?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L, COMDAT

; 251  :     {

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__59184A5E_pmc_bitwiseand@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 252  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)

  0003b	33 c0		 xor	 eax, eax
  0003d	85 c0		 test	 eax, eax
  0003f	74 2d		 je	 SHORT $LN2@PMC_Bitwis

; 253  :         {
; 254  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 255  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_bitwiseand.cpp;PMC_BitwiseAnd_X_L;1");

  00041	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FA@HPONDLBD@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0004f	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  00056	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0005b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00062	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  00069	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Bitwis:

; 256  :         }
; 257  :         if (u == nullptr)

  0006e	48 83 bd 20 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  00076	75 2d		 jne	 SHORT $LN3@PMC_Bitwis

; 258  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00078	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0007f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00086	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0008d	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00092	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00099	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000a0	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Bitwis:

; 259  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  000a5	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000ac	48 89 45 08	 mov	 QWORD PTR nu$[rbp], rax

; 260  :         CheckNumber(nu);

  000b0	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000b4	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 261  :         if (nu->IS_ZERO)

  000b9	48 8b 45 08	 mov	 rax, QWORD PTR nu$[rbp]
  000bd	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000c0	83 e0 01	 and	 eax, 1
  000c3	85 c0		 test	 eax, eax
  000c5	74 0c		 je	 SHORT $LN4@PMC_Bitwis

; 262  :         {
; 263  :             // u が 0 である場合
; 264  :             return (0);

  000c7	33 c0		 xor	 eax, eax
  000c9	e9 cd 00 00 00	 jmp	 $LN1@PMC_Bitwis
  000ce	e9 c8 00 00 00	 jmp	 $LN5@PMC_Bitwis
$LN4@PMC_Bitwis:

; 265  :         }
; 266  :         else if (v == 0)

  000d3	48 83 bd 28 02
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  000db	75 0c		 jne	 SHORT $LN6@PMC_Bitwis

; 267  :         {
; 268  :             // v が 0 である場合
; 269  :             return (0);

  000dd	33 c0		 xor	 eax, eax
  000df	e9 b7 00 00 00	 jmp	 $LN1@PMC_Bitwis

; 270  :         }
; 271  :         else

  000e4	e9 b2 00 00 00	 jmp	 $LN7@PMC_Bitwis
$LN6@PMC_Bitwis:

; 272  :         {
; 273  :             // u と v がともに 0 ではない場合
; 274  : 
; 275  :             // x と y の bit AND を計算する
; 276  :             if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  000e9	33 c0		 xor	 eax, eax
  000eb	85 c0		 test	 eax, eax
  000ed	0f 84 89 00 00
	00		 je	 $LN8@PMC_Bitwis

; 277  :             {
; 278  :                 // _UINT64_T が 1 ワードで表現しきれない場合
; 279  : 
; 280  :                 _UINT32_T v_hi;
; 281  :                 _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);

  000f3	48 8d 55 24	 lea	 rdx, QWORD PTR v_hi$4[rbp]
  000f7	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  000fe	e8 00 00 00 00	 call	 _FROMDWORDTOWORD
  00103	89 45 44	 mov	 DWORD PTR v_lo$5[rbp], eax

; 282  :                 _UINT32_T w_hi = nu->UNIT_WORD_COUNT > 1 ? nu->BLOCK[1] & v_hi : 0;

  00106	48 8b 45 08	 mov	 rax, QWORD PTR nu$[rbp]
  0010a	48 83 78 18 01	 cmp	 QWORD PTR [rax+24], 1
  0010f	76 24		 jbe	 SHORT $LN11@PMC_Bitwis
  00111	b8 08 00 00 00	 mov	 eax, 8
  00116	48 6b c0 01	 imul	 rax, rax, 1
  0011a	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  0011e	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00122	8b 55 24	 mov	 edx, DWORD PTR v_hi$4[rbp]
  00125	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00129	48 23 c2	 and	 rax, rdx
  0012c	48 89 85 f8 01
	00 00		 mov	 QWORD PTR tv92[rbp], rax
  00133	eb 0b		 jmp	 SHORT $LN12@PMC_Bitwis
$LN11@PMC_Bitwis:
  00135	48 c7 85 f8 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv92[rbp], 0
$LN12@PMC_Bitwis:
  00140	8b 85 f8 01 00
	00		 mov	 eax, DWORD PTR tv92[rbp]
  00146	89 45 64	 mov	 DWORD PTR w_hi$6[rbp], eax

; 283  :                 _UINT32_T w_lo = nu->BLOCK[0] & v_lo;

  00149	b8 08 00 00 00	 mov	 eax, 8
  0014e	48 6b c0 00	 imul	 rax, rax, 0
  00152	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  00156	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0015a	8b 55 44	 mov	 edx, DWORD PTR v_lo$5[rbp]
  0015d	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00161	48 23 c2	 and	 rax, rdx
  00164	89 85 84 00 00
	00		 mov	 DWORD PTR w_lo$7[rbp], eax

; 284  :                 return (_FROMWORDTODWORD(w_hi, w_lo));

  0016a	8b 95 84 00 00
	00		 mov	 edx, DWORD PTR w_lo$7[rbp]
  00170	8b 4d 64	 mov	 ecx, DWORD PTR w_hi$6[rbp]
  00173	e8 00 00 00 00	 call	 _FROMWORDTODWORD
  00178	eb 21		 jmp	 SHORT $LN1@PMC_Bitwis

; 285  :             }
; 286  :             else

  0017a	eb 1f		 jmp	 SHORT $LN9@PMC_Bitwis
$LN8@PMC_Bitwis:

; 287  :             {
; 288  :                 // _UINT64_T が 1 ワードで表現できる場合
; 289  :                 return (nu->BLOCK[0] & v);

  0017c	b8 08 00 00 00	 mov	 eax, 8
  00181	48 6b c0 00	 imul	 rax, rax, 0
  00185	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  00189	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0018d	48 8b 95 28 02
	00 00		 mov	 rdx, QWORD PTR v$[rbp]
  00194	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00198	48 23 c2	 and	 rax, rdx
$LN9@PMC_Bitwis:
$LN7@PMC_Bitwis:
$LN5@PMC_Bitwis:
$LN1@PMC_Bitwis:
$LN10@PMC_Bitwis:

; 290  :             }
; 291  :         }
; 292  :     }

  0019b	48 8b f8	 mov	 rdi, rax
  0019e	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z$rtcFrameData
  001a9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ae	48 8b c7	 mov	 rax, rdi
  001b1	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  001b8	5f		 pop	 rdi
  001b9	5d		 pop	 rbp
  001ba	c3		 ret	 0
?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_bitwiseand.cpp
;	COMDAT ?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z
_TEXT	SEGMENT
nu$ = 8
$T1 = 232
$T2 = 312
u$ = 416
v$ = 424
?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_I, COMDAT

; 177  :     {

$LN9:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__59184A5E_pmc_bitwiseand@cpp
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 178  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)

  0003a	33 c0		 xor	 eax, eax
  0003c	85 c0		 test	 eax, eax
  0003e	74 2d		 je	 SHORT $LN2@PMC_Bitwis

; 179  :         {
; 180  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 181  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_bitwiseand.cpp;PMC_BitwiseAnd_X_I;1");

  00040	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FA@DHANDFHH@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@
  00047	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0004e	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00055	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0005a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00061	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00068	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Bitwis:

; 182  :         }
; 183  :         if (u == nullptr)

  0006d	48 83 bd a0 01
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  00075	75 2d		 jne	 SHORT $LN3@PMC_Bitwis

; 184  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00077	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  0007e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00085	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0008c	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00091	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00098	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0009f	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Bitwis:

; 185  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;

  000a4	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  000ab	48 89 45 08	 mov	 QWORD PTR nu$[rbp], rax

; 186  :         CheckNumber(nu);

  000af	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000b3	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 187  :         if (nu->IS_ZERO)

  000b8	48 8b 45 08	 mov	 rax, QWORD PTR nu$[rbp]
  000bc	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000bf	83 e0 01	 and	 eax, 1
  000c2	85 c0		 test	 eax, eax
  000c4	74 06		 je	 SHORT $LN4@PMC_Bitwis

; 188  :         {
; 189  :             // u が 0 である場合
; 190  :             return (0);

  000c6	33 c0		 xor	 eax, eax
  000c8	eb 2f		 jmp	 SHORT $LN1@PMC_Bitwis
  000ca	eb 2d		 jmp	 SHORT $LN5@PMC_Bitwis
$LN4@PMC_Bitwis:

; 191  :         }
; 192  :         else  if (v == 0)

  000cc	83 bd a8 01 00
	00 00		 cmp	 DWORD PTR v$[rbp], 0
  000d3	75 06		 jne	 SHORT $LN6@PMC_Bitwis

; 193  :         {
; 194  :             // v が 0 である場合
; 195  :             return (0);

  000d5	33 c0		 xor	 eax, eax
  000d7	eb 20		 jmp	 SHORT $LN1@PMC_Bitwis

; 196  :         }
; 197  :         else

  000d9	eb 1e		 jmp	 SHORT $LN7@PMC_Bitwis
$LN6@PMC_Bitwis:

; 198  :         {
; 199  :             // u と v がともに 0 ではない場合
; 200  : 
; 201  :             // u と v の bit AND を計算する
; 202  :             return (nu->BLOCK[0] & v);

  000db	b8 08 00 00 00	 mov	 eax, 8
  000e0	48 6b c0 00	 imul	 rax, rax, 0
  000e4	48 8b 4d 08	 mov	 rcx, QWORD PTR nu$[rbp]
  000e8	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  000ec	8b 95 a8 01 00
	00		 mov	 edx, DWORD PTR v$[rbp]
  000f2	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  000f6	48 23 c2	 and	 rax, rdx
$LN7@PMC_Bitwis:
$LN5@PMC_Bitwis:
$LN1@PMC_Bitwis:
$LN8@PMC_Bitwis:

; 203  :         }
; 204  :     }

  000f9	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00100	5f		 pop	 rdi
  00101	5d		 pop	 rbp
  00102	c3		 ret	 0
?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_I
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_bitwiseand.cpp
;	COMDAT ?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z
_TEXT	SEGMENT
nv$ = 8
u_hi$4 = 36
u_lo$5 = 68
w_hi$6 = 100
w_lo$7 = 132
$T8 = 360
$T9 = 440
tv92 = 504
u$ = 544
v$ = 552
?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X, COMDAT

; 207  :     {

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__59184A5E_pmc_bitwiseand@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 208  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)

  0003b	33 c0		 xor	 eax, eax
  0003d	85 c0		 test	 eax, eax
  0003f	74 2d		 je	 SHORT $LN2@PMC_Bitwis

; 209  :         {
; 210  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 211  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_bitwiseand.cpp;PMC_BitwiseAnd_L_X;1");

  00041	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FA@IIACNCEB@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0004f	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  00056	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0005b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00062	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  00069	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Bitwis:

; 212  :         }
; 213  :         if (v == nullptr)

  0006e	48 83 bd 28 02
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00076	75 2d		 jne	 SHORT $LN3@PMC_Bitwis

; 214  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00078	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0007f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00086	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0008d	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00092	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00099	48 8d 8d b8 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000a0	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Bitwis:

; 215  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  000a5	48 8b 85 28 02
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000ac	48 89 45 08	 mov	 QWORD PTR nv$[rbp], rax

; 216  :         CheckNumber(nv);

  000b0	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  000b4	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 217  :         if (nv->IS_ZERO)

  000b9	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  000bd	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000c0	83 e0 01	 and	 eax, 1
  000c3	85 c0		 test	 eax, eax
  000c5	74 0c		 je	 SHORT $LN4@PMC_Bitwis

; 218  :         {
; 219  :             // v が 0 である場合
; 220  :             return (0);

  000c7	33 c0		 xor	 eax, eax
  000c9	e9 cd 00 00 00	 jmp	 $LN1@PMC_Bitwis
  000ce	e9 c8 00 00 00	 jmp	 $LN5@PMC_Bitwis
$LN4@PMC_Bitwis:

; 221  :         }
; 222  :         else if (u == 0)

  000d3	48 83 bd 20 02
	00 00 00	 cmp	 QWORD PTR u$[rbp], 0
  000db	75 0c		 jne	 SHORT $LN6@PMC_Bitwis

; 223  :         {
; 224  :             // u が 0 である場合
; 225  :             return (0);

  000dd	33 c0		 xor	 eax, eax
  000df	e9 b7 00 00 00	 jmp	 $LN1@PMC_Bitwis

; 226  :         }
; 227  :         else

  000e4	e9 b2 00 00 00	 jmp	 $LN7@PMC_Bitwis
$LN6@PMC_Bitwis:

; 228  :         {
; 229  :             // u と v がともに 0 ではない場合
; 230  : 
; 231  :             // x と y の bit AND を計算する
; 232  :             if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)

  000e9	33 c0		 xor	 eax, eax
  000eb	85 c0		 test	 eax, eax
  000ed	0f 84 89 00 00
	00		 je	 $LN8@PMC_Bitwis

; 233  :             {
; 234  :                 // _UINT64_T が 1 ワードで表現しきれない場合
; 235  : 
; 236  :                 _UINT32_T u_hi;
; 237  :                 _UINT32_T u_lo = _FROMDWORDTOWORD(u, &u_hi);

  000f3	48 8d 55 24	 lea	 rdx, QWORD PTR u_hi$4[rbp]
  000f7	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR u$[rbp]
  000fe	e8 00 00 00 00	 call	 _FROMDWORDTOWORD
  00103	89 45 44	 mov	 DWORD PTR u_lo$5[rbp], eax

; 238  :                 _UINT32_T w_hi = nv->UNIT_WORD_COUNT > 1 ? nv->BLOCK[1] & u_hi : 0;

  00106	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  0010a	48 83 78 18 01	 cmp	 QWORD PTR [rax+24], 1
  0010f	76 24		 jbe	 SHORT $LN11@PMC_Bitwis
  00111	b8 08 00 00 00	 mov	 eax, 8
  00116	48 6b c0 01	 imul	 rax, rax, 1
  0011a	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  0011e	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00122	8b 55 24	 mov	 edx, DWORD PTR u_hi$4[rbp]
  00125	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00129	48 23 c2	 and	 rax, rdx
  0012c	48 89 85 f8 01
	00 00		 mov	 QWORD PTR tv92[rbp], rax
  00133	eb 0b		 jmp	 SHORT $LN12@PMC_Bitwis
$LN11@PMC_Bitwis:
  00135	48 c7 85 f8 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv92[rbp], 0
$LN12@PMC_Bitwis:
  00140	8b 85 f8 01 00
	00		 mov	 eax, DWORD PTR tv92[rbp]
  00146	89 45 64	 mov	 DWORD PTR w_hi$6[rbp], eax

; 239  :                 _UINT32_T w_lo = nv->BLOCK[0] & u_lo;

  00149	b8 08 00 00 00	 mov	 eax, 8
  0014e	48 6b c0 00	 imul	 rax, rax, 0
  00152	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  00156	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0015a	8b 55 44	 mov	 edx, DWORD PTR u_lo$5[rbp]
  0015d	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00161	48 23 c2	 and	 rax, rdx
  00164	89 85 84 00 00
	00		 mov	 DWORD PTR w_lo$7[rbp], eax

; 240  :                 return (_FROMWORDTODWORD(w_hi, w_lo));

  0016a	8b 95 84 00 00
	00		 mov	 edx, DWORD PTR w_lo$7[rbp]
  00170	8b 4d 64	 mov	 ecx, DWORD PTR w_hi$6[rbp]
  00173	e8 00 00 00 00	 call	 _FROMWORDTODWORD
  00178	eb 21		 jmp	 SHORT $LN1@PMC_Bitwis

; 241  :             }
; 242  :             else

  0017a	eb 1f		 jmp	 SHORT $LN9@PMC_Bitwis
$LN8@PMC_Bitwis:

; 243  :             {
; 244  :                 // _UINT64_T が 1 ワードで表現できる場合
; 245  :                 return (nv->BLOCK[0] & u);

  0017c	b8 08 00 00 00	 mov	 eax, 8
  00181	48 6b c0 00	 imul	 rax, rax, 0
  00185	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  00189	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0018d	48 8b 95 20 02
	00 00		 mov	 rdx, QWORD PTR u$[rbp]
  00194	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00198	48 23 c2	 and	 rax, rdx
$LN9@PMC_Bitwis:
$LN7@PMC_Bitwis:
$LN5@PMC_Bitwis:
$LN1@PMC_Bitwis:
$LN10@PMC_Bitwis:

; 246  :             }
; 247  :         }
; 248  :     }

  0019b	48 8b f8	 mov	 rdi, rax
  0019e	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z$rtcFrameData
  001a9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ae	48 8b c7	 mov	 rax, rdi
  001b1	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  001b8	5f		 pop	 rdi
  001b9	5d		 pop	 rbp
  001ba	c3		 ret	 0
?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_bitwiseand.cpp
;	COMDAT ?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z
_TEXT	SEGMENT
nv$ = 8
$T1 = 232
$T2 = 312
u$ = 416
v$ = 424
?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_I_X, COMDAT

; 147  :     {

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	8b 8c 24 c8 01
	00 00		 mov	 ecx, DWORD PTR [rsp+456]
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__59184A5E_pmc_bitwiseand@cpp
  00034	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 148  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)

  00039	33 c0		 xor	 eax, eax
  0003b	85 c0		 test	 eax, eax
  0003d	74 2d		 je	 SHORT $LN2@PMC_Bitwis

; 149  :         {
; 150  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 151  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_bitwiseand.cpp;PMC_BitwiseAnd_I_X;1");

  0003f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FA@BAKBKFFB@?$AAp?$AAm?$AAc?$AA_?$AAb?$AAi?$AAt?$AAw?$AAi?$AAs?$AAe?$AAa?$AAn?$AAd?$AA?4@
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  0004d	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00054	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00059	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00060	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00067	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_Bitwis:

; 152  :         }
; 153  :         if (v == nullptr)

  0006c	48 83 bd a8 01
	00 00 00	 cmp	 QWORD PTR v$[rbp], 0
  00074	75 2d		 jne	 SHORT $LN3@PMC_Bitwis

; 154  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00084	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0008b	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00090	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00097	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0009e	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@PMC_Bitwis:

; 155  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;

  000a3	48 8b 85 a8 01
	00 00		 mov	 rax, QWORD PTR v$[rbp]
  000aa	48 89 45 08	 mov	 QWORD PTR nv$[rbp], rax

; 156  :         CheckNumber(nv);

  000ae	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  000b2	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 157  :         if (nv->IS_ZERO)

  000b7	48 8b 45 08	 mov	 rax, QWORD PTR nv$[rbp]
  000bb	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000be	83 e0 01	 and	 eax, 1
  000c1	85 c0		 test	 eax, eax
  000c3	74 06		 je	 SHORT $LN4@PMC_Bitwis

; 158  :         {
; 159  :             // v が 0 である場合
; 160  :             return (0);

  000c5	33 c0		 xor	 eax, eax
  000c7	eb 2f		 jmp	 SHORT $LN1@PMC_Bitwis
  000c9	eb 2d		 jmp	 SHORT $LN5@PMC_Bitwis
$LN4@PMC_Bitwis:

; 161  :         }
; 162  :         else if (u == 0)

  000cb	83 bd a0 01 00
	00 00		 cmp	 DWORD PTR u$[rbp], 0
  000d2	75 06		 jne	 SHORT $LN6@PMC_Bitwis

; 163  :         {
; 164  :             // u が 0 である場合
; 165  :             return (0);

  000d4	33 c0		 xor	 eax, eax
  000d6	eb 20		 jmp	 SHORT $LN1@PMC_Bitwis

; 166  :         }
; 167  :         else

  000d8	eb 1e		 jmp	 SHORT $LN7@PMC_Bitwis
$LN6@PMC_Bitwis:

; 168  :         {
; 169  :             // u と v がともに 0 ではない場合
; 170  : 
; 171  :             // u と v の bit AND を計算する
; 172  :             return (nv->BLOCK[0] & u);

  000da	b8 08 00 00 00	 mov	 eax, 8
  000df	48 6b c0 00	 imul	 rax, rax, 0
  000e3	48 8b 4d 08	 mov	 rcx, QWORD PTR nv$[rbp]
  000e7	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  000eb	8b 95 a0 01 00
	00		 mov	 edx, DWORD PTR u$[rbp]
  000f1	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  000f5	48 23 c2	 and	 rax, rdx
$LN7@PMC_Bitwis:
$LN5@PMC_Bitwis:
$LN1@PMC_Bitwis:
$LN8@PMC_Bitwis:

; 173  :         }
; 174  :     }

  000f8	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  000ff	5f		 pop	 rdi
  00100	5d		 pop	 rbp
  00101	c3		 ret	 0
?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_I_X
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_bitwiseand.cpp
;	COMDAT ?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 224
?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_BitwiseAnd, COMDAT

; 342  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__59184A5E_pmc_bitwiseand@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 343  :         return (PMC_STATUS_OK);

  00036	33 c0		 xor	 eax, eax

; 344  :     }

  00038	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003f	5f		 pop	 rdi
  00040	5d		 pop	 rbp
  00041	c3		 ret	 0
?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_BitwiseAnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT

; 295  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 296  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 291  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 290  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 291  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 292  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 286  :         {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004b	90		 npad	 1

; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  0004c	4c 8b 8d 10 01
	00 00		 mov	 r9, QWORD PTR data$[rbp]
  00053	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0005a	ba 00 ff ff ff	 mov	 edx, -256		; ffffffffffffff00H
  0005f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0006b	90		 npad	 1

; 286  :         {

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  0007a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 287  :         }

  0007d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT

; 124  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 125  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 120  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 119  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 120  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 121  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 115  :         {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004b	90		 npad	 1

; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  0004c	4c 8b 8d 10 01
	00 00		 mov	 r9, QWORD PTR param_name$[rbp]
  00053	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0005a	ba fe ff ff ff	 mov	 edx, -2
  0005f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0006b	90		 npad	 1

; 115  :         {

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  0007a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 116  :         }

  0007d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT

; 70   :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 62   :         Exception(const Exception& p) noexcept(true)

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  00053	90		 npad	 1
  00054	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 63   :         {
; 64   :             _code = p._code;

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00073	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  00076	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 65   :             _message = p._message;

  00079	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00080	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00087	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  0008b	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 66   :             _data = p._data;

  0008f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  0009d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  000a1	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 67   :         }

  000a5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00038	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0004a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004f	90		 npad	 1
  00050	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  0005c	90		 npad	 1
  0005d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 55   :         {
; 56   :             _code = code;

  0006e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	8b 8d 08 01 00
	00		 mov	 ecx, DWORD PTR code$[rbp]
  0007b	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 57   :             _message = message;

  0007e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00085	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR message$[rbp]
  0008c	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 58   :             _data = data;

  00090	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00097	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR data$[rbp]
  0009e	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 59   :         }

  000a2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a9	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b0	5f		 pop	 rdi
  000b1	5d		 pop	 rbp
  000b2	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 90   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00042	74 14		 je	 SHORT $LN3@what
  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00056	eb 0e		 jmp	 SHORT $LN4@what
$LN3@what:
  00058	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0005f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  00066	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 92   :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 86   :         __std_exception_destroy(&_Data);

  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 __std_exception_destroy
  00066	90		 npad	 1

; 87   :     }

  00067	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0exception@std@@QEAA@XZ PROC				; std::exception::exception, COMDAT

; 50   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 49   :         : _Data()

  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b f8	 mov	 rdi, rax
  00061	33 c0		 xor	 eax, eax
  00063	b9 10 00 00 00	 mov	 ecx, 16
  00068	f3 aa		 rep stosb

; 51   :     }

  0006a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??0exception@std@@QEAA@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
