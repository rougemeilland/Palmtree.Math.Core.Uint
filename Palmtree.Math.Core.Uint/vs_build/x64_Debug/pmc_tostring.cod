; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__188180DA_corecrt_math@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__77F53984_cstddef DB 01H
__D23EE329_cstdlib DB 01H
__5ECFF36E_type_traits DB 01H
__331E732B_malloc@h DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__7949CB39_exception DB 01H
__802FEEC0_pmc_exception@h DB 01H
__80E6779E_pmc_stringio@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__1AB12E38_pmc_resourceholder@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__4F90649E_pmc_tostring@cpp DB 01H
msvcjmc	ENDS
PUBLIC	??0exception@std@@QEAA@XZ			; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::FormatException::FormatException
PUBLIC	??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::FormatException::FormatException
PUBLIC	??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::FormatException::~FormatException
PUBLIC	??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor'
PUBLIC	??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
PUBLIC	??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
PUBLIC	??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException
PUBLIC	??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor'
PUBLIC	??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
PUBLIC	??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
PUBLIC	??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException
PUBLIC	??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::StringReader::StringReader
PUBLIC	?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ ; Palmtree::Math::Core::Internal::StringReader::ReadChar
PUBLIC	?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z ; Palmtree::Math::Core::Internal::StringReader::ReadChar
PUBLIC	?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ; Palmtree::Math::Core::Internal::StringReader::PeekChar
PUBLIC	?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ ; Palmtree::Math::Core::Internal::StringReader::Progress
PUBLIC	?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z ; Palmtree::Math::Core::Internal::StringReader::StartsWith
PUBLIC	?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::StringReader::SkipString
PUBLIC	?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z ; Palmtree::Math::Core::Internal::StringReader::StartsWith
PUBLIC	??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::ReverseStringReader
PUBLIC	?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar
PUBLIC	?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ ; Palmtree::Math::Core::Internal::ReverseStringReader::Progress
PUBLIC	?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith
PUBLIC	?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::SkipString
PUBLIC	?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith
PUBLIC	??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter
PUBLIC	??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter
PUBLIC	?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
PUBLIC	?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
PUBLIC	?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
PUBLIC	?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::StringWriter::GetString
PUBLIC	?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength
PUBLIC	??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter
PUBLIC	?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write
PUBLIC	?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write
PUBLIC	?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::ReverseStringWriter::GetString
PUBLIC	?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo
PUBLIC	?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_ToString
PUBLIC	?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo
PUBLIC	?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ; Palmtree::Math::Core::Internal::PMC_ToString
PUBLIC	??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::ThousandSeparatedStringWriter
PUBLIC	?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
PUBLIC	?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
PUBLIC	?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString
PUBLIC	??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter
PUBLIC	?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format
PUBLIC	?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
PUBLIC	?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber
PUBLIC	?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence
PUBLIC	?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord
PUBLIC	?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord
PUBLIC	?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit
PUBLIC	??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatterTypeC
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteZeroValue
PUBLIC	?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteSuffix
PUBLIC	??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatterTypeD
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteZeroValue
PUBLIC	?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteSuffix
PUBLIC	??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatterTypeE
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteZeroValue
PUBLIC	?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally
PUBLIC	?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteSuffix
PUBLIC	??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatterTypeF
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteZeroValue
PUBLIC	?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteSuffix
PUBLIC	??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatterTypeN
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteZeroValue
PUBLIC	?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteSuffix
PUBLIC	??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatterTypeP
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteZeroValue
PUBLIC	?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally
PUBLIC	?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteSuffix
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7FormatException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::FormatException::`vftable'
PUBLIC	??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InsufficientBufferException::`vftable'
PUBLIC	??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotSupportedException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	??_7StringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringReader::`vftable'
PUBLIC	_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1FA@CNGEABBJ@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ ; `string'
PUBLIC	??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ ; `string'
PUBLIC	??_C@_1FE@KONPIGEM@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ ; `string'
PUBLIC	??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringReader::`vftable'
PUBLIC	??_C@_1FO@BNHGDLLE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ ; `string'
PUBLIC	??_C@_1GC@GGAPGHKN@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ ; `string'
PUBLIC	??_7StringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringWriter::`vftable'
PUBLIC	_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@ ; `string'
PUBLIC	??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringWriter::`vftable'
PUBLIC	??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ ; `string'
PUBLIC	??_7ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`vftable'
PUBLIC	??_7Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`vftable'
PUBLIC	??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`vftable'
PUBLIC	??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`vftable'
PUBLIC	??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`vftable'
PUBLIC	??_C@_19NKFEMDNP@?$AA?$CL?$AA0?$AA0?$AA0@	; `string'
PUBLIC	??_C@_19GGGBJDH@?$AA?$CF?$AA0?$AA3?$AAd@	; `string'
PUBLIC	??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`vftable'
PUBLIC	??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`vftable'
PUBLIC	??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`vftable'
PUBLIC	??_C@_1GE@NIEAHJGF@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	_TI2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::NotSupportedException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1DO@MFGCBHKN@?$PP?$KL?$PP?$LJ?$PP?$LP?$PP?$OA?$PP?x?$AA?$AP?$AAk?$PP?$II?$PP?$IL?$AAT?$AAo?$AAS?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	_TI2?AVFormatException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVFormatException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::FormatException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1BI@BIIKHCEK@?$AA?$CK?$PP?e?$AAn?$PP?x?$AA?$AP?$AA?$AH?$PP?$JK?$AAP?$AAg?$AAY?$AA?$AC@ ; `string'
PUBLIC	_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_13HADAKIJA@?$AAx@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_13JOFGPIOO@?$AA?4@			; `string'
PUBLIC	??_C@_13DEFPDAGF@?$AA?0@			; `string'
PUBLIC	??_C@_13DMCFHHKM@?$AA3@				; `string'
PUBLIC	??_C@_13BMLCKOLB@?$PP?$KE@			; `string'
PUBLIC	??_C@_13IMODFHAA@?$AA?9@			; `string'
PUBLIC	??_C@_13EJFHHPOP@?$AA?$CF@			; `string'
PUBLIC	??_C@_13BGNNJOKC@?$AA0@				; `string'
PUBLIC	??_C@_13KJIIAINM@?$AA?$CL@			; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::FormatException::`RTTI Complete Object Locator'
PUBLIC	??_R3FormatException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InsufficientBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InsufficientBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Complete Object Locator'
PUBLIC	??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NotSupportedException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NotSupportedException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4StringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringReader::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::StringReader `RTTI Type Descriptor'
PUBLIC	??_R3StringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader `RTTI Type Descriptor'
PUBLIC	??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReverseStringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReverseStringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::StringWriter `RTTI Type Descriptor'
PUBLIC	??_R3StringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter `RTTI Type Descriptor'
PUBLIC	??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReverseStringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReverseStringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter `RTTI Type Descriptor'
PUBLIC	??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter `RTTI Type Descriptor'
PUBLIC	??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_purecall:PROC
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp_lstrcpyW:PROC
EXTRN	__imp_lstrlenW:PROC
EXTRN	__imp_wsprintfW:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::FormatException::`vector deleting destructor'
EXTRN	??_EInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::`vector deleting destructor'
EXTRN	??_ENotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::NotSupportedException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::From_I_Imp
EXTRN	?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z:PROC ; Palmtree::Math::Core::Internal::DivRem_X_1W
EXTRN	?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_X_Imp
EXTRN	?PMC_Pow_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Pow_X_L_Imp
EXTRN	?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
EXTRN	?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock
EXTRN	?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
EXTRN	?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
EXTRN	?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
EXTRN	?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_W@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	_DIVREM_UNIT:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A:BYTE ; Palmtree::Math::Core::Internal::statistics_info
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
?default_number_format_option@Internal@Core@Math@Palmtree@@3U__tag_PMC_NUMBER_FORMAT_INFO@1234@A DB 01e4H DUP (?) ; Palmtree::Math::Core::Internal::default_number_format_option
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??0exception@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+182
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+129
	DD	imagerel $unwind$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z DD imagerel $LN4
	DD	imagerel $LN4+133
	DD	imagerel $unwind$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+215
	DD	imagerel $unwind$?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z DD imagerel $LN6
	DD	imagerel $LN6+154
	DD	imagerel $unwind$?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+159
	DD	imagerel $unwind$?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+226
	DD	imagerel $unwind$?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z DD imagerel $LN7
	DD	imagerel $LN7+175
	DD	imagerel $unwind$?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z DD imagerel $LN5
	DD	imagerel $LN5+179
	DD	imagerel $unwind$??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD imagerel $LN5
	DD	imagerel $LN5+241
	DD	imagerel $unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z DD imagerel $LN5
	DD	imagerel $LN5+144
	DD	imagerel $unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+147
	DD	imagerel $unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z DD imagerel $LN7
	DD	imagerel $LN7+255
	DD	imagerel $unwind$??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD imagerel $LN4
	DD	imagerel $LN4+203
	DD	imagerel $unwind$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+167
	DD	imagerel $unwind$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z DD imagerel $LN3
	DD	imagerel $LN3+602
	DD	imagerel $unwind$?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z DD imagerel $LN7
	DD	imagerel $LN7+282
	DD	imagerel $unwind$?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ DD imagerel ?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ
	DD	imagerel ?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ+62
	DD	imagerel $unwind$?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ DD imagerel ?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ
	DD	imagerel ?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ+62
	DD	imagerel $unwind$?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z DD imagerel ?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
	DD	imagerel ?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z+78
	DD	imagerel $unwind$?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z DD imagerel ?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
	DD	imagerel ?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z+78
	DD	imagerel $unwind$?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_COPY_MEMORY_UNIT DD imagerel _COPY_MEMORY_UNIT
	DD	imagerel _COPY_MEMORY_UNIT+100
	DD	imagerel $unwind$_COPY_MEMORY_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_DIVIDE_CEILING_UNIT DD imagerel _DIVIDE_CEILING_UNIT
	DD	imagerel _DIVIDE_CEILING_UNIT+97
	DD	imagerel $unwind$_DIVIDE_CEILING_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ADD_UNIT DD imagerel _ADD_UNIT
	DD	imagerel _ADD_UNIT+118
	DD	imagerel $unwind$_ADD_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ROTATE_L_UNIT DD imagerel _ROTATE_L_UNIT
	DD	imagerel _ROTATE_L_UNIT+87
	DD	imagerel $unwind$_ROTATE_L_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
	DD	imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z+449
	DD	imagerel $unwind$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA DD imagerel ?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA
	DD	imagerel ?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
	DD	imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z+222
	DD	imagerel $unwind$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA DD imagerel ?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA
	DD	imagerel ?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD imagerel $LN9
	DD	imagerel $LN9+438
	DD	imagerel $unwind$??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD imagerel $LN8
	DD	imagerel $LN8+551
	DD	imagerel $unwind$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+161
	DD	imagerel $unwind$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel $LN8
	DD	imagerel $LN8+539
	DD	imagerel $unwind$?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+382
	DD	imagerel $unwind$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA DD imagerel ?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
	DD	imagerel ?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD imagerel $LN8
	DD	imagerel $LN8+502
	DD	imagerel $unwind$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA DD imagerel ?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA
	DD	imagerel ?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z DD imagerel $LN5
	DD	imagerel $LN5+236
	DD	imagerel $unwind$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z DD imagerel $LN8
	DD	imagerel $LN8+173
	DD	imagerel $unwind$?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z DD imagerel $LN15
	DD	imagerel $LN15+1234
	DD	imagerel $unwind$?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+201
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN30
	DD	imagerel $LN30+1540
	DD	imagerel $unwind$?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN7
	DD	imagerel $LN7+450
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA DD imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN30
	DD	imagerel $LN30+1536
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN5
	DD	imagerel $LN5+136
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+137
	DD	imagerel $unwind$?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN5
	DD	imagerel $LN5+210
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+286
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel $LN6
	DD	imagerel $LN6+323
	DD	imagerel $unwind$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA DD imagerel ?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
	DD	imagerel ?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+137
	DD	imagerel $unwind$?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN7
	DD	imagerel $LN7+536
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+201
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+137
	DD	imagerel $unwind$?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+208
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+201
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN12
	DD	imagerel $LN12+347
	DD	imagerel $unwind$?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN7
	DD	imagerel $LN7+450
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA DD imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN12
	DD	imagerel $LN12+337
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+201
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel $LN4
	DD	imagerel $LN4+178
	DD	imagerel $unwind$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA DD imagerel ?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
	DD	imagerel ?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN26
	DD	imagerel $LN26+1208
	DD	imagerel $unwind$?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN7
	DD	imagerel $LN7+450
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA DD imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN26
	DD	imagerel $LN26+1220
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+182
	DD	imagerel $unwind$?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+182
	DD	imagerel $unwind$?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+190
	DD	imagerel $unwind$?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+182
	DD	imagerel $unwind$?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+182
	DD	imagerel $unwind$?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+182
	DD	imagerel $unwind$?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z DD imagerel ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z
	DD	imagerel ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z+2657
	DD	imagerel $unwind$?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+1535
	DD	imagerel $unwind$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA DD imagerel ?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA
	DD	imagerel ?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+116
	DD	imagerel $unwind$?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z DD imagerel ?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z
	DD	imagerel ?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z+128
	DD	imagerel $unwind$?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z DD imagerel ?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z
	DD	imagerel ?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z+97
	DD	imagerel $unwind$?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z DD imagerel ?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z
	DD	imagerel ?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z+687
	DD	imagerel $unwind$?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z DD imagerel ?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
	DD	imagerel ?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z+1010
	DD	imagerel $unwind$?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtr'
	DB	'ee@@', 00H
data$r	ENDS
;	COMDAT ??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVThousandSeparatedStringWriter@DecimalFromatter@Inter'
	DB	'nal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReverseStringWriter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ReverseStringWriter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ReverseStringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReverseStringWriter@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2StringWriter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3StringWriter@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::StringWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::StringWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVStringWriter@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3StringWriter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReverseStringReader@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ReverseStringReader@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ReverseStringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReverseStringReader@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2StringReader@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3StringReader@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::StringReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::StringReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVStringReader@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4StringReader@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4StringReader@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::StringReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3StringReader@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4StringReader@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NotSupportedException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2NotSupportedException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@NotSupportedException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InsufficientBufferException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InsufficientBufferException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InsufficientBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::FormatException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4FormatException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::FormatException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 01H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_13KJIIAINM@?$AA?$CL@
CONST	SEGMENT
??_C@_13KJIIAINM@?$AA?$CL@ DB '+', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13BGNNJOKC@?$AA0@
CONST	SEGMENT
??_C@_13BGNNJOKC@?$AA0@ DB '0 ', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13EJFHHPOP@?$AA?$CF@
CONST	SEGMENT
??_C@_13EJFHHPOP@?$AA?$CF@ DB '%', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13IMODFHAA@?$AA?9@
CONST	SEGMENT
??_C@_13IMODFHAA@?$AA?9@ DB '-', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13BMLCKOLB@?$PP?$KE@
CONST	SEGMENT
??_C@_13BMLCKOLB@?$PP?$KE@ DB 0a4H, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13DMCFHHKM@?$AA3@
CONST	SEGMENT
??_C@_13DMCFHHKM@?$AA3@ DB '3', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13DEFPDAGF@?$AA?0@
CONST	SEGMENT
??_C@_13DEFPDAGF@?$AA?0@ DB ',', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13JOFGPIOO@?$AA?4@
CONST	SEGMENT
??_C@_13JOFGPIOO@?$AA?4@ DB '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13HADAKIJA@?$AAx@
CONST	SEGMENT
??_C@_13HADAKIJA@?$AAx@ DB 'x', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1BI@BIIKHCEK@?$AA?$CK?$PP?e?$AAn?$PP?x?$AA?$AP?$AA?$AH?$PP?$JK?$AAP?$AAg?$AAY?$AA?$AC@
CONST	SEGMENT
??_C@_1BI@BIIKHCEK@?$AA?$CK?$PP?e?$AAn?$PP?x?$AA?$AP?$AA?$AH?$PP?$JK?$AAP?$AAg?$AAY?$AA?$AC@ DB '*'
	DB	'g', 0e5H, 'wn0', 0f8H, 'f', 0fH, '_', 07H, 'c', 09aH, '[P[g0Y'
	DB	'0', 02H, '0', 00H, 00H			; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::FormatException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVFormatException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVFormatException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVFormatException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVFormatException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVFormatException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1DO@MFGCBHKN@?$PP?$KL?$PP?$LJ?$PP?$LP?$PP?$OA?$PP?x?$AA?$AP?$AAk?$PP?$II?$PP?$IL?$AAT?$AAo?$AAS?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1DO@MFGCBHKN@?$PP?$KL?$PP?$LJ?$PP?$LP?$PP?$OA?$PP?x?$AA?$AP?$AAk?$PP?$II?$PP?$IL?$AAT?$AAo?$AAS?$AAt?$AAr?$AAi@ DB 0abH
	DB	'0', 0b9H, '0', 0bfH, '0', 0e0H, '0', 0f8H, 'f', 0fH, '_k0', 088H
	DB	'0', 08bH, '0T', 00H, 'o', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 'o0', 0b5H, '0', 0ddH, '0', 0fcH, '0', 0c8H
	DB	'0U0', 08cH, '0f0D0~0[0', 093H, '0', 02H, '0', 00H, 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::NotSupportedException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVNotSupportedException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVNotSupportedException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVNotSupportedException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1GE@NIEAHJGF@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1GE@NIEAHJGF@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 't', 00H, 'o', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'p', 00H, 'u', 00H, 't', 00H, 'H', 00H, 'e', 00H, 'x', 00H, 'N'
	DB	00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e'
	DB	00H, 'O', 00H, 'n', 00H, 'e', 00H, 'W', 00H, 'o', 00H, 'r', 00H
	DB	'd', 00H, ';', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?hexadecimal_lower_digits@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@3PA_WA DB '0'
	DB	00H, '1', 00H, '2', 00H, '3', 00H, '4', 00H, '5', 00H, '6', 00H
	DB	'7', 00H, '8', 00H, '9', 00H, 'a', 00H, 'b', 00H, 'c', 00H, 'd'
	DB	00H, 'e', 00H, 'f', 00H, 00H, 00H		; Palmtree::Math::Core::Internal::HexaDecimalFormatter::hexadecimal_lower_digits
	ORG $+6
?hexadecimal_upper_digits@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@3PA_WA DB '0'
	DB	00H, '1', 00H, '2', 00H, '3', 00H, '4', 00H, '5', 00H, '6', 00H
	DB	'7', 00H, '8', 00H, '9', 00H, 'A', 00H, 'B', 00H, 'C', 00H, 'D'
	DB	00H, 'E', 00H, 'F', 00H, 00H, 00H		; Palmtree::Math::Core::Internal::HexaDecimalFormatter::hexadecimal_upper_digits
_DATA	ENDS
;	COMDAT ??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_C@_19GGGBJDH@?$AA?$CF?$AA0?$AA3?$AAd@
CONST	SEGMENT
??_C@_19GGGBJDH@?$AA?$CF?$AA0?$AA3?$AAd@ DB '%', 00H, '0', 00H, '3', 00H, 'd'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19NKFEMDNP@?$AA?$CL?$AA0?$AA0?$AA0@
CONST	SEGMENT
??_C@_19NKFEMDNP@?$AA?$CL?$AA0?$AA0?$AA0@ DB '+', 00H, '0', 00H, '0', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 't', 00H, 'o', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'F', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 't', 00H, 'e', 00H, 'r', 00H, ':'
	DB	00H, ':', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, ';', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`vftable'
	DQ	FLAT:_purecall
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_7ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`vftable'
	DQ	FLAT:?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
	DQ	FLAT:?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
	DQ	FLAT:?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
CONST	ENDS
;	COMDAT ??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
CONST	SEGMENT
??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ DB 088H
	DB	'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H, '0k00RT', 090H
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringWriter::`vftable'
	DQ	FLAT:?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
	DQ	FLAT:?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
	DQ	FLAT:?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
CONST	ENDS
;	COMDAT ??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
CONST	SEGMENT
??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@ DB 0f8H
	DB	'fM0', 0bcH, 08fH, 07fH, '0HQ', 0d0H, '0', 0c3H, '0', 0d5H, '0'
	DB	0a1H, '0n0', 0b5H, '0', 0a4H, '0', 0baH, '0L0', 0dH, 'N', 0b3H
	DB	08dH, 'W0f0D0~0Y0', 02H, '0', 00H, 00H	; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InsufficientBufferException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInsufficientBufferException@Internal@Core@Math@Palmt'
	DB	'ree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7StringWriter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringWriter::`vftable'
	DQ	FLAT:?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
	DQ	FLAT:?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
	DQ	FLAT:?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
CONST	ENDS
;	COMDAT ??_C@_1GC@GGAPGHKN@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
CONST	SEGMENT
??_C@_1GC@GGAPGHKN@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'h'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ':', 00H, ':', 00H, 'S', 00H, 'k', 00H, 'i', 00H, 'p'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@BNHGDLLE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
CONST	SEGMENT
??_C@_1FO@BNHGDLLE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'h'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ':', 00H, ':', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g'
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ';', 00H, '1', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringReader::`vftable'
	DQ	FLAT:?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
	DQ	FLAT:?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
	DQ	FLAT:?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
	DQ	FLAT:?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
CONST	ENDS
;	COMDAT ??_C@_1FE@KONPIGEM@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
CONST	SEGMENT
??_C@_1FE@KONPIGEM@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'h'
	DB	00H, ';', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'k', 00H, 'i', 00H, 'p', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ';'
	DB	00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
CONST	SEGMENT
??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ DB 085H
	DB	'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv', 01fH, 'u'
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@CNGEABBJ@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
CONST	SEGMENT
??_C@_1FA@CNGEABBJ@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'h'
	DB	00H, ';', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, ':', 00H, ':', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ';', 00H, '1', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7StringReader@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7StringReader@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4StringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringReader::`vftable'
	DQ	FLAT:?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
	DQ	FLAT:?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
	DQ	FLAT:?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
	DQ	FLAT:?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
CONST	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DQ	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotSupportedException::`vftable'
	DQ	FLAT:??_ENotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InsufficientBufferException::`vftable'
	DQ	FLAT:??_EInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7FormatException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::FormatException::`vftable'
	DQ	FLAT:??_EFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DQ	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DQ	FLAT:??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z DD 045053801H
	DD	011c4321H
	DD	070150033H
	DD	05014H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z$rtcName$0 DB 066H ; Palmtree::Math::Core::Internal::ToString_Imp
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	05fH
	DB	074H
	DB	079H
	DB	070H
	DB	065H
	DB	00H
	ORG $+4
?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z$rtcName$1 DB 070H ; Palmtree::Math::Core::Internal::ToString_Imp
	DB	072H
	DB	065H
	DB	063H
	DB	069H
	DB	073H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+6
?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z$rtcVarDesc DD 064H ; Palmtree::Math::Core::Internal::ToString_Imp
	DD	04H
	DQ	FLAT:?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z$rtcName$1
	DD	044H
	DD	02H
	DQ	FLAT:?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z$rtcName$0
	ORG $+96
?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::ToString_Imp
	DD	00H
	DQ	FLAT:?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 025053801H
	DD	011c2321H
	DD	070150027H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	0ffffffffH
	DD	imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+191
	DD	00H
	DD	imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+1487
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 025054411H
	DD	011d2322H
	DD	07016008dH
	DD	05015H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0 DB 077H ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1 DB 072H ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX
	DD	020H
	DQ	FLAT:?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0
	ORG $+96
?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX
	DD	00H
	DQ	FLAT:?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc
$cppxdata$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	0448H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z DD 025053801H
	DD	011c2321H
	DD	07015002bH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0 DB 077H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1 DB 066H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+14
?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP
	DD	028H
	DQ	FLAT:?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0
	ORG $+96
?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP
	DD	00H
	DQ	FLAT:?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0 DB 077H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1 DB 066H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+14
?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN
	DD	028H
	DQ	FLAT:?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0
	ORG $+96
?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN
	DD	00H
	DQ	FLAT:?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0 DB 077H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1 DB 066H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+14
?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF
	DD	028H
	DQ	FLAT:?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0
	ORG $+96
?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF
	DD	00H
	DQ	FLAT:?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0 DB 077H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1 DB 066H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+14
?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE
	DD	028H
	DQ	FLAT:?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0
	ORG $+96
?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE
	DD	00H
	DQ	FLAT:?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0 DB 077H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1 DB 066H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+14
?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
	DD	028H
	DQ	FLAT:?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0
	ORG $+96
?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
	DD	00H
	DQ	FLAT:?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0 DB 077H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1 DB 066H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+14
?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc DD 068H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC
	DD	028H
	DQ	FLAT:?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcName$0
	ORG $+96
?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC
	DD	00H
	DQ	FLAT:?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+85
	DD	00H
	DD	imagerel ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+415
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 025053f11H
	DD	0118231dH
	DD	07011004fH
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$1 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
	DB	05fH
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+7
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$2 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
	DB	05fH
	DB	077H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+7
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$3 DB 074H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
	DB	05fH
	DB	077H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+15
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcVarDesc DD 0120H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
	DD	050H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$3
	DD	0d8H
	DD	028H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$2
	DD	068H
	DD	018H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$0
	ORG $+192
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcFrameData DD 04H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
	DD	00H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcVarDesc
$cppxdata$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0248H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel ?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+85
	DD	00H
	DD	imagerel ?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+143
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 025053f11H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally
	DD	020H
	DQ	FLAT:?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcName$0
	ORG $+48
?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally
	DD	00H
	DQ	FLAT:?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcVarDesc
$cppxdata$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	0148H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+85
	DD	00H
	DD	imagerel ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+415
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 025053f11H
	DD	0118231dH
	DD	07011004fH
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$1 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
	DB	05fH
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+7
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$2 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
	DB	05fH
	DB	077H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+7
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$3 DB 074H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
	DB	05fH
	DB	077H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+15
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcVarDesc DD 0120H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
	DD	050H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$3
	DD	0d8H
	DD	028H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$2
	DD	068H
	DD	018H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$0
	ORG $+192
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcFrameData DD 04H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
	DD	00H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcVarDesc
$cppxdata$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0248H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 025054519H
	DD	0118231dH
	DD	070110035H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0198H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$1 DB 065H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence
	DB	078H
	DB	070H
	DB	05fH
	DB	062H
	DB	075H
	DB	066H
	DB	00H
?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcVarDesc DD 098H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence
	DD	028H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$0
	ORG $+96
?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence
	DD	00H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+85
	DD	00H
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+288
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 025053f11H
	DD	0118231dH
	DD	070110035H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally
	DD	020H
	DQ	FLAT:?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcName$0
	ORG $+48
?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally
	DD	00H
	DQ	FLAT:?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcVarDesc
$cppxdata$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	0188H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+85
	DD	00H
	DD	imagerel ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+415
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 025053f11H
	DD	0118231dH
	DD	07011004fH
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$1 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
	DB	05fH
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+7
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$2 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
	DB	05fH
	DB	077H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+7
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$3 DB 074H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
	DB	05fH
	DB	077H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+15
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcVarDesc DD 0120H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
	DD	050H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$3
	DD	0d8H
	DD	028H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$2
	DD	068H
	DD	018H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcName$0
	ORG $+192
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcFrameData DD 04H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
	DD	00H
	DQ	FLAT:?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcVarDesc
$cppxdata$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0248H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord
	DB	00H
	ORG $+14
?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord
	DD	08H
	DQ	FLAT:?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcName$0
	ORG $+48
?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord
	DD	00H
	DQ	FLAT:?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord
	DB	00H
	ORG $+14
?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord
	DD	08H
	DQ	FLAT:?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcName$0
	ORG $+48
?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord
	DD	00H
	DQ	FLAT:?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z$rtcName$0 DB 073H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence
	DB	069H
	DB	06dH
	DB	070H
	DB	06cH
	DB	065H
	DB	05fH
	DB	06eH
	DB	075H
	DB	06dH
	DB	062H
	DB	065H
	DB	072H
	DB	05fH
	DB	073H
	DB	065H
	DB	071H
	DB	075H
	DB	065H
	DB	06eH
	DB	063H
	DB	065H
	DB	05fH
	DB	077H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence
	DD	028H
	DQ	FLAT:?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z$rtcName$0
	ORG $+48
?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence
	DD	00H
	DQ	FLAT:?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD imagerel ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
	DD	0ffffffffH
	DD	imagerel ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z+85
	DD	00H
	DD	imagerel ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z+454
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD 035053f11H
	DD	0118331dH
	DD	07011004bH
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z$rtcName$1 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber
	DB	05fH
	DB	076H
	DB	061H
	DB	06cH
	DB	075H
	DB	065H
	DB	00H
?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z$rtcVarDesc DD 0118H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber
	DD	08H
	DQ	FLAT:?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z$rtcName$0
	ORG $+96
?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber
	DD	00H
	DQ	FLAT:?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z$rtcVarDesc
$cppxdata$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
	DD	0238H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+85
	DD	00H
	DD	imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+347
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 035053f11H
	DD	0118331dH
	DD	070110043H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcVarDesc DD 038H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
	DD	020H
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcName$0
	ORG $+48
?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
	DD	00H
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcVarDesc
$cppxdata$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	01f8H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 025053801H
	DD	011c2321H
	DD	070150031H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z DD 025053a01H
	DD	011e2323H
	DD	070170025H
	DD	05016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
	DD	0ffffffffH
	DD	imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z+78
	DD	00H
	DD	imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z+174
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD 025053811H
	DD	01122317H
	DD	0700b0039H
	DD	0500aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+11
?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z$rtcVarDesc DD 028H ; Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10
	DD	020H
	DQ	FLAT:?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z$rtcName$0
	ORG $+48
?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10
	DD	00H
	DQ	FLAT:?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z$rtcVarDesc
$cppxdata$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
	DD	01a8H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
	DD	0ffffffffH
	DD	imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z+80
	DD	00H
	DD	imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z+404
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD 035053a11H
	DD	01133318H
	DD	0700c004fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z$rtcName$0 DB 072H ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal
	DB	06fH
	DB	06fH
	DB	074H
	DB	00H
	ORG $+3
?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z$rtcName$1 DB 074H ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal
	DB	065H
	DB	06dH
	DB	070H
	DB	05fH
	DB	072H
	DB	00H
	ORG $+1
?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z$rtcVarDesc DD 0138H ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal
	DD	08H
	DQ	FLAT:?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z$rtcName$0
	ORG $+96
?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal
	DD	00H
	DQ	FLAT:?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z$rtcVarDesc
$cppxdata$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
	DD	0258H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ROTATE_L_UNIT DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ADD_UNIT DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_DIVIDE_CEILING_UNIT DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_COPY_MEMORY_UNIT DD 025063501H
	DD	0119231eH
	DD	07012001cH
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z DD 025052801H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z DD 025052801H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z DD 035053901H
	DD	011d3322H
	DD	07016002fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+108
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 025053f19H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+96
	DD	00H
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+113
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+95
	DD	00H
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+112
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0e8H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 025053a11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+96
	DD	00H
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+113
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+91
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+108
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+108
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 025053f19H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+84
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+165
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+93
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+162
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 025054319H
	DD	011c2321H
	DD	070150021H
	DD	05014H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z+88
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z+154
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 025053e19H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@XZ DD imagerel ??0exception@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0exception@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0exception@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0exception@std@@QEAA@XZ
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
_TEXT	SEGMENT
format_type$ = 4
precision$ = 36
$T5 = 264
tv77 = 324
x_sign$ = 368
x_abs$ = 376
format$ = 384
format_option$ = 392
buffer$ = 400
buffer_size$ = 408
?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::ToString_Imp, COMDAT

; 1392 :     {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  0001c	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 b8
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+440]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1393 :         wchar_t format_type;
; 1394 :         int precision;
; 1395 :         if (!ParseStandardFormat(format, &format_type, &precision))

  00044	4c 8d 45 24	 lea	 r8, QWORD PTR precision$[rbp]
  00048	48 8d 55 04	 lea	 rdx, QWORD PTR format_type$[rbp]
  0004c	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  00053	e8 00 00 00 00	 call	 ?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z ; Palmtree::Math::Core::Internal::ParseStandardFormat
  00058	85 c0		 test	 eax, eax
  0005a	75 43		 jne	 SHORT $LN4@ToString_I

; 1396 :             return (CustomFormatter::ToStringCustom(x_sign, x_abs, format, format_option, buffer, buffer_size));

  0005c	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  00063	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00068	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  0006f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00074	4c 8b 8d 88 01
	00 00		 mov	 r9, QWORD PTR format_option$[rbp]
  0007b	4c 8b 85 80 01
	00 00		 mov	 r8, QWORD PTR format$[rbp]
  00082	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  00089	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  00090	e8 00 00 00 00	 call	 ?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::CustomFormatter::ToStringCustom
  00095	e9 d9 02 00 00	 jmp	 $LN1@ToString_I

; 1397 :         else

  0009a	e9 d4 02 00 00	 jmp	 $LN5@ToString_I
$LN4@ToString_I:

; 1398 :         {
; 1399 :             switch (format_type)

  0009f	0f b7 45 04	 movzx	 eax, WORD PTR format_type$[rbp]
  000a3	89 85 44 01 00
	00		 mov	 DWORD PTR tv77[rbp], eax
  000a9	8b 85 44 01 00
	00		 mov	 eax, DWORD PTR tv77[rbp]
  000af	83 e8 43	 sub	 eax, 67			; 00000043H
  000b2	89 85 44 01 00
	00		 mov	 DWORD PTR tv77[rbp], eax
  000b8	83 bd 44 01 00
	00 35		 cmp	 DWORD PTR tv77[rbp], 53	; 00000035H
  000bf	0f 87 88 02 00
	00		 ja	 $LN15@ToString_I
  000c5	48 63 85 44 01
	00 00		 movsxd	 rax, DWORD PTR tv77[rbp]
  000cc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  000d3	0f b6 84 01 00
	00 00 00	 movzx	 eax, BYTE PTR $LN17@ToString_I[rcx+rax]
  000db	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN18@ToString_I[rcx+rax*4]
  000e2	48 03 c1	 add	 rax, rcx
  000e5	ff e0		 jmp	 rax
$LN6@ToString_I:

; 1400 :             {
; 1401 :             case L'c':
; 1402 :             case L'C':
; 1403 :                 return (DecimalFromatter::ToStringC(x_sign, x_abs, L'C', precision, format_option, buffer, buffer_size));

  000e7	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  000ee	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  000f3	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  000fa	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000ff	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  00106	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0010b	44 8b 4d 24	 mov	 r9d, DWORD PTR precision$[rbp]
  0010f	66 41 b8 43 00	 mov	 r8w, 67			; 00000043H
  00114	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  0011b	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  00122	e8 00 00 00 00	 call	 ?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC
  00127	e9 47 02 00 00	 jmp	 $LN1@ToString_I
$LN7@ToString_I:

; 1404 :             case L'd':
; 1405 :             case L'D':
; 1406 :                 return (DecimalFromatter::ToStringD(x_sign, x_abs, L'D', precision, format_option, buffer, buffer_size));

  0012c	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  00133	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00138	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  0013f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00144	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  0014b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00150	44 8b 4d 24	 mov	 r9d, DWORD PTR precision$[rbp]
  00154	66 41 b8 44 00	 mov	 r8w, 68			; 00000044H
  00159	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  00160	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  00167	e8 00 00 00 00	 call	 ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
  0016c	e9 02 02 00 00	 jmp	 $LN1@ToString_I
$LN8@ToString_I:

; 1407 :             case L'e':
; 1408 :             case L'E':
; 1409 :                 return (DecimalFromatter::ToStringE(x_sign, x_abs, format_type, precision, format_option, buffer, buffer_size));

  00171	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  00178	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0017d	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  00184	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00189	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  00190	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00195	44 8b 4d 24	 mov	 r9d, DWORD PTR precision$[rbp]
  00199	44 0f b7 45 04	 movzx	 r8d, WORD PTR format_type$[rbp]
  0019e	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  001a5	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  001ac	e8 00 00 00 00	 call	 ?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE
  001b1	e9 bd 01 00 00	 jmp	 $LN1@ToString_I
$LN9@ToString_I:

; 1410 :             case L'f':
; 1411 :             case L'F':
; 1412 :                 return (DecimalFromatter::ToStringF(x_sign, x_abs, L'F', precision, format_option, buffer, buffer_size));

  001b6	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  001bd	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001c2	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  001c9	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001ce	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  001d5	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001da	44 8b 4d 24	 mov	 r9d, DWORD PTR precision$[rbp]
  001de	66 41 b8 46 00	 mov	 r8w, 70			; 00000046H
  001e3	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  001ea	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  001f1	e8 00 00 00 00	 call	 ?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF
  001f6	e9 78 01 00 00	 jmp	 $LN1@ToString_I
$LN10@ToString_I:

; 1413 :             case L'g':
; 1414 :             case L'G':
; 1415 :                 return (DecimalFromatter::ToStringD(x_sign, x_abs, L'D', precision, format_option, buffer, buffer_size));

  001fb	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  00202	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00207	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  0020e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00213	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  0021a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0021f	44 8b 4d 24	 mov	 r9d, DWORD PTR precision$[rbp]
  00223	66 41 b8 44 00	 mov	 r8w, 68			; 00000044H
  00228	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  0022f	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  00236	e8 00 00 00 00	 call	 ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
  0023b	e9 33 01 00 00	 jmp	 $LN1@ToString_I
$LN11@ToString_I:

; 1416 :             case L'n':
; 1417 :             case L'N':
; 1418 :                 return (DecimalFromatter::ToStringN(x_sign, x_abs, L'N', precision, format_option, buffer, buffer_size));

  00240	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  00247	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0024c	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  00253	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00258	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  0025f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00264	44 8b 4d 24	 mov	 r9d, DWORD PTR precision$[rbp]
  00268	66 41 b8 4e 00	 mov	 r8w, 78			; 0000004eH
  0026d	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  00274	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  0027b	e8 00 00 00 00	 call	 ?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN
  00280	e9 ee 00 00 00	 jmp	 $LN1@ToString_I
$LN12@ToString_I:

; 1419 :             case L'p':
; 1420 :             case L'P':
; 1421 :                 return (DecimalFromatter::ToStringP(x_sign, x_abs, L'P', precision, format_option, buffer, buffer_size));

  00285	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  0028c	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00291	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  00298	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0029d	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  002a4	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  002a9	44 8b 4d 24	 mov	 r9d, DWORD PTR precision$[rbp]
  002ad	66 41 b8 50 00	 mov	 r8w, 80			; 00000050H
  002b2	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  002b9	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  002c0	e8 00 00 00 00	 call	 ?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP
  002c5	e9 a9 00 00 00	 jmp	 $LN1@ToString_I
$LN13@ToString_I:

; 1422 :             case L'r':
; 1423 :             case L'R':
; 1424 :                 return (DecimalFromatter::ToStringD(x_sign, x_abs, L'D', 0, format_option, buffer, buffer_size));

  002ca	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  002d1	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  002d6	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  002dd	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  002e2	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  002e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  002ee	45 33 c9	 xor	 r9d, r9d
  002f1	66 41 b8 44 00	 mov	 r8w, 68			; 00000044H
  002f6	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  002fd	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  00304	e8 00 00 00 00	 call	 ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
  00309	eb 68		 jmp	 SHORT $LN1@ToString_I
$LN14@ToString_I:

; 1425 :             case L'x':
; 1426 :             case L'X':
; 1427 :                 return (HexaDecimalFormatter::ToStringX(x_sign, x_abs, format_type, precision, format_option, buffer, buffer_size));

  0030b	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  00312	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00317	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  0031e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00323	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  0032a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0032f	44 8b 4d 24	 mov	 r9d, DWORD PTR precision$[rbp]
  00333	44 0f b7 45 04	 movzx	 r8d, WORD PTR format_type$[rbp]
  00338	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  0033f	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR x_sign$[rbp]
  00346	e8 00 00 00 00	 call	 ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX
  0034b	eb 26		 jmp	 SHORT $LN1@ToString_I
$LN15@ToString_I:

; 1428 :             default:
; 1429 :                 throw FormatException(L"未知の書式指定子です。");

  0034d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BI@BIIKHCEK@?$AA?$CK?$PP?e?$AAn?$PP?x?$AA?$AP?$AA?$AH?$PP?$JK?$AAP?$AAg?$AAY?$AA?$AC@
  00354	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  0035b	e8 00 00 00 00	 call	 ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::FormatException::FormatException
  00360	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVFormatException@Internal@Core@Math@Palmtree@@
  00367	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  0036e	e8 00 00 00 00	 call	 _CxxThrowException
$LN5@ToString_I:
$LN1@ToString_I:
$LN16@ToString_I:

; 1430 :             }
; 1431 :         }
; 1432 :     }

  00373	48 8b f8	 mov	 rdi, rax
  00376	48 8d 4d c0	 lea	 rcx, QWORD PTR [rbp-64]
  0037a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z$rtcFrameData
  00381	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00386	48 8b c7	 mov	 rax, rdi
  00389	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00390	5f		 pop	 rdi
  00391	5d		 pop	 rbp
  00392	c3		 ret	 0
  00393	90		 npad	 1
$LN18@ToString_I:
  00394	00 00 00 00	 DD	 $LN6@ToString_I
  00398	00 00 00 00	 DD	 $LN7@ToString_I
  0039c	00 00 00 00	 DD	 $LN8@ToString_I
  003a0	00 00 00 00	 DD	 $LN9@ToString_I
  003a4	00 00 00 00	 DD	 $LN10@ToString_I
  003a8	00 00 00 00	 DD	 $LN11@ToString_I
  003ac	00 00 00 00	 DD	 $LN12@ToString_I
  003b0	00 00 00 00	 DD	 $LN13@ToString_I
  003b4	00 00 00 00	 DD	 $LN14@ToString_I
  003b8	00 00 00 00	 DD	 $LN15@ToString_I
$LN17@ToString_I:
  003bc	00		 DB	 0
  003bd	01		 DB	 1
  003be	02		 DB	 2
  003bf	03		 DB	 3
  003c0	04		 DB	 4
  003c1	09		 DB	 9
  003c2	09		 DB	 9
  003c3	09		 DB	 9
  003c4	09		 DB	 9
  003c5	09		 DB	 9
  003c6	09		 DB	 9
  003c7	05		 DB	 5
  003c8	09		 DB	 9
  003c9	06		 DB	 6
  003ca	09		 DB	 9
  003cb	07		 DB	 7
  003cc	09		 DB	 9
  003cd	09		 DB	 9
  003ce	09		 DB	 9
  003cf	09		 DB	 9
  003d0	09		 DB	 9
  003d1	08		 DB	 8
  003d2	09		 DB	 9
  003d3	09		 DB	 9
  003d4	09		 DB	 9
  003d5	09		 DB	 9
  003d6	09		 DB	 9
  003d7	09		 DB	 9
  003d8	09		 DB	 9
  003d9	09		 DB	 9
  003da	09		 DB	 9
  003db	09		 DB	 9
  003dc	00		 DB	 0
  003dd	01		 DB	 1
  003de	02		 DB	 2
  003df	03		 DB	 3
  003e0	04		 DB	 4
  003e1	09		 DB	 9
  003e2	09		 DB	 9
  003e3	09		 DB	 9
  003e4	09		 DB	 9
  003e5	09		 DB	 9
  003e6	09		 DB	 9
  003e7	05		 DB	 5
  003e8	09		 DB	 9
  003e9	06		 DB	 6
  003ea	09		 DB	 9
  003eb	07		 DB	 7
  003ec	09		 DB	 9
  003ed	09		 DB	 9
  003ee	09		 DB	 9
  003ef	09		 DB	 9
  003f0	09		 DB	 9
  003f1	08		 DB	 8
?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::ToString_Imp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z
_TEXT	SEGMENT
format$ = 224
format_type$ = 232
precision$ = 240
?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z PROC ; Palmtree::Math::Core::Internal::ParseStandardFormat, COMDAT

; 1356 :     {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1357 :         if (format == nullptr)

  00040	48 83 bd e0 00
	00 00 00	 cmp	 QWORD PTR format$[rbp], 0
  00048	75 2b		 jne	 SHORT $LN2@ParseStand

; 1358 :         {
; 1359 :             *format_type = L'D';

  0004a	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  0004f	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR format_type$[rbp]
  00056	66 89 01	 mov	 WORD PTR [rcx], ax

; 1360 :             *precision = -1;

  00059	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR precision$[rbp]
  00060	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [rax], -1

; 1361 :             return (TRUE);

  00066	b8 01 00 00 00	 mov	 eax, 1
  0006b	e9 35 02 00 00	 jmp	 $LN1@ParseStand
  00070	e9 30 02 00 00	 jmp	 $LN3@ParseStand
$LN2@ParseStand:

; 1362 :         }
; 1363 :         else if (format[0] == L'\0')

  00075	b8 02 00 00 00	 mov	 eax, 2
  0007a	48 6b c0 00	 imul	 rax, rax, 0
  0007e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  00085	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  00089	85 c0		 test	 eax, eax
  0008b	75 2b		 jne	 SHORT $LN4@ParseStand

; 1364 :         {
; 1365 :             *format_type = L'D';

  0008d	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00092	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR format_type$[rbp]
  00099	66 89 01	 mov	 WORD PTR [rcx], ax

; 1366 :             *precision = -1;

  0009c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR precision$[rbp]
  000a3	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [rax], -1

; 1367 :             return (TRUE);

  000a9	b8 01 00 00 00	 mov	 eax, 1
  000ae	e9 f2 01 00 00	 jmp	 $LN1@ParseStand
  000b3	e9 ed 01 00 00	 jmp	 $LN5@ParseStand
$LN4@ParseStand:

; 1368 :         }
; 1369 :         else if (__IS_ALPHA(format[0]) && format[1] == L'\0')

  000b8	b8 02 00 00 00	 mov	 eax, 2
  000bd	48 6b c0 00	 imul	 rax, rax, 0
  000c1	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  000c8	0f b7 0c 01	 movzx	 ecx, WORD PTR [rcx+rax]
  000cc	e8 00 00 00 00	 call	 ?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z ; Palmtree::Math::Core::Internal::__IS_ALPHA
  000d1	85 c0		 test	 eax, eax
  000d3	74 52		 je	 SHORT $LN6@ParseStand
  000d5	b8 02 00 00 00	 mov	 eax, 2
  000da	48 6b c0 01	 imul	 rax, rax, 1
  000de	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  000e5	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  000e9	85 c0		 test	 eax, eax
  000eb	75 3a		 jne	 SHORT $LN6@ParseStand

; 1370 :         {
; 1371 :             *format_type = format[0];

  000ed	b8 02 00 00 00	 mov	 eax, 2
  000f2	48 6b c0 00	 imul	 rax, rax, 0
  000f6	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR format_type$[rbp]
  000fd	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR format$[rbp]
  00104	0f b7 04 02	 movzx	 eax, WORD PTR [rdx+rax]
  00108	66 89 01	 mov	 WORD PTR [rcx], ax

; 1372 :             *precision = -1;

  0010b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR precision$[rbp]
  00112	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [rax], -1

; 1373 :             return (TRUE);

  00118	b8 01 00 00 00	 mov	 eax, 1
  0011d	e9 83 01 00 00	 jmp	 $LN1@ParseStand
  00122	e9 7e 01 00 00	 jmp	 $LN7@ParseStand
$LN6@ParseStand:

; 1374 :         }
; 1375 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && format[2] == L'\0')

  00127	b8 02 00 00 00	 mov	 eax, 2
  0012c	48 6b c0 00	 imul	 rax, rax, 0
  00130	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  00137	0f b7 0c 01	 movzx	 ecx, WORD PTR [rcx+rax]
  0013b	e8 00 00 00 00	 call	 ?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z ; Palmtree::Math::Core::Internal::__IS_ALPHA
  00140	85 c0		 test	 eax, eax
  00142	0f 84 82 00 00
	00		 je	 $LN8@ParseStand
  00148	b8 02 00 00 00	 mov	 eax, 2
  0014d	48 6b c0 01	 imul	 rax, rax, 1
  00151	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  00158	0f b7 0c 01	 movzx	 ecx, WORD PTR [rcx+rax]
  0015c	e8 00 00 00 00	 call	 ?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z ; Palmtree::Math::Core::Internal::__IS_DIGIT
  00161	85 c0		 test	 eax, eax
  00163	74 65		 je	 SHORT $LN8@ParseStand
  00165	b8 02 00 00 00	 mov	 eax, 2
  0016a	48 6b c0 02	 imul	 rax, rax, 2
  0016e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  00175	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  00179	85 c0		 test	 eax, eax
  0017b	75 4d		 jne	 SHORT $LN8@ParseStand

; 1376 :         {
; 1377 :             *format_type = format[0];

  0017d	b8 02 00 00 00	 mov	 eax, 2
  00182	48 6b c0 00	 imul	 rax, rax, 0
  00186	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR format_type$[rbp]
  0018d	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR format$[rbp]
  00194	0f b7 04 02	 movzx	 eax, WORD PTR [rdx+rax]
  00198	66 89 01	 mov	 WORD PTR [rcx], ax

; 1378 :             *precision = format[1] - L'0';

  0019b	b8 02 00 00 00	 mov	 eax, 2
  001a0	48 6b c0 01	 imul	 rax, rax, 1
  001a4	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  001ab	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  001af	83 e8 30	 sub	 eax, 48			; 00000030H
  001b2	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR precision$[rbp]
  001b9	89 01		 mov	 DWORD PTR [rcx], eax

; 1379 :             return (TRUE);

  001bb	b8 01 00 00 00	 mov	 eax, 1
  001c0	e9 e0 00 00 00	 jmp	 $LN1@ParseStand
  001c5	e9 db 00 00 00	 jmp	 $LN9@ParseStand
$LN8@ParseStand:

; 1380 :         }
; 1381 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && __IS_DIGIT(format[2]) && format[3] == L'\0')

  001ca	b8 02 00 00 00	 mov	 eax, 2
  001cf	48 6b c0 00	 imul	 rax, rax, 0
  001d3	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  001da	0f b7 0c 01	 movzx	 ecx, WORD PTR [rcx+rax]
  001de	e8 00 00 00 00	 call	 ?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z ; Palmtree::Math::Core::Internal::__IS_ALPHA
  001e3	85 c0		 test	 eax, eax
  001e5	0f 84 b8 00 00
	00		 je	 $LN10@ParseStand
  001eb	b8 02 00 00 00	 mov	 eax, 2
  001f0	48 6b c0 01	 imul	 rax, rax, 1
  001f4	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  001fb	0f b7 0c 01	 movzx	 ecx, WORD PTR [rcx+rax]
  001ff	e8 00 00 00 00	 call	 ?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z ; Palmtree::Math::Core::Internal::__IS_DIGIT
  00204	85 c0		 test	 eax, eax
  00206	0f 84 97 00 00
	00		 je	 $LN10@ParseStand
  0020c	b8 02 00 00 00	 mov	 eax, 2
  00211	48 6b c0 02	 imul	 rax, rax, 2
  00215	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  0021c	0f b7 0c 01	 movzx	 ecx, WORD PTR [rcx+rax]
  00220	e8 00 00 00 00	 call	 ?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z ; Palmtree::Math::Core::Internal::__IS_DIGIT
  00225	85 c0		 test	 eax, eax
  00227	74 7a		 je	 SHORT $LN10@ParseStand
  00229	b8 02 00 00 00	 mov	 eax, 2
  0022e	48 6b c0 03	 imul	 rax, rax, 3
  00232	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  00239	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  0023d	85 c0		 test	 eax, eax
  0023f	75 62		 jne	 SHORT $LN10@ParseStand

; 1382 :         {
; 1383 :             *format_type = format[0];

  00241	b8 02 00 00 00	 mov	 eax, 2
  00246	48 6b c0 00	 imul	 rax, rax, 0
  0024a	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR format_type$[rbp]
  00251	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR format$[rbp]
  00258	0f b7 04 02	 movzx	 eax, WORD PTR [rdx+rax]
  0025c	66 89 01	 mov	 WORD PTR [rcx], ax

; 1384 :             *precision = (format[1] - L'0') * 10 + (format[2] - L'0');

  0025f	b8 02 00 00 00	 mov	 eax, 2
  00264	48 6b c0 01	 imul	 rax, rax, 1
  00268	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR format$[rbp]
  0026f	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  00273	83 e8 30	 sub	 eax, 48			; 00000030H
  00276	6b c0 0a	 imul	 eax, eax, 10
  00279	b9 02 00 00 00	 mov	 ecx, 2
  0027e	48 6b c9 02	 imul	 rcx, rcx, 2
  00282	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR format$[rbp]
  00289	0f b7 0c 0a	 movzx	 ecx, WORD PTR [rdx+rcx]
  0028d	8d 44 08 d0	 lea	 eax, DWORD PTR [rax+rcx-48]
  00291	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR precision$[rbp]
  00298	89 01		 mov	 DWORD PTR [rcx], eax

; 1385 :             return (TRUE);

  0029a	b8 01 00 00 00	 mov	 eax, 1
  0029f	eb 04		 jmp	 SHORT $LN1@ParseStand

; 1386 :         }
; 1387 :         else

  002a1	eb 02		 jmp	 SHORT $LN11@ParseStand
$LN10@ParseStand:

; 1388 :             return (FALSE);

  002a3	33 c0		 xor	 eax, eax
$LN11@ParseStand:
$LN9@ParseStand:
$LN7@ParseStand:
$LN5@ParseStand:
$LN3@ParseStand:
$LN1@ParseStand:

; 1389 :     }

  002a5	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  002ac	5f		 pop	 rdi
  002ad	5d		 pop	 rbp
  002ae	c3		 ret	 0
?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z ENDP ; Palmtree::Math::Core::Internal::ParseStandardFormat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z
_TEXT	SEGMENT
c$ = 224
?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z PROC	; Palmtree::Math::Core::Internal::__IS_DIGIT, COMDAT

; 1349 :     {

  00000	66 89 4c 24 08	 mov	 WORD PTR [rsp+8], cx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	0f b7 8c 24 08
	01 00 00	 movzx	 ecx, WORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1350 :         if (c >= L'0' && c <= L'9')

  00036	0f b7 85 e0 00
	00 00		 movzx	 eax, WORD PTR c$[rbp]
  0003d	83 f8 30	 cmp	 eax, 48			; 00000030H
  00040	7c 13		 jl	 SHORT $LN2@IS_DIGIT
  00042	0f b7 85 e0 00
	00 00		 movzx	 eax, WORD PTR c$[rbp]
  00049	83 f8 39	 cmp	 eax, 57			; 00000039H
  0004c	7f 07		 jg	 SHORT $LN2@IS_DIGIT

; 1351 :             return (TRUE);

  0004e	b8 01 00 00 00	 mov	 eax, 1
  00053	eb 02		 jmp	 SHORT $LN1@IS_DIGIT
$LN2@IS_DIGIT:

; 1352 :         return (FALSE);

  00055	33 c0		 xor	 eax, eax
$LN1@IS_DIGIT:

; 1353 :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z ENDP	; Palmtree::Math::Core::Internal::__IS_DIGIT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z
_TEXT	SEGMENT
c$ = 224
?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z PROC	; Palmtree::Math::Core::Internal::__IS_ALPHA, COMDAT

; 1340 :     {

  00000	66 89 4c 24 08	 mov	 WORD PTR [rsp+8], cx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	0f b7 8c 24 08
	01 00 00	 movzx	 ecx, WORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1341 :         if (c >= L'A' && c <= L'Z')

  00036	0f b7 85 e0 00
	00 00		 movzx	 eax, WORD PTR c$[rbp]
  0003d	83 f8 41	 cmp	 eax, 65			; 00000041H
  00040	7c 13		 jl	 SHORT $LN2@IS_ALPHA
  00042	0f b7 85 e0 00
	00 00		 movzx	 eax, WORD PTR c$[rbp]
  00049	83 f8 5a	 cmp	 eax, 90			; 0000005aH
  0004c	7f 07		 jg	 SHORT $LN2@IS_ALPHA

; 1342 :             return (TRUE);

  0004e	b8 01 00 00 00	 mov	 eax, 1
  00053	eb 21		 jmp	 SHORT $LN1@IS_ALPHA
$LN2@IS_ALPHA:

; 1343 :         if (c >= L'a' && c <= L'z')

  00055	0f b7 85 e0 00
	00 00		 movzx	 eax, WORD PTR c$[rbp]
  0005c	83 f8 61	 cmp	 eax, 97			; 00000061H
  0005f	7c 13		 jl	 SHORT $LN3@IS_ALPHA
  00061	0f b7 85 e0 00
	00 00		 movzx	 eax, WORD PTR c$[rbp]
  00068	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  0006b	7f 07		 jg	 SHORT $LN3@IS_ALPHA

; 1344 :             return (TRUE);

  0006d	b8 01 00 00 00	 mov	 eax, 1
  00072	eb 02		 jmp	 SHORT $LN1@IS_ALPHA
$LN3@IS_ALPHA:

; 1345 :         return (FALSE);

  00074	33 c0		 xor	 eax, eax
$LN1@IS_ALPHA:

; 1346 :     }

  00076	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z ENDP	; Palmtree::Math::Core::Internal::__IS_ALPHA
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
$T1 = 200
x_sign$ = 304
x_abs$ = 312
format$ = 320
format_option$ = 328
buffer$ = 336
buffer_size$ = 344
?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::CustomFormatter::ToStringCustom, COMDAT

; 1313 :         {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 58
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+344]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1314 :             // 【実験結果】
; 1315 :             // %と‰の効果は重複してかかる。%が2個なら100*100倍、%と‰なら100*1000倍。%と‰はどこに書かれていてもそのとおりの場所で表示される。【例：(-1.23456789).ToString("0■%■0") => -12■%■3 】
; 1316 :             // '#', '0', '.', ','をまず抜き出して数値を文字列化し、そのあとで'#', '0'のある場所に数値をはめ込む、みたいな実装になっているらしい。
; 1317 :             // ⇒小数部は小数点を基準に上位から順に1文字ずつはめ込まれ、はめ込めなかった分は四捨五入されて必要ならば繰り上がる。
; 1318 :             // ⇒整数部は小数点を基準に下位から順に1文字ずつはめ込まれる。
; 1319 :             // '.'の後に書かれている','は無視される。また、最初の '0', '#' の前に書かれている ',' は無視される。
; 1320 :             // 整数部にて、'0'の後に書かれている'#'は'0'と解釈される。
; 1321 :             // 小数部にて、'0'の前に書かれている'#'は'0'と解釈される。
; 1322 :             // '.'の前に '0'または '#'が一つもない場合は、'#' が一つだけあると解釈される。
; 1323 :             // 整数部の符号は最初の '#', '0'の前にどんなテキストがあろうとあらゆるテキストの最初に表示される。正値のときに自動的には'+'は表示されない。
; 1324 :             // Eの構文解析に失敗した場合はEは(そしてその次の+あるいは-も)一般テキストとしてそのまま表示される。
; 1325 :             // ⇒【例：(1.23456789).ToString("0.0E+#0  000") => 1.2E+34  568】
; 1326 :             // 逆に、構文として正しければEはどこに記述されていてもその場所のまま表示される。
; 1327 :             // ⇒【例：(-0.0123456789).ToString("0.0E+0  000") => -1.2E-2  346】
; 1328 :             // '.' が複数ある場合は最初のものを除いて無視される。【例：(-0.0123456789).ToString("0.0 00.00") => -0.0 1235】
; 1329 :             // 三つ目の';'の後の文字列は数値の符号が何であっても表示されない。つまり無視される。
; 1330 : 
; 1331 :             // c言語での実装はやめた方がいいかもしれない。理由：構文解析に動的メモリ獲得を使用しないと難易度が桁違いに上がり、動的メモリ獲得を使うとメモリリークがないことを保証するテストが大変。
; 1332 :             // 実装をどこでやるにしろ、１）多倍長整数の10進数としての桁数を調べる手段、２）１あるいは５と10のべき乗を掛けた値を取得する手段、はあると便利だと思う。それらを使って書式Eの実装をもっとスマートにやれたらいいかも。
; 1333 : 
; 1334 :             throw NotSupportedException(L"カスタム書式によるToStringはサポートされていません。");

  00044	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DO@MFGCBHKN@?$PP?$KL?$PP?$LJ?$PP?$LP?$PP?$OA?$PP?x?$AA?$AP?$AAk?$PP?$II?$PP?$IL?$AAT?$AAo?$AAS?$AAt?$AAr?$AAi@
  0004b	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00052	e8 00 00 00 00	 call	 ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
  00057	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
  0005e	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00065	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@ToStringCu:

; 1335 :         }

  0006a	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::CustomFormatter::ToStringCustom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
writer$ = 8
root$5 = 72
temp_buf_bit_count$6 = 136
temp_buf$7 = 168
output_len$8 = 200
filling_char$9 = 228
temp_buf_word_count$10 = 264
ptr$11 = 296
in_ptr$12 = 328
out_ptr$13 = 360
count$14 = 392
carry$15 = 420
ptr$16 = 456
leading_zero_digit_count$17 = 484
filling_digit_len$18 = 520
total_length$19 = 552
s_ptr$20 = 584
digit_table$21 = 616
$T22 = 1032
$T23 = 1064
tv206 = 1076
tv231 = 1080
x_sign$ = 1120
x_abs$ = 1128
format_type$ = 1136
precision$ = 1144
format_option$ = 1152
buffer$ = 1160
buffer_size$ = 1168
?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX, COMDAT

; 1182 :         {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 04
	00 00		 sub	 rsp, 1128		; 00000468H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 1a 01 00 00	 mov	 ecx, 282		; 0000011aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	0f b6 8c 24 88
	04 00 00	 movzx	 ecx, BYTE PTR [rsp+1160]
  00039	48 c7 85 28 04
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T23[rbp], -2
  00044	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0004b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1183 :             if (precision < 1)

  00050	83 bd 78 04 00
	00 01		 cmp	 DWORD PTR precision$[rbp], 1
  00057	7d 0a		 jge	 SHORT $LN10@ToStringX

; 1184 :                 precision = 1;

  00059	c7 85 78 04 00
	00 01 00 00 00	 mov	 DWORD PTR precision$[rbp], 1
$LN10@ToStringX:

; 1185 : 
; 1186 :             StringWriter writer(buffer, buffer_size);

  00063	4c 8b 85 90 04
	00 00		 mov	 r8, QWORD PTR buffer_size$[rbp]
  0006a	48 8b 95 88 04
	00 00		 mov	 rdx, QWORD PTR buffer$[rbp]
  00071	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00075	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 1187 :             if (x_abs->IS_ZERO)

  0007a	48 8b 85 68 04
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  00081	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00084	83 e0 01	 and	 eax, 1
  00087	85 c0		 test	 eax, eax
  00089	74 2a		 je	 SHORT $LN11@ToStringX

; 1188 :             {
; 1189 :                 // x == 0 の場合
; 1190 :                 // precision 桁だけ '0' を出力する。(precision == 0 であっても 1 桁だけは出力する)
; 1191 : 
; 1192 :                 writer.Write(L'0', precision);

  0008b	48 63 85 78 04
	00 00		 movsxd	 rax, DWORD PTR precision$[rbp]
  00092	4c 8b c0	 mov	 r8, rax
  00095	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00099	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  0009d	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write

; 1193 :                 return (writer.GetLength());

  000a2	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  000a6	e8 00 00 00 00	 call	 ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength
  000ab	e9 2f 05 00 00	 jmp	 $LN1@ToStringX

; 1194 :             }
; 1195 :             else

  000b0	e9 2a 05 00 00	 jmp	 $LN1@ToStringX
$LN11@ToStringX:

; 1196 :             {
; 1197 :                 // x != 0 の場合
; 1198 :                 ResourceHolderUINT root;

  000b5	48 8d 4d 48	 lea	 rcx, QWORD PTR root$5[rbp]
  000b9	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000be	90		 npad	 1

; 1199 :                 __UNIT_TYPE temp_buf_bit_count = x_abs->UNIT_BIT_COUNT + 4;

  000bf	48 8b 85 68 04
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  000c6	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000ca	48 83 c0 04	 add	 rax, 4
  000ce	48 89 85 88 00
	00 00		 mov	 QWORD PTR temp_buf_bit_count$6[rbp], rax

; 1200 :                 __UNIT_TYPE* temp_buf = root.AllocateBlock(temp_buf_bit_count);

  000d5	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR temp_buf_bit_count$6[rbp]
  000dc	48 8d 4d 48	 lea	 rcx, QWORD PTR root$5[rbp]
  000e0	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  000e5	48 89 85 a8 00
	00 00		 mov	 QWORD PTR temp_buf$7[rbp], rax

; 1201 :                 __UNIT_TYPE output_len;
; 1202 :                 wchar_t filling_char;
; 1203 :                 if (x_sign >= 0)

  000ec	0f be 85 60 04
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  000f3	85 c0		 test	 eax, eax
  000f5	0f 8c 53 01 00
	00		 jl	 $LN13@ToStringX

; 1204 :                 {
; 1205 :                     // x >= 0 の場合
; 1206 : 
; 1207 :                     _COPY_MEMORY_UNIT(temp_buf, x_abs->BLOCK, x_abs->UNIT_WORD_COUNT);

  000fb	48 8b 85 68 04
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  00102	4c 8b 40 18	 mov	 r8, QWORD PTR [rax+24]
  00106	48 8b 85 68 04
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  0010d	48 8b 50 40	 mov	 rdx, QWORD PTR [rax+64]
  00111	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR temp_buf$7[rbp]
  00118	e8 00 00 00 00	 call	 _COPY_MEMORY_UNIT

; 1208 :                     __UNIT_TYPE temp_buf_word_count = _DIVIDE_CEILING_UNIT(temp_buf_bit_count, __UNIT_TYPE_BIT_COUNT);

  0011d	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00122	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR temp_buf_bit_count$6[rbp]
  00129	e8 00 00 00 00	 call	 _DIVIDE_CEILING_UNIT
  0012e	48 89 85 08 01
	00 00		 mov	 QWORD PTR temp_buf_word_count$10[rbp], rax

; 1209 :                     output_len = temp_buf_word_count * (__UNIT_TYPE_BIT_COUNT / 4);

  00135	48 6b 85 08 01
	00 00 10	 imul	 rax, QWORD PTR temp_buf_word_count$10[rbp], 16
  0013d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR output_len$8[rbp], rax

; 1210 :                     unsigned char* ptr = (unsigned char*)&temp_buf[temp_buf_word_count] - 1;

  00144	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR temp_buf$7[rbp]
  0014b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR temp_buf_word_count$10[rbp]
  00152	48 8d 44 c8 ff	 lea	 rax, QWORD PTR [rax+rcx*8-1]
  00157	48 89 85 28 01
	00 00		 mov	 QWORD PTR ptr$11[rbp], rax
$LN2@ToStringX:

; 1211 :                     while (ptr >= (unsigned char*)temp_buf)

  0015e	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR temp_buf$7[rbp]
  00165	48 39 85 28 01
	00 00		 cmp	 QWORD PTR ptr$11[rbp], rax
  0016c	0f 82 cb 00 00
	00		 jb	 $LN3@ToStringX

; 1212 :                     {
; 1213 :                         if ((ptr[0] >> 4) != 0 || (ptr[0] & 0xf) >= 0x8)

  00172	b8 01 00 00 00	 mov	 eax, 1
  00177	48 6b c0 00	 imul	 rax, rax, 0
  0017b	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR ptr$11[rbp]
  00182	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00186	c1 f8 04	 sar	 eax, 4
  00189	85 c0		 test	 eax, eax
  0018b	75 1c		 jne	 SHORT $LN16@ToStringX
  0018d	b8 01 00 00 00	 mov	 eax, 1
  00192	48 6b c0 00	 imul	 rax, rax, 0
  00196	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR ptr$11[rbp]
  0019d	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  001a1	83 e0 0f	 and	 eax, 15
  001a4	83 f8 08	 cmp	 eax, 8
  001a7	7c 05		 jl	 SHORT $LN15@ToStringX
$LN16@ToStringX:

; 1214 :                             break;

  001a9	e9 8f 00 00 00	 jmp	 $LN3@ToStringX
$LN15@ToStringX:

; 1215 :                         // 最上位桁が '0' で、かつ次の桁が '0'～'7'である場合
; 1216 :                         // ⇒最上位桁の '0' を削除する
; 1217 :                         --output_len;

  001ae	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR output_len$8[rbp]
  001b5	48 ff c8	 dec	 rax
  001b8	48 89 85 c8 00
	00 00		 mov	 QWORD PTR output_len$8[rbp], rax

; 1218 : 
; 1219 :                         if (&ptr[-1] < (unsigned char*)temp_buf)

  001bf	b8 01 00 00 00	 mov	 eax, 1
  001c4	48 6b c0 ff	 imul	 rax, rax, -1
  001c8	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR ptr$11[rbp]
  001cf	48 03 c8	 add	 rcx, rax
  001d2	48 8b c1	 mov	 rax, rcx
  001d5	48 3b 85 a8 00
	00 00		 cmp	 rax, QWORD PTR temp_buf$7[rbp]
  001dc	73 02		 jae	 SHORT $LN17@ToStringX

; 1220 :                             break;

  001de	eb 5d		 jmp	 SHORT $LN3@ToStringX
$LN17@ToStringX:

; 1221 : 
; 1222 :                         if (ptr[0] != 0 || (ptr[-1] >> 4) >= 0x8)

  001e0	b8 01 00 00 00	 mov	 eax, 1
  001e5	48 6b c0 00	 imul	 rax, rax, 0
  001e9	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR ptr$11[rbp]
  001f0	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  001f4	85 c0		 test	 eax, eax
  001f6	75 1c		 jne	 SHORT $LN19@ToStringX
  001f8	b8 01 00 00 00	 mov	 eax, 1
  001fd	48 6b c0 ff	 imul	 rax, rax, -1
  00201	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR ptr$11[rbp]
  00208	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  0020c	c1 f8 04	 sar	 eax, 4
  0020f	83 f8 08	 cmp	 eax, 8
  00212	7c 02		 jl	 SHORT $LN18@ToStringX
$LN19@ToStringX:

; 1223 :                             break;

  00214	eb 27		 jmp	 SHORT $LN3@ToStringX
$LN18@ToStringX:

; 1224 :                         // 最上位桁が '0' で、かつ次の桁が '0'～'7'である場合
; 1225 :                         // ⇒最上位桁の '0' を削除する
; 1226 :                         --output_len;

  00216	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR output_len$8[rbp]
  0021d	48 ff c8	 dec	 rax
  00220	48 89 85 c8 00
	00 00		 mov	 QWORD PTR output_len$8[rbp], rax

; 1227 : 
; 1228 :                         --ptr;

  00227	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR ptr$11[rbp]
  0022e	48 ff c8	 dec	 rax
  00231	48 89 85 28 01
	00 00		 mov	 QWORD PTR ptr$11[rbp], rax

; 1229 :                     }

  00238	e9 21 ff ff ff	 jmp	 $LN2@ToStringX
$LN3@ToStringX:

; 1230 :                     filling_char = L'0';

  0023d	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  00242	66 89 85 e4 00
	00 00		 mov	 WORD PTR filling_char$9[rbp], ax

; 1231 :                 }
; 1232 :                 else

  00249	e9 0c 02 00 00	 jmp	 $LN14@ToStringX
$LN13@ToStringX:

; 1233 :                 {
; 1234 :                     // x < 0 の場合
; 1235 : 
; 1236 :                     __UNIT_TYPE *in_ptr = x_abs->BLOCK;

  0024e	48 8b 85 68 04
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  00255	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00259	48 89 85 48 01
	00 00		 mov	 QWORD PTR in_ptr$12[rbp], rax

; 1237 :                     __UNIT_TYPE *out_ptr = temp_buf;

  00260	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR temp_buf$7[rbp]
  00267	48 89 85 68 01
	00 00		 mov	 QWORD PTR out_ptr$13[rbp], rax

; 1238 :                     __UNIT_TYPE count = x_abs->UNIT_WORD_COUNT;

  0026e	48 8b 85 68 04
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  00275	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00279	48 89 85 88 01
	00 00		 mov	 QWORD PTR count$14[rbp], rax

; 1239 :                     char carry = 1;

  00280	c6 85 a4 01 00
	00 01		 mov	 BYTE PTR carry$15[rbp], 1
$LN4@ToStringX:

; 1240 :                     while (count > 0)

  00287	48 83 bd 88 01
	00 00 00	 cmp	 QWORD PTR count$14[rbp], 0
  0028f	76 63		 jbe	 SHORT $LN5@ToStringX

; 1241 :                     {
; 1242 :                         carry = _ADD_UNIT(carry, ~*in_ptr, 0, out_ptr);

  00291	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR in_ptr$12[rbp]
  00298	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0029b	48 f7 d0	 not	 rax
  0029e	4c 8b 8d 68 01
	00 00		 mov	 r9, QWORD PTR out_ptr$13[rbp]
  002a5	45 33 c0	 xor	 r8d, r8d
  002a8	48 8b d0	 mov	 rdx, rax
  002ab	0f b6 8d a4 01
	00 00		 movzx	 ecx, BYTE PTR carry$15[rbp]
  002b2	e8 00 00 00 00	 call	 _ADD_UNIT
  002b7	88 85 a4 01 00
	00		 mov	 BYTE PTR carry$15[rbp], al

; 1243 :                         ++in_ptr;

  002bd	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR in_ptr$12[rbp]
  002c4	48 83 c0 08	 add	 rax, 8
  002c8	48 89 85 48 01
	00 00		 mov	 QWORD PTR in_ptr$12[rbp], rax

; 1244 :                         ++out_ptr;

  002cf	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR out_ptr$13[rbp]
  002d6	48 83 c0 08	 add	 rax, 8
  002da	48 89 85 68 01
	00 00		 mov	 QWORD PTR out_ptr$13[rbp], rax

; 1245 :                         --count;

  002e1	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR count$14[rbp]
  002e8	48 ff c8	 dec	 rax
  002eb	48 89 85 88 01
	00 00		 mov	 QWORD PTR count$14[rbp], rax

; 1246 :                     }

  002f2	eb 93		 jmp	 SHORT $LN4@ToStringX
$LN5@ToStringX:

; 1247 :                     output_len = x_abs->UNIT_WORD_COUNT * (__UNIT_TYPE_BIT_COUNT / 4);

  002f4	48 8b 85 68 04
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  002fb	48 6b 40 18 10	 imul	 rax, QWORD PTR [rax+24], 16
  00300	48 89 85 c8 00
	00 00		 mov	 QWORD PTR output_len$8[rbp], rax

; 1248 :                     unsigned char* ptr = (unsigned char*)&temp_buf[x_abs->UNIT_WORD_COUNT] - 1;

  00307	48 8b 85 68 04
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  0030e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00312	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR temp_buf$7[rbp]
  00319	48 8d 44 c1 ff	 lea	 rax, QWORD PTR [rcx+rax*8-1]
  0031e	48 89 85 c8 01
	00 00		 mov	 QWORD PTR ptr$16[rbp], rax
$LN6@ToStringX:

; 1249 :                     while (ptr >= (unsigned char*)temp_buf)

  00325	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR temp_buf$7[rbp]
  0032c	48 39 85 c8 01
	00 00		 cmp	 QWORD PTR ptr$16[rbp], rax
  00333	0f 82 ed 00 00
	00		 jb	 $LN7@ToStringX

; 1250 :                     {
; 1251 :                         if ((ptr[0] >> 4) != 0xf || (ptr[0] & 0xf) < 0x8)

  00339	b8 01 00 00 00	 mov	 eax, 1
  0033e	48 6b c0 00	 imul	 rax, rax, 0
  00342	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR ptr$16[rbp]
  00349	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  0034d	c1 f8 04	 sar	 eax, 4
  00350	83 f8 0f	 cmp	 eax, 15
  00353	75 1c		 jne	 SHORT $LN21@ToStringX
  00355	b8 01 00 00 00	 mov	 eax, 1
  0035a	48 6b c0 00	 imul	 rax, rax, 0
  0035e	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR ptr$16[rbp]
  00365	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00369	83 e0 0f	 and	 eax, 15
  0036c	83 f8 08	 cmp	 eax, 8
  0036f	7d 05		 jge	 SHORT $LN20@ToStringX
$LN21@ToStringX:

; 1252 :                             break;

  00371	e9 b0 00 00 00	 jmp	 $LN7@ToStringX
$LN20@ToStringX:

; 1253 :                         // 最上位桁が 'F' で、かつ次の桁が '8'～'F'である場合
; 1254 :                         // ⇒最上位桁の 'F' を削除する
; 1255 :                         *ptr &= 0x0f;

  00376	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR ptr$16[rbp]
  0037d	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00380	83 e0 0f	 and	 eax, 15
  00383	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR ptr$16[rbp]
  0038a	88 01		 mov	 BYTE PTR [rcx], al

; 1256 :                         --output_len;

  0038c	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR output_len$8[rbp]
  00393	48 ff c8	 dec	 rax
  00396	48 89 85 c8 00
	00 00		 mov	 QWORD PTR output_len$8[rbp], rax

; 1257 : 
; 1258 :                         if (&ptr[-1] < (unsigned char*)temp_buf)

  0039d	b8 01 00 00 00	 mov	 eax, 1
  003a2	48 6b c0 ff	 imul	 rax, rax, -1
  003a6	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR ptr$16[rbp]
  003ad	48 03 c8	 add	 rcx, rax
  003b0	48 8b c1	 mov	 rax, rcx
  003b3	48 3b 85 a8 00
	00 00		 cmp	 rax, QWORD PTR temp_buf$7[rbp]
  003ba	73 02		 jae	 SHORT $LN22@ToStringX

; 1259 :                             break;

  003bc	eb 68		 jmp	 SHORT $LN7@ToStringX
$LN22@ToStringX:

; 1260 : 
; 1261 :                         if (ptr[0] == 0xf || (ptr[-1] >> 4) < 0x8)

  003be	b8 01 00 00 00	 mov	 eax, 1
  003c3	48 6b c0 00	 imul	 rax, rax, 0
  003c7	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR ptr$16[rbp]
  003ce	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  003d2	83 f8 0f	 cmp	 eax, 15
  003d5	74 1c		 je	 SHORT $LN24@ToStringX
  003d7	b8 01 00 00 00	 mov	 eax, 1
  003dc	48 6b c0 ff	 imul	 rax, rax, -1
  003e0	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR ptr$16[rbp]
  003e7	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  003eb	c1 f8 04	 sar	 eax, 4
  003ee	83 f8 08	 cmp	 eax, 8
  003f1	7d 02		 jge	 SHORT $LN23@ToStringX
$LN24@ToStringX:

; 1262 :                             break;

  003f3	eb 31		 jmp	 SHORT $LN7@ToStringX
$LN23@ToStringX:

; 1263 :                         // 最上位桁が 'F' で、かつ次の桁が '8'～'F'である場合
; 1264 :                         // ⇒最上位桁の 'F' を削除する
; 1265 :                         *ptr = 0;

  003f5	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR ptr$16[rbp]
  003fc	c6 00 00	 mov	 BYTE PTR [rax], 0

; 1266 :                         --output_len;

  003ff	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR output_len$8[rbp]
  00406	48 ff c8	 dec	 rax
  00409	48 89 85 c8 00
	00 00		 mov	 QWORD PTR output_len$8[rbp], rax

; 1267 : 
; 1268 :                         --ptr;

  00410	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR ptr$16[rbp]
  00417	48 ff c8	 dec	 rax
  0041a	48 89 85 c8 01
	00 00		 mov	 QWORD PTR ptr$16[rbp], rax

; 1269 :                     }

  00421	e9 ff fe ff ff	 jmp	 $LN6@ToStringX
$LN7@ToStringX:

; 1270 :                     filling_char = format_type == L'X' ? L'F' : L'f';

  00426	0f b7 85 70 04
	00 00		 movzx	 eax, WORD PTR format_type$[rbp]
  0042d	83 f8 58	 cmp	 eax, 88			; 00000058H
  00430	75 0e		 jne	 SHORT $LN28@ToStringX
  00432	b8 46 00 00 00	 mov	 eax, 70			; 00000046H
  00437	66 89 85 34 04
	00 00		 mov	 WORD PTR tv206[rbp], ax
  0043e	eb 0c		 jmp	 SHORT $LN29@ToStringX
$LN28@ToStringX:
  00440	b8 66 00 00 00	 mov	 eax, 102		; 00000066H
  00445	66 89 85 34 04
	00 00		 mov	 WORD PTR tv206[rbp], ax
$LN29@ToStringX:
  0044c	0f b7 85 34 04
	00 00		 movzx	 eax, WORD PTR tv206[rbp]
  00453	66 89 85 e4 00
	00 00		 mov	 WORD PTR filling_char$9[rbp], ax
$LN14@ToStringX:

; 1271 :                 }
; 1272 :                 root.CheckBlock(temp_buf);

  0045a	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR temp_buf$7[rbp]
  00461	48 8d 4d 48	 lea	 rcx, QWORD PTR root$5[rbp]
  00465	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 1273 : 
; 1274 :                 // この時点で 合計桁数は output_len だけあることが判明
; 1275 : 
; 1276 :                 // output_len 桁を格納するためのワード数を調べ、その隙間の桁数を leading_zero_digit_count とする
; 1277 : 
; 1278 :                 unsigned int leading_zero_digit_count = (unsigned int)(_DIVIDE_CEILING_UNIT(output_len, __UNIT_TYPE_BIT_COUNT / 4) * (__UNIT_TYPE_BIT_COUNT / 4) - output_len);

  0046a	ba 10 00 00 00	 mov	 edx, 16
  0046f	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR output_len$8[rbp]
  00476	e8 00 00 00 00	 call	 _DIVIDE_CEILING_UNIT
  0047b	48 6b c0 10	 imul	 rax, rax, 16
  0047f	48 2b 85 c8 00
	00 00		 sub	 rax, QWORD PTR output_len$8[rbp]
  00486	89 85 e4 01 00
	00		 mov	 DWORD PTR leading_zero_digit_count$17[rbp], eax

; 1279 : 
; 1280 : 
; 1281 :                 __UNIT_TYPE filling_digit_len; // 塗りつぶす上位桁の桁数
; 1282 :                 __UNIT_TYPE total_length; // 出力する合計の桁数
; 1283 :                 if (output_len < (__UNIT_TYPE)precision)

  0048c	48 63 85 78 04
	00 00		 movsxd	 rax, DWORD PTR precision$[rbp]
  00493	48 39 85 c8 00
	00 00		 cmp	 QWORD PTR output_len$8[rbp], rax
  0049a	73 25		 jae	 SHORT $LN25@ToStringX

; 1284 :                 {
; 1285 :                     filling_digit_len = precision - output_len;

  0049c	48 63 85 78 04
	00 00		 movsxd	 rax, DWORD PTR precision$[rbp]
  004a3	48 2b 85 c8 00
	00 00		 sub	 rax, QWORD PTR output_len$8[rbp]
  004aa	48 89 85 08 02
	00 00		 mov	 QWORD PTR filling_digit_len$18[rbp], rax

; 1286 :                     total_length = precision;

  004b1	48 63 85 78 04
	00 00		 movsxd	 rax, DWORD PTR precision$[rbp]
  004b8	48 89 85 28 02
	00 00		 mov	 QWORD PTR total_length$19[rbp], rax

; 1287 :                 }
; 1288 :                 else

  004bf	eb 19		 jmp	 SHORT $LN26@ToStringX
$LN25@ToStringX:

; 1289 :                 {
; 1290 :                     filling_digit_len = 0;

  004c1	48 c7 85 08 02
	00 00 00 00 00
	00		 mov	 QWORD PTR filling_digit_len$18[rbp], 0

; 1291 :                     total_length = output_len;

  004cc	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR output_len$8[rbp]
  004d3	48 89 85 28 02
	00 00		 mov	 QWORD PTR total_length$19[rbp], rax
$LN26@ToStringX:

; 1292 :                 }
; 1293 :                 writer.Write(filling_char, filling_digit_len);

  004da	4c 8b 85 08 02
	00 00		 mov	 r8, QWORD PTR filling_digit_len$18[rbp]
  004e1	0f b7 95 e4 00
	00 00		 movzx	 edx, WORD PTR filling_char$9[rbp]
  004e8	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  004ec	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write

; 1294 : 
; 1295 :                 __UNIT_TYPE* s_ptr = &temp_buf[_DIVIDE_CEILING_UNIT(output_len, __UNIT_TYPE_BIT_COUNT / 4) - 1];

  004f1	ba 10 00 00 00	 mov	 edx, 16
  004f6	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR output_len$8[rbp]
  004fd	e8 00 00 00 00	 call	 _DIVIDE_CEILING_UNIT
  00502	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR temp_buf$7[rbp]
  00509	48 8d 44 c1 f8	 lea	 rax, QWORD PTR [rcx+rax*8-8]
  0050e	48 89 85 48 02
	00 00		 mov	 QWORD PTR s_ptr$20[rbp], rax

; 1296 :                 wchar_t* digit_table = format_type == L'X' ? hexadecimal_upper_digits : hexadecimal_lower_digits;

  00515	0f b7 85 70 04
	00 00		 movzx	 eax, WORD PTR format_type$[rbp]
  0051c	83 f8 58	 cmp	 eax, 88			; 00000058H
  0051f	75 10		 jne	 SHORT $LN30@ToStringX
  00521	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?hexadecimal_upper_digits@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@3PA_WA
  00528	48 89 85 38 04
	00 00		 mov	 QWORD PTR tv231[rbp], rax
  0052f	eb 0e		 jmp	 SHORT $LN31@ToStringX
$LN30@ToStringX:
  00531	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?hexadecimal_lower_digits@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@3PA_WA
  00538	48 89 85 38 04
	00 00		 mov	 QWORD PTR tv231[rbp], rax
$LN31@ToStringX:
  0053f	48 8b 85 38 04
	00 00		 mov	 rax, QWORD PTR tv231[rbp]
  00546	48 89 85 68 02
	00 00		 mov	 QWORD PTR digit_table$21[rbp], rax

; 1297 :                 OutputHexNumberSequenceOneWord(*s_ptr, leading_zero_digit_count, digit_table, &writer);

  0054d	4c 8d 4d 08	 lea	 r9, QWORD PTR writer$[rbp]
  00551	4c 8b 85 68 02
	00 00		 mov	 r8, QWORD PTR digit_table$21[rbp]
  00558	8b 95 e4 01 00
	00		 mov	 edx, DWORD PTR leading_zero_digit_count$17[rbp]
  0055e	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR s_ptr$20[rbp]
  00565	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00568	e8 00 00 00 00	 call	 ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::OutputHexNumberSequenceOneWord

; 1298 :                 --s_ptr;

  0056d	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR s_ptr$20[rbp]
  00574	48 83 e8 08	 sub	 rax, 8
  00578	48 89 85 48 02
	00 00		 mov	 QWORD PTR s_ptr$20[rbp], rax
$LN8@ToStringX:

; 1299 :                 while (s_ptr >= temp_buf)

  0057f	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR temp_buf$7[rbp]
  00586	48 39 85 48 02
	00 00		 cmp	 QWORD PTR s_ptr$20[rbp], rax
  0058d	72 30		 jb	 SHORT $LN9@ToStringX

; 1300 :                 {
; 1301 :                     OutputHexNumberSequenceOneWord(*s_ptr, 0, digit_table, &writer);

  0058f	4c 8d 4d 08	 lea	 r9, QWORD PTR writer$[rbp]
  00593	4c 8b 85 68 02
	00 00		 mov	 r8, QWORD PTR digit_table$21[rbp]
  0059a	33 d2		 xor	 edx, edx
  0059c	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR s_ptr$20[rbp]
  005a3	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  005a6	e8 00 00 00 00	 call	 ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::OutputHexNumberSequenceOneWord

; 1302 :                     --s_ptr;

  005ab	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR s_ptr$20[rbp]
  005b2	48 83 e8 08	 sub	 rax, 8
  005b6	48 89 85 48 02
	00 00		 mov	 QWORD PTR s_ptr$20[rbp], rax

; 1303 :                 }

  005bd	eb c0		 jmp	 SHORT $LN8@ToStringX
$LN9@ToStringX:

; 1304 :                 return (writer.GetLength());

  005bf	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  005c3	e8 00 00 00 00	 call	 ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength
  005c8	48 89 85 08 04
	00 00		 mov	 QWORD PTR $T22[rbp], rax
  005cf	48 8d 4d 48	 lea	 rcx, QWORD PTR root$5[rbp]
  005d3	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  005d8	48 8b 85 08 04
	00 00		 mov	 rax, QWORD PTR $T22[rbp]
$LN1@ToStringX:

; 1305 :             }
; 1306 :         }

  005df	48 8b f8	 mov	 rdi, rax
  005e2	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  005e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData
  005ed	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  005f2	48 8b c7	 mov	 rax, rdi
  005f5	48 8d a5 48 04
	00 00		 lea	 rsp, QWORD PTR [rbp+1096]
  005fc	5f		 pop	 rdi
  005fd	5d		 pop	 rbp
  005fe	c3		 ret	 0
?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
writer$ = 8
root$5 = 72
temp_buf_bit_count$6 = 136
temp_buf$7 = 168
output_len$8 = 200
filling_char$9 = 228
temp_buf_word_count$10 = 264
ptr$11 = 296
in_ptr$12 = 328
out_ptr$13 = 360
count$14 = 392
carry$15 = 420
ptr$16 = 456
leading_zero_digit_count$17 = 484
filling_digit_len$18 = 520
total_length$19 = 552
s_ptr$20 = 584
digit_table$21 = 616
$T22 = 1032
$T23 = 1064
tv206 = 1076
tv231 = 1080
x_sign$ = 1120
x_abs$ = 1128
format_type$ = 1136
precision$ = 1144
format_option$ = 1152
buffer$ = 1160
buffer_size$ = 1168
?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$5[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
writer$ = 8
root$5 = 72
temp_buf_bit_count$6 = 136
temp_buf$7 = 168
output_len$8 = 200
filling_char$9 = 228
temp_buf_word_count$10 = 264
ptr$11 = 296
in_ptr$12 = 328
out_ptr$13 = 360
count$14 = 392
carry$15 = 420
ptr$16 = 456
leading_zero_digit_count$17 = 484
filling_digit_len$18 = 520
total_length$19 = 552
s_ptr$20 = 584
digit_table$21 = 616
$T22 = 1032
$T23 = 1064
tv206 = 1076
tv231 = 1080
x_sign$ = 1120
x_abs$ = 1128
format_type$ = 1136
precision$ = 1144
format_option$ = 1152
buffer$ = 1160
buffer_size$ = 1168
?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR root$5[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z
_TEXT	SEGMENT
count$ = 4
$T1 = 232
tv477 = 296
tv463 = 296
tv451 = 296
tv437 = 296
tv425 = 296
tv413 = 296
tv401 = 296
tv387 = 296
tv375 = 296
tv363 = 296
tv351 = 296
tv339 = 296
tv327 = 296
tv315 = 296
tv303 = 296
tv289 = 296
tv277 = 296
tv265 = 296
tv253 = 296
tv241 = 296
tv229 = 296
tv217 = 296
tv205 = 296
tv193 = 296
tv181 = 296
tv169 = 296
tv157 = 296
tv145 = 296
tv133 = 296
tv89 = 296
x$ = 336
skip_digit_len$ = 344
digit_table$ = 352
writer$ = 360
?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z PROC ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::OutputHexNumberSequenceOneWord, COMDAT

; 1121 :         {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1122 :             if (sizeof(__UNIT_TYPE) > sizeof(_UINT64_T))

  00044	33 c0		 xor	 eax, eax
  00046	85 c0		 test	 eax, eax
  00048	74 2d		 je	 SHORT $LN2@OutputHexN

; 1123 :             {
; 1124 :                 // 64bit を超える __UNIT_TYPE には未対応
; 1125 :                 // 対応するには以降のコーディングを見直す必要がある
; 1126 :                 throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_tostring.cpp;OutputHexNumberSequenceOneWord;1");

  0004a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1GE@NIEAHJGF@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@
  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  00058	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0005f	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006b	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00072	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@OutputHexN:

; 1127 :             }
; 1128 :             unsigned int count = __UNIT_TYPE_BIT_COUNT / 4;

  00077	c7 45 04 10 00
	00 00		 mov	 DWORD PTR count$[rbp], 16

; 1129 :             if (skip_digit_len > 0)

  0007e	83 bd 58 01 00
	00 00		 cmp	 DWORD PTR skip_digit_len$[rbp], 0
  00085	76 2e		 jbe	 SHORT $LN3@OutputHexN

; 1130 :             {
; 1131 :                 x = _ROTATE_L_UNIT(x, 4 * skip_digit_len);

  00087	8b 85 58 01 00
	00		 mov	 eax, DWORD PTR skip_digit_len$[rbp]
  0008d	c1 e0 02	 shl	 eax, 2
  00090	8b d0		 mov	 edx, eax
  00092	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  00099	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  0009e	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax

; 1132 :                 count -= skip_digit_len;

  000a5	8b 85 58 01 00
	00		 mov	 eax, DWORD PTR skip_digit_len$[rbp]
  000ab	8b 4d 04	 mov	 ecx, DWORD PTR count$[rbp]
  000ae	2b c8		 sub	 ecx, eax
  000b0	8b c1		 mov	 eax, ecx
  000b2	89 45 04	 mov	 DWORD PTR count$[rbp], eax
$LN3@OutputHexN:

; 1133 :             }
; 1134 :             if (count & 0x10)

  000b5	8b 45 04	 mov	 eax, DWORD PTR count$[rbp]
  000b8	83 e0 10	 and	 eax, 16
  000bb	85 c0		 test	 eax, eax
  000bd	0f 84 b0 04 00
	00		 je	 $LN4@OutputHexN

; 1135 :             {
; 1136 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000c3	ba 04 00 00 00	 mov	 edx, 4
  000c8	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  000cf	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  000d4	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  000db	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000e2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000e9	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  000f0	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  000f7	48 83 e0 0f	 and	 rax, 15
  000fb	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00102	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00106	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0010d	ff 95 28 01 00
	00		 call	 QWORD PTR tv89[rbp]

; 1137 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00113	ba 04 00 00 00	 mov	 edx, 4
  00118	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0011f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00124	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0012b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00132	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00135	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00139	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv133[rbp], rax
  00140	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00147	48 83 e0 0f	 and	 rax, 15
  0014b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00152	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00156	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0015d	ff 95 28 01 00
	00		 call	 QWORD PTR tv133[rbp]

; 1138 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00163	ba 04 00 00 00	 mov	 edx, 4
  00168	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0016f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00174	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0017b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00182	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00185	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00189	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv145[rbp], rax
  00190	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00197	48 83 e0 0f	 and	 rax, 15
  0019b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  001a2	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  001a6	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001ad	ff 95 28 01 00
	00		 call	 QWORD PTR tv145[rbp]

; 1139 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  001b3	ba 04 00 00 00	 mov	 edx, 4
  001b8	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  001bf	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  001c4	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  001cb	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  001d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001d5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001d9	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv157[rbp], rax
  001e0	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  001e7	48 83 e0 0f	 and	 rax, 15
  001eb	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  001f2	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  001f6	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001fd	ff 95 28 01 00
	00		 call	 QWORD PTR tv157[rbp]

; 1140 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00203	ba 04 00 00 00	 mov	 edx, 4
  00208	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0020f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00214	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0021b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00222	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00225	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00229	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv169[rbp], rax
  00230	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00237	48 83 e0 0f	 and	 rax, 15
  0023b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00242	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00246	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0024d	ff 95 28 01 00
	00		 call	 QWORD PTR tv169[rbp]

; 1141 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00253	ba 04 00 00 00	 mov	 edx, 4
  00258	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0025f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00264	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0026b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00272	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00275	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00279	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv181[rbp], rax
  00280	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00287	48 83 e0 0f	 and	 rax, 15
  0028b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00292	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00296	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0029d	ff 95 28 01 00
	00		 call	 QWORD PTR tv181[rbp]

; 1142 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002a3	ba 04 00 00 00	 mov	 edx, 4
  002a8	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  002af	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  002b4	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  002bb	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  002c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002c5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002c9	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv193[rbp], rax
  002d0	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  002d7	48 83 e0 0f	 and	 rax, 15
  002db	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  002e2	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  002e6	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002ed	ff 95 28 01 00
	00		 call	 QWORD PTR tv193[rbp]

; 1143 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002f3	ba 04 00 00 00	 mov	 edx, 4
  002f8	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  002ff	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00304	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0030b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00312	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00315	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00319	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv205[rbp], rax
  00320	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00327	48 83 e0 0f	 and	 rax, 15
  0032b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00332	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00336	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0033d	ff 95 28 01 00
	00		 call	 QWORD PTR tv205[rbp]

; 1144 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00343	ba 04 00 00 00	 mov	 edx, 4
  00348	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0034f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00354	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0035b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00362	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00365	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00369	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv217[rbp], rax
  00370	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00377	48 83 e0 0f	 and	 rax, 15
  0037b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00382	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00386	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0038d	ff 95 28 01 00
	00		 call	 QWORD PTR tv217[rbp]

; 1145 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00393	ba 04 00 00 00	 mov	 edx, 4
  00398	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0039f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  003a4	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  003ab	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  003b2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003b5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003b9	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv229[rbp], rax
  003c0	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  003c7	48 83 e0 0f	 and	 rax, 15
  003cb	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  003d2	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  003d6	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003dd	ff 95 28 01 00
	00		 call	 QWORD PTR tv229[rbp]

; 1146 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  003e3	ba 04 00 00 00	 mov	 edx, 4
  003e8	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  003ef	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  003f4	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  003fb	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00402	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00405	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00409	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv241[rbp], rax
  00410	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00417	48 83 e0 0f	 and	 rax, 15
  0041b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00422	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00426	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0042d	ff 95 28 01 00
	00		 call	 QWORD PTR tv241[rbp]

; 1147 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00433	ba 04 00 00 00	 mov	 edx, 4
  00438	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0043f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00444	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0044b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00452	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00455	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00459	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv253[rbp], rax
  00460	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00467	48 83 e0 0f	 and	 rax, 15
  0046b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00472	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00476	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0047d	ff 95 28 01 00
	00		 call	 QWORD PTR tv253[rbp]

; 1148 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00483	ba 04 00 00 00	 mov	 edx, 4
  00488	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0048f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00494	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0049b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  004a2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004a5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  004a9	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv265[rbp], rax
  004b0	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  004b7	48 83 e0 0f	 and	 rax, 15
  004bb	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  004c2	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  004c6	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  004cd	ff 95 28 01 00
	00		 call	 QWORD PTR tv265[rbp]

; 1149 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  004d3	ba 04 00 00 00	 mov	 edx, 4
  004d8	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  004df	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  004e4	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  004eb	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  004f2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004f5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  004f9	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  00500	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00507	48 83 e0 0f	 and	 rax, 15
  0050b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00512	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00516	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0051d	ff 95 28 01 00
	00		 call	 QWORD PTR tv277[rbp]

; 1150 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00523	ba 04 00 00 00	 mov	 edx, 4
  00528	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0052f	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00534	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0053b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00542	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00545	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00549	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv289[rbp], rax
  00550	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00557	48 83 e0 0f	 and	 rax, 15
  0055b	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00562	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00566	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0056d	ff 95 28 01 00
	00		 call	 QWORD PTR tv289[rbp]
$LN4@OutputHexN:

; 1151 :             }
; 1152 :             if (count & 0x8)

  00573	8b 45 04	 mov	 eax, DWORD PTR count$[rbp]
  00576	83 e0 08	 and	 eax, 8
  00579	85 c0		 test	 eax, eax
  0057b	0f 84 80 02 00
	00		 je	 $LN5@OutputHexN

; 1153 :             {
; 1154 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00581	ba 04 00 00 00	 mov	 edx, 4
  00586	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0058d	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00592	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00599	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  005a0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  005a3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  005a7	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv303[rbp], rax
  005ae	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  005b5	48 83 e0 0f	 and	 rax, 15
  005b9	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  005c0	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  005c4	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  005cb	ff 95 28 01 00
	00		 call	 QWORD PTR tv303[rbp]

; 1155 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  005d1	ba 04 00 00 00	 mov	 edx, 4
  005d6	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  005dd	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  005e2	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  005e9	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  005f0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  005f3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  005f7	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv315[rbp], rax
  005fe	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00605	48 83 e0 0f	 and	 rax, 15
  00609	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00610	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00614	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0061b	ff 95 28 01 00
	00		 call	 QWORD PTR tv315[rbp]

; 1156 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00621	ba 04 00 00 00	 mov	 edx, 4
  00626	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0062d	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00632	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00639	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00640	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00643	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00647	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv327[rbp], rax
  0064e	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00655	48 83 e0 0f	 and	 rax, 15
  00659	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00660	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00664	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0066b	ff 95 28 01 00
	00		 call	 QWORD PTR tv327[rbp]

; 1157 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00671	ba 04 00 00 00	 mov	 edx, 4
  00676	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0067d	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00682	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00689	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00690	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00693	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00697	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv339[rbp], rax
  0069e	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  006a5	48 83 e0 0f	 and	 rax, 15
  006a9	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  006b0	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  006b4	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  006bb	ff 95 28 01 00
	00		 call	 QWORD PTR tv339[rbp]

; 1158 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  006c1	ba 04 00 00 00	 mov	 edx, 4
  006c6	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  006cd	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  006d2	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  006d9	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  006e0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  006e3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  006e7	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv351[rbp], rax
  006ee	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  006f5	48 83 e0 0f	 and	 rax, 15
  006f9	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00700	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00704	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0070b	ff 95 28 01 00
	00		 call	 QWORD PTR tv351[rbp]

; 1159 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00711	ba 04 00 00 00	 mov	 edx, 4
  00716	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0071d	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00722	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00729	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00730	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00733	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00737	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv363[rbp], rax
  0073e	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00745	48 83 e0 0f	 and	 rax, 15
  00749	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00750	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00754	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0075b	ff 95 28 01 00
	00		 call	 QWORD PTR tv363[rbp]

; 1160 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00761	ba 04 00 00 00	 mov	 edx, 4
  00766	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0076d	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00772	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00779	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00780	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00783	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00787	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv375[rbp], rax
  0078e	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00795	48 83 e0 0f	 and	 rax, 15
  00799	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  007a0	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  007a4	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  007ab	ff 95 28 01 00
	00		 call	 QWORD PTR tv375[rbp]

; 1161 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  007b1	ba 04 00 00 00	 mov	 edx, 4
  007b6	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  007bd	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  007c2	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  007c9	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  007d0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  007d3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  007d7	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv387[rbp], rax
  007de	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  007e5	48 83 e0 0f	 and	 rax, 15
  007e9	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  007f0	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  007f4	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  007fb	ff 95 28 01 00
	00		 call	 QWORD PTR tv387[rbp]
$LN5@OutputHexN:

; 1162 :             }
; 1163 :             if (count & 0x4)

  00801	8b 45 04	 mov	 eax, DWORD PTR count$[rbp]
  00804	83 e0 04	 and	 eax, 4
  00807	85 c0		 test	 eax, eax
  00809	0f 84 40 01 00
	00		 je	 $LN6@OutputHexN

; 1164 :             {
; 1165 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0080f	ba 04 00 00 00	 mov	 edx, 4
  00814	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0081b	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00820	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00827	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0082e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00831	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00835	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv401[rbp], rax
  0083c	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00843	48 83 e0 0f	 and	 rax, 15
  00847	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  0084e	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00852	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00859	ff 95 28 01 00
	00		 call	 QWORD PTR tv401[rbp]

; 1166 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0085f	ba 04 00 00 00	 mov	 edx, 4
  00864	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0086b	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00870	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00877	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0087e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00881	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00885	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv413[rbp], rax
  0088c	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00893	48 83 e0 0f	 and	 rax, 15
  00897	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  0089e	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  008a2	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  008a9	ff 95 28 01 00
	00		 call	 QWORD PTR tv413[rbp]

; 1167 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  008af	ba 04 00 00 00	 mov	 edx, 4
  008b4	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  008bb	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  008c0	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  008c7	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  008ce	48 8b 00	 mov	 rax, QWORD PTR [rax]
  008d1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  008d5	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv425[rbp], rax
  008dc	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  008e3	48 83 e0 0f	 and	 rax, 15
  008e7	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  008ee	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  008f2	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  008f9	ff 95 28 01 00
	00		 call	 QWORD PTR tv425[rbp]

; 1168 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  008ff	ba 04 00 00 00	 mov	 edx, 4
  00904	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  0090b	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00910	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00917	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0091e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00921	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00925	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv437[rbp], rax
  0092c	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00933	48 83 e0 0f	 and	 rax, 15
  00937	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  0093e	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00942	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00949	ff 95 28 01 00
	00		 call	 QWORD PTR tv437[rbp]
$LN6@OutputHexN:

; 1169 :             }
; 1170 :             if (count & 0x2)

  0094f	8b 45 04	 mov	 eax, DWORD PTR count$[rbp]
  00952	83 e0 02	 and	 eax, 2
  00955	85 c0		 test	 eax, eax
  00957	0f 84 a0 00 00
	00		 je	 $LN7@OutputHexN

; 1171 :             {
; 1172 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0095d	ba 04 00 00 00	 mov	 edx, 4
  00962	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  00969	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  0096e	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00975	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0097c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0097f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00983	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv451[rbp], rax
  0098a	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00991	48 83 e0 0f	 and	 rax, 15
  00995	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  0099c	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  009a0	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  009a7	ff 95 28 01 00
	00		 call	 QWORD PTR tv451[rbp]

; 1173 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  009ad	ba 04 00 00 00	 mov	 edx, 4
  009b2	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  009b9	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  009be	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  009c5	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  009cc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  009cf	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  009d3	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv463[rbp], rax
  009da	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  009e1	48 83 e0 0f	 and	 rax, 15
  009e5	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  009ec	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  009f0	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  009f7	ff 95 28 01 00
	00		 call	 QWORD PTR tv463[rbp]
$LN7@OutputHexN:

; 1174 :             }
; 1175 :             if (count & 0x1)

  009fd	8b 45 04	 mov	 eax, DWORD PTR count$[rbp]
  00a00	83 e0 01	 and	 eax, 1
  00a03	85 c0		 test	 eax, eax
  00a05	74 50		 je	 SHORT $LN8@OutputHexN

; 1176 :             {
; 1177 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00a07	ba 04 00 00 00	 mov	 edx, 4
  00a0c	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  00a13	e8 00 00 00 00	 call	 _ROTATE_L_UNIT
  00a18	48 89 85 50 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00a1f	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00a26	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00a29	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00a2d	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv477[rbp], rax
  00a34	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00a3b	48 83 e0 0f	 and	 rax, 15
  00a3f	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR digit_table$[rbp]
  00a46	0f b7 14 41	 movzx	 edx, WORD PTR [rcx+rax*2]
  00a4a	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00a51	ff 95 28 01 00
	00		 call	 QWORD PTR tv477[rbp]
$LN8@OutputHexN:
$LN9@OutputHexN:

; 1178 :             }
; 1179 :         }

  00a57	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  00a5e	5f		 pop	 rdi
  00a5f	5d		 pop	 rbp
  00a60	c3		 ret	 0
?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z ENDP ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::OutputHexNumberSequenceOneWord
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
writer$ = 8
formatter$ = 72
x_sign$ = 352
x_abs$ = 360
format_type$ = 368
precision$ = 376
format_option$ = 384
buffer$ = 392
buffer_size$ = 400
?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP, COMDAT

; 1105 :         {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	0f b6 8c 24 88
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+392]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1106 :             StringWriter writer(buffer, buffer_size);

  00045	4c 8b 85 90 01
	00 00		 mov	 r8, QWORD PTR buffer_size$[rbp]
  0004c	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR buffer$[rbp]
  00053	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00057	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 1107 :             FormatterTypeP formatter(precision, format_option);

  0005c	4c 8b 85 80 01
	00 00		 mov	 r8, QWORD PTR format_option$[rbp]
  00063	8b 95 78 01 00
	00		 mov	 edx, DWORD PTR precision$[rbp]
  00069	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  0006d	e8 00 00 00 00	 call	 ??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatterTypeP

; 1108 :             formatter.Format(x_sign, x_abs, &writer);

  00072	4c 8d 4d 08	 lea	 r9, QWORD PTR writer$[rbp]
  00076	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR x_abs$[rbp]
  0007d	0f b6 95 60 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  00084	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  00088	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1109 :             return (writer.GetLength());

  0008d	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00091	e8 00 00 00 00	 call	 ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength

; 1110 :         }

  00096	48 8b f8	 mov	 rdi, rax
  00099	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData
  000a4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a9	48 8b c7	 mov	 rax, rdi
  000ac	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
writer$ = 8
formatter$ = 72
x_sign$ = 352
x_abs$ = 360
format_type$ = 368
precision$ = 376
format_option$ = 384
buffer$ = 392
buffer_size$ = 400
?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN, COMDAT

; 1096 :         {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	0f b6 8c 24 88
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+392]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1097 :             StringWriter writer(buffer, buffer_size);

  00045	4c 8b 85 90 01
	00 00		 mov	 r8, QWORD PTR buffer_size$[rbp]
  0004c	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR buffer$[rbp]
  00053	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00057	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 1098 :             FormatterTypeN formatter(precision, format_option);

  0005c	4c 8b 85 80 01
	00 00		 mov	 r8, QWORD PTR format_option$[rbp]
  00063	8b 95 78 01 00
	00		 mov	 edx, DWORD PTR precision$[rbp]
  00069	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  0006d	e8 00 00 00 00	 call	 ??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatterTypeN

; 1099 :             formatter.Format(x_sign, x_abs, &writer);

  00072	4c 8d 4d 08	 lea	 r9, QWORD PTR writer$[rbp]
  00076	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR x_abs$[rbp]
  0007d	0f b6 95 60 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  00084	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  00088	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1100 :             return (writer.GetLength());

  0008d	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00091	e8 00 00 00 00	 call	 ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength

; 1101 :         }

  00096	48 8b f8	 mov	 rdi, rax
  00099	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData
  000a4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a9	48 8b c7	 mov	 rax, rdi
  000ac	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
writer$ = 8
formatter$ = 72
x_sign$ = 352
x_abs$ = 360
format_type$ = 368
precision$ = 376
format_option$ = 384
buffer$ = 392
buffer_size$ = 400
?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF, COMDAT

; 1088 :         {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	0f b6 8c 24 88
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+392]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1089 :             StringWriter writer(buffer, buffer_size);

  00045	4c 8b 85 90 01
	00 00		 mov	 r8, QWORD PTR buffer_size$[rbp]
  0004c	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR buffer$[rbp]
  00053	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00057	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 1090 :             FormatterTypeF formatter(precision, format_option);

  0005c	4c 8b 85 80 01
	00 00		 mov	 r8, QWORD PTR format_option$[rbp]
  00063	8b 95 78 01 00
	00		 mov	 edx, DWORD PTR precision$[rbp]
  00069	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  0006d	e8 00 00 00 00	 call	 ??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatterTypeF

; 1091 :             formatter.Format(x_sign, x_abs, &writer);

  00072	4c 8d 4d 08	 lea	 r9, QWORD PTR writer$[rbp]
  00076	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR x_abs$[rbp]
  0007d	0f b6 95 60 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  00084	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  00088	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1092 :             return (writer.GetLength());

  0008d	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00091	e8 00 00 00 00	 call	 ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength

; 1093 :         }

  00096	48 8b f8	 mov	 rdi, rax
  00099	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData
  000a4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a9	48 8b c7	 mov	 rax, rdi
  000ac	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
writer$ = 8
formatter$ = 72
x_sign$ = 352
x_abs$ = 360
format_type$ = 368
precision$ = 376
format_option$ = 384
buffer$ = 392
buffer_size$ = 400
?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE, COMDAT

; 1080 :         {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	0f b6 8c 24 88
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+392]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1081 :             StringWriter writer(buffer, buffer_size);

  00045	4c 8b 85 90 01
	00 00		 mov	 r8, QWORD PTR buffer_size$[rbp]
  0004c	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR buffer$[rbp]
  00053	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00057	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 1082 :             FormatterTypeE formatter(format_type, precision, format_option);

  0005c	4c 8b 8d 80 01
	00 00		 mov	 r9, QWORD PTR format_option$[rbp]
  00063	44 8b 85 78 01
	00 00		 mov	 r8d, DWORD PTR precision$[rbp]
  0006a	0f b7 95 70 01
	00 00		 movzx	 edx, WORD PTR format_type$[rbp]
  00071	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  00075	e8 00 00 00 00	 call	 ??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatterTypeE

; 1083 :             formatter.Format(x_sign, x_abs, &writer);

  0007a	4c 8d 4d 08	 lea	 r9, QWORD PTR writer$[rbp]
  0007e	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR x_abs$[rbp]
  00085	0f b6 95 60 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  0008c	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  00090	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1084 :             return (writer.GetLength());

  00095	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00099	e8 00 00 00 00	 call	 ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength

; 1085 :         }

  0009e	48 8b f8	 mov	 rdi, rax
  000a1	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000a5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData
  000ac	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b1	48 8b c7	 mov	 rax, rdi
  000b4	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000bb	5f		 pop	 rdi
  000bc	5d		 pop	 rbp
  000bd	c3		 ret	 0
?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
writer$ = 8
formatter$ = 72
x_sign$ = 352
x_abs$ = 360
format_type$ = 368
precision$ = 376
format_option$ = 384
buffer$ = 392
buffer_size$ = 400
?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD, COMDAT

; 1072 :         {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	0f b6 8c 24 88
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+392]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1073 :             StringWriter writer(buffer, buffer_size);

  00045	4c 8b 85 90 01
	00 00		 mov	 r8, QWORD PTR buffer_size$[rbp]
  0004c	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR buffer$[rbp]
  00053	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00057	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 1074 :             FormatterTypeD formatter(precision, format_option);

  0005c	4c 8b 85 80 01
	00 00		 mov	 r8, QWORD PTR format_option$[rbp]
  00063	8b 95 78 01 00
	00		 mov	 edx, DWORD PTR precision$[rbp]
  00069	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  0006d	e8 00 00 00 00	 call	 ??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatterTypeD

; 1075 :             formatter.Format(x_sign, x_abs, &writer);

  00072	4c 8d 4d 08	 lea	 r9, QWORD PTR writer$[rbp]
  00076	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR x_abs$[rbp]
  0007d	0f b6 95 60 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  00084	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  00088	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1076 :             return (writer.GetLength());

  0008d	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00091	e8 00 00 00 00	 call	 ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength

; 1077 :         }

  00096	48 8b f8	 mov	 rdi, rax
  00099	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData
  000a4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a9	48 8b c7	 mov	 rax, rdi
  000ac	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
writer$ = 8
formatter$ = 72
x_sign$ = 352
x_abs$ = 360
format_type$ = 368
precision$ = 376
format_option$ = 384
buffer$ = 392
buffer_size$ = 400
?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC, COMDAT

; 1064 :         {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	0f b6 8c 24 88
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+392]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1065 :             StringWriter writer(buffer, buffer_size);

  00045	4c 8b 85 90 01
	00 00		 mov	 r8, QWORD PTR buffer_size$[rbp]
  0004c	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR buffer$[rbp]
  00053	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00057	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 1066 :             FormatterTypeC formatter(precision, format_option);

  0005c	4c 8b 85 80 01
	00 00		 mov	 r8, QWORD PTR format_option$[rbp]
  00063	8b 95 78 01 00
	00		 mov	 edx, DWORD PTR precision$[rbp]
  00069	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  0006d	e8 00 00 00 00	 call	 ??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatterTypeC

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  00072	4c 8d 4d 08	 lea	 r9, QWORD PTR writer$[rbp]
  00076	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR x_abs$[rbp]
  0007d	0f b6 95 60 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  00084	48 8d 4d 48	 lea	 rcx, QWORD PTR formatter$[rbp]
  00088	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1068 :             return (writer.GetLength());

  0008d	48 8d 4d 08	 lea	 rcx, QWORD PTR writer$[rbp]
  00091	e8 00 00 00 00	 call	 ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ; Palmtree::Math::Core::Internal::StringWriter::GetLength

; 1069 :         }

  00096	48 8b f8	 mov	 rdi, rax
  00099	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z$rtcFrameData
  000a4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a9	48 8b c7	 mov	 rax, rdi
  000ac	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv308 = 192
tv296 = 192
tv290 = 192
tv278 = 192
tv266 = 192
tv254 = 192
tv242 = 192
tv236 = 192
tv224 = 192
tv212 = 192
tv200 = 192
tv188 = 192
tv176 = 192
tv164 = 192
tv152 = 192
tv146 = 192
tv135 = 192
tv91 = 192
tv79 = 192
tv73 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteSuffix, COMDAT

; 995  :             {

$LN26:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 996  :                 if (x_sign >= 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	0f 8c d1 00 00
	00		 jl	 $LN6@WriteSuffi

; 997  :                 {
; 998  :                     switch (_number_format_info->Percent.PositivePattern)

  0004e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00059	8b 80 34 01 00
	00		 mov	 eax, DWORD PTR [rax+308]
  0005f	89 85 c0 00 00
	00		 mov	 DWORD PTR tv73[rbp], eax
  00065	83 bd c0 00 00
	00 01		 cmp	 DWORD PTR tv73[rbp], 1
  0006c	74 77		 je	 SHORT $LN9@WriteSuffi
  0006e	83 bd c0 00 00
	00 02		 cmp	 DWORD PTR tv73[rbp], 2
  00075	0f 84 9f 00 00
	00		 je	 $LN10@WriteSuffi
  0007b	83 bd c0 00 00
	00 03		 cmp	 DWORD PTR tv73[rbp], 3
  00082	0f 84 92 00 00
	00		 je	 $LN11@WriteSuffi

; 999  :                     {
; 1000 :                     case 0:
; 1001 :                     default:
; 1002 :                         writer->Write(L' ');

  00088	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0008f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00092	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00096	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  0009d	66 ba 20 00	 mov	 dx, 32			; 00000020H
  000a1	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000a8	ff 95 c0 00 00
	00		 call	 QWORD PTR tv79[rbp]

; 1003 :                         writer->Write(_number_format_info->PercentSymbol);

  000ae	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000b5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bb	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000c2	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c9	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000cd	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  000d3	48 8b d0	 mov	 rdx, rax
  000d6	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000dd	ff 95 c0 00 00
	00		 call	 QWORD PTR tv91[rbp]

; 1004 :                         break;

  000e3	eb 35		 jmp	 SHORT $LN2@WriteSuffi
$LN9@WriteSuffi:

; 1005 :                     case 1:
; 1006 :                         writer->Write(_number_format_info->PercentSymbol);

  000e5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000ec	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ef	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f2	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  000f9	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00100	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00104	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  0010a	48 8b d0	 mov	 rdx, rax
  0010d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00114	ff 95 c0 00 00
	00		 call	 QWORD PTR tv135[rbp]
$LN10@WriteSuffi:
$LN11@WriteSuffi:
$LN2@WriteSuffi:

; 1007 :                         break;
; 1008 :                     case 2:
; 1009 :                         break;
; 1010 :                     case 3:
; 1011 :                         break;
; 1012 :                     }
; 1013 :                 }
; 1014 :                 else

  0011a	e9 6d 03 00 00	 jmp	 $LN7@WriteSuffi
$LN6@WriteSuffi:

; 1015 :                 {
; 1016 :                     switch (_number_format_info->Percent.NegativePattern)

  0011f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00126	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0012a	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [rax+304]
  00130	89 85 c0 00 00
	00		 mov	 DWORD PTR tv146[rbp], eax
  00136	8b 85 c0 00 00
	00		 mov	 eax, DWORD PTR tv146[rbp]
  0013c	ff c8		 dec	 eax
  0013e	89 85 c0 00 00
	00		 mov	 DWORD PTR tv146[rbp], eax
  00144	83 bd c0 00 00
	00 0a		 cmp	 DWORD PTR tv146[rbp], 10
  0014b	77 1a		 ja	 SHORT $LN12@WriteSuffi
  0014d	48 63 85 c0 00
	00 00		 movsxd	 rax, DWORD PTR tv146[rbp]
  00154	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  0015b	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN25@WriteSuffi[rcx+rax*4]
  00162	48 03 c1	 add	 rax, rcx
  00165	ff e0		 jmp	 rax
$LN12@WriteSuffi:

; 1017 :                     {
; 1018 :                     case 0:
; 1019 :                     default:
; 1020 :                         writer->Write(L' ');

  00167	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0016e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00171	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00175	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  0017c	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00180	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00187	ff 95 c0 00 00
	00		 call	 QWORD PTR tv152[rbp]

; 1021 :                         writer->Write(_number_format_info->PercentSymbol);

  0018d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00194	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00197	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0019a	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv164[rbp], rax
  001a1	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001a8	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001ac	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  001b2	48 8b d0	 mov	 rdx, rax
  001b5	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001bc	ff 95 c0 00 00
	00		 call	 QWORD PTR tv164[rbp]

; 1022 :                         break;

  001c2	e9 c5 02 00 00	 jmp	 $LN4@WriteSuffi
$LN13@WriteSuffi:

; 1023 :                     case 1:
; 1024 :                         writer->Write(_number_format_info->PercentSymbol);

  001c7	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  001ce	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001d1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001d4	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv176[rbp], rax
  001db	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001e2	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001e6	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  001ec	48 8b d0	 mov	 rdx, rax
  001ef	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001f6	ff 95 c0 00 00
	00		 call	 QWORD PTR tv176[rbp]

; 1025 :                         break;

  001fc	e9 8b 02 00 00	 jmp	 $LN4@WriteSuffi
$LN14@WriteSuffi:

; 1026 :                     case 2:
; 1027 :                         break;

  00201	e9 86 02 00 00	 jmp	 $LN4@WriteSuffi
$LN15@WriteSuffi:

; 1028 :                     case 3:
; 1029 :                         break;

  00206	e9 81 02 00 00	 jmp	 $LN4@WriteSuffi
$LN16@WriteSuffi:

; 1030 :                     case 4:
; 1031 :                         writer->Write(_number_format_info->NegativeSign);

  0020b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00212	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00215	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00218	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv188[rbp], rax
  0021f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00226	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0022a	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00230	48 8b d0	 mov	 rdx, rax
  00233	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0023a	ff 95 c0 00 00
	00		 call	 QWORD PTR tv188[rbp]

; 1032 :                         break;

  00240	e9 47 02 00 00	 jmp	 $LN4@WriteSuffi
$LN17@WriteSuffi:

; 1033 :                     case 5:
; 1034 :                         writer->Write(_number_format_info->NegativeSign);

  00245	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0024c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0024f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00252	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv200[rbp], rax
  00259	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00260	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00264	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0026a	48 8b d0	 mov	 rdx, rax
  0026d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00274	ff 95 c0 00 00
	00		 call	 QWORD PTR tv200[rbp]

; 1035 :                         writer->Write(_number_format_info->PercentSymbol);

  0027a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00281	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00284	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00287	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv212[rbp], rax
  0028e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00295	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00299	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  0029f	48 8b d0	 mov	 rdx, rax
  002a2	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002a9	ff 95 c0 00 00
	00		 call	 QWORD PTR tv212[rbp]

; 1036 :                         break;

  002af	e9 d8 01 00 00	 jmp	 $LN4@WriteSuffi
$LN18@WriteSuffi:

; 1037 :                     case 6:
; 1038 :                         writer->Write(_number_format_info->PercentSymbol);

  002b4	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  002bb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002be	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002c1	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv224[rbp], rax
  002c8	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002cf	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  002d3	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  002d9	48 8b d0	 mov	 rdx, rax
  002dc	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002e3	ff 95 c0 00 00
	00		 call	 QWORD PTR tv224[rbp]

; 1039 :                         writer->Write(_number_format_info->NegativeSign);

  002e9	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  002f0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002f3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002f6	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv236[rbp], rax
  002fd	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00304	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00308	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0030e	48 8b d0	 mov	 rdx, rax
  00311	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00318	ff 95 c0 00 00
	00		 call	 QWORD PTR tv236[rbp]

; 1040 :                         break;

  0031e	e9 69 01 00 00	 jmp	 $LN4@WriteSuffi
$LN19@WriteSuffi:

; 1041 :                     case 7:
; 1042 :                         break;

  00323	e9 64 01 00 00	 jmp	 $LN4@WriteSuffi
$LN20@WriteSuffi:

; 1043 :                     case 8:
; 1044 :                         writer->Write(L' ');

  00328	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0032f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00332	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00336	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv242[rbp], rax
  0033d	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00341	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00348	ff 95 c0 00 00
	00		 call	 QWORD PTR tv242[rbp]

; 1045 :                         writer->Write(_number_format_info->PercentSymbol);

  0034e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00355	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00358	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0035b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv254[rbp], rax
  00362	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00369	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0036d	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  00373	48 8b d0	 mov	 rdx, rax
  00376	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0037d	ff 95 c0 00 00
	00		 call	 QWORD PTR tv254[rbp]

; 1046 :                         writer->Write(_number_format_info->NegativeSign);

  00383	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0038a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0038d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00390	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv266[rbp], rax
  00397	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0039e	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  003a2	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  003a8	48 8b d0	 mov	 rdx, rax
  003ab	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003b2	ff 95 c0 00 00
	00		 call	 QWORD PTR tv266[rbp]

; 1047 :                         break;

  003b8	e9 cf 00 00 00	 jmp	 $LN4@WriteSuffi
$LN21@WriteSuffi:

; 1048 :                     case 9:
; 1049 :                         writer->Write(_number_format_info->NegativeSign);

  003bd	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  003c4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003c7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ca	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv278[rbp], rax
  003d1	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003d8	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  003dc	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  003e2	48 8b d0	 mov	 rdx, rax
  003e5	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003ec	ff 95 c0 00 00
	00		 call	 QWORD PTR tv278[rbp]

; 1050 :                         break;

  003f2	e9 95 00 00 00	 jmp	 $LN4@WriteSuffi
$LN22@WriteSuffi:

; 1051 :                     case 10:
; 1052 :                         break;

  003f7	e9 90 00 00 00	 jmp	 $LN4@WriteSuffi
$LN23@WriteSuffi:

; 1053 :                     case 11:
; 1054 :                         writer->Write(_number_format_info->NegativeSign);

  003fc	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00403	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00406	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00409	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv290[rbp], rax
  00410	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00417	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0041b	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00421	48 8b d0	 mov	 rdx, rax
  00424	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0042b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv290[rbp]

; 1055 :                         writer->Write(L' ');

  00431	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00438	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0043b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0043f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv296[rbp], rax
  00446	66 ba 20 00	 mov	 dx, 32			; 00000020H
  0044a	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00451	ff 95 c0 00 00
	00		 call	 QWORD PTR tv296[rbp]

; 1056 :                         writer->Write(_number_format_info->PercentSymbol);

  00457	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0045e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00461	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00464	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv308[rbp], rax
  0046b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00472	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00476	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  0047c	48 8b d0	 mov	 rdx, rax
  0047f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00486	ff 95 c0 00 00
	00		 call	 QWORD PTR tv308[rbp]
$LN4@WriteSuffi:
$LN7@WriteSuffi:

; 1057 :                         break;
; 1058 :                     }
; 1059 :                 }
; 1060 :             }

  0048c	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00493	5f		 pop	 rdi
  00494	5d		 pop	 rbp
  00495	c3		 ret	 0
  00496	66 90		 npad	 2
$LN25@WriteSuffi:
  00498	00 00 00 00	 DD	 $LN13@WriteSuffi
  0049c	00 00 00 00	 DD	 $LN14@WriteSuffi
  004a0	00 00 00 00	 DD	 $LN15@WriteSuffi
  004a4	00 00 00 00	 DD	 $LN16@WriteSuffi
  004a8	00 00 00 00	 DD	 $LN17@WriteSuffi
  004ac	00 00 00 00	 DD	 $LN18@WriteSuffi
  004b0	00 00 00 00	 DD	 $LN19@WriteSuffi
  004b4	00 00 00 00	 DD	 $LN20@WriteSuffi
  004b8	00 00 00 00	 DD	 $LN21@WriteSuffi
  004bc	00 00 00 00	 DD	 $LN22@WriteSuffi
  004c0	00 00 00 00	 DD	 $LN23@WriteSuffi
?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence, COMDAT

; 977  :             {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 78 02
	00 00		 sub	 rsp, 632		; 00000278H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 9e 00 00 00	 mov	 ecx, 158		; 0000009eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR [rsp+664]
  00034	48 c7 85 28 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 978  :                 ResourceHolderUINT root;

  0004b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0004f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00054	90		 npad	 1

; 979  :                 ReverseStringReader r_reader(number_sequence_str);

  00055	48 8b 95 78 02
	00 00		 mov	 rdx, QWORD PTR number_sequence_str$[rbp]
  0005c	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  00060	e8 00 00 00 00	 call	 ??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::ReverseStringReader

; 980  :                 size_t work_buf_len = lstrlenW(number_sequence_str) * 2 + 1 + _precision + 1;

  00065	48 8b 8d 78 02
	00 00		 mov	 rcx, QWORD PTR number_sequence_str$[rbp]
  0006c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00072	48 8b 8d 70 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00079	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  0007c	8d 44 41 02	 lea	 eax, DWORD PTR [rcx+rax*2+2]
  00080	48 98		 cdqe
  00082	48 89 45 78	 mov	 QWORD PTR work_buf_len$[rbp], rax

; 981  :                 wchar_t* work_buf = root.AllocateString(work_buf_len);

  00086	48 8b 55 78	 mov	 rdx, QWORD PTR work_buf_len$[rbp]
  0008a	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0008e	e8 00 00 00 00	 call	 ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
  00093	48 89 85 98 00
	00 00		 mov	 QWORD PTR work_buf$[rbp], rax

; 982  :                 ReverseStringWriter r_writer(work_buf, work_buf_len);

  0009a	4c 8b 45 78	 mov	 r8, QWORD PTR work_buf_len$[rbp]
  0009e	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR work_buf$[rbp]
  000a5	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR r_writer$[rbp]
  000ac	e8 00 00 00 00	 call	 ??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter

; 983  :                 ThousandSeparatedStringWriter t_writer(&r_writer, _format_type, _number_format_info);

  000b1	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b8	4c 8b 48 20	 mov	 r9, QWORD PTR [rax+32]
  000bc	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c3	44 0f b7 40 14	 movzx	 r8d, WORD PTR [rax+20]
  000c8	48 8d 95 b8 00
	00 00		 lea	 rdx, QWORD PTR r_writer$[rbp]
  000cf	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  000d6	e8 00 00 00 00	 call	 ??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::ThousandSeparatedStringWriter
$LN2@FormatNumb:

; 984  :                 while (r_reader.PeekChar() != L'\0')

  000db	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  000df	e8 00 00 00 00	 call	 ?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar
  000e4	0f b7 c0	 movzx	 eax, ax
  000e7	85 c0		 test	 eax, eax
  000e9	74 1a		 je	 SHORT $LN3@FormatNumb

; 985  :                     t_writer.Write(r_reader.ReadChar());

  000eb	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  000ef	e8 00 00 00 00	 call	 ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ ; Palmtree::Math::Core::Internal::StringReader::ReadChar
  000f4	0f b7 d0	 movzx	 edx, ax
  000f7	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  000fe	e8 00 00 00 00	 call	 ?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
  00103	eb d6		 jmp	 SHORT $LN2@FormatNumb
$LN3@FormatNumb:

; 986  :                 writer->Write(t_writer.GetString());

  00105	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0010c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0010f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00112	48 89 85 38 02
	00 00		 mov	 QWORD PTR tv158[rbp], rax
  00119	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  00120	e8 00 00 00 00	 call	 ?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString
  00125	48 89 85 40 02
	00 00		 mov	 QWORD PTR tv156[rbp], rax
  0012c	48 8b 95 40 02
	00 00		 mov	 rdx, QWORD PTR tv156[rbp]
  00133	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0013a	ff 95 38 02 00
	00		 call	 QWORD PTR tv158[rbp]

; 987  :                 if (_precision > 0)

  00140	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00147	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0014b	7e 52		 jle	 SHORT $LN4@FormatNumb

; 988  :                 {
; 989  :                     writer->Write(_number_format_info->Currency.DecimalSeparator);

  0014d	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00154	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00157	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0015a	48 89 85 38 02
	00 00		 mov	 QWORD PTR tv177[rbp], rax
  00161	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00168	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0016c	48 83 c0 04	 add	 rax, 4
  00170	48 8b d0	 mov	 rdx, rax
  00173	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0017a	ff 95 38 02 00
	00		 call	 QWORD PTR tv177[rbp]

; 990  :                     writer->Write(L'0', _precision);

  00180	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00187	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  0018b	4c 8b c0	 mov	 r8, rax
  0018e	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00192	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00199	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
  0019e	90		 npad	 1
$LN4@FormatNumb:

; 991  :                 }
; 992  :             }

  0019f	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  001a3	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001a8	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcFrameData
  001b3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001b8	48 8d a5 58 02
	00 00		 lea	 rsp, QWORD PTR [rbp+600]
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv307 = 192
tv295 = 192
tv289 = 192
tv277 = 192
tv271 = 192
tv259 = 192
tv253 = 192
tv241 = 192
tv229 = 192
tv217 = 192
tv205 = 192
tv193 = 192
tv181 = 192
tv169 = 192
tv157 = 192
tv145 = 192
tv135 = 192
tv129 = 192
tv85 = 192
tv73 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WritePrefix, COMDAT

; 909  :             {

$LN26:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 910  :                 if (x_sign >= 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	0f 8c ca 00 00
	00		 jl	 $LN6@WritePrefi

; 911  :                 {
; 912  :                     switch (_number_format_info->Percent.PositivePattern)

  0004e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00059	8b 80 34 01 00
	00		 mov	 eax, DWORD PTR [rax+308]
  0005f	89 85 c0 00 00
	00		 mov	 DWORD PTR tv73[rbp], eax
  00065	83 bd c0 00 00
	00 02		 cmp	 DWORD PTR tv73[rbp], 2
  0006c	74 13		 je	 SHORT $LN10@WritePrefi
  0006e	83 bd c0 00 00
	00 03		 cmp	 DWORD PTR tv73[rbp], 3
  00075	74 41		 je	 SHORT $LN11@WritePrefi

; 913  :                     {
; 914  :                     case 0:
; 915  :                     default:
; 916  :                         break;

  00077	e9 97 00 00 00	 jmp	 $LN2@WritePrefi

; 917  :                     case 1:
; 918  :                         break;

  0007c	e9 92 00 00 00	 jmp	 $LN2@WritePrefi
$LN10@WritePrefi:

; 919  :                     case 2:
; 920  :                         writer->Write(_number_format_info->PercentSymbol);

  00081	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00088	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  00095	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000a0	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  000a6	48 8b d0	 mov	 rdx, rax
  000a9	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000b0	ff 95 c0 00 00
	00		 call	 QWORD PTR tv85[rbp]

; 921  :                         break;

  000b6	eb 5b		 jmp	 SHORT $LN2@WritePrefi
$LN11@WritePrefi:

; 922  :                     case 3:
; 923  :                         writer->Write(_number_format_info->PercentSymbol);

  000b8	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000bf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c5	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  000cc	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d3	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000d7	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  000dd	48 8b d0	 mov	 rdx, rax
  000e0	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000e7	ff 95 c0 00 00
	00		 call	 QWORD PTR tv129[rbp]

; 924  :                         writer->Write(L' ');

  000ed	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000f4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000fb	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  00102	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00106	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0010d	ff 95 c0 00 00
	00		 call	 QWORD PTR tv135[rbp]
$LN2@WritePrefi:

; 925  :                         break;
; 926  :                     }
; 927  :                 }
; 928  :                 else

  00113	e9 68 03 00 00	 jmp	 $LN7@WritePrefi
$LN6@WritePrefi:

; 929  :                 {
; 930  :                     switch (_number_format_info->Percent.NegativePattern)

  00118	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011f	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00123	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [rax+304]
  00129	89 85 c0 00 00
	00		 mov	 DWORD PTR tv145[rbp], eax
  0012f	8b 85 c0 00 00
	00		 mov	 eax, DWORD PTR tv145[rbp]
  00135	ff c8		 dec	 eax
  00137	89 85 c0 00 00
	00		 mov	 DWORD PTR tv145[rbp], eax
  0013d	83 bd c0 00 00
	00 0a		 cmp	 DWORD PTR tv145[rbp], 10
  00144	77 1a		 ja	 SHORT $LN12@WritePrefi
  00146	48 63 85 c0 00
	00 00		 movsxd	 rax, DWORD PTR tv145[rbp]
  0014d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  00154	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN25@WritePrefi[rcx+rax*4]
  0015b	48 03 c1	 add	 rax, rcx
  0015e	ff e0		 jmp	 rax
$LN12@WritePrefi:

; 931  :                     {
; 932  :                     case 0:
; 933  :                     default:
; 934  :                         writer->Write(_number_format_info->NegativeSign);

  00160	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00167	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0016a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0016d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv157[rbp], rax
  00174	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0017b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0017f	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00185	48 8b d0	 mov	 rdx, rax
  00188	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0018f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv157[rbp]

; 935  :                         break;

  00195	e9 e6 02 00 00	 jmp	 $LN4@WritePrefi
$LN13@WritePrefi:

; 936  :                     case 1:
; 937  :                         writer->Write(_number_format_info->NegativeSign);

  0019a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  001a1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001a4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001a7	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv169[rbp], rax
  001ae	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001b5	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001b9	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  001bf	48 8b d0	 mov	 rdx, rax
  001c2	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001c9	ff 95 c0 00 00
	00		 call	 QWORD PTR tv169[rbp]

; 938  :                         break;

  001cf	e9 ac 02 00 00	 jmp	 $LN4@WritePrefi
$LN14@WritePrefi:

; 939  :                     case 2:
; 940  :                         writer->Write(_number_format_info->NegativeSign);

  001d4	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  001db	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001de	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001e1	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv181[rbp], rax
  001e8	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001ef	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001f3	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  001f9	48 8b d0	 mov	 rdx, rax
  001fc	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00203	ff 95 c0 00 00
	00		 call	 QWORD PTR tv181[rbp]

; 941  :                         writer->Write(_number_format_info->PercentSymbol);

  00209	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00210	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00213	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00216	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv193[rbp], rax
  0021d	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00224	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00228	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  0022e	48 8b d0	 mov	 rdx, rax
  00231	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00238	ff 95 c0 00 00
	00		 call	 QWORD PTR tv193[rbp]

; 942  :                         break;

  0023e	e9 3d 02 00 00	 jmp	 $LN4@WritePrefi
$LN15@WritePrefi:

; 943  :                     case 3:
; 944  :                         writer->Write(_number_format_info->PercentSymbol);

  00243	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0024a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0024d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00250	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv205[rbp], rax
  00257	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0025e	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00262	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  00268	48 8b d0	 mov	 rdx, rax
  0026b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00272	ff 95 c0 00 00
	00		 call	 QWORD PTR tv205[rbp]

; 945  :                         writer->Write(_number_format_info->NegativeSign);

  00278	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0027f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00282	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00285	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv217[rbp], rax
  0028c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00293	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00297	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0029d	48 8b d0	 mov	 rdx, rax
  002a0	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002a7	ff 95 c0 00 00
	00		 call	 QWORD PTR tv217[rbp]

; 946  :                         break;

  002ad	e9 ce 01 00 00	 jmp	 $LN4@WritePrefi
$LN16@WritePrefi:

; 947  :                     case 4:
; 948  :                         writer->Write(_number_format_info->PercentSymbol);

  002b2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  002b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002bc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002bf	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv229[rbp], rax
  002c6	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002cd	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  002d1	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  002d7	48 8b d0	 mov	 rdx, rax
  002da	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002e1	ff 95 c0 00 00
	00		 call	 QWORD PTR tv229[rbp]

; 949  :                         break;

  002e7	e9 94 01 00 00	 jmp	 $LN4@WritePrefi
$LN17@WritePrefi:

; 950  :                     case 5:
; 951  :                         break;

  002ec	e9 8f 01 00 00	 jmp	 $LN4@WritePrefi
$LN18@WritePrefi:

; 952  :                     case 6:
; 953  :                         break;

  002f1	e9 8a 01 00 00	 jmp	 $LN4@WritePrefi
$LN19@WritePrefi:

; 954  :                     case 7:
; 955  :                         writer->Write(_number_format_info->NegativeSign);

  002f6	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  002fd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00300	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00303	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv241[rbp], rax
  0030a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00311	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00315	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0031b	48 8b d0	 mov	 rdx, rax
  0031e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00325	ff 95 c0 00 00
	00		 call	 QWORD PTR tv241[rbp]

; 956  :                         writer->Write(_number_format_info->PercentSymbol);

  0032b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00332	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00335	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00338	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv253[rbp], rax
  0033f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00346	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0034a	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  00350	48 8b d0	 mov	 rdx, rax
  00353	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0035a	ff 95 c0 00 00
	00		 call	 QWORD PTR tv253[rbp]

; 957  :                         writer->Write(L' ');

  00360	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00367	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0036a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0036e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv259[rbp], rax
  00375	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00379	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00380	ff 95 c0 00 00
	00		 call	 QWORD PTR tv259[rbp]

; 958  :                         break;

  00386	e9 f5 00 00 00	 jmp	 $LN4@WritePrefi
$LN20@WritePrefi:

; 959  :                     case 8:
; 960  :                         break;

  0038b	e9 f0 00 00 00	 jmp	 $LN4@WritePrefi
$LN21@WritePrefi:

; 961  :                     case 9:
; 962  :                         writer->Write(_number_format_info->PercentSymbol);

  00390	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00397	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0039a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0039d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv271[rbp], rax
  003a4	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003ab	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  003af	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  003b5	48 8b d0	 mov	 rdx, rax
  003b8	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003bf	ff 95 c0 00 00
	00		 call	 QWORD PTR tv271[rbp]

; 963  :                         writer->Write(L' ');

  003c5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  003cc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003cf	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003d3	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  003da	66 ba 20 00	 mov	 dx, 32			; 00000020H
  003de	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003e5	ff 95 c0 00 00
	00		 call	 QWORD PTR tv277[rbp]

; 964  :                         break;

  003eb	e9 90 00 00 00	 jmp	 $LN4@WritePrefi
$LN22@WritePrefi:

; 965  :                     case 10:
; 966  :                         writer->Write(_number_format_info->PercentSymbol);

  003f0	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  003f7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003fa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003fd	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv289[rbp], rax
  00404	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0040b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0040f	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  00415	48 8b d0	 mov	 rdx, rax
  00418	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0041f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv289[rbp]

; 967  :                         writer->Write(L' ');

  00425	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0042c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0042f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00433	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv295[rbp], rax
  0043a	66 ba 20 00	 mov	 dx, 32			; 00000020H
  0043e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00445	ff 95 c0 00 00
	00		 call	 QWORD PTR tv295[rbp]

; 968  :                         writer->Write(_number_format_info->NegativeSign);

  0044b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00452	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00455	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00458	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv307[rbp], rax
  0045f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00466	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0046a	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00470	48 8b d0	 mov	 rdx, rax
  00473	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0047a	ff 95 c0 00 00
	00		 call	 QWORD PTR tv307[rbp]
$LN23@WritePrefi:
$LN4@WritePrefi:
$LN7@WritePrefi:

; 969  :                         break;
; 970  :                     case 11:
; 971  :                         break;
; 972  :                     }
; 973  :                 }
; 974  :             }

  00480	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00487	5f		 pop	 rdi
  00488	5d		 pop	 rbp
  00489	c3		 ret	 0
  0048a	66 90		 npad	 2
$LN25@WritePrefi:
  0048c	00 00 00 00	 DD	 $LN13@WritePrefi
  00490	00 00 00 00	 DD	 $LN14@WritePrefi
  00494	00 00 00 00	 DD	 $LN15@WritePrefi
  00498	00 00 00 00	 DD	 $LN16@WritePrefi
  0049c	00 00 00 00	 DD	 $LN17@WritePrefi
  004a0	00 00 00 00	 DD	 $LN18@WritePrefi
  004a4	00 00 00 00	 DD	 $LN19@WritePrefi
  004a8	00 00 00 00	 DD	 $LN20@WritePrefi
  004ac	00 00 00 00	 DD	 $LN21@WritePrefi
  004b0	00 00 00 00	 DD	 $LN22@WritePrefi
  004b4	00 00 00 00	 DD	 $LN23@WritePrefi
?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WritePrefix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
_TEXT	SEGMENT
root$ = 8
x2_abs$ = 72
$T4 = 296
this$ = 352
x_abs$ = 360
writer$ = 368
?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally, COMDAT

; 901  :             {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00034	48 c7 85 28 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T4[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 902  :                 ResourceHolderUINT root;

  0004b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0004f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00054	90		 npad	 1

; 903  :                 NUMBER_HEADER* x2_abs = PMC_Multiply_X_I_Imp(x_abs, 100);

  00055	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  0005a	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR x_abs$[rbp]
  00061	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  00066	48 89 45 48	 mov	 QWORD PTR x2_abs$[rbp], rax

; 904  :                 root.HookNumber(x2_abs);

  0006a	48 8b 55 48	 mov	 rdx, QWORD PTR x2_abs$[rbp]
  0006e	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00072	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 905  :                 Formatter::FormatInternally(x2_abs, writer);

  00077	4c 8b 85 70 01
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  0007e	48 8b 55 48	 mov	 rdx, QWORD PTR x2_abs$[rbp]
  00082	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00089	e8 00 00 00 00	 call	 ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
  0008e	90		 npad	 1

; 906  :             }

  0008f	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00093	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00098	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000af	5f		 pop	 rdi
  000b0	5d		 pop	 rbp
  000b1	c3		 ret	 0
?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
x2_abs$ = 72
$T4 = 296
this$ = 352
x_abs$ = 360
writer$ = 368
?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
x2_abs$ = 72
$T4 = 296
this$ = 352
x_abs$ = 360
writer$ = 368
?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv88 = 192
tv69 = 192
this$ = 240
writer$ = 248
?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteZeroValue, COMDAT

; 891  :             {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 892  :                 writer->Write(L'0');

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00050	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00054	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0005b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv69[rbp]

; 893  :                 if (_precision > 0)

  00061	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0006c	7e 51		 jle	 SHORT $LN2@WriteZeroV

; 894  :                 {
; 895  :                     writer->Write(_number_format_info->Currency.DecimalSeparator);

  0006e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  00082	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00089	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008d	48 83 c0 04	 add	 rax, 4
  00091	48 8b d0	 mov	 rdx, rax
  00094	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0009b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv88[rbp]

; 896  :                     writer->Write(L'0', _precision);

  000a1	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a8	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  000ac	4c 8b c0	 mov	 r8, rax
  000af	66 ba 30 00	 mov	 dx, 48			; 00000030H
  000b3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000ba	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
$LN2@WriteZeroV:

; 897  :                 }
; 898  :             }

  000bf	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 224
?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::GetDefaultPrecisionValue, COMDAT

; 886  :             {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 887  :                 return (_number_format_info->Currency.DecimalDigits);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00041	8b 00		 mov	 eax, DWORD PTR [rax]

; 888  :             }

  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 224
precision$ = 232
number_format_info$ = 240
??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatterTypeP, COMDAT

; 881  :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 880  :                 : Formatter(L'P', precision, number_format_info)

  0003f	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR number_format_info$[rbp]
  00046	44 8b 85 e8 00
	00 00		 mov	 r8d, DWORD PTR precision$[rbp]
  0004d	66 ba 50 00	 mov	 dx, 80			; 00000050H
  00051	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter

; 881  :             {

  0005d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 882  :             }

  0006e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007c	5f		 pop	 rdi
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatterTypeP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv141 = 192
tv129 = 192
tv91 = 192
tv79 = 192
tv73 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteSuffix, COMDAT

; 847  :             {

$LN12:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 848  :                 if (x_sign >= 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	7c 05		 jl	 SHORT $LN4@WriteSuffi

; 849  :                 {
; 850  :                 }
; 851  :                 else

  0004a	e9 f8 00 00 00	 jmp	 $LN5@WriteSuffi
$LN4@WriteSuffi:

; 852  :                 {
; 853  :                     switch (_number_format_info->Currency.NegativePattern)

  0004f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0005a	8b 40 60	 mov	 eax, DWORD PTR [rax+96]
  0005d	89 85 c0 00 00
	00		 mov	 DWORD PTR tv73[rbp], eax
  00063	83 bd c0 00 00
	00 00		 cmp	 DWORD PTR tv73[rbp], 0
  0006a	74 14		 je	 SHORT $LN6@WriteSuffi
  0006c	83 bd c0 00 00
	00 03		 cmp	 DWORD PTR tv73[rbp], 3
  00073	74 40		 je	 SHORT $LN9@WriteSuffi
  00075	83 bd c0 00 00
	00 04		 cmp	 DWORD PTR tv73[rbp], 4
  0007c	74 6e		 je	 SHORT $LN10@WriteSuffi
  0007e	eb 2b		 jmp	 SHORT $LN7@WriteSuffi
$LN6@WriteSuffi:

; 854  :                     {
; 855  :                     case 0:
; 856  :                         writer->Write(L')');

  00080	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00087	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00095	66 ba 29 00	 mov	 dx, 41			; 00000029H
  00099	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000a0	ff 95 c0 00 00
	00		 call	 QWORD PTR tv79[rbp]

; 857  :                         break;

  000a6	e9 9c 00 00 00	 jmp	 $LN2@WriteSuffi
$LN7@WriteSuffi:

; 858  :                     case 1:
; 859  :                     default:
; 860  :                         break;

  000ab	e9 97 00 00 00	 jmp	 $LN2@WriteSuffi

; 861  :                     case 2:
; 862  :                         break;

  000b0	e9 92 00 00 00	 jmp	 $LN2@WriteSuffi
$LN9@WriteSuffi:

; 863  :                     case 3:
; 864  :                         writer->Write(_number_format_info->NegativeSign);

  000b5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000bc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c2	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000c9	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d0	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000d4	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  000da	48 8b d0	 mov	 rdx, rax
  000dd	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000e4	ff 95 c0 00 00
	00		 call	 QWORD PTR tv91[rbp]

; 865  :                         break;

  000ea	eb 5b		 jmp	 SHORT $LN2@WriteSuffi
$LN10@WriteSuffi:

; 866  :                     case 4:
; 867  :                         writer->Write(L' ');

  000ec	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000f3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000fa	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  00101	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00105	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0010c	ff 95 c0 00 00
	00		 call	 QWORD PTR tv129[rbp]

; 868  :                         writer->Write(_number_format_info->NegativeSign);

  00112	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00119	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0011c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0011f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv141[rbp], rax
  00126	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0012d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00131	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00137	48 8b d0	 mov	 rdx, rax
  0013a	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00141	ff 95 c0 00 00
	00		 call	 QWORD PTR tv141[rbp]
$LN2@WriteSuffi:
$LN5@WriteSuffi:

; 869  :                         break;
; 870  :                     }
; 871  :                 }
; 872  :             }

  00147	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0014e	5f		 pop	 rdi
  0014f	5d		 pop	 rbp
  00150	c3		 ret	 0
?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence, COMDAT

; 829  :             {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 78 02
	00 00		 sub	 rsp, 632		; 00000278H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 9e 00 00 00	 mov	 ecx, 158		; 0000009eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR [rsp+664]
  00034	48 c7 85 28 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 830  :                 ResourceHolderUINT root;

  0004b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0004f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00054	90		 npad	 1

; 831  :                 ReverseStringReader r_reader(number_sequence_str);

  00055	48 8b 95 78 02
	00 00		 mov	 rdx, QWORD PTR number_sequence_str$[rbp]
  0005c	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  00060	e8 00 00 00 00	 call	 ??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::ReverseStringReader

; 832  :                 size_t work_buf_len = lstrlenW(number_sequence_str) * 2 + 1 + _precision + 1;

  00065	48 8b 8d 78 02
	00 00		 mov	 rcx, QWORD PTR number_sequence_str$[rbp]
  0006c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00072	48 8b 8d 70 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00079	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  0007c	8d 44 41 02	 lea	 eax, DWORD PTR [rcx+rax*2+2]
  00080	48 98		 cdqe
  00082	48 89 45 78	 mov	 QWORD PTR work_buf_len$[rbp], rax

; 833  :                 wchar_t* work_buf = root.AllocateString(work_buf_len);

  00086	48 8b 55 78	 mov	 rdx, QWORD PTR work_buf_len$[rbp]
  0008a	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0008e	e8 00 00 00 00	 call	 ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
  00093	48 89 85 98 00
	00 00		 mov	 QWORD PTR work_buf$[rbp], rax

; 834  :                 ReverseStringWriter r_writer(work_buf, work_buf_len);

  0009a	4c 8b 45 78	 mov	 r8, QWORD PTR work_buf_len$[rbp]
  0009e	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR work_buf$[rbp]
  000a5	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR r_writer$[rbp]
  000ac	e8 00 00 00 00	 call	 ??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter

; 835  :                 ThousandSeparatedStringWriter t_writer(&r_writer, _format_type, _number_format_info);

  000b1	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b8	4c 8b 48 20	 mov	 r9, QWORD PTR [rax+32]
  000bc	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c3	44 0f b7 40 14	 movzx	 r8d, WORD PTR [rax+20]
  000c8	48 8d 95 b8 00
	00 00		 lea	 rdx, QWORD PTR r_writer$[rbp]
  000cf	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  000d6	e8 00 00 00 00	 call	 ??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::ThousandSeparatedStringWriter
$LN2@FormatNumb:

; 836  :                 while (r_reader.PeekChar() != L'\0')

  000db	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  000df	e8 00 00 00 00	 call	 ?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar
  000e4	0f b7 c0	 movzx	 eax, ax
  000e7	85 c0		 test	 eax, eax
  000e9	74 1a		 je	 SHORT $LN3@FormatNumb

; 837  :                     t_writer.Write(r_reader.ReadChar());

  000eb	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  000ef	e8 00 00 00 00	 call	 ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ ; Palmtree::Math::Core::Internal::StringReader::ReadChar
  000f4	0f b7 d0	 movzx	 edx, ax
  000f7	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  000fe	e8 00 00 00 00	 call	 ?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
  00103	eb d6		 jmp	 SHORT $LN2@FormatNumb
$LN3@FormatNumb:

; 838  :                 writer->Write(t_writer.GetString());

  00105	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0010c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0010f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00112	48 89 85 38 02
	00 00		 mov	 QWORD PTR tv158[rbp], rax
  00119	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  00120	e8 00 00 00 00	 call	 ?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString
  00125	48 89 85 40 02
	00 00		 mov	 QWORD PTR tv156[rbp], rax
  0012c	48 8b 95 40 02
	00 00		 mov	 rdx, QWORD PTR tv156[rbp]
  00133	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0013a	ff 95 38 02 00
	00		 call	 QWORD PTR tv158[rbp]

; 839  :                 if (_precision > 0)

  00140	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00147	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0014b	7e 52		 jle	 SHORT $LN4@FormatNumb

; 840  :                 {
; 841  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  0014d	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00154	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00157	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0015a	48 89 85 38 02
	00 00		 mov	 QWORD PTR tv177[rbp], rax
  00161	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00168	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0016c	48 83 c0 6c	 add	 rax, 108		; 0000006cH
  00170	48 8b d0	 mov	 rdx, rax
  00173	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0017a	ff 95 38 02 00
	00		 call	 QWORD PTR tv177[rbp]

; 842  :                     writer->Write(L'0', _precision);

  00180	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00187	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  0018b	4c 8b c0	 mov	 r8, rax
  0018e	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00192	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00199	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
  0019e	90		 npad	 1
$LN4@FormatNumb:

; 843  :                 }
; 844  :             }

  0019f	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  001a3	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001a8	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcFrameData
  001b3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001b8	48 8d a5 58 02
	00 00		 lea	 rsp, QWORD PTR [rbp+600]
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv141 = 192
tv135 = 192
tv91 = 192
tv79 = 192
tv73 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WritePrefix, COMDAT

; 801  :             {

$LN12:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 802  :                 if (x_sign >= 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	7c 05		 jl	 SHORT $LN4@WritePrefi

; 803  :                 {
; 804  :                 }
; 805  :                 else

  0004a	e9 02 01 00 00	 jmp	 $LN5@WritePrefi
$LN4@WritePrefi:

; 806  :                 {
; 807  :                     switch (_number_format_info->Number.NegativePattern)

  0004f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0005a	8b 80 c8 00 00
	00		 mov	 eax, DWORD PTR [rax+200]
  00060	89 85 c0 00 00
	00		 mov	 DWORD PTR tv73[rbp], eax
  00066	83 bd c0 00 00
	00 00		 cmp	 DWORD PTR tv73[rbp], 0
  0006d	74 25		 je	 SHORT $LN6@WritePrefi
  0006f	83 bd c0 00 00
	00 02		 cmp	 DWORD PTR tv73[rbp], 2
  00076	74 7e		 je	 SHORT $LN8@WritePrefi
  00078	83 bd c0 00 00
	00 03		 cmp	 DWORD PTR tv73[rbp], 3
  0007f	0f 84 cc 00 00
	00		 je	 $LN9@WritePrefi
  00085	83 bd c0 00 00
	00 04		 cmp	 DWORD PTR tv73[rbp], 4
  0008c	0f 84 bf 00 00
	00		 je	 $LN10@WritePrefi
  00092	eb 2b		 jmp	 SHORT $LN7@WritePrefi
$LN6@WritePrefi:

; 808  :                     {
; 809  :                     case 0:
; 810  :                         writer->Write(L'(');

  00094	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a2	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  000a9	66 ba 28 00	 mov	 dx, 40			; 00000028H
  000ad	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000b4	ff 95 c0 00 00
	00		 call	 QWORD PTR tv79[rbp]

; 811  :                         break;

  000ba	e9 92 00 00 00	 jmp	 $LN2@WritePrefi
$LN7@WritePrefi:

; 812  :                     case 1:
; 813  :                     default:
; 814  :                         writer->Write(_number_format_info->NegativeSign);

  000bf	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000c6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000cc	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000d3	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000da	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000de	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  000e4	48 8b d0	 mov	 rdx, rax
  000e7	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000ee	ff 95 c0 00 00
	00		 call	 QWORD PTR tv91[rbp]

; 815  :                         break;

  000f4	eb 5b		 jmp	 SHORT $LN2@WritePrefi
$LN8@WritePrefi:

; 816  :                     case 2:
; 817  :                         writer->Write(_number_format_info->NegativeSign);

  000f6	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000fd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00100	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00103	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  0010a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00111	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00115	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0011b	48 8b d0	 mov	 rdx, rax
  0011e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00125	ff 95 c0 00 00
	00		 call	 QWORD PTR tv135[rbp]

; 818  :                         writer->Write(L' ');

  0012b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00132	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00135	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00139	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv141[rbp], rax
  00140	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00144	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0014b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv141[rbp]
$LN9@WritePrefi:
$LN10@WritePrefi:
$LN2@WritePrefi:
$LN5@WritePrefi:

; 819  :                         break;
; 820  :                     case 3:
; 821  :                         break;
; 822  :                     case 4:
; 823  :                         break;
; 824  :                     }
; 825  :                 }
; 826  :             }

  00151	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00158	5f		 pop	 rdi
  00159	5d		 pop	 rbp
  0015a	c3		 ret	 0
?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WritePrefix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv88 = 192
tv69 = 192
this$ = 240
writer$ = 248
?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteZeroValue, COMDAT

; 791  :             {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 792  :                 writer->Write(L'0');

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00050	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00054	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0005b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv69[rbp]

; 793  :                 if (_precision > 0)

  00061	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0006c	7e 51		 jle	 SHORT $LN2@WriteZeroV

; 794  :                 {
; 795  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  0006e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  00082	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00089	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008d	48 83 c0 6c	 add	 rax, 108		; 0000006cH
  00091	48 8b d0	 mov	 rdx, rax
  00094	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0009b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv88[rbp]

; 796  :                     writer->Write(L'0', _precision);

  000a1	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a8	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  000ac	4c 8b c0	 mov	 r8, rax
  000af	66 ba 30 00	 mov	 dx, 48			; 00000030H
  000b3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000ba	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
$LN2@WriteZeroV:

; 797  :                 }
; 798  :             }

  000bf	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 224
?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::GetDefaultPrecisionValue, COMDAT

; 786  :             {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 787  :                 return (_number_format_info->Number.DecimalDigits);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00041	8b 40 68	 mov	 eax, DWORD PTR [rax+104]

; 788  :             }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 224
precision$ = 232
number_format_info$ = 240
??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatterTypeN, COMDAT

; 781  :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 780  :                 : Formatter(L'N', precision, number_format_info)

  0003f	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR number_format_info$[rbp]
  00046	44 8b 85 e8 00
	00 00		 mov	 r8d, DWORD PTR precision$[rbp]
  0004d	66 ba 4e 00	 mov	 dx, 78			; 0000004eH
  00051	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter

; 781  :             {

  0005d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 782  :             }

  0006e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007c	5f		 pop	 rdi
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatterTypeN
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 224
x_sign$ = 232
writer$ = 240
?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteSuffix, COMDAT

; 771  :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 772  :             }

  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv88 = 192
tv69 = 192
this$ = 240
number_sequence_str$ = 248
writer$ = 256
?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatNumberSequence, COMDAT

; 761  :             {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 762  :                 writer->Write(number_sequence_str);

  00040	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00054	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR number_sequence_str$[rbp]
  0005b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00062	ff 95 c0 00 00
	00		 call	 QWORD PTR tv69[rbp]

; 763  :                 if (_precision > 0)

  00068	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006f	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  00073	7e 51		 jle	 SHORT $LN2@FormatNumb

; 764  :                 {
; 765  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  00075	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0007c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00082	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  00089	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00090	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00094	48 83 c0 6c	 add	 rax, 108		; 0000006cH
  00098	48 8b d0	 mov	 rdx, rax
  0009b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000a2	ff 95 c0 00 00
	00		 call	 QWORD PTR tv88[rbp]

; 766  :                     writer->Write(L'0', _precision);

  000a8	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000af	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  000b3	4c 8b c0	 mov	 r8, rax
  000b6	66 ba 30 00	 mov	 dx, 48			; 00000030H
  000ba	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000c1	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
$LN2@FormatNumb:

; 767  :                 }
; 768  :             }

  000c6	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000cd	5f		 pop	 rdi
  000ce	5d		 pop	 rbp
  000cf	c3		 ret	 0
?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatNumberSequence
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv77 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WritePrefix, COMDAT

; 755  :             {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 756  :                 if (x_sign < 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	7d 35		 jge	 SHORT $LN2@WritePrefi

; 757  :                     writer->Write(_number_format_info->NegativeSign);

  0004a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  0005e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00069	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0006f	48 8b d0	 mov	 rdx, rax
  00072	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00079	ff 95 c0 00 00
	00		 call	 QWORD PTR tv77[rbp]
$LN2@WritePrefi:

; 758  :             }

  0007f	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00086	5f		 pop	 rdi
  00087	5d		 pop	 rbp
  00088	c3		 ret	 0
?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WritePrefix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv88 = 192
tv69 = 192
this$ = 240
writer$ = 248
?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteZeroValue, COMDAT

; 745  :             {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 746  :                 writer->Write(L'0');

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00050	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00054	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0005b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv69[rbp]

; 747  :                 if (_precision > 0)

  00061	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0006c	7e 51		 jle	 SHORT $LN2@WriteZeroV

; 748  :                 {
; 749  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  0006e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  00082	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00089	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008d	48 83 c0 6c	 add	 rax, 108		; 0000006cH
  00091	48 8b d0	 mov	 rdx, rax
  00094	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0009b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv88[rbp]

; 750  :                     writer->Write(L'0', _precision);

  000a1	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a8	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  000ac	4c 8b c0	 mov	 r8, rax
  000af	66 ba 30 00	 mov	 dx, 48			; 00000030H
  000b3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000ba	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
$LN2@WriteZeroV:

; 751  :                 }
; 752  :             }

  000bf	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 224
?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::GetDefaultPrecisionValue, COMDAT

; 740  :             {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 741  :                 return (_number_format_info->Number.DecimalDigits);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00041	8b 40 68	 mov	 eax, DWORD PTR [rax+104]

; 742  :             }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 224
precision$ = 232
number_format_info$ = 240
??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatterTypeF, COMDAT

; 735  :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 734  :                 : Formatter(L'F', precision, number_format_info)

  0003f	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR number_format_info$[rbp]
  00046	44 8b 85 e8 00
	00 00		 mov	 r8d, DWORD PTR precision$[rbp]
  0004d	66 ba 46 00	 mov	 dx, 70			; 00000046H
  00051	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter

; 735  :             {

  0005d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 736  :             }

  0006e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007c	5f		 pop	 rdi
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatterTypeF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 224
x_sign$ = 232
writer$ = 240
?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteSuffix, COMDAT

; 725  :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 726  :             }

  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
reader$ = 8
count$5 = 52
exponential_part$ = 88
exp_buf$ = 120
tv181 = 360
tv168 = 360
tv156 = 360
tv145 = 360
tv95 = 360
tv76 = 360
tv143 = 368
tv74 = 368
__$ArrayPad$ = 376
this$ = 416
number_sequence_str$ = 424
writer$ = 432
?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence, COMDAT

; 695  :             {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 78 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 696  :                 StringReader reader(number_sequence_str);

  00051	48 8b 95 a8 01
	00 00		 mov	 rdx, QWORD PTR number_sequence_str$[rbp]
  00058	48 8d 4d 08	 lea	 rcx, QWORD PTR reader$[rbp]
  0005c	e8 00 00 00 00	 call	 ??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::StringReader::StringReader

; 697  :                 writer->Write(reader.ReadChar(L'0'));

  00061	48 8b 85 b0 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00068	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0006f	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00076	66 ba 30 00	 mov	 dx, 48			; 00000030H
  0007a	48 8d 4d 08	 lea	 rcx, QWORD PTR reader$[rbp]
  0007e	e8 00 00 00 00	 call	 ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z ; Palmtree::Math::Core::Internal::StringReader::ReadChar
  00083	66 89 85 70 01
	00 00		 mov	 WORD PTR tv74[rbp], ax
  0008a	0f b7 95 70 01
	00 00		 movzx	 edx, WORD PTR tv74[rbp]
  00091	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00098	ff 95 68 01 00
	00		 call	 QWORD PTR tv76[rbp]

; 698  :                 if (_precision > 0)

  0009e	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a5	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  000a9	0f 8e 8f 00 00
	00		 jle	 $LN5@FormatNumb

; 699  :                 {
; 700  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  000af	48 8b 85 b0 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000b6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bc	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv95[rbp], rax
  000c3	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ca	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000ce	48 83 c0 6c	 add	 rax, 108		; 0000006cH
  000d2	48 8b d0	 mov	 rdx, rax
  000d5	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000dc	ff 95 68 01 00
	00		 call	 QWORD PTR tv95[rbp]

; 701  :                     for (int count = _precision; count > 0; --count)

  000e2	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e9	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  000ec	89 45 34	 mov	 DWORD PTR count$5[rbp], eax
  000ef	eb 08		 jmp	 SHORT $LN4@FormatNumb
$LN2@FormatNumb:
  000f1	8b 45 34	 mov	 eax, DWORD PTR count$5[rbp]
  000f4	ff c8		 dec	 eax
  000f6	89 45 34	 mov	 DWORD PTR count$5[rbp], eax
$LN4@FormatNumb:
  000f9	83 7d 34 00	 cmp	 DWORD PTR count$5[rbp], 0
  000fd	7e 3f		 jle	 SHORT $LN3@FormatNumb

; 702  :                         writer->Write(reader.ReadChar(L'0'));

  000ff	48 8b 85 b0 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00106	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00109	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0010d	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv145[rbp], rax
  00114	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00118	48 8d 4d 08	 lea	 rcx, QWORD PTR reader$[rbp]
  0011c	e8 00 00 00 00	 call	 ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z ; Palmtree::Math::Core::Internal::StringReader::ReadChar
  00121	66 89 85 70 01
	00 00		 mov	 WORD PTR tv143[rbp], ax
  00128	0f b7 95 70 01
	00 00		 movzx	 edx, WORD PTR tv143[rbp]
  0012f	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00136	ff 95 68 01 00
	00		 call	 QWORD PTR tv145[rbp]
  0013c	eb b3		 jmp	 SHORT $LN2@FormatNumb
$LN3@FormatNumb:
$LN5@FormatNumb:

; 703  :                 }
; 704  :                 writer->Write(_format_type);

  0013e	48 8b 85 b0 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00145	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00148	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0014c	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv156[rbp], rax
  00153	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0015a	0f b7 50 14	 movzx	 edx, WORD PTR [rax+20]
  0015e	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00165	ff 95 68 01 00
	00		 call	 QWORD PTR tv156[rbp]

; 705  :                 writer->Write(_number_format_info->PositiveSign);

  0016b	48 8b 85 b0 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00172	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00175	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00178	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv168[rbp], rax
  0017f	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00186	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0018a	48 05 7c 01 00
	00		 add	 rax, 380		; 0000017cH
  00190	48 8b d0	 mov	 rdx, rax
  00193	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0019a	ff 95 68 01 00
	00		 call	 QWORD PTR tv168[rbp]

; 706  :                 size_t exponential_part = lstrlenW(number_sequence_str) - 1;

  001a0	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR number_sequence_str$[rbp]
  001a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  001ad	ff c8		 dec	 eax
  001af	48 98		 cdqe
  001b1	48 89 45 58	 mov	 QWORD PTR exponential_part$[rbp], rax

; 707  : 
; 708  :                 // 指数部を文字列化するために必要な領域の大きさについて
; 709  :                 // sizeof(w_char_t) == 2 であるため、アドレス空間が 64bit の環境における指数部の論理的な上限値は 2^63 (^はべき乗演算子)
; 710  :                 // なので、指数部を10進数表記した場合の論理的な桁数の上限値は ceil(63 * log(2) / log(10)) ==> 19 となる。
; 711  :                 // 同様に、32bit アドレス空間においては、指数部桁数の論理的上限値は ceil(31 * log(2) / log(10)) ==> 10 となる。
; 712  : 
; 713  : #ifdef _M_IX86 
; 714  :                 wchar_t exp_buf[10 + 1];
; 715  : #elif defined(_M_X64)
; 716  :                 wchar_t exp_buf[19 + 1];
; 717  : #else
; 718  : #error unknown platform
; 719  : #endif
; 720  :                 wsprintfW(exp_buf, L"%03d", exponential_part);

  001b5	4c 8b 45 58	 mov	 r8, QWORD PTR exponential_part$[rbp]
  001b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_19GGGBJDH@?$AA?$CF?$AA0?$AA3?$AAd@
  001c0	48 8d 4d 78	 lea	 rcx, QWORD PTR exp_buf$[rbp]
  001c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wsprintfW

; 721  :                 writer->Write(exp_buf);

  001ca	48 8b 85 b0 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  001d1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001d4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001d7	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv181[rbp], rax
  001de	48 8d 55 78	 lea	 rdx, QWORD PTR exp_buf$[rbp]
  001e2	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001e9	ff 95 68 01 00
	00		 call	 QWORD PTR tv181[rbp]

; 722  :             }

  001ef	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001f3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcFrameData
  001fa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ff	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00206	48 33 cd	 xor	 rcx, rbp
  00209	e8 00 00 00 00	 call	 __security_check_cookie
  0020e	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00215	5f		 pop	 rdi
  00216	5d		 pop	 rbp
  00217	c3		 ret	 0
?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv77 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WritePrefix, COMDAT

; 689  :             {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 690  :                 if (x_sign < 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	7d 35		 jge	 SHORT $LN2@WritePrefi

; 691  :                     writer->Write(_number_format_info->NegativeSign);

  0004a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  0005e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00069	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0006f	48 8b d0	 mov	 rdx, rax
  00072	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00079	ff 95 c0 00 00
	00		 call	 QWORD PTR tv77[rbp]
$LN2@WritePrefi:

; 692  :             }

  0007f	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00086	5f		 pop	 rdi
  00087	5d		 pop	 rbp
  00088	c3		 ret	 0
?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WritePrefix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
_TEXT	SEGMENT
root$ = 8
digit_count$ = 72
fraction_number$4 = 104
x2$5 = 136
$T6 = 360
this$ = 416
x_abs$ = 424
writer$ = 432
?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally, COMDAT

; 673  :             {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  00034	48 c7 85 68 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T6[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 674  :                 ResourceHolderUINT root;

  0004b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0004f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00054	90		 npad	 1

; 675  :                 size_t digit_count = get_digit_count_as_decimal(x_abs->BLOCK, x_abs->UNIT_WORD_COUNT);

  00055	48 8b 85 a8 01
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  0005c	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00060	48 8b 85 a8 01
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  00067	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0006b	e8 00 00 00 00	 call	 ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal
  00070	8b c0		 mov	 eax, eax
  00072	48 89 45 48	 mov	 QWORD PTR digit_count$[rbp], rax

; 676  :                 if (digit_count >= (size_t)(_precision + 2))

  00076	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007d	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  00080	83 c0 02	 add	 eax, 2
  00083	48 98		 cdqe
  00085	48 39 45 48	 cmp	 QWORD PTR digit_count$[rbp], rax
  00089	72 7a		 jb	 SHORT $LN2@FormatInte

; 677  :                 {
; 678  :                     NUMBER_HEADER* fraction_number = get_x_times_of_exponent_of_10(5, digit_count - _precision - 2);

  0008b	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00092	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  00096	48 8b 4d 48	 mov	 rcx, QWORD PTR digit_count$[rbp]
  0009a	48 2b c8	 sub	 rcx, rax
  0009d	48 8b c1	 mov	 rax, rcx
  000a0	48 83 e8 02	 sub	 rax, 2
  000a4	48 8b d0	 mov	 rdx, rax
  000a7	b9 05 00 00 00	 mov	 ecx, 5
  000ac	e8 00 00 00 00	 call	 ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10
  000b1	48 89 45 68	 mov	 QWORD PTR fraction_number$4[rbp], rax

; 679  :                     root.HookNumber(fraction_number);

  000b5	48 8b 55 68	 mov	 rdx, QWORD PTR fraction_number$4[rbp]
  000b9	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000bd	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 680  :                     NUMBER_HEADER* x2 = PMC_Add_X_X_Imp(x_abs, fraction_number);

  000c2	48 8b 55 68	 mov	 rdx, QWORD PTR fraction_number$4[rbp]
  000c6	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR x_abs$[rbp]
  000cd	e8 00 00 00 00	 call	 ?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_X_Imp
  000d2	48 89 85 88 00
	00 00		 mov	 QWORD PTR x2$5[rbp], rax

; 681  :                     root.HookNumber(x2);

  000d9	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR x2$5[rbp]
  000e0	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000e4	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 682  :                     Formatter::FormatInternally(x2, writer);

  000e9	4c 8b 85 b0 01
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  000f0	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR x2$5[rbp]
  000f7	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000fe	e8 00 00 00 00	 call	 ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally

; 683  :                 }
; 684  :                 else

  00103	eb 1b		 jmp	 SHORT $LN3@FormatInte
$LN2@FormatInte:

; 685  :                     Formatter::FormatInternally(x_abs, writer);

  00105	4c 8b 85 b0 01
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  0010c	48 8b 95 a8 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  00113	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011a	e8 00 00 00 00	 call	 ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
  0011f	90		 npad	 1
$LN3@FormatInte:

; 686  :             }

  00120	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00124	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00129	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0012d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcFrameData
  00134	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00139	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00140	5f		 pop	 rdi
  00141	5d		 pop	 rbp
  00142	c3		 ret	 0
?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
digit_count$ = 72
fraction_number$4 = 104
x2$5 = 136
$T6 = 360
this$ = 416
x_abs$ = 424
writer$ = 432
?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
digit_count$ = 72
fraction_number$4 = 104
x2$5 = 136
$T6 = 360
this$ = 416
x_abs$ = 424
writer$ = 432
?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv146 = 192
tv140 = 192
tv88 = 192
tv69 = 192
this$ = 240
writer$ = 248
?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteZeroValue, COMDAT

; 661  :             {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 662  :                 writer->Write(L'0');

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00050	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00054	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0005b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv69[rbp]

; 663  :                 if (_precision > 0)

  00061	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0006c	7e 51		 jle	 SHORT $LN2@WriteZeroV

; 664  :                 {
; 665  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  0006e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  00082	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00089	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008d	48 83 c0 6c	 add	 rax, 108		; 0000006cH
  00091	48 8b d0	 mov	 rdx, rax
  00094	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0009b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv88[rbp]

; 666  :                     writer->Write(L'0', _precision);

  000a1	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a8	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  000ac	4c 8b c0	 mov	 r8, rax
  000af	66 ba 30 00	 mov	 dx, 48			; 00000030H
  000b3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000ba	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
$LN2@WriteZeroV:

; 667  :                 }
; 668  :                 writer->Write(_format_type);

  000bf	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000c6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000cd	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv140[rbp], rax
  000d4	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000db	0f b7 50 14	 movzx	 edx, WORD PTR [rax+20]
  000df	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000e6	ff 95 c0 00 00
	00		 call	 QWORD PTR tv140[rbp]

; 669  :                 writer->Write(L"+000");

  000ec	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000f3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f9	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv146[rbp], rax
  00100	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_19NKFEMDNP@?$AA?$CL?$AA0?$AA0?$AA0@
  00107	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0010e	ff 95 c0 00 00
	00		 call	 QWORD PTR tv146[rbp]

; 670  :             }

  00114	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0011b	5f		 pop	 rdi
  0011c	5d		 pop	 rbp
  0011d	c3		 ret	 0
?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 224
?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::GetDefaultPrecisionValue, COMDAT

; 656  :             {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 657  :                 return (6);

  00036	b8 06 00 00 00	 mov	 eax, 6

; 658  :             }

  0003b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00042	5f		 pop	 rdi
  00043	5d		 pop	 rbp
  00044	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 224
format_type$ = 232
precision$ = 240
number_format_info$ = 248
??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatterTypeE, COMDAT

; 651  :             {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 650  :                 : Formatter(format_type, precision, number_format_info)

  00045	4c 8b 8d f8 00
	00 00		 mov	 r9, QWORD PTR number_format_info$[rbp]
  0004c	44 8b 85 f0 00
	00 00		 mov	 r8d, DWORD PTR precision$[rbp]
  00053	0f b7 95 e8 00
	00 00		 movzx	 edx, WORD PTR format_type$[rbp]
  0005a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00061	e8 00 00 00 00	 call	 ??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter

; 651  :             {

  00066	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00074	48 89 08	 mov	 QWORD PTR [rax], rcx

; 652  :             }

  00077	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00085	5f		 pop	 rdi
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatterTypeE
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 224
x_sign$ = 232
writer$ = 240
?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteSuffix, COMDAT

; 641  :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 642  :             }

  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv90 = 192
tv81 = 192
this$ = 240
number_sequence_str$ = 248
writer$ = 256
?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatNumberSequence, COMDAT

; 635  :             {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 636  :                 writer->Write(L'0', _precision > lstrlenW(number_sequence_str) ? _precision - lstrlenW(number_sequence_str) : 0);

  00040	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR number_sequence_str$[rbp]
  00047	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0004d	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	39 41 18	 cmp	 DWORD PTR [rcx+24], eax
  00057	7e 23		 jle	 SHORT $LN3@FormatNumb
  00059	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR number_sequence_str$[rbp]
  00060	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00066	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006d	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  00070	2b c8		 sub	 ecx, eax
  00072	8b c1		 mov	 eax, ecx
  00074	89 85 c0 00 00
	00		 mov	 DWORD PTR tv81[rbp], eax
  0007a	eb 0a		 jmp	 SHORT $LN4@FormatNumb
$LN3@FormatNumb:
  0007c	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv81[rbp], 0
$LN4@FormatNumb:
  00086	48 63 85 c0 00
	00 00		 movsxd	 rax, DWORD PTR tv81[rbp]
  0008d	4c 8b c0	 mov	 r8, rax
  00090	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00094	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0009b	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write

; 637  :                 writer->Write(number_sequence_str);

  000a0	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000a7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv90[rbp], rax
  000b4	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR number_sequence_str$[rbp]
  000bb	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000c2	ff 95 c0 00 00
	00		 call	 QWORD PTR tv90[rbp]

; 638  :             }

  000c8	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000cf	5f		 pop	 rdi
  000d0	5d		 pop	 rbp
  000d1	c3		 ret	 0
?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatNumberSequence
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv77 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WritePrefix, COMDAT

; 629  :             {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 630  :                 if (x_sign < 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	7d 35		 jge	 SHORT $LN2@WritePrefi

; 631  :                     writer->Write(_number_format_info->NegativeSign);

  0004a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  0005e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00069	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0006f	48 8b d0	 mov	 rdx, rax
  00072	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00079	ff 95 c0 00 00
	00		 call	 QWORD PTR tv77[rbp]
$LN2@WritePrefi:

; 632  :             }

  0007f	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00086	5f		 pop	 rdi
  00087	5d		 pop	 rbp
  00088	c3		 ret	 0
?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WritePrefix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv76 = 192
this$ = 240
writer$ = 248
?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteZeroValue, COMDAT

; 624  :             {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 625  :                 writer->Write(L'0', _precision < 1 ? 1 : _precision);

  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	83 78 18 01	 cmp	 DWORD PTR [rax+24], 1
  00046	7d 0c		 jge	 SHORT $LN3@WriteZeroV
  00048	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv76[rbp], 1
  00052	eb 10		 jmp	 SHORT $LN4@WriteZeroV
$LN3@WriteZeroV:
  00054	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  0005e	89 85 c0 00 00
	00		 mov	 DWORD PTR tv76[rbp], eax
$LN4@WriteZeroV:
  00064	48 63 85 c0 00
	00 00		 movsxd	 rax, DWORD PTR tv76[rbp]
  0006b	4c 8b c0	 mov	 r8, rax
  0006e	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00072	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00079	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write

; 626  :             }

  0007e	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00085	5f		 pop	 rdi
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 224
?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::GetDefaultPrecisionValue, COMDAT

; 619  :             {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 620  :                 return (0);

  00036	33 c0		 xor	 eax, eax

; 621  :             }

  00038	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003f	5f		 pop	 rdi
  00040	5d		 pop	 rbp
  00041	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 224
precision$ = 232
number_format_info$ = 240
??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatterTypeD, COMDAT

; 614  :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 613  :                 : Formatter(L'D', precision, number_format_info)

  0003f	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR number_format_info$[rbp]
  00046	44 8b 85 e8 00
	00 00		 mov	 r8d, DWORD PTR precision$[rbp]
  0004d	66 ba 44 00	 mov	 dx, 68			; 00000044H
  00051	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter

; 614  :             {

  0005d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 615  :             }

  0006e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007c	5f		 pop	 rdi
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatterTypeD
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv361 = 192
tv355 = 192
tv343 = 192
tv337 = 192
tv331 = 192
tv319 = 192
tv313 = 192
tv301 = 192
tv289 = 192
tv277 = 192
tv265 = 192
tv259 = 192
tv247 = 192
tv241 = 192
tv229 = 192
tv217 = 192
tv205 = 192
tv193 = 192
tv181 = 192
tv175 = 192
tv163 = 192
tv151 = 192
tv145 = 192
tv135 = 192
tv91 = 192
tv85 = 192
tv73 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteSuffix, COMDAT

; 525  :             {

$LN30:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 526  :                 if (x_sign >= 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	0f 8c c4 00 00
	00		 jl	 $LN6@WriteSuffi

; 527  :                 {
; 528  :                     switch (_number_format_info->Currency.PositivePattern)

  0004e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00059	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  0005c	89 85 c0 00 00
	00		 mov	 DWORD PTR tv73[rbp], eax
  00062	83 bd c0 00 00
	00 01		 cmp	 DWORD PTR tv73[rbp], 1
  00069	74 0e		 je	 SHORT $LN9@WriteSuffi
  0006b	83 bd c0 00 00
	00 03		 cmp	 DWORD PTR tv73[rbp], 3
  00072	74 3e		 je	 SHORT $LN11@WriteSuffi

; 529  :                     {
; 530  :                     case 0:
; 531  :                     default:
; 532  :                         break;

  00074	e9 94 00 00 00	 jmp	 $LN2@WriteSuffi
$LN9@WriteSuffi:

; 533  :                     case 1:
; 534  :                         writer->Write(_number_format_info->CurrencySymbol);

  00079	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00080	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  0008d	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00094	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00098	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  0009e	48 8b d0	 mov	 rdx, rax
  000a1	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000a8	ff 95 c0 00 00
	00		 call	 QWORD PTR tv85[rbp]

; 535  :                         break;

  000ae	eb 5d		 jmp	 SHORT $LN2@WriteSuffi

; 536  :                     case 2:
; 537  :                         break;

  000b0	eb 5b		 jmp	 SHORT $LN2@WriteSuffi
$LN11@WriteSuffi:

; 538  :                     case 3:
; 539  :                         writer->Write(L' ');

  000b2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bc	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c0	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000c7	66 ba 20 00	 mov	 dx, 32			; 00000020H
  000cb	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000d2	ff 95 c0 00 00
	00		 call	 QWORD PTR tv91[rbp]

; 540  :                         writer->Write(_number_format_info->CurrencySymbol);

  000d8	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000df	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e5	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  000ec	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f3	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000f7	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  000fd	48 8b d0	 mov	 rdx, rax
  00100	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00107	ff 95 c0 00 00
	00		 call	 QWORD PTR tv135[rbp]
$LN2@WriteSuffi:

; 541  :                         break;
; 542  :                     }
; 543  :                 }
; 544  :                 else

  0010d	e9 a6 04 00 00	 jmp	 $LN7@WriteSuffi
$LN6@WriteSuffi:

; 545  :                 {
; 546  :                     switch (_number_format_info->Currency.NegativePattern)

  00112	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00119	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0011d	8b 40 60	 mov	 eax, DWORD PTR [rax+96]
  00120	89 85 c0 00 00
	00		 mov	 DWORD PTR tv145[rbp], eax
  00126	8b 85 c0 00 00
	00		 mov	 eax, DWORD PTR tv145[rbp]
  0012c	ff c8		 dec	 eax
  0012e	89 85 c0 00 00
	00		 mov	 DWORD PTR tv145[rbp], eax
  00134	83 bd c0 00 00
	00 0e		 cmp	 DWORD PTR tv145[rbp], 14
  0013b	77 1a		 ja	 SHORT $LN12@WriteSuffi
  0013d	48 63 85 c0 00
	00 00		 movsxd	 rax, DWORD PTR tv145[rbp]
  00144	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  0014b	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN29@WriteSuffi[rcx+rax*4]
  00152	48 03 c1	 add	 rax, rcx
  00155	ff e0		 jmp	 rax
$LN12@WriteSuffi:

; 547  :                     {
; 548  :                     case 0:
; 549  :                     default:
; 550  :                         writer->Write(L')');

  00157	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0015e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00161	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00165	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv151[rbp], rax
  0016c	66 ba 29 00	 mov	 dx, 41			; 00000029H
  00170	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00177	ff 95 c0 00 00
	00		 call	 QWORD PTR tv151[rbp]

; 551  :                         break;

  0017d	e9 36 04 00 00	 jmp	 $LN4@WriteSuffi
$LN13@WriteSuffi:

; 552  :                     case 1:
; 553  :                         break;

  00182	e9 31 04 00 00	 jmp	 $LN4@WriteSuffi
$LN14@WriteSuffi:

; 554  :                     case 2:
; 555  :                         break;

  00187	e9 2c 04 00 00	 jmp	 $LN4@WriteSuffi
$LN15@WriteSuffi:

; 556  :                     case 3:
; 557  :                         writer->Write(_number_format_info->NegativeSign);

  0018c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00193	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00196	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00199	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv163[rbp], rax
  001a0	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001a7	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001ab	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  001b1	48 8b d0	 mov	 rdx, rax
  001b4	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001bb	ff 95 c0 00 00
	00		 call	 QWORD PTR tv163[rbp]

; 558  :                         break;

  001c1	e9 f2 03 00 00	 jmp	 $LN4@WriteSuffi
$LN16@WriteSuffi:

; 559  :                     case 4:
; 560  :                         writer->Write(_number_format_info->CurrencySymbol);

  001c6	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  001cd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001d0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001d3	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv175[rbp], rax
  001da	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001e1	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001e5	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  001eb	48 8b d0	 mov	 rdx, rax
  001ee	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001f5	ff 95 c0 00 00
	00		 call	 QWORD PTR tv175[rbp]

; 561  :                         writer->Write(L')');

  001fb	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00202	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00205	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00209	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv181[rbp], rax
  00210	66 ba 29 00	 mov	 dx, 41			; 00000029H
  00214	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0021b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv181[rbp]

; 562  :                         break;

  00221	e9 92 03 00 00	 jmp	 $LN4@WriteSuffi
$LN17@WriteSuffi:

; 563  :                     case 5:
; 564  :                         writer->Write(_number_format_info->CurrencySymbol);

  00226	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0022d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00230	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00233	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv193[rbp], rax
  0023a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00241	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00245	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  0024b	48 8b d0	 mov	 rdx, rax
  0024e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00255	ff 95 c0 00 00
	00		 call	 QWORD PTR tv193[rbp]

; 565  :                         break;

  0025b	e9 58 03 00 00	 jmp	 $LN4@WriteSuffi
$LN18@WriteSuffi:

; 566  :                     case 6:
; 567  :                         writer->Write(_number_format_info->NegativeSign);

  00260	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00267	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0026a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0026d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv205[rbp], rax
  00274	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0027b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0027f	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00285	48 8b d0	 mov	 rdx, rax
  00288	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0028f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv205[rbp]

; 568  :                         writer->Write(_number_format_info->CurrencySymbol);

  00295	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0029c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0029f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002a2	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv217[rbp], rax
  002a9	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002b0	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  002b4	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  002ba	48 8b d0	 mov	 rdx, rax
  002bd	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002c4	ff 95 c0 00 00
	00		 call	 QWORD PTR tv217[rbp]

; 569  :                         break;

  002ca	e9 e9 02 00 00	 jmp	 $LN4@WriteSuffi
$LN19@WriteSuffi:

; 570  :                     case 7:
; 571  :                         writer->Write(_number_format_info->CurrencySymbol);

  002cf	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  002d6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002d9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002dc	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv229[rbp], rax
  002e3	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002ea	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  002ee	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  002f4	48 8b d0	 mov	 rdx, rax
  002f7	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002fe	ff 95 c0 00 00
	00		 call	 QWORD PTR tv229[rbp]

; 572  :                         writer->Write(_number_format_info->NegativeSign);

  00304	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0030b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0030e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00311	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv241[rbp], rax
  00318	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0031f	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00323	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00329	48 8b d0	 mov	 rdx, rax
  0032c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00333	ff 95 c0 00 00
	00		 call	 QWORD PTR tv241[rbp]

; 573  :                         break;

  00339	e9 7a 02 00 00	 jmp	 $LN4@WriteSuffi
$LN20@WriteSuffi:

; 574  :                     case 8:
; 575  :                         writer->Write(L' ');

  0033e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00345	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00348	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0034c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv247[rbp], rax
  00353	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00357	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0035e	ff 95 c0 00 00
	00		 call	 QWORD PTR tv247[rbp]

; 576  :                         writer->Write(_number_format_info->CurrencySymbol);

  00364	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0036b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0036e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00371	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv259[rbp], rax
  00378	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0037f	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00383	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  00389	48 8b d0	 mov	 rdx, rax
  0038c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00393	ff 95 c0 00 00
	00		 call	 QWORD PTR tv259[rbp]

; 577  :                         break;

  00399	e9 1a 02 00 00	 jmp	 $LN4@WriteSuffi
$LN21@WriteSuffi:

; 578  :                     case 9:
; 579  :                         break;

  0039e	e9 15 02 00 00	 jmp	 $LN4@WriteSuffi
$LN22@WriteSuffi:

; 580  :                     case 10:
; 581  :                         writer->Write(L' ');

  003a3	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  003aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003b1	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv265[rbp], rax
  003b8	66 ba 20 00	 mov	 dx, 32			; 00000020H
  003bc	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003c3	ff 95 c0 00 00
	00		 call	 QWORD PTR tv265[rbp]

; 582  :                         writer->Write(_number_format_info->CurrencySymbol);

  003c9	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  003d0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003d3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003d6	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  003dd	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003e4	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  003e8	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  003ee	48 8b d0	 mov	 rdx, rax
  003f1	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003f8	ff 95 c0 00 00
	00		 call	 QWORD PTR tv277[rbp]

; 583  :                         writer->Write(_number_format_info->NegativeSign);

  003fe	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00405	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00408	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0040b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv289[rbp], rax
  00412	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00419	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0041d	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00423	48 8b d0	 mov	 rdx, rax
  00426	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0042d	ff 95 c0 00 00
	00		 call	 QWORD PTR tv289[rbp]

; 584  :                         break;

  00433	e9 80 01 00 00	 jmp	 $LN4@WriteSuffi
$LN23@WriteSuffi:

; 585  :                     case 11:
; 586  :                         writer->Write(_number_format_info->NegativeSign);

  00438	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0043f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00442	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00445	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv301[rbp], rax
  0044c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00453	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00457	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0045d	48 8b d0	 mov	 rdx, rax
  00460	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00467	ff 95 c0 00 00
	00		 call	 QWORD PTR tv301[rbp]

; 587  :                         break;

  0046d	e9 46 01 00 00	 jmp	 $LN4@WriteSuffi
$LN24@WriteSuffi:

; 588  :                     case 12:
; 589  :                         break;

  00472	e9 41 01 00 00	 jmp	 $LN4@WriteSuffi
$LN25@WriteSuffi:

; 590  :                     case 13:
; 591  :                         writer->Write(_number_format_info->NegativeSign);

  00477	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0047e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00481	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00484	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv313[rbp], rax
  0048b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00492	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00496	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0049c	48 8b d0	 mov	 rdx, rax
  0049f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  004a6	ff 95 c0 00 00
	00		 call	 QWORD PTR tv313[rbp]

; 592  :                         writer->Write(L' ');

  004ac	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  004b3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004b6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  004ba	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv319[rbp], rax
  004c1	66 ba 20 00	 mov	 dx, 32			; 00000020H
  004c5	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  004cc	ff 95 c0 00 00
	00		 call	 QWORD PTR tv319[rbp]

; 593  :                         writer->Write(_number_format_info->CurrencySymbol);

  004d2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  004d9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004dc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004df	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv331[rbp], rax
  004e6	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  004ed	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  004f1	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  004f7	48 8b d0	 mov	 rdx, rax
  004fa	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00501	ff 95 c0 00 00
	00		 call	 QWORD PTR tv331[rbp]

; 594  :                         break;

  00507	e9 ac 00 00 00	 jmp	 $LN4@WriteSuffi
$LN26@WriteSuffi:

; 595  :                     case 14:
; 596  :                         writer->Write(L')');

  0050c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00513	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00516	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0051a	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv337[rbp], rax
  00521	66 ba 29 00	 mov	 dx, 41			; 00000029H
  00525	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0052c	ff 95 c0 00 00
	00		 call	 QWORD PTR tv337[rbp]

; 597  :                         break;

  00532	e9 81 00 00 00	 jmp	 $LN4@WriteSuffi
$LN27@WriteSuffi:

; 598  :                     case 15:
; 599  :                         writer->Write(L' ');

  00537	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0053e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00541	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00545	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv343[rbp], rax
  0054c	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00550	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00557	ff 95 c0 00 00
	00		 call	 QWORD PTR tv343[rbp]

; 600  :                         writer->Write(_number_format_info->CurrencySymbol);

  0055d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00564	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00567	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0056a	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv355[rbp], rax
  00571	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00578	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0057c	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  00582	48 8b d0	 mov	 rdx, rax
  00585	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0058c	ff 95 c0 00 00
	00		 call	 QWORD PTR tv355[rbp]

; 601  :                         writer->Write(L')');

  00592	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00599	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0059c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  005a0	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv361[rbp], rax
  005a7	66 ba 29 00	 mov	 dx, 41			; 00000029H
  005ab	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  005b2	ff 95 c0 00 00
	00		 call	 QWORD PTR tv361[rbp]
$LN4@WriteSuffi:
$LN7@WriteSuffi:

; 602  :                         break;
; 603  :                     }
; 604  :                 }
; 605  :             }

  005b8	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  005bf	5f		 pop	 rdi
  005c0	5d		 pop	 rbp
  005c1	c3		 ret	 0
  005c2	66 90		 npad	 2
$LN29@WriteSuffi:
  005c4	00 00 00 00	 DD	 $LN13@WriteSuffi
  005c8	00 00 00 00	 DD	 $LN14@WriteSuffi
  005cc	00 00 00 00	 DD	 $LN15@WriteSuffi
  005d0	00 00 00 00	 DD	 $LN16@WriteSuffi
  005d4	00 00 00 00	 DD	 $LN17@WriteSuffi
  005d8	00 00 00 00	 DD	 $LN18@WriteSuffi
  005dc	00 00 00 00	 DD	 $LN19@WriteSuffi
  005e0	00 00 00 00	 DD	 $LN20@WriteSuffi
  005e4	00 00 00 00	 DD	 $LN21@WriteSuffi
  005e8	00 00 00 00	 DD	 $LN22@WriteSuffi
  005ec	00 00 00 00	 DD	 $LN23@WriteSuffi
  005f0	00 00 00 00	 DD	 $LN24@WriteSuffi
  005f4	00 00 00 00	 DD	 $LN25@WriteSuffi
  005f8	00 00 00 00	 DD	 $LN26@WriteSuffi
  005fc	00 00 00 00	 DD	 $LN27@WriteSuffi
?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence, COMDAT

; 507  :             {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 78 02
	00 00		 sub	 rsp, 632		; 00000278H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 9e 00 00 00	 mov	 ecx, 158		; 0000009eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR [rsp+664]
  00034	48 c7 85 28 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T7[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 508  :                 ResourceHolderUINT root;

  0004b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0004f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00054	90		 npad	 1

; 509  :                 ReverseStringReader r_reader(number_sequence_str);

  00055	48 8b 95 78 02
	00 00		 mov	 rdx, QWORD PTR number_sequence_str$[rbp]
  0005c	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  00060	e8 00 00 00 00	 call	 ??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::ReverseStringReader

; 510  :                 size_t work_buf_len = lstrlenW(number_sequence_str) * 2 + 1 + _precision + 1;

  00065	48 8b 8d 78 02
	00 00		 mov	 rcx, QWORD PTR number_sequence_str$[rbp]
  0006c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00072	48 8b 8d 70 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00079	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  0007c	8d 44 41 02	 lea	 eax, DWORD PTR [rcx+rax*2+2]
  00080	48 98		 cdqe
  00082	48 89 45 78	 mov	 QWORD PTR work_buf_len$[rbp], rax

; 511  :                 wchar_t* work_buf = root.AllocateString(work_buf_len);

  00086	48 8b 55 78	 mov	 rdx, QWORD PTR work_buf_len$[rbp]
  0008a	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0008e	e8 00 00 00 00	 call	 ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
  00093	48 89 85 98 00
	00 00		 mov	 QWORD PTR work_buf$[rbp], rax

; 512  :                 ReverseStringWriter r_writer(work_buf, work_buf_len);

  0009a	4c 8b 45 78	 mov	 r8, QWORD PTR work_buf_len$[rbp]
  0009e	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR work_buf$[rbp]
  000a5	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR r_writer$[rbp]
  000ac	e8 00 00 00 00	 call	 ??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter

; 513  :                 ThousandSeparatedStringWriter t_writer(&r_writer, _format_type, _number_format_info);

  000b1	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b8	4c 8b 48 20	 mov	 r9, QWORD PTR [rax+32]
  000bc	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c3	44 0f b7 40 14	 movzx	 r8d, WORD PTR [rax+20]
  000c8	48 8d 95 b8 00
	00 00		 lea	 rdx, QWORD PTR r_writer$[rbp]
  000cf	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  000d6	e8 00 00 00 00	 call	 ??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::ThousandSeparatedStringWriter
$LN2@FormatNumb:

; 514  :                 while (r_reader.PeekChar() != L'\0')

  000db	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  000df	e8 00 00 00 00	 call	 ?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar
  000e4	0f b7 c0	 movzx	 eax, ax
  000e7	85 c0		 test	 eax, eax
  000e9	74 1a		 je	 SHORT $LN3@FormatNumb

; 515  :                     t_writer.Write(r_reader.ReadChar());

  000eb	48 8d 4d 48	 lea	 rcx, QWORD PTR r_reader$[rbp]
  000ef	e8 00 00 00 00	 call	 ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ ; Palmtree::Math::Core::Internal::StringReader::ReadChar
  000f4	0f b7 d0	 movzx	 edx, ax
  000f7	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  000fe	e8 00 00 00 00	 call	 ?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
  00103	eb d6		 jmp	 SHORT $LN2@FormatNumb
$LN3@FormatNumb:

; 516  :                 writer->Write(t_writer.GetString());

  00105	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0010c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0010f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00112	48 89 85 38 02
	00 00		 mov	 QWORD PTR tv158[rbp], rax
  00119	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR t_writer$[rbp]
  00120	e8 00 00 00 00	 call	 ?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString
  00125	48 89 85 40 02
	00 00		 mov	 QWORD PTR tv156[rbp], rax
  0012c	48 8b 95 40 02
	00 00		 mov	 rdx, QWORD PTR tv156[rbp]
  00133	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0013a	ff 95 38 02 00
	00		 call	 QWORD PTR tv158[rbp]

; 517  :                 if (_precision > 0)

  00140	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00147	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0014b	7e 52		 jle	 SHORT $LN4@FormatNumb

; 518  :                 {
; 519  :                     writer->Write(_number_format_info->Currency.DecimalSeparator);

  0014d	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00154	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00157	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0015a	48 89 85 38 02
	00 00		 mov	 QWORD PTR tv177[rbp], rax
  00161	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00168	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0016c	48 83 c0 04	 add	 rax, 4
  00170	48 8b d0	 mov	 rdx, rax
  00173	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0017a	ff 95 38 02 00
	00		 call	 QWORD PTR tv177[rbp]

; 520  :                     writer->Write(L'0', _precision);

  00180	48 8b 85 70 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00187	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  0018b	4c 8b c0	 mov	 r8, rax
  0018e	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00192	48 8b 8d 80 02
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00199	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
  0019e	90		 npad	 1
$LN4@FormatNumb:

; 521  :                 }
; 522  :             }

  0019f	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  001a3	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001a8	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z$rtcFrameData
  001b3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001b8	48 8d a5 58 02
	00 00		 lea	 rsp, QWORD PTR [rbp+600]
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
r_reader$ = 72
work_buf_len$ = 120
work_buf$ = 152
r_writer$ = 184
t_writer$ = 256
$T7 = 552
tv177 = 568
tv158 = 568
tv156 = 576
this$ = 624
number_sequence_str$ = 632
writer$ = 640
?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv362 = 192
tv356 = 192
tv350 = 192
tv338 = 192
tv332 = 192
tv320 = 192
tv314 = 192
tv302 = 192
tv296 = 192
tv284 = 192
tv278 = 192
tv266 = 192
tv254 = 192
tv242 = 192
tv230 = 192
tv224 = 192
tv212 = 192
tv200 = 192
tv188 = 192
tv176 = 192
tv164 = 192
tv152 = 192
tv146 = 192
tv135 = 192
tv129 = 192
tv85 = 192
tv73 = 192
this$ = 240
x_sign$ = 248
writer$ = 256
?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WritePrefix, COMDAT

; 424  :             {

$LN30:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 425  :                 if (x_sign >= 0)

  0003f	0f be 85 f8 00
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00046	85 c0		 test	 eax, eax
  00048	0f 8c cc 00 00
	00		 jl	 $LN6@WritePrefi

; 426  :                 {
; 427  :                     switch (_number_format_info->Currency.PositivePattern)

  0004e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00059	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  0005c	89 85 c0 00 00
	00		 mov	 DWORD PTR tv73[rbp], eax
  00062	83 bd c0 00 00
	00 01		 cmp	 DWORD PTR tv73[rbp], 1
  00069	74 4d		 je	 SHORT $LN9@WritePrefi
  0006b	83 bd c0 00 00
	00 02		 cmp	 DWORD PTR tv73[rbp], 2
  00072	74 46		 je	 SHORT $LN10@WritePrefi
  00074	83 bd c0 00 00
	00 03		 cmp	 DWORD PTR tv73[rbp], 3
  0007b	0f 84 94 00 00
	00		 je	 $LN11@WritePrefi

; 428  :                     {
; 429  :                     case 0:
; 430  :                     default:
; 431  :                         writer->Write(_number_format_info->CurrencySymbol);

  00081	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00088	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  00095	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000a0	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  000a6	48 8b d0	 mov	 rdx, rax
  000a9	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000b0	ff 95 c0 00 00
	00		 call	 QWORD PTR tv85[rbp]

; 432  :                         break;

  000b6	eb 5d		 jmp	 SHORT $LN2@WritePrefi
$LN9@WritePrefi:

; 433  :                     case 1:
; 434  :                         break;

  000b8	eb 5b		 jmp	 SHORT $LN2@WritePrefi
$LN10@WritePrefi:

; 435  :                     case 2:
; 436  :                         writer->Write(_number_format_info->CurrencySymbol);

  000ba	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000c1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c7	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  000ce	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d5	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000d9	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  000df	48 8b d0	 mov	 rdx, rax
  000e2	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000e9	ff 95 c0 00 00
	00		 call	 QWORD PTR tv129[rbp]

; 437  :                         writer->Write(L' ');

  000ef	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  000f6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000fd	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  00104	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00108	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0010f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv135[rbp]
$LN11@WritePrefi:
$LN2@WritePrefi:

; 438  :                         break;
; 439  :                     case 3:
; 440  :                         break;
; 441  :                     }
; 442  :                 }
; 443  :                 else

  00115	e9 a3 04 00 00	 jmp	 $LN7@WritePrefi
$LN6@WritePrefi:

; 444  :                 {
; 445  :                     switch (_number_format_info->Currency.NegativePattern)

  0011a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00121	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00125	8b 40 60	 mov	 eax, DWORD PTR [rax+96]
  00128	89 85 c0 00 00
	00		 mov	 DWORD PTR tv146[rbp], eax
  0012e	8b 85 c0 00 00
	00		 mov	 eax, DWORD PTR tv146[rbp]
  00134	ff c8		 dec	 eax
  00136	89 85 c0 00 00
	00		 mov	 DWORD PTR tv146[rbp], eax
  0013c	83 bd c0 00 00
	00 0e		 cmp	 DWORD PTR tv146[rbp], 14
  00143	77 1a		 ja	 SHORT $LN12@WritePrefi
  00145	48 63 85 c0 00
	00 00		 movsxd	 rax, DWORD PTR tv146[rbp]
  0014c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  00153	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN29@WritePrefi[rcx+rax*4]
  0015a	48 03 c1	 add	 rax, rcx
  0015d	ff e0		 jmp	 rax
$LN12@WritePrefi:

; 446  :                     {
; 447  :                     case 0:
; 448  :                     default:
; 449  :                         writer->Write(L'(');

  0015f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00166	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00169	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0016d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  00174	66 ba 28 00	 mov	 dx, 40			; 00000028H
  00178	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0017f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv152[rbp]

; 450  :                         writer->Write(_number_format_info->CurrencySymbol);

  00185	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0018c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0018f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00192	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv164[rbp], rax
  00199	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001a0	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001a4	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  001aa	48 8b d0	 mov	 rdx, rax
  001ad	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001b4	ff 95 c0 00 00
	00		 call	 QWORD PTR tv164[rbp]

; 451  :                         break;

  001ba	e9 fe 03 00 00	 jmp	 $LN4@WritePrefi
$LN13@WritePrefi:

; 452  :                     case 1:
; 453  :                         writer->Write(_number_format_info->NegativeSign);

  001bf	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  001c6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001c9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001cc	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv176[rbp], rax
  001d3	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001da	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001de	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  001e4	48 8b d0	 mov	 rdx, rax
  001e7	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  001ee	ff 95 c0 00 00
	00		 call	 QWORD PTR tv176[rbp]

; 454  :                         writer->Write(_number_format_info->CurrencySymbol);

  001f4	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  001fb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001fe	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00201	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv188[rbp], rax
  00208	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0020f	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00213	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  00219	48 8b d0	 mov	 rdx, rax
  0021c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00223	ff 95 c0 00 00
	00		 call	 QWORD PTR tv188[rbp]

; 455  :                         break;

  00229	e9 8f 03 00 00	 jmp	 $LN4@WritePrefi
$LN14@WritePrefi:

; 456  :                     case 2:
; 457  :                         writer->Write(_number_format_info->CurrencySymbol);

  0022e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00235	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00238	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0023b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv200[rbp], rax
  00242	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00249	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0024d	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  00253	48 8b d0	 mov	 rdx, rax
  00256	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0025d	ff 95 c0 00 00
	00		 call	 QWORD PTR tv200[rbp]

; 458  :                         writer->Write(_number_format_info->NegativeSign);

  00263	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0026a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0026d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00270	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv212[rbp], rax
  00277	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0027e	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00282	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00288	48 8b d0	 mov	 rdx, rax
  0028b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00292	ff 95 c0 00 00
	00		 call	 QWORD PTR tv212[rbp]

; 459  :                         break;

  00298	e9 20 03 00 00	 jmp	 $LN4@WritePrefi
$LN15@WritePrefi:

; 460  :                     case 3:
; 461  :                         writer->Write(_number_format_info->NegativeSign);

  0029d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  002a4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002a7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002aa	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv224[rbp], rax
  002b1	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002b8	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  002bc	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  002c2	48 8b d0	 mov	 rdx, rax
  002c5	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002cc	ff 95 c0 00 00
	00		 call	 QWORD PTR tv224[rbp]

; 462  :                         break;

  002d2	e9 e6 02 00 00	 jmp	 $LN4@WritePrefi
$LN16@WritePrefi:

; 463  :                     case 4:
; 464  :                         writer->Write(L'(');

  002d7	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  002de	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002e1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002e5	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv230[rbp], rax
  002ec	66 ba 28 00	 mov	 dx, 40			; 00000028H
  002f0	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  002f7	ff 95 c0 00 00
	00		 call	 QWORD PTR tv230[rbp]

; 465  :                         break;

  002fd	e9 bb 02 00 00	 jmp	 $LN4@WritePrefi
$LN17@WritePrefi:

; 466  :                     case 5:
; 467  :                         writer->Write(_number_format_info->NegativeSign);

  00302	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00309	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0030c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0030f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv242[rbp], rax
  00316	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0031d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00321	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  00327	48 8b d0	 mov	 rdx, rax
  0032a	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00331	ff 95 c0 00 00
	00		 call	 QWORD PTR tv242[rbp]

; 468  :                         break;

  00337	e9 81 02 00 00	 jmp	 $LN4@WritePrefi
$LN18@WritePrefi:

; 469  :                     case 6:
; 470  :                         break;

  0033c	e9 7c 02 00 00	 jmp	 $LN4@WritePrefi
$LN19@WritePrefi:

; 471  :                     case 7:
; 472  :                         break;

  00341	e9 77 02 00 00	 jmp	 $LN4@WritePrefi
$LN20@WritePrefi:

; 473  :                     case 8:
; 474  :                         writer->Write(_number_format_info->NegativeSign);

  00346	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0034d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00350	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00353	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv254[rbp], rax
  0035a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00361	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00365	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  0036b	48 8b d0	 mov	 rdx, rax
  0036e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00375	ff 95 c0 00 00
	00		 call	 QWORD PTR tv254[rbp]

; 475  :                         break;

  0037b	e9 3d 02 00 00	 jmp	 $LN4@WritePrefi
$LN21@WritePrefi:

; 476  :                     case 9:
; 477  :                         writer->Write(_number_format_info->NegativeSign);

  00380	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00387	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0038a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0038d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv266[rbp], rax
  00394	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0039b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0039f	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  003a5	48 8b d0	 mov	 rdx, rax
  003a8	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003af	ff 95 c0 00 00
	00		 call	 QWORD PTR tv266[rbp]

; 478  :                         writer->Write(_number_format_info->CurrencySymbol);

  003b5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  003bc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003bf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003c2	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv278[rbp], rax
  003c9	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003d0	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  003d4	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  003da	48 8b d0	 mov	 rdx, rax
  003dd	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  003e4	ff 95 c0 00 00
	00		 call	 QWORD PTR tv278[rbp]

; 479  :                         writer->Write(L' ');

  003ea	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  003f1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003f4	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003f8	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv284[rbp], rax
  003ff	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00403	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0040a	ff 95 c0 00 00
	00		 call	 QWORD PTR tv284[rbp]

; 480  :                         break;

  00410	e9 a8 01 00 00	 jmp	 $LN4@WritePrefi
$LN22@WritePrefi:

; 481  :                     case 10:
; 482  :                         break;

  00415	e9 a3 01 00 00	 jmp	 $LN4@WritePrefi
$LN23@WritePrefi:

; 483  :                     case 11:
; 484  :                         writer->Write(_number_format_info->CurrencySymbol);

  0041a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00421	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00424	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00427	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv296[rbp], rax
  0042e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00435	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00439	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  0043f	48 8b d0	 mov	 rdx, rax
  00442	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00449	ff 95 c0 00 00
	00		 call	 QWORD PTR tv296[rbp]

; 485  :                         writer->Write(L' ');

  0044f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00456	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00459	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0045d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv302[rbp], rax
  00464	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00468	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0046f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv302[rbp]

; 486  :                         break;

  00475	e9 43 01 00 00	 jmp	 $LN4@WritePrefi
$LN24@WritePrefi:

; 487  :                     case 12:
; 488  :                         writer->Write(_number_format_info->CurrencySymbol);

  0047a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00481	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00484	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00487	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv314[rbp], rax
  0048e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00495	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00499	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  0049f	48 8b d0	 mov	 rdx, rax
  004a2	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  004a9	ff 95 c0 00 00
	00		 call	 QWORD PTR tv314[rbp]

; 489  :                         writer->Write(L' ');

  004af	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  004b6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004b9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  004bd	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv320[rbp], rax
  004c4	66 ba 20 00	 mov	 dx, 32			; 00000020H
  004c8	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  004cf	ff 95 c0 00 00
	00		 call	 QWORD PTR tv320[rbp]

; 490  :                         writer->Write(_number_format_info->NegativeSign);

  004d5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  004dc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004df	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004e2	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv332[rbp], rax
  004e9	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  004f0	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  004f4	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  004fa	48 8b d0	 mov	 rdx, rax
  004fd	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00504	ff 95 c0 00 00
	00		 call	 QWORD PTR tv332[rbp]

; 491  :                         break;

  0050a	e9 ae 00 00 00	 jmp	 $LN4@WritePrefi
$LN25@WritePrefi:

; 492  :                     case 13:
; 493  :                         break;

  0050f	e9 a9 00 00 00	 jmp	 $LN4@WritePrefi
$LN26@WritePrefi:

; 494  :                     case 14:
; 495  :                         writer->Write(L'(');

  00514	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0051b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0051e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00522	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv338[rbp], rax
  00529	66 ba 28 00	 mov	 dx, 40			; 00000028H
  0052d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00534	ff 95 c0 00 00
	00		 call	 QWORD PTR tv338[rbp]

; 496  :                         writer->Write(_number_format_info->CurrencySymbol);

  0053a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00541	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00544	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00547	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv350[rbp], rax
  0054e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00555	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00559	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  0055f	48 8b d0	 mov	 rdx, rax
  00562	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00569	ff 95 c0 00 00
	00		 call	 QWORD PTR tv350[rbp]

; 497  :                         writer->Write(L' ');

  0056f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00576	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00579	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0057d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv356[rbp], rax
  00584	66 ba 20 00	 mov	 dx, 32			; 00000020H
  00588	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0058f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv356[rbp]

; 498  :                         break;

  00595	eb 26		 jmp	 SHORT $LN4@WritePrefi
$LN27@WritePrefi:

; 499  :                     case 15:
; 500  :                         writer->Write(L'(');

  00597	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  0059e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  005a1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  005a5	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv362[rbp], rax
  005ac	66 ba 28 00	 mov	 dx, 40			; 00000028H
  005b0	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  005b7	ff 95 c0 00 00
	00		 call	 QWORD PTR tv362[rbp]
$LN4@WritePrefi:
$LN7@WritePrefi:

; 501  :                         break;
; 502  :                     }
; 503  :                 }
; 504  :             }

  005bd	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  005c4	5f		 pop	 rdi
  005c5	5d		 pop	 rbp
  005c6	c3		 ret	 0
  005c7	90		 npad	 1
$LN29@WritePrefi:
  005c8	00 00 00 00	 DD	 $LN13@WritePrefi
  005cc	00 00 00 00	 DD	 $LN14@WritePrefi
  005d0	00 00 00 00	 DD	 $LN15@WritePrefi
  005d4	00 00 00 00	 DD	 $LN16@WritePrefi
  005d8	00 00 00 00	 DD	 $LN17@WritePrefi
  005dc	00 00 00 00	 DD	 $LN18@WritePrefi
  005e0	00 00 00 00	 DD	 $LN19@WritePrefi
  005e4	00 00 00 00	 DD	 $LN20@WritePrefi
  005e8	00 00 00 00	 DD	 $LN21@WritePrefi
  005ec	00 00 00 00	 DD	 $LN22@WritePrefi
  005f0	00 00 00 00	 DD	 $LN23@WritePrefi
  005f4	00 00 00 00	 DD	 $LN24@WritePrefi
  005f8	00 00 00 00	 DD	 $LN25@WritePrefi
  005fc	00 00 00 00	 DD	 $LN26@WritePrefi
  00600	00 00 00 00	 DD	 $LN27@WritePrefi
?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WritePrefix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
tv88 = 192
tv69 = 192
this$ = 240
writer$ = 248
?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteZeroValue, COMDAT

; 414  :             {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 415  :                 writer->Write(L'0');

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00050	66 ba 30 00	 mov	 dx, 48			; 00000030H
  00054	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0005b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv69[rbp]

; 416  :                 if (_precision > 0)

  00061	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0006c	7e 51		 jle	 SHORT $LN2@WriteZeroV

; 417  :                 {
; 418  :                     writer->Write(_number_format_info->Currency.DecimalSeparator);

  0006e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  00082	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00089	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008d	48 83 c0 04	 add	 rax, 4
  00091	48 8b d0	 mov	 rdx, rax
  00094	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  0009b	ff 95 c0 00 00
	00		 call	 QWORD PTR tv88[rbp]

; 419  :                     writer->Write(L'0', _precision);

  000a1	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a8	48 63 40 18	 movsxd	 rax, DWORD PTR [rax+24]
  000ac	4c 8b c0	 mov	 r8, rax
  000af	66 ba 30 00	 mov	 dx, 48			; 00000030H
  000b3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  000ba	e8 00 00 00 00	 call	 ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
$LN2@WriteZeroV:

; 420  :                 }
; 421  :             }

  000bf	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 224
?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::GetDefaultPrecisionValue, COMDAT

; 409  :             {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 410  :                 return (_number_format_info->Currency.DecimalDigits);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00041	8b 00		 mov	 eax, DWORD PTR [rax]

; 411  :             }

  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 224
precision$ = 232
number_format_info$ = 240
??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatterTypeC, COMDAT

; 404  :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 403  :                 : Formatter(L'C', precision, number_format_info)

  0003f	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR number_format_info$[rbp]
  00046	44 8b 85 e8 00
	00 00		 mov	 r8d, DWORD PTR precision$[rbp]
  0004d	66 ba 43 00	 mov	 dx, 67			; 00000043H
  00051	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter

; 404  :             {

  0005d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 405  :             }

  0006e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007c	5f		 pop	 rdi
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatterTypeC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z
_TEXT	SEGMENT
tv71 = 192
this$ = 240
writer$ = 248
d$ = 256
?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit, COMDAT

; 392  :             {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 393  :                 writer->Write(L'0' + d);

  00040	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR writer$[rbp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00055	8b 85 00 01 00
	00		 mov	 eax, DWORD PTR d$[rbp]
  0005b	83 c0 30	 add	 eax, 48			; 00000030H
  0005e	0f b7 d0	 movzx	 edx, ax
  00061	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR writer$[rbp]
  00068	ff 95 c0 00 00
	00		 call	 QWORD PTR tv71[rbp]

; 394  :             }

  0006e	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00075	5f		 pop	 rdi
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z
_TEXT	SEGMENT
r$ = 8
this$ = 256
writer$ = 264
x$ = 272
?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord, COMDAT

; 332  :             {

$LN15:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 333  :                 __UNIT_TYPE r;
; 334  :                 if (sizeof(__UNIT_TYPE) >= sizeof(_UINT64_T))

  00040	33 c0		 xor	 eax, eax
  00042	83 f8 01	 cmp	 eax, 1
  00045	0f 84 39 02 00
	00		 je	 $LN2@WriteTrail

; 335  :                 {
; 336  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0004b	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  0004f	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00055	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  0005c	33 c9		 xor	 ecx, ecx
  0005e	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00063	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0006a	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  0006e	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00075	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0007c	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 337  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00081	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  00085	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0008b	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  00092	33 c9		 xor	 ecx, ecx
  00094	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00099	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  000a0	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  000a4	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  000ab	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b2	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 338  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  000b7	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  000bb	41 b8 0a 00 00
	00		 mov	 r8d, 10
  000c1	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  000c8	33 c9		 xor	 ecx, ecx
  000ca	e8 00 00 00 00	 call	 _DIVREM_UNIT
  000cf	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  000d6	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  000da	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  000e1	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e8	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 339  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  000ed	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  000f1	41 b8 0a 00 00
	00		 mov	 r8d, 10
  000f7	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  000fe	33 c9		 xor	 ecx, ecx
  00100	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00105	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0010c	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  00110	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00117	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011e	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 340  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00123	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  00127	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0012d	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  00134	33 c9		 xor	 ecx, ecx
  00136	e8 00 00 00 00	 call	 _DIVREM_UNIT
  0013b	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00142	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  00146	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  0014d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00154	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 341  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00159	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  0015d	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00163	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  0016a	33 c9		 xor	 ecx, ecx
  0016c	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00171	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00178	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  0017c	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00183	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0018a	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 342  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0018f	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  00193	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00199	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  001a0	33 c9		 xor	 ecx, ecx
  001a2	e8 00 00 00 00	 call	 _DIVREM_UNIT
  001a7	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  001ae	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  001b2	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  001b9	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001c0	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 343  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  001c5	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  001c9	41 b8 0a 00 00
	00		 mov	 r8d, 10
  001cf	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  001d6	33 c9		 xor	 ecx, ecx
  001d8	e8 00 00 00 00	 call	 _DIVREM_UNIT
  001dd	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  001e4	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  001e8	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  001ef	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001f6	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 344  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  001fb	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  001ff	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00205	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  0020c	33 c9		 xor	 ecx, ecx
  0020e	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00213	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0021a	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  0021e	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00225	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0022c	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 345  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00231	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  00235	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0023b	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  00242	33 c9		 xor	 ecx, ecx
  00244	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00249	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00250	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  00254	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  0025b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00262	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 346  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 347  :                     if (sizeof(r) == sizeof(_UINT64_T))

  00267	33 c0		 xor	 eax, eax
  00269	83 f8 01	 cmp	 eax, 1
  0026c	74 0c		 je	 SHORT $LN3@WriteTrail

; 348  :                         AddToDIV64Counter(10);

  0026e	b9 0a 00 00 00	 mov	 ecx, 10
  00273	e8 00 00 00 00	 call	 ?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToDIV64Counter

; 349  :                     else

  00278	eb 0a		 jmp	 SHORT $LN4@WriteTrail
$LN3@WriteTrail:

; 350  :                         AddToDIV32Counter(10);

  0027a	b9 0a 00 00 00	 mov	 ecx, 10
  0027f	e8 00 00 00 00	 call	 ?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToDIV32Counter
$LN4@WriteTrail:
$LN2@WriteTrail:

; 351  : #endif
; 352  :                 }
; 353  :                 if (sizeof(__UNIT_TYPE) >= sizeof(_UINT32_T))

  00284	33 c0		 xor	 eax, eax
  00286	83 f8 01	 cmp	 eax, 1
  00289	0f 84 2b 01 00
	00		 je	 $LN5@WriteTrail

; 354  :                 {
; 355  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0028f	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  00293	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00299	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  002a0	33 c9		 xor	 ecx, ecx
  002a2	e8 00 00 00 00	 call	 _DIVREM_UNIT
  002a7	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  002ae	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  002b2	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  002b9	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  002c0	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 356  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  002c5	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  002c9	41 b8 0a 00 00
	00		 mov	 r8d, 10
  002cf	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  002d6	33 c9		 xor	 ecx, ecx
  002d8	e8 00 00 00 00	 call	 _DIVREM_UNIT
  002dd	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  002e4	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  002e8	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  002ef	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  002f6	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 357  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  002fb	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  002ff	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00305	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  0030c	33 c9		 xor	 ecx, ecx
  0030e	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00313	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0031a	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  0031e	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00325	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0032c	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 358  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00331	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  00335	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0033b	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  00342	33 c9		 xor	 ecx, ecx
  00344	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00349	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00350	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  00354	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  0035b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00362	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 359  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00367	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  0036b	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00371	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  00378	33 c9		 xor	 ecx, ecx
  0037a	e8 00 00 00 00	 call	 _DIVREM_UNIT
  0037f	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00386	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  0038a	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00391	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00398	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 360  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 361  :                     if (sizeof(r) == sizeof(_UINT64_T))

  0039d	33 c0		 xor	 eax, eax
  0039f	83 f8 01	 cmp	 eax, 1
  003a2	74 0c		 je	 SHORT $LN6@WriteTrail

; 362  :                         AddToDIV64Counter(5);

  003a4	b9 05 00 00 00	 mov	 ecx, 5
  003a9	e8 00 00 00 00	 call	 ?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToDIV64Counter

; 363  :                     else

  003ae	eb 0a		 jmp	 SHORT $LN7@WriteTrail
$LN6@WriteTrail:

; 364  :                         AddToDIV32Counter(5);

  003b0	b9 05 00 00 00	 mov	 ecx, 5
  003b5	e8 00 00 00 00	 call	 ?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToDIV32Counter
$LN7@WriteTrail:
$LN5@WriteTrail:

; 365  : #endif
; 366  :                 }
; 367  :                 if (sizeof(__UNIT_TYPE) >= sizeof(_UINT16_T))

  003ba	33 c0		 xor	 eax, eax
  003bc	83 f8 01	 cmp	 eax, 1
  003bf	0f 84 89 00 00
	00		 je	 $LN8@WriteTrail

; 368  :                 {
; 369  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  003c5	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  003c9	41 b8 0a 00 00
	00		 mov	 r8d, 10
  003cf	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  003d6	33 c9		 xor	 ecx, ecx
  003d8	e8 00 00 00 00	 call	 _DIVREM_UNIT
  003dd	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  003e4	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  003e8	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  003ef	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  003f6	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 370  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  003fb	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  003ff	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00405	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  0040c	33 c9		 xor	 ecx, ecx
  0040e	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00413	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  0041a	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  0041e	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00425	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0042c	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 371  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 372  :                     if (sizeof(r) == sizeof(_UINT64_T))

  00431	33 c0		 xor	 eax, eax
  00433	83 f8 01	 cmp	 eax, 1
  00436	74 0c		 je	 SHORT $LN9@WriteTrail

; 373  :                         AddToDIV64Counter(2);

  00438	b9 02 00 00 00	 mov	 ecx, 2
  0043d	e8 00 00 00 00	 call	 ?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToDIV64Counter

; 374  :                     else

  00442	eb 0a		 jmp	 SHORT $LN10@WriteTrail
$LN9@WriteTrail:

; 375  :                         AddToDIV32Counter(2);

  00444	b9 02 00 00 00	 mov	 ecx, 2
  00449	e8 00 00 00 00	 call	 ?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ; Palmtree::Math::Core::Internal::AddToDIV32Counter
$LN10@WriteTrail:
$LN8@WriteTrail:

; 376  : #endif
; 377  :                 }
; 378  :                 if (sizeof(__UNIT_TYPE) >= sizeof(_BYTE_T))

  0044e	33 c0		 xor	 eax, eax
  00450	83 f8 01	 cmp	 eax, 1
  00453	74 63		 je	 SHORT $LN11@WriteTrail

; 379  :                 {
; 380  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00455	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  00459	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0045f	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  00466	33 c9		 xor	 ecx, ecx
  00468	e8 00 00 00 00	 call	 _DIVREM_UNIT
  0046d	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax
  00474	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  00478	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  0047f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00486	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 381  :                     WriteDigit(writer, (_UINT32_T)x);

  0048b	44 8b 85 10 01
	00 00		 mov	 r8d, DWORD PTR x$[rbp]
  00492	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00499	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  004a0	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 382  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 383  :                     if (sizeof(r) == sizeof(_UINT64_T))

  004a5	33 c0		 xor	 eax, eax
  004a7	83 f8 01	 cmp	 eax, 1
  004aa	74 07		 je	 SHORT $LN12@WriteTrail

; 384  :                         IncrementDIV64Counter();

  004ac	e8 00 00 00 00	 call	 ?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::IncrementDIV64Counter

; 385  :                     else

  004b1	eb 05		 jmp	 SHORT $LN13@WriteTrail
$LN12@WriteTrail:

; 386  :                         IncrementDIV32Counter();

  004b3	e8 00 00 00 00	 call	 ?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::IncrementDIV32Counter
$LN13@WriteTrail:
$LN11@WriteTrail:

; 387  : #endif
; 388  :                 }
; 389  :             }

  004b8	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  004bc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcFrameData
  004c3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  004c8	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  004cf	5f		 pop	 rdi
  004d0	5d		 pop	 rbp
  004d1	c3		 ret	 0
?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z
_TEXT	SEGMENT
r$ = 8
this$ = 256
writer$ = 264
x$ = 272
?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord, COMDAT

; 315  :             {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@WriteLeadi:

; 316  :                 __UNIT_TYPE r;
; 317  :                 do
; 318  :                 {
; 319  :                     x = _DIVREM_UNIT(0, x, 10, &r);

  00040	4c 8d 4d 08	 lea	 r9, QWORD PTR r$[rbp]
  00044	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0004a	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  00051	33 c9		 xor	 ecx, ecx
  00053	e8 00 00 00 00	 call	 _DIVREM_UNIT
  00058	48 89 85 10 01
	00 00		 mov	 QWORD PTR x$[rbp], rax

; 320  :                     WriteDigit(writer, (_UINT32_T)r);

  0005f	44 8b 45 08	 mov	 r8d, DWORD PTR r$[rbp]
  00063	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  0006a	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00071	e8 00 00 00 00	 call	 ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit

; 321  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 322  :                     if (sizeof(r) == sizeof(_UINT64_T))

  00076	33 c0		 xor	 eax, eax
  00078	83 f8 01	 cmp	 eax, 1
  0007b	74 07		 je	 SHORT $LN5@WriteLeadi

; 323  :                         IncrementDIV64Counter();

  0007d	e8 00 00 00 00	 call	 ?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::IncrementDIV64Counter

; 324  :                     else

  00082	eb 05		 jmp	 SHORT $LN6@WriteLeadi
$LN5@WriteLeadi:

; 325  :                         IncrementDIV32Counter();

  00084	e8 00 00 00 00	 call	 ?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::IncrementDIV32Counter
$LN6@WriteLeadi:

; 326  : #endif
; 327  :                 } while (x != 0);

  00089	48 83 bd 10 01
	00 00 00	 cmp	 QWORD PTR x$[rbp], 0
  00091	75 ad		 jne	 SHORT $LN4@WriteLeadi

; 328  :             }

  00093	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00097	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z$rtcFrameData
  0009e	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a3	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000aa	5f		 pop	 rdi
  000ab	5d		 pop	 rbp
  000ac	c3		 ret	 0
?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z
_TEXT	SEGMENT
simple_number_sequence_writer$ = 8
in_ptr$ = 72
in_count$ = 104
this$ = 352
in_buf$ = 360
in_buf_count$ = 368
out_buf$ = 376
out_buf_count$ = 384
?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence, COMDAT

; 298  :             {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 299  :                 ReverseStringWriter simple_number_sequence_writer(out_buf, out_buf_count);

  00045	4c 8b 85 80 01
	00 00		 mov	 r8, QWORD PTR out_buf_count$[rbp]
  0004c	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR out_buf$[rbp]
  00053	48 8d 4d 08	 lea	 rcx, QWORD PTR simple_number_sequence_writer$[rbp]
  00057	e8 00 00 00 00	 call	 ??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter

; 300  : 
; 301  :                 __UNIT_TYPE* in_ptr = in_buf;

  0005c	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR in_buf$[rbp]
  00063	48 89 45 48	 mov	 QWORD PTR in_ptr$[rbp], rax

; 302  :                 __UNIT_TYPE in_count = in_buf_count - 1;

  00067	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR in_buf_count$[rbp]
  0006e	48 ff c8	 dec	 rax
  00071	48 89 45 68	 mov	 QWORD PTR in_count$[rbp], rax
$LN2@ConstructS:

; 303  :                 while (in_count != 0)

  00075	48 83 7d 68 00	 cmp	 QWORD PTR in_count$[rbp], 0
  0007a	74 30		 je	 SHORT $LN3@ConstructS

; 304  :                 {
; 305  :                     WriteTrailingWord(&simple_number_sequence_writer, *in_ptr);

  0007c	48 8b 45 48	 mov	 rax, QWORD PTR in_ptr$[rbp]
  00080	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00083	48 8d 55 08	 lea	 rdx, QWORD PTR simple_number_sequence_writer$[rbp]
  00087	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008e	e8 00 00 00 00	 call	 ?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord

; 306  :                     ++in_ptr;

  00093	48 8b 45 48	 mov	 rax, QWORD PTR in_ptr$[rbp]
  00097	48 83 c0 08	 add	 rax, 8
  0009b	48 89 45 48	 mov	 QWORD PTR in_ptr$[rbp], rax

; 307  :                     --in_count;

  0009f	48 8b 45 68	 mov	 rax, QWORD PTR in_count$[rbp]
  000a3	48 ff c8	 dec	 rax
  000a6	48 89 45 68	 mov	 QWORD PTR in_count$[rbp], rax

; 308  :                 }

  000aa	eb c9		 jmp	 SHORT $LN2@ConstructS
$LN3@ConstructS:

; 309  :                 WriteLeadingOneWord(&simple_number_sequence_writer, *in_ptr);

  000ac	48 8b 45 48	 mov	 rax, QWORD PTR in_ptr$[rbp]
  000b0	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000b3	48 8d 55 08	 lea	 rdx, QWORD PTR simple_number_sequence_writer$[rbp]
  000b7	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000be	e8 00 00 00 00	 call	 ?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord

; 310  :                 return (simple_number_sequence_writer.GetString());

  000c3	48 8d 4d 08	 lea	 rcx, QWORD PTR simple_number_sequence_writer$[rbp]
  000c7	e8 00 00 00 00	 call	 ?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::ReverseStringWriter::GetString

; 311  :             }

  000cc	48 8b f8	 mov	 rdi, rax
  000cf	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z$rtcFrameData
  000da	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000df	48 8b c7	 mov	 rax, rdi
  000e2	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000e9	5f		 pop	 rdi
  000ea	5d		 pop	 rbp
  000eb	c3		 ret	 0
?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
_TEXT	SEGMENT
root$ = 8
work_bit_count$ = 72
u_ptr$ = 104
q_ptr$ = 136
r_ptr$ = 168
work_u_count$ = 200
r_value$5 = 232
temp$6 = 264
$T7 = 488
$T8 = 520
this$ = 576
x$ = 584
r_buf$ = 592
?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber, COMDAT

; 273  :             {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 58 02
	00 00		 sub	 rsp, 600		; 00000258H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 96 00 00 00	 mov	 ecx, 150		; 00000096H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 78
	02 00 00	 mov	 rcx, QWORD PTR [rsp+632]
  00034	48 c7 85 08 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T8[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 274  :                 ResourceHolderUINT root;

  0004b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0004f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00054	90		 npad	 1

; 275  :                 __UNIT_TYPE work_bit_count = x->UNIT_BIT_COUNT + __UNIT_TYPE_BIT_COUNT;

  00055	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  0005c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00060	48 83 c0 40	 add	 rax, 64			; 00000040H
  00064	48 89 45 48	 mov	 QWORD PTR work_bit_count$[rbp], rax

; 276  :                 __UNIT_TYPE* u_ptr = root.AllocateBlock(work_bit_count);

  00068	48 8b 55 48	 mov	 rdx, QWORD PTR work_bit_count$[rbp]
  0006c	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00070	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00075	48 89 45 68	 mov	 QWORD PTR u_ptr$[rbp], rax

; 277  :                 __UNIT_TYPE* q_ptr = root.AllocateBlock(work_bit_count);

  00079	48 8b 55 48	 mov	 rdx, QWORD PTR work_bit_count$[rbp]
  0007d	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00081	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00086	48 89 85 88 00
	00 00		 mov	 QWORD PTR q_ptr$[rbp], rax

; 278  :                 _COPY_MEMORY_UNIT(u_ptr, x->BLOCK, x->BLOCK_COUNT);

  0008d	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00094	4c 8b 40 38	 mov	 r8, QWORD PTR [rax+56]
  00098	48 8b 85 48 02
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  0009f	48 8b 50 40	 mov	 rdx, QWORD PTR [rax+64]
  000a3	48 8b 4d 68	 mov	 rcx, QWORD PTR u_ptr$[rbp]
  000a7	e8 00 00 00 00	 call	 _COPY_MEMORY_UNIT

; 279  :                 __UNIT_TYPE* r_ptr = r_buf;

  000ac	48 8b 85 50 02
	00 00		 mov	 rax, QWORD PTR r_buf$[rbp]
  000b3	48 89 85 a8 00
	00 00		 mov	 QWORD PTR r_ptr$[rbp], rax

; 280  :                 __UNIT_TYPE work_u_count = _DIVIDE_CEILING_UNIT(work_bit_count, __UNIT_TYPE_BIT_COUNT);

  000ba	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  000bf	48 8b 4d 48	 mov	 rcx, QWORD PTR work_bit_count$[rbp]
  000c3	e8 00 00 00 00	 call	 _DIVIDE_CEILING_UNIT
  000c8	48 89 85 c8 00
	00 00		 mov	 QWORD PTR work_u_count$[rbp], rax
$LN2@ConvertAs1:

; 281  :                 while (work_u_count > 0)

  000cf	48 83 bd c8 00
	00 00 00	 cmp	 QWORD PTR work_u_count$[rbp], 0
  000d7	0f 86 ca 00 00
	00		 jbe	 $LN3@ConvertAs1

; 282  :                 {
; 283  :                     root.ClearBlock(q_ptr);

  000dd	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR q_ptr$[rbp]
  000e4	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000e8	e8 00 00 00 00	 call	 ?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock

; 284  :                     __UNIT_TYPE r_value;
; 285  :                     DivRem_X_1W(u_ptr, work_u_count, _10n_base_number, q_ptr, &r_value);

  000ed	48 8d 85 e8 00
	00 00		 lea	 rax, QWORD PTR r_value$5[rbp]
  000f4	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000f9	4c 8b 8d 88 00
	00 00		 mov	 r9, QWORD PTR q_ptr$[rbp]
  00100	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00107	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0010b	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR work_u_count$[rbp]
  00112	48 8b 4d 68	 mov	 rcx, QWORD PTR u_ptr$[rbp]
  00116	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 286  :                     root.CheckBlock(q_ptr);

  0011b	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR q_ptr$[rbp]
  00122	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00126	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 287  :                     *r_ptr++ = r_value;

  0012b	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR r_ptr$[rbp]
  00132	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR r_value$5[rbp]
  00139	48 89 08	 mov	 QWORD PTR [rax], rcx
  0013c	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR r_ptr$[rbp]
  00143	48 83 c0 08	 add	 rax, 8
  00147	48 89 85 a8 00
	00 00		 mov	 QWORD PTR r_ptr$[rbp], rax

; 288  :                     __UNIT_TYPE* temp = u_ptr;

  0014e	48 8b 45 68	 mov	 rax, QWORD PTR u_ptr$[rbp]
  00152	48 89 85 08 01
	00 00		 mov	 QWORD PTR temp$6[rbp], rax

; 289  :                     u_ptr = q_ptr;

  00159	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR q_ptr$[rbp]
  00160	48 89 45 68	 mov	 QWORD PTR u_ptr$[rbp], rax

; 290  :                     q_ptr = temp;

  00164	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR temp$6[rbp]
  0016b	48 89 85 88 00
	00 00		 mov	 QWORD PTR q_ptr$[rbp], rax
$LN4@ConvertAs1:

; 291  :                     while (work_u_count > 0 && u_ptr[work_u_count - 1] == 0)

  00172	48 83 bd c8 00
	00 00 00	 cmp	 QWORD PTR work_u_count$[rbp], 0
  0017a	76 26		 jbe	 SHORT $LN5@ConvertAs1
  0017c	48 8b 45 68	 mov	 rax, QWORD PTR u_ptr$[rbp]
  00180	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR work_u_count$[rbp]
  00187	48 83 7c c8 f8
	00		 cmp	 QWORD PTR [rax+rcx*8-8], 0
  0018d	75 13		 jne	 SHORT $LN5@ConvertAs1

; 292  :                         --work_u_count;

  0018f	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR work_u_count$[rbp]
  00196	48 ff c8	 dec	 rax
  00199	48 89 85 c8 00
	00 00		 mov	 QWORD PTR work_u_count$[rbp], rax
  001a0	eb d0		 jmp	 SHORT $LN4@ConvertAs1
$LN5@ConvertAs1:

; 293  :                 }

  001a2	e9 28 ff ff ff	 jmp	 $LN2@ConvertAs1
$LN3@ConvertAs1:

; 294  :                 return (r_ptr - r_buf);

  001a7	48 8b 85 50 02
	00 00		 mov	 rax, QWORD PTR r_buf$[rbp]
  001ae	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR r_ptr$[rbp]
  001b5	48 2b c8	 sub	 rcx, rax
  001b8	48 8b c1	 mov	 rax, rcx
  001bb	48 c1 f8 03	 sar	 rax, 3
  001bf	48 89 85 e8 01
	00 00		 mov	 QWORD PTR $T7[rbp], rax
  001c6	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  001ca	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001cf	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR $T7[rbp]

; 295  :             }

  001d6	48 8b f8	 mov	 rdi, rax
  001d9	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  001dd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z$rtcFrameData
  001e4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001e9	48 8b c7	 mov	 rax, rdi
  001ec	48 8d a5 28 02
	00 00		 lea	 rsp, QWORD PTR [rbp+552]
  001f3	5f		 pop	 rdi
  001f4	5d		 pop	 rbp
  001f5	c3		 ret	 0
?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
work_bit_count$ = 72
u_ptr$ = 104
q_ptr$ = 136
r_ptr$ = 168
work_u_count$ = 200
r_value$5 = 232
temp$6 = 264
$T7 = 488
$T8 = 520
this$ = 576
x$ = 584
r_buf$ = 592
?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
work_bit_count$ = 72
u_ptr$ = 104
q_ptr$ = 136
r_ptr$ = 168
work_u_count$ = 200
r_value$5 = 232
temp$6 = 264
$T7 = 488
$T8 = 520
this$ = 576
x$ = 584
r_buf$ = 592
?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
_TEXT	SEGMENT
root$ = 8
_10n_based_number_bit_count$ = 72
_10n_based_number_buf$ = 104
_10n_based_number_buf_count$ = 136
simple_number_sequence_buf_size$ = 168
simple_number_sequence$ = 200
top_of_simple_number_sequence$ = 232
$T4 = 456
tv133 = 472
this$ = 512
x_abs$ = 520
writer$ = 528
?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally, COMDAT

; 246  :             {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 18 02
	00 00		 sub	 rsp, 536		; 00000218H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 86 00 00 00	 mov	 ecx, 134		; 00000086H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 38
	02 00 00	 mov	 rcx, QWORD PTR [rsp+568]
  00034	48 c7 85 c8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T4[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 247  :                 ResourceHolderUINT root;

  0004b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0004f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00054	90		 npad	 1

; 248  :                 __UNIT_TYPE _10n_based_number_bit_count = x_abs->UNIT_BIT_COUNT + _DIVIDE_CEILING_UNIT(x_abs->UNIT_BIT_COUNT, 8);

  00055	ba 08 00 00 00	 mov	 edx, 8
  0005a	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  00061	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  00065	e8 00 00 00 00	 call	 _DIVIDE_CEILING_UNIT
  0006a	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR x_abs$[rbp]
  00071	48 03 41 20	 add	 rax, QWORD PTR [rcx+32]
  00075	48 89 45 48	 mov	 QWORD PTR _10n_based_number_bit_count$[rbp], rax

; 249  :                 __UNIT_TYPE* _10n_based_number_buf = root.AllocateBlock(_10n_based_number_bit_count);

  00079	48 8b 55 48	 mov	 rdx, QWORD PTR _10n_based_number_bit_count$[rbp]
  0007d	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00081	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00086	48 89 45 68	 mov	 QWORD PTR _10n_based_number_buf$[rbp], rax

; 250  :                 __UNIT_TYPE _10n_based_number_buf_count = ConvertAs10nBasedNumber(x_abs, _10n_based_number_buf);

  0008a	4c 8b 45 68	 mov	 r8, QWORD PTR _10n_based_number_buf$[rbp]
  0008e	48 8b 95 08 02
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  00095	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009c	e8 00 00 00 00	 call	 ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber
  000a1	48 89 85 88 00
	00 00		 mov	 QWORD PTR _10n_based_number_buf_count$[rbp], rax

; 251  :                 __UNIT_TYPE simple_number_sequence_buf_size = digit_count_on_word * _10n_based_number_buf_count + 1;

  000a8	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000af	48 63 40 10	 movsxd	 rax, DWORD PTR [rax+16]
  000b3	48 0f af 85 88
	00 00 00	 imul	 rax, QWORD PTR _10n_based_number_buf_count$[rbp]
  000bb	48 ff c0	 inc	 rax
  000be	48 89 85 a8 00
	00 00		 mov	 QWORD PTR simple_number_sequence_buf_size$[rbp], rax

; 252  :                 wchar_t* simple_number_sequence = root.AllocateString(simple_number_sequence_buf_size);

  000c5	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR simple_number_sequence_buf_size$[rbp]
  000cc	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000d0	e8 00 00 00 00	 call	 ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
  000d5	48 89 85 c8 00
	00 00		 mov	 QWORD PTR simple_number_sequence$[rbp], rax

; 253  :                 wchar_t* top_of_simple_number_sequence = ConstructSimpleNumberSequence(_10n_based_number_buf, _10n_based_number_buf_count, simple_number_sequence, simple_number_sequence_buf_size);

  000dc	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR simple_number_sequence_buf_size$[rbp]
  000e3	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e8	4c 8b 8d c8 00
	00 00		 mov	 r9, QWORD PTR simple_number_sequence$[rbp]
  000ef	4c 8b 85 88 00
	00 00		 mov	 r8, QWORD PTR _10n_based_number_buf_count$[rbp]
  000f6	48 8b 55 68	 mov	 rdx, QWORD PTR _10n_based_number_buf$[rbp]
  000fa	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00101	e8 00 00 00 00	 call	 ?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence
  00106	48 89 85 e8 00
	00 00		 mov	 QWORD PTR top_of_simple_number_sequence$[rbp], rax

; 254  :                 root.DeallocateBlock(_10n_based_number_buf);

  0010d	48 8b 55 68	 mov	 rdx, QWORD PTR _10n_based_number_buf$[rbp]
  00111	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00115	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 255  :                 FormatNumberSequence(top_of_simple_number_sequence, writer);

  0011a	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00121	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00124	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00128	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv133[rbp], rax
  0012f	4c 8b 85 10 02
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  00136	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR top_of_simple_number_sequence$[rbp]
  0013d	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00144	ff 95 d8 01 00
	00		 call	 QWORD PTR tv133[rbp]

; 256  :                 root.DeallocateString(simple_number_sequence);

  0014a	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR simple_number_sequence$[rbp]
  00151	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00155	e8 00 00 00 00	 call	 ?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
  0015a	90		 npad	 1

; 257  :             }

  0015b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0015f	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00164	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00168	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z$rtcFrameData
  0016f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00174	48 8d a5 e8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+488]
  0017b	5f		 pop	 rdi
  0017c	5d		 pop	 rbp
  0017d	c3		 ret	 0
?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
_10n_based_number_bit_count$ = 72
_10n_based_number_buf$ = 104
_10n_based_number_buf_count$ = 136
simple_number_sequence_buf_size$ = 168
simple_number_sequence$ = 200
top_of_simple_number_sequence$ = 232
$T4 = 456
tv133 = 472
this$ = 512
x_abs$ = 520
writer$ = 528
?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
_10n_based_number_bit_count$ = 72
_10n_based_number_buf$ = 104
_10n_based_number_buf_count$ = 136
simple_number_sequence_buf_size$ = 168
simple_number_sequence$ = 200
top_of_simple_number_sequence$ = 232
$T4 = 456
tv133 = 472
this$ = 512
x_abs$ = 520
writer$ = 528
?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 280
tv160 = 344
tv153 = 344
tv146 = 344
tv132 = 344
tv93 = 344
tv87 = 344
this$ = 384
x_sign$ = 392
x_abs$ = 400
writer$ = 408
?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format, COMDAT

; 211  :             {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 212  :                 if (_precision < 0)

  00044	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	83 78 18 00	 cmp	 DWORD PTR [rax+24], 0
  0004f	7d 1d		 jge	 SHORT $LN2@Format

; 213  :                     _precision = GetDefaultPrecisionValue();

  00051	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005b	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00062	ff 10		 call	 QWORD PTR [rax]
  00064	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006b	89 41 18	 mov	 DWORD PTR [rcx+24], eax
$LN2@Format:

; 214  :                 if (x_abs->IS_ZERO)

  0006e	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR x_abs$[rbp]
  00075	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00078	83 e0 01	 and	 eax, 1
  0007b	85 c0		 test	 eax, eax
  0007d	0f 84 c6 00 00
	00		 je	 $LN3@Format

; 215  :                 {
; 216  :                     // x == 0 の場合
; 217  :                     if (x_sign != 0)

  00083	0f be 85 88 01
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  0008a	85 c0		 test	 eax, eax
  0008c	74 2d		 je	 SHORT $LN5@Format

; 218  :                         throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_tostring.cpp;Formatter::Format;1");

  0008e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@
  00095	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  0009c	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  000a3	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000af	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  000b6	e8 00 00 00 00	 call	 _CxxThrowException
$LN5@Format:

; 219  :                     WritePrefix(x_sign, writer);

  000bb	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c5	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000c9	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000d0	4c 8b 85 98 01
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  000d7	0f b6 95 88 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  000de	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e5	ff 95 58 01 00
	00		 call	 QWORD PTR tv87[rbp]

; 220  :                     WriteZeroValue(writer);

  000eb	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f5	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000f9	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  00100	48 8b 95 98 01
	00 00		 mov	 rdx, QWORD PTR writer$[rbp]
  00107	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0010e	ff 95 58 01 00
	00		 call	 QWORD PTR tv93[rbp]

; 221  :                     WriteSuffix(x_sign, writer);

  00114	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0011e	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00122	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv132[rbp], rax
  00129	4c 8b 85 98 01
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  00130	0f b6 95 88 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  00137	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0013e	ff 95 58 01 00
	00		 call	 QWORD PTR tv132[rbp]

; 222  :                 }
; 223  :                 else

  00144	e9 c8 00 00 00	 jmp	 $LN4@Format
$LN3@Format:

; 224  :                 {
; 225  :                     // x != 0 の場合
; 226  :                     if (x_sign == 0)

  00149	0f be 85 88 01
	00 00		 movsx	 eax, BYTE PTR x_sign$[rbp]
  00150	85 c0		 test	 eax, eax
  00152	75 2d		 jne	 SHORT $LN6@Format

; 227  :                         throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_tostring.cpp;Formatter::Format;1");

  00154	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@
  0015b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  00162	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00169	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0016e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00175	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0017c	e8 00 00 00 00	 call	 _CxxThrowException
$LN6@Format:

; 228  : 
; 229  :                     WritePrefix(x_sign, writer);

  00181	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00188	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0018b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0018f	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv146[rbp], rax
  00196	4c 8b 85 98 01
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  0019d	0f b6 95 88 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  001a4	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001ab	ff 95 58 01 00
	00		 call	 QWORD PTR tv146[rbp]

; 230  :                     FormatInternally(x_abs, writer);

  001b1	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001b8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001bb	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001bf	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv153[rbp], rax
  001c6	4c 8b 85 98 01
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  001cd	48 8b 95 90 01
	00 00		 mov	 rdx, QWORD PTR x_abs$[rbp]
  001d4	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001db	ff 95 58 01 00
	00		 call	 QWORD PTR tv153[rbp]

; 231  :                     WriteSuffix(x_sign, writer);

  001e1	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001e8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001eb	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  001ef	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv160[rbp], rax
  001f6	4c 8b 85 98 01
	00 00		 mov	 r8, QWORD PTR writer$[rbp]
  001fd	0f b6 95 88 01
	00 00		 movzx	 edx, BYTE PTR x_sign$[rbp]
  00204	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0020b	ff 95 58 01 00
	00		 call	 QWORD PTR tv160[rbp]
$LN4@Format:
$LN7@Format:

; 232  :                 }
; 233  :             }

  00211	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  00218	5f		 pop	 rdi
  00219	5d		 pop	 rbp
  0021a	c3		 ret	 0
?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 224
format_type$ = 232
precision$ = 240
number_format_info$ = 248
??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter, COMDAT

; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00053	48 89 08	 mov	 QWORD PTR [rax], rcx

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00056	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 b9 00 00 e8
	89 04 23 c7 8a	 mov	 rcx, -8446744073709551616 ; 8ac7230489e80000H
  00067	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 191  :             const int digit_count_on_word = 19;

  0006b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00072	c7 40 10 13 00
	00 00		 mov	 DWORD PTR [rax+16], 19

; 203  :             {
; 204  :                 _format_type = format_type;

  00079	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00080	0f b7 8d e8 00
	00 00		 movzx	 ecx, WORD PTR format_type$[rbp]
  00087	66 89 48 14	 mov	 WORD PTR [rax+20], cx

; 205  :                 _precision = precision;

  0008b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00092	8b 8d f0 00 00
	00		 mov	 ecx, DWORD PTR precision$[rbp]
  00098	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 206  :                 _number_format_info = number_format_info;

  0009b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a2	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR number_format_info$[rbp]
  000a9	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 207  :             }

  000ad	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b4	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000bb	5f		 pop	 rdi
  000bc	5d		 pop	 rbp
  000bd	c3		 ret	 0
??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 224
?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString, COMDAT

; 178  :             {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 179  :                 return (_native_writer->GetString());

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00041	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00048	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004f	ff 50 10	 call	 QWORD PTR [rax+16]

; 180  :             }

  00052	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00059	5f		 pop	 rdi
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
tv77 = 192
tv74 = 200
this$ = 240
str$ = 248
?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write, COMDAT

; 172  :             {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@Write:

; 173  :                 while (*str != L'\0')

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR str$[rbp]
  00042	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00045	85 c0		 test	 eax, eax
  00047	74 4e		 je	 SHORT $LN3@Write

; 174  :                     Write(*str++);

  00049	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00053	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  0005e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR str$[rbp]
  00065	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00068	66 89 85 c8 00
	00 00		 mov	 WORD PTR tv74[rbp], ax
  0006f	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR str$[rbp]
  00076	48 83 c0 02	 add	 rax, 2
  0007a	48 89 85 f8 00
	00 00		 mov	 QWORD PTR str$[rbp], rax
  00081	0f b7 95 c8 00
	00 00		 movzx	 edx, WORD PTR tv74[rbp]
  00088	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv77[rbp]
  00095	eb a4		 jmp	 SHORT $LN2@Write
$LN3@Write:

; 175  :             }

  00097	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0009e	5f		 pop	 rdi
  0009f	5d		 pop	 rbp
  000a0	c3		 ret	 0
?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
_TEXT	SEGMENT
tv172 = 192
tv157 = 192
tv130 = 192
tv86 = 192
tv174 = 200
tv159 = 200
tv132 = 200
tv88 = 200
this$ = 240
c$ = 248
?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write, COMDAT

; 136  :             {

$LN8:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 137  :                 if (_is_supported_thousand && c >= L'0' && c <= L'9')

  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  00045	83 e0 01	 and	 eax, 1
  00048	85 c0		 test	 eax, eax
  0004a	0f 84 8e 01 00
	00		 je	 $LN2@Write
  00050	0f b7 85 f8 00
	00 00		 movzx	 eax, WORD PTR c$[rbp]
  00057	83 f8 30	 cmp	 eax, 48			; 00000030H
  0005a	0f 8c 7e 01 00
	00		 jl	 $LN2@Write
  00060	0f b7 85 f8 00
	00 00		 movzx	 eax, WORD PTR c$[rbp]
  00067	83 f8 39	 cmp	 eax, 57			; 00000039H
  0006a	0f 8f 6e 01 00
	00		 jg	 $LN2@Write

; 138  :                 {
; 139  :                     // 桁区切りをサポートする場合
; 140  :                     if (_current_group_size > 0 && _current_group_index >= _current_group_size)

  00070	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00077	83 78 48 00	 cmp	 DWORD PTR [rax+72], 0
  0007b	0f 8e 06 01 00
	00		 jle	 $LN4@Write
  00081	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00088	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008f	8b 49 48	 mov	 ecx, DWORD PTR [rcx+72]
  00092	39 48 4c	 cmp	 DWORD PTR [rax+76], ecx
  00095	0f 8c ec 00 00
	00		 jl	 $LN4@Write

; 141  :                     {
; 142  :                         // 現在のグループ幅が 0 ではなく、かつ既に出力した文字数がグループ幅に達した場合
; 143  : 
; 144  :                         // グループ区切り文字を出力してから与えられた文字を出力する
; 145  :                         _native_writer->Write(_group_separator);

  0009b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a2	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  000a6	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  000ad	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b4	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  000b8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000be	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  000c5	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cc	48 8b 50 38	 mov	 rdx, QWORD PTR [rax+56]
  000d0	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv86[rbp]
  000d7	ff 95 c8 00 00
	00		 call	 QWORD PTR tv88[rbp]

; 146  :                         _native_writer->Write(c);

  000dd	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e4	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  000e8	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv130[rbp], rax
  000ef	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f6	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  000fa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000fd	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00101	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv132[rbp], rax
  00108	0f b7 95 f8 00
	00 00		 movzx	 edx, WORD PTR c$[rbp]
  0010f	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv130[rbp]
  00116	ff 95 c8 00 00
	00		 call	 QWORD PTR tv132[rbp]

; 147  :                         _current_group_index = 1;

  0011c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00123	c7 40 4c 01 00
	00 00		 mov	 DWORD PTR [rax+76], 1

; 148  : 
; 149  :                         // 次のグループが存在すればそのグループに移行する
; 150  :                         if (_current_group[1] != L'\0')

  0012a	b8 02 00 00 00	 mov	 eax, 2
  0012f	48 6b c0 01	 imul	 rax, rax, 1
  00133	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0013a	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0013e	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  00142	85 c0		 test	 eax, eax
  00144	74 3f		 je	 SHORT $LN6@Write

; 151  :                         {
; 152  :                             _current_group += 1;

  00146	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0014d	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00151	48 83 c0 02	 add	 rax, 2
  00155	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0015c	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax

; 153  :                             _current_group_size = _current_group[0] - L'0';

  00160	b8 02 00 00 00	 mov	 eax, 2
  00165	48 6b c0 00	 imul	 rax, rax, 0
  00169	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00170	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00174	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  00178	83 e8 30	 sub	 eax, 48			; 00000030H
  0017b	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00182	89 41 48	 mov	 DWORD PTR [rcx+72], eax
$LN6@Write:

; 154  :                         }
; 155  :                     }
; 156  :                     else

  00185	eb 55		 jmp	 SHORT $LN5@Write
$LN4@Write:

; 157  :                     {
; 158  :                         // 現在のグループの幅が 0 であるかあるいは出力した文字数がグループ幅に達していない場合
; 159  :                         _native_writer->Write(c);

  00187	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0018e	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00192	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv157[rbp], rax
  00199	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001a0	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  001a4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001a7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001ab	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv159[rbp], rax
  001b2	0f b7 95 f8 00
	00 00		 movzx	 edx, WORD PTR c$[rbp]
  001b9	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv157[rbp]
  001c0	ff 95 c8 00 00
	00		 call	 QWORD PTR tv159[rbp]

; 160  :                         _current_group_index += 1;

  001c6	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001cd	8b 40 4c	 mov	 eax, DWORD PTR [rax+76]
  001d0	ff c0		 inc	 eax
  001d2	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001d9	89 41 4c	 mov	 DWORD PTR [rcx+76], eax
$LN5@Write:

; 161  :                     }
; 162  :                 }
; 163  :                 else

  001dc	eb 3f		 jmp	 SHORT $LN3@Write
$LN2@Write:

; 164  :                 {
; 165  :                     // 桁区切りをサポートしない場合
; 166  : 
; 167  :                     _native_writer->Write(c);

  001de	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001e5	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  001e9	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv172[rbp], rax
  001f0	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001f7	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  001fb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001fe	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00202	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv174[rbp], rax
  00209	0f b7 95 f8 00
	00 00		 movzx	 edx, WORD PTR c$[rbp]
  00210	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv172[rbp]
  00217	ff 95 c8 00 00
	00		 call	 QWORD PTR tv174[rbp]
$LN3@Write:

; 168  :                 }
; 169  :             }

  0021d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00224	5f		 pop	 rdi
  00225	5d		 pop	 rbp
  00226	c3		 ret	 0
?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
decimal_info$ = 8
in_ptr$ = 40
this$ = 288
native_writer$ = 296
format_type$ = 304
format_option$ = 312
??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::ThousandSeparatedStringWriter, COMDAT

; 103  :             {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	55		 push	 rbp
  00016	57		 push	 rdi
  00017	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00023	48 8b fc	 mov	 rdi, rsp
  00026	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 102  :                 : StringWriter(nullptr, nullptr, nullptr)

  00046	45 33 c9	 xor	 r9d, r9d
  00049	45 33 c0	 xor	 r8d, r8d
  0004c	33 d2		 xor	 edx, edx
  0004e	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 103  :             {

  0005a	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx

; 104  :                 _native_writer = native_writer;

  0006b	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00072	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR native_writer$[rbp]
  00079	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 105  :                 const PMC_DECIMAL_NUMBER_FORMAT_INFO* decimal_info;
; 106  :                 if (format_type == L'C')

  0007d	0f b7 85 30 01
	00 00		 movzx	 eax, WORD PTR format_type$[rbp]
  00084	83 f8 43	 cmp	 eax, 67			; 00000043H
  00087	75 27		 jne	 SHORT $LN2@ThousandSe

; 107  :                 {
; 108  :                     decimal_info = &format_option->Currency;

  00089	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  00090	48 89 45 08	 mov	 QWORD PTR decimal_info$[rbp], rax

; 109  :                     _is_supported_thousand = TRUE;

  00094	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009b	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  0009e	83 c8 01	 or	 eax, 1
  000a1	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a8	89 41 30	 mov	 DWORD PTR [rcx+48], eax
  000ab	e9 90 00 00 00	 jmp	 $LN3@ThousandSe
$LN2@ThousandSe:

; 110  :                 }
; 111  :                 else if (format_type == L'P')

  000b0	0f b7 85 30 01
	00 00		 movzx	 eax, WORD PTR format_type$[rbp]
  000b7	83 f8 50	 cmp	 eax, 80			; 00000050H
  000ba	75 2a		 jne	 SHORT $LN4@ThousandSe

; 112  :                 {
; 113  :                     decimal_info = &format_option->Percent;

  000bc	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  000c3	48 05 d0 00 00
	00		 add	 rax, 208		; 000000d0H
  000c9	48 89 45 08	 mov	 QWORD PTR decimal_info$[rbp], rax

; 114  :                     _is_supported_thousand = TRUE;

  000cd	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d4	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  000d7	83 c8 01	 or	 eax, 1
  000da	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e1	89 41 30	 mov	 DWORD PTR [rcx+48], eax
  000e4	eb 5a		 jmp	 SHORT $LN5@ThousandSe
$LN4@ThousandSe:

; 115  :                 }
; 116  :                 else if (format_type == L'N')

  000e6	0f b7 85 30 01
	00 00		 movzx	 eax, WORD PTR format_type$[rbp]
  000ed	83 f8 4e	 cmp	 eax, 78			; 0000004eH
  000f0	75 28		 jne	 SHORT $LN6@ThousandSe

; 117  :                 {
; 118  :                     decimal_info = &format_option->Number;

  000f2	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  000f9	48 83 c0 68	 add	 rax, 104		; 00000068H
  000fd	48 89 45 08	 mov	 QWORD PTR decimal_info$[rbp], rax

; 119  :                     _is_supported_thousand = TRUE;

  00101	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00108	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  0010b	83 c8 01	 or	 eax, 1
  0010e	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00115	89 41 30	 mov	 DWORD PTR [rcx+48], eax

; 120  :                 }
; 121  :                 else

  00118	eb 26		 jmp	 SHORT $LN7@ThousandSe
$LN6@ThousandSe:

; 122  :                 {
; 123  :                     decimal_info = &format_option->Number;

  0011a	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR format_option$[rbp]
  00121	48 83 c0 68	 add	 rax, 104		; 00000068H
  00125	48 89 45 08	 mov	 QWORD PTR decimal_info$[rbp], rax

; 124  :                     _is_supported_thousand = FALSE;

  00129	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00130	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  00133	83 e0 fe	 and	 eax, -2			; fffffffeH
  00136	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0013d	89 41 30	 mov	 DWORD PTR [rcx+48], eax
$LN7@ThousandSe:
$LN5@ThousandSe:
$LN3@ThousandSe:

; 125  :                 }
; 126  : 
; 127  :                 const wchar_t* in_ptr = decimal_info->GroupSeparator;

  00140	48 8b 45 08	 mov	 rax, QWORD PTR decimal_info$[rbp]
  00144	48 83 c0 26	 add	 rax, 38			; 00000026H
  00148	48 89 45 28	 mov	 QWORD PTR in_ptr$[rbp], rax

; 128  : 
; 129  :                 _current_group = &decimal_info->GroupSizes[0];

  0014c	b8 02 00 00 00	 mov	 eax, 2
  00151	48 6b c0 00	 imul	 rax, rax, 0
  00155	48 8b 4d 08	 mov	 rcx, QWORD PTR decimal_info$[rbp]
  00159	48 8d 44 01 48	 lea	 rax, QWORD PTR [rcx+rax+72]
  0015e	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00165	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax

; 130  :                 _group_separator = decimal_info->GroupSeparator;

  00169	48 8b 45 08	 mov	 rax, QWORD PTR decimal_info$[rbp]
  0016d	48 83 c0 26	 add	 rax, 38			; 00000026H
  00171	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00178	48 89 41 38	 mov	 QWORD PTR [rcx+56], rax

; 131  :                 _current_group_size = *_current_group - L'0';

  0017c	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00183	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00187	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0018a	83 e8 30	 sub	 eax, 48			; 00000030H
  0018d	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00194	89 41 48	 mov	 DWORD PTR [rcx+72], eax

; 132  :                 _current_group_index = 0;

  00197	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0019e	c7 40 4c 00 00
	00 00		 mov	 DWORD PTR [rax+76], 0

; 133  :             }

  001a5	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001ac	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  001b3	5f		 pop	 rdi
  001b4	5d		 pop	 rbp
  001b5	c3		 ret	 0
??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::ThousandSeparatedStringWriter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
_TEXT	SEGMENT
root$ = 8
_10$ = 72
exponent_of_10$ = 104
x_times_of_exponent_of_10$ = 136
$T4 = 360
$T5 = 392
x$ = 448
e$ = 456
?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10, COMDAT

; 73   :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec c8 01
	00 00		 sub	 rsp, 456		; 000001c8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 72 00 00 00	 mov	 ecx, 114		; 00000072H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	8b 8c 24 e8 01
	00 00		 mov	 ecx, DWORD PTR [rsp+488]
  0002d	48 c7 85 88 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T5[rbp], -2
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 74   :             ResourceHolderUINT root;

  00044	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00048	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0004d	90		 npad	 1

; 75   :             NUMBER_HEADER* _10 = From_I_Imp(10);

  0004e	b9 0a 00 00 00	 mov	 ecx, 10
  00053	e8 00 00 00 00	 call	 ?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::From_I_Imp
  00058	48 89 45 48	 mov	 QWORD PTR _10$[rbp], rax

; 76   :             root.HookNumber(_10);

  0005c	48 8b 55 48	 mov	 rdx, QWORD PTR _10$[rbp]
  00060	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00064	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 77   : #if _M_IX86
; 78   :             NUMBER_HEADER* exponent_of_10 = PMC_Pow_X_I_Imp(_10, e);
; 79   : #elif defined(_M_X64)
; 80   :             NUMBER_HEADER* exponent_of_10 = PMC_Pow_X_L_Imp(_10, e);

  00069	48 8b 95 c8 01
	00 00		 mov	 rdx, QWORD PTR e$[rbp]
  00070	48 8b 4d 48	 mov	 rcx, QWORD PTR _10$[rbp]
  00074	e8 00 00 00 00	 call	 ?PMC_Pow_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Pow_X_L_Imp
  00079	48 89 45 68	 mov	 QWORD PTR exponent_of_10$[rbp], rax

; 81   : #else
; 82   : #error unknown platform
; 83   : #endif
; 84   :             root.HookNumber(exponent_of_10);

  0007d	48 8b 55 68	 mov	 rdx, QWORD PTR exponent_of_10$[rbp]
  00081	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00085	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 85   :             NUMBER_HEADER* x_times_of_exponent_of_10 = PMC_Multiply_X_I_Imp(exponent_of_10, x);

  0008a	8b 95 c0 01 00
	00		 mov	 edx, DWORD PTR x$[rbp]
  00090	48 8b 4d 68	 mov	 rcx, QWORD PTR exponent_of_10$[rbp]
  00094	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  00099	48 89 85 88 00
	00 00		 mov	 QWORD PTR x_times_of_exponent_of_10$[rbp], rax

; 86   :             return (x_times_of_exponent_of_10);

  000a0	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR x_times_of_exponent_of_10$[rbp]
  000a7	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000ae	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  000b2	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000b7	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR $T4[rbp]

; 87   :         }

  000be	48 8b f8	 mov	 rdi, rax
  000c1	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000c5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z$rtcFrameData
  000cc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d1	48 8b c7	 mov	 rax, rdi
  000d4	48 8d a5 a8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+424]
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
_10$ = 72
exponent_of_10$ = 104
x_times_of_exponent_of_10$ = 136
$T4 = 360
$T5 = 392
x$ = 448
e$ = 456
?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
_10$ = 72
exponent_of_10$ = 104
x_times_of_exponent_of_10$ = 136
$T4 = 360
$T5 = 392
x$ = 448
e$ = 456
?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
_TEXT	SEGMENT
root$ = 8
work1_buf$ = 72
work2_buf$ = 104
u_buf$ = 136
q_buf$ = 168
u_count$ = 200
digit_count$ = 228
temp_r$5 = 264
t$6 = 296
$T7 = 516
$T8 = 552
src_buf$ = 608
src_buf_count$ = 616
?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal, COMDAT

; 45   :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 02
	00 00		 sub	 rsp, 632		; 00000278H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 9e 00 00 00	 mov	 ecx, 158		; 0000009eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR [rsp+664]
  0002f	48 c7 85 28 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T8[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 46   :             ResourceHolderUINT root;

  00046	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0004a	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0004f	90		 npad	 1

; 47   :             __UNIT_TYPE* work1_buf = root.AllocateBlock(src_buf_count * __UNIT_TYPE_BIT_COUNT);

  00050	48 6b 85 68 02
	00 00 40	 imul	 rax, QWORD PTR src_buf_count$[rbp], 64 ; 00000040H
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0005f	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00064	48 89 45 48	 mov	 QWORD PTR work1_buf$[rbp], rax

; 48   :             __UNIT_TYPE* work2_buf = root.AllocateBlock(src_buf_count * __UNIT_TYPE_BIT_COUNT);

  00068	48 6b 85 68 02
	00 00 40	 imul	 rax, QWORD PTR src_buf_count$[rbp], 64 ; 00000040H
  00070	48 8b d0	 mov	 rdx, rax
  00073	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00077	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  0007c	48 89 45 68	 mov	 QWORD PTR work2_buf$[rbp], rax

; 49   :             _COPY_MEMORY_UNIT(work1_buf, src_buf, src_buf_count);

  00080	4c 8b 85 68 02
	00 00		 mov	 r8, QWORD PTR src_buf_count$[rbp]
  00087	48 8b 95 60 02
	00 00		 mov	 rdx, QWORD PTR src_buf$[rbp]
  0008e	48 8b 4d 48	 mov	 rcx, QWORD PTR work1_buf$[rbp]
  00092	e8 00 00 00 00	 call	 _COPY_MEMORY_UNIT

; 50   :             __UNIT_TYPE* u_buf = work1_buf;

  00097	48 8b 45 48	 mov	 rax, QWORD PTR work1_buf$[rbp]
  0009b	48 89 85 88 00
	00 00		 mov	 QWORD PTR u_buf$[rbp], rax

; 51   :             __UNIT_TYPE* q_buf = work2_buf;

  000a2	48 8b 45 68	 mov	 rax, QWORD PTR work2_buf$[rbp]
  000a6	48 89 85 a8 00
	00 00		 mov	 QWORD PTR q_buf$[rbp], rax

; 52   :             __UNIT_TYPE u_count = src_buf_count;

  000ad	48 8b 85 68 02
	00 00		 mov	 rax, QWORD PTR src_buf_count$[rbp]
  000b4	48 89 85 c8 00
	00 00		 mov	 QWORD PTR u_count$[rbp], rax

; 53   :             _UINT32_T digit_count = 0;

  000bb	c7 85 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR digit_count$[rbp], 0
$LN2@get_digit_:

; 54   :             while (1)

  000c5	33 c0		 xor	 eax, eax
  000c7	83 f8 01	 cmp	 eax, 1
  000ca	0f 84 b8 00 00
	00		 je	 $LN3@get_digit_
$LN4@get_digit_:

; 55   :             {
; 56   :                 while (u_count > 0 && u_buf[u_count - 1] == 0)

  000d0	48 83 bd c8 00
	00 00 00	 cmp	 QWORD PTR u_count$[rbp], 0
  000d8	76 29		 jbe	 SHORT $LN5@get_digit_
  000da	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR u_buf$[rbp]
  000e1	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR u_count$[rbp]
  000e8	48 83 7c c8 f8
	00		 cmp	 QWORD PTR [rax+rcx*8-8], 0
  000ee	75 13		 jne	 SHORT $LN5@get_digit_

; 57   :                     --u_count;

  000f0	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR u_count$[rbp]
  000f7	48 ff c8	 dec	 rax
  000fa	48 89 85 c8 00
	00 00		 mov	 QWORD PTR u_count$[rbp], rax
  00101	eb cd		 jmp	 SHORT $LN4@get_digit_
$LN5@get_digit_:

; 58   :                 if (u_count <= 0)

  00103	48 83 bd c8 00
	00 00 00	 cmp	 QWORD PTR u_count$[rbp], 0
  0010b	77 02		 ja	 SHORT $LN6@get_digit_

; 59   :                     break;

  0010d	eb 79		 jmp	 SHORT $LN3@get_digit_
$LN6@get_digit_:

; 60   :                 __UNIT_TYPE temp_r;
; 61   :                 root.ClearBlock(q_buf);

  0010f	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR q_buf$[rbp]
  00116	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  0011a	e8 00 00 00 00	 call	 ?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock

; 62   :                 DivRem_X_1W(u_buf, u_count, 10, q_buf, &temp_r);

  0011f	48 8d 85 08 01
	00 00		 lea	 rax, QWORD PTR temp_r$5[rbp]
  00126	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0012b	4c 8b 8d a8 00
	00 00		 mov	 r9, QWORD PTR q_buf$[rbp]
  00132	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00138	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR u_count$[rbp]
  0013f	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR u_buf$[rbp]
  00146	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 63   :                 __UNIT_TYPE* t = u_buf;

  0014b	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR u_buf$[rbp]
  00152	48 89 85 28 01
	00 00		 mov	 QWORD PTR t$6[rbp], rax

; 64   :                 u_buf = q_buf;

  00159	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR q_buf$[rbp]
  00160	48 89 85 88 00
	00 00		 mov	 QWORD PTR u_buf$[rbp], rax

; 65   :                 q_buf = t;

  00167	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR t$6[rbp]
  0016e	48 89 85 a8 00
	00 00		 mov	 QWORD PTR q_buf$[rbp], rax

; 66   :                 ++digit_count;

  00175	8b 85 e4 00 00
	00		 mov	 eax, DWORD PTR digit_count$[rbp]
  0017b	ff c0		 inc	 eax
  0017d	89 85 e4 00 00
	00		 mov	 DWORD PTR digit_count$[rbp], eax

; 67   :             }

  00183	e9 3d ff ff ff	 jmp	 $LN2@get_digit_
$LN3@get_digit_:

; 68   :             return (digit_count);

  00188	8b 85 e4 00 00
	00		 mov	 eax, DWORD PTR digit_count$[rbp]
  0018e	89 85 04 02 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  00194	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00198	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0019d	8b 85 04 02 00
	00		 mov	 eax, DWORD PTR $T7[rbp]

; 69   :         }

  001a3	8b f8		 mov	 edi, eax
  001a5	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  001a9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z$rtcFrameData
  001b0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001b5	8b c7		 mov	 eax, edi
  001b7	48 8d a5 48 02
	00 00		 lea	 rsp, QWORD PTR [rbp+584]
  001be	5f		 pop	 rdi
  001bf	5d		 pop	 rbp
  001c0	c3		 ret	 0
?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
work1_buf$ = 72
work2_buf$ = 104
u_buf$ = 136
q_buf$ = 168
u_count$ = 200
digit_count$ = 228
temp_r$5 = 264
t$6 = 296
$T7 = 516
$T8 = 552
src_buf$ = 608
src_buf_count$ = 616
?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
root$ = 8
work1_buf$ = 72
work2_buf$ = 104
u_buf$ = 136
q_buf$ = 168
u_count$ = 200
digit_count$ = 228
temp_r$5 = 264
t$6 = 296
$T7 = 516
$T8 = 552
src_buf$ = 608
src_buf_count$ = 616
?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR root$[rbp]
  00018	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ROTATE_L_UNIT
_TEXT	SEGMENT
x$ = 224
count$ = 232
_ROTATE_L_UNIT PROC					; COMDAT

; 329  :         {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 330  : #ifdef _M_IX86
; 331  :             return (_rotl(x, count));
; 332  : #elif defined(_M_X64)
; 333  :             return (_rotl64(x, count));

  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR count$[rbp]
  00040	0f b6 c8	 movzx	 ecx, al
  00043	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  0004a	48 d3 c0	 rol	 rax, cl

; 334  : #else
; 335  : #error unknown platform
; 336  : #endif
; 337  :         }

  0004d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
_ROTATE_L_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ADD_UNIT
_TEXT	SEGMENT
carry$ = 224
u$ = 232
v$ = 240
w$ = 248
_ADD_UNIT PROC						; COMDAT

; 176  :         {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 177  : #ifdef _M_IX86
; 178  :             return (_addcarry_u32(carry, u, v, w));
; 179  : #elif defined(_M_X64)
; 180  :             return (_addcarry_u64(carry, u, v, w));

  00044	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  0004b	0f b6 8d e0 00
	00 00		 movzx	 ecx, BYTE PTR carry$[rbp]
  00052	80 c1 ff	 add	 cl, -1
  00055	48 13 85 f0 00
	00 00		 adc	 rax, QWORD PTR v$[rbp]
  0005c	0f 92 c1	 setb	 cl
  0005f	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR w$[rbp]
  00066	48 89 02	 mov	 QWORD PTR [rdx], rax
  00069	0f b6 c1	 movzx	 eax, cl

; 181  : #else
; 182  : #error unknown platform
; 183  : #endif
; 184  :         }

  0006c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
_ADD_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _DIVIDE_CEILING_UNIT
_TEXT	SEGMENT
u$ = 224
v$ = 232
_DIVIDE_CEILING_UNIT PROC				; COMDAT

; 156  :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 157  :             return ((u + v - 1) / v);

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR u$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR v$[rbp]
  00049	48 8d 44 08 ff	 lea	 rax, QWORD PTR [rax+rcx-1]
  0004e	33 d2		 xor	 edx, edx
  00050	48 f7 b5 e8 00
	00 00		 div	 QWORD PTR v$[rbp]

; 158  :         }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
_DIVIDE_CEILING_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _COPY_MEMORY_UNIT
_TEXT	SEGMENT
d$ = 224
s$ = 232
count$ = 240
_COPY_MEMORY_UNIT PROC					; COMDAT

; 63   :         {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8b fc	 mov	 rdi, rsp
  00021	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 64   : #ifdef _M_IX86
; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);
; 66   : #elif defined(_M_X64)
; 67   :             __movsq(d, s, count);

  00041	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR d$[rbp]
  00048	48 8b b5 e8 00
	00 00		 mov	 rsi, QWORD PTR s$[rbp]
  0004f	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR count$[rbp]
  00056	f3 48 a5	 rep movsq

; 68   : #else
; 69   : #error unknown platform
; 70   : #endif
; 71   :         }

  00059	48 8d a5 c0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+192]
  00060	5f		 pop	 rdi
  00061	5e		 pop	 rsi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
_COPY_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 224
?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToDIV64Counter, COMDAT

; 332  :     {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR [rsp+264]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB6D3116_pmc_uint_internal@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 333  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00034	48 8d 05 08 00
	00 00		 lea	 rax, OFFSET FLAT:?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
  0003b	8b 8d e0 00 00
	00		 mov	 ecx, DWORD PTR value$[rbp]
  00041	f0 01 08	 lock add DWORD PTR [rax], ecx

; 334  :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToDIV64Counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 224
?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToDIV32Counter, COMDAT

; 326  :     {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR [rsp+264]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB6D3116_pmc_uint_internal@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 327  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV32, value);

  00034	48 8d 05 0c 00
	00 00		 lea	 rax, OFFSET FLAT:?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+12
  0003b	8b 8d e0 00 00
	00		 mov	 ecx, DWORD PTR value$[rbp]
  00041	f0 01 08	 lock add DWORD PTR [rax], ecx

; 328  :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToDIV32Counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementDIV64Counter, COMDAT

; 309  :     {

  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB6D3116_pmc_uint_internal@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 310  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  0002a	48 8d 05 08 00
	00 00		 lea	 rax, OFFSET FLAT:?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
  00031	f0 ff 00	 lock inc DWORD PTR [rax]

; 311  :     }

  00034	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003b	5f		 pop	 rdi
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementDIV64Counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementDIV32Counter, COMDAT

; 303  :     {

  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB6D3116_pmc_uint_internal@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 304  :         _InterlockedIncrement(&statistics_info.COUNT_DIV32);

  0002a	48 8d 05 0c 00
	00 00		 lea	 rax, OFFSET FLAT:?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+12
  00031	f0 ff 00	 lock inc DWORD PTR [rax]

; 305  :     }

  00034	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003b	5f		 pop	 rdi
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementDIV32Counter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
_TEXT	SEGMENT
nx$ = 8
$T1 = 232
tv85 = 296
tv81 = 304
x$ = 352
format$ = 360
format_option$ = 368
buffer$ = 376
buffer_size$ = 384
?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_ToString, COMDAT

; 1435 :     {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1436 :         if (x == nullptr)

  00045	48 83 bd 60 01
	00 00 00	 cmp	 QWORD PTR x$[rbp], 0
  0004d	75 2d		 jne	 SHORT $LN2@PMC_ToStri

; 1437 :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"x");

  0004f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13HADAKIJA@?$AAx@
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0005d	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00064	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00070	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00077	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@PMC_ToStri:

; 1438 :         if (format_option == nullptr)

  0007c	48 83 bd 70 01
	00 00 00	 cmp	 QWORD PTR format_option$[rbp], 0
  00084	75 0e		 jne	 SHORT $LN3@PMC_ToStri

; 1439 :             format_option = &default_number_format_option;

  00086	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?default_number_format_option@Internal@Core@Math@Palmtree@@3U__tag_PMC_NUMBER_FORMAT_INFO@1234@A
  0008d	48 89 85 70 01
	00 00		 mov	 QWORD PTR format_option$[rbp], rax
$LN3@PMC_ToStri:

; 1440 :         NUMBER_HEADER* nx = (NUMBER_HEADER*)x;

  00094	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  0009b	48 89 45 08	 mov	 QWORD PTR nx$[rbp], rax

; 1441 :         CheckNumber(nx);

  0009f	48 8b 4d 08	 mov	 rcx, QWORD PTR nx$[rbp]
  000a3	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 1442 :         return (ToString_Imp(nx->IS_ZERO ? 0 : 1, nx, format, format_option, buffer, buffer_size));

  000a8	48 8b 45 08	 mov	 rax, QWORD PTR nx$[rbp]
  000ac	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  000b3	48 8b 45 08	 mov	 rax, QWORD PTR nx$[rbp]
  000b7	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000ba	83 e0 01	 and	 eax, 1
  000bd	85 c0		 test	 eax, eax
  000bf	74 0c		 je	 SHORT $LN5@PMC_ToStri
  000c1	c7 85 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR tv81[rbp], 0
  000cb	eb 0a		 jmp	 SHORT $LN6@PMC_ToStri
$LN5@PMC_ToStri:
  000cd	c7 85 30 01 00
	00 01 00 00 00	 mov	 DWORD PTR tv81[rbp], 1
$LN6@PMC_ToStri:
  000d7	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR buffer_size$[rbp]
  000de	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000e3	48 8b 85 78 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  000ea	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ef	4c 8b 8d 70 01
	00 00		 mov	 r9, QWORD PTR format_option$[rbp]
  000f6	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR format$[rbp]
  000fd	48 8b 95 28 01
	00 00		 mov	 rdx, QWORD PTR tv85[rbp]
  00104	0f b6 8d 30 01
	00 00		 movzx	 ecx, BYTE PTR tv81[rbp]
  0010b	e8 00 00 00 00	 call	 ?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ; Palmtree::Math::Core::Internal::ToString_Imp
$LN4@PMC_ToStri:

; 1443 :     }

  00110	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  00117	5f		 pop	 rdi
  00118	5d		 pop	 rbp
  00119	c3		 ret	 0
?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_ToString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z
_TEXT	SEGMENT
info$ = 224
?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo, COMDAT

; 1476 :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1477 :         InitializeNumberFormatoInfo(info);

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR info$[rbp]
  0003d	e8 00 00 00 00	 call	 ?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo

; 1478 :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 224
?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_ToString, COMDAT

; 1481 :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1482 :         InitializeNumberFormatoInfo(&default_number_format_option);

  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?default_number_format_option@Internal@Core@Math@Palmtree@@3U__tag_PMC_NUMBER_FORMAT_INFO@1234@A
  0003d	e8 00 00 00 00	 call	 ?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo

; 1483 : 
; 1484 :         return (PMC_STATUS_OK);

  00042	33 c0		 xor	 eax, eax

; 1485 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_ToString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z
_TEXT	SEGMENT
info$ = 224
?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z PROC ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo, COMDAT

; 1446 :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F90649E_pmc_tostring@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1447 :         info->Currency.DecimalDigits = 2;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0003d	c7 00 02 00 00
	00		 mov	 DWORD PTR [rax], 2

; 1448 :         lstrcpyW(info->Currency.DecimalSeparator, L".");

  00043	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0004a	48 83 c0 04	 add	 rax, 4
  0004e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13JOFGPIOO@?$AA?4@
  00055	48 8b c8	 mov	 rcx, rax
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1449 :         lstrcpyW(info->Currency.GroupSeparator, L",");

  0005e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  00065	48 83 c0 26	 add	 rax, 38			; 00000026H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DEFPDAGF@?$AA?0@
  00070	48 8b c8	 mov	 rcx, rax
  00073	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1450 :         lstrcpyW(info->Currency.GroupSizes, L"3");

  00079	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  00080	48 83 c0 48	 add	 rax, 72			; 00000048H
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DMCFHHKM@?$AA3@
  0008b	48 8b c8	 mov	 rcx, rax
  0008e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1451 :         info->Currency.NegativePattern = 0;

  00094	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0009b	c7 40 60 00 00
	00 00		 mov	 DWORD PTR [rax+96], 0

; 1452 :         info->Currency.PositivePattern = 0;

  000a2	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  000a9	c7 40 64 00 00
	00 00		 mov	 DWORD PTR [rax+100], 0

; 1453 : 
; 1454 :         info->Number.DecimalDigits = 2;

  000b0	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  000b7	c7 40 68 02 00
	00 00		 mov	 DWORD PTR [rax+104], 2

; 1455 :         lstrcpyW(info->Number.DecimalSeparator, L".");

  000be	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  000c5	48 83 c0 6c	 add	 rax, 108		; 0000006cH
  000c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13JOFGPIOO@?$AA?4@
  000d0	48 8b c8	 mov	 rcx, rax
  000d3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1456 :         lstrcpyW(info->Number.GroupSeparator, L",");

  000d9	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  000e0	48 05 8e 00 00
	00		 add	 rax, 142		; 0000008eH
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DEFPDAGF@?$AA?0@
  000ed	48 8b c8	 mov	 rcx, rax
  000f0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1457 :         lstrcpyW(info->Number.GroupSizes, L"3");

  000f6	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  000fd	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DMCFHHKM@?$AA3@
  0010a	48 8b c8	 mov	 rcx, rax
  0010d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1458 :         info->Number.NegativePattern = 1;

  00113	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0011a	c7 80 c8 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+200], 1

; 1459 :         info->Number.PositivePattern = -1; // 未使用

  00124	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0012b	c7 80 cc 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [rax+204], -1

; 1460 : 
; 1461 :         info->Percent.DecimalDigits = 2;

  00135	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0013c	c7 80 d0 00 00
	00 02 00 00 00	 mov	 DWORD PTR [rax+208], 2

; 1462 :         lstrcpyW(info->Percent.DecimalSeparator, L".");

  00146	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0014d	48 05 d4 00 00
	00		 add	 rax, 212		; 000000d4H
  00153	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13JOFGPIOO@?$AA?4@
  0015a	48 8b c8	 mov	 rcx, rax
  0015d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1463 :         lstrcpyW(info->Percent.GroupSeparator, L",");

  00163	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0016a	48 05 f6 00 00
	00		 add	 rax, 246		; 000000f6H
  00170	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DEFPDAGF@?$AA?0@
  00177	48 8b c8	 mov	 rcx, rax
  0017a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1464 :         lstrcpyW(info->Percent.GroupSizes, L"3");

  00180	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  00187	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  0018d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DMCFHHKM@?$AA3@
  00194	48 8b c8	 mov	 rcx, rax
  00197	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1465 :         info->Percent.NegativePattern = 0;

  0019d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  001a4	c7 80 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+304], 0

; 1466 :         info->Percent.PositivePattern = 0;

  001ae	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  001b5	c7 80 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+308], 0

; 1467 : 
; 1468 :         lstrcpyW(info->CurrencySymbol, L"\u00a4");

  001bf	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  001c6	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  001cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13BMLCKOLB@?$PP?$KE@
  001d3	48 8b c8	 mov	 rcx, rax
  001d6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1469 :         lstrcpyW(info->NegativeSign, L"-");

  001dc	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  001e3	48 05 5a 01 00
	00		 add	 rax, 346		; 0000015aH
  001e9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13IMODFHAA@?$AA?9@
  001f0	48 8b c8	 mov	 rcx, rax
  001f3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1470 :         lstrcpyW(info->PercentSymbol, L"%");

  001f9	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  00200	48 05 9e 01 00
	00		 add	 rax, 414		; 0000019eH
  00206	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13EJFHHPOP@?$AA?$CF@
  0020d	48 8b c8	 mov	 rcx, rax
  00210	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1471 :         lstrcpyW(info->PerMilleSymbol, L"\u2030");

  00216	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0021d	48 05 c0 01 00
	00		 add	 rax, 448		; 000001c0H
  00223	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13BGNNJOKC@?$AA0@
  0022a	48 8b c8	 mov	 rcx, rax
  0022d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1472 :         lstrcpyW(info->PositiveSign, L"+");

  00233	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR info$[rbp]
  0023a	48 05 7c 01 00
	00		 add	 rax, 380		; 0000017cH
  00240	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13KJIIAINM@?$AA?$CL@
  00247	48 8b c8	 mov	 rcx, rax
  0024a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1473 :     }

  00250	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00257	5f		 pop	 rdi
  00258	5d		 pop	 rbp
  00259	c3		 ret	 0
?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ENDP ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 224
?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ PROC ; Palmtree::Math::Core::Internal::ReverseStringWriter::GetString, COMDAT

; 289  :         {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :             return (_p);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 291  :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ENDP ; Palmtree::Math::Core::Internal::ReverseStringWriter::GetString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
p$ = 8
tv80 = 216
this$ = 256
str$ = 264
?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write, COMDAT

; 279  :         {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 280  :             const wchar_t* p = str + lstrlenW(str);

  0003b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR str$[rbp]
  00042	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00048	48 98		 cdqe
  0004a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR str$[rbp]
  00051	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
  00055	48 89 45 08	 mov	 QWORD PTR p$[rbp], rax
$LN2@Write:

; 281  :             while (p > str)

  00059	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR str$[rbp]
  00060	48 39 45 08	 cmp	 QWORD PTR p$[rbp], rax
  00064	76 37		 jbe	 SHORT $LN3@Write

; 282  :             {
; 283  :                 --p;

  00066	48 8b 45 08	 mov	 rax, QWORD PTR p$[rbp]
  0006a	48 83 e8 02	 sub	 rax, 2
  0006e	48 89 45 08	 mov	 QWORD PTR p$[rbp], rax

; 284  :                 Write(*p);

  00072	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00079	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00080	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00087	48 8b 45 08	 mov	 rax, QWORD PTR p$[rbp]
  0008b	0f b7 10	 movzx	 edx, WORD PTR [rax]
  0008e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00095	ff 95 d8 00 00
	00		 call	 QWORD PTR tv80[rbp]

; 285  :             }

  0009b	eb bc		 jmp	 SHORT $LN2@Write
$LN3@Write:

; 286  :         }

  0009d	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000a4	5f		 pop	 rdi
  000a5	5d		 pop	 rbp
  000a6	c3		 ret	 0
?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 304
c$ = 312
?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write, COMDAT

; 270  :         {

$LN4:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 271  :             if (_p <= _sob)

  0003b	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004d	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  00051	77 26		 ja	 SHORT $LN2@Write

; 272  :                 throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00053	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  0005a	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00061	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00066	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  0006d	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00074	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Write:

; 273  :             --_p;

  00079	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00080	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00084	48 83 e8 02	 sub	 rax, 2
  00088	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008f	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 274  :             *_p = c;

  00093	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0009e	0f b7 8d 38 01
	00 00		 movzx	 ecx, WORD PTR c$[rbp]
  000a5	66 89 08	 mov	 WORD PTR [rax], cx

; 275  :             ++_written;

  000a8	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000af	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000b3	48 ff c0	 inc	 rax
  000b6	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000bd	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
$LN3@Write:

; 276  :         }

  000c1	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  000c8	5f		 pop	 rdi
  000c9	5d		 pop	 rbp
  000ca	c3		 ret	 0
?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z
_TEXT	SEGMENT
tv73 = 192
tv82 = 200
tv79 = 208
this$ = 256
buffer$ = 264
size$ = 272
??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter, COMDAT

; 265  :         {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 264  :             : StringWriter(buffer != nullptr ? buffer + size : nullptr, buffer, buffer != nullptr ? buffer + size : nullptr)

  00040	48 83 bd 08 01
	00 00 00	 cmp	 QWORD PTR buffer$[rbp], 0
  00048	74 1b		 je	 SHORT $LN3@ReverseStr
  0004a	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  00051	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR size$[rbp]
  00058	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0005c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00063	eb 0b		 jmp	 SHORT $LN4@ReverseStr
$LN3@ReverseStr:
  00065	48 c7 85 c0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv73[rbp], 0
$LN4@ReverseStr:
  00070	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  00077	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  0007e	48 83 bd 08 01
	00 00 00	 cmp	 QWORD PTR buffer$[rbp], 0
  00086	74 1b		 je	 SHORT $LN5@ReverseStr
  00088	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  0008f	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR size$[rbp]
  00096	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0009a	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  000a1	eb 0b		 jmp	 SHORT $LN6@ReverseStr
$LN5@ReverseStr:
  000a3	48 c7 85 d0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv79[rbp], 0
$LN6@ReverseStr:
  000ae	4c 8b 8d c0 00
	00 00		 mov	 r9, QWORD PTR tv73[rbp]
  000b5	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000bc	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv79[rbp]
  000c3	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ca	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 265  :         {

  000cf	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
  000dd	48 89 08	 mov	 QWORD PTR [rax], rcx

; 266  :             Write(L'\0');

  000e0	33 d2		 xor	 edx, edx
  000e2	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e9	e8 00 00 00 00	 call	 ?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write

; 267  :         }

  000ee	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f5	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000fc	5f		 pop	 rdi
  000fd	5d		 pop	 rbp
  000fe	c3		 ret	 0
??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ
_TEXT	SEGMENT
this$ = 224
?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ PROC ; Palmtree::Math::Core::Internal::StringWriter::GetLength, COMDAT

; 249  :         {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 250  :             return (_written);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]

; 251  :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ENDP ; Palmtree::Math::Core::Internal::StringWriter::GetLength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 224
?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ PROC ; Palmtree::Math::Core::Internal::StringWriter::GetString, COMDAT

; 244  :         {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 245  :             return (_sob);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 246  :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ENDP ; Palmtree::Math::Core::Internal::StringWriter::GetString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
tv71 = 192
this$ = 240
str$ = 248
?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::Write, COMDAT

; 235  :         {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@Write:

; 236  :             while (*str != L'\0')

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR str$[rbp]
  00042	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00045	85 c0		 test	 eax, eax
  00047	74 40		 je	 SHORT $LN3@Write

; 237  :             {
; 238  :                 Write(*str);

  00049	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00053	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  0005e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR str$[rbp]
  00065	0f b7 10	 movzx	 edx, WORD PTR [rax]
  00068	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006f	ff 95 c0 00 00
	00		 call	 QWORD PTR tv71[rbp]

; 239  :                 ++str;

  00075	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR str$[rbp]
  0007c	48 83 c0 02	 add	 rax, 2
  00080	48 89 85 f8 00
	00 00		 mov	 QWORD PTR str$[rbp], rax

; 240  :             }

  00087	eb b2		 jmp	 SHORT $LN2@Write
$LN3@Write:

; 241  :         }

  00089	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00090	5f		 pop	 rdi
  00091	5d		 pop	 rbp
  00092	c3		 ret	 0
?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::Write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z
_TEXT	SEGMENT
tv70 = 192
this$ = 240
c$ = 248
count$ = 256
?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::Write, COMDAT

; 226  :         {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@Write:

; 227  :             while (count > 0)

  00040	48 83 bd 00 01
	00 00 00	 cmp	 QWORD PTR count$[rbp], 0
  00048	76 3c		 jbe	 SHORT $LN3@Write

; 228  :             {
; 229  :                 Write(c);

  0004a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00058	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  0005f	0f b7 95 f8 00
	00 00		 movzx	 edx, WORD PTR c$[rbp]
  00066	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006d	ff 95 c0 00 00
	00		 call	 QWORD PTR tv70[rbp]

; 230  :                 --count;

  00073	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR count$[rbp]
  0007a	48 ff c8	 dec	 rax
  0007d	48 89 85 00 01
	00 00		 mov	 QWORD PTR count$[rbp], rax

; 231  :             }

  00084	eb ba		 jmp	 SHORT $LN2@Write
$LN3@Write:

; 232  :         }

  00086	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0008d	5f		 pop	 rdi
  0008e	5d		 pop	 rbp
  0008f	c3		 ret	 0
?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::Write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 304
c$ = 312
?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::Write, COMDAT

; 214  :         {

$LN5:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 215  :             if (_p != nullptr)

  0003b	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00047	0f 84 81 00 00
	00		 je	 $LN2@Write

; 216  :             {
; 217  :                 if (_p + 1 >= _eob)

  0004d	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00058	48 83 c0 02	 add	 rax, 2
  0005c	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00063	48 3b 41 18	 cmp	 rax, QWORD PTR [rcx+24]
  00067	72 26		 jb	 SHORT $LN3@Write

; 218  :                     throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  00070	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00077	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  0007c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  00083	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0008a	e8 00 00 00 00	 call	 _CxxThrowException
$LN3@Write:

; 219  :                 *_p++ = c;

  0008f	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0009a	0f b7 8d 38 01
	00 00		 movzx	 ecx, WORD PTR c$[rbp]
  000a1	66 89 08	 mov	 WORD PTR [rax], cx
  000a4	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ab	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000af	48 83 c0 02	 add	 rax, 2
  000b3	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ba	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 220  :                 *_p = L'\0';

  000be	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c9	33 c9		 xor	 ecx, ecx
  000cb	66 89 08	 mov	 WORD PTR [rax], cx
$LN2@Write:

; 221  :             }
; 222  :             ++_written;

  000ce	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d5	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000d9	48 ff c0	 inc	 rax
  000dc	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e3	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
$LN4@Write:

; 223  :         }

  000e7	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  000ee	5f		 pop	 rdi
  000ef	5d		 pop	 rbp
  000f0	c3		 ret	 0
?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::Write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z
_TEXT	SEGMENT
tv69 = 192
this$ = 240
buffer$ = 248
size$ = 256
??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::StringWriter, COMDAT

; 210  :         {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00040	48 83 bd f8 00
	00 00 00	 cmp	 QWORD PTR buffer$[rbp], 0
  00048	74 1b		 je	 SHORT $LN3@StringWrit
  0004a	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR buffer$[rbp]
  00051	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR size$[rbp]
  00058	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0005c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00063	eb 0b		 jmp	 SHORT $LN4@StringWrit
$LN3@StringWrit:
  00065	48 c7 85 c0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv69[rbp], 0
$LN4@StringWrit:
  00070	4c 8b 8d c0 00
	00 00		 mov	 r9, QWORD PTR tv69[rbp]
  00077	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR buffer$[rbp]
  0007e	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR buffer$[rbp]
  00085	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z ; Palmtree::Math::Core::Internal::StringWriter::StringWriter

; 210  :         {

  00091	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
  0009f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 211  :         }

  000a2	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a9	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000b0	5f		 pop	 rdi
  000b1	5d		 pop	 rbp
  000b2	c3		 ret	 0
??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::StringWriter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z
_TEXT	SEGMENT
this$ = 224
p$ = 232
sob$ = 240
eob$ = 248
??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::StringWriter, COMDAT

; 199  :         StringWriter(wchar_t* p, wchar_t* sob, wchar_t* eob)

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
  00053	48 89 08	 mov	 QWORD PTR [rax], rcx

; 200  :         {
; 201  :             _p = p;

  00056	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00064	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 202  :             _sob = sob;

  00068	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006f	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR sob$[rbp]
  00076	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 203  :             _eob = eob;

  0007a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00081	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR eob$[rbp]
  00088	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 204  :             _written = 0;

  0008c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00093	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0

; 205  :         }

  0009b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a2	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000a9	5f		 pop	 rdi
  000aa	5d		 pop	 rbp
  000ab	c3		 ret	 0
??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::StringWriter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z
_TEXT	SEGMENT
a$ = 224
eoa$ = 232
b$ = 240
?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith, COMDAT

; 178  :         {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@StartsWith:

; 179  :             while (*b != L'\0')

  00040	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR b$[rbp]
  00047	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0004a	85 c0		 test	 eax, eax
  0004c	74 52		 je	 SHORT $LN3@StartsWith

; 180  :             {
; 181  :                 if (a < eoa || *a != *b)

  0004e	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR eoa$[rbp]
  00055	48 39 85 e0 00
	00 00		 cmp	 QWORD PTR a$[rbp], rax
  0005c	72 18		 jb	 SHORT $LN5@StartsWith
  0005e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR a$[rbp]
  00065	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00068	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR b$[rbp]
  0006f	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  00072	3b c1		 cmp	 eax, ecx
  00074	74 04		 je	 SHORT $LN4@StartsWith
$LN5@StartsWith:

; 182  :                     return (0);

  00076	33 c0		 xor	 eax, eax
  00078	eb 2b		 jmp	 SHORT $LN1@StartsWith
$LN4@StartsWith:

; 183  :                 --a;

  0007a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR a$[rbp]
  00081	48 83 e8 02	 sub	 rax, 2
  00085	48 89 85 e0 00
	00 00		 mov	 QWORD PTR a$[rbp], rax

; 184  :                 ++b;

  0008c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR b$[rbp]
  00093	48 83 c0 02	 add	 rax, 2
  00097	48 89 85 f0 00
	00 00		 mov	 QWORD PTR b$[rbp], rax

; 185  :             }

  0009e	eb a0		 jmp	 SHORT $LN2@StartsWith
$LN3@StartsWith:

; 186  :             return (1);

  000a0	b8 01 00 00 00	 mov	 eax, 1
$LN1@StartsWith:

; 187  :         }

  000a5	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000ac	5f		 pop	 rdi
  000ad	5d		 pop	 rbp
  000ae	c3		 ret	 0
?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
$T1 = 200
tv93 = 264
tv91 = 272
this$ = 320
str$ = 328
?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::SkipString, COMDAT

; 167  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 168  :             if (!StartsWith(_p, _start, str))

  0003b	4c 8b 85 48 01
	00 00		 mov	 r8, QWORD PTR str$[rbp]
  00042	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004d	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00058	e8 00 00 00 00	 call	 ?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith
  0005d	85 c0		 test	 eax, eax
  0005f	75 2d		 jne	 SHORT $LN2@SkipString

; 169  :             {
; 170  :                 // str で始まっていないにもかかわらず、strをスキップしようとした。
; 171  :                 throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_stringio.h;ReverseStringReader::SkipString;1");

  00061	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1GC@GGAPGHKN@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
  00068	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  0006f	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00076	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0007b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00082	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00089	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@SkipString:

; 172  :             }
; 173  :             _p -= lstrlenW(str);

  0008e	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR str$[rbp]
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0009b	48 98		 cdqe
  0009d	48 d1 e0	 shl	 rax, 1
  000a0	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  000a7	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ae	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b2	48 89 85 10 01
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000b9	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR tv93[rbp]
  000c0	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR tv91[rbp]
  000c7	48 2b c8	 sub	 rcx, rax
  000ca	48 8b c1	 mov	 rax, rcx
  000cd	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d4	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
$LN3@SkipString:

; 174  :         }

  000d8	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000df	5f		 pop	 rdi
  000e0	5d		 pop	 rbp
  000e1	c3		 ret	 0
?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::SkipString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
_TEXT	SEGMENT
this$ = 224
str$ = 232
?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith, COMDAT

; 162  :         {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 163  :             return (StartsWith(_p, _start, str));

  0003b	4c 8b 85 e8 00
	00 00		 mov	 r8, QWORD PTR str$[rbp]
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00058	e8 00 00 00 00	 call	 ?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith

; 164  :         }

  0005d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00064	5f		 pop	 rdi
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 200
this$ = 304
?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::Progress, COMDAT

; 155  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 156  :             if (_p < _start)

  00036	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  0004c	73 2d		 jae	 SHORT $LN2@Progress

; 157  :                 throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_stringio.h;ReverseStringReader::Progress;1");

  0004e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FO@BNHGDLLE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  0005c	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00063	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00068	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006f	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00076	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Progress:

; 158  :             --_p;

  0007b	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00082	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00086	48 83 e8 02	 sub	 rax, 2
  0008a	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00091	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
$LN3@Progress:

; 159  :         }

  00095	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::Progress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
_TEXT	SEGMENT
this$ = 224
?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar, COMDAT

; 148  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 149  :             if (_p < _start)

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  0004c	73 04		 jae	 SHORT $LN2@PeekChar

; 150  :                 return (L'\0');

  0004e	33 c0		 xor	 eax, eax
  00050	eb 0e		 jmp	 SHORT $LN1@PeekChar
$LN2@PeekChar:

; 151  :             return (*_p);

  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005d	0f b7 00	 movzx	 eax, WORD PTR [rax]
$LN1@PeekChar:

; 152  :         }

  00060	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 224
p$ = 232
??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::ReverseStringReader, COMDAT

; 142  :         {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 141  :             : StringReader(nullptr)

  0003b	33 d2		 xor	 edx, edx
  0003d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00044	e8 00 00 00 00	 call	 ??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::StringReader::StringReader

; 142  :         {

  00049	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 143  :             _start = p;

  0005a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00068	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 144  :             _p = p + lstrlenW(p) - 1;

  0006c	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00073	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00079	48 98		 cdqe
  0007b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00082	48 8d 44 41 fe	 lea	 rax, QWORD PTR [rcx+rax*2-2]
  00087	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 145  :         }

  00092	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00099	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000a0	5f		 pop	 rdi
  000a1	5d		 pop	 rbp
  000a2	c3		 ret	 0
??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::ReverseStringReader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z
_TEXT	SEGMENT
a$ = 224
b$ = 232
?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::StringReader::StartsWith, COMDAT

; 120  :         {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@StartsWith:

; 121  :             while (*b != L'\0')

  0003b	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR b$[rbp]
  00042	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00045	85 c0		 test	 eax, eax
  00047	74 42		 je	 SHORT $LN3@StartsWith

; 122  :             {
; 123  :                 if (*a != *b)

  00049	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR a$[rbp]
  00050	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00053	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR b$[rbp]
  0005a	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  0005d	3b c1		 cmp	 eax, ecx
  0005f	74 04		 je	 SHORT $LN4@StartsWith

; 124  :                     return (0);

  00061	33 c0		 xor	 eax, eax
  00063	eb 2b		 jmp	 SHORT $LN1@StartsWith
$LN4@StartsWith:

; 125  :                 ++a;

  00065	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR a$[rbp]
  0006c	48 83 c0 02	 add	 rax, 2
  00070	48 89 85 e0 00
	00 00		 mov	 QWORD PTR a$[rbp], rax

; 126  :                 ++b;

  00077	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR b$[rbp]
  0007e	48 83 c0 02	 add	 rax, 2
  00082	48 89 85 e8 00
	00 00		 mov	 QWORD PTR b$[rbp], rax

; 127  :             }

  00089	eb b0		 jmp	 SHORT $LN2@StartsWith
$LN3@StartsWith:

; 128  :             return (1);

  0008b	b8 01 00 00 00	 mov	 eax, 1
$LN1@StartsWith:

; 129  :         }

  00090	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00097	5f		 pop	 rdi
  00098	5d		 pop	 rbp
  00099	c3		 ret	 0
?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::StartsWith
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
$T1 = 200
tv83 = 264
tv81 = 272
this$ = 320
str$ = 328
?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::StringReader::SkipString, COMDAT

; 109  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 110  :             if (!StartsWith(_p, str))

  0003b	48 8b 95 48 01
	00 00		 mov	 rdx, QWORD PTR str$[rbp]
  00042	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0004d	e8 00 00 00 00	 call	 ?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z ; Palmtree::Math::Core::Internal::StringReader::StartsWith
  00052	85 c0		 test	 eax, eax
  00054	75 2d		 jne	 SHORT $LN2@SkipString

; 111  :             {
; 112  :                 // str で始まっていないにもかかわらず、strをスキップしようとした。
; 113  :                 throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_stringio.h;StringReader::SkipString;1");

  00056	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FE@KONPIGEM@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  00064	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0006b	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00077	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0007e	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@SkipString:

; 114  :             }
; 115  :             _p += lstrlenW(str);

  00083	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR str$[rbp]
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00090	48 98		 cdqe
  00092	48 d1 e0	 shl	 rax, 1
  00095	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0009c	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a7	48 89 85 10 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  000ae	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR tv83[rbp]
  000b5	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  000bc	48 03 c8	 add	 rcx, rax
  000bf	48 8b c1	 mov	 rax, rcx
  000c2	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c9	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
$LN3@SkipString:

; 116  :         }

  000cd	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000d4	5f		 pop	 rdi
  000d5	5d		 pop	 rbp
  000d6	c3		 ret	 0
?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::SkipString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
_TEXT	SEGMENT
this$ = 224
str$ = 232
?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z PROC ; Palmtree::Math::Core::Internal::StringReader::StartsWith, COMDAT

; 84   :         {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 85   :             return (StartsWith(_p, str));

  0003b	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR str$[rbp]
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0004d	e8 00 00 00 00	 call	 ?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z ; Palmtree::Math::Core::Internal::StringReader::StartsWith

; 86   :         }

  00052	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00059	5f		 pop	 rdi
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::StartsWith
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 200
this$ = 304
?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ PROC ; Palmtree::Math::Core::Internal::StringReader::Progress, COMDAT

; 77   :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 78   :             if (*_p == L'\0')

  00036	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00041	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00044	85 c0		 test	 eax, eax
  00046	75 2d		 jne	 SHORT $LN2@Progress

; 79   :                 throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_stringio.h;StringReader::Progress;1");

  00048	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FA@CNGEABBJ@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  00056	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0005d	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00069	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00070	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Progress:

; 80   :             ++_p;

  00075	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00080	48 83 c0 02	 add	 rax, 2
  00084	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
$LN3@Progress:

; 81   :         }

  0008f	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  00096	5f		 pop	 rdi
  00097	5d		 pop	 rbp
  00098	c3		 ret	 0
?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ ENDP ; Palmtree::Math::Core::Internal::StringReader::Progress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
_TEXT	SEGMENT
this$ = 224
?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ PROC ; Palmtree::Math::Core::Internal::StringReader::PeekChar, COMDAT

; 72   :         {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 73   :             return (*_p);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00041	0f b7 00	 movzx	 eax, WORD PTR [rax]

; 74   :         }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ENDP ; Palmtree::Math::Core::Internal::StringReader::PeekChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z
_TEXT	SEGMENT
c$ = 4
this$ = 256
default_char$ = 264
?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z PROC ; Palmtree::Math::Core::Internal::StringReader::ReadChar, COMDAT

; 63   :         {

$LN4:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 64   :             wchar_t c = PeekChar();

  0003b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	ff 10		 call	 QWORD PTR [rax]
  0004e	66 89 45 04	 mov	 WORD PTR c$[rbp], ax

; 65   :             if (c == L'\0')

  00052	0f b7 45 04	 movzx	 eax, WORD PTR c$[rbp]
  00056	85 c0		 test	 eax, eax
  00058	75 09		 jne	 SHORT $LN2@ReadChar

; 66   :                 return (default_char);

  0005a	0f b7 85 08 01
	00 00		 movzx	 eax, WORD PTR default_char$[rbp]
  00061	eb 18		 jmp	 SHORT $LN1@ReadChar
$LN2@ReadChar:

; 67   :             Progress();

  00063	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00074	ff 50 08	 call	 QWORD PTR [rax+8]

; 68   :             return (c);

  00077	0f b7 45 04	 movzx	 eax, WORD PTR c$[rbp]
$LN1@ReadChar:

; 69   :         }

  0007b	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00082	5f		 pop	 rdi
  00083	5d		 pop	 rbp
  00084	c3		 ret	 0
?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::ReadChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ
_TEXT	SEGMENT
c$ = 4
this$ = 256
?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ PROC ; Palmtree::Math::Core::Internal::StringReader::ReadChar, COMDAT

; 56   :         {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 57   :             wchar_t c = PeekChar();

  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	ff 10		 call	 QWORD PTR [rax]
  00049	66 89 45 04	 mov	 WORD PTR c$[rbp], ax

; 58   :             Progress();

  0004d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005e	ff 50 08	 call	 QWORD PTR [rax+8]

; 59   :             return (c);

  00061	0f b7 45 04	 movzx	 eax, WORD PTR c$[rbp]

; 60   :         }

  00065	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ ENDP ; Palmtree::Math::Core::Internal::StringReader::ReadChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 224
p$ = 232
??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::StringReader::StringReader, COMDAT

; 50   :         StringReader(const wchar_t* p)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__80E6779E_pmc_stringio@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7StringReader@Internal@Core@Math@Palmtree@@6B@
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 51   :         {
; 52   :             _p = p;

  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  0005a	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 53   :         }

  0005e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::StringReader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT

; 295  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 296  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 291  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 290  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 291  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 292  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 286  :         {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004b	90		 npad	 1

; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  0004c	4c 8b 8d 10 01
	00 00		 mov	 r9, QWORD PTR data$[rbp]
  00053	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0005a	ba 00 ff ff ff	 mov	 edx, -256		; ffffffffffffff00H
  0005f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0006b	90		 npad	 1

; 286  :         {

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  0007a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 287  :         }

  0007d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
data$ = 272
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException, COMDAT

; 276  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 277  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException, COMDAT

; 272  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 271  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 272  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 273  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException, COMDAT

; 267  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 266  :             : Exception(PMC_STATUS_NOT_SUPPORTED, message)

  00047	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0004e	ba f6 ff ff ff	 mov	 edx, -10
  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005f	90		 npad	 1

; 267  :         {

  00060	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
  0006e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 268  :         }

  00071	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException, COMDAT

; 238  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 239  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException, COMDAT

; 234  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 233  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 234  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 235  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException, COMDAT

; 229  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)

  00046	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0004d	ba f8 ff ff ff	 mov	 edx, -8
  00052	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00059	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005e	90		 npad	 1

; 229  :         {

  0005f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
  0006d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 230  :         }

  00070	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00077	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007e	5f		 pop	 rdi
  0007f	5d		 pop	 rbp
  00080	c3		 ret	 0
??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::FormatException::~FormatException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::FormatException::~FormatException, COMDAT

; 219  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 220  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::FormatException::~FormatException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::FormatException::FormatException, COMDAT

; 215  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 214  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 215  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 216  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::FormatException::FormatException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::FormatException::FormatException, COMDAT

; 210  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)

  00047	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0004e	ba f9 ff ff ff	 mov	 edx, -7
  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005f	90		 npad	 1

; 210  :         {

  00060	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7FormatException@Internal@Core@Math@Palmtree@@6B@
  0006e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 211  :         }

  00071	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::FormatException::FormatException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT

; 124  :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 125  :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 120  :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1

; 119  :             : Exception(p)

  00047	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR p$[rbp]
  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0005a	90		 npad	 1

; 120  :         {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx

; 121  :         }

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 115  :         {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004b	90		 npad	 1

; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  0004c	4c 8b 8d 10 01
	00 00		 mov	 r9, QWORD PTR param_name$[rbp]
  00053	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR message$[rbp]
  0005a	ba fe ff ff ff	 mov	 edx, -2
  0005f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ; Palmtree::Math::Core::Internal::Exception::Exception
  0006b	90		 npad	 1

; 115  :         {

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  0007a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 116  :         }

  0007d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
message$ = 264
param_name$ = 272
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT

; 70   :         {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         }

  00053	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0005f	90		 npad	 1
  00060	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 62   :         Exception(const Exception& p) noexcept(true)

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  00053	90		 npad	 1
  00054	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 63   :         {
; 64   :             _code = p._code;

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00073	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  00076	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 65   :             _message = p._message;

  00079	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00080	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  00087	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  0008b	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 66   :             _data = p._data;

  0008f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR p$[rbp]
  0009d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  000a1	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 67   :         }

  000a5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
p$ = 264
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00038	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  0004a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004f	90		 npad	 1
  00050	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  0005c	90		 npad	 1
  0005d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 55   :         {
; 56   :             _code = code;

  0006e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	8b 8d 08 01 00
	00		 mov	 ecx, DWORD PTR code$[rbp]
  0007b	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 57   :             _message = message;

  0007e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00085	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR message$[rbp]
  0008c	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 58   :             _data = data;

  00090	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00097	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR data$[rbp]
  0009e	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 59   :         }

  000a2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a9	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b0	5f		 pop	 rdi
  000b1	5d		 pop	 rbp
  000b2	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
data$ = 280
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__802FEEC0_pmc_exception@h
  00045	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004a	90		 npad	 1
  0004b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@XZ ; std::exception::exception
  00057	90		 npad	 1
  00058	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00066	48 89 08	 mov	 QWORD PTR [rax], rcx

; 48   :         {
; 49   :             _code = code;

  00069	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00070	8b 8d 08 01 00
	00		 mov	 ecx, DWORD PTR code$[rbp]
  00076	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 50   :             _message = message;

  00079	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00080	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR message$[rbp]
  00087	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 51   :             _data = nullptr;

  0008b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00092	48 c7 40 28 00
	00 00 00	 mov	 QWORD PTR [rax+40], 0

; 52   :         }

  0009a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a1	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000a8	5f		 pop	 rdi
  000a9	5d		 pop	 rbp
  000aa	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
code$ = 264
message$ = 272
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 90   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00042	74 14		 je	 SHORT $LN3@what
  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00056	eb 0e		 jmp	 SHORT $LN4@what
$LN3@what:
  00058	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0005f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  00066	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 92   :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 86   :         __std_exception_destroy(&_Data);

  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 __std_exception_destroy
  00066	90		 npad	 1

; 87   :     }

  00067	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0exception@std@@QEAA@XZ PROC				; std::exception::exception, COMDAT

; 50   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9BB4E194_vcruntime_exception@h
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx

; 49   :         : _Data()

  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b f8	 mov	 rdi, rax
  00061	33 c0		 xor	 eax, eax
  00063	b9 10 00 00 00	 mov	 ecx, 16
  00068	f3 aa		 rep stosb

; 51   :     }

  0006a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??0exception@std@@QEAA@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
