; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	test_total_count
PUBLIC	test_ok_count
PUBLIC	__DEBUG_LOG
_BSS	SEGMENT
test_total_count DD 01H DUP (?)
test_ok_count DD 01H DUP (?)
__DEBUG_LOG DQ	01H DUP (?)
_BSS	ENDS
msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__630249ED_pmc_uint_debug@h DB 01H
__709645E0_debug@c DB 01H
msvcjmc	ENDS
PUBLIC	TEST_Assert
PUBLIC	FormatTestLabel
PUBLIC	FormatTestMesssage
PUBLIC	DoDebug
PUBLIC	DumpBinary_UNIT
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1O@FHBPNOC@?$PP?F?$PP?$LJ?$PP?H?$PP?$IL?$PP?K?$AA?6@ ; `string'
PUBLIC	??_C@_1GM@EPACJBNM@?$PP?F?$PP?$LJ?$PP?H?$PP?$IM?$PP?$IG?$AA?$AC?$AA?$AF?$PP?n?$AAp?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAO@ ; `string'
PUBLIC	??_C@_1DG@PFOCBIDG@?$AAP?$AAM?$AAC?$AA_?$AAU?$AAI?$AAN?$AAT?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@ ; `string'
PUBLIC	??_C@_17EIACCBPF@?$AAx?$AA6?$AA4@		; `string'
PUBLIC	??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@		; `string'
PUBLIC	??_C@_1BM@IMGEAKDJ@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?6@ ; `string'
PUBLIC	??_C@_1BM@DNPJODOF@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?6@ ; `string'
PUBLIC	??_C@_1GO@EJNKEMEB@?$AAC?$AAP?$AAU?$AA?9?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAP?$AAO?$AAP?$AAC?$AAN@ ; `string'
PUBLIC	??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@	; `string'
PUBLIC	??_C@_1DE@HJPKPLII@?$PP?F?$PP?$LJ?$PP?H?$AA?5?$AAN?$AAo?$AA?4?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DN@ ; `string'
PUBLIC	??_C@_15JOGBDECP@?$AA?0?$AA?5@			; `string'
PUBLIC	??_C@_1O@GMFEIALK@?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx@ ; `string'
EXTRN	__imp_wsprintfW:PROC
EXTRN	PMC_UINT_Initialize:PROC
EXTRN	TEST_autogenerated:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
_BSS	SEGMENT
?buffer@?1??FormatTestLabel@@9@9 DW 0100H DUP (?)	; `FormatTestLabel'::`2'::buffer
?buffer@?1??FormatTestMesssage@@9@9 DW 0100H DUP (?)	; `FormatTestMesssage'::`2'::buffer
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_Assert DD imagerel $LN5
	DD	imagerel $LN5+170
	DD	imagerel $unwind$TEST_Assert
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$FormatTestLabel DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$FormatTestLabel
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$FormatTestMesssage DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$FormatTestMesssage
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_Start DD imagerel TEST_Start
	DD	imagerel TEST_Start+100
	DD	imagerel $unwind$TEST_Start
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_End DD imagerel TEST_End
	DD	imagerel TEST_End+174
	DD	imagerel $unwind$TEST_End
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$DoTest DD imagerel DoTest
	DD	imagerel DoTest+140
	DD	imagerel $unwind$DoTest
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$DoDebug DD imagerel $LN4
	DD	imagerel $LN4+311
	DD	imagerel $unwind$DoDebug
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$DumpBinary_UNIT DD imagerel $LN10
	DD	imagerel $LN10+282
	DD	imagerel $unwind$DumpBinary_UNIT
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1O@GMFEIALK@?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx@
CONST	SEGMENT
??_C@_1O@GMFEIALK@?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx@ DB '0', 00H, 'x', 00H
	DB	'%', 00H, '0', 00H, '2', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15JOGBDECP@?$AA?0?$AA?5@
CONST	SEGMENT
??_C@_15JOGBDECP@?$AA?0?$AA?5@ DB ',', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@HJPKPLII@?$PP?F?$PP?$LJ?$PP?H?$AA?5?$AAN?$AAo?$AA?4?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DN@
CONST	SEGMENT
??_C@_1DE@HJPKPLII@?$PP?F?$PP?$LJ?$PP?H?$AA?5?$AAN?$AAo?$AA?4?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DN@ DB 0c6H
	DB	'0', 0b9H, '0', 0c8H, '0 ', 00H, 'N', 00H, 'o', 00H, '.', 00H, '%'
	DB	00H, 'd', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H, ' ', 00H
	DB	'=', 00H, '>', 00H, ' ', 00H, '%', 00H, 's', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 's', 00H, ')', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@
CONST	SEGMENT
??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@ DB '***NG***', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GO@EJNKEMEB@?$AAC?$AAP?$AAU?$AA?9?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAP?$AAO?$AAP?$AAC?$AAN@
CONST	SEGMENT
??_C@_1GO@EJNKEMEB@?$AAC?$AAP?$AAU?$AA?9?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAP?$AAO?$AAP?$AAC?$AAN@ DB 'C'
	DB	00H, 'P', 00H, 'U', 00H, '-', 00H, 'I', 00H, 'N', 00H, 'F', 00H
	DB	'O', 00H, ':', 00H, ' ', 00H, 'P', 00H, 'O', 00H, 'P', 00H, 'C'
	DB	00H, 'N', 00H, 'T', 00H, '=', 00H, '%', 00H, 'd', 00H, ',', 00H
	DB	' ', 00H, 'A', 00H, 'D', 00H, 'X', 00H, '=', 00H, '%', 00H, 'd'
	DB	00H, ',', 00H, ' ', 00H, 'B', 00H, 'M', 00H, 'I', 00H, '1', 00H
	DB	'=', 00H, '%', 00H, 'd', 00H, ',', 00H, ' ', 00H, 'B', 00H, 'M'
	DB	00H, 'I', 00H, '2', 00H, '=', 00H, '%', 00H, 'd', 00H, ',', 00H
	DB	' ', 00H, 'A', 00H, 'B', 00H, 'M', 00H, '=', 00H, '%', 00H, 'd'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@DNPJODOF@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?6@
CONST	SEGMENT
??_C@_1BM@DNPJODOF@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?6@ DB 'C'
	DB	00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H
	DB	'R', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@IMGEAKDJ@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?6@
CONST	SEGMENT
??_C@_1BM@IMGEAKDJ@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?6@ DB 'P'
	DB	00H, 'L', 00H, 'A', 00H, 'T', 00H, 'F', 00H, 'O', 00H, 'R', 00H
	DB	'M', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@
CONST	SEGMENT
??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@ DB 'M', 00H, 'S', 00H, 'C', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17EIACCBPF@?$AAx?$AA6?$AA4@
CONST	SEGMENT
??_C@_17EIACCBPF@?$AAx?$AA6?$AA4@ DB 'x', 00H, '6', 00H, '4', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PFOCBIDG@?$AAP?$AAM?$AAC?$AA_?$AAU?$AAI?$AAN?$AAT?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@
CONST	SEGMENT
??_C@_1DG@PFOCBIDG@?$AAP?$AAM?$AAC?$AA_?$AAU?$AAI?$AAN?$AAT?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@ DB 'P'
	DB	00H, 'M', 00H, 'C', 00H, '_', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, '_', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H
	DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@EPACJBNM@?$PP?F?$PP?$LJ?$PP?H?$PP?$IM?$PP?$IG?$AA?$AC?$AA?$AF?$PP?n?$AAp?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAO@
CONST	SEGMENT
??_C@_1GM@EPACJBNM@?$PP?F?$PP?$LJ?$PP?H?$PP?$IM?$PP?$IG?$AA?$AC?$AA?$AF?$PP?n?$AAp?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAO@ DB 0c6H
	DB	'0', 0b9H, '0', 0c8H, '0', 08cH, '[', 086H, 'N', 02H, '0', 05H
	DB	098H, 0eeH, 'vpe=', 00H, '%', 00H, 'd', 00H, ',', 00H, ' ', 00H
	DB	'O', 00H, 'K', 00H, 05H, 098H, 0eeH, 'vpe=', 00H, '%', 00H, 'd'
	DB	00H, ',', 00H, ' ', 00H, 'N', 00H, 'G', 00H, 05H, 098H, 0eeH, 'v'
	DB	'pe=', 00H, '%', 00H, 'd', 00H, ',', 00H, ' ', 00H, 'O', 00H, 'K'
	DB	00H, 087H, 's=', 00H, '%', 00H, 'd', 00H, '%', 00H, '%', 00H, ','
	DB	00H, ' ', 00H, 'N', 00H, 'G', 00H, 087H, 's=', 00H, '%', 00H, 'd'
	DB	00H, '%', 00H, '%', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@FHBPNOC@?$PP?F?$PP?$LJ?$PP?H?$PP?$IL?$PP?K?$AA?6@
CONST	SEGMENT
??_C@_1O@FHBPNOC@?$PP?F?$PP?$LJ?$PP?H?$PP?$IL?$PP?K?$AA?6@ DB 0c6H, '0', 0b9H
	DB	'0', 0c8H, '0', 08bH, 095H, 0cbH, 'Y', 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DumpBinary_UNIT DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DoDebug DD 035052a01H
	DD	010e3313H
	DD	07007002fH
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
DoDebug$rtcName$0 DB 063H
	DB	06fH
	DB	06eH
	DB	066H
	DB	00H
	ORG $+11
DoDebug$rtcVarDesc DD 034H
	DD	04H
	DQ	FLAT:DoDebug$rtcName$0
	ORG $+48
DoDebug$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:DoDebug$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DoTest DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_End DD 035052a01H
	DD	010e3313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_Start DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$FormatTestMesssage DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$FormatTestLabel DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_Assert DD 035053901H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\debug.c
;	COMDAT DumpBinary_UNIT
_TEXT	SEGMENT
p$1 = 8
is_first$2 = 36
buf$ = 288
count$ = 296
DumpBinary_UNIT PROC					; COMDAT

; 135  : {

$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__709645E0_debug@c
	call	__CheckForDebuggerJustMyCode

; 136  :     if (__DEBUG_LOG != NULL)

	cmp	QWORD PTR __DEBUG_LOG, 0
	je	$LN6@DumpBinary

; 137  :     {
; 138  :         unsigned char* p = (unsigned char*)buf;

	mov	rax, QWORD PTR buf$[rbp]
	mov	QWORD PTR p$1[rbp], rax

; 139  :         count *= sizeof(__UNIT_TYPE);

	mov	rax, QWORD PTR count$[rbp]
	shl	rax, 3
	mov	QWORD PTR count$[rbp], rax
$LN2@DumpBinary:

; 140  :         while (count > 0 && p[count - 1] == 0)

	cmp	QWORD PTR count$[rbp], 0
	jbe	SHORT $LN3@DumpBinary
	mov	rax, QWORD PTR count$[rbp]
	mov	rcx, QWORD PTR p$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	movzx	eax, BYTE PTR [rax-1]
	test	eax, eax
	jne	SHORT $LN3@DumpBinary

; 141  :             --count;

	mov	rax, QWORD PTR count$[rbp]
	dec	rax
	mov	QWORD PTR count$[rbp], rax
	jmp	SHORT $LN2@DumpBinary
$LN3@DumpBinary:

; 142  :         if (count <= 0)

	cmp	QWORD PTR count$[rbp], 0
	ja	SHORT $LN7@DumpBinary

; 143  :             count = 1;

	mov	QWORD PTR count$[rbp], 1
$LN7@DumpBinary:

; 144  :         int is_first = 1;

	mov	DWORD PTR is_first$2[rbp], 1
$LN4@DumpBinary:

; 145  :         while (count > 0)

	cmp	QWORD PTR count$[rbp], 0
	jbe	SHORT $LN5@DumpBinary

; 146  :         {
; 147  :             if (!is_first)

	cmp	DWORD PTR is_first$2[rbp], 0
	jne	SHORT $LN8@DumpBinary

; 148  :                 (*__DEBUG_LOG)(L", ");

	lea	rcx, OFFSET FLAT:??_C@_15JOGBDECP@?$AA?0?$AA?5@
	call	QWORD PTR __DEBUG_LOG
$LN8@DumpBinary:

; 149  :             (*__DEBUG_LOG)(L"0x%02x", *p);

	mov	rax, QWORD PTR p$1[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_1O@GMFEIALK@?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx@
	call	QWORD PTR __DEBUG_LOG

; 150  :             ++p;

	mov	rax, QWORD PTR p$1[rbp]
	inc	rax
	mov	QWORD PTR p$1[rbp], rax

; 151  :             --count;

	mov	rax, QWORD PTR count$[rbp]
	dec	rax
	mov	QWORD PTR count$[rbp], rax

; 152  :             is_first = 0;

	mov	DWORD PTR is_first$2[rbp], 0

; 153  :         }

	jmp	SHORT $LN4@DumpBinary
$LN5@DumpBinary:
$LN6@DumpBinary:

; 154  :     }
; 155  : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
DumpBinary_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\debug.c
;	COMDAT DoDebug
_TEXT	SEGMENT
conf$ = 4
ep$ = 40
platform$ = 72
compiler$ = 104
tv95 = 308
env$ = 352
DoDebug	PROC						; COMDAT

; 66   : {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	lea	rcx, OFFSET FLAT:__709645E0_debug@c
	call	__CheckForDebuggerJustMyCode

; 67   : #ifdef _DEBUG
; 68   :     PMC_CONFIGURATION_INFO conf;
; 69   :     conf.MEMORY_VERIFICATION_ENABLED = FALSE;

	mov	eax, DWORD PTR conf$[rbp]
	and	eax, -2					; fffffffeH
	mov	DWORD PTR conf$[rbp], eax

; 70   :     PMC_UINT_ENTRY_POINTS* ep = PMC_UINT_Initialize(&conf);

	lea	rcx, QWORD PTR conf$[rbp]
	call	PMC_UINT_Initialize
	mov	QWORD PTR ep$[rbp], rax

; 71   :     if (ep == NULL)

	cmp	QWORD PTR ep$[rbp], 0
	jne	SHORT $LN2@DoDebug

; 72   :     {
; 73   :          env->log(L"PMC_UINT_Initialize failed");

	lea	rcx, OFFSET FLAT:??_C@_1DG@PFOCBIDG@?$AAP?$AAM?$AAC?$AA_?$AAU?$AAI?$AAN?$AAT?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 74   :          return;

	jmp	$LN1@DoDebug
$LN2@DoDebug:

; 75   :     }
; 76   : #ifdef _M_IX86
; 77   :     wchar_t* platform = L"x86";
; 78   : #elif defined(_M_IX64)
; 79   :     wchar_t* platform = L"x64";

	lea	rax, OFFSET FLAT:??_C@_17EIACCBPF@?$AAx?$AA6?$AA4@
	mov	QWORD PTR platform$[rbp], rax

; 80   : #else
; 81   : #error unknown platform
; 82   : #endif
; 83   : #ifdef _MSC_VER
; 84   :     wchar_t* compiler = L"MSC";

	lea	rax, OFFSET FLAT:??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@
	mov	QWORD PTR compiler$[rbp], rax

; 85   : #elif defined(__GNUC__)
; 86   :     wchar_t* compiler = L"GNUC";
; 87   : #else
; 88   : #error unknown platform
; 89   : #endif
; 90   : 
; 91   :     env->log(L"PLATFORM: %s\n", platform);

	mov	rdx, QWORD PTR platform$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_1BM@IMGEAKDJ@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?6@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 92   :     env->log(L"COMPILER: %s\n", compiler);

	mov	rdx, QWORD PTR compiler$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_1BM@DNPJODOF@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?6@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 93   :     env->log(L"CPU-INFO: POPCNT=%d, ADX=%d, BMI1=%d, BMI2=%d, ABM=%d\n",

	mov	rax, QWORD PTR ep$[rbp]
	mov	eax, DWORD PTR [rax]
	shr	eax, 4
	and	eax, 1
	mov	rcx, QWORD PTR ep$[rbp]
	mov	ecx, DWORD PTR [rcx]
	shr	ecx, 3
	and	ecx, 1
	mov	rdx, QWORD PTR ep$[rbp]
	mov	edx, DWORD PTR [rdx]
	shr	edx, 2
	and	edx, 1
	mov	r8, QWORD PTR ep$[rbp]
	mov	r8d, DWORD PTR [r8]
	shr	r8d, 1
	and	r8d, 1
	mov	r9, QWORD PTR ep$[rbp]
	mov	r9d, DWORD PTR [r9]
	and	r9d, 1
	mov	DWORD PTR tv95[rbp], r9d
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], ecx
	mov	r9d, edx
	mov	eax, DWORD PTR tv95[rbp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_1GO@EJNKEMEB@?$AAC?$AAP?$AAU?$AA?9?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAP?$AAO?$AAP?$AAC?$AAN@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 94   :              ep->PROCESSOR_FEATURE_POPCNT,
; 95   :              ep->PROCESSOR_FEATURE_ADX,
; 96   :              ep->PROCESSOR_FEATURE_BMI1,
; 97   :              ep->PROCESSOR_FEATURE_BMI2,
; 98   :              ep->PROCESSOR_FEATURE_ABM);
; 99   : 
; 100  :     //CalculateCriticalDataOfDivision(env);
; 101  :     DoTest(env, ep);

	mov	rdx, QWORD PTR ep$[rbp]
	mov	rcx, QWORD PTR env$[rbp]
	call	DoTest
$LN1@DoDebug:

; 102  : #endif
; 103  : }

	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:DoDebug$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
DoDebug	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\debug.c
;	COMDAT DoTest
_TEXT	SEGMENT
env$ = 224
ep$ = 232
DoTest	PROC						; COMDAT

; 56   : {

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__709645E0_debug@c
	call	__CheckForDebuggerJustMyCode

; 57   :     __DEBUG_LOG = env->log;

	mov	rax, QWORD PTR env$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR __DEBUG_LOG, rax

; 58   :     TEST_Start(env);

	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Start

; 59   :     TEST_autogenerated(env, ep);

	mov	rdx, QWORD PTR ep$[rbp]
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_autogenerated

; 60   :     TEST_End(env);

	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_End

; 61   :     __DEBUG_LOG = NULL;

	mov	QWORD PTR __DEBUG_LOG, 0

; 62   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
DoTest	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\debug.c
;	COMDAT TEST_End
_TEXT	SEGMENT
tv68 = 192
env$ = 240
TEST_End PROC						; COMDAT

; 46   : {

	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__709645E0_debug@c
	call	__CheckForDebuggerJustMyCode

; 47   :     env->log(L"テスト完了。項目数=%d, OK項目数=%d, NG項目数=%d, OK率=%d%%, NG率=%d%%\n",

	mov	eax, DWORD PTR test_ok_count
	mov	ecx, DWORD PTR test_total_count
	sub	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 100				; 00000064H
	cdq
	idiv	DWORD PTR test_total_count
	mov	DWORD PTR tv68[rbp], eax
	imul	ecx, DWORD PTR test_ok_count, 100	; 00000064H
	mov	eax, ecx
	cdq
	idiv	DWORD PTR test_total_count
	mov	ecx, DWORD PTR test_ok_count
	mov	edx, DWORD PTR test_total_count
	sub	edx, ecx
	mov	ecx, edx
	mov	edx, DWORD PTR tv68[rbp]
	mov	DWORD PTR [rsp+40], edx
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, ecx
	mov	r8d, DWORD PTR test_ok_count
	mov	edx, DWORD PTR test_total_count
	lea	rcx, OFFSET FLAT:??_C@_1GM@EPACJBNM@?$PP?F?$PP?$LJ?$PP?H?$PP?$IM?$PP?$IG?$AA?$AC?$AA?$AF?$PP?n?$AAp?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAO@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 48   :              test_total_count,
; 49   :              test_ok_count,
; 50   :              test_total_count - test_ok_count,
; 51   :              test_ok_count * 100 / test_total_count,
; 52   :              (test_total_count - test_ok_count) * 100 / test_total_count);
; 53   : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
TEST_End ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\debug.c
;	COMDAT TEST_Start
_TEXT	SEGMENT
env$ = 224
TEST_Start PROC						; COMDAT

; 39   : {

	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__709645E0_debug@c
	call	__CheckForDebuggerJustMyCode

; 40   :     test_total_count = 0;

	mov	DWORD PTR test_total_count, 0

; 41   :     test_ok_count = 0;

	mov	DWORD PTR test_ok_count, 0

; 42   :     env->log(L"テスト開始\n");

	lea	rcx, OFFSET FLAT:??_C@_1O@FHBPNOC@?$PP?F?$PP?$LJ?$PP?H?$PP?$IL?$PP?K?$AA?6@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 43   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
TEST_Start ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\debug.c
;	COMDAT FormatTestMesssage
_TEXT	SEGMENT
format$ = 224
return_value$ = 232
FormatTestMesssage PROC					; COMDAT

; 128  : {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__709645E0_debug@c
	call	__CheckForDebuggerJustMyCode

; 129  :     static wchar_t buffer[256];
; 130  :     wsprintfW(buffer, format, return_value);

	mov	r8d, DWORD PTR return_value$[rbp]
	mov	rdx, QWORD PTR format$[rbp]
	lea	rcx, OFFSET FLAT:?buffer@?1??FormatTestMesssage@@9@9
	call	QWORD PTR __imp_wsprintfW

; 131  :     return buffer;

	lea	rax, OFFSET FLAT:?buffer@?1??FormatTestMesssage@@9@9

; 132  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
FormatTestMesssage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\debug.c
;	COMDAT FormatTestLabel
_TEXT	SEGMENT
format$ = 224
n1$ = 232
n2$ = 240
FormatTestLabel PROC					; COMDAT

; 121  : {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__709645E0_debug@c
	call	__CheckForDebuggerJustMyCode

; 122  :     static wchar_t buffer[256];
; 123  :     wsprintfW(buffer, format, n1, n2);

	mov	r9d, DWORD PTR n2$[rbp]
	mov	r8d, DWORD PTR n1$[rbp]
	mov	rdx, QWORD PTR format$[rbp]
	lea	rcx, OFFSET FLAT:?buffer@?1??FormatTestLabel@@9@9
	call	QWORD PTR __imp_wsprintfW

; 124  :     return buffer;

	lea	rax, OFFSET FLAT:?buffer@?1??FormatTestLabel@@9@9

; 125  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
FormatTestLabel ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\debug.c
;	COMDAT TEST_Assert
_TEXT	SEGMENT
env$ = 224
test_name$ = 232
condition$ = 240
reason$ = 248
TEST_Assert PROC					; COMDAT

; 107  : {

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__709645E0_debug@c
	call	__CheckForDebuggerJustMyCode

; 108  :     if (condition)

	cmp	DWORD PTR condition$[rbp], 0
	je	SHORT $LN2@TEST_Asser

; 109  :     {
; 110  :         //env->log(L"テスト No.%d: %s => %s\n", test_total_count + 1, test_name, "Ok");
; 111  :         ++test_ok_count;

	mov	eax, DWORD PTR test_ok_count
	inc	eax
	mov	DWORD PTR test_ok_count, eax

; 112  :     }

	jmp	SHORT $LN3@TEST_Asser
$LN2@TEST_Asser:

; 113  :     else
; 114  :     {
; 115  :         env->log(L"テスト No.%d: %s => %s (%s)\n", test_total_count + 1, test_name, "***NG***", reason);

	mov	eax, DWORD PTR test_total_count
	inc	eax
	mov	rcx, QWORD PTR reason$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, OFFSET FLAT:??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@
	mov	r8, QWORD PTR test_name$[rbp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_1DE@HJPKPLII@?$PP?F?$PP?$LJ?$PP?H?$AA?5?$AAN?$AAo?$AA?4?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DN@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]
$LN3@TEST_Asser:

; 116  :     }
; 117  :     ++test_total_count;

	mov	eax, DWORD PTR test_total_count
	inc	eax
	mov	DWORD PTR test_total_count, eax

; 118  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
TEST_Assert ENDP
_TEXT	ENDS
END
