; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?configuration_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_CONFIGURATION_INFO@1234@A ; Palmtree::Math::Core::Internal::configuration_info
_BSS	SEGMENT
?configuration_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_CONFIGURATION_INFO@1234@A DB 01H DUP (?) ; Palmtree::Math::Core::Internal::configuration_info
_BSS	ENDS
msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__2088847F_corecrt_memory@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__E9FFF232_guiddef@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__12AD47BB_winuser@h DB 01H
__B4B40122_winioctl@h DB 01H
__A73354DD_stdlib@h DB 01H
__25F3FB34_propidl@h DB 01H
__A40E48B8_oleauto@h DB 01H
__86261D59_stralign@h DB 01H
__331E732B_malloc@h DB 01H
__BB6D3116_pmc_uint_internal@h DB 01H
__8CA3E54E_pmc_inline_func@h DB 01H
__6BB7AB7E_pmc_initialize@cpp DB 01H
msvcjmc	ENDS
PUBLIC	PMC_UINT_Initialize
PUBLIC	?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1BC@IAEPHGOI@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR@ ; `string'
PUBLIC	??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@		; `string'
PUBLIC	??_C@_1BC@CNHMMALG@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM@ ; `string'
PUBLIC	??_C@_17EIACCBPF@?$AAx?$AA6?$AA4@		; `string'
EXTRN	__imp_lstrcmpW:PROC
EXTRN	__imp_lstrcpyW:PROC
EXTRN	?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::GetCPUInfo
EXTRN	?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Memory
EXTRN	?Initialize_From@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_From
EXTRN	?Initialize_To@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_To
EXTRN	?Initialize_Add@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Add
EXTRN	?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Subtruct
EXTRN	?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Multiply
EXTRN	?Initialize_DivRem@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_DivRem
EXTRN	?Initialize_Shift@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Shift
EXTRN	?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_BitwiseAnd
EXTRN	?Initialize_BitwiseOr@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_BitwiseOr
EXTRN	?Initialize_ExclusiveOr@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_ExclusiveOr
EXTRN	?Initialize_Compare@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Compare
EXTRN	?Initialize_Equals@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Equals
EXTRN	?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_ToString
EXTRN	?Initialize_Parse@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Parse
EXTRN	?Initialize_GreatestCommonDivisor@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_GreatestCommonDivisor
EXTRN	?Initialize_Pow@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Pow
EXTRN	?Initialize_ModPow@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_ModPow
EXTRN	?PMC_GetStatisticsInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_STATISTICS_INFO@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GetStatisticsInfo
EXTRN	?PMC_From_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_From_I
EXTRN	?PMC_From_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_From_L
EXTRN	?PMC_Dispose@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Dispose
EXTRN	?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@H@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I
EXTRN	?PMC_FromByteArray@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEBE_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_FromByteArray
EXTRN	?PMC_ToByteArray@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEAE_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ToByteArray
EXTRN	?PMC_Clone_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Clone_X
EXTRN	?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YA_KXZ:PROC ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize
EXTRN	?PMC_To_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_To_X_I
EXTRN	?PMC_To_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_To_X_L
EXTRN	?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo
EXTRN	?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ToString
EXTRN	?PMC_TryParse@Internal@Core@Math@Palmtree@@YAHPEB_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEAPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_TryParse
EXTRN	?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_I_X
EXTRN	?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_L_X
EXTRN	?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_I
EXTRN	?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_L
EXTRN	?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_X
EXTRN	?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
EXTRN	?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
EXTRN	?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
EXTRN	?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
EXTRN	?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
EXTRN	?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
EXTRN	?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
EXTRN	?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
EXTRN	?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
EXTRN	?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
EXTRN	?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_I_X
EXTRN	?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_L_X
EXTRN	?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I
EXTRN	?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L
EXTRN	?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X
EXTRN	?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z:PROC ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I
EXTRN	?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z:PROC ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I
EXTRN	?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_I_X
EXTRN	?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X
EXTRN	?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_I
EXTRN	?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L
EXTRN	?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X
EXTRN	?PMC_BitwiseOr_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_I_X
EXTRN	?PMC_BitwiseOr_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_L_X
EXTRN	?PMC_BitwiseOr_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_I
EXTRN	?PMC_BitwiseOr_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_L
EXTRN	?PMC_BitwiseOr_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_X
EXTRN	?PMC_ExclusiveOr_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_I_X
EXTRN	?PMC_ExclusiveOr_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_L_X
EXTRN	?PMC_ExclusiveOr_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_I
EXTRN	?PMC_ExclusiveOr_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_L
EXTRN	?PMC_ExclusiveOr_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_X
EXTRN	?PMC_Compare_I_X@Internal@Core@Math@Palmtree@@YAHIPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_I_X
EXTRN	?PMC_Compare_L_X@Internal@Core@Math@Palmtree@@YAH_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_L_X
EXTRN	?PMC_Compare_X_I@Internal@Core@Math@Palmtree@@YAHPEAU__tag_PMC_HANDLE_UINT@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_I
EXTRN	?PMC_Compare_X_L@Internal@Core@Math@Palmtree@@YAHPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_L
EXTRN	?PMC_Compare_X_X@Internal@Core@Math@Palmtree@@YAHPEAU__tag_PMC_HANDLE_UINT@1234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_X
EXTRN	?PMC_Equals_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_I_X
EXTRN	?PMC_Equals_L_X@Internal@Core@Math@Palmtree@@YAI_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_L_X
EXTRN	?PMC_Equals_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_I
EXTRN	?PMC_Equals_X_L@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_L
EXTRN	?PMC_Equals_X_X@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_X
EXTRN	?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_I_X
EXTRN	?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_L_X
EXTRN	?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I
EXTRN	?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L
EXTRN	?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X
EXTRN	?PMC_Pow_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Pow_X_I
EXTRN	?PMC_Pow_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Pow_X_L
EXTRN	?PMC_ModPow_X_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@00@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ModPow_X_X_X
EXTRN	?PMC_FromByteArrayForSINT@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAE_KPEAD@Z:PROC ; Palmtree::Math::Core::Internal::PMC_FromByteArrayForSINT
EXTRN	?PMC_ToByteArrayForSINT@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_PMC_HANDLE_UINT@1234@PEAE_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ToByteArrayForSINT
EXTRN	?PMC_TryParseForSINT@Internal@Core@Math@Palmtree@@YAHPEB_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEADPEAPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_TryParseForSINT
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
	ALIGN	4

?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A DB 0250H DUP (?) ; Palmtree::Math::Core::Internal::entry_points
?initialized@Internal@Core@Math@Palmtree@@3DA DB 01H DUP (?) ; Palmtree::Math::Core::Internal::initialized
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$PMC_UINT_Initialize DD imagerel $LN23
	DD	imagerel $LN23+1700
	DD	imagerel $unwind$PMC_UINT_Initialize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z DD imagerel $LN11
	DD	imagerel $LN11+356
	DD	imagerel $unwind$?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ZERO_MEMORY_BYTE DD imagerel _ZERO_MEMORY_BYTE
	DD	imagerel _ZERO_MEMORY_BYTE+87
	DD	imagerel $unwind$_ZERO_MEMORY_BYTE
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ DD imagerel ?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ
	DD	imagerel ?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ+304
	DD	imagerel $unwind$?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_17EIACCBPF@?$AAx?$AA6?$AA4@
CONST	SEGMENT
??_C@_17EIACCBPF@?$AAx?$AA6?$AA4@ DB 'x', 00H, '6', 00H, '4', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@CNHMMALG@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM@
CONST	SEGMENT
??_C@_1BC@CNHMMALG@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM@ DB 'P', 00H, 'L'
	DB	00H, 'A', 00H, 'T', 00H, 'F', 00H, 'O', 00H, 'R', 00H, 'M', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@
CONST	SEGMENT
??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@ DB 'M', 00H, 'S', 00H, 'C', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@IAEPHGOI@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR@
CONST	SEGMENT
??_C@_1BC@IAEPHGOI@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR@ DB 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, 'R', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ DD 025051e01H
	DD	010a230fH
	DD	07003002fH
	DD	05002H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ$rtcName$0 DB 06eH ; Palmtree::Math::Core::Internal::SelfCheck
	DB	068H
	DB	00H
	ORG $+13
?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ$rtcVarDesc DD 030H ; Palmtree::Math::Core::Internal::SelfCheck
	DD	050H
	DQ	FLAT:?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ$rtcName$0
	ORG $+48
?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ$rtcFrameData DD 01H ; Palmtree::Math::Core::Internal::SelfCheck
	DD	00H
	DQ	FLAT:?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ZERO_MEMORY_BYTE DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z DD 025054a19H
	DD	011d2322H
	DD	070160025H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z$rtcName$0 DB 076H ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
	DB	061H
	DB	06cH
	DB	075H
	DB	065H
	DB	00H
	ORG $+2
?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z$rtcName$1 DB 076H ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
	DB	061H
	DB	06cH
	DB	075H
	DB	065H
	DB	00H
	ORG $+2
?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z$rtcVarDesc DD 048H ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
	DD	08H
	DQ	FLAT:?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z$rtcName$0
	ORG $+96
?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z$rtcFrameData DD 02H ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
	DD	00H
	DQ	FLAT:?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PMC_UINT_Initialize DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
PMC_UINT_Initialize$rtcName$0 DB 066H
	DB	065H
	DB	061H
	DB	074H
	DB	075H
	DB	072H
	DB	065H
	DB	00H
	ORG $+8
PMC_UINT_Initialize$rtcVarDesc DD 024H
	DD	04H
	DQ	FLAT:PMC_UINT_Initialize$rtcName$0
	ORG $+48
PMC_UINT_Initialize$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:PMC_UINT_Initialize$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
;	COMDAT ?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ
_TEXT	SEGMENT
nh$ = 16
handle$ = 120
?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ PROC	; Palmtree::Math::Core::Internal::SelfCheck, COMDAT

; 90   :     {

  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6BB7AB7E_pmc_initialize@cpp
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 91   :         NUMBER_HEADER nh;
; 92   :         PMC_HANDLE_UINT handle = (PMC_HANDLE_UINT)&nh;

  0002a	48 8d 45 10	 lea	 rax, QWORD PTR nh$[rbp]
  0002e	48 89 45 78	 mov	 QWORD PTR handle$[rbp], rax

; 93   : 
; 94   :         _ZERO_MEMORY_BYTE(&nh, sizeof(nh));

  00032	ba 50 00 00 00	 mov	 edx, 80			; 00000050H
  00037	48 8d 4d 10	 lea	 rcx, QWORD PTR nh$[rbp]
  0003b	e8 00 00 00 00	 call	 _ZERO_MEMORY_BYTE

; 95   :         nh.HASH_CODE = 0x12345678;

  00040	48 c7 45 10 78
	56 34 12	 mov	 QWORD PTR nh$[rbp], 305419896 ; 12345678H

; 96   :         if (handle->HASH_CODE != 0x12345678)

  00048	48 8b 45 78	 mov	 rax, QWORD PTR handle$[rbp]
  0004c	48 81 38 78 56
	34 12		 cmp	 QWORD PTR [rax], 305419896 ; 12345678H
  00053	74 07		 je	 SHORT $LN2@SelfCheck

; 97   :             return (FALSE);

  00055	33 c0		 xor	 eax, eax
  00057	e9 b4 00 00 00	 jmp	 $LN1@SelfCheck
$LN2@SelfCheck:

; 98   : 
; 99   :         _ZERO_MEMORY_BYTE(&nh, sizeof(nh));

  0005c	ba 50 00 00 00	 mov	 edx, 80			; 00000050H
  00061	48 8d 4d 10	 lea	 rcx, QWORD PTR nh$[rbp]
  00065	e8 00 00 00 00	 call	 _ZERO_MEMORY_BYTE

; 100  :         nh.IS_EVEN = TRUE;

  0006a	8b 45 18	 mov	 eax, DWORD PTR nh$[rbp+8]
  0006d	83 c8 04	 or	 eax, 4
  00070	89 45 18	 mov	 DWORD PTR nh$[rbp+8], eax

; 101  :         if (!handle->FLAGS.IS_EVEN)

  00073	48 8b 45 78	 mov	 rax, QWORD PTR handle$[rbp]
  00077	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0007a	c1 e8 02	 shr	 eax, 2
  0007d	83 e0 01	 and	 eax, 1
  00080	85 c0		 test	 eax, eax
  00082	75 07		 jne	 SHORT $LN3@SelfCheck

; 102  :             return (FALSE);

  00084	33 c0		 xor	 eax, eax
  00086	e9 85 00 00 00	 jmp	 $LN1@SelfCheck
$LN3@SelfCheck:

; 103  : 
; 104  :         _ZERO_MEMORY_BYTE(&nh, sizeof(nh));

  0008b	ba 50 00 00 00	 mov	 edx, 80			; 00000050H
  00090	48 8d 4d 10	 lea	 rcx, QWORD PTR nh$[rbp]
  00094	e8 00 00 00 00	 call	 _ZERO_MEMORY_BYTE

; 105  :         nh.IS_ONE = TRUE;

  00099	8b 45 18	 mov	 eax, DWORD PTR nh$[rbp+8]
  0009c	83 c8 02	 or	 eax, 2
  0009f	89 45 18	 mov	 DWORD PTR nh$[rbp+8], eax

; 106  :         if (!handle->FLAGS.IS_ONE)

  000a2	48 8b 45 78	 mov	 rax, QWORD PTR handle$[rbp]
  000a6	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000a9	d1 e8		 shr	 eax, 1
  000ab	83 e0 01	 and	 eax, 1
  000ae	85 c0		 test	 eax, eax
  000b0	75 04		 jne	 SHORT $LN4@SelfCheck

; 107  :             return (FALSE);

  000b2	33 c0		 xor	 eax, eax
  000b4	eb 5a		 jmp	 SHORT $LN1@SelfCheck
$LN4@SelfCheck:

; 108  : 
; 109  :         _ZERO_MEMORY_BYTE(&nh, sizeof(nh));

  000b6	ba 50 00 00 00	 mov	 edx, 80			; 00000050H
  000bb	48 8d 4d 10	 lea	 rcx, QWORD PTR nh$[rbp]
  000bf	e8 00 00 00 00	 call	 _ZERO_MEMORY_BYTE

; 110  :         nh.IS_POWER_OF_TWO = TRUE;

  000c4	8b 45 18	 mov	 eax, DWORD PTR nh$[rbp+8]
  000c7	83 c8 08	 or	 eax, 8
  000ca	89 45 18	 mov	 DWORD PTR nh$[rbp+8], eax

; 111  :         if (!handle->FLAGS.IS_POWER_OF_TWO)

  000cd	48 8b 45 78	 mov	 rax, QWORD PTR handle$[rbp]
  000d1	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000d4	c1 e8 03	 shr	 eax, 3
  000d7	83 e0 01	 and	 eax, 1
  000da	85 c0		 test	 eax, eax
  000dc	75 04		 jne	 SHORT $LN5@SelfCheck

; 112  :             return (FALSE);

  000de	33 c0		 xor	 eax, eax
  000e0	eb 2e		 jmp	 SHORT $LN1@SelfCheck
$LN5@SelfCheck:

; 113  : 
; 114  :         _ZERO_MEMORY_BYTE(&nh, sizeof(nh));

  000e2	ba 50 00 00 00	 mov	 edx, 80			; 00000050H
  000e7	48 8d 4d 10	 lea	 rcx, QWORD PTR nh$[rbp]
  000eb	e8 00 00 00 00	 call	 _ZERO_MEMORY_BYTE

; 115  :         nh.IS_ZERO = TRUE;

  000f0	8b 45 18	 mov	 eax, DWORD PTR nh$[rbp+8]
  000f3	83 c8 01	 or	 eax, 1
  000f6	89 45 18	 mov	 DWORD PTR nh$[rbp+8], eax

; 116  :         if (!handle->FLAGS.IS_ZERO)

  000f9	48 8b 45 78	 mov	 rax, QWORD PTR handle$[rbp]
  000fd	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00100	83 e0 01	 and	 eax, 1
  00103	85 c0		 test	 eax, eax
  00105	75 04		 jne	 SHORT $LN6@SelfCheck

; 117  :             return (FALSE);

  00107	33 c0		 xor	 eax, eax
  00109	eb 05		 jmp	 SHORT $LN1@SelfCheck
$LN6@SelfCheck:

; 118  : 
; 119  :         return(TRUE);

  0010b	b8 01 00 00 00	 mov	 eax, 1
$LN1@SelfCheck:

; 120  :     }

  00110	48 8b f8	 mov	 rdi, rax
  00113	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00117	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ$rtcFrameData
  0011e	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00123	48 8b c7	 mov	 rax, rdi
  00126	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  0012d	5f		 pop	 rdi
  0012e	5d		 pop	 rbp
  0012f	c3		 ret	 0
?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ ENDP	; Palmtree::Math::Core::Internal::SelfCheck
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ZERO_MEMORY_BYTE
_TEXT	SEGMENT
d$ = 224
count$ = 232
_ZERO_MEMORY_BYTE PROC					; COMDAT

; 74   :         {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CA3E54E_pmc_inline_func@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 75   :             __stosb((unsigned char*)d, 0, count);

  0003b	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR d$[rbp]
  00042	33 c0		 xor	 eax, eax
  00044	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR count$[rbp]
  0004b	f3 aa		 rep stosb

; 76   :         }

  0004d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
_ZERO_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
;	COMDAT ?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z
_TEXT	SEGMENT
value$5 = 8
value$6 = 40
__$ArrayPad$ = 248
key$ = 288
value_buffer$ = 296
value_buffer_size$ = 304
count$ = 312
?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z PROC ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings, COMDAT

; 44   :     {

$LN11:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6BB7AB7E_pmc_initialize@cpp
  00051	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 45   :         if (lstrcmpW(key, L"COMPILER") == 0)

  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@IAEPHGOI@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR@
  0005d	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR key$[rbp]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcmpW
  0006a	85 c0		 test	 eax, eax
  0006c	75 50		 jne	 SHORT $LN2@PMC_GetCon

; 46   :         {
; 47   : #ifdef _MSC_VER
; 48   :             const wchar_t value[] = L"MSC";

  0006e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@
  00075	48 89 45 08	 mov	 QWORD PTR value$5[rbp], rax

; 49   : #elif defined(__GNUC__)
; 50   :             const wchar_t value[] = L"GNUC";
; 51   : #else
; 52   : #error unknwon compiler
; 53   : #endif
; 54   :             if (value_buffer != nullptr)

  00079	48 83 bd 28 01
	00 00 00	 cmp	 QWORD PTR value_buffer$[rbp], 0
  00081	74 28		 je	 SHORT $LN4@PMC_GetCon

; 55   :             {
; 56   :                 if (value_buffer_size < countof(value))

  00083	48 63 85 30 01
	00 00		 movsxd	 rax, DWORD PTR value_buffer_size$[rbp]
  0008a	48 83 f8 04	 cmp	 rax, 4
  0008e	73 0a		 jae	 SHORT $LN5@PMC_GetCon

; 57   :                     return (PMC_STATUS_INSUFFICIENT_BUFFER);

  00090	b8 f8 ff ff ff	 mov	 eax, -8
  00095	e9 9b 00 00 00	 jmp	 $LN1@PMC_GetCon
$LN5@PMC_GetCon:

; 58   :                 lstrcpyW(value_buffer, value);

  0009a	48 8d 55 08	 lea	 rdx, QWORD PTR value$5[rbp]
  0009e	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR value_buffer$[rbp]
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
$LN4@PMC_GetCon:

; 59   :             }
; 60   :             *count = countof(value);

  000ab	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR count$[rbp]
  000b2	c7 00 04 00 00
	00		 mov	 DWORD PTR [rax], 4

; 61   :             return (PMC_STATUS_OK);

  000b8	33 c0		 xor	 eax, eax
  000ba	eb 79		 jmp	 SHORT $LN1@PMC_GetCon
  000bc	eb 77		 jmp	 SHORT $LN3@PMC_GetCon
$LN2@PMC_GetCon:

; 62   :         }
; 63   :         else if (lstrcmpW(key, L"PLATFORM") == 0)

  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@CNHMMALG@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM@
  000c5	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR key$[rbp]
  000cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcmpW
  000d2	85 c0		 test	 eax, eax
  000d4	75 4d		 jne	 SHORT $LN6@PMC_GetCon

; 64   :         {
; 65   : #ifdef _M_IX86
; 66   :             const wchar_t value[] = L"x86";
; 67   : #elif defined(_M_X64)
; 68   :             const wchar_t value[] = L"x64";

  000d6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ??_C@_17EIACCBPF@?$AAx?$AA6?$AA4@
  000dd	48 89 45 28	 mov	 QWORD PTR value$6[rbp], rax

; 69   : #else
; 70   : #error unknwon compiler
; 71   : #endif
; 72   :             if (value_buffer != nullptr)

  000e1	48 83 bd 28 01
	00 00 00	 cmp	 QWORD PTR value_buffer$[rbp], 0
  000e9	74 25		 je	 SHORT $LN8@PMC_GetCon

; 73   :             {
; 74   :                 if (value_buffer_size < countof(value))

  000eb	48 63 85 30 01
	00 00		 movsxd	 rax, DWORD PTR value_buffer_size$[rbp]
  000f2	48 83 f8 04	 cmp	 rax, 4
  000f6	73 07		 jae	 SHORT $LN9@PMC_GetCon

; 75   :                     return (PMC_STATUS_INSUFFICIENT_BUFFER);

  000f8	b8 f8 ff ff ff	 mov	 eax, -8
  000fd	eb 36		 jmp	 SHORT $LN1@PMC_GetCon
$LN9@PMC_GetCon:

; 76   :                 lstrcpyW(value_buffer, value);

  000ff	48 8d 55 28	 lea	 rdx, QWORD PTR value$6[rbp]
  00103	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR value_buffer$[rbp]
  0010a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
$LN8@PMC_GetCon:

; 77   :             }
; 78   :             *count = countof(value);

  00110	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR count$[rbp]
  00117	c7 00 04 00 00
	00		 mov	 DWORD PTR [rax], 4

; 79   :             return (PMC_STATUS_OK);

  0011d	33 c0		 xor	 eax, eax
  0011f	eb 14		 jmp	 SHORT $LN1@PMC_GetCon

; 80   :         }
; 81   :         else

  00121	eb 12		 jmp	 SHORT $LN7@PMC_GetCon
$LN6@PMC_GetCon:

; 82   :         {
; 83   :             *count = -1;

  00123	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR count$[rbp]
  0012a	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [rax], -1

; 84   :             return (PMC_STATUS_ARGUMENT_ERROR);

  00130	b8 ff ff ff ff	 mov	 eax, -1
$LN7@PMC_GetCon:
$LN3@PMC_GetCon:
$LN1@PMC_GetCon:

; 85   :         }
; 86   :     }

  00135	48 8b f8	 mov	 rdi, rax
  00138	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0013c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z$rtcFrameData
  00143	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00148	48 8b c7	 mov	 rax, rdi
  0014b	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00152	48 33 cd	 xor	 rcx, rbp
  00155	e8 00 00 00 00	 call	 __security_check_cookie
  0015a	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00161	5f		 pop	 rdi
  00162	5d		 pop	 rbp
  00163	c3		 ret	 0
?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
;	COMDAT PMC_UINT_Initialize
_TEXT	SEGMENT
feature$4 = 4
config$ = 256
PMC_UINT_Initialize PROC				; COMDAT

; 123  :     {

$LN23:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6BB7AB7E_pmc_initialize@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 124  :         if (!initialized)

  00036	0f be 05 00 00
	00 00		 movsx	 eax, BYTE PTR ?initialized@Internal@Core@Math@Palmtree@@3DA
  0003d	85 c0		 test	 eax, eax
  0003f	0f 85 38 06 00
	00		 jne	 $LN2@PMC_UINT_I

; 125  :         {
; 126  :             if (!SelfCheck())

  00045	e8 00 00 00 00	 call	 ?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ ; Palmtree::Math::Core::Internal::SelfCheck
  0004a	85 c0		 test	 eax, eax
  0004c	75 07		 jne	 SHORT $LN3@PMC_UINT_I

; 127  :                 return (nullptr);

  0004e	33 c0		 xor	 eax, eax
  00050	e9 2f 06 00 00	 jmp	 $LN1@PMC_UINT_I
$LN3@PMC_UINT_I:

; 128  : 
; 129  :             PROCESSOR_FEATURES feature;
; 130  :             GetCPUInfo(&feature);

  00055	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  00059	e8 00 00 00 00	 call	 ?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::GetCPUInfo

; 131  :             configuration_info = *config;

  0005e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR config$[rbp]
  00065	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00068	88 05 00 00 00
	00		 mov	 BYTE PTR ?configuration_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_CONFIGURATION_INFO@1234@A, al ; Palmtree::Math::Core::Internal::configuration_info

; 132  :             if (Initialize_Memory(&feature) != PMC_STATUS_OK)

  0006e	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  00072	e8 00 00 00 00	 call	 ?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Memory
  00077	85 c0		 test	 eax, eax
  00079	74 07		 je	 SHORT $LN4@PMC_UINT_I

; 133  :                 return (nullptr);

  0007b	33 c0		 xor	 eax, eax
  0007d	e9 02 06 00 00	 jmp	 $LN1@PMC_UINT_I
$LN4@PMC_UINT_I:

; 134  :             if (Initialize_From(&feature) != PMC_STATUS_OK)

  00082	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  00086	e8 00 00 00 00	 call	 ?Initialize_From@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_From
  0008b	85 c0		 test	 eax, eax
  0008d	74 07		 je	 SHORT $LN5@PMC_UINT_I

; 135  :                 return (nullptr);

  0008f	33 c0		 xor	 eax, eax
  00091	e9 ee 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN5@PMC_UINT_I:

; 136  :             if (Initialize_To(&feature) != PMC_STATUS_OK)

  00096	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  0009a	e8 00 00 00 00	 call	 ?Initialize_To@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_To
  0009f	85 c0		 test	 eax, eax
  000a1	74 07		 je	 SHORT $LN6@PMC_UINT_I

; 137  :                 return (nullptr);

  000a3	33 c0		 xor	 eax, eax
  000a5	e9 da 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN6@PMC_UINT_I:

; 138  :             if (Initialize_Add(&feature) != PMC_STATUS_OK)

  000aa	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  000ae	e8 00 00 00 00	 call	 ?Initialize_Add@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Add
  000b3	85 c0		 test	 eax, eax
  000b5	74 07		 je	 SHORT $LN7@PMC_UINT_I

; 139  :                 return (nullptr);

  000b7	33 c0		 xor	 eax, eax
  000b9	e9 c6 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN7@PMC_UINT_I:

; 140  :             if (Initialize_Subtruct(&feature) != PMC_STATUS_OK)

  000be	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  000c2	e8 00 00 00 00	 call	 ?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Subtruct
  000c7	85 c0		 test	 eax, eax
  000c9	74 07		 je	 SHORT $LN8@PMC_UINT_I

; 141  :                 return (nullptr);

  000cb	33 c0		 xor	 eax, eax
  000cd	e9 b2 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN8@PMC_UINT_I:

; 142  :             if (Initialize_Multiply(&feature) != PMC_STATUS_OK)

  000d2	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  000d6	e8 00 00 00 00	 call	 ?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Multiply
  000db	85 c0		 test	 eax, eax
  000dd	74 07		 je	 SHORT $LN9@PMC_UINT_I

; 143  :                 return (nullptr);

  000df	33 c0		 xor	 eax, eax
  000e1	e9 9e 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN9@PMC_UINT_I:

; 144  :             if (Initialize_DivRem(&feature) != PMC_STATUS_OK)

  000e6	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  000ea	e8 00 00 00 00	 call	 ?Initialize_DivRem@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_DivRem
  000ef	85 c0		 test	 eax, eax
  000f1	74 07		 je	 SHORT $LN10@PMC_UINT_I

; 145  :                 return (nullptr);

  000f3	33 c0		 xor	 eax, eax
  000f5	e9 8a 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN10@PMC_UINT_I:

; 146  :             if (Initialize_Shift(&feature) != PMC_STATUS_OK)

  000fa	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  000fe	e8 00 00 00 00	 call	 ?Initialize_Shift@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Shift
  00103	85 c0		 test	 eax, eax
  00105	74 07		 je	 SHORT $LN11@PMC_UINT_I

; 147  :                 return (nullptr);

  00107	33 c0		 xor	 eax, eax
  00109	e9 76 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN11@PMC_UINT_I:

; 148  :             if (Initialize_BitwiseAnd(&feature) != PMC_STATUS_OK)

  0010e	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  00112	e8 00 00 00 00	 call	 ?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_BitwiseAnd
  00117	85 c0		 test	 eax, eax
  00119	74 07		 je	 SHORT $LN12@PMC_UINT_I

; 149  :                 return (nullptr);

  0011b	33 c0		 xor	 eax, eax
  0011d	e9 62 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN12@PMC_UINT_I:

; 150  :             if (Initialize_BitwiseOr(&feature) != PMC_STATUS_OK)

  00122	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  00126	e8 00 00 00 00	 call	 ?Initialize_BitwiseOr@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_BitwiseOr
  0012b	85 c0		 test	 eax, eax
  0012d	74 07		 je	 SHORT $LN13@PMC_UINT_I

; 151  :                 return (nullptr);

  0012f	33 c0		 xor	 eax, eax
  00131	e9 4e 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN13@PMC_UINT_I:

; 152  :             if (Initialize_ExclusiveOr(&feature) != PMC_STATUS_OK)

  00136	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  0013a	e8 00 00 00 00	 call	 ?Initialize_ExclusiveOr@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_ExclusiveOr
  0013f	85 c0		 test	 eax, eax
  00141	74 07		 je	 SHORT $LN14@PMC_UINT_I

; 153  :                 return (nullptr);

  00143	33 c0		 xor	 eax, eax
  00145	e9 3a 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN14@PMC_UINT_I:

; 154  :             if (Initialize_Compare(&feature) != PMC_STATUS_OK)

  0014a	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  0014e	e8 00 00 00 00	 call	 ?Initialize_Compare@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Compare
  00153	85 c0		 test	 eax, eax
  00155	74 07		 je	 SHORT $LN15@PMC_UINT_I

; 155  :                 return (nullptr);

  00157	33 c0		 xor	 eax, eax
  00159	e9 26 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN15@PMC_UINT_I:

; 156  :             if (Initialize_Equals(&feature) != PMC_STATUS_OK)

  0015e	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  00162	e8 00 00 00 00	 call	 ?Initialize_Equals@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Equals
  00167	85 c0		 test	 eax, eax
  00169	74 07		 je	 SHORT $LN16@PMC_UINT_I

; 157  :                 return (nullptr);

  0016b	33 c0		 xor	 eax, eax
  0016d	e9 12 05 00 00	 jmp	 $LN1@PMC_UINT_I
$LN16@PMC_UINT_I:

; 158  :             if (Initialize_ToString(&feature) != PMC_STATUS_OK)

  00172	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  00176	e8 00 00 00 00	 call	 ?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_ToString
  0017b	85 c0		 test	 eax, eax
  0017d	74 07		 je	 SHORT $LN17@PMC_UINT_I

; 159  :                 return (nullptr);

  0017f	33 c0		 xor	 eax, eax
  00181	e9 fe 04 00 00	 jmp	 $LN1@PMC_UINT_I
$LN17@PMC_UINT_I:

; 160  :             if (Initialize_Parse(&feature) != PMC_STATUS_OK)

  00186	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  0018a	e8 00 00 00 00	 call	 ?Initialize_Parse@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Parse
  0018f	85 c0		 test	 eax, eax
  00191	74 07		 je	 SHORT $LN18@PMC_UINT_I

; 161  :                 return (nullptr);

  00193	33 c0		 xor	 eax, eax
  00195	e9 ea 04 00 00	 jmp	 $LN1@PMC_UINT_I
$LN18@PMC_UINT_I:

; 162  :             if (Initialize_GreatestCommonDivisor(&feature) != PMC_STATUS_OK)

  0019a	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  0019e	e8 00 00 00 00	 call	 ?Initialize_GreatestCommonDivisor@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_GreatestCommonDivisor
  001a3	85 c0		 test	 eax, eax
  001a5	74 07		 je	 SHORT $LN19@PMC_UINT_I

; 163  :                 return (nullptr);

  001a7	33 c0		 xor	 eax, eax
  001a9	e9 d6 04 00 00	 jmp	 $LN1@PMC_UINT_I
$LN19@PMC_UINT_I:

; 164  :             if (Initialize_Pow(&feature) != PMC_STATUS_OK)

  001ae	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  001b2	e8 00 00 00 00	 call	 ?Initialize_Pow@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Pow
  001b7	85 c0		 test	 eax, eax
  001b9	74 07		 je	 SHORT $LN20@PMC_UINT_I

; 165  :                 return (nullptr);

  001bb	33 c0		 xor	 eax, eax
  001bd	e9 c2 04 00 00	 jmp	 $LN1@PMC_UINT_I
$LN20@PMC_UINT_I:

; 166  :             if (Initialize_ModPow(&feature) != PMC_STATUS_OK)

  001c2	48 8d 4d 04	 lea	 rcx, QWORD PTR feature$4[rbp]
  001c6	e8 00 00 00 00	 call	 ?Initialize_ModPow@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_ModPow
  001cb	85 c0		 test	 eax, eax
  001cd	74 07		 je	 SHORT $LN21@PMC_UINT_I

; 167  :                 return (nullptr);

  001cf	33 c0		 xor	 eax, eax
  001d1	e9 ae 04 00 00	 jmp	 $LN1@PMC_UINT_I
$LN21@PMC_UINT_I:

; 168  : 
; 169  :             entry_points.PROCESSOR_FEATURE_POPCNT = feature.PROCESSOR_FEATURE_POPCNT;

  001d6	8b 45 04	 mov	 eax, DWORD PTR feature$4[rbp]
  001d9	83 e0 01	 and	 eax, 1
  001dc	83 e0 01	 and	 eax, 1
  001df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A
  001e5	83 e1 fe	 and	 ecx, -2			; fffffffeH
  001e8	0b c8		 or	 ecx, eax
  001ea	8b c1		 mov	 eax, ecx
  001ec	89 05 00 00 00
	00		 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A, eax

; 170  :             entry_points.PROCESSOR_FEATURE_ADX = feature.PROCESSOR_FEATURE_ADX;

  001f2	8b 45 04	 mov	 eax, DWORD PTR feature$4[rbp]
  001f5	d1 e8		 shr	 eax, 1
  001f7	83 e0 01	 and	 eax, 1
  001fa	83 e0 01	 and	 eax, 1
  001fd	d1 e0		 shl	 eax, 1
  001ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A
  00205	83 e1 fd	 and	 ecx, -3			; fffffffdH
  00208	0b c8		 or	 ecx, eax
  0020a	8b c1		 mov	 eax, ecx
  0020c	89 05 00 00 00
	00		 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A, eax

; 171  :             entry_points.PROCESSOR_FEATURE_BMI1 = feature.PROCESSOR_FEATURE_BMI1;

  00212	8b 45 04	 mov	 eax, DWORD PTR feature$4[rbp]
  00215	c1 e8 02	 shr	 eax, 2
  00218	83 e0 01	 and	 eax, 1
  0021b	83 e0 01	 and	 eax, 1
  0021e	c1 e0 02	 shl	 eax, 2
  00221	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A
  00227	83 e1 fb	 and	 ecx, -5			; fffffffbH
  0022a	0b c8		 or	 ecx, eax
  0022c	8b c1		 mov	 eax, ecx
  0022e	89 05 00 00 00
	00		 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A, eax

; 172  :             entry_points.PROCESSOR_FEATURE_BMI2 = feature.PROCESSOR_FEATURE_BMI2;

  00234	8b 45 04	 mov	 eax, DWORD PTR feature$4[rbp]
  00237	c1 e8 03	 shr	 eax, 3
  0023a	83 e0 01	 and	 eax, 1
  0023d	83 e0 01	 and	 eax, 1
  00240	c1 e0 03	 shl	 eax, 3
  00243	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A
  00249	83 e1 f7	 and	 ecx, -9			; fffffff7H
  0024c	0b c8		 or	 ecx, eax
  0024e	8b c1		 mov	 eax, ecx
  00250	89 05 00 00 00
	00		 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A, eax

; 173  :             entry_points.PROCESSOR_FEATURE_ABM = feature.PROCESSOR_FEATURE_ABM;

  00256	8b 45 04	 mov	 eax, DWORD PTR feature$4[rbp]
  00259	c1 e8 04	 shr	 eax, 4
  0025c	83 e0 01	 and	 eax, 1
  0025f	83 e0 01	 and	 eax, 1
  00262	c1 e0 04	 shl	 eax, 4
  00265	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A
  0026b	83 e1 ef	 and	 ecx, -17		; ffffffefH
  0026e	0b c8		 or	 ecx, eax
  00270	8b c1		 mov	 eax, ecx
  00272	89 05 00 00 00
	00		 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A, eax

; 174  :             entry_points.GetConfigurationSettings = PMC_GetConfigurationSettings;

  00278	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WHPEAH@Z ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
  0027f	48 89 05 08 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+8, rax

; 175  :             entry_points.GetStatisticsInfo = PMC_GetStatisticsInfo;

  00286	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GetStatisticsInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_STATISTICS_INFO@1234@@Z ; Palmtree::Math::Core::Internal::PMC_GetStatisticsInfo
  0028d	48 89 05 10 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+16, rax

; 176  :             entry_points.From_I = PMC_From_I;

  00294	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_From_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_From_I
  0029b	48 89 05 18 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+24, rax

; 177  :             entry_points.From_L = PMC_From_L;

  002a2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_From_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_From_L
  002a9	48 89 05 20 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+32, rax

; 178  :             entry_points.Dispose = PMC_Dispose;

  002b0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Dispose@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Dispose
  002b7	48 89 05 28 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+40, rax

; 179  :             entry_points.To_X_I = PMC_To_X_I;

  002be	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_To_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_To_X_I
  002c5	48 89 05 58 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+88, rax

; 180  :             entry_points.To_X_L = PMC_To_X_L;

  002cc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_To_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_To_X_L
  002d3	48 89 05 60 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+96, rax

; 181  :             entry_points.FromByteArray = PMC_FromByteArray;

  002da	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_FromByteArray@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEBE_K@Z ; Palmtree::Math::Core::Internal::PMC_FromByteArray
  002e1	48 89 05 38 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+56, rax

; 182  :             entry_points.ToByteArray = PMC_ToByteArray;

  002e8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ToByteArray@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEAE_K@Z ; Palmtree::Math::Core::Internal::PMC_ToByteArray
  002ef	48 89 05 40 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+64, rax

; 183  :             entry_points.InitializeNumberFormatInfo = PMC_InitializeNumberFormatInfo;

  002f6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo
  002fd	48 89 05 68 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+104, rax

; 184  :             entry_points.ToString = PMC_ToString;

  00304	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ; Palmtree::Math::Core::Internal::PMC_ToString
  0030b	48 89 05 70 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+112, rax

; 185  :             entry_points.TryParse = PMC_TryParse;

  00312	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_TryParse@Internal@Core@Math@Palmtree@@YAHPEB_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEAPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z ; Palmtree::Math::Core::Internal::PMC_TryParse
  00319	48 89 05 78 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+120, rax

; 186  :             entry_points.Add_I_X = PMC_Add_I_X;

  00320	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Add_I_X
  00327	48 89 05 80 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+128, rax

; 187  :             entry_points.Add_L_X = PMC_Add_L_X;

  0032e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Add_L_X
  00335	48 89 05 88 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+136, rax

; 188  :             entry_points.Add_X_I = PMC_Add_X_I;

  0033c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_I
  00343	48 89 05 90 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+144, rax

; 189  :             entry_points.Add_X_L = PMC_Add_X_L;

  0034a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_L
  00351	48 89 05 98 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+152, rax

; 190  :             entry_points.Add_X_X = PMC_Add_X_X;

  00358	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_X
  0035f	48 89 05 a0 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+160, rax

; 191  :             entry_points.Subtruct_I_X = PMC_Subtruct_I_X;

  00366	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
  0036d	48 89 05 a8 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+168, rax

; 192  :             entry_points.Subtruct_L_X = PMC_Subtruct_L_X;

  00374	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
  0037b	48 89 05 b0 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+176, rax

; 193  :             entry_points.Subtruct_X_I = PMC_Subtruct_X_I;

  00382	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
  00389	48 89 05 b8 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+184, rax

; 194  :             entry_points.Subtruct_X_L = PMC_Subtruct_X_L;

  00390	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
  00397	48 89 05 c0 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+192, rax

; 195  :             entry_points.Subtruct_X_X = PMC_Subtruct_X_X;

  0039e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
  003a5	48 89 05 c8 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+200, rax

; 196  :             entry_points.Multiply_I_X = PMC_Multiply_I_X;

  003ac	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
  003b3	48 89 05 d0 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+208, rax

; 197  :             entry_points.Multiply_L_X = PMC_Multiply_L_X;

  003ba	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
  003c1	48 89 05 d8 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+216, rax

; 198  :             entry_points.Multiply_X_I = PMC_Multiply_X_I;

  003c8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
  003cf	48 89 05 e0 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+224, rax

; 199  :             entry_points.Multiply_X_L = PMC_Multiply_X_L;

  003d6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
  003dd	48 89 05 e8 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+232, rax

; 200  :             entry_points.Multiply_X_X = PMC_Multiply_X_X;

  003e4	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
  003eb	48 89 05 f0 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+240, rax

; 201  :             entry_points.DivRem_I_X = PMC_DivRem_I_X;

  003f2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_I_X
  003f9	48 89 05 f8 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+248, rax

; 202  :             entry_points.DivRem_L_X = PMC_DivRem_L_X;

  00400	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_L_X
  00407	48 89 05 00 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+256, rax

; 203  :             entry_points.DivRem_X_I = PMC_DivRem_X_I;

  0040e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I
  00415	48 89 05 08 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+264, rax

; 204  :             entry_points.DivRem_X_L = PMC_DivRem_X_L;

  0041c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L
  00423	48 89 05 10 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+272, rax

; 205  :             entry_points.DivRem_X_X = PMC_DivRem_X_X;

  0042a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X
  00431	48 89 05 18 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+280, rax

; 206  :             entry_points.RightShift_X_I = PMC_RightShift_X_I;

  00438	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I
  0043f	48 89 05 28 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+296, rax

; 207  :             entry_points.LeftShift_X_I = PMC_LeftShift_X_I;

  00446	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I
  0044d	48 89 05 20 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+288, rax

; 208  :             entry_points.BitwiseAnd_I_X = PMC_BitwiseAnd_I_X;

  00454	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_I_X
  0045b	48 89 05 30 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+304, rax

; 209  :             entry_points.BitwiseAnd_L_X = PMC_BitwiseAnd_L_X;

  00462	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X
  00469	48 89 05 38 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+312, rax

; 210  :             entry_points.BitwiseAnd_X_I = PMC_BitwiseAnd_X_I;

  00470	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_I
  00477	48 89 05 40 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+320, rax

; 211  :             entry_points.BitwiseAnd_X_L = PMC_BitwiseAnd_X_L;

  0047e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L
  00485	48 89 05 48 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+328, rax

; 212  :             entry_points.BitwiseAnd_X_X = PMC_BitwiseAnd_X_X;

  0048c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X
  00493	48 89 05 50 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+336, rax

; 213  :             entry_points.BitwiseOr_I_X = PMC_BitwiseOr_I_X;

  0049a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseOr_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_I_X
  004a1	48 89 05 58 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+344, rax

; 214  :             entry_points.BitwiseOr_L_X = PMC_BitwiseOr_L_X;

  004a8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseOr_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_L_X
  004af	48 89 05 60 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+352, rax

; 215  :             entry_points.BitwiseOr_X_I = PMC_BitwiseOr_X_I;

  004b6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseOr_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_I
  004bd	48 89 05 68 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+360, rax

; 216  :             entry_points.BitwiseOr_X_L = PMC_BitwiseOr_X_L;

  004c4	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseOr_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_L
  004cb	48 89 05 70 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+368, rax

; 217  :             entry_points.BitwiseOr_X_X = PMC_BitwiseOr_X_X;

  004d2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_BitwiseOr_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_X
  004d9	48 89 05 78 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+376, rax

; 218  :             entry_points.ExclusiveOr_I_X = PMC_ExclusiveOr_I_X;

  004e0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ExclusiveOr_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_I_X
  004e7	48 89 05 80 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+384, rax

; 219  :             entry_points.ExclusiveOr_L_X = PMC_ExclusiveOr_L_X;

  004ee	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ExclusiveOr_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_L_X
  004f5	48 89 05 88 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+392, rax

; 220  :             entry_points.ExclusiveOr_X_I = PMC_ExclusiveOr_X_I;

  004fc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ExclusiveOr_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_I
  00503	48 89 05 90 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+400, rax

; 221  :             entry_points.ExclusiveOr_X_L = PMC_ExclusiveOr_X_L;

  0050a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ExclusiveOr_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_L
  00511	48 89 05 98 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+408, rax

; 222  :             entry_points.ExclusiveOr_X_X = PMC_ExclusiveOr_X_X;

  00518	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ExclusiveOr_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_X
  0051f	48 89 05 a0 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+416, rax

; 223  :             entry_points.Compare_I_X = PMC_Compare_I_X;

  00526	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Compare_I_X@Internal@Core@Math@Palmtree@@YAHIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Compare_I_X
  0052d	48 89 05 a8 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+424, rax

; 224  :             entry_points.Compare_L_X = PMC_Compare_L_X;

  00534	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Compare_L_X@Internal@Core@Math@Palmtree@@YAH_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Compare_L_X
  0053b	48 89 05 b0 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+432, rax

; 225  :             entry_points.Compare_X_I = PMC_Compare_X_I;

  00542	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Compare_X_I@Internal@Core@Math@Palmtree@@YAHPEAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_I
  00549	48 89 05 b8 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+440, rax

; 226  :             entry_points.Compare_X_L = PMC_Compare_X_L;

  00550	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Compare_X_L@Internal@Core@Math@Palmtree@@YAHPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_L
  00557	48 89 05 c0 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+448, rax

; 227  :             entry_points.Compare_X_X = PMC_Compare_X_X;

  0055e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Compare_X_X@Internal@Core@Math@Palmtree@@YAHPEAU__tag_PMC_HANDLE_UINT@1234@0@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_X
  00565	48 89 05 c8 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+456, rax

; 228  :             entry_points.Equals_I_X = PMC_Equals_I_X;

  0056c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Equals_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Equals_I_X
  00573	48 89 05 d0 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+464, rax

; 229  :             entry_points.Equals_L_X = PMC_Equals_L_X;

  0057a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Equals_L_X@Internal@Core@Math@Palmtree@@YAI_KPEAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Equals_L_X
  00581	48 89 05 d8 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+472, rax

; 230  :             entry_points.Equals_X_I = PMC_Equals_X_I;

  00588	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Equals_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_I
  0058f	48 89 05 e0 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+480, rax

; 231  :             entry_points.Equals_X_L = PMC_Equals_X_L;

  00596	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Equals_X_L@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_L
  0059d	48 89 05 e8 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+488, rax

; 232  :             entry_points.Equals_X_X = PMC_Equals_X_X;

  005a4	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Equals_X_X@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@0@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_X
  005ab	48 89 05 f0 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+496, rax

; 233  :             entry_points.GreatestCommonDivisor_I_X = PMC_GreatestCommonDivisor_I_X;

  005b2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_I_X
  005b9	48 89 05 f8 01
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+504, rax

; 234  :             entry_points.GreatestCommonDivisor_L_X = PMC_GreatestCommonDivisor_L_X;

  005c0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_L_X
  005c7	48 89 05 00 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+512, rax

; 235  :             entry_points.GreatestCommonDivisor_X_I = PMC_GreatestCommonDivisor_X_I;

  005ce	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I
  005d5	48 89 05 08 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+520, rax

; 236  :             entry_points.GreatestCommonDivisor_X_L = PMC_GreatestCommonDivisor_X_L;

  005dc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L
  005e3	48 89 05 10 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+528, rax

; 237  :             entry_points.GreatestCommonDivisor_X_X = PMC_GreatestCommonDivisor_X_X;

  005ea	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X
  005f1	48 89 05 18 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+536, rax

; 238  :             entry_points.Pow_X_I = PMC_Pow_X_I;

  005f8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Pow_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Pow_X_I
  005ff	48 89 05 20 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+544, rax

; 239  :             entry_points.Pow_X_L = PMC_Pow_X_L;

  00606	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Pow_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Pow_X_L
  0060d	48 89 05 28 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+552, rax

; 240  :             entry_points.ModPow_X_X_X = PMC_ModPow_X_X_X;

  00614	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ModPow_X_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@00@Z ; Palmtree::Math::Core::Internal::PMC_ModPow_X_X_X
  0061b	48 89 05 30 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+560, rax

; 241  :             entry_points.GetConstantValue_I = PMC_GetConstantValue_I;

  00622	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@H@Z ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I
  00629	48 89 05 30 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+48, rax

; 242  :             entry_points.Clone_X = PMC_Clone_X;

  00630	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_Clone_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Clone_X
  00637	48 89 05 48 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+72, rax

; 243  :             entry_points.GetAllocatedMemorySize = PMC_GetAllocatedMemorySize;

  0063e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YA_KXZ ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize
  00645	48 89 05 50 00
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+80, rax

; 244  : 
; 245  :             entry_points.FromByteArrayForSINT = PMC_FromByteArrayForSINT;

  0064c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_FromByteArrayForSINT@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAE_KPEAD@Z ; Palmtree::Math::Core::Internal::PMC_FromByteArrayForSINT
  00653	48 89 05 38 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+568, rax

; 246  :             entry_points.ToByteArrayForSINT = PMC_ToByteArrayForSINT;

  0065a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_ToByteArrayForSINT@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_PMC_HANDLE_UINT@1234@PEAE_K@Z ; Palmtree::Math::Core::Internal::PMC_ToByteArrayForSINT
  00661	48 89 05 40 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+576, rax

; 247  :             entry_points.TryParseForSINT = PMC_TryParseForSINT;

  00668	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?PMC_TryParseForSINT@Internal@Core@Math@Palmtree@@YAHPEB_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEADPEAPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z ; Palmtree::Math::Core::Internal::PMC_TryParseForSINT
  0066f	48 89 05 48 02
	00 00		 mov	 QWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+584, rax

; 248  : 
; 249  :             initialized = 1;

  00676	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?initialized@Internal@Core@Math@Palmtree@@3DA, 1
$LN2@PMC_UINT_I:

; 250  :         }
; 251  : 
; 252  :         return (&entry_points);

  0067d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A
$LN1@PMC_UINT_I:

; 253  :     }

  00684	48 8b f8	 mov	 rdi, rax
  00687	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0068b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:PMC_UINT_Initialize$rtcFrameData
  00692	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00697	48 8b c7	 mov	 rax, rdi
  0069a	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  006a1	5f		 pop	 rdi
  006a2	5d		 pop	 rbp
  006a3	c3		 ret	 0
PMC_UINT_Initialize ENDP
_TEXT	ENDS
END
