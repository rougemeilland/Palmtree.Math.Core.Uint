; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	Initialize_GetPropertyValue
PUBLIC	PMC_GetNumberType_X
EXTRN	CheckNumber:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$PMC_GetNumberType_X DD imagerel $LN12
	DD	imagerel $LN12+116
	DD	imagerel $unwind$PMC_GetNumberType_X
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PMC_GetNumberType_X DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_getnumbertype.c
;	COMDAT PMC_GetNumberType_X
_TEXT	SEGMENT
x$ = 48
o$ = 56
PMC_GetNumberType_X PROC				; COMDAT

; 31   : {

$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 32   :     if (x == NULL)

	test	rcx, rcx
	je	SHORT $LN10@PMC_GetNum

; 33   :         return (PMC_STATUS_ARGUMENT_ERROR);
; 34   :     if (o == NULL)

	test	rdx, rdx
	je	SHORT $LN10@PMC_GetNum

; 36   :     PMC_STATUS_CODE result;
; 37   :     NUMBER_HEADER* nx = (NUMBER_HEADER*)x;
; 38   :     if ((result = CheckNumber(nx)) != PMC_STATUS_OK)

	call	CheckNumber
	test	eax, eax
	jne	SHORT $LN1@PMC_GetNum

; 39   :         return (result);
; 40   :     PMC_NUMBER_TYPE_CODE value = 0;
; 41   :     if (nx->IS_ZERO)

	mov	r8d, DWORD PTR [rbx+40]

; 42   :         value |= 0x01;
; 43   :     if (nx->IS_ONE)

	mov	eax, r8d
	mov	ecx, r8d
	shr	ecx, 1
	and	ecx, 1

; 44   :         value |= 0x02;
; 45   :     if (nx->IS_EVEN)

	mov	edx, ecx
	or	edx, 2
	and	al, 4
	mov	eax, r8d
	cmove	edx, ecx

; 46   :         value |= 0x08;
; 47   :     if (nx->IS_POWER_OF_TWO)

	mov	ecx, edx
	or	ecx, 8
	and	al, 8
	cmove	ecx, edx

; 48   :         value |= 0x10;
; 49   :     *o = value;

	mov	eax, ecx
	or	eax, 16
	and	r8b, 16
	cmove	eax, ecx
	mov	DWORD PTR [rdi], eax

; 50   :     return (PMC_STATUS_OK);

	xor	eax, eax

; 51   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN10@PMC_GetNum:

; 35   :         return (PMC_STATUS_ARGUMENT_ERROR);

	mov	eax, -1
$LN1@PMC_GetNum:

; 51   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
PMC_GetNumberType_X ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_getnumbertype.c
;	COMDAT Initialize_GetPropertyValue
_TEXT	SEGMENT
feature$ = 8
Initialize_GetPropertyValue PROC			; COMDAT

; 55   :     return (PMC_STATUS_OK);

	xor	eax, eax

; 56   : }

	ret	0
Initialize_GetPropertyValue ENDP
_TEXT	ENDS
END
