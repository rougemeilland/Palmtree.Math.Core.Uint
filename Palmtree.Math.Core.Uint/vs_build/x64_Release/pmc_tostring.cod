; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::FormatException::FormatException
PUBLIC	??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::FormatException::FormatException
PUBLIC	??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::FormatException::~FormatException
PUBLIC	??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor'
PUBLIC	??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
PUBLIC	??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
PUBLIC	??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException
PUBLIC	??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor'
PUBLIC	??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
PUBLIC	??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
PUBLIC	??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException
PUBLIC	??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ; Palmtree::Math::Core::Internal::StringReader::PeekChar
PUBLIC	?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ ; Palmtree::Math::Core::Internal::StringReader::Progress
PUBLIC	?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z ; Palmtree::Math::Core::Internal::StringReader::StartsWith
PUBLIC	?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::StringReader::SkipString
PUBLIC	?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar
PUBLIC	?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ ; Palmtree::Math::Core::Internal::ReverseStringReader::Progress
PUBLIC	?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith
PUBLIC	?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringReader::SkipString
PUBLIC	?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
PUBLIC	?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::StringWriter::Write
PUBLIC	?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::StringWriter::GetString
PUBLIC	?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write
PUBLIC	?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write
PUBLIC	?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::ReverseStringWriter::GetString
PUBLIC	?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo
PUBLIC	?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_ToString
PUBLIC	?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo
PUBLIC	?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ; Palmtree::Math::Core::Internal::PMC_ToString
PUBLIC	?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
PUBLIC	?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
PUBLIC	?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString
PUBLIC	?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format
PUBLIC	?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
PUBLIC	?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteZeroValue
PUBLIC	?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteSuffix
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteZeroValue
PUBLIC	?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteSuffix
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteZeroValue
PUBLIC	?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally
PUBLIC	?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteSuffix
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteZeroValue
PUBLIC	?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteSuffix
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteZeroValue
PUBLIC	?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteSuffix
PUBLIC	?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::GetDefaultPrecisionValue
PUBLIC	?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteZeroValue
PUBLIC	?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally
PUBLIC	?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WritePrefix
PUBLIC	?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
PUBLIC	?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteSuffix
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7FormatException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::FormatException::`vftable'
PUBLIC	??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InsufficientBufferException::`vftable'
PUBLIC	??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotSupportedException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	??_7StringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringReader::`vftable'
PUBLIC	_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1FA@CNGEABBJ@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ ; `string'
PUBLIC	??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ ; `string'
PUBLIC	??_C@_1FE@KONPIGEM@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ ; `string'
PUBLIC	??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringReader::`vftable'
PUBLIC	??_C@_1FO@BNHGDLLE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ ; `string'
PUBLIC	??_C@_1GC@GGAPGHKN@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ ; `string'
PUBLIC	??_7StringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringWriter::`vftable'
PUBLIC	_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@ ; `string'
PUBLIC	??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringWriter::`vftable'
PUBLIC	??_7ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`vftable'
PUBLIC	??_7Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`vftable'
PUBLIC	??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@ ; `string'
PUBLIC	??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`vftable'
PUBLIC	??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`vftable'
PUBLIC	??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`vftable'
PUBLIC	??_C@_19NKFEMDNP@?$AA?$CL?$AA0?$AA0?$AA0@	; `string'
PUBLIC	??_C@_19GGGBJDH@?$AA?$CF?$AA0?$AA3?$AAd@	; `string'
PUBLIC	??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`vftable'
PUBLIC	??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`vftable'
PUBLIC	??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`vftable'
PUBLIC	_TI2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::NotSupportedException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1DO@MFGCBHKN@?$PP?$KL?$PP?$LJ?$PP?$LP?$PP?$OA?$PP?x?$AA?$AP?$AAk?$PP?$II?$PP?$IL?$AAT?$AAo?$AAS?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	_TI2?AVFormatException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVFormatException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::FormatException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1BI@BIIKHCEK@?$AA?$CK?$PP?e?$AAn?$PP?x?$AA?$AP?$AA?$AH?$PP?$JK?$AAP?$AAg?$AAY?$AA?$AC@ ; `string'
PUBLIC	_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_13HADAKIJA@?$AAx@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_13JOFGPIOO@?$AA?4@			; `string'
PUBLIC	??_C@_13DEFPDAGF@?$AA?0@			; `string'
PUBLIC	??_C@_13DMCFHHKM@?$AA3@				; `string'
PUBLIC	??_C@_13BMLCKOLB@?$PP?$KE@			; `string'
PUBLIC	??_C@_13IMODFHAA@?$AA?9@			; `string'
PUBLIC	??_C@_13EJFHHPOP@?$AA?$CF@			; `string'
PUBLIC	??_C@_13BGNNJOKC@?$AA0@				; `string'
PUBLIC	??_C@_13KJIIAINM@?$AA?$CL@			; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::FormatException::`RTTI Complete Object Locator'
PUBLIC	??_R3FormatException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InsufficientBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InsufficientBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Complete Object Locator'
PUBLIC	??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NotSupportedException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NotSupportedException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4StringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringReader::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::StringReader `RTTI Type Descriptor'
PUBLIC	??_R3StringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader `RTTI Type Descriptor'
PUBLIC	??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReverseStringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReverseStringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::StringWriter `RTTI Type Descriptor'
PUBLIC	??_R3StringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter `RTTI Type Descriptor'
PUBLIC	??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReverseStringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReverseStringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter `RTTI Type Descriptor'
PUBLIC	??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter `RTTI Type Descriptor'
PUBLIC	??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP `RTTI Type Descriptor'
PUBLIC	??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_purecall:PROC
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp_lstrcpyW:PROC
EXTRN	__imp_lstrlenW:PROC
EXTRN	__imp_wsprintfW:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::FormatException::`vector deleting destructor'
EXTRN	??_EInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::`vector deleting destructor'
EXTRN	??_ENotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::NotSupportedException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::From_I_Imp
EXTRN	?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z:PROC ; Palmtree::Math::Core::Internal::DivRem_X_1W
EXTRN	?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_X_Imp
EXTRN	?PMC_Pow_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Pow_X_L_Imp
EXTRN	?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
EXTRN	?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock
EXTRN	?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
EXTRN	?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
EXTRN	?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
EXTRN	?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_W@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	_DIVREM_UNIT:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A:BYTE ; Palmtree::Math::Core::Internal::statistics_info
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
?default_number_format_option@Internal@Core@Math@Palmtree@@3U__tag_PMC_NUMBER_FORMAT_INFO@1234@A DB 01e4H DUP (?) ; Palmtree::Math::Core::Internal::default_number_format_option
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+38
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+78
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD imagerel $LN8
	DD	imagerel $LN8+70
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel $LN8
	DD	imagerel $LN8+66
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN8
	DD	imagerel $LN8+77
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+53
	DD	imagerel $unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+92
	DD	imagerel $unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN11
	DD	imagerel $LN11+84
	DD	imagerel $unwind$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN11
	DD	imagerel $LN11+84
	DD	imagerel $unwind$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN11
	DD	imagerel $LN11+84
	DD	imagerel $unwind$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ DD imagerel $LN4
	DD	imagerel $LN4+44
	DD	imagerel $unwind$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+69
	DD	imagerel $unwind$?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN17
	DD	imagerel $LN17+121
	DD	imagerel $unwind$?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN6
	DD	imagerel $LN6+75
	DD	imagerel $unwind$??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+69
	DD	imagerel $unwind$?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN18
	DD	imagerel $LN18+129
	DD	imagerel $unwind$?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD imagerel $LN8
	DD	imagerel $LN8+85
	DD	imagerel $unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z DD imagerel $LN11
	DD	imagerel $LN11+66
	DD	imagerel $unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN10
	DD	imagerel $LN10+65
	DD	imagerel $unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z DD imagerel $LN16
	DD	imagerel $LN16+116
	DD	imagerel $unwind$??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD imagerel $LN7
	DD	imagerel $LN7+69
	DD	imagerel $unwind$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN11
	DD	imagerel $LN11+85
	DD	imagerel $unwind$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z DD imagerel $LN4
	DD	imagerel $LN4+348
	DD	imagerel $unwind$?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD imagerel $LN4
	DD	imagerel $LN4+23
	DD	imagerel $unwind$?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z DD imagerel $LN8
	DD	imagerel $LN8+160
	DD	imagerel $unwind$?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_COPY_MEMORY_UNIT DD imagerel _COPY_MEMORY_UNIT
	DD	imagerel _COPY_MEMORY_UNIT+33
	DD	imagerel $unwind$_COPY_MEMORY_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
	DD	imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z+218
	DD	imagerel $unwind$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
	DD	imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z+136
	DD	imagerel $unwind$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD imagerel $LN11
	DD	imagerel $LN11+165
	DD	imagerel $unwind$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD imagerel $LN10
	DD	imagerel $LN10+64
	DD	imagerel $unwind$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel $LN13
	DD	imagerel $LN13+244
	DD	imagerel $unwind$?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel $LN74
	DD	imagerel $LN74+598
	DD	imagerel $unwind$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD imagerel $LN27
	DD	imagerel $LN27+290
	DD	imagerel $unwind$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z DD imagerel $LN43
	DD	imagerel $LN43+90
	DD	imagerel $unwind$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z DD imagerel $LN43+90
	DD	imagerel $LN43+176
	DD	imagerel $chain$0$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z DD imagerel $LN43+176
	DD	imagerel $LN43+297
	DD	imagerel $chain$1$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z DD imagerel $LN18
	DD	imagerel $LN18+81
	DD	imagerel $unwind$?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z DD imagerel $LN70
	DD	imagerel $LN70+837
	DD	imagerel $unwind$?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN13
	DD	imagerel $LN13+95
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN36
	DD	imagerel $LN36+480
	DD	imagerel $unwind$?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN65
	DD	imagerel $LN65+633
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN36
	DD	imagerel $LN36+464
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN14
	DD	imagerel $LN14+64
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN14
	DD	imagerel $LN14+111
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN14
	DD	imagerel $LN14+50
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN14+50
	DD	imagerel $LN14+91
	DD	imagerel $chain$0$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN14+91
	DD	imagerel $LN14+130
	DD	imagerel $chain$1$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel $LN33
	DD	imagerel $LN33+451
	DD	imagerel $unwind$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN20
	DD	imagerel $LN20+141
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN20+141
	DD	imagerel $LN20+232
	DD	imagerel $chain$0$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN20+232
	DD	imagerel $LN20+335
	DD	imagerel $chain$1$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN13
	DD	imagerel $LN13+95
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN13
	DD	imagerel $LN13+95
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN13
	DD	imagerel $LN13+95
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN15
	DD	imagerel $LN15+117
	DD	imagerel $unwind$?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN65
	DD	imagerel $LN65+633
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN14
	DD	imagerel $LN14+141
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD imagerel $LN13
	DD	imagerel $LN13+95
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel $LN6
	DD	imagerel $LN6+115
	DD	imagerel $unwind$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN30
	DD	imagerel $LN30+400
	DD	imagerel $unwind$?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel $LN65
	DD	imagerel $LN65+633
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD imagerel $LN31
	DD	imagerel $LN31+344
	DD	imagerel $unwind$?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+164
	DD	imagerel $unwind$?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+164
	DD	imagerel $unwind$?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+160
	DD	imagerel $unwind$?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+164
	DD	imagerel $unwind$?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+164
	DD	imagerel $unwind$?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+164
	DD	imagerel $unwind$?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z DD imagerel ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z
	DD	imagerel ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z+825
	DD	imagerel $unwind$?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+717
	DD	imagerel $unwind$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	imagerel ?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+39
	DD	imagerel $unwind$?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z DD imagerel ?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
	DD	imagerel ?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z+1050
	DD	imagerel $unwind$?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtr'
	DB	'ee@@', 00H
data$r	ENDS
;	COMDAT ??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVThousandSeparatedStringWriter@DecimalFromatter@Inter'
	DB	'nal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReverseStringWriter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ReverseStringWriter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ReverseStringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ReverseStringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReverseStringWriter@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ReverseStringWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVReverseStringWriter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ReverseStringWriter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2StringWriter@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@StringWriter@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3StringWriter@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::StringWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2StringWriter@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::StringWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVStringWriter@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::StringWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVStringWriter@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3StringWriter@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReverseStringReader@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ReverseStringReader@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ReverseStringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ReverseStringReader@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReverseStringReader@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ReverseStringReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVReverseStringReader@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ReverseStringReader@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2StringReader@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@StringReader@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::StringReader::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3StringReader@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::StringReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2StringReader@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::StringReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVStringReader@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4StringReader@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4StringReader@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::StringReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVStringReader@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3StringReader@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4StringReader@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NotSupportedException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2NotSupportedException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@NotSupportedException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2NotSupportedException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::NotSupportedException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3NotSupportedException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InsufficientBufferException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InsufficientBufferException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InsufficientBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InsufficientBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InsufficientBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InsufficientBufferException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FormatException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2FormatException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@FormatException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::FormatException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3FormatException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::FormatException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2FormatException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4FormatException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4FormatException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::FormatException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3FormatException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4FormatException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 01H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_13KJIIAINM@?$AA?$CL@
CONST	SEGMENT
??_C@_13KJIIAINM@?$AA?$CL@ DB '+', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13BGNNJOKC@?$AA0@
CONST	SEGMENT
??_C@_13BGNNJOKC@?$AA0@ DB '0 ', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13EJFHHPOP@?$AA?$CF@
CONST	SEGMENT
??_C@_13EJFHHPOP@?$AA?$CF@ DB '%', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13IMODFHAA@?$AA?9@
CONST	SEGMENT
??_C@_13IMODFHAA@?$AA?9@ DB '-', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13BMLCKOLB@?$PP?$KE@
CONST	SEGMENT
??_C@_13BMLCKOLB@?$PP?$KE@ DB 0a4H, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13DMCFHHKM@?$AA3@
CONST	SEGMENT
??_C@_13DMCFHHKM@?$AA3@ DB '3', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13DEFPDAGF@?$AA?0@
CONST	SEGMENT
??_C@_13DEFPDAGF@?$AA?0@ DB ',', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13JOFGPIOO@?$AA?4@
CONST	SEGMENT
??_C@_13JOFGPIOO@?$AA?4@ DB '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13HADAKIJA@?$AAx@
CONST	SEGMENT
??_C@_13HADAKIJA@?$AAx@ DB 'x', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1BI@BIIKHCEK@?$AA?$CK?$PP?e?$AAn?$PP?x?$AA?$AP?$AA?$AH?$PP?$JK?$AAP?$AAg?$AAY?$AA?$AC@
CONST	SEGMENT
??_C@_1BI@BIIKHCEK@?$AA?$CK?$PP?e?$AAn?$PP?x?$AA?$AP?$AA?$AH?$PP?$JK?$AAP?$AAg?$AAY?$AA?$AC@ DB '*'
	DB	'g', 0e5H, 'wn0', 0f8H, 'f', 0fH, '_', 07H, 'c', 09aH, '[P[g0Y'
	DB	'0', 02H, '0', 00H, 00H			; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::FormatException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFormatException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVFormatException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVFormatException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVFormatException@Internal@Core@Math@Palmtree@@@8??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVFormatException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVFormatException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVFormatException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1DO@MFGCBHKN@?$PP?$KL?$PP?$LJ?$PP?$LP?$PP?$OA?$PP?x?$AA?$AP?$AAk?$PP?$II?$PP?$IL?$AAT?$AAo?$AAS?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1DO@MFGCBHKN@?$PP?$KL?$PP?$LJ?$PP?$LP?$PP?$OA?$PP?x?$AA?$AP?$AAk?$PP?$II?$PP?$IL?$AAT?$AAo?$AAS?$AAt?$AAr?$AAi@ DB 0abH
	DB	'0', 0b9H, '0', 0bfH, '0', 0e0H, '0', 0f8H, 'f', 0fH, '_k0', 088H
	DB	'0', 08bH, '0T', 00H, 'o', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 'o0', 0b5H, '0', 0ddH, '0', 0fcH, '0', 0c8H
	DB	'0U0', 08cH, '0f0D0~0[0', 093H, '0', 02H, '0', 00H, 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::NotSupportedException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVNotSupportedException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVNotSupportedException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVNotSupportedException@Internal@Core@Math@Palmtree@@@8??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVNotSupportedException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
_DATA	SEGMENT
?hexadecimal_lower_digits@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@3PA_WA DB '0'
	DB	00H, '1', 00H, '2', 00H, '3', 00H, '4', 00H, '5', 00H, '6', 00H
	DB	'7', 00H, '8', 00H, '9', 00H, 'a', 00H, 'b', 00H, 'c', 00H, 'd'
	DB	00H, 'e', 00H, 'f', 00H, 00H, 00H		; Palmtree::Math::Core::Internal::HexaDecimalFormatter::hexadecimal_lower_digits
	ORG $+6
?hexadecimal_upper_digits@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@3PA_WA DB '0'
	DB	00H, '1', 00H, '2', 00H, '3', 00H, '4', 00H, '5', 00H, '6', 00H
	DB	'7', 00H, '8', 00H, '9', 00H, 'A', 00H, 'B', 00H, 'C', 00H, 'D'
	DB	00H, 'E', 00H, 'F', 00H, 00H, 00H		; Palmtree::Math::Core::Internal::HexaDecimalFormatter::hexadecimal_upper_digits
_DATA	ENDS
;	COMDAT ??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_C@_19GGGBJDH@?$AA?$CF?$AA0?$AA3?$AAd@
CONST	SEGMENT
??_C@_19GGGBJDH@?$AA?$CF?$AA0?$AA3?$AAd@ DB '%', 00H, '0', 00H, '3', 00H, 'd'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19NKFEMDNP@?$AA?$CL?$AA0?$AA0?$AA0@
CONST	SEGMENT
??_C@_19NKFEMDNP@?$AA?$CL?$AA0?$AA0?$AA0@ DB '+', 00H, '0', 00H, '0', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::`vftable'
	DQ	FLAT:?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
	DQ	FLAT:?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
	DQ	FLAT:?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DQ	FLAT:?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
CONST	ENDS
;	COMDAT ??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@
CONST	SEGMENT
??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 't', 00H, 'o', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, ';', 00H, 'F', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 't', 00H, 'e', 00H, 'r', 00H, ':'
	DB	00H, ':', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, ';', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::`vftable'
	DQ	FLAT:_purecall
	DQ	FLAT:?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_7ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::`vftable'
	DQ	FLAT:?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
	DQ	FLAT:?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
	DQ	FLAT:?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
CONST	ENDS
;	COMDAT ??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringWriter::`vftable'
	DQ	FLAT:?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
	DQ	FLAT:?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
	DQ	FLAT:?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
CONST	ENDS
;	COMDAT ??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
CONST	SEGMENT
??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@ DB 0f8H
	DB	'fM0', 0bcH, 08fH, 07fH, '0HQ', 0d0H, '0', 0c3H, '0', 0d5H, '0'
	DB	0a1H, '0n0', 0b5H, '0', 0a4H, '0', 0baH, '0L0', 0dH, 'N', 0b3H
	DB	08dH, 'W0f0D0~0Y0', 02H, '0', 00H, 00H	; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InsufficientBufferException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInsufficientBufferException@Internal@Core@Math@Palmt'
	DB	'ree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@@8??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7StringWriter@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4StringWriter@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringWriter::`vftable'
	DQ	FLAT:?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
	DQ	FLAT:?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
	DQ	FLAT:?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
CONST	ENDS
;	COMDAT ??_C@_1GC@GGAPGHKN@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
CONST	SEGMENT
??_C@_1GC@GGAPGHKN@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'h'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ':', 00H, ':', 00H, 'S', 00H, 'k', 00H, 'i', 00H, 'p'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@BNHGDLLE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
CONST	SEGMENT
??_C@_1FO@BNHGDLLE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'h'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ':', 00H, ':', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g'
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ';', 00H, '1', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ReverseStringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ReverseStringReader::`vftable'
	DQ	FLAT:?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
	DQ	FLAT:?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
	DQ	FLAT:?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
	DQ	FLAT:?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
CONST	ENDS
;	COMDAT ??_C@_1FE@KONPIGEM@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
CONST	SEGMENT
??_C@_1FE@KONPIGEM@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'h'
	DB	00H, ';', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'k', 00H, 'i', 00H, 'p', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ';'
	DB	00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
CONST	SEGMENT
??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ DB 085H
	DB	'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv', 01fH, 'u'
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@CNGEABBJ@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
CONST	SEGMENT
??_C@_1FA@CNGEABBJ@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'h'
	DB	00H, ';', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, ':', 00H, ':', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ';', 00H, '1', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7StringReader@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7StringReader@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4StringReader@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::StringReader::`vftable'
	DQ	FLAT:?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
	DQ	FLAT:?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
	DQ	FLAT:?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
	DQ	FLAT:?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
CONST	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DQ	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4NotSupportedException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotSupportedException::`vftable'
	DQ	FLAT:??_ENotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InsufficientBufferException::`vftable'
	DQ	FLAT:??_EInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7FormatException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7FormatException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4FormatException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::FormatException::`vftable'
	DQ	FLAT:??_EFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DQ	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DQ	FLAT:??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z DD 071701H
	DD	0177417H
	DD	0163417H
	DD	0140117H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	0ffffffffH
	DD	imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+195
	DD	00H
	DD	imagerel ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z+674
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 0c2911H
	DD	0176429H
	DD	0155425H
	DD	0143421H
	DD	0f011d215H
	DD	0d00de00fH
	DD	07009c00bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+60
	DD	00H
	DD	imagerel ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+564
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+600
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	060H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0b2c11H
	DD	025342cH
	DD	01c011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel ?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+45
	DD	00H
	DD	imagerel ?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+89
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 061911H
	DD	0d6419H
	DD	0c3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 041201H
	DD	063412H
	DD	0700e3212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+60
	DD	00H
	DD	imagerel ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+564
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+600
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	060H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0b2c11H
	DD	025342cH
	DD	01c011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 020901H
	DD	030053209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 021H
	DD	imagerel $LN20
	DD	imagerel $LN20+141
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 020821H
	DD	0155408H
	DD	imagerel $LN20
	DD	imagerel $LN20+141
	DD	imagerel $unwind$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 061b19H
	DD	0f008b20cH
	DD	07004e006H
	DD	030026003H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+58
	DD	00H
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+77
	DD	01H
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+164
	DD	00H
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+209
	DD	02H
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+279
	DD	00H
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+334
	DD	01H
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+393
	DD	00H
	DD	imagerel ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+408
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$2@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 0c2711H
	DD	0196427H
	DD	0185423H
	DD	017341fH
	DD	0f00cf213H
	DD	0d008e00aH
	DD	07004c006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+50
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 020521H
	DD	067405H
	DD	imagerel $LN14
	DD	imagerel $LN14+50
	DD	imagerel $unwind$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 040a01H
	DD	07340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD imagerel ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+60
	DD	00H
	DD	imagerel ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+564
	DD	0ffffffffH
	DD	imagerel ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z+600
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
	DD	060H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z DD 0b2c11H
	DD	025342cH
	DD	01c011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z DD 061201H
	DD	087412H
	DD	063412H
	DD	0500b3212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z DD 021H
	DD	imagerel $LN43
	DD	imagerel $LN43+90
	DD	imagerel $unwind$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z DD 020421H
	DD	0127404H
	DD	imagerel $LN43
	DD	imagerel $LN43+90
	DD	imagerel $unwind$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z DD 040f01H
	DD	013340fH
	DD	06008f20fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD imagerel ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
	DD	0ffffffffH
	DD	imagerel ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z+55
	DD	00H
	DD	imagerel ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z+247
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z DD 0c2411H
	DD	0156424H
	DD	0145420H
	DD	012341cH
	DD	0f00cb210H
	DD	0d008e00aH
	DD	07004c006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	0ffffffffH
	DD	imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+60
	DD	00H
	DD	imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+98
	DD	01H
	DD	imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+279
	DD	00H
	DD	imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+529
	DD	0ffffffffH
	DD	imagerel ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z+565
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
	DD	098H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 0b2c11H
	DD	025342cH
	DD	01a011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z DD 081401H
	DD	0e6414H
	DD	0d5414H
	DD	0c3414H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
	DD	0ffffffffH
	DD	imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z+41
	DD	00H
	DD	imagerel ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z+107
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z DD 061911H
	DD	0d6419H
	DD	0c3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
	DD	0ffffffffH
	DD	imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z+43
	DD	00H
	DD	imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z+128
	DD	0ffffffffH
	DD	imagerel ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z+161
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z DD 081b11H
	DD	012541bH
	DD	0103417H
	DD	0e007b20bH
	DD	060047005H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_COPY_MEMORY_UNIT DD 040a01H
	DD	02740aH
	DD	016405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z DD 081401H
	DD	0106414H
	DD	0f5414H
	DD	0e3414H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z DD 061401H
	DD	076414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 020601H
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z DD 020601H
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+37
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+62
	DD	01H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+72
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+37
	DD	00H
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+66
	DD	01H
	DD	imagerel ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+76
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+37
	DD	00H
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+66
	DD	01H
	DD	imagerel ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+76
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+37
	DD	00H
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+66
	DD	01H
	DD	imagerel ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+76
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+37
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+62
	DD	01H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+72
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+58
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z+62
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gexception@std@@UEAAPEAXI@Z DD imagerel ??_Gexception@std@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_Gexception@std@@UEAAPEAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_Gexception@std@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_Gexception@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
_TEXT	SEGMENT
writer$1 = 64
writer$2 = 64
writer$3 = 64
writer$4 = 64
formatter$5 = 64
formatter$6 = 104
formatter$7 = 104
formatter$8 = 104
formatter$9 = 104
writer$10 = 104
$T11 = 104
x_sign$ = 176
x_abs$ = 184
format$ = 192
format_option$ = 200
buffer$ = 208
buffer_size$ = 216
?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::ToString_Imp, COMDAT

; 1392 :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 7c 24 10	 mov	 QWORD PTR [rsp+16], rdi
  0000a	55		 push	 rbp
  0000b	48 8d 6c 24 b9	 lea	 rbp, QWORD PTR [rsp-71]
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	4d 8b d1	 mov	 r10, r9
  0001a	4c 8b da	 mov	 r11, rdx
  0001d	0f b6 d9	 movzx	 ebx, cl

; 1357 :         if (format == nullptr)

  00020	bf 44 00 00 00	 mov	 edi, 68			; 00000044H
  00025	4d 85 c0	 test	 r8, r8
  00028	75 0d		 jne	 SHORT $LN18@ToString_I

; 1358 :         {
; 1359 :             *format_type = L'D';

  0002a	44 0f b7 c7	 movzx	 r8d, di

; 1360 :             *precision = -1;

  0002e	44 8d 4f bb	 lea	 r9d, QWORD PTR [rdi-69]

; 1361 :             return (TRUE);

  00032	e9 d1 00 00 00	 jmp	 $LN4@ToString_I
$LN18@ToString_I:

; 1362 :         }
; 1363 :         else if (format[0] == L'\0')

  00037	41 0f b7 08	 movzx	 ecx, WORD PTR [r8]
  0003b	66 85 c9	 test	 cx, cx
  0003e	75 0e		 jne	 SHORT $LN20@ToString_I

; 1364 :         {
; 1365 :             *format_type = L'D';

  00040	44 8b c7	 mov	 r8d, edi

; 1366 :             *precision = -1;

  00043	41 b9 ff ff ff
	ff		 mov	 r9d, -1

; 1367 :             return (TRUE);

  00049	e9 ba 00 00 00	 jmp	 $LN4@ToString_I
$LN20@ToString_I:

; 1341 :         if (c >= L'A' && c <= L'Z')

  0004e	8d 51 bf	 lea	 edx, DWORD PTR [rcx-65]
  00051	66 83 fa 19	 cmp	 dx, 25
  00055	76 09		 jbe	 SHORT $LN121@ToString_I

; 1342 :             return (TRUE);
; 1343 :         if (c >= L'a' && c <= L'z')

  00057	8d 41 9f	 lea	 eax, DWORD PTR [rcx-97]
  0005a	66 83 f8 19	 cmp	 ax, 25
  0005e	77 17		 ja	 SHORT $LN128@ToString_I
$LN121@ToString_I:

; 1369 :         else if (__IS_ALPHA(format[0]) && format[1] == L'\0')

  00060	66 41 83 78 02
	00		 cmp	 WORD PTR [r8+2], 0
  00066	75 0f		 jne	 SHORT $LN128@ToString_I

; 1370 :         {
; 1371 :             *format_type = format[0];

  00068	44 0f b7 c1	 movzx	 r8d, cx

; 1372 :             *precision = -1;

  0006c	41 b9 ff ff ff
	ff		 mov	 r9d, -1

; 1373 :             return (TRUE);

  00072	e9 91 00 00 00	 jmp	 $LN4@ToString_I
$LN128@ToString_I:

; 1341 :         if (c >= L'A' && c <= L'Z')

  00077	66 83 fa 19	 cmp	 dx, 25
  0007b	76 09		 jbe	 SHORT $LN122@ToString_I

; 1342 :             return (TRUE);
; 1343 :         if (c >= L'a' && c <= L'z')

  0007d	8d 41 9f	 lea	 eax, DWORD PTR [rcx-97]
  00080	66 83 f8 19	 cmp	 ax, 25
  00084	77 25		 ja	 SHORT $LN24@ToString_I
$LN122@ToString_I:

; 1375 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && format[2] == L'\0')

  00086	45 0f b7 48 02	 movzx	 r9d, WORD PTR [r8+2]

; 1350 :         if (c >= L'0' && c <= L'9')

  0008b	41 8d 41 d0	 lea	 eax, DWORD PTR [r9-48]
  0008f	66 83 f8 09	 cmp	 ax, 9
  00093	77 16		 ja	 SHORT $LN24@ToString_I

; 1375 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && format[2] == L'\0')

  00095	66 41 83 78 04
	00		 cmp	 WORD PTR [r8+4], 0
  0009b	75 0e		 jne	 SHORT $LN24@ToString_I

; 1376 :         {
; 1377 :             *format_type = format[0];
; 1378 :             *precision = format[1] - L'0';

  0009d	45 0f b7 c9	 movzx	 r9d, r9w
  000a1	44 0f b7 c1	 movzx	 r8d, cx
  000a5	41 83 e9 30	 sub	 r9d, 48			; 00000030H

; 1379 :             return (TRUE);

  000a9	eb 5d		 jmp	 SHORT $LN4@ToString_I
$LN24@ToString_I:

; 1341 :         if (c >= L'A' && c <= L'Z')

  000ab	66 83 fa 19	 cmp	 dx, 25
  000af	76 0d		 jbe	 SHORT $LN124@ToString_I

; 1342 :             return (TRUE);
; 1343 :         if (c >= L'a' && c <= L'z')

  000b1	8d 41 9f	 lea	 eax, DWORD PTR [rcx-97]
  000b4	66 83 f8 19	 cmp	 ax, 25
  000b8	0f 87 be 02 00
	00		 ja	 $LN26@ToString_I
$LN124@ToString_I:

; 1381 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && __IS_DIGIT(format[2]) && format[3] == L'\0')

  000be	41 0f b7 50 02	 movzx	 edx, WORD PTR [r8+2]

; 1350 :         if (c >= L'0' && c <= L'9')

  000c3	8d 42 d0	 lea	 eax, DWORD PTR [rdx-48]
  000c6	66 83 f8 09	 cmp	 ax, 9
  000ca	0f 87 ac 02 00
	00		 ja	 $LN26@ToString_I

; 1381 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && __IS_DIGIT(format[2]) && format[3] == L'\0')

  000d0	45 0f b7 48 04	 movzx	 r9d, WORD PTR [r8+4]

; 1350 :         if (c >= L'0' && c <= L'9')

  000d5	41 8d 41 d0	 lea	 eax, DWORD PTR [r9-48]
  000d9	66 83 f8 09	 cmp	 ax, 9
  000dd	0f 87 99 02 00
	00		 ja	 $LN26@ToString_I

; 1381 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && __IS_DIGIT(format[2]) && format[3] == L'\0')

  000e3	66 41 83 78 06
	00		 cmp	 WORD PTR [r8+6], 0
  000e9	0f 85 8d 02 00
	00		 jne	 $LN26@ToString_I

; 1382 :         {
; 1383 :             *format_type = format[0];
; 1384 :             *precision = (format[1] - L'0') * 10 + (format[2] - L'0');

  000ef	0f b7 c2	 movzx	 eax, dx
  000f2	44 0f b7 c1	 movzx	 r8d, cx
  000f6	8d 0c 80	 lea	 ecx, DWORD PTR [rax+rax*4]
  000f9	41 0f b7 c1	 movzx	 eax, r9w
  000fd	44 8d 89 f8 fe
	ff ff		 lea	 r9d, DWORD PTR [rcx-264]
  00104	46 8d 0c 48	 lea	 r9d, DWORD PTR [rax+r9*2]
$LN4@ToString_I:

; 1397 :         else
; 1398 :         {
; 1399 :             switch (format_type)

  00108	41 0f b7 c0	 movzx	 eax, r8w
  0010c	83 c0 bd	 add	 eax, -67		; ffffffffffffffbdH
  0010f	83 f8 35	 cmp	 eax, 53			; 00000035H
  00112	0f 87 85 02 00
	00		 ja	 $LN15@ToString_I
  00118	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  0011f	48 98		 cdqe
  00121	0f b6 84 02 00
	00 00 00	 movzx	 eax, BYTE PTR $LN129@ToString_I[rdx+rax]
  00129	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN130@ToString_I[rdx+rax*4]
  00130	48 03 ca	 add	 rcx, rdx
  00133	ff e1		 jmp	 rcx
$LN6@ToString_I:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00135	48 8b 4d 77	 mov	 rcx, QWORD PTR buffer$[rbp-89]
  00139	48 85 c9	 test	 rcx, rcx
  0013c	74 0a		 je	 SHORT $LN54@ToString_I
  0013e	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  00142	48 8d 14 41	 lea	 rdx, QWORD PTR [rcx+rax*2]
  00146	eb 02		 jmp	 SHORT $LN55@ToString_I
$LN54@ToString_I:
  00148	33 d2		 xor	 edx, edx
$LN55@ToString_I:

; 210  :         {

  0014a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@

; 201  :             _p = p;

  00151	48 89 4d 17	 mov	 QWORD PTR writer$10[rbp-81], rcx

; 210  :         {

  00155	48 89 45 0f	 mov	 QWORD PTR writer$10[rbp-89], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  00159	4d 8b c3	 mov	 r8, r11

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  0015c	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  00166	48 89 4d 1f	 mov	 QWORD PTR writer$10[rbp-73], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  0016a	48 89 45 ef	 mov	 QWORD PTR formatter$5[rbp-81], rax

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  0016e	48 8d 4d e7	 lea	 rcx, QWORD PTR formatter$5[rbp-89]

; 204  :                 _format_type = format_type;

  00172	b8 43 00 00 00	 mov	 eax, 67			; 00000043H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 203  :             _eob = eob;

  00177	48 89 55 27	 mov	 QWORD PTR writer$10[rbp-65], rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 204  :                 _format_type = format_type;

  0017b	66 89 45 fb	 mov	 WORD PTR formatter$5[rbp-69], ax

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  0017f	0f b6 d3	 movzx	 edx, bl

; 404  :             {

  00182	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 205  :                 _precision = precision;

  00189	44 89 4d ff	 mov	 DWORD PTR formatter$5[rbp-65], r9d

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  0018d	4c 8d 4d 0f	 lea	 r9, QWORD PTR writer$10[rbp-89]

; 404  :             {

  00191	48 89 45 e7	 mov	 QWORD PTR formatter$5[rbp-89], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 204  :             _written = 0;

  00195	48 c7 45 2f 00
	00 00 00	 mov	 QWORD PTR writer$10[rbp-57], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 191  :             const int digit_count_on_word = 19;

  0019d	c7 45 f7 13 00
	00 00		 mov	 DWORD PTR formatter$5[rbp-73], 19

; 206  :                 _number_format_info = number_format_info;

  001a4	4c 89 55 07	 mov	 QWORD PTR formatter$5[rbp-57], r10

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  001a8	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1400 :             {
; 1401 :             case L'c':
; 1402 :             case L'C':
; 1403 :                 return (DecimalFromatter::ToStringC(x_sign, x_abs, L'C', precision, format_option, buffer, buffer_size));

  001ad	48 8b 45 2f	 mov	 rax, QWORD PTR writer$10[rbp-57]
  001b1	eb 25		 jmp	 SHORT $LN5@ToString_I
$LN7@ToString_I:

; 1430 :             }
; 1431 :         }
; 1432 :     }

  001b3	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  001b7	44 8b c7	 mov	 r8d, edi
  001ba	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001bf	48 8b 45 77	 mov	 rax, QWORD PTR buffer$[rbp-89]
  001c3	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001c8	4c 89 54 24 20	 mov	 QWORD PTR [rsp+32], r10
$LN133@ToString_I:
  001cd	49 8b d3	 mov	 rdx, r11
  001d0	0f b6 cb	 movzx	 ecx, bl
  001d3	e8 00 00 00 00	 call	 ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
$LN5@ToString_I:
  001d8	4c 8d 9c 24 a0
	00 00 00	 lea	 r11, QWORD PTR [rsp+160]
  001e0	49 8b 5b 10	 mov	 rbx, QWORD PTR [r11+16]
  001e4	49 8b 7b 18	 mov	 rdi, QWORD PTR [r11+24]
  001e8	49 8b e3	 mov	 rsp, r11
  001eb	5d		 pop	 rbp
  001ec	c3		 ret	 0
$LN8@ToString_I:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  001ed	48 8b 4d 77	 mov	 rcx, QWORD PTR buffer$[rbp-89]
  001f1	48 85 c9	 test	 rcx, rcx
  001f4	74 0a		 je	 SHORT $LN68@ToString_I
  001f6	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  001fa	48 8d 14 41	 lea	 rdx, QWORD PTR [rcx+rax*2]
  001fe	eb 02		 jmp	 SHORT $LN69@ToString_I
$LN68@ToString_I:
  00200	33 d2		 xor	 edx, edx
$LN69@ToString_I:

; 210  :         {

  00202	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 204  :                 _format_type = format_type;

  00209	66 44 89 45 23	 mov	 WORD PTR formatter$9[rbp-69], r8w
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 210  :         {

  0020e	48 89 45 e7	 mov	 QWORD PTR writer$4[rbp-89], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00212	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  0021c	48 89 45 17	 mov	 QWORD PTR formatter$9[rbp-81], rax

; 651  :             {

  00220	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
$LN134@ToString_I:

; 1430 :             }
; 1431 :         }
; 1432 :     }

  00227	44 89 4d 27	 mov	 DWORD PTR formatter$9[rbp-65], r9d
  0022b	4d 8b c3	 mov	 r8, r11
  0022e	48 89 55 ff	 mov	 QWORD PTR writer$4[rbp-65], rdx
  00232	4c 8d 4d e7	 lea	 r9, QWORD PTR writer$4[rbp-89]
  00236	48 89 4d f7	 mov	 QWORD PTR writer$4[rbp-73], rcx
  0023a	0f b6 d3	 movzx	 edx, bl
  0023d	48 89 4d ef	 mov	 QWORD PTR writer$4[rbp-81], rcx
  00241	48 8d 4d 0f	 lea	 rcx, QWORD PTR formatter$9[rbp-89]
  00245	4c 89 55 2f	 mov	 QWORD PTR formatter$9[rbp-57], r10
  00249	c7 45 1f 13 00
	00 00		 mov	 DWORD PTR formatter$9[rbp-73], 19
  00250	48 c7 45 07 00
	00 00 00	 mov	 QWORD PTR writer$4[rbp-57], 0
  00258	48 89 45 0f	 mov	 QWORD PTR formatter$9[rbp-89], rax
  0025c	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format
  00261	48 8b 45 07	 mov	 rax, QWORD PTR writer$4[rbp-57]
  00265	e9 6e ff ff ff	 jmp	 $LN5@ToString_I
$LN9@ToString_I:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  0026a	48 8b 4d 77	 mov	 rcx, QWORD PTR buffer$[rbp-89]
  0026e	48 85 c9	 test	 rcx, rcx
  00271	74 0a		 je	 SHORT $LN82@ToString_I
  00273	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  00277	48 8d 14 41	 lea	 rdx, QWORD PTR [rcx+rax*2]
  0027b	eb 02		 jmp	 SHORT $LN83@ToString_I
$LN82@ToString_I:
  0027d	33 d2		 xor	 edx, edx
$LN83@ToString_I:

; 210  :         {

  0027f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
  00286	48 89 45 e7	 mov	 QWORD PTR writer$3[rbp-89], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  0028a	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  00294	48 89 45 17	 mov	 QWORD PTR formatter$8[rbp-81], rax

; 204  :                 _format_type = format_type;

  00298	b8 46 00 00 00	 mov	 eax, 70			; 00000046H
  0029d	66 89 45 23	 mov	 WORD PTR formatter$8[rbp-69], ax

; 735  :             {

  002a1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 1404 :             case L'd':
; 1405 :             case L'D':
; 1406 :                 return (DecimalFromatter::ToStringD(x_sign, x_abs, L'D', precision, format_option, buffer, buffer_size));
; 1407 :             case L'e':
; 1408 :             case L'E':
; 1409 :                 return (DecimalFromatter::ToStringE(x_sign, x_abs, format_type, precision, format_option, buffer, buffer_size));
; 1410 :             case L'f':
; 1411 :             case L'F':
; 1412 :                 return (DecimalFromatter::ToStringF(x_sign, x_abs, L'F', precision, format_option, buffer, buffer_size));

  002a8	e9 7a ff ff ff	 jmp	 $LN134@ToString_I
$LN11@ToString_I:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  002ad	48 8b 4d 77	 mov	 rcx, QWORD PTR buffer$[rbp-89]
  002b1	48 85 c9	 test	 rcx, rcx
  002b4	74 0a		 je	 SHORT $LN96@ToString_I
  002b6	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  002ba	48 8d 14 41	 lea	 rdx, QWORD PTR [rcx+rax*2]
  002be	eb 02		 jmp	 SHORT $LN97@ToString_I
$LN96@ToString_I:
  002c0	33 d2		 xor	 edx, edx
$LN97@ToString_I:

; 210  :         {

  002c2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
  002c9	48 89 45 e7	 mov	 QWORD PTR writer$2[rbp-89], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  002cd	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  002d7	48 89 45 17	 mov	 QWORD PTR formatter$7[rbp-81], rax

; 204  :                 _format_type = format_type;

  002db	b8 4e 00 00 00	 mov	 eax, 78			; 0000004eH
  002e0	66 89 45 23	 mov	 WORD PTR formatter$7[rbp-69], ax

; 781  :             {

  002e4	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 1413 :             case L'g':
; 1414 :             case L'G':
; 1415 :                 return (DecimalFromatter::ToStringD(x_sign, x_abs, L'D', precision, format_option, buffer, buffer_size));
; 1416 :             case L'n':
; 1417 :             case L'N':
; 1418 :                 return (DecimalFromatter::ToStringN(x_sign, x_abs, L'N', precision, format_option, buffer, buffer_size));

  002eb	e9 37 ff ff ff	 jmp	 $LN134@ToString_I
$LN12@ToString_I:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  002f0	48 8b 4d 77	 mov	 rcx, QWORD PTR buffer$[rbp-89]
  002f4	48 85 c9	 test	 rcx, rcx
  002f7	74 0a		 je	 SHORT $LN110@ToString_I
  002f9	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  002fd	48 8d 14 41	 lea	 rdx, QWORD PTR [rcx+rax*2]
  00301	eb 02		 jmp	 SHORT $LN111@ToString_I
$LN110@ToString_I:
  00303	33 d2		 xor	 edx, edx
$LN111@ToString_I:

; 210  :         {

  00305	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
  0030c	48 89 45 e7	 mov	 QWORD PTR writer$1[rbp-89], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00310	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  0031a	48 89 45 17	 mov	 QWORD PTR formatter$6[rbp-81], rax

; 204  :                 _format_type = format_type;

  0031e	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  00323	66 89 45 23	 mov	 WORD PTR formatter$6[rbp-69], ax

; 881  :             {

  00327	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 1419 :             case L'p':
; 1420 :             case L'P':
; 1421 :                 return (DecimalFromatter::ToStringP(x_sign, x_abs, L'P', precision, format_option, buffer, buffer_size));

  0032e	e9 f4 fe ff ff	 jmp	 $LN134@ToString_I
$LN13@ToString_I:

; 1422 :             case L'r':
; 1423 :             case L'R':
; 1424 :                 return (DecimalFromatter::ToStringD(x_sign, x_abs, L'D', 0, format_option, buffer, buffer_size));

  00333	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  00337	44 8b c7	 mov	 r8d, edi
  0033a	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0033f	45 33 c9	 xor	 r9d, r9d
  00342	48 8b 45 77	 mov	 rax, QWORD PTR buffer$[rbp-89]
  00346	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0034b	4c 89 54 24 20	 mov	 QWORD PTR [rsp+32], r10
  00350	e9 78 fe ff ff	 jmp	 $LN133@ToString_I
$LN14@ToString_I:

; 1425 :             case L'x':
; 1426 :             case L'X':
; 1427 :                 return (HexaDecimalFormatter::ToStringX(x_sign, x_abs, format_type, precision, format_option, buffer, buffer_size));

  00355	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  00359	49 8b d3	 mov	 rdx, r11
  0035c	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00361	0f b6 cb	 movzx	 ecx, bl
  00364	48 8b 45 77	 mov	 rax, QWORD PTR buffer$[rbp-89]
  00368	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0036d	4c 89 54 24 20	 mov	 QWORD PTR [rsp+32], r10
  00372	e8 00 00 00 00	 call	 ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX
  00377	e9 5c fe ff ff	 jmp	 $LN5@ToString_I
$LN26@ToString_I:

; 1393 :         wchar_t format_type;
; 1394 :         int precision;
; 1395 :         if (!ParseStandardFormat(format, &format_type, &precision))
; 1396 :             return (CustomFormatter::ToStringCustom(x_sign, x_abs, format, format_option, buffer, buffer_size));

  0037c	48 8b 45 7f	 mov	 rax, QWORD PTR buffer_size$[rbp-89]
  00380	4d 8b ca	 mov	 r9, r10
  00383	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00388	49 8b d3	 mov	 rdx, r11
  0038b	48 8b 45 77	 mov	 rax, QWORD PTR buffer$[rbp-89]
  0038f	0f b6 cb	 movzx	 ecx, bl
  00392	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00397	e8 00 00 00 00	 call	 ?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ; Palmtree::Math::Core::Internal::CustomFormatter::ToStringCustom
  0039c	cc		 int	 3
$LN15@ToString_I:

; 1428 :             default:
; 1429 :                 throw FormatException(L"未知の書式指定子です。");

  0039d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BI@BIIKHCEK@?$AA?$CK?$PP?e?$AAn?$PP?x?$AA?$AP?$AA?$AH?$PP?$JK?$AAP?$AAg?$AAY?$AA?$AC@
  003a4	48 8d 4d 0f	 lea	 rcx, QWORD PTR $T11[rbp-89]
  003a8	e8 00 00 00 00	 call	 ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::FormatException::FormatException
  003ad	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVFormatException@Internal@Core@Math@Palmtree@@
  003b4	48 8d 4d 0f	 lea	 rcx, QWORD PTR $T11[rbp-89]
  003b8	e8 00 00 00 00	 call	 _CxxThrowException
  003bd	cc		 int	 3
$LN131@ToString_I:
  003be	66 90		 npad	 2
$LN130@ToString_I:

; 1430 :             }
; 1431 :         }
; 1432 :     }

  003c0	00 00 00 00	 DD	 $LN6@ToString_I
  003c4	00 00 00 00	 DD	 $LN7@ToString_I
  003c8	00 00 00 00	 DD	 $LN8@ToString_I
  003cc	00 00 00 00	 DD	 $LN9@ToString_I
  003d0	00 00 00 00	 DD	 $LN11@ToString_I
  003d4	00 00 00 00	 DD	 $LN12@ToString_I
  003d8	00 00 00 00	 DD	 $LN13@ToString_I
  003dc	00 00 00 00	 DD	 $LN14@ToString_I
  003e0	00 00 00 00	 DD	 $LN15@ToString_I
$LN129@ToString_I:
  003e4	00		 DB	 0
  003e5	01		 DB	 1
  003e6	02		 DB	 2
  003e7	03		 DB	 3
  003e8	01		 DB	 1
  003e9	08		 DB	 8
  003ea	08		 DB	 8
  003eb	08		 DB	 8
  003ec	08		 DB	 8
  003ed	08		 DB	 8
  003ee	08		 DB	 8
  003ef	04		 DB	 4
  003f0	08		 DB	 8
  003f1	05		 DB	 5
  003f2	08		 DB	 8
  003f3	06		 DB	 6
  003f4	08		 DB	 8
  003f5	08		 DB	 8
  003f6	08		 DB	 8
  003f7	08		 DB	 8
  003f8	08		 DB	 8
  003f9	07		 DB	 7
  003fa	08		 DB	 8
  003fb	08		 DB	 8
  003fc	08		 DB	 8
  003fd	08		 DB	 8
  003fe	08		 DB	 8
  003ff	08		 DB	 8
  00400	08		 DB	 8
  00401	08		 DB	 8
  00402	08		 DB	 8
  00403	08		 DB	 8
  00404	00		 DB	 0
  00405	01		 DB	 1
  00406	02		 DB	 2
  00407	03		 DB	 3
  00408	01		 DB	 1
  00409	08		 DB	 8
  0040a	08		 DB	 8
  0040b	08		 DB	 8
  0040c	08		 DB	 8
  0040d	08		 DB	 8
  0040e	08		 DB	 8
  0040f	04		 DB	 4
  00410	08		 DB	 8
  00411	05		 DB	 5
  00412	08		 DB	 8
  00413	06		 DB	 6
  00414	08		 DB	 8
  00415	08		 DB	 8
  00416	08		 DB	 8
  00417	08		 DB	 8
  00418	08		 DB	 8
  00419	07		 DB	 7
?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::ToString_Imp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z
_TEXT	SEGMENT
format$ = 8
format_type$ = 16
precision$ = 24
?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z PROC ; Palmtree::Math::Core::Internal::ParseStandardFormat, COMDAT

; 1356 :     {

  00000	4c 8b c9	 mov	 r9, rcx

; 1357 :         if (format == nullptr)

  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 84 ce 00 00
	00		 je	 $LN42@ParseStand

; 1358 :         {
; 1359 :             *format_type = L'D';
; 1360 :             *precision = -1;
; 1361 :             return (TRUE);
; 1362 :         }
; 1363 :         else if (format[0] == L'\0')

  0000c	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  0000f	66 85 c9	 test	 cx, cx
  00012	0f 84 c2 00 00
	00		 je	 $LN42@ParseStand

; 1341 :         if (c >= L'A' && c <= L'Z')

  00018	44 8d 51 bf	 lea	 r10d, DWORD PTR [rcx-65]
  0001c	66 41 83 fa 19	 cmp	 r10w, 25
  00021	76 09		 jbe	 SHORT $LN35@ParseStand

; 1342 :             return (TRUE);
; 1343 :         if (c >= L'a' && c <= L'z')

  00023	8d 41 9f	 lea	 eax, DWORD PTR [rcx-97]
  00026	66 83 f8 19	 cmp	 ax, 25
  0002a	77 18		 ja	 SHORT $LN41@ParseStand
$LN35@ParseStand:

; 1366 :             *precision = -1;
; 1367 :             return (TRUE);
; 1368 :         }
; 1369 :         else if (__IS_ALPHA(format[0]) && format[1] == L'\0')

  0002c	66 41 83 79 02
	00		 cmp	 WORD PTR [r9+2], 0
  00032	75 10		 jne	 SHORT $LN41@ParseStand

; 1370 :         {
; 1371 :             *format_type = format[0];

  00034	66 89 0a	 mov	 WORD PTR [rdx], cx

; 1389 :     }

  00037	b8 01 00 00 00	 mov	 eax, 1
  0003c	41 c7 00 ff ff
	ff ff		 mov	 DWORD PTR [r8], -1
  00043	c3		 ret	 0
$LN41@ParseStand:

; 1341 :         if (c >= L'A' && c <= L'Z')

  00044	66 41 83 fa 19	 cmp	 r10w, 25
  00049	76 09		 jbe	 SHORT $LN36@ParseStand

; 1342 :             return (TRUE);
; 1343 :         if (c >= L'a' && c <= L'z')

  0004b	8d 41 9f	 lea	 eax, DWORD PTR [rcx-97]
  0004e	66 83 f8 19	 cmp	 ax, 25
  00052	77 2b		 ja	 SHORT $LN8@ParseStand
$LN36@ParseStand:

; 1372 :             *precision = -1;
; 1373 :             return (TRUE);
; 1374 :         }
; 1375 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && format[2] == L'\0')

  00054	41 0f b7 41 02	 movzx	 eax, WORD PTR [r9+2]

; 1350 :         if (c >= L'0' && c <= L'9')

  00059	66 83 e8 30	 sub	 ax, 48			; 00000030H
  0005d	66 83 f8 09	 cmp	 ax, 9
  00061	77 1c		 ja	 SHORT $LN8@ParseStand

; 1372 :             *precision = -1;
; 1373 :             return (TRUE);
; 1374 :         }
; 1375 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && format[2] == L'\0')

  00063	66 41 83 79 04
	00		 cmp	 WORD PTR [r9+4], 0
  00069	75 14		 jne	 SHORT $LN8@ParseStand

; 1376 :         {
; 1377 :             *format_type = format[0];

  0006b	66 89 0a	 mov	 WORD PTR [rdx], cx

; 1378 :             *precision = format[1] - L'0';

  0006e	41 0f b7 41 02	 movzx	 eax, WORD PTR [r9+2]
  00073	83 e8 30	 sub	 eax, 48			; 00000030H
  00076	41 89 00	 mov	 DWORD PTR [r8], eax

; 1389 :     }

  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	c3		 ret	 0
$LN8@ParseStand:

; 1341 :         if (c >= L'A' && c <= L'Z')

  0007f	66 41 83 fa 19	 cmp	 r10w, 25
  00084	76 09		 jbe	 SHORT $LN38@ParseStand

; 1342 :             return (TRUE);
; 1343 :         if (c >= L'a' && c <= L'z')

  00086	8d 41 9f	 lea	 eax, DWORD PTR [rcx-97]
  00089	66 83 f8 19	 cmp	 ax, 25
  0008d	77 48		 ja	 SHORT $LN10@ParseStand
$LN38@ParseStand:

; 1379 :             return (TRUE);
; 1380 :         }
; 1381 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && __IS_DIGIT(format[2]) && format[3] == L'\0')

  0008f	41 0f b7 41 02	 movzx	 eax, WORD PTR [r9+2]

; 1350 :         if (c >= L'0' && c <= L'9')

  00094	66 83 e8 30	 sub	 ax, 48			; 00000030H
  00098	66 83 f8 09	 cmp	 ax, 9
  0009c	77 39		 ja	 SHORT $LN10@ParseStand

; 1379 :             return (TRUE);
; 1380 :         }
; 1381 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && __IS_DIGIT(format[2]) && format[3] == L'\0')

  0009e	41 0f b7 41 04	 movzx	 eax, WORD PTR [r9+4]

; 1350 :         if (c >= L'0' && c <= L'9')

  000a3	66 83 e8 30	 sub	 ax, 48			; 00000030H
  000a7	66 83 f8 09	 cmp	 ax, 9
  000ab	77 2a		 ja	 SHORT $LN10@ParseStand

; 1379 :             return (TRUE);
; 1380 :         }
; 1381 :         else if (__IS_ALPHA(format[0]) && __IS_DIGIT(format[1]) && __IS_DIGIT(format[2]) && format[3] == L'\0')

  000ad	66 41 83 79 06
	00		 cmp	 WORD PTR [r9+6], 0
  000b3	75 22		 jne	 SHORT $LN10@ParseStand

; 1382 :         {
; 1383 :             *format_type = format[0];

  000b5	66 89 0a	 mov	 WORD PTR [rdx], cx

; 1384 :             *precision = (format[1] - L'0') * 10 + (format[2] - L'0');

  000b8	41 0f b7 41 02	 movzx	 eax, WORD PTR [r9+2]
  000bd	8d 0c 80	 lea	 ecx, DWORD PTR [rax+rax*4]
  000c0	41 0f b7 41 04	 movzx	 eax, WORD PTR [r9+4]
  000c5	8d 89 f8 fe ff
	ff		 lea	 ecx, DWORD PTR [rcx-264]
  000cb	8d 0c 48	 lea	 ecx, DWORD PTR [rax+rcx*2]

; 1389 :     }

  000ce	b8 01 00 00 00	 mov	 eax, 1
  000d3	41 89 08	 mov	 DWORD PTR [r8], ecx
  000d6	c3		 ret	 0
$LN10@ParseStand:

; 1385 :             return (TRUE);
; 1386 :         }
; 1387 :         else
; 1388 :             return (FALSE);

  000d7	33 c0		 xor	 eax, eax

; 1389 :     }

  000d9	c3		 ret	 0
$LN42@ParseStand:

; 1364 :         {
; 1365 :             *format_type = L'D';

  000da	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  000df	66 89 02	 mov	 WORD PTR [rdx], ax

; 1389 :     }

  000e2	b8 01 00 00 00	 mov	 eax, 1
  000e7	41 c7 00 ff ff
	ff ff		 mov	 DWORD PTR [r8], -1
  000ee	c3		 ret	 0
?ParseStandardFormat@Internal@Core@Math@Palmtree@@YAHPEB_WPEA_WPEAH@Z ENDP ; Palmtree::Math::Core::Internal::ParseStandardFormat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z
_TEXT	SEGMENT
c$ = 8
?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z PROC	; Palmtree::Math::Core::Internal::__IS_DIGIT, COMDAT

; 1350 :         if (c >= L'0' && c <= L'9')

  00000	33 c0		 xor	 eax, eax
  00002	66 83 e9 30	 sub	 cx, 48			; 00000030H
  00006	66 83 f9 09	 cmp	 cx, 9
  0000a	0f 96 c0	 setbe	 al

; 1351 :             return (TRUE);
; 1352 :         return (FALSE);
; 1353 :     }

  0000d	c3		 ret	 0
?__IS_DIGIT@Internal@Core@Math@Palmtree@@YAH_W@Z ENDP	; Palmtree::Math::Core::Internal::__IS_DIGIT
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z
_TEXT	SEGMENT
c$ = 8
?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z PROC	; Palmtree::Math::Core::Internal::__IS_ALPHA, COMDAT

; 1341 :         if (c >= L'A' && c <= L'Z')

  00000	8d 41 bf	 lea	 eax, DWORD PTR [rcx-65]
  00003	66 83 f8 19	 cmp	 ax, 25
  00007	76 0d		 jbe	 SHORT $LN5@IS_ALPHA

; 1342 :             return (TRUE);
; 1343 :         if (c >= L'a' && c <= L'z')

  00009	66 83 e9 61	 sub	 cx, 97			; 00000061H
  0000d	66 83 f9 19	 cmp	 cx, 25
  00011	76 03		 jbe	 SHORT $LN5@IS_ALPHA

; 1345 :         return (FALSE);

  00013	33 c0		 xor	 eax, eax

; 1346 :     }

  00015	c3		 ret	 0
$LN5@IS_ALPHA:

; 1344 :             return (TRUE);

  00016	b8 01 00 00 00	 mov	 eax, 1

; 1346 :     }

  0001b	c3		 ret	 0
?__IS_ALPHA@Internal@Core@Math@Palmtree@@YAH_W@Z ENDP	; Palmtree::Math::Core::Internal::__IS_ALPHA
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
$T1 = 32
x_sign$ = 96
x_abs$ = 104
format$ = 112
format_option$ = 120
buffer$ = 128
buffer_size$ = 136
?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::CustomFormatter::ToStringCustom, COMDAT

; 1313 :         {

  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 1314 :             // 【実験結果】
; 1315 :             // %と‰の効果は重複してかかる。%が2個なら100*100倍、%と‰なら100*1000倍。%と‰はどこに書かれていてもそのとおりの場所で表示される。【例：(-1.23456789).ToString("0■%■0") => -12■%■3 】
; 1316 :             // '#', '0', '.', ','をまず抜き出して数値を文字列化し、そのあとで'#', '0'のある場所に数値をはめ込む、みたいな実装になっているらしい。
; 1317 :             // ⇒小数部は小数点を基準に上位から順に1文字ずつはめ込まれ、はめ込めなかった分は四捨五入されて必要ならば繰り上がる。
; 1318 :             // ⇒整数部は小数点を基準に下位から順に1文字ずつはめ込まれる。
; 1319 :             // '.'の後に書かれている','は無視される。また、最初の '0', '#' の前に書かれている ',' は無視される。
; 1320 :             // 整数部にて、'0'の後に書かれている'#'は'0'と解釈される。
; 1321 :             // 小数部にて、'0'の前に書かれている'#'は'0'と解釈される。
; 1322 :             // '.'の前に '0'または '#'が一つもない場合は、'#' が一つだけあると解釈される。
; 1323 :             // 整数部の符号は最初の '#', '0'の前にどんなテキストがあろうとあらゆるテキストの最初に表示される。正値のときに自動的には'+'は表示されない。
; 1324 :             // Eの構文解析に失敗した場合はEは(そしてその次の+あるいは-も)一般テキストとしてそのまま表示される。
; 1325 :             // ⇒【例：(1.23456789).ToString("0.0E+#0  000") => 1.2E+34  568】
; 1326 :             // 逆に、構文として正しければEはどこに記述されていてもその場所のまま表示される。
; 1327 :             // ⇒【例：(-0.0123456789).ToString("0.0E+0  000") => -1.2E-2  346】
; 1328 :             // '.' が複数ある場合は最初のものを除いて無視される。【例：(-0.0123456789).ToString("0.0 00.00") => -0.0 1235】
; 1329 :             // 三つ目の';'の後の文字列は数値の符号が何であっても表示されない。つまり無視される。
; 1330 : 
; 1331 :             // c言語での実装はやめた方がいいかもしれない。理由：構文解析に動的メモリ獲得を使用しないと難易度が桁違いに上がり、動的メモリ獲得を使うとメモリリークがないことを保証するテストが大変。
; 1332 :             // 実装をどこでやるにしろ、１）多倍長整数の10進数としての桁数を調べる手段、２）１あるいは５と10のべき乗を掛けた値を取得する手段、はあると便利だと思う。それらを使って書式Eの実装をもっとスマートにやれたらいいかも。
; 1333 : 
; 1334 :             throw NotSupportedException(L"カスタム書式によるToStringはサポートされていません。");

  00004	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DO@MFGCBHKN@?$PP?$KL?$PP?$LJ?$PP?$LP?$PP?$OA?$PP?x?$AA?$AP?$AAk?$PP?$II?$PP?$IL?$AAT?$AAo?$AAS?$AAt?$AAr?$AAi@
  0000b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00010	e8 00 00 00 00	 call	 ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVNotSupportedException@Internal@Core@Math@Palmtree@@
  0001c	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00021	e8 00 00 00 00	 call	 _CxxThrowException
  00026	cc		 int	 3
$LN3@ToStringCu:
?ToStringCustom@CustomFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::CustomFormatter::ToStringCustom
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
root$1 = 40
writer$ = 72
x_sign$ = 160
x_abs$ = 168
format_type$ = 176
precision$ = 184
format_option$ = 192
buffer$ = 200
buffer_size$ = 208
?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX, COMDAT

; 1182 :         {

  00000	48 8b c4	 mov	 rax, rsp
  00003	66 44 89 40 18	 mov	 WORD PTR [rax+24], r8w
  00008	57		 push	 rdi
  00009	41 54		 push	 r12
  0000b	41 55		 push	 r13
  0000d	41 56		 push	 r14
  0000f	41 57		 push	 r15
  00011	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00015	48 c7 40 88 fe
	ff ff ff	 mov	 QWORD PTR [rax-120], -2
  0001d	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00021	48 89 68 10	 mov	 QWORD PTR [rax+16], rbp
  00025	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
  00029	45 0f b7 e0	 movzx	 r12d, r8w
  0002d	48 8b ea	 mov	 rbp, rdx
  00030	0f b6 f9	 movzx	 edi, cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00033	41 bd 01 00 00
	00		 mov	 r13d, 1
  00039	45 3b cd	 cmp	 r9d, r13d
  0003c	45 0f 4d e9	 cmovge	 r13d, r9d
  00040	45 33 ff	 xor	 r15d, r15d
  00043	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR buffer$[rsp]
  0004b	48 85 d2	 test	 rdx, rdx
  0004e	74 0e		 je	 SHORT $LN31@ToStringX
  00050	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR buffer_size$[rsp]
  00058	48 8d 04 42	 lea	 rax, QWORD PTR [rdx+rax*2]
  0005c	eb 03		 jmp	 SHORT $LN32@ToStringX
$LN31@ToStringX:
  0005e	49 8b c7	 mov	 rax, r15
$LN32@ToStringX:

; 201  :             _p = p;

  00061	48 89 54 24 50	 mov	 QWORD PTR writer$[rsp+8], rdx

; 202  :             _sob = sob;

  00066	48 89 54 24 58	 mov	 QWORD PTR writer$[rsp+16], rdx

; 203  :             _eob = eob;

  0006b	48 89 44 24 60	 mov	 QWORD PTR writer$[rsp+24], rax

; 204  :             _written = 0;

  00070	4c 89 7c 24 68	 mov	 QWORD PTR writer$[rsp+32], r15

; 210  :         {

  00075	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
  0007c	48 89 44 24 48	 mov	 QWORD PTR writer$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1187 :             if (x_abs->IS_ZERO)

  00081	f6 45 08 01	 test	 BYTE PTR [rbp+8], 1
  00085	74 31		 je	 SHORT $LN11@ToStringX

; 1188 :             {
; 1189 :                 // x == 0 の場合
; 1190 :                 // precision 桁だけ '0' を出力する。(precision == 0 であっても 1 桁だけは出力する)
; 1191 : 
; 1192 :                 writer.Write(L'0', precision);

  00087	49 63 fd	 movsxd	 rdi, r13d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  0008a	45 85 ed	 test	 r13d, r13d
  0008d	74 21		 je	 SHORT $LN37@ToStringX
  0008f	be 30 00 00 00	 mov	 esi, 48			; 00000030H
$LL36@ToStringX:

; 228  :             {
; 229  :                 Write(c);

  00094	8b d6		 mov	 edx, esi
  00096	48 8d 4c 24 48	 lea	 rcx, QWORD PTR writer$[rsp]
  0009b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0009e	48 83 ef 01	 sub	 rdi, 1

; 227  :             while (count > 0)

  000a2	74 07		 je	 SHORT $LN95@ToStringX
  000a4	48 8b 44 24 48	 mov	 rax, QWORD PTR writer$[rsp]
  000a9	eb e9		 jmp	 SHORT $LL36@ToStringX
$LN95@ToStringX:
  000ab	4c 8b 7c 24 68	 mov	 r15, QWORD PTR writer$[rsp+32]
$LN37@ToStringX:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1193 :                 return (writer.GetLength());

  000b0	49 8b c7	 mov	 rax, r15
  000b3	e9 f7 01 00 00	 jmp	 $LN12@ToStringX
$LN11@ToStringX:

; 1194 :             }
; 1195 :             else
; 1196 :             {
; 1197 :                 // x != 0 の場合
; 1198 :                 ResourceHolderUINT root;

  000b8	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$1[rsp]
  000bd	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000c2	90		 npad	 1

; 1199 :                 __UNIT_TYPE temp_buf_bit_count = x_abs->UNIT_BIT_COUNT + 4;

  000c3	4c 8b 75 20	 mov	 r14, QWORD PTR [rbp+32]

; 1200 :                 __UNIT_TYPE* temp_buf = root.AllocateBlock(temp_buf_bit_count);

  000c7	49 8d 56 04	 lea	 rdx, QWORD PTR [r14+4]
  000cb	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$1[rsp]
  000d0	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  000d5	48 8b d8	 mov	 rbx, rax

; 1201 :                 __UNIT_TYPE output_len;
; 1202 :                 wchar_t filling_char;
; 1203 :                 if (x_sign >= 0)

  000d8	48 8b 4d 18	 mov	 rcx, QWORD PTR [rbp+24]
  000dc	40 84 ff	 test	 dil, dil
  000df	48 8b f8	 mov	 rdi, rax
  000e2	78 6b		 js	 SHORT $LN13@ToStringX
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  000e4	48 8b 75 40	 mov	 rsi, QWORD PTR [rbp+64]
  000e8	f3 48 a5	 rep movsq

; 157  :             return ((u + v - 1) / v);

  000eb	49 8d 56 43	 lea	 rdx, QWORD PTR [r14+67]
  000ef	48 c1 ea 06	 shr	 rdx, 6
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1209 :                     output_len = temp_buf_word_count * (__UNIT_TYPE_BIT_COUNT / 4);

  000f3	48 8b fa	 mov	 rdi, rdx
  000f6	48 c1 e7 04	 shl	 rdi, 4

; 1210 :                     unsigned char* ptr = (unsigned char*)&temp_buf[temp_buf_word_count] - 1;

  000fa	48 8d 34 d5 ff
	ff ff ff	 lea	 rsi, QWORD PTR [rdx*8-1]
  00102	48 03 f0	 add	 rsi, rax

; 1211 :                     while (ptr >= (unsigned char*)temp_buf)

  00105	48 3b f0	 cmp	 rsi, rax
  00108	72 3b		 jb	 SHORT $LN63@ToStringX
  0010a	0f b6 0e	 movzx	 ecx, BYTE PTR [rsi]
  0010d	48 8d 56 ff	 lea	 rdx, QWORD PTR [rsi-1]
$LL2@ToStringX:

; 1212 :                     {
; 1213 :                         if ((ptr[0] >> 4) != 0 || (ptr[0] & 0xf) >= 0x8)

  00111	f6 c1 f0	 test	 cl, 240			; 000000f0H
  00114	75 2f		 jne	 SHORT $LN63@ToStringX
  00116	0f b6 c1	 movzx	 eax, cl
  00119	24 0f		 and	 al, 15
  0011b	3c 08		 cmp	 al, 8
  0011d	73 26		 jae	 SHORT $LN63@ToStringX

; 1214 :                             break;
; 1215 :                         // 最上位桁が '0' で、かつ次の桁が '0'～'7'である場合
; 1216 :                         // ⇒最上位桁の '0' を削除する
; 1217 :                         --output_len;

  0011f	48 ff cf	 dec	 rdi

; 1218 : 
; 1219 :                         if (&ptr[-1] < (unsigned char*)temp_buf)

  00122	48 3b d3	 cmp	 rdx, rbx
  00125	72 1e		 jb	 SHORT $LN63@ToStringX

; 1220 :                             break;
; 1221 : 
; 1222 :                         if (ptr[0] != 0 || (ptr[-1] >> 4) >= 0x8)

  00127	84 c9		 test	 cl, cl
  00129	75 1a		 jne	 SHORT $LN63@ToStringX
  0012b	0f b6 0a	 movzx	 ecx, BYTE PTR [rdx]
  0012e	0f b6 c1	 movzx	 eax, cl
  00131	24 f0		 and	 al, 240			; 000000f0H
  00133	3c 80		 cmp	 al, 128			; 00000080H
  00135	73 0e		 jae	 SHORT $LN63@ToStringX

; 1223 :                             break;
; 1224 :                         // 最上位桁が '0' で、かつ次の桁が '0'～'7'である場合
; 1225 :                         // ⇒最上位桁の '0' を削除する
; 1226 :                         --output_len;

  00137	48 ff cf	 dec	 rdi

; 1227 : 
; 1228 :                         --ptr;

  0013a	48 ff ce	 dec	 rsi
  0013d	48 ff ca	 dec	 rdx

; 1211 :                     while (ptr >= (unsigned char*)temp_buf)

  00140	48 3b f3	 cmp	 rsi, rbx
  00143	73 cc		 jae	 SHORT $LL2@ToStringX
$LN63@ToStringX:

; 1229 :                     }
; 1230 :                     filling_char = L'0';

  00145	be 30 00 00 00	 mov	 esi, 48			; 00000030H

; 1231 :                 }
; 1232 :                 else

  0014a	e9 a3 00 00 00	 jmp	 $LN14@ToStringX
$LN13@ToStringX:

; 1233 :                 {
; 1234 :                     // x < 0 の場合
; 1235 : 
; 1236 :                     __UNIT_TYPE *in_ptr = x_abs->BLOCK;

  0014f	48 8b 55 40	 mov	 rdx, QWORD PTR [rbp+64]

; 1237 :                     __UNIT_TYPE *out_ptr = temp_buf;
; 1238 :                     __UNIT_TYPE count = x_abs->UNIT_WORD_COUNT;
; 1239 :                     char carry = 1;

  00153	40 b6 01	 mov	 sil, 1

; 1240 :                     while (count > 0)

  00156	48 85 c9	 test	 rcx, rcx
  00159	74 2c		 je	 SHORT $LN5@ToStringX
  0015b	0f 1f 44 00 00	 npad	 5
$LL4@ToStringX:

; 1241 :                     {
; 1242 :                         carry = _ADD_UNIT(carry, ~*in_ptr, 0, out_ptr);

  00160	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00163	48 f7 d0	 not	 rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00166	40 80 c6 ff	 add	 sil, -1
  0016a	48 83 d0 00	 adc	 rax, 0
  0016e	40 0f 92 c6	 setb	 sil
  00172	48 89 07	 mov	 QWORD PTR [rdi], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1243 :                         ++in_ptr;

  00175	48 8d 52 08	 lea	 rdx, QWORD PTR [rdx+8]

; 1244 :                         ++out_ptr;

  00179	48 8d 7f 08	 lea	 rdi, QWORD PTR [rdi+8]

; 1245 :                         --count;

  0017d	48 83 e9 01	 sub	 rcx, 1

; 1240 :                     while (count > 0)

  00181	75 dd		 jne	 SHORT $LL4@ToStringX
  00183	48 8b 4d 18	 mov	 rcx, QWORD PTR [rbp+24]
$LN5@ToStringX:

; 1246 :                     }
; 1247 :                     output_len = x_abs->UNIT_WORD_COUNT * (__UNIT_TYPE_BIT_COUNT / 4);

  00187	48 8b f9	 mov	 rdi, rcx
  0018a	48 c1 e7 04	 shl	 rdi, 4

; 1248 :                     unsigned char* ptr = (unsigned char*)&temp_buf[x_abs->UNIT_WORD_COUNT] - 1;

  0018e	48 8d 53 ff	 lea	 rdx, QWORD PTR [rbx-1]
  00192	48 8d 14 ca	 lea	 rdx, QWORD PTR [rdx+rcx*8]

; 1249 :                     while (ptr >= (unsigned char*)temp_buf)

  00196	48 3b d3	 cmp	 rdx, rbx
  00199	72 44		 jb	 SHORT $LN66@ToStringX
  0019b	0f b6 0a	 movzx	 ecx, BYTE PTR [rdx]
  0019e	48 8d 72 ff	 lea	 rsi, QWORD PTR [rdx-1]
$LL6@ToStringX:

; 1250 :                     {
; 1251 :                         if ((ptr[0] >> 4) != 0xf || (ptr[0] & 0xf) < 0x8)

  001a2	0f b6 c1	 movzx	 eax, cl
  001a5	24 f0		 and	 al, 240			; 000000f0H
  001a7	3c f0		 cmp	 al, 240			; 000000f0H
  001a9	75 34		 jne	 SHORT $LN66@ToStringX
  001ab	80 e1 0f	 and	 cl, 15
  001ae	80 f9 08	 cmp	 cl, 8
  001b1	72 2c		 jb	 SHORT $LN66@ToStringX

; 1252 :                             break;
; 1253 :                         // 最上位桁が 'F' で、かつ次の桁が '8'～'F'である場合
; 1254 :                         // ⇒最上位桁の 'F' を削除する
; 1255 :                         *ptr &= 0x0f;

  001b3	88 0a		 mov	 BYTE PTR [rdx], cl

; 1256 :                         --output_len;

  001b5	48 ff cf	 dec	 rdi

; 1257 : 
; 1258 :                         if (&ptr[-1] < (unsigned char*)temp_buf)

  001b8	48 3b f3	 cmp	 rsi, rbx
  001bb	72 22		 jb	 SHORT $LN66@ToStringX

; 1259 :                             break;
; 1260 : 
; 1261 :                         if (ptr[0] == 0xf || (ptr[-1] >> 4) < 0x8)

  001bd	80 f9 0f	 cmp	 cl, 15
  001c0	74 1d		 je	 SHORT $LN66@ToStringX
  001c2	0f b6 0e	 movzx	 ecx, BYTE PTR [rsi]
  001c5	0f b6 c1	 movzx	 eax, cl
  001c8	24 f0		 and	 al, 240			; 000000f0H
  001ca	3c 80		 cmp	 al, 128			; 00000080H
  001cc	72 11		 jb	 SHORT $LN66@ToStringX

; 1262 :                             break;
; 1263 :                         // 最上位桁が 'F' で、かつ次の桁が '8'～'F'である場合
; 1264 :                         // ⇒最上位桁の 'F' を削除する
; 1265 :                         *ptr = 0;

  001ce	c6 02 00	 mov	 BYTE PTR [rdx], 0

; 1266 :                         --output_len;

  001d1	48 ff cf	 dec	 rdi

; 1267 : 
; 1268 :                         --ptr;

  001d4	48 ff ca	 dec	 rdx
  001d7	48 ff ce	 dec	 rsi

; 1249 :                     while (ptr >= (unsigned char*)temp_buf)

  001da	48 3b d3	 cmp	 rdx, rbx
  001dd	73 c3		 jae	 SHORT $LL6@ToStringX
$LN66@ToStringX:

; 1269 :                     }
; 1270 :                     filling_char = format_type == L'X' ? L'F' : L'f';

  001df	be 66 00 00 00	 mov	 esi, 102		; 00000066H
  001e4	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  001e9	66 41 83 fc 58	 cmp	 r12w, 88		; 00000058H
  001ee	66 0f 44 f1	 cmove	 si, cx
$LN14@ToStringX:

; 1271 :                 }
; 1272 :                 root.CheckBlock(temp_buf);

  001f2	48 8b d3	 mov	 rdx, rbx
  001f5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$1[rsp]
  001fa	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 157  :             return ((u + v - 1) / v);

  001ff	4c 8d 67 0f	 lea	 r12, QWORD PTR [rdi+15]
  00203	49 c1 ec 04	 shr	 r12, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1278 :                 unsigned int leading_zero_digit_count = (unsigned int)(_DIVIDE_CEILING_UNIT(output_len, __UNIT_TYPE_BIT_COUNT / 4) * (__UNIT_TYPE_BIT_COUNT / 4) - output_len);

  00207	45 8b f4	 mov	 r14d, r12d
  0020a	41 c1 e6 04	 shl	 r14d, 4
  0020e	44 2b f7	 sub	 r14d, edi

; 1279 : 
; 1280 : 
; 1281 :                 __UNIT_TYPE filling_digit_len; // 塗りつぶす上位桁の桁数
; 1282 :                 __UNIT_TYPE total_length; // 出力する合計の桁数
; 1283 :                 if (output_len < (__UNIT_TYPE)precision)

  00211	49 63 c5	 movsxd	 rax, r13d

; 1284 :                 {
; 1285 :                     filling_digit_len = precision - output_len;
; 1286 :                     total_length = precision;
; 1287 :                 }
; 1288 :                 else
; 1289 :                 {
; 1290 :                     filling_digit_len = 0;
; 1291 :                     total_length = output_len;
; 1292 :                 }
; 1293 :                 writer.Write(filling_char, filling_digit_len);

  00214	48 8b e8	 mov	 rbp, rax
  00217	48 2b ef	 sub	 rbp, rdi
  0021a	48 3b f8	 cmp	 rdi, rax
  0021d	49 0f 43 ef	 cmovae	 rbp, r15
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00221	48 85 ed	 test	 rbp, rbp
  00224	74 20		 je	 SHORT $LN51@ToStringX
  00226	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL50@ToStringX:

; 228  :             {
; 229  :                 Write(c);

  00230	48 8b 44 24 48	 mov	 rax, QWORD PTR writer$[rsp]
  00235	0f b7 d6	 movzx	 edx, si
  00238	48 8d 4c 24 48	 lea	 rcx, QWORD PTR writer$[rsp]
  0023d	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  00240	48 83 ed 01	 sub	 rbp, 1

; 227  :             while (count > 0)

  00244	75 ea		 jne	 SHORT $LL50@ToStringX
$LN51@ToStringX:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1295 :                 __UNIT_TYPE* s_ptr = &temp_buf[_DIVIDE_CEILING_UNIT(output_len, __UNIT_TYPE_BIT_COUNT / 4) - 1];

  00246	4a 8d 3c e3	 lea	 rdi, QWORD PTR [rbx+r12*8]

; 1296 :                 wchar_t* digit_table = format_type == L'X' ? hexadecimal_upper_digits : hexadecimal_lower_digits;

  0024a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?hexadecimal_upper_digits@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@3PA_WA
  00251	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:?hexadecimal_lower_digits@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@3PA_WA
  00258	66 83 bc 24 b0
	00 00 00 58	 cmp	 WORD PTR format_type$[rsp], 88 ; 00000058H
  00261	48 0f 44 f0	 cmove	 rsi, rax

; 1297 :                 OutputHexNumberSequenceOneWord(*s_ptr, leading_zero_digit_count, digit_table, &writer);

  00265	4c 8d 4c 24 48	 lea	 r9, QWORD PTR writer$[rsp]
  0026a	4c 8b c6	 mov	 r8, rsi
  0026d	41 8b d6	 mov	 edx, r14d
  00270	48 8b 4f f8	 mov	 rcx, QWORD PTR [rdi-8]
  00274	e8 00 00 00 00	 call	 ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::OutputHexNumberSequenceOneWord

; 1295 :                 __UNIT_TYPE* s_ptr = &temp_buf[_DIVIDE_CEILING_UNIT(output_len, __UNIT_TYPE_BIT_COUNT / 4) - 1];

  00279	48 83 ef 10	 sub	 rdi, 16

; 1298 :                 --s_ptr;
; 1299 :                 while (s_ptr >= temp_buf)

  0027d	48 3b fb	 cmp	 rdi, rbx
  00280	72 1b		 jb	 SHORT $LN9@ToStringX
$LL8@ToStringX:

; 1300 :                 {
; 1301 :                     OutputHexNumberSequenceOneWord(*s_ptr, 0, digit_table, &writer);

  00282	4c 8d 4c 24 48	 lea	 r9, QWORD PTR writer$[rsp]
  00287	4c 8b c6	 mov	 r8, rsi
  0028a	33 d2		 xor	 edx, edx
  0028c	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0028f	e8 00 00 00 00	 call	 ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::OutputHexNumberSequenceOneWord

; 1302 :                     --s_ptr;

  00294	48 83 ef 08	 sub	 rdi, 8

; 1298 :                 --s_ptr;
; 1299 :                 while (s_ptr >= temp_buf)

  00298	48 3b fb	 cmp	 rdi, rbx
  0029b	73 e5		 jae	 SHORT $LL8@ToStringX
$LN9@ToStringX:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 250  :             return (_written);

  0029d	48 8b 7c 24 68	 mov	 rdi, QWORD PTR writer$[rsp+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1304 :                 return (writer.GetLength());

  002a2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$1[rsp]
  002a7	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  002ac	48 8b c7	 mov	 rax, rdi
$LN12@ToStringX:

; 1305 :             }
; 1306 :         }

  002af	4c 8d 5c 24 70	 lea	 r11, QWORD PTR [rsp+112]
  002b4	49 8b 5b 30	 mov	 rbx, QWORD PTR [r11+48]
  002b8	49 8b 6b 38	 mov	 rbp, QWORD PTR [r11+56]
  002bc	49 8b 73 48	 mov	 rsi, QWORD PTR [r11+72]
  002c0	49 8b e3	 mov	 rsp, r11
  002c3	41 5f		 pop	 r15
  002c5	41 5e		 pop	 r14
  002c7	41 5d		 pop	 r13
  002c9	41 5c		 pop	 r12
  002cb	5f		 pop	 rdi
  002cc	c3		 ret	 0
?ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$1 = 40
writer$ = 72
x_sign$ = 160
x_abs$ = 168
format_type$ = 176
precision$ = 184
format_option$ = 192
buffer$ = 200
buffer_size$ = 208
?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$1 = 40
writer$ = 72
x_sign$ = 160
x_abs$ = 168
format_type$ = 176
precision$ = 184
format_option$ = 192
buffer$ = 200
buffer_size$ = 208
?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??ToStringX@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::HexaDecimalFormatter::ToStringX'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z
_TEXT	SEGMENT
x$ = 48
skip_digit_len$ = 56
digit_table$ = 64
writer$ = 72
?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z PROC ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::OutputHexNumberSequenceOneWord, COMDAT

; 1121 :         {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	49 8b f9	 mov	 rdi, r9
  00017	49 8b f0	 mov	 rsi, r8
  0001a	48 8b d9	 mov	 rbx, rcx

; 1122 :             if (sizeof(__UNIT_TYPE) > sizeof(_UINT64_T))
; 1123 :             {
; 1124 :                 // 64bit を超える __UNIT_TYPE には未対応
; 1125 :                 // 対応するには以降のコーディングを見直す必要がある
; 1126 :                 throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_tostring.cpp;OutputHexNumberSequenceOneWord;1");
; 1127 :             }
; 1128 :             unsigned int count = __UNIT_TYPE_BIT_COUNT / 4;

  0001d	bd 10 00 00 00	 mov	 ebp, 16

; 1129 :             if (skip_digit_len > 0)

  00022	85 d2		 test	 edx, edx
  00024	74 0c		 je	 SHORT $LN3@OutputHexN

; 1130 :             {
; 1131 :                 x = _ROTATE_L_UNIT(x, 4 * skip_digit_len);

  00026	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [rdx*4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  0002d	48 d3 c3	 rol	 rbx, cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1132 :                 count -= skip_digit_len;

  00030	2b ea		 sub	 ebp, edx
$LN3@OutputHexN:

; 1133 :             }
; 1134 :             if (count & 0x10)

  00032	40 f6 c5 10	 test	 bpl, 16
  00036	0f 84 68 01 00
	00		 je	 $LN4@OutputHexN

; 1136 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0003c	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  0003f	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00042	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1136 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00046	48 8b c3	 mov	 rax, rbx
  00049	83 e0 0f	 and	 eax, 15
  0004c	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00050	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1137 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00054	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00057	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  0005a	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1137 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0005e	48 8b c3	 mov	 rax, rbx
  00061	83 e0 0f	 and	 eax, 15
  00064	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00068	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1138 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0006c	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0006f	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00072	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1138 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00076	48 8b c3	 mov	 rax, rbx
  00079	83 e0 0f	 and	 eax, 15
  0007c	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00080	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1139 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00084	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00087	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  0008a	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1139 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0008e	48 8b c3	 mov	 rax, rbx
  00091	83 e0 0f	 and	 eax, 15
  00094	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00098	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1140 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0009c	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0009f	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  000a2	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1140 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000a6	48 8b c3	 mov	 rax, rbx
  000a9	83 e0 0f	 and	 eax, 15
  000ac	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  000b0	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1141 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000b4	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  000b7	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  000ba	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1141 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000be	48 8b c3	 mov	 rax, rbx
  000c1	83 e0 0f	 and	 eax, 15
  000c4	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  000c8	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1142 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000cc	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  000cf	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  000d2	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1142 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000d6	48 8b c3	 mov	 rax, rbx
  000d9	83 e0 0f	 and	 eax, 15
  000dc	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  000e0	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1143 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000e4	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  000e7	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  000ea	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1143 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000ee	48 8b c3	 mov	 rax, rbx
  000f1	83 e0 0f	 and	 eax, 15
  000f4	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  000f8	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1144 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  000fc	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  000ff	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00102	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1144 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00106	48 8b c3	 mov	 rax, rbx
  00109	83 e0 0f	 and	 eax, 15
  0010c	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00110	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1145 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00114	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00117	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  0011a	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1145 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0011e	48 8b c3	 mov	 rax, rbx
  00121	83 e0 0f	 and	 eax, 15
  00124	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00128	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1146 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0012c	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0012f	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00132	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1146 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00136	48 8b c3	 mov	 rax, rbx
  00139	83 e0 0f	 and	 eax, 15
  0013c	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00140	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1147 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00144	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00147	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1147 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0014b	48 8b c3	 mov	 rax, rbx
  0014e	83 e0 0f	 and	 eax, 15
  00151	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00155	48 8b cf	 mov	 rcx, rdi
  00158	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1148 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0015c	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0015f	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00162	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1148 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00166	48 8b c3	 mov	 rax, rbx
  00169	83 e0 0f	 and	 eax, 15
  0016c	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00170	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1149 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00174	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00177	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  0017a	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1149 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0017e	48 8b c3	 mov	 rax, rbx
  00181	83 e0 0f	 and	 eax, 15
  00184	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00188	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1150 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0018c	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0018f	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00192	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1150 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00196	48 8b c3	 mov	 rax, rbx
  00199	83 e0 0f	 and	 eax, 15
  0019c	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  001a0	41 ff 50 08	 call	 QWORD PTR [r8+8]
$LN4@OutputHexN:

; 1151 :             }
; 1152 :             if (count & 0x8)

  001a4	40 f6 c5 08	 test	 bpl, 8
  001a8	0f 84 c0 00 00
	00		 je	 $LN5@OutputHexN

; 1154 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  001ae	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  001b1	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  001b4	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1154 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  001b8	48 8b c3	 mov	 rax, rbx
  001bb	83 e0 0f	 and	 eax, 15
  001be	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  001c2	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1155 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  001c6	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  001c9	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  001cc	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1155 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  001d0	48 8b c3	 mov	 rax, rbx
  001d3	83 e0 0f	 and	 eax, 15
  001d6	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  001da	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1156 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  001de	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  001e1	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  001e4	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1156 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  001e8	48 8b c3	 mov	 rax, rbx
  001eb	83 e0 0f	 and	 eax, 15
  001ee	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  001f2	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1157 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  001f6	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  001f9	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  001fc	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1157 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00200	48 8b c3	 mov	 rax, rbx
  00203	83 e0 0f	 and	 eax, 15
  00206	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  0020a	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1158 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0020e	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00211	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00214	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1158 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00218	48 8b c3	 mov	 rax, rbx
  0021b	83 e0 0f	 and	 eax, 15
  0021e	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00222	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1159 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00226	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00229	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  0022c	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1159 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00230	48 8b c3	 mov	 rax, rbx
  00233	83 e0 0f	 and	 eax, 15
  00236	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  0023a	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1160 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0023e	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00241	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00244	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1160 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00248	48 8b c3	 mov	 rax, rbx
  0024b	83 e0 0f	 and	 eax, 15
  0024e	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00252	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1161 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00256	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00259	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  0025c	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1161 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00260	48 8b c3	 mov	 rax, rbx
  00263	83 e0 0f	 and	 eax, 15
  00266	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  0026a	41 ff 50 08	 call	 QWORD PTR [r8+8]
$LN5@OutputHexN:

; 1162 :             }
; 1163 :             if (count & 0x4)

  0026e	40 f6 c5 04	 test	 bpl, 4
  00272	74 60		 je	 SHORT $LN6@OutputHexN

; 1165 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00274	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00277	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  0027a	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1165 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0027e	48 8b c3	 mov	 rax, rbx
  00281	83 e0 0f	 and	 eax, 15
  00284	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00288	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1166 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0028c	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0028f	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00292	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1166 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00296	48 8b c3	 mov	 rax, rbx
  00299	83 e0 0f	 and	 eax, 15
  0029c	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  002a0	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1167 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002a4	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  002a7	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  002aa	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1167 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002ae	48 8b c3	 mov	 rax, rbx
  002b1	83 e0 0f	 and	 eax, 15
  002b4	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  002b8	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1168 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002bc	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  002bf	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  002c2	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1168 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002c6	48 8b c3	 mov	 rax, rbx
  002c9	83 e0 0f	 and	 eax, 15
  002cc	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  002d0	41 ff 50 08	 call	 QWORD PTR [r8+8]
$LN6@OutputHexN:

; 1169 :             }
; 1170 :             if (count & 0x2)

  002d4	40 f6 c5 02	 test	 bpl, 2
  002d8	74 30		 je	 SHORT $LN7@OutputHexN

; 1172 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002da	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  002dd	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  002e0	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1172 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002e4	48 8b c3	 mov	 rax, rbx
  002e7	83 e0 0f	 and	 eax, 15
  002ea	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  002ee	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 1173 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002f2	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  002f5	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  002f8	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1173 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  002fc	48 8b c3	 mov	 rax, rbx
  002ff	83 e0 0f	 and	 eax, 15
  00302	0f b7 14 46	 movzx	 edx, WORD PTR [rsi+rax*2]
  00306	41 ff 50 08	 call	 QWORD PTR [r8+8]
$LN7@OutputHexN:

; 1174 :             }
; 1175 :             if (count & 0x1)

  0030a	40 f6 c5 01	 test	 bpl, 1
  0030e	74 14		 je	 SHORT $LN8@OutputHexN

; 1177 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  00310	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00313	48 8b cf	 mov	 rcx, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 333  :             return (_rotl64(x, count));

  00316	48 c1 c3 04	 rol	 rbx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1177 :                 x = _ROTATE_L_UNIT(x, 4); writer->Write(digit_table[x & 0x0f]);

  0031a	83 e3 0f	 and	 ebx, 15
  0031d	0f b7 14 5e	 movzx	 edx, WORD PTR [rsi+rbx*2]
  00321	ff 50 08	 call	 QWORD PTR [rax+8]
$LN8@OutputHexN:

; 1178 :             }
; 1179 :         }

  00324	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00329	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  0032e	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00333	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00337	5f		 pop	 rdi
  00338	c3		 ret	 0
?OutputHexNumberSequenceOneWord@HexaDecimalFormatter@Internal@Core@Math@Palmtree@@YAX_KIPEA_WPEAVStringWriter@2345@@Z ENDP ; Palmtree::Math::Core::Internal::HexaDecimalFormatter::OutputHexNumberSequenceOneWord
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
formatter$ = 32
writer$ = 72
x_sign$ = 128
x_abs$ = 136
format_type$ = 144
precision$ = 152
format_option$ = 160
buffer$ = 168
buffer_size$ = 176
?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP, COMDAT

; 1105 :         {

  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00004	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR buffer$[rsp]
  0000c	4d 85 c0	 test	 r8, r8
  0000f	74 0e		 je	 SHORT $LN5@ToStringP
  00011	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR buffer_size$[rsp]
  00019	4d 8d 14 40	 lea	 r10, QWORD PTR [r8+rax*2]
  0001d	eb 03		 jmp	 SHORT $LN6@ToStringP
$LN5@ToStringP:
  0001f	45 33 d2	 xor	 r10d, r10d
$LN6@ToStringP:

; 210  :         {

  00022	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@

; 201  :             _p = p;

  00029	4c 89 44 24 50	 mov	 QWORD PTR writer$[rsp+8], r8

; 210  :         {

  0002e	48 89 44 24 48	 mov	 QWORD PTR writer$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00033	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  0003d	48 89 44 24 28	 mov	 QWORD PTR formatter$[rsp+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00042	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  00047	66 89 44 24 34	 mov	 WORD PTR formatter$[rsp+20], ax

; 206  :                 _number_format_info = number_format_info;

  0004c	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR format_option$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  00054	4c 89 44 24 58	 mov	 QWORD PTR writer$[rsp+16], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1108 :             formatter.Format(x_sign, x_abs, &writer);

  00059	4c 8b c2	 mov	 r8, rdx

; 206  :                 _number_format_info = number_format_info;

  0005c	48 89 44 24 40	 mov	 QWORD PTR formatter$[rsp+32], rax

; 1108 :             formatter.Format(x_sign, x_abs, &writer);

  00061	0f b6 d1	 movzx	 edx, cl

; 881  :             {

  00064	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 205  :                 _precision = precision;

  0006b	44 89 4c 24 38	 mov	 DWORD PTR formatter$[rsp+24], r9d

; 1108 :             formatter.Format(x_sign, x_abs, &writer);

  00070	4c 8d 4c 24 48	 lea	 r9, QWORD PTR writer$[rsp]

; 881  :             {

  00075	48 89 44 24 20	 mov	 QWORD PTR formatter$[rsp], rax

; 1108 :             formatter.Format(x_sign, x_abs, &writer);

  0007a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR formatter$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 203  :             _eob = eob;

  0007f	4c 89 54 24 60	 mov	 QWORD PTR writer$[rsp+24], r10

; 204  :             _written = 0;

  00084	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR writer$[rsp+32], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 191  :             const int digit_count_on_word = 19;

  0008d	c7 44 24 30 13
	00 00 00	 mov	 DWORD PTR formatter$[rsp+16], 19

; 1108 :             formatter.Format(x_sign, x_abs, &writer);

  00095	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1109 :             return (writer.GetLength());

  0009a	48 8b 44 24 68	 mov	 rax, QWORD PTR writer$[rsp+32]

; 1110 :         }

  0009f	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000a3	c3		 ret	 0
?ToStringP@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
formatter$ = 32
writer$ = 72
x_sign$ = 128
x_abs$ = 136
format_type$ = 144
precision$ = 152
format_option$ = 160
buffer$ = 168
buffer_size$ = 176
?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN, COMDAT

; 1096 :         {

  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00004	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR buffer$[rsp]
  0000c	4d 85 c0	 test	 r8, r8
  0000f	74 0e		 je	 SHORT $LN5@ToStringN
  00011	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR buffer_size$[rsp]
  00019	4d 8d 14 40	 lea	 r10, QWORD PTR [r8+rax*2]
  0001d	eb 03		 jmp	 SHORT $LN6@ToStringN
$LN5@ToStringN:
  0001f	45 33 d2	 xor	 r10d, r10d
$LN6@ToStringN:

; 210  :         {

  00022	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@

; 201  :             _p = p;

  00029	4c 89 44 24 50	 mov	 QWORD PTR writer$[rsp+8], r8

; 210  :         {

  0002e	48 89 44 24 48	 mov	 QWORD PTR writer$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00033	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  0003d	48 89 44 24 28	 mov	 QWORD PTR formatter$[rsp+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00042	b8 4e 00 00 00	 mov	 eax, 78			; 0000004eH
  00047	66 89 44 24 34	 mov	 WORD PTR formatter$[rsp+20], ax

; 206  :                 _number_format_info = number_format_info;

  0004c	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR format_option$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  00054	4c 89 44 24 58	 mov	 QWORD PTR writer$[rsp+16], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1099 :             formatter.Format(x_sign, x_abs, &writer);

  00059	4c 8b c2	 mov	 r8, rdx

; 206  :                 _number_format_info = number_format_info;

  0005c	48 89 44 24 40	 mov	 QWORD PTR formatter$[rsp+32], rax

; 1099 :             formatter.Format(x_sign, x_abs, &writer);

  00061	0f b6 d1	 movzx	 edx, cl

; 781  :             {

  00064	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 205  :                 _precision = precision;

  0006b	44 89 4c 24 38	 mov	 DWORD PTR formatter$[rsp+24], r9d

; 1099 :             formatter.Format(x_sign, x_abs, &writer);

  00070	4c 8d 4c 24 48	 lea	 r9, QWORD PTR writer$[rsp]

; 781  :             {

  00075	48 89 44 24 20	 mov	 QWORD PTR formatter$[rsp], rax

; 1099 :             formatter.Format(x_sign, x_abs, &writer);

  0007a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR formatter$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 203  :             _eob = eob;

  0007f	4c 89 54 24 60	 mov	 QWORD PTR writer$[rsp+24], r10

; 204  :             _written = 0;

  00084	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR writer$[rsp+32], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 191  :             const int digit_count_on_word = 19;

  0008d	c7 44 24 30 13
	00 00 00	 mov	 DWORD PTR formatter$[rsp+16], 19

; 1099 :             formatter.Format(x_sign, x_abs, &writer);

  00095	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1100 :             return (writer.GetLength());

  0009a	48 8b 44 24 68	 mov	 rax, QWORD PTR writer$[rsp+32]

; 1101 :         }

  0009f	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000a3	c3		 ret	 0
?ToStringN@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringN
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
formatter$ = 32
writer$ = 72
x_sign$ = 128
x_abs$ = 136
format_type$ = 144
precision$ = 152
format_option$ = 160
buffer$ = 168
buffer_size$ = 176
?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF, COMDAT

; 1088 :         {

  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00004	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR buffer$[rsp]
  0000c	4d 85 c0	 test	 r8, r8
  0000f	74 0e		 je	 SHORT $LN5@ToStringF
  00011	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR buffer_size$[rsp]
  00019	4d 8d 14 40	 lea	 r10, QWORD PTR [r8+rax*2]
  0001d	eb 03		 jmp	 SHORT $LN6@ToStringF
$LN5@ToStringF:
  0001f	45 33 d2	 xor	 r10d, r10d
$LN6@ToStringF:

; 210  :         {

  00022	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@

; 201  :             _p = p;

  00029	4c 89 44 24 50	 mov	 QWORD PTR writer$[rsp+8], r8

; 210  :         {

  0002e	48 89 44 24 48	 mov	 QWORD PTR writer$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00033	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  0003d	48 89 44 24 28	 mov	 QWORD PTR formatter$[rsp+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00042	b8 46 00 00 00	 mov	 eax, 70			; 00000046H
  00047	66 89 44 24 34	 mov	 WORD PTR formatter$[rsp+20], ax

; 206  :                 _number_format_info = number_format_info;

  0004c	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR format_option$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  00054	4c 89 44 24 58	 mov	 QWORD PTR writer$[rsp+16], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1091 :             formatter.Format(x_sign, x_abs, &writer);

  00059	4c 8b c2	 mov	 r8, rdx

; 206  :                 _number_format_info = number_format_info;

  0005c	48 89 44 24 40	 mov	 QWORD PTR formatter$[rsp+32], rax

; 1091 :             formatter.Format(x_sign, x_abs, &writer);

  00061	0f b6 d1	 movzx	 edx, cl

; 735  :             {

  00064	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 205  :                 _precision = precision;

  0006b	44 89 4c 24 38	 mov	 DWORD PTR formatter$[rsp+24], r9d

; 1091 :             formatter.Format(x_sign, x_abs, &writer);

  00070	4c 8d 4c 24 48	 lea	 r9, QWORD PTR writer$[rsp]

; 735  :             {

  00075	48 89 44 24 20	 mov	 QWORD PTR formatter$[rsp], rax

; 1091 :             formatter.Format(x_sign, x_abs, &writer);

  0007a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR formatter$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 203  :             _eob = eob;

  0007f	4c 89 54 24 60	 mov	 QWORD PTR writer$[rsp+24], r10

; 204  :             _written = 0;

  00084	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR writer$[rsp+32], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 191  :             const int digit_count_on_word = 19;

  0008d	c7 44 24 30 13
	00 00 00	 mov	 DWORD PTR formatter$[rsp+16], 19

; 1091 :             formatter.Format(x_sign, x_abs, &writer);

  00095	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1092 :             return (writer.GetLength());

  0009a	48 8b 44 24 68	 mov	 rax, QWORD PTR writer$[rsp+32]

; 1093 :         }

  0009f	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000a3	c3		 ret	 0
?ToStringF@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringF
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
formatter$ = 32
writer$ = 72
x_sign$ = 128
x_abs$ = 136
format_type$ = 144
precision$ = 152
format_option$ = 160
buffer$ = 168
buffer_size$ = 176
?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE, COMDAT

; 1080 :         {

  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00004	4c 8b 94 24 a8
	00 00 00	 mov	 r10, QWORD PTR buffer$[rsp]
  0000c	4d 85 d2	 test	 r10, r10
  0000f	74 0e		 je	 SHORT $LN5@ToStringE
  00011	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR buffer_size$[rsp]
  00019	4d 8d 1c 42	 lea	 r11, QWORD PTR [r10+rax*2]
  0001d	eb 03		 jmp	 SHORT $LN6@ToStringE
$LN5@ToStringE:
  0001f	45 33 db	 xor	 r11d, r11d
$LN6@ToStringE:

; 210  :         {

  00022	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 204  :                 _format_type = format_type;

  00029	66 44 89 44 24
	34		 mov	 WORD PTR formatter$[rsp+20], r8w
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 210  :         {

  0002f	48 89 44 24 48	 mov	 QWORD PTR writer$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1083 :             formatter.Format(x_sign, x_abs, &writer);

  00034	4c 8b c2	 mov	 r8, rdx

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00037	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H

; 205  :                 _precision = precision;

  00041	44 89 4c 24 38	 mov	 DWORD PTR formatter$[rsp+24], r9d
  00046	48 89 44 24 28	 mov	 QWORD PTR formatter$[rsp+8], rax

; 1083 :             formatter.Format(x_sign, x_abs, &writer);

  0004b	4c 8d 4c 24 48	 lea	 r9, QWORD PTR writer$[rsp]

; 206  :                 _number_format_info = number_format_info;

  00050	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR format_option$[rsp]

; 1083 :             formatter.Format(x_sign, x_abs, &writer);

  00058	0f b6 d1	 movzx	 edx, cl

; 206  :                 _number_format_info = number_format_info;

  0005b	48 89 44 24 40	 mov	 QWORD PTR formatter$[rsp+32], rax

; 1083 :             formatter.Format(x_sign, x_abs, &writer);

  00060	48 8d 4c 24 20	 lea	 rcx, QWORD PTR formatter$[rsp]

; 651  :             {

  00065	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 201  :             _p = p;

  0006c	4c 89 54 24 50	 mov	 QWORD PTR writer$[rsp+8], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 651  :             {

  00071	48 89 44 24 20	 mov	 QWORD PTR formatter$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  00076	4c 89 54 24 58	 mov	 QWORD PTR writer$[rsp+16], r10

; 203  :             _eob = eob;

  0007b	4c 89 5c 24 60	 mov	 QWORD PTR writer$[rsp+24], r11

; 204  :             _written = 0;

  00080	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR writer$[rsp+32], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 191  :             const int digit_count_on_word = 19;

  00089	c7 44 24 30 13
	00 00 00	 mov	 DWORD PTR formatter$[rsp+16], 19

; 1083 :             formatter.Format(x_sign, x_abs, &writer);

  00091	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1084 :             return (writer.GetLength());

  00096	48 8b 44 24 68	 mov	 rax, QWORD PTR writer$[rsp+32]

; 1085 :         }

  0009b	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0009f	c3		 ret	 0
?ToStringE@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringE
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
formatter$ = 32
writer$ = 72
x_sign$ = 128
x_abs$ = 136
format_type$ = 144
precision$ = 152
format_option$ = 160
buffer$ = 168
buffer_size$ = 176
?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD, COMDAT

; 1072 :         {

  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00004	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR buffer$[rsp]
  0000c	4d 85 c0	 test	 r8, r8
  0000f	74 0e		 je	 SHORT $LN5@ToStringD
  00011	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR buffer_size$[rsp]
  00019	4d 8d 14 40	 lea	 r10, QWORD PTR [r8+rax*2]
  0001d	eb 03		 jmp	 SHORT $LN6@ToStringD
$LN5@ToStringD:
  0001f	45 33 d2	 xor	 r10d, r10d
$LN6@ToStringD:

; 210  :         {

  00022	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@

; 201  :             _p = p;

  00029	4c 89 44 24 50	 mov	 QWORD PTR writer$[rsp+8], r8

; 210  :         {

  0002e	48 89 44 24 48	 mov	 QWORD PTR writer$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00033	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  0003d	48 89 44 24 28	 mov	 QWORD PTR formatter$[rsp+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00042	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00047	66 89 44 24 34	 mov	 WORD PTR formatter$[rsp+20], ax

; 206  :                 _number_format_info = number_format_info;

  0004c	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR format_option$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  00054	4c 89 44 24 58	 mov	 QWORD PTR writer$[rsp+16], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1075 :             formatter.Format(x_sign, x_abs, &writer);

  00059	4c 8b c2	 mov	 r8, rdx

; 206  :                 _number_format_info = number_format_info;

  0005c	48 89 44 24 40	 mov	 QWORD PTR formatter$[rsp+32], rax

; 1075 :             formatter.Format(x_sign, x_abs, &writer);

  00061	0f b6 d1	 movzx	 edx, cl

; 614  :             {

  00064	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 205  :                 _precision = precision;

  0006b	44 89 4c 24 38	 mov	 DWORD PTR formatter$[rsp+24], r9d

; 1075 :             formatter.Format(x_sign, x_abs, &writer);

  00070	4c 8d 4c 24 48	 lea	 r9, QWORD PTR writer$[rsp]

; 614  :             {

  00075	48 89 44 24 20	 mov	 QWORD PTR formatter$[rsp], rax

; 1075 :             formatter.Format(x_sign, x_abs, &writer);

  0007a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR formatter$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 203  :             _eob = eob;

  0007f	4c 89 54 24 60	 mov	 QWORD PTR writer$[rsp+24], r10

; 204  :             _written = 0;

  00084	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR writer$[rsp+32], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 191  :             const int digit_count_on_word = 19;

  0008d	c7 44 24 30 13
	00 00 00	 mov	 DWORD PTR formatter$[rsp+16], 19

; 1075 :             formatter.Format(x_sign, x_abs, &writer);

  00095	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1076 :             return (writer.GetLength());

  0009a	48 8b 44 24 68	 mov	 rax, QWORD PTR writer$[rsp+32]

; 1077 :         }

  0009f	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000a3	c3		 ret	 0
?ToStringD@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringD
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z
_TEXT	SEGMENT
formatter$ = 32
writer$ = 72
x_sign$ = 128
x_abs$ = 136
format_type$ = 144
precision$ = 152
format_option$ = 160
buffer$ = 168
buffer_size$ = 176
?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC, COMDAT

; 1064 :         {

  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00004	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR buffer$[rsp]
  0000c	4d 85 c0	 test	 r8, r8
  0000f	74 0e		 je	 SHORT $LN5@ToStringC
  00011	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR buffer_size$[rsp]
  00019	4d 8d 14 40	 lea	 r10, QWORD PTR [r8+rax*2]
  0001d	eb 03		 jmp	 SHORT $LN6@ToStringC
$LN5@ToStringC:
  0001f	45 33 d2	 xor	 r10d, r10d
$LN6@ToStringC:

; 210  :         {

  00022	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@

; 201  :             _p = p;

  00029	4c 89 44 24 50	 mov	 QWORD PTR writer$[rsp+8], r8

; 210  :         {

  0002e	48 89 44 24 48	 mov	 QWORD PTR writer$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00033	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  0003d	48 89 44 24 28	 mov	 QWORD PTR formatter$[rsp+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00042	b8 43 00 00 00	 mov	 eax, 67			; 00000043H
  00047	66 89 44 24 34	 mov	 WORD PTR formatter$[rsp+20], ax

; 206  :                 _number_format_info = number_format_info;

  0004c	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR format_option$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  00054	4c 89 44 24 58	 mov	 QWORD PTR writer$[rsp+16], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  00059	4c 8b c2	 mov	 r8, rdx

; 206  :                 _number_format_info = number_format_info;

  0005c	48 89 44 24 40	 mov	 QWORD PTR formatter$[rsp+32], rax

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  00061	0f b6 d1	 movzx	 edx, cl

; 404  :             {

  00064	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 205  :                 _precision = precision;

  0006b	44 89 4c 24 38	 mov	 DWORD PTR formatter$[rsp+24], r9d

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  00070	4c 8d 4c 24 48	 lea	 r9, QWORD PTR writer$[rsp]

; 404  :             {

  00075	48 89 44 24 20	 mov	 QWORD PTR formatter$[rsp], rax

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  0007a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR formatter$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 203  :             _eob = eob;

  0007f	4c 89 54 24 60	 mov	 QWORD PTR writer$[rsp+24], r10

; 204  :             _written = 0;

  00084	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR writer$[rsp+32], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 191  :             const int digit_count_on_word = 19;

  0008d	c7 44 24 30 13
	00 00 00	 mov	 DWORD PTR formatter$[rsp+16], 19

; 1067 :             formatter.Format(x_sign, x_abs, &writer);

  00095	e8 00 00 00 00	 call	 ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format

; 1068 :             return (writer.GetLength());

  0009a	48 8b 44 24 68	 mov	 rax, QWORD PTR writer$[rsp+32]

; 1069 :         }

  0009f	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000a3	c3		 ret	 0
?ToStringC@DecimalFromatter@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@2345@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ToStringC
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
x_sign$ = 56
writer$ = 64
?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteSuffix, COMDAT

; 995  :             {

$LN31:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b d8	 mov	 rbx, r8
  0000d	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00011	48 8b f9	 mov	 rdi, rcx

; 996  :                 if (x_sign >= 0)

  00014	84 d2		 test	 dl, dl
  00016	78 23		 js	 SHORT $LN6@WriteSuffi

; 997  :                 {
; 998  :                     switch (_number_format_info->Percent.PositivePattern)

  00018	41 8b 90 34 01
	00 00		 mov	 edx, DWORD PTR [r8+308]
  0001f	83 ea 01	 sub	 edx, 1
  00022	74 3e		 je	 SHORT $LN13@WriteSuffi
  00024	83 ea 01	 sub	 edx, 1
  00027	0f 84 f2 00 00
	00		 je	 $LN4@WriteSuffi
  0002d	83 fa 01	 cmp	 edx, 1
  00030	0f 84 e9 00 00
	00		 je	 $LN4@WriteSuffi

; 999  :                     {
; 1000 :                     case 0:
; 1001 :                     default:
; 1002 :                         writer->Write(L' ');
; 1003 :                         writer->Write(_number_format_info->PercentSymbol);
; 1004 :                         break;

  00036	e9 c3 00 00 00	 jmp	 $LN12@WriteSuffi
$LN6@WriteSuffi:

; 1005 :                     case 1:
; 1006 :                         writer->Write(_number_format_info->PercentSymbol);
; 1007 :                         break;
; 1008 :                     case 2:
; 1009 :                         break;
; 1010 :                     case 3:
; 1011 :                         break;
; 1012 :                     }
; 1013 :                 }
; 1014 :                 else
; 1015 :                 {
; 1016 :                     switch (_number_format_info->Percent.NegativePattern)

  0003b	41 8b 80 30 01
	00 00		 mov	 eax, DWORD PTR [r8+304]
  00042	ff c8		 dec	 eax
  00044	83 f8 0a	 cmp	 eax, 10
  00047	0f 87 b1 00 00
	00		 ja	 $LN12@WriteSuffi
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  00054	48 98		 cdqe
  00056	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN25@WriteSuffi[rdx+rax*4]
  0005d	48 03 ca	 add	 rcx, rdx
  00060	ff e1		 jmp	 rcx
$LN13@WriteSuffi:

; 1055 :                         writer->Write(L' ');
; 1056 :                         writer->Write(_number_format_info->PercentSymbol);
; 1057 :                         break;
; 1058 :                     }
; 1059 :                 }
; 1060 :             }

  00062	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00065	49 8d 90 9e 01
	00 00		 lea	 rdx, QWORD PTR [r8+414]
  0006c	48 8b cb	 mov	 rcx, rbx
  0006f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00074	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00078	5f		 pop	 rdi
  00079	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN16@WriteSuffi:
  0007c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0007f	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  00086	48 8b cb	 mov	 rcx, rbx
  00089	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00092	5f		 pop	 rdi
  00093	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN17@WriteSuffi:

; 1017 :                     {
; 1018 :                     case 0:
; 1019 :                     default:
; 1020 :                         writer->Write(L' ');
; 1021 :                         writer->Write(_number_format_info->PercentSymbol);
; 1022 :                         break;
; 1023 :                     case 1:
; 1024 :                         writer->Write(_number_format_info->PercentSymbol);
; 1025 :                         break;
; 1026 :                     case 2:
; 1027 :                         break;
; 1028 :                     case 3:
; 1029 :                         break;
; 1030 :                     case 4:
; 1031 :                         writer->Write(_number_format_info->NegativeSign);
; 1032 :                         break;
; 1033 :                     case 5:
; 1034 :                         writer->Write(_number_format_info->NegativeSign);

  00096	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00099	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  000a0	48 8b cb	 mov	 rcx, rbx
  000a3	ff 10		 call	 QWORD PTR [rax]

; 1035 :                         writer->Write(_number_format_info->PercentSymbol);
; 1036 :                         break;

  000a5	eb 65		 jmp	 SHORT $LN27@WriteSuffi
$LN18@WriteSuffi:

; 1037 :                     case 6:
; 1038 :                         writer->Write(_number_format_info->PercentSymbol);

  000a7	49 8d 90 9e 01
	00 00		 lea	 rdx, QWORD PTR [r8+414]
$LN29@WriteSuffi:

; 1055 :                         writer->Write(L' ');
; 1056 :                         writer->Write(_number_format_info->PercentSymbol);
; 1057 :                         break;
; 1058 :                     }
; 1059 :                 }
; 1060 :             }

  000ae	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000b1	48 8b cb	 mov	 rcx, rbx
  000b4	ff 10		 call	 QWORD PTR [rax]
  000b6	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  000ba	48 8b cb	 mov	 rcx, rbx
  000bd	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000c0	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  000c7	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000cc	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d0	5f		 pop	 rdi
  000d1	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN20@WriteSuffi:

; 1039 :                         writer->Write(_number_format_info->NegativeSign);
; 1040 :                         break;
; 1041 :                     case 7:
; 1042 :                         break;
; 1043 :                     case 8:
; 1044 :                         writer->Write(L' ');

  000d4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000d7	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  000dc	48 8b cb	 mov	 rcx, rbx
  000df	ff 50 08	 call	 QWORD PTR [rax+8]

; 1045 :                         writer->Write(_number_format_info->PercentSymbol);

  000e2	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  000e6	48 81 c2 9e 01
	00 00		 add	 rdx, 414		; 0000019eH

; 1046 :                         writer->Write(_number_format_info->NegativeSign);
; 1047 :                         break;

  000ed	eb bf		 jmp	 SHORT $LN29@WriteSuffi
$LN23@WriteSuffi:

; 1048 :                     case 9:
; 1049 :                         writer->Write(_number_format_info->NegativeSign);
; 1050 :                         break;
; 1051 :                     case 10:
; 1052 :                         break;
; 1053 :                     case 11:
; 1054 :                         writer->Write(_number_format_info->NegativeSign);

  000ef	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000f2	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  000f9	48 8b cb	 mov	 rcx, rbx
  000fc	ff 10		 call	 QWORD PTR [rax]
$LN12@WriteSuffi:

; 1055 :                         writer->Write(L' ');
; 1056 :                         writer->Write(_number_format_info->PercentSymbol);
; 1057 :                         break;
; 1058 :                     }
; 1059 :                 }
; 1060 :             }

  000fe	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00101	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00106	48 8b cb	 mov	 rcx, rbx
  00109	ff 50 08	 call	 QWORD PTR [rax+8]
$LN27@WriteSuffi:
  0010c	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00110	48 8b cb	 mov	 rcx, rbx
  00113	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00116	48 81 c2 9e 01
	00 00		 add	 rdx, 414		; 0000019eH
  0011d	ff 10		 call	 QWORD PTR [rax]
$LN4@WriteSuffi:
  0011f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00124	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00128	5f		 pop	 rdi
  00129	c3		 ret	 0
  0012a	66 90		 npad	 2
$LN25@WriteSuffi:
  0012c	00 00 00 00	 DD	 $LN13@WriteSuffi
  00130	00 00 00 00	 DD	 $LN4@WriteSuffi
  00134	00 00 00 00	 DD	 $LN4@WriteSuffi
  00138	00 00 00 00	 DD	 $LN16@WriteSuffi
  0013c	00 00 00 00	 DD	 $LN17@WriteSuffi
  00140	00 00 00 00	 DD	 $LN18@WriteSuffi
  00144	00 00 00 00	 DD	 $LN4@WriteSuffi
  00148	00 00 00 00	 DD	 $LN20@WriteSuffi
  0014c	00 00 00 00	 DD	 $LN16@WriteSuffi
  00150	00 00 00 00	 DD	 $LN4@WriteSuffi
  00154	00 00 00 00	 DD	 $LN23@WriteSuffi
?WriteSuffix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence, COMDAT

; 977  :             {

$LN65:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 54		 push	 r12
  0000a	41 55		 push	 r13
  0000c	41 56		 push	 r14
  0000e	41 57		 push	 r15
  00010	48 8d 6c 24 d9	 lea	 rbp, QWORD PTR [rsp-39]
  00015	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  0001c	48 c7 45 a7 fe
	ff ff ff	 mov	 QWORD PTR $T1[rbp-185], -2
  00024	48 89 9c 24 28
	01 00 00	 mov	 QWORD PTR [rsp+296], rbx
  0002c	48 8b da	 mov	 rbx, rdx
  0002f	4c 8b e1	 mov	 r12, rcx

; 978  :                 ResourceHolderUINT root;

  00032	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00036	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003b	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 52   :             _p = p;

  0003c	33 f6		 xor	 esi, esi
  0003e	48 89 75 97	 mov	 QWORD PTR r_reader$[rbp-177], rsi

; 142  :         {

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
  00049	48 89 45 8f	 mov	 QWORD PTR r_reader$[rbp-185], rax

; 143  :             _start = p;

  0004d	48 89 5d 9f	 mov	 QWORD PTR r_reader$[rbp-169], rbx

; 144  :             _p = p + lstrlenW(p) - 1;

  00051	48 8b cb	 mov	 rcx, rbx
  00054	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0005a	48 63 c8	 movsxd	 rcx, eax
  0005d	48 ff c9	 dec	 rcx
  00060	48 8d 04 4b	 lea	 rax, QWORD PTR [rbx+rcx*2]
  00064	48 89 45 97	 mov	 QWORD PTR r_reader$[rbp-177], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 980  :                 size_t work_buf_len = lstrlenW(number_sequence_str) * 2 + 1 + _precision + 1;

  00068	48 8b cb	 mov	 rcx, rbx
  0006b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00071	8d 0c 00	 lea	 ecx, DWORD PTR [rax+rax]
  00074	41 8b 44 24 18	 mov	 eax, DWORD PTR [r12+24]
  00079	83 c0 02	 add	 eax, 2
  0007c	03 c8		 add	 ecx, eax
  0007e	48 63 d9	 movsxd	 rbx, ecx

; 981  :                 wchar_t* work_buf = root.AllocateString(work_buf_len);

  00081	48 8b d3	 mov	 rdx, rbx
  00084	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00088	e8 00 00 00 00	 call	 ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
  0008d	48 8b c8	 mov	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 264  :             : StringWriter(buffer != nullptr ? buffer + size : nullptr, buffer, buffer != nullptr ? buffer + size : nullptr)

  00090	48 85 c0	 test	 rax, rax
  00093	48 8d 04 58	 lea	 rax, QWORD PTR [rax+rbx*2]
  00097	75 02		 jne	 SHORT $LN15@FormatNumb
  00099	8b c6		 mov	 eax, esi
$LN15@FormatNumb:

; 201  :             _p = p;

  0009b	48 89 44 24 28	 mov	 QWORD PTR r_writer$[rsp+8], rax

; 202  :             _sob = sob;

  000a0	48 89 4c 24 30	 mov	 QWORD PTR r_writer$[rsp+16], rcx

; 203  :             _eob = eob;

  000a5	48 89 44 24 38	 mov	 QWORD PTR r_writer$[rsp+24], rax

; 204  :             _written = 0;

  000aa	48 89 75 87	 mov	 QWORD PTR r_writer$[rbp-153], rsi

; 265  :         {

  000ae	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
  000b5	48 89 54 24 20	 mov	 QWORD PTR r_writer$[rsp], rdx
  000ba	48 3b c1	 cmp	 rax, rcx

; 271  :             if (_p <= _sob)

  000bd	0f 86 95 01 00
	00		 jbe	 $LN63@FormatNumb

; 273  :             --_p;

  000c3	48 83 c0 fe	 add	 rax, -2
  000c7	48 89 44 24 28	 mov	 QWORD PTR r_writer$[rsp+8], rax

; 274  :             *_p = c;

  000cc	66 89 30	 mov	 WORD PTR [rax], si

; 275  :             ++_written;

  000cf	48 ff 45 87	 inc	 QWORD PTR r_writer$[rbp-153]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 983  :                 ThousandSeparatedStringWriter t_writer(&r_writer, _format_type, _number_format_info);

  000d3	49 8b 44 24 20	 mov	 rax, QWORD PTR [r12+32]
  000d8	41 0f b7 4c 24
	14		 movzx	 ecx, WORD PTR [r12+20]

; 106  :                 if (format_type == L'C')

  000de	44 8b 75 07	 mov	 r14d, DWORD PTR t_writer$[rbp-137]
  000e2	66 83 f9 43	 cmp	 cx, 67			; 00000043H
  000e6	75 06		 jne	 SHORT $LN25@FormatNumb

; 107  :                 {
; 108  :                     decimal_info = &format_option->Currency;
; 109  :                     _is_supported_thousand = TRUE;

  000e8	41 83 ce 01	 or	 r14d, 1
  000ec	eb 26		 jmp	 SHORT $LN30@FormatNumb
$LN25@FormatNumb:

; 110  :                 }
; 111  :                 else if (format_type == L'P')

  000ee	66 83 f9 50	 cmp	 cx, 80			; 00000050H
  000f2	75 0c		 jne	 SHORT $LN27@FormatNumb

; 112  :                 {
; 113  :                     decimal_info = &format_option->Percent;

  000f4	48 05 d0 00 00
	00		 add	 rax, 208		; 000000d0H

; 114  :                     _is_supported_thousand = TRUE;

  000fa	41 83 ce 01	 or	 r14d, 1
  000fe	eb 14		 jmp	 SHORT $LN30@FormatNumb
$LN27@FormatNumb:

; 115  :                 }
; 116  :                 else if (format_type == L'N')

  00100	48 83 c0 68	 add	 rax, 104		; 00000068H
  00104	66 83 f9 4e	 cmp	 cx, 78			; 0000004eH
  00108	75 06		 jne	 SHORT $LN29@FormatNumb

; 117  :                 {
; 118  :                     decimal_info = &format_option->Number;
; 119  :                     _is_supported_thousand = TRUE;

  0010a	41 83 ce 01	 or	 r14d, 1

; 120  :                 }
; 121  :                 else

  0010e	eb 04		 jmp	 SHORT $LN30@FormatNumb
$LN29@FormatNumb:

; 122  :                 {
; 123  :                     decimal_info = &format_option->Number;
; 124  :                     _is_supported_thousand = FALSE;

  00110	41 83 e6 fe	 and	 r14d, -2		; fffffffeH
$LN30@FormatNumb:

; 125  :                 }
; 126  : 
; 127  :                 const wchar_t* in_ptr = decimal_info->GroupSeparator;
; 128  : 
; 129  :                 _current_group = &decimal_info->GroupSizes[0];

  00114	4c 8d 68 48	 lea	 r13, QWORD PTR [rax+72]

; 130  :                 _group_separator = decimal_info->GroupSeparator;

  00118	4c 8d 78 26	 lea	 r15, QWORD PTR [rax+38]

; 131  :                 _current_group_size = *_current_group - L'0';

  0011c	41 0f b7 5d 00	 movzx	 ebx, WORD PTR [r13]
$LN61@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 149  :             if (_p < _start)

  00121	83 eb 30	 sub	 ebx, 48			; 00000030H
  00124	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL2@FormatNumb:
  00130	48 8b 45 97	 mov	 rax, QWORD PTR r_reader$[rbp-177]
  00134	48 3b 45 9f	 cmp	 rax, QWORD PTR r_reader$[rbp-169]
  00138	0f 82 9e 00 00
	00		 jb	 $LN59@FormatNumb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 984  :                 while (r_reader.PeekChar() != L'\0')

  0013e	66 83 38 00	 cmp	 WORD PTR [rax], 0
  00142	0f 84 94 00 00
	00		 je	 $LN59@FormatNumb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 57   :             wchar_t c = PeekChar();

  00148	48 8d 4d 8f	 lea	 rcx, QWORD PTR r_reader$[rbp-185]
  0014c	48 8b 45 8f	 mov	 rax, QWORD PTR r_reader$[rbp-185]
  00150	ff 10		 call	 QWORD PTR [rax]
  00152	0f b7 f8	 movzx	 edi, ax

; 58   :             Progress();

  00155	48 8d 4d 8f	 lea	 rcx, QWORD PTR r_reader$[rbp-185]
  00159	48 8b 55 8f	 mov	 rdx, QWORD PTR r_reader$[rbp-185]
  0015d	ff 52 08	 call	 QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 137  :                 if (_is_supported_thousand && c >= L'0' && c <= L'9')

  00160	41 f6 c6 01	 test	 r14b, 1
  00164	74 61		 je	 SHORT $LN40@FormatNumb
  00166	8d 4f d0	 lea	 ecx, DWORD PTR [rdi-48]
  00169	66 83 f9 09	 cmp	 cx, 9
  0016d	77 58		 ja	 SHORT $LN40@FormatNumb

; 138  :                 {
; 139  :                     // 桁区切りをサポートする場合
; 140  :                     if (_current_group_size > 0 && _current_group_index >= _current_group_size)

  0016f	85 db		 test	 ebx, ebx
  00171	7e 3d		 jle	 SHORT $LN42@FormatNumb
  00173	3b f3		 cmp	 esi, ebx
  00175	7c 39		 jl	 SHORT $LN42@FormatNumb

; 141  :                     {
; 142  :                         // 現在のグループ幅が 0 ではなく、かつ既に出力した文字数がグループ幅に達した場合
; 143  : 
; 144  :                         // グループ区切り文字を出力してから与えられた文字を出力する
; 145  :                         _native_writer->Write(_group_separator);

  00177	49 8b d7	 mov	 rdx, r15
  0017a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  0017f	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  00184	ff 10		 call	 QWORD PTR [rax]

; 146  :                         _native_writer->Write(c);

  00186	0f b7 d7	 movzx	 edx, di
  00189	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  0018e	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  00193	ff 50 08	 call	 QWORD PTR [rax+8]

; 147  :                         _current_group_index = 1;

  00196	be 01 00 00 00	 mov	 esi, 1

; 148  : 
; 149  :                         // 次のグループが存在すればそのグループに移行する
; 150  :                         if (_current_group[1] != L'\0')

  0019b	49 8d 45 02	 lea	 rax, QWORD PTR [r13+2]
  0019f	66 83 38 00	 cmp	 WORD PTR [rax], 0
  001a3	74 8b		 je	 SHORT $LL2@FormatNumb

; 151  :                         {
; 152  :                             _current_group += 1;

  001a5	4c 8b e8	 mov	 r13, rax

; 153  :                             _current_group_size = _current_group[0] - L'0';

  001a8	0f b7 18	 movzx	 ebx, WORD PTR [rax]

; 154  :                         }
; 155  :                     }
; 156  :                     else

  001ab	e9 71 ff ff ff	 jmp	 $LN61@FormatNumb
$LN42@FormatNumb:

; 157  :                     {
; 158  :                         // 現在のグループの幅が 0 であるかあるいは出力した文字数がグループ幅に達していない場合
; 159  :                         _native_writer->Write(c);

  001b0	0f b7 d7	 movzx	 edx, di
  001b3	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001b8	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001bd	ff 50 08	 call	 QWORD PTR [rax+8]

; 160  :                         _current_group_index += 1;

  001c0	ff c6		 inc	 esi

; 161  :                     }
; 162  :                 }
; 163  :                 else

  001c2	e9 69 ff ff ff	 jmp	 $LL2@FormatNumb
$LN40@FormatNumb:

; 164  :                 {
; 165  :                     // 桁区切りをサポートしない場合
; 166  : 
; 167  :                     _native_writer->Write(c);

  001c7	0f b7 d7	 movzx	 edx, di
  001ca	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001cf	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001d4	ff 50 08	 call	 QWORD PTR [rax+8]

; 985  :                     t_writer.Write(r_reader.ReadChar());

  001d7	e9 54 ff ff ff	 jmp	 $LL2@FormatNumb
$LN59@FormatNumb:

; 986  :                 writer->Write(t_writer.GetString());

  001dc	4c 8b 7d 77	 mov	 r15, QWORD PTR writer$[rbp-185]
  001e0	49 8b 07	 mov	 rax, QWORD PTR [r15]
  001e3	48 8b 18	 mov	 rbx, QWORD PTR [rax]

; 179  :                 return (_native_writer->GetString());

  001e6	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001eb	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001f0	ff 50 10	 call	 QWORD PTR [rax+16]

; 986  :                 writer->Write(t_writer.GetString());

  001f3	48 8b d0	 mov	 rdx, rax
  001f6	49 8b cf	 mov	 rcx, r15
  001f9	ff d3		 call	 rbx

; 987  :                 if (_precision > 0)

  001fb	41 83 7c 24 18
	00		 cmp	 DWORD PTR [r12+24], 0
  00201	7e 31		 jle	 SHORT $LN50@FormatNumb

; 988  :                 {
; 989  :                     writer->Write(_number_format_info->Currency.DecimalSeparator);

  00203	49 8b 07	 mov	 rax, QWORD PTR [r15]
  00206	49 8b 54 24 20	 mov	 rdx, QWORD PTR [r12+32]
  0020b	48 83 c2 04	 add	 rdx, 4
  0020f	49 8b cf	 mov	 rcx, r15
  00212	ff 10		 call	 QWORD PTR [rax]

; 990  :                     writer->Write(L'0', _precision);

  00214	49 63 5c 24 18	 movsxd	 rbx, DWORD PTR [r12+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00219	48 85 db	 test	 rbx, rbx
  0021c	74 16		 je	 SHORT $LN50@FormatNumb
  0021e	66 90		 npad	 2
$LL49@FormatNumb:

; 228  :             {
; 229  :                 Write(c);

  00220	49 8b 07	 mov	 rax, QWORD PTR [r15]
  00223	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00228	49 8b cf	 mov	 rcx, r15
  0022b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0022e	48 83 eb 01	 sub	 rbx, 1

; 227  :             while (count > 0)

  00232	75 ec		 jne	 SHORT $LL49@FormatNumb
$LN50@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 992  :             }

  00234	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00238	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0023d	48 8b 9c 24 28
	01 00 00	 mov	 rbx, QWORD PTR [rsp+296]
  00245	48 81 c4 e0 00
	00 00		 add	 rsp, 224		; 000000e0H
  0024c	41 5f		 pop	 r15
  0024e	41 5e		 pop	 r14
  00250	41 5d		 pop	 r13
  00252	41 5c		 pop	 r12
  00254	5f		 pop	 rdi
  00255	5e		 pop	 rsi
  00256	5d		 pop	 rbp
  00257	c3		 ret	 0
$LN63@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 272  :                 throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00258	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  0025f	48 8d 4d d7	 lea	 rcx, QWORD PTR $T2[rbp-185]
  00263	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00268	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  0026f	48 8d 4d d7	 lea	 rcx, QWORD PTR $T2[rbp-185]
  00273	e8 00 00 00 00	 call	 _CxxThrowException
  00278	cc		 int	 3
$LN60@FormatNumb:
?FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatNumberSequence@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
x_sign$ = 56
writer$ = 64
?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WritePrefix, COMDAT

; 909  :             {

$LN30:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b d8	 mov	 rbx, r8
  0000d	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00011	48 8b f9	 mov	 rdi, rcx

; 910  :                 if (x_sign >= 0)

  00014	84 d2		 test	 dl, dl
  00016	78 3b		 js	 SHORT $LN6@WritePrefi

; 911  :                 {
; 912  :                     switch (_number_format_info->Percent.PositivePattern)

  00018	41 8b 88 34 01
	00 00		 mov	 ecx, DWORD PTR [r8+308]
  0001f	83 e9 02	 sub	 ecx, 2
  00022	74 15		 je	 SHORT $LN10@WritePrefi
  00024	83 f9 01	 cmp	 ecx, 1
  00027	0f 85 2c 01 00
	00		 jne	 $LN23@WritePrefi
$LN21@WritePrefi:

; 969  :                         break;
; 970  :                     case 11:
; 971  :                         break;
; 972  :                     }
; 973  :                 }
; 974  :             }

  0002d	49 8d 90 9e 01
	00 00		 lea	 rdx, QWORD PTR [r8+414]
  00034	e9 b5 00 00 00	 jmp	 $LN28@WritePrefi
$LN10@WritePrefi:
  00039	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003c	49 8d 90 9e 01
	00 00		 lea	 rdx, QWORD PTR [r8+414]
  00043	48 8b cb	 mov	 rcx, rbx
  00046	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN6@WritePrefi:

; 913  :                     {
; 914  :                     case 0:
; 915  :                     default:
; 916  :                         break;
; 917  :                     case 1:
; 918  :                         break;
; 919  :                     case 2:
; 920  :                         writer->Write(_number_format_info->PercentSymbol);
; 921  :                         break;
; 922  :                     case 3:
; 923  :                         writer->Write(_number_format_info->PercentSymbol);
; 924  :                         writer->Write(L' ');
; 925  :                         break;
; 926  :                     }
; 927  :                 }
; 928  :                 else
; 929  :                 {
; 930  :                     switch (_number_format_info->Percent.NegativePattern)

  00053	41 8b 80 30 01
	00 00		 mov	 eax, DWORD PTR [r8+304]
  0005a	ff c8		 dec	 eax
  0005c	83 f8 0a	 cmp	 eax, 10
  0005f	0f 87 e5 00 00
	00		 ja	 $LN12@WritePrefi
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  0006c	48 98		 cdqe
  0006e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN25@WritePrefi[rdx+rax*4]
  00075	48 03 ca	 add	 rcx, rdx
  00078	ff e1		 jmp	 rcx
$LN14@WritePrefi:

; 931  :                     {
; 932  :                     case 0:
; 933  :                     default:
; 934  :                         writer->Write(_number_format_info->NegativeSign);
; 935  :                         break;
; 936  :                     case 1:
; 937  :                         writer->Write(_number_format_info->NegativeSign);
; 938  :                         break;
; 939  :                     case 2:
; 940  :                         writer->Write(_number_format_info->NegativeSign);

  0007a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0007d	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  00084	48 8b cb	 mov	 rcx, rbx
  00087	ff 10		 call	 QWORD PTR [rax]

; 941  :                         writer->Write(_number_format_info->PercentSymbol);

  00089	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]

; 969  :                         break;
; 970  :                     case 11:
; 971  :                         break;
; 972  :                     }
; 973  :                 }
; 974  :             }

  0008d	48 8b cb	 mov	 rcx, rbx
  00090	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00093	48 81 c2 9e 01
	00 00		 add	 rdx, 414		; 0000019eH
  0009a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0009f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a3	5f		 pop	 rdi
  000a4	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN15@WritePrefi:

; 942  :                         break;
; 943  :                     case 3:
; 944  :                         writer->Write(_number_format_info->PercentSymbol);

  000a7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000aa	49 8d 90 9e 01
	00 00		 lea	 rdx, QWORD PTR [r8+414]
  000b1	48 8b cb	 mov	 rcx, rbx
  000b4	ff 10		 call	 QWORD PTR [rax]

; 945  :                         writer->Write(_number_format_info->NegativeSign);

  000b6	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]

; 969  :                         break;
; 970  :                     case 11:
; 971  :                         break;
; 972  :                     }
; 973  :                 }
; 974  :             }

  000ba	48 8b cb	 mov	 rcx, rbx
  000bd	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000c0	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  000c7	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000cc	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d0	5f		 pop	 rdi
  000d1	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN19@WritePrefi:

; 946  :                         break;
; 947  :                     case 4:
; 948  :                         writer->Write(_number_format_info->PercentSymbol);
; 949  :                         break;
; 950  :                     case 5:
; 951  :                         break;
; 952  :                     case 6:
; 953  :                         break;
; 954  :                     case 7:
; 955  :                         writer->Write(_number_format_info->NegativeSign);

  000d4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000d7	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  000de	48 8b cb	 mov	 rcx, rbx
  000e1	ff 10		 call	 QWORD PTR [rax]

; 956  :                         writer->Write(_number_format_info->PercentSymbol);

  000e3	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  000e7	48 81 c2 9e 01
	00 00		 add	 rdx, 414		; 0000019eH
$LN28@WritePrefi:

; 969  :                         break;
; 970  :                     case 11:
; 971  :                         break;
; 972  :                     }
; 973  :                 }
; 974  :             }

  000ee	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000f1	48 8b cb	 mov	 rcx, rbx
  000f4	ff 10		 call	 QWORD PTR [rax]
  000f6	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000f9	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  000fe	48 8b cb	 mov	 rcx, rbx
  00101	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00106	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0010a	5f		 pop	 rdi
  0010b	48 ff 60 08	 rex_jmp QWORD PTR [rax+8]
$LN22@WritePrefi:

; 957  :                         writer->Write(L' ');
; 958  :                         break;
; 959  :                     case 8:
; 960  :                         break;
; 961  :                     case 9:
; 962  :                         writer->Write(_number_format_info->PercentSymbol);
; 963  :                         writer->Write(L' ');
; 964  :                         break;
; 965  :                     case 10:
; 966  :                         writer->Write(_number_format_info->PercentSymbol);

  0010f	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00112	49 8d 90 9e 01
	00 00		 lea	 rdx, QWORD PTR [r8+414]
  00119	48 8b cb	 mov	 rcx, rbx
  0011c	ff 10		 call	 QWORD PTR [rax]

; 967  :                         writer->Write(L' ');

  0011e	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00121	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00126	48 8b cb	 mov	 rcx, rbx
  00129	ff 50 08	 call	 QWORD PTR [rax+8]

; 968  :                         writer->Write(_number_format_info->NegativeSign);

  0012c	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]

; 969  :                         break;
; 970  :                     case 11:
; 971  :                         break;
; 972  :                     }
; 973  :                 }
; 974  :             }

  00130	48 8b cb	 mov	 rcx, rbx
  00133	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00136	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  0013d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00142	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00146	5f		 pop	 rdi
  00147	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN12@WritePrefi:
  0014a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0014d	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  00154	48 8b cb	 mov	 rcx, rbx
  00157	ff 10		 call	 QWORD PTR [rax]
$LN23@WritePrefi:
  00159	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0015e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00162	5f		 pop	 rdi
  00163	c3		 ret	 0
$LN25@WritePrefi:
  00164	00 00 00 00	 DD	 $LN12@WritePrefi
  00168	00 00 00 00	 DD	 $LN14@WritePrefi
  0016c	00 00 00 00	 DD	 $LN15@WritePrefi
  00170	00 00 00 00	 DD	 $LN10@WritePrefi
  00174	00 00 00 00	 DD	 $LN23@WritePrefi
  00178	00 00 00 00	 DD	 $LN23@WritePrefi
  0017c	00 00 00 00	 DD	 $LN19@WritePrefi
  00180	00 00 00 00	 DD	 $LN23@WritePrefi
  00184	00 00 00 00	 DD	 $LN21@WritePrefi
  00188	00 00 00 00	 DD	 $LN22@WritePrefi
  0018c	00 00 00 00	 DD	 $LN23@WritePrefi
?WritePrefix@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WritePrefix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
_TEXT	SEGMENT
$T1 = 32
root$ = 40
this$ = 96
x_abs$ = 104
writer$ = 112
?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally, COMDAT

; 901  :             {

$LN6:
  00000	40 57		 push	 rdi
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 60	 mov	 QWORD PTR [rsp+96], rbx
  00014	48 89 74 24 68	 mov	 QWORD PTR [rsp+104], rsi
  00019	49 8b f8	 mov	 rdi, r8
  0001c	48 8b da	 mov	 rbx, rdx
  0001f	48 8b f1	 mov	 rsi, rcx

; 902  :                 ResourceHolderUINT root;

  00022	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00027	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0002c	90		 npad	 1

; 903  :                 NUMBER_HEADER* x2_abs = PMC_Multiply_X_I_Imp(x_abs, 100);

  0002d	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00032	48 8b cb	 mov	 rcx, rbx
  00035	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  0003a	48 8b d8	 mov	 rbx, rax

; 904  :                 root.HookNumber(x2_abs);

  0003d	48 8b d0	 mov	 rdx, rax
  00040	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00045	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 905  :                 Formatter::FormatInternally(x2_abs, writer);

  0004a	4c 8b c7	 mov	 r8, rdi
  0004d	48 8b d3	 mov	 rdx, rbx
  00050	48 8b ce	 mov	 rcx, rsi
  00053	e8 00 00 00 00	 call	 ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
  00058	90		 npad	 1

; 906  :             }

  00059	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0005e	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00063	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  00068	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  0006d	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
?FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
this$ = 96
x_abs$ = 104
writer$ = 112
?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
this$ = 96
x_abs$ = 104
writer$ = 112
?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatInternally@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
writer$ = 56
?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteZeroValue, COMDAT

; 891  :             {

$LN13:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 892  :                 writer->Write(L'0');

  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 8b da	 mov	 rbx, rdx
  00010	48 8b f9	 mov	 rdi, rcx
  00013	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00018	48 8b cb	 mov	 rcx, rbx
  0001b	ff 50 08	 call	 QWORD PTR [rax+8]

; 893  :                 if (_precision > 0)

  0001e	83 7f 18 00	 cmp	 DWORD PTR [rdi+24], 0
  00022	7e 30		 jle	 SHORT $LN6@WriteZeroV

; 894  :                 {
; 895  :                     writer->Write(_number_format_info->Currency.DecimalSeparator);

  00024	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00028	48 8b cb	 mov	 rcx, rbx
  0002b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0002e	48 83 c2 04	 add	 rdx, 4
  00032	ff 10		 call	 QWORD PTR [rax]

; 896  :                     writer->Write(L'0', _precision);

  00034	48 63 7f 18	 movsxd	 rdi, DWORD PTR [rdi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00038	48 85 ff	 test	 rdi, rdi
  0003b	74 17		 je	 SHORT $LN6@WriteZeroV
  0003d	0f 1f 00	 npad	 3
$LL5@WriteZeroV:

; 228  :             {
; 229  :                 Write(c);

  00040	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00043	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0004e	48 83 ef 01	 sub	 rdi, 1
  00052	75 ec		 jne	 SHORT $LL5@WriteZeroV
$LN6@WriteZeroV:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 898  :             }

  00054	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
?WriteZeroValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::GetDefaultPrecisionValue, COMDAT

; 887  :                 return (_number_format_info->Currency.DecimalDigits);

  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00004	8b 00		 mov	 eax, DWORD PTR [rax]

; 888  :             }

  00006	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 8
precision$ = 16
number_format_info$ = 24
??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatterTypeP, COMDAT

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00000	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H

; 191  :             const int digit_count_on_word = 19;

  0000a	c7 41 10 13 00
	00 00		 mov	 DWORD PTR [rcx+16], 19
  00011	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00015	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  0001a	66 89 41 14	 mov	 WORD PTR [rcx+20], ax

; 881  :             {

  0001e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00025	48 89 01	 mov	 QWORD PTR [rcx], rax

; 882  :             }

  00028	48 8b c1	 mov	 rax, rcx

; 205  :                 _precision = precision;

  0002b	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 206  :                 _number_format_info = number_format_info;

  0002e	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 882  :             }

  00032	c3		 ret	 0
??0FormatterTypeP@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeP::FormatterTypeP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
x_sign$ = 56
writer$ = 64
?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteSuffix, COMDAT

; 847  :             {

$LN14:

; 848  :                 if (x_sign >= 0)

  00000	84 d2		 test	 dl, dl
  00002	0f 89 84 00 00
	00		 jns	 $LN12@WriteSuffi
  00008	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  0000d	57		 push	 rdi
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 847  :             {

  00012	49 8b d8	 mov	 rbx, r8
  00015	48 8b f9	 mov	 rdi, rcx

; 849  :                 {
; 850  :                 }
; 851  :                 else
; 852  :                 {
; 853  :                     switch (_number_format_info->Currency.NegativePattern)

  00018	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0001c	41 8b 50 60	 mov	 edx, DWORD PTR [r8+96]
  00020	85 d2		 test	 edx, edx
  00022	74 50		 je	 SHORT $LN6@WriteSuffi
  00024	83 ea 03	 sub	 edx, 3
  00027	74 31		 je	 SHORT $LN9@WriteSuffi
  00029	83 fa 01	 cmp	 edx, 1
  0002c	75 54		 jne	 SHORT $LN2@WriteSuffi

; 865  :                         break;
; 866  :                     case 4:
; 867  :                         writer->Write(L' ');

  0002e	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00031	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00036	48 8b cb	 mov	 rcx, rbx
  00039	ff 50 08	 call	 QWORD PTR [rax+8]

; 868  :                         writer->Write(_number_format_info->NegativeSign);

  0003c	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00040	48 8b cb	 mov	 rcx, rbx
  00043	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00046	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH

; 869  :                         break;
; 870  :                     }
; 871  :                 }
; 872  :             }

  0004d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5f		 pop	 rdi

; 868  :                         writer->Write(_number_format_info->NegativeSign);

  00057	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN9@WriteSuffi:

; 857  :                         break;
; 858  :                     case 1:
; 859  :                     default:
; 860  :                         break;
; 861  :                     case 2:
; 862  :                         break;
; 863  :                     case 3:
; 864  :                         writer->Write(_number_format_info->NegativeSign);

  0005a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0005d	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  00064	48 8b cb	 mov	 rcx, rbx

; 869  :                         break;
; 870  :                     }
; 871  :                 }
; 872  :             }

  00067	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi

; 857  :                         break;
; 858  :                     case 1:
; 859  :                     default:
; 860  :                         break;
; 861  :                     case 2:
; 862  :                         break;
; 863  :                     case 3:
; 864  :                         writer->Write(_number_format_info->NegativeSign);

  00071	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN6@WriteSuffi:

; 854  :                     {
; 855  :                     case 0:
; 856  :                         writer->Write(L')');

  00074	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00077	ba 29 00 00 00	 mov	 edx, 41			; 00000029H
  0007c	48 8b cb	 mov	 rcx, rbx
  0007f	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@WriteSuffi:

; 869  :                         break;
; 870  :                     }
; 871  :                 }
; 872  :             }

  00082	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00087	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008b	5f		 pop	 rdi
$LN12@WriteSuffi:
  0008c	c3		 ret	 0
?WriteSuffix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence, COMDAT

; 829  :             {

$LN65:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 54		 push	 r12
  0000a	41 55		 push	 r13
  0000c	41 56		 push	 r14
  0000e	41 57		 push	 r15
  00010	48 8d 6c 24 d9	 lea	 rbp, QWORD PTR [rsp-39]
  00015	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  0001c	48 c7 45 a7 fe
	ff ff ff	 mov	 QWORD PTR $T1[rbp-185], -2
  00024	48 89 9c 24 28
	01 00 00	 mov	 QWORD PTR [rsp+296], rbx
  0002c	48 8b da	 mov	 rbx, rdx
  0002f	4c 8b e1	 mov	 r12, rcx

; 830  :                 ResourceHolderUINT root;

  00032	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00036	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003b	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 52   :             _p = p;

  0003c	33 f6		 xor	 esi, esi
  0003e	48 89 75 97	 mov	 QWORD PTR r_reader$[rbp-177], rsi

; 142  :         {

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
  00049	48 89 45 8f	 mov	 QWORD PTR r_reader$[rbp-185], rax

; 143  :             _start = p;

  0004d	48 89 5d 9f	 mov	 QWORD PTR r_reader$[rbp-169], rbx

; 144  :             _p = p + lstrlenW(p) - 1;

  00051	48 8b cb	 mov	 rcx, rbx
  00054	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0005a	48 63 c8	 movsxd	 rcx, eax
  0005d	48 ff c9	 dec	 rcx
  00060	48 8d 04 4b	 lea	 rax, QWORD PTR [rbx+rcx*2]
  00064	48 89 45 97	 mov	 QWORD PTR r_reader$[rbp-177], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 832  :                 size_t work_buf_len = lstrlenW(number_sequence_str) * 2 + 1 + _precision + 1;

  00068	48 8b cb	 mov	 rcx, rbx
  0006b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00071	8d 0c 00	 lea	 ecx, DWORD PTR [rax+rax]
  00074	41 8b 44 24 18	 mov	 eax, DWORD PTR [r12+24]
  00079	83 c0 02	 add	 eax, 2
  0007c	03 c8		 add	 ecx, eax
  0007e	48 63 d9	 movsxd	 rbx, ecx

; 833  :                 wchar_t* work_buf = root.AllocateString(work_buf_len);

  00081	48 8b d3	 mov	 rdx, rbx
  00084	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00088	e8 00 00 00 00	 call	 ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
  0008d	48 8b c8	 mov	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 264  :             : StringWriter(buffer != nullptr ? buffer + size : nullptr, buffer, buffer != nullptr ? buffer + size : nullptr)

  00090	48 85 c0	 test	 rax, rax
  00093	48 8d 04 58	 lea	 rax, QWORD PTR [rax+rbx*2]
  00097	75 02		 jne	 SHORT $LN15@FormatNumb
  00099	8b c6		 mov	 eax, esi
$LN15@FormatNumb:

; 201  :             _p = p;

  0009b	48 89 44 24 28	 mov	 QWORD PTR r_writer$[rsp+8], rax

; 202  :             _sob = sob;

  000a0	48 89 4c 24 30	 mov	 QWORD PTR r_writer$[rsp+16], rcx

; 203  :             _eob = eob;

  000a5	48 89 44 24 38	 mov	 QWORD PTR r_writer$[rsp+24], rax

; 204  :             _written = 0;

  000aa	48 89 75 87	 mov	 QWORD PTR r_writer$[rbp-153], rsi

; 265  :         {

  000ae	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
  000b5	48 89 54 24 20	 mov	 QWORD PTR r_writer$[rsp], rdx
  000ba	48 3b c1	 cmp	 rax, rcx

; 271  :             if (_p <= _sob)

  000bd	0f 86 95 01 00
	00		 jbe	 $LN63@FormatNumb

; 273  :             --_p;

  000c3	48 83 c0 fe	 add	 rax, -2
  000c7	48 89 44 24 28	 mov	 QWORD PTR r_writer$[rsp+8], rax

; 274  :             *_p = c;

  000cc	66 89 30	 mov	 WORD PTR [rax], si

; 275  :             ++_written;

  000cf	48 ff 45 87	 inc	 QWORD PTR r_writer$[rbp-153]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 835  :                 ThousandSeparatedStringWriter t_writer(&r_writer, _format_type, _number_format_info);

  000d3	49 8b 44 24 20	 mov	 rax, QWORD PTR [r12+32]
  000d8	41 0f b7 4c 24
	14		 movzx	 ecx, WORD PTR [r12+20]

; 106  :                 if (format_type == L'C')

  000de	44 8b 75 07	 mov	 r14d, DWORD PTR t_writer$[rbp-137]
  000e2	66 83 f9 43	 cmp	 cx, 67			; 00000043H
  000e6	75 06		 jne	 SHORT $LN25@FormatNumb

; 107  :                 {
; 108  :                     decimal_info = &format_option->Currency;
; 109  :                     _is_supported_thousand = TRUE;

  000e8	41 83 ce 01	 or	 r14d, 1
  000ec	eb 26		 jmp	 SHORT $LN30@FormatNumb
$LN25@FormatNumb:

; 110  :                 }
; 111  :                 else if (format_type == L'P')

  000ee	66 83 f9 50	 cmp	 cx, 80			; 00000050H
  000f2	75 0c		 jne	 SHORT $LN27@FormatNumb

; 112  :                 {
; 113  :                     decimal_info = &format_option->Percent;

  000f4	48 05 d0 00 00
	00		 add	 rax, 208		; 000000d0H

; 114  :                     _is_supported_thousand = TRUE;

  000fa	41 83 ce 01	 or	 r14d, 1
  000fe	eb 14		 jmp	 SHORT $LN30@FormatNumb
$LN27@FormatNumb:

; 115  :                 }
; 116  :                 else if (format_type == L'N')

  00100	48 83 c0 68	 add	 rax, 104		; 00000068H
  00104	66 83 f9 4e	 cmp	 cx, 78			; 0000004eH
  00108	75 06		 jne	 SHORT $LN29@FormatNumb

; 117  :                 {
; 118  :                     decimal_info = &format_option->Number;
; 119  :                     _is_supported_thousand = TRUE;

  0010a	41 83 ce 01	 or	 r14d, 1

; 120  :                 }
; 121  :                 else

  0010e	eb 04		 jmp	 SHORT $LN30@FormatNumb
$LN29@FormatNumb:

; 122  :                 {
; 123  :                     decimal_info = &format_option->Number;
; 124  :                     _is_supported_thousand = FALSE;

  00110	41 83 e6 fe	 and	 r14d, -2		; fffffffeH
$LN30@FormatNumb:

; 125  :                 }
; 126  : 
; 127  :                 const wchar_t* in_ptr = decimal_info->GroupSeparator;
; 128  : 
; 129  :                 _current_group = &decimal_info->GroupSizes[0];

  00114	4c 8d 68 48	 lea	 r13, QWORD PTR [rax+72]

; 130  :                 _group_separator = decimal_info->GroupSeparator;

  00118	4c 8d 78 26	 lea	 r15, QWORD PTR [rax+38]

; 131  :                 _current_group_size = *_current_group - L'0';

  0011c	41 0f b7 5d 00	 movzx	 ebx, WORD PTR [r13]
$LN61@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 149  :             if (_p < _start)

  00121	83 eb 30	 sub	 ebx, 48			; 00000030H
  00124	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL2@FormatNumb:
  00130	48 8b 45 97	 mov	 rax, QWORD PTR r_reader$[rbp-177]
  00134	48 3b 45 9f	 cmp	 rax, QWORD PTR r_reader$[rbp-169]
  00138	0f 82 9e 00 00
	00		 jb	 $LN59@FormatNumb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 836  :                 while (r_reader.PeekChar() != L'\0')

  0013e	66 83 38 00	 cmp	 WORD PTR [rax], 0
  00142	0f 84 94 00 00
	00		 je	 $LN59@FormatNumb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 57   :             wchar_t c = PeekChar();

  00148	48 8d 4d 8f	 lea	 rcx, QWORD PTR r_reader$[rbp-185]
  0014c	48 8b 45 8f	 mov	 rax, QWORD PTR r_reader$[rbp-185]
  00150	ff 10		 call	 QWORD PTR [rax]
  00152	0f b7 f8	 movzx	 edi, ax

; 58   :             Progress();

  00155	48 8d 4d 8f	 lea	 rcx, QWORD PTR r_reader$[rbp-185]
  00159	48 8b 55 8f	 mov	 rdx, QWORD PTR r_reader$[rbp-185]
  0015d	ff 52 08	 call	 QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 137  :                 if (_is_supported_thousand && c >= L'0' && c <= L'9')

  00160	41 f6 c6 01	 test	 r14b, 1
  00164	74 61		 je	 SHORT $LN40@FormatNumb
  00166	8d 4f d0	 lea	 ecx, DWORD PTR [rdi-48]
  00169	66 83 f9 09	 cmp	 cx, 9
  0016d	77 58		 ja	 SHORT $LN40@FormatNumb

; 138  :                 {
; 139  :                     // 桁区切りをサポートする場合
; 140  :                     if (_current_group_size > 0 && _current_group_index >= _current_group_size)

  0016f	85 db		 test	 ebx, ebx
  00171	7e 3d		 jle	 SHORT $LN42@FormatNumb
  00173	3b f3		 cmp	 esi, ebx
  00175	7c 39		 jl	 SHORT $LN42@FormatNumb

; 141  :                     {
; 142  :                         // 現在のグループ幅が 0 ではなく、かつ既に出力した文字数がグループ幅に達した場合
; 143  : 
; 144  :                         // グループ区切り文字を出力してから与えられた文字を出力する
; 145  :                         _native_writer->Write(_group_separator);

  00177	49 8b d7	 mov	 rdx, r15
  0017a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  0017f	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  00184	ff 10		 call	 QWORD PTR [rax]

; 146  :                         _native_writer->Write(c);

  00186	0f b7 d7	 movzx	 edx, di
  00189	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  0018e	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  00193	ff 50 08	 call	 QWORD PTR [rax+8]

; 147  :                         _current_group_index = 1;

  00196	be 01 00 00 00	 mov	 esi, 1

; 148  : 
; 149  :                         // 次のグループが存在すればそのグループに移行する
; 150  :                         if (_current_group[1] != L'\0')

  0019b	49 8d 45 02	 lea	 rax, QWORD PTR [r13+2]
  0019f	66 83 38 00	 cmp	 WORD PTR [rax], 0
  001a3	74 8b		 je	 SHORT $LL2@FormatNumb

; 151  :                         {
; 152  :                             _current_group += 1;

  001a5	4c 8b e8	 mov	 r13, rax

; 153  :                             _current_group_size = _current_group[0] - L'0';

  001a8	0f b7 18	 movzx	 ebx, WORD PTR [rax]

; 154  :                         }
; 155  :                     }
; 156  :                     else

  001ab	e9 71 ff ff ff	 jmp	 $LN61@FormatNumb
$LN42@FormatNumb:

; 157  :                     {
; 158  :                         // 現在のグループの幅が 0 であるかあるいは出力した文字数がグループ幅に達していない場合
; 159  :                         _native_writer->Write(c);

  001b0	0f b7 d7	 movzx	 edx, di
  001b3	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001b8	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001bd	ff 50 08	 call	 QWORD PTR [rax+8]

; 160  :                         _current_group_index += 1;

  001c0	ff c6		 inc	 esi

; 161  :                     }
; 162  :                 }
; 163  :                 else

  001c2	e9 69 ff ff ff	 jmp	 $LL2@FormatNumb
$LN40@FormatNumb:

; 164  :                 {
; 165  :                     // 桁区切りをサポートしない場合
; 166  : 
; 167  :                     _native_writer->Write(c);

  001c7	0f b7 d7	 movzx	 edx, di
  001ca	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001cf	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001d4	ff 50 08	 call	 QWORD PTR [rax+8]

; 837  :                     t_writer.Write(r_reader.ReadChar());

  001d7	e9 54 ff ff ff	 jmp	 $LL2@FormatNumb
$LN59@FormatNumb:

; 838  :                 writer->Write(t_writer.GetString());

  001dc	4c 8b 7d 77	 mov	 r15, QWORD PTR writer$[rbp-185]
  001e0	49 8b 07	 mov	 rax, QWORD PTR [r15]
  001e3	48 8b 18	 mov	 rbx, QWORD PTR [rax]

; 179  :                 return (_native_writer->GetString());

  001e6	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001eb	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001f0	ff 50 10	 call	 QWORD PTR [rax+16]

; 838  :                 writer->Write(t_writer.GetString());

  001f3	48 8b d0	 mov	 rdx, rax
  001f6	49 8b cf	 mov	 rcx, r15
  001f9	ff d3		 call	 rbx

; 839  :                 if (_precision > 0)

  001fb	41 83 7c 24 18
	00		 cmp	 DWORD PTR [r12+24], 0
  00201	7e 31		 jle	 SHORT $LN50@FormatNumb

; 840  :                 {
; 841  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  00203	49 8b 07	 mov	 rax, QWORD PTR [r15]
  00206	49 8b 54 24 20	 mov	 rdx, QWORD PTR [r12+32]
  0020b	48 83 c2 6c	 add	 rdx, 108		; 0000006cH
  0020f	49 8b cf	 mov	 rcx, r15
  00212	ff 10		 call	 QWORD PTR [rax]

; 842  :                     writer->Write(L'0', _precision);

  00214	49 63 5c 24 18	 movsxd	 rbx, DWORD PTR [r12+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00219	48 85 db	 test	 rbx, rbx
  0021c	74 16		 je	 SHORT $LN50@FormatNumb
  0021e	66 90		 npad	 2
$LL49@FormatNumb:

; 228  :             {
; 229  :                 Write(c);

  00220	49 8b 07	 mov	 rax, QWORD PTR [r15]
  00223	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00228	49 8b cf	 mov	 rcx, r15
  0022b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0022e	48 83 eb 01	 sub	 rbx, 1

; 227  :             while (count > 0)

  00232	75 ec		 jne	 SHORT $LL49@FormatNumb
$LN50@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 844  :             }

  00234	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00238	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0023d	48 8b 9c 24 28
	01 00 00	 mov	 rbx, QWORD PTR [rsp+296]
  00245	48 81 c4 e0 00
	00 00		 add	 rsp, 224		; 000000e0H
  0024c	41 5f		 pop	 r15
  0024e	41 5e		 pop	 r14
  00250	41 5d		 pop	 r13
  00252	41 5c		 pop	 r12
  00254	5f		 pop	 rdi
  00255	5e		 pop	 rsi
  00256	5d		 pop	 rbp
  00257	c3		 ret	 0
$LN63@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 272  :                 throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00258	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  0025f	48 8d 4d d7	 lea	 rcx, QWORD PTR $T2[rbp-185]
  00263	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00268	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  0026f	48 8d 4d d7	 lea	 rcx, QWORD PTR $T2[rbp-185]
  00273	e8 00 00 00 00	 call	 _CxxThrowException
  00278	cc		 int	 3
$LN60@FormatNumb:
?FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatNumberSequence@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
x_sign$ = 56
writer$ = 64
?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WritePrefix, COMDAT

; 801  :             {

$LN15:

; 802  :                 if (x_sign >= 0)

  00000	84 d2		 test	 dl, dl
  00002	79 70		 jns	 SHORT $LN12@WritePrefi
  00004	53		 push	 rbx
  00005	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 803  :                 {
; 804  :                 }
; 805  :                 else
; 806  :                 {
; 807  :                     switch (_number_format_info->Number.NegativePattern)

  00009	48 8b 51 20	 mov	 rdx, QWORD PTR [rcx+32]
  0000d	49 8b d8	 mov	 rbx, r8
  00010	8b 8a c8 00 00
	00		 mov	 ecx, DWORD PTR [rdx+200]
  00016	85 c9		 test	 ecx, ecx
  00018	74 47		 je	 SHORT $LN6@WritePrefi
  0001a	83 e9 02	 sub	 ecx, 2
  0001d	74 1f		 je	 SHORT $LN8@WritePrefi
  0001f	83 e9 01	 sub	 ecx, 1
  00022	74 4b		 je	 SHORT $LN10@WritePrefi
  00024	83 f9 01	 cmp	 ecx, 1
  00027	74 46		 je	 SHORT $LN10@WritePrefi

; 811  :                         break;
; 812  :                     case 1:
; 813  :                     default:
; 814  :                         writer->Write(_number_format_info->NegativeSign);

  00029	49 8b 00	 mov	 rax, QWORD PTR [r8]
  0002c	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  00033	48 8b cb	 mov	 rcx, rbx

; 819  :                         break;
; 820  :                     case 3:
; 821  :                         break;
; 822  :                     case 4:
; 823  :                         break;
; 824  :                     }
; 825  :                 }
; 826  :             }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5b		 pop	 rbx

; 811  :                         break;
; 812  :                     case 1:
; 813  :                     default:
; 814  :                         writer->Write(_number_format_info->NegativeSign);

  0003b	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN8@WritePrefi:

; 815  :                         break;
; 816  :                     case 2:
; 817  :                         writer->Write(_number_format_info->NegativeSign);

  0003e	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00041	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	ff 10		 call	 QWORD PTR [rax]

; 818  :                         writer->Write(L' ');

  0004d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00050	ba 20 00 00 00	 mov	 edx, 32			; 00000020H

; 819  :                         break;
; 820  :                     case 3:
; 821  :                         break;
; 822  :                     case 4:
; 823  :                         break;
; 824  :                     }
; 825  :                 }
; 826  :             }

  00055	48 8b cb	 mov	 rcx, rbx
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5b		 pop	 rbx
  0005d	48 ff 60 08	 rex_jmp QWORD PTR [rax+8]
$LN6@WritePrefi:

; 808  :                     {
; 809  :                     case 0:
; 810  :                         writer->Write(L'(');

  00061	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00064	ba 28 00 00 00	 mov	 edx, 40			; 00000028H

; 819  :                         break;
; 820  :                     case 3:
; 821  :                         break;
; 822  :                     case 4:
; 823  :                         break;
; 824  :                     }
; 825  :                 }
; 826  :             }

  00069	48 8b cb	 mov	 rcx, rbx
  0006c	ff 50 08	 call	 QWORD PTR [rax+8]
$LN10@WritePrefi:
  0006f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00073	5b		 pop	 rbx
$LN12@WritePrefi:
  00074	c3		 ret	 0
?WritePrefix@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WritePrefix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
writer$ = 56
?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteZeroValue, COMDAT

; 791  :             {

$LN13:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 792  :                 writer->Write(L'0');

  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 8b da	 mov	 rbx, rdx
  00010	48 8b f9	 mov	 rdi, rcx
  00013	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00018	48 8b cb	 mov	 rcx, rbx
  0001b	ff 50 08	 call	 QWORD PTR [rax+8]

; 793  :                 if (_precision > 0)

  0001e	83 7f 18 00	 cmp	 DWORD PTR [rdi+24], 0
  00022	7e 30		 jle	 SHORT $LN6@WriteZeroV

; 794  :                 {
; 795  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  00024	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00028	48 8b cb	 mov	 rcx, rbx
  0002b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0002e	48 83 c2 6c	 add	 rdx, 108		; 0000006cH
  00032	ff 10		 call	 QWORD PTR [rax]

; 796  :                     writer->Write(L'0', _precision);

  00034	48 63 7f 18	 movsxd	 rdi, DWORD PTR [rdi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00038	48 85 ff	 test	 rdi, rdi
  0003b	74 17		 je	 SHORT $LN6@WriteZeroV
  0003d	0f 1f 00	 npad	 3
$LL5@WriteZeroV:

; 228  :             {
; 229  :                 Write(c);

  00040	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00043	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0004e	48 83 ef 01	 sub	 rdi, 1
  00052	75 ec		 jne	 SHORT $LL5@WriteZeroV
$LN6@WriteZeroV:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 798  :             }

  00054	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
?WriteZeroValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::GetDefaultPrecisionValue, COMDAT

; 787  :                 return (_number_format_info->Number.DecimalDigits);

  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00004	8b 40 68	 mov	 eax, DWORD PTR [rax+104]

; 788  :             }

  00007	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 8
precision$ = 16
number_format_info$ = 24
??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatterTypeN, COMDAT

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00000	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H

; 191  :             const int digit_count_on_word = 19;

  0000a	c7 41 10 13 00
	00 00		 mov	 DWORD PTR [rcx+16], 19
  00011	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00015	b8 4e 00 00 00	 mov	 eax, 78			; 0000004eH
  0001a	66 89 41 14	 mov	 WORD PTR [rcx+20], ax

; 781  :             {

  0001e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00025	48 89 01	 mov	 QWORD PTR [rcx], rax

; 782  :             }

  00028	48 8b c1	 mov	 rax, rcx

; 205  :                 _precision = precision;

  0002b	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 206  :                 _number_format_info = number_format_info;

  0002e	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 782  :             }

  00032	c3		 ret	 0
??0FormatterTypeN@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeN::FormatterTypeN
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 8
x_sign$ = 16
writer$ = 24
?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteSuffix, COMDAT

; 772  :             }

  00000	c2 00 00	 ret	 0
?WriteSuffix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
number_sequence_str$ = 56
writer$ = 64
?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatNumberSequence, COMDAT

; 761  :             {

$LN13:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 762  :                 writer->Write(number_sequence_str);

  0000a	49 8b 00	 mov	 rax, QWORD PTR [r8]
  0000d	48 8b f9	 mov	 rdi, rcx
  00010	49 8b c8	 mov	 rcx, r8
  00013	49 8b d8	 mov	 rbx, r8
  00016	ff 10		 call	 QWORD PTR [rax]

; 763  :                 if (_precision > 0)

  00018	83 7f 18 00	 cmp	 DWORD PTR [rdi+24], 0
  0001c	7e 36		 jle	 SHORT $LN6@FormatNumb

; 764  :                 {
; 765  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  0001e	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00022	48 8b cb	 mov	 rcx, rbx
  00025	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00028	48 83 c2 6c	 add	 rdx, 108		; 0000006cH
  0002c	ff 10		 call	 QWORD PTR [rax]

; 766  :                     writer->Write(L'0', _precision);

  0002e	48 63 7f 18	 movsxd	 rdi, DWORD PTR [rdi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00032	48 85 ff	 test	 rdi, rdi
  00035	74 1d		 je	 SHORT $LN6@FormatNumb
  00037	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL5@FormatNumb:

; 228  :             {
; 229  :                 Write(c);

  00040	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00043	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0004e	48 83 ef 01	 sub	 rdi, 1
  00052	75 ec		 jne	 SHORT $LL5@FormatNumb
$LN6@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 768  :             }

  00054	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
?FormatNumberSequence@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatNumberSequence
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 8
x_sign$ = 16
writer$ = 24
?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WritePrefix, COMDAT

; 756  :                 if (x_sign < 0)

  00000	84 d2		 test	 dl, dl
  00002	79 14		 jns	 SHORT $LN2@WritePrefi

; 757  :                     writer->Write(_number_format_info->NegativeSign);

  00004	48 8b 51 20	 mov	 rdx, QWORD PTR [rcx+32]
  00008	49 8b c8	 mov	 rcx, r8
  0000b	49 8b 00	 mov	 rax, QWORD PTR [r8]
  0000e	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  00015	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN2@WritePrefi:

; 758  :             }

  00018	c3		 ret	 0
?WritePrefix@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WritePrefix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
writer$ = 56
?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteZeroValue, COMDAT

; 745  :             {

$LN13:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 746  :                 writer->Write(L'0');

  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 8b da	 mov	 rbx, rdx
  00010	48 8b f9	 mov	 rdi, rcx
  00013	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00018	48 8b cb	 mov	 rcx, rbx
  0001b	ff 50 08	 call	 QWORD PTR [rax+8]

; 747  :                 if (_precision > 0)

  0001e	83 7f 18 00	 cmp	 DWORD PTR [rdi+24], 0
  00022	7e 30		 jle	 SHORT $LN6@WriteZeroV

; 748  :                 {
; 749  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  00024	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00028	48 8b cb	 mov	 rcx, rbx
  0002b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0002e	48 83 c2 6c	 add	 rdx, 108		; 0000006cH
  00032	ff 10		 call	 QWORD PTR [rax]

; 750  :                     writer->Write(L'0', _precision);

  00034	48 63 7f 18	 movsxd	 rdi, DWORD PTR [rdi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00038	48 85 ff	 test	 rdi, rdi
  0003b	74 17		 je	 SHORT $LN6@WriteZeroV
  0003d	0f 1f 00	 npad	 3
$LL5@WriteZeroV:

; 228  :             {
; 229  :                 Write(c);

  00040	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00043	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0004e	48 83 ef 01	 sub	 rdi, 1
  00052	75 ec		 jne	 SHORT $LL5@WriteZeroV
$LN6@WriteZeroV:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 752  :             }

  00054	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
?WriteZeroValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::GetDefaultPrecisionValue, COMDAT

; 741  :                 return (_number_format_info->Number.DecimalDigits);

  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00004	8b 40 68	 mov	 eax, DWORD PTR [rax+104]

; 742  :             }

  00007	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 8
precision$ = 16
number_format_info$ = 24
??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatterTypeF, COMDAT

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00000	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H

; 191  :             const int digit_count_on_word = 19;

  0000a	c7 41 10 13 00
	00 00		 mov	 DWORD PTR [rcx+16], 19
  00011	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00015	b8 46 00 00 00	 mov	 eax, 70			; 00000046H
  0001a	66 89 41 14	 mov	 WORD PTR [rcx+20], ax

; 735  :             {

  0001e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00025	48 89 01	 mov	 QWORD PTR [rcx], rax

; 736  :             }

  00028	48 8b c1	 mov	 rax, rcx

; 205  :                 _precision = precision;

  0002b	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 206  :                 _number_format_info = number_format_info;

  0002e	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 736  :             }

  00032	c3		 ret	 0
??0FormatterTypeF@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeF::FormatterTypeF
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 8
x_sign$ = 16
writer$ = 24
?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteSuffix, COMDAT

; 726  :             }

  00000	c2 00 00	 ret	 0
?WriteSuffix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
reader$ = 32
exp_buf$ = 48
__$ArrayPad$ = 88
this$ = 144
number_sequence_str$ = 152
writer$ = 160
?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence, COMDAT

; 695  :             {

$LN20:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	41 56		 push	 r14
  00006	41 57		 push	 r15
  00008	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 50   :         StringReader(const wchar_t* p)

  0001b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringReader@Internal@Core@Math@Palmtree@@6B@

; 51   :         {
; 52   :             _p = p;

  00022	48 89 54 24 28	 mov	 QWORD PTR reader$[rsp+8], rdx
  00027	48 89 44 24 20	 mov	 QWORD PTR reader$[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 695  :             {

  0002c	4c 8b f1	 mov	 r14, rcx

; 697  :                 writer->Write(reader.ReadChar(L'0'));

  0002f	49 8b 00	 mov	 rax, QWORD PTR [r8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 64   :             wchar_t c = PeekChar();

  00032	48 8d 4c 24 20	 lea	 rcx, QWORD PTR reader$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 695  :             {

  00037	49 8b f8	 mov	 rdi, r8
  0003a	4c 8b fa	 mov	 r15, rdx

; 697  :                 writer->Write(reader.ReadChar(L'0'));

  0003d	48 8b 70 08	 mov	 rsi, QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 64   :             wchar_t c = PeekChar();

  00041	ff 15 00 00 00
	00		 call	 QWORD PTR ??_7StringReader@Internal@Core@Math@Palmtree@@6B@
  00047	0f b7 d8	 movzx	 ebx, ax

; 65   :             if (c == L'\0')

  0004a	66 85 c0	 test	 ax, ax
  0004d	75 07		 jne	 SHORT $LN10@FormatNumb

; 66   :                 return (default_char);

  0004f	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  00054	eb 10		 jmp	 SHORT $LN9@FormatNumb
$LN10@FormatNumb:

; 67   :             Progress();

  00056	48 8b 44 24 20	 mov	 rax, QWORD PTR reader$[rsp]
  0005b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR reader$[rsp]
  00060	ff 50 08	 call	 QWORD PTR [rax+8]

; 68   :             return (c);

  00063	0f b7 c3	 movzx	 eax, bx
$LN9@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 697  :                 writer->Write(reader.ReadChar(L'0'));

  00066	0f b7 d0	 movzx	 edx, ax
  00069	48 8b cf	 mov	 rcx, rdi
  0006c	ff d6		 call	 rsi

; 698  :                 if (_precision > 0)

  0006e	41 83 7e 18 00	 cmp	 DWORD PTR [r14+24], 0
  00073	7e 73		 jle	 SHORT $LN3@FormatNumb

; 699  :                 {
; 700  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  00075	49 8b 56 20	 mov	 rdx, QWORD PTR [r14+32]
  00079	48 8b cf	 mov	 rcx, rdi
  0007c	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0007f	48 83 c2 6c	 add	 rdx, 108		; 0000006cH
  00083	ff 10		 call	 QWORD PTR [rax]
  00085	41 8b 5e 18	 mov	 ebx, DWORD PTR [r14+24]

; 701  :                     for (int count = _precision; count > 0; --count)

  00089	85 db		 test	 ebx, ebx
  0008b	7e 5b		 jle	 SHORT $LN3@FormatNumb
  0008d	48 89 ac 24 a8
	00 00 00	 mov	 QWORD PTR [rsp+168], rbp
  00095	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@FormatNumb:

; 702  :                         writer->Write(reader.ReadChar(L'0'));

  000a0	48 8b 07	 mov	 rax, QWORD PTR [rdi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 64   :             wchar_t c = PeekChar();

  000a3	48 8d 4c 24 20	 lea	 rcx, QWORD PTR reader$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 702  :                         writer->Write(reader.ReadChar(L'0'));

  000a8	48 8b 68 08	 mov	 rbp, QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 64   :             wchar_t c = PeekChar();

  000ac	48 8b 44 24 20	 mov	 rax, QWORD PTR reader$[rsp]
  000b1	ff 10		 call	 QWORD PTR [rax]
  000b3	0f b7 f0	 movzx	 esi, ax

; 65   :             if (c == L'\0')

  000b6	66 85 c0	 test	 ax, ax
  000b9	75 07		 jne	 SHORT $LN13@FormatNumb

; 66   :                 return (default_char);

  000bb	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  000c0	eb 10		 jmp	 SHORT $LN12@FormatNumb
$LN13@FormatNumb:

; 67   :             Progress();

  000c2	48 8b 44 24 20	 mov	 rax, QWORD PTR reader$[rsp]
  000c7	48 8d 4c 24 20	 lea	 rcx, QWORD PTR reader$[rsp]
  000cc	ff 50 08	 call	 QWORD PTR [rax+8]

; 68   :             return (c);

  000cf	0f b7 c6	 movzx	 eax, si
$LN12@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 702  :                         writer->Write(reader.ReadChar(L'0'));

  000d2	0f b7 d0	 movzx	 edx, ax
  000d5	48 8b cf	 mov	 rcx, rdi
  000d8	ff d5		 call	 rbp
  000da	ff cb		 dec	 ebx
  000dc	85 db		 test	 ebx, ebx
  000de	7f c0		 jg	 SHORT $LL4@FormatNumb

; 701  :                     for (int count = _precision; count > 0; --count)

  000e0	48 8b ac 24 a8
	00 00 00	 mov	 rbp, QWORD PTR [rsp+168]
$LN3@FormatNumb:

; 703  :                 }
; 704  :                 writer->Write(_format_type);

  000e8	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  000eb	48 8b cf	 mov	 rcx, rdi
  000ee	41 0f b7 56 14	 movzx	 edx, WORD PTR [r14+20]
  000f3	ff 50 08	 call	 QWORD PTR [rax+8]

; 705  :                 writer->Write(_number_format_info->PositiveSign);

  000f6	49 8b 56 20	 mov	 rdx, QWORD PTR [r14+32]
  000fa	48 8b cf	 mov	 rcx, rdi
  000fd	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00100	48 81 c2 7c 01
	00 00		 add	 rdx, 380		; 0000017cH
  00107	ff 10		 call	 QWORD PTR [rax]

; 706  :                 size_t exponential_part = lstrlenW(number_sequence_str) - 1;

  00109	49 8b cf	 mov	 rcx, r15
  0010c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00112	ff c8		 dec	 eax

; 707  : 
; 708  :                 // 指数部を文字列化するために必要な領域の大きさについて
; 709  :                 // sizeof(w_char_t) == 2 であるため、アドレス空間が 64bit の環境における指数部の論理的な上限値は 2^63 (^はべき乗演算子)
; 710  :                 // なので、指数部を10進数表記した場合の論理的な桁数の上限値は ceil(63 * log(2) / log(10)) ==> 19 となる。
; 711  :                 // 同様に、32bit アドレス空間においては、指数部桁数の論理的上限値は ceil(31 * log(2) / log(10)) ==> 10 となる。
; 712  : 
; 713  : #ifdef _M_IX86 
; 714  :                 wchar_t exp_buf[10 + 1];
; 715  : #elif defined(_M_X64)
; 716  :                 wchar_t exp_buf[19 + 1];
; 717  : #else
; 718  : #error unknown platform
; 719  : #endif
; 720  :                 wsprintfW(exp_buf, L"%03d", exponential_part);

  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_19GGGBJDH@?$AA?$CF?$AA0?$AA3?$AAd@
  0011b	4c 63 c0	 movsxd	 r8, eax
  0011e	48 8d 4c 24 30	 lea	 rcx, QWORD PTR exp_buf$[rsp]
  00123	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wsprintfW

; 721  :                 writer->Write(exp_buf);

  00129	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0012c	48 8d 54 24 30	 lea	 rdx, QWORD PTR exp_buf$[rsp]
  00131	48 8b cf	 mov	 rcx, rdi
  00134	ff 10		 call	 QWORD PTR [rax]

; 722  :             }

  00136	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0013b	48 33 cc	 xor	 rcx, rsp
  0013e	e8 00 00 00 00	 call	 __security_check_cookie
  00143	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00147	41 5f		 pop	 r15
  00149	41 5e		 pop	 r14
  0014b	5f		 pop	 rdi
  0014c	5e		 pop	 rsi
  0014d	5b		 pop	 rbx
  0014e	c3		 ret	 0
?FormatNumberSequence@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatNumberSequence
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 8
x_sign$ = 16
writer$ = 24
?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WritePrefix, COMDAT

; 690  :                 if (x_sign < 0)

  00000	84 d2		 test	 dl, dl
  00002	79 14		 jns	 SHORT $LN2@WritePrefi

; 691  :                     writer->Write(_number_format_info->NegativeSign);

  00004	48 8b 51 20	 mov	 rdx, QWORD PTR [rcx+32]
  00008	49 8b c8	 mov	 rcx, r8
  0000b	49 8b 00	 mov	 rax, QWORD PTR [r8]
  0000e	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  00015	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN2@WritePrefi:

; 692  :             }

  00018	c3		 ret	 0
?WritePrefix@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WritePrefix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
_TEXT	SEGMENT
root$1 = 56
root$2 = 56
root$ = 88
temp_r$3 = 176
this$ = 176
x_abs$ = 184
writer$ = 192
?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally, COMDAT

; 673  :             {

$LN33:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00013	48 c7 40 88 fe
	ff ff ff	 mov	 QWORD PTR [rax-120], -2
  0001b	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  0001f	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
  00023	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
  00027	4d 8b e0	 mov	 r12, r8
  0002a	4c 8b ea	 mov	 r13, rdx
  0002d	4c 8b f9	 mov	 r15, rcx

; 674  :                 ResourceHolderUINT root;

  00030	48 8d 48 b0	 lea	 rcx, QWORD PTR [rax-80]
  00034	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00039	90		 npad	 1

; 675  :                 size_t digit_count = get_digit_count_as_decimal(x_abs->BLOCK, x_abs->UNIT_WORD_COUNT);

  0003a	49 8b 5d 18	 mov	 rbx, QWORD PTR [r13+24]
  0003e	49 8b 75 40	 mov	 rsi, QWORD PTR [r13+64]

; 46   :             ResourceHolderUINT root;

  00042	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  00047	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0004c	90		 npad	 1

; 47   :             __UNIT_TYPE* work1_buf = root.AllocateBlock(src_buf_count * __UNIT_TYPE_BIT_COUNT);

  0004d	48 8b fb	 mov	 rdi, rbx
  00050	48 c1 e7 06	 shl	 rdi, 6
  00054	48 8b d7	 mov	 rdx, rdi
  00057	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  0005c	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00061	48 8b e8	 mov	 rbp, rax

; 48   :             __UNIT_TYPE* work2_buf = root.AllocateBlock(src_buf_count * __UNIT_TYPE_BIT_COUNT);

  00064	48 8b d7	 mov	 rdx, rdi
  00067	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  0006c	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  00071	48 8b fd	 mov	 rdi, rbp
  00074	48 8b cb	 mov	 rcx, rbx
  00077	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 53   :             _UINT32_T digit_count = 0;

  0007a	33 ff		 xor	 edi, edi
$LN29@FormatInte:

; 54   :             while (1)
; 55   :             {
; 56   :                 while (u_count > 0 && u_buf[u_count - 1] == 0)

  0007c	4c 8b f0	 mov	 r14, rax
  0007f	48 85 db	 test	 rbx, rbx
  00082	74 20		 je	 SHORT $LN28@FormatInte
  00084	48 8d 04 dd f8
	ff ff ff	 lea	 rax, QWORD PTR [rbx*8-8]
  0008c	48 03 c5	 add	 rax, rbp
  0008f	90		 npad	 1
$LL9@FormatInte:
  00090	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00094	0f 85 b4 00 00
	00		 jne	 $LN10@FormatInte

; 57   :                     --u_count;

  0009a	48 83 e8 08	 sub	 rax, 8
  0009e	48 83 eb 01	 sub	 rbx, 1

; 54   :             while (1)
; 55   :             {
; 56   :                 while (u_count > 0 && u_buf[u_count - 1] == 0)

  000a2	75 ec		 jne	 SHORT $LL9@FormatInte
$LN28@FormatInte:

; 68   :             return (digit_count);

  000a4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  000a9	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT

; 675  :                 size_t digit_count = get_digit_count_as_decimal(x_abs->BLOCK, x_abs->UNIT_WORD_COUNT);

  000ae	8b f7		 mov	 esi, edi

; 676  :                 if (digit_count >= (size_t)(_precision + 2))

  000b0	49 63 7f 18	 movsxd	 rdi, DWORD PTR [r15+24]
  000b4	8d 47 02	 lea	 eax, DWORD PTR [rdi+2]
  000b7	48 63 d0	 movsxd	 rdx, eax
  000ba	48 3b f2	 cmp	 rsi, rdx
  000bd	0f 82 c6 00 00
	00		 jb	 $LN2@FormatInte

; 677  :                 {
; 678  :                     NUMBER_HEADER* fraction_number = get_x_times_of_exponent_of_10(5, digit_count - _precision - 2);

  000c3	48 2b f7	 sub	 rsi, rdi

; 74   :             ResourceHolderUINT root;

  000c6	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000cb	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000d0	90		 npad	 1

; 75   :             NUMBER_HEADER* _10 = From_I_Imp(10);

  000d1	b9 0a 00 00 00	 mov	 ecx, 10
  000d6	e8 00 00 00 00	 call	 ?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::From_I_Imp
  000db	48 8b f8	 mov	 rdi, rax

; 76   :             root.HookNumber(_10);

  000de	48 8b d0	 mov	 rdx, rax
  000e1	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000e6	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 77   : #if _M_IX86
; 78   :             NUMBER_HEADER* exponent_of_10 = PMC_Pow_X_I_Imp(_10, e);
; 79   : #elif defined(_M_X64)
; 80   :             NUMBER_HEADER* exponent_of_10 = PMC_Pow_X_L_Imp(_10, e);

  000eb	48 8d 56 fe	 lea	 rdx, QWORD PTR [rsi-2]
  000ef	48 8b cf	 mov	 rcx, rdi
  000f2	e8 00 00 00 00	 call	 ?PMC_Pow_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Pow_X_L_Imp
  000f7	48 8b f8	 mov	 rdi, rax

; 81   : #else
; 82   : #error unknown platform
; 83   : #endif
; 84   :             root.HookNumber(exponent_of_10);

  000fa	48 8b d0	 mov	 rdx, rax
  000fd	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  00102	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 85   :             NUMBER_HEADER* x_times_of_exponent_of_10 = PMC_Multiply_X_I_Imp(exponent_of_10, x);

  00107	ba 05 00 00 00	 mov	 edx, 5
  0010c	48 8b cf	 mov	 rcx, rdi
  0010f	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  00114	48 8b f8	 mov	 rdi, rax

; 86   :             return (x_times_of_exponent_of_10);

  00117	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  0011c	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT

; 679  :                     root.HookNumber(fraction_number);

  00121	48 8b d7	 mov	 rdx, rdi
  00124	48 8d 4c 24 58	 lea	 rcx, QWORD PTR root$[rsp]
  00129	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 680  :                     NUMBER_HEADER* x2 = PMC_Add_X_X_Imp(x_abs, fraction_number);

  0012e	48 8b d7	 mov	 rdx, rdi
  00131	49 8b cd	 mov	 rcx, r13
  00134	e8 00 00 00 00	 call	 ?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_X_Imp
  00139	48 8b f8	 mov	 rdi, rax

; 681  :                     root.HookNumber(x2);

  0013c	48 8b d0	 mov	 rdx, rax
  0013f	48 8d 4c 24 58	 lea	 rcx, QWORD PTR root$[rsp]
  00144	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 682  :                     Formatter::FormatInternally(x2, writer);

  00149	48 8b d7	 mov	 rdx, rdi

; 683  :                 }
; 684  :                 else

  0014c	eb 3e		 jmp	 SHORT $LN30@FormatInte
$LN10@FormatInte:

; 61   :                 root.ClearBlock(q_buf);

  0014e	49 8b d6	 mov	 rdx, r14
  00151	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  00156	e8 00 00 00 00	 call	 ?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock

; 62   :                 DivRem_X_1W(u_buf, u_count, 10, q_buf, &temp_r);

  0015b	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR temp_r$3[rsp]
  00163	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00168	4d 8b ce	 mov	 r9, r14
  0016b	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00171	48 8b d3	 mov	 rdx, rbx
  00174	48 8b cd	 mov	 rcx, rbp
  00177	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 63   :                 __UNIT_TYPE* t = u_buf;

  0017c	48 8b c5	 mov	 rax, rbp

; 64   :                 u_buf = q_buf;

  0017f	49 8b ee	 mov	 rbp, r14

; 65   :                 q_buf = t;
; 66   :                 ++digit_count;

  00182	ff c7		 inc	 edi

; 67   :             }

  00184	e9 f3 fe ff ff	 jmp	 $LN29@FormatInte
$LN2@FormatInte:

; 685  :                     Formatter::FormatInternally(x_abs, writer);

  00189	49 8b d5	 mov	 rdx, r13
$LN30@FormatInte:

; 686  :             }

  0018c	4d 8b c4	 mov	 r8, r12
  0018f	49 8b cf	 mov	 rcx, r15
  00192	e8 00 00 00 00	 call	 ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
  00197	90		 npad	 1
  00198	48 8d 4c 24 58	 lea	 rcx, QWORD PTR root$[rsp]
  0019d	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001a2	4c 8d 9c 24 80
	00 00 00	 lea	 r11, QWORD PTR [rsp+128]
  001aa	49 8b 5b 38	 mov	 rbx, QWORD PTR [r11+56]
  001ae	49 8b 6b 40	 mov	 rbp, QWORD PTR [r11+64]
  001b2	49 8b 73 48	 mov	 rsi, QWORD PTR [r11+72]
  001b6	49 8b e3	 mov	 rsp, r11
  001b9	41 5f		 pop	 r15
  001bb	41 5e		 pop	 r14
  001bd	41 5d		 pop	 r13
  001bf	41 5c		 pop	 r12
  001c1	5f		 pop	 rdi
  001c2	c3		 ret	 0
?FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
root$2 = 56
root$ = 88
temp_r$3 = 176
this$ = 176
x_abs$ = 184
writer$ = 192
?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$0
  00000	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
root$2 = 56
root$ = 88
temp_r$3 = 176
this$ = 176
x_abs$ = 184
writer$ = 192
?dtor$1@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$1
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$1@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
root$2 = 56
root$ = 88
temp_r$3 = 176
this$ = 176
x_abs$ = 184
writer$ = 192
?dtor$2@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$2
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$2@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
root$2 = 56
root$ = 88
temp_r$3 = 176
this$ = 176
x_abs$ = 184
writer$ = 192
?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$0
  00000	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
root$2 = 56
root$ = 88
temp_r$3 = 176
this$ = 176
x_abs$ = 184
writer$ = 192
?dtor$1@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$1
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$1@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
root$2 = 56
root$ = 88
temp_r$3 = 176
this$ = 176
x_abs$ = 184
writer$ = 192
?dtor$2@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$2
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$2@?0??FormatInternally@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatInternally'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
writer$ = 56
?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteZeroValue, COMDAT

; 661  :             {

$LN14:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	56		 push	 rsi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 662  :                 writer->Write(L'0');

  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 8b da	 mov	 rbx, rdx
  00010	48 8b f1	 mov	 rsi, rcx
  00013	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00018	48 8b cb	 mov	 rcx, rbx
  0001b	ff 50 08	 call	 QWORD PTR [rax+8]

; 663  :                 if (_precision > 0)

  0001e	83 7e 18 00	 cmp	 DWORD PTR [rsi+24], 0
  00022	7e 37		 jle	 SHORT $LN6@WriteZeroV

; 664  :                 {
; 665  :                     writer->Write(_number_format_info->Number.DecimalSeparator);

  00024	48 8b 56 20	 mov	 rdx, QWORD PTR [rsi+32]
  00028	48 8b cb	 mov	 rcx, rbx
  0002b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0002e	48 83 c2 6c	 add	 rdx, 108		; 0000006cH
  00032	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00037	ff 10		 call	 QWORD PTR [rax]

; 666  :                     writer->Write(L'0', _precision);

  00039	48 63 7e 18	 movsxd	 rdi, DWORD PTR [rsi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  0003d	48 85 ff	 test	 rdi, rdi
  00040	74 14		 je	 SHORT $LN12@WriteZeroV
$LL5@WriteZeroV:

; 228  :             {
; 229  :                 Write(c);

  00042	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00045	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004a	48 8b cb	 mov	 rcx, rbx
  0004d	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  00050	48 83 ef 01	 sub	 rdi, 1
  00054	75 ec		 jne	 SHORT $LL5@WriteZeroV
$LN12@WriteZeroV:
  00056	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
$LN6@WriteZeroV:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 668  :                 writer->Write(_format_type);

  0005b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0005e	48 8b cb	 mov	 rcx, rbx
  00061	0f b7 56 14	 movzx	 edx, WORD PTR [rsi+20]
  00065	ff 50 08	 call	 QWORD PTR [rax+8]

; 669  :                 writer->Write(L"+000");

  00068	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0006b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_19NKFEMDNP@?$AA?$CL?$AA0?$AA0?$AA0@
  00072	48 8b cb	 mov	 rcx, rbx

; 670  :             }

  00075	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0007a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007e	5e		 pop	 rsi

; 669  :                 writer->Write(L"+000");

  0007f	48 ff 20	 rex_jmp QWORD PTR [rax]
?WriteZeroValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::GetDefaultPrecisionValue, COMDAT

; 657  :                 return (6);

  00000	b8 06 00 00 00	 mov	 eax, 6

; 658  :             }

  00005	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 8
format_type$ = 16
precision$ = 24
number_format_info$ = 32
??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatterTypeE, COMDAT

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00000	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H

; 191  :             const int digit_count_on_word = 19;

  0000a	c7 41 10 13 00
	00 00		 mov	 DWORD PTR [rcx+16], 19
  00011	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 651  :             {

  00015	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  0001c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 652  :             }

  0001f	48 8b c1	 mov	 rax, rcx

; 204  :                 _format_type = format_type;

  00022	66 89 51 14	 mov	 WORD PTR [rcx+20], dx

; 205  :                 _precision = precision;

  00026	44 89 41 18	 mov	 DWORD PTR [rcx+24], r8d

; 206  :                 _number_format_info = number_format_info;

  0002a	4c 89 49 20	 mov	 QWORD PTR [rcx+32], r9

; 652  :             }

  0002e	c3		 ret	 0
??0FormatterTypeE@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeE::FormatterTypeE
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 8
x_sign$ = 16
writer$ = 24
?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteSuffix, COMDAT

; 642  :             }

  00000	c2 00 00	 ret	 0
?WriteSuffix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
number_sequence_str$ = 56
writer$ = 64
?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatNumberSequence, COMDAT

; 635  :             {

$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b d9	 mov	 rbx, rcx
  00012	49 8b f8	 mov	 rdi, r8

; 636  :                 writer->Write(L'0', _precision > lstrlenW(number_sequence_str) ? _precision - lstrlenW(number_sequence_str) : 0);

  00015	48 8b ca	 mov	 rcx, rdx
  00018	48 8b f2	 mov	 rsi, rdx
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00021	39 43 18	 cmp	 DWORD PTR [rbx+24], eax
  00024	7e 10		 jle	 SHORT $LN3@FormatNumb
  00026	48 8b ce	 mov	 rcx, rsi
  00029	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0002f	8b 4b 18	 mov	 ecx, DWORD PTR [rbx+24]
  00032	2b c8		 sub	 ecx, eax
  00034	eb 02		 jmp	 SHORT $LN4@FormatNumb
$LN3@FormatNumb:
  00036	33 c9		 xor	 ecx, ecx
$LN4@FormatNumb:
  00038	48 63 d9	 movsxd	 rbx, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  0003b	85 c9		 test	 ecx, ecx
  0003d	74 15		 je	 SHORT $LN7@FormatNumb
  0003f	90		 npad	 1
$LL6@FormatNumb:

; 228  :             {
; 229  :                 Write(c);

  00040	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00043	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00048	48 8b cf	 mov	 rcx, rdi
  0004b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0004e	48 83 eb 01	 sub	 rbx, 1
  00052	75 ec		 jne	 SHORT $LL6@FormatNumb
$LN7@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 637  :                 writer->Write(number_sequence_str);

  00054	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00057	48 8b d6	 mov	 rdx, rsi
  0005a	48 8b cf	 mov	 rcx, rdi

; 638  :             }

  0005d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00062	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi

; 637  :                 writer->Write(number_sequence_str);

  0006c	48 ff 20	 rex_jmp QWORD PTR [rax]
?FormatNumberSequence@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatNumberSequence
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 8
x_sign$ = 16
writer$ = 24
?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WritePrefix, COMDAT

; 630  :                 if (x_sign < 0)

  00000	84 d2		 test	 dl, dl
  00002	79 14		 jns	 SHORT $LN2@WritePrefi

; 631  :                     writer->Write(_number_format_info->NegativeSign);

  00004	48 8b 51 20	 mov	 rdx, QWORD PTR [rcx+32]
  00008	49 8b c8	 mov	 rcx, r8
  0000b	49 8b 00	 mov	 rax, QWORD PTR [r8]
  0000e	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  00015	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN2@WritePrefi:

; 632  :             }

  00018	c3		 ret	 0
?WritePrefix@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WritePrefix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
writer$ = 56
?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteZeroValue, COMDAT

; 624  :             {

$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 625  :                 writer->Write(L'0', _precision < 1 ? 1 : _precision);

  0000a	8b 41 18	 mov	 eax, DWORD PTR [rcx+24]
  0000d	48 8b fa	 mov	 rdi, rdx
  00010	b9 01 00 00 00	 mov	 ecx, 1
  00015	3b c1		 cmp	 eax, ecx
  00017	0f 4c c1	 cmovl	 eax, ecx
  0001a	48 63 d8	 movsxd	 rbx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  0001d	85 c0		 test	 eax, eax
  0001f	74 14		 je	 SHORT $LN7@WriteZeroV
$LL6@WriteZeroV:

; 228  :             {
; 229  :                 Write(c);

  00021	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00024	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00029	48 8b cf	 mov	 rcx, rdi
  0002c	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0002f	48 83 eb 01	 sub	 rbx, 1
  00033	75 ec		 jne	 SHORT $LL6@WriteZeroV
$LN7@WriteZeroV:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 626  :             }

  00035	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?WriteZeroValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::GetDefaultPrecisionValue, COMDAT

; 620  :                 return (0);

  00000	33 c0		 xor	 eax, eax

; 621  :             }

  00002	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 8
precision$ = 16
number_format_info$ = 24
??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatterTypeD, COMDAT

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00000	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H

; 191  :             const int digit_count_on_word = 19;

  0000a	c7 41 10 13 00
	00 00		 mov	 DWORD PTR [rcx+16], 19
  00011	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00015	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  0001a	66 89 41 14	 mov	 WORD PTR [rcx+20], ax

; 614  :             {

  0001e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00025	48 89 01	 mov	 QWORD PTR [rcx], rax

; 615  :             }

  00028	48 8b c1	 mov	 rax, rcx

; 205  :                 _precision = precision;

  0002b	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 206  :                 _number_format_info = number_format_info;

  0002e	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 615  :             }

  00032	c3		 ret	 0
??0FormatterTypeD@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeD::FormatterTypeD
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
x_sign$ = 56
writer$ = 64
?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteSuffix, COMDAT

; 525  :             {

$LN36:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b d8	 mov	 rbx, r8
  0000d	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00011	48 8b f9	 mov	 rdi, rcx

; 526  :                 if (x_sign >= 0)

  00014	84 d2		 test	 dl, dl
  00016	78 22		 js	 SHORT $LN6@WriteSuffi

; 527  :                 {
; 528  :                     switch (_number_format_info->Currency.PositivePattern)

  00018	41 8b 50 64	 mov	 edx, DWORD PTR [r8+100]
  0001c	83 ea 01	 sub	 edx, 1
  0001f	74 63		 je	 SHORT $LN17@WriteSuffi
  00021	83 fa 02	 cmp	 edx, 2
  00024	0f 85 5e 01 00
	00		 jne	 $LN4@WriteSuffi
$LN20@WriteSuffi:

; 601  :                         writer->Write(L')');
; 602  :                         break;
; 603  :                     }
; 604  :                 }
; 605  :             }

  0002a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0002d	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00032	48 8b cb	 mov	 rcx, rbx
  00035	ff 50 08	 call	 QWORD PTR [rax+8]
  00038	eb 73		 jmp	 SHORT $LN31@WriteSuffi
$LN6@WriteSuffi:

; 529  :                     {
; 530  :                     case 0:
; 531  :                     default:
; 532  :                         break;
; 533  :                     case 1:
; 534  :                         writer->Write(_number_format_info->CurrencySymbol);
; 535  :                         break;
; 536  :                     case 2:
; 537  :                         break;
; 538  :                     case 3:
; 539  :                         writer->Write(L' ');
; 540  :                         writer->Write(_number_format_info->CurrencySymbol);
; 541  :                         break;
; 542  :                     }
; 543  :                 }
; 544  :                 else
; 545  :                 {
; 546  :                     switch (_number_format_info->Currency.NegativePattern)

  0003a	41 8b 40 60	 mov	 eax, DWORD PTR [r8+96]
  0003e	ff c8		 dec	 eax
  00040	83 f8 0e	 cmp	 eax, 14
  00043	0f 87 31 01 00
	00		 ja	 $LN12@WriteSuffi
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  00050	48 98		 cdqe
  00052	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN29@WriteSuffi[rdx+rax*4]
  00059	48 03 ca	 add	 rcx, rdx
  0005c	ff e1		 jmp	 rcx
$LN15@WriteSuffi:

; 601  :                         writer->Write(L')');
; 602  :                         break;
; 603  :                     }
; 604  :                 }
; 605  :             }

  0005e	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00061	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  00068	48 8b cb	 mov	 rcx, rbx
  0006b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00070	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00074	5f		 pop	 rdi
  00075	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN16@WriteSuffi:

; 547  :                     {
; 548  :                     case 0:
; 549  :                     default:
; 550  :                         writer->Write(L')');
; 551  :                         break;
; 552  :                     case 1:
; 553  :                         break;
; 554  :                     case 2:
; 555  :                         break;
; 556  :                     case 3:
; 557  :                         writer->Write(_number_format_info->NegativeSign);
; 558  :                         break;
; 559  :                     case 4:
; 560  :                         writer->Write(_number_format_info->CurrencySymbol);

  00078	49 8d 90 38 01
	00 00		 lea	 rdx, QWORD PTR [r8+312]

; 561  :                         writer->Write(L')');
; 562  :                         break;

  0007f	e9 ee 00 00 00	 jmp	 $LN33@WriteSuffi
$LN17@WriteSuffi:

; 601  :                         writer->Write(L')');
; 602  :                         break;
; 603  :                     }
; 604  :                 }
; 605  :             }

  00084	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00087	49 8d 90 38 01
	00 00		 lea	 rdx, QWORD PTR [r8+312]
  0008e	48 8b cb	 mov	 rcx, rbx
  00091	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00096	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009a	5f		 pop	 rdi
  0009b	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN18@WriteSuffi:

; 563  :                     case 5:
; 564  :                         writer->Write(_number_format_info->CurrencySymbol);
; 565  :                         break;
; 566  :                     case 6:
; 567  :                         writer->Write(_number_format_info->NegativeSign);

  0009e	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000a1	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  000a8	48 8b cb	 mov	 rcx, rbx
  000ab	ff 10		 call	 QWORD PTR [rax]
$LN31@WriteSuffi:

; 601  :                         writer->Write(L')');
; 602  :                         break;
; 603  :                     }
; 604  :                 }
; 605  :             }

  000ad	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  000b1	48 8b cb	 mov	 rcx, rbx
  000b4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000b7	48 81 c2 38 01
	00 00		 add	 rdx, 312		; 00000138H
  000be	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c7	5f		 pop	 rdi
  000c8	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN19@WriteSuffi:

; 568  :                         writer->Write(_number_format_info->CurrencySymbol);
; 569  :                         break;
; 570  :                     case 7:
; 571  :                         writer->Write(_number_format_info->CurrencySymbol);

  000cb	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000ce	49 8d 90 38 01
	00 00		 lea	 rdx, QWORD PTR [r8+312]
  000d5	48 8b cb	 mov	 rcx, rbx
  000d8	ff 10		 call	 QWORD PTR [rax]

; 572  :                         writer->Write(_number_format_info->NegativeSign);

  000da	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  000de	48 8b cb	 mov	 rcx, rbx
  000e1	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000e4	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH

; 601  :                         writer->Write(L')');
; 602  :                         break;
; 603  :                     }
; 604  :                 }
; 605  :             }

  000eb	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000f0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000f4	5f		 pop	 rdi

; 572  :                         writer->Write(_number_format_info->NegativeSign);

  000f5	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN22@WriteSuffi:

; 573  :                         break;
; 574  :                     case 8:
; 575  :                         writer->Write(L' ');
; 576  :                         writer->Write(_number_format_info->CurrencySymbol);
; 577  :                         break;
; 578  :                     case 9:
; 579  :                         break;
; 580  :                     case 10:
; 581  :                         writer->Write(L' ');

  000f8	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000fb	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00100	48 8b cb	 mov	 rcx, rbx
  00103	ff 50 08	 call	 QWORD PTR [rax+8]

; 582  :                         writer->Write(_number_format_info->CurrencySymbol);

  00106	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  0010a	48 8b cb	 mov	 rcx, rbx
  0010d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00110	48 81 c2 38 01
	00 00		 add	 rdx, 312		; 00000138H
  00117	ff 10		 call	 QWORD PTR [rax]

; 583  :                         writer->Write(_number_format_info->NegativeSign);

  00119	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]

; 601  :                         writer->Write(L')');
; 602  :                         break;
; 603  :                     }
; 604  :                 }
; 605  :             }

  0011d	48 8b cb	 mov	 rcx, rbx
  00120	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00123	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  0012a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0012f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00133	5f		 pop	 rdi
  00134	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN25@WriteSuffi:

; 584  :                         break;
; 585  :                     case 11:
; 586  :                         writer->Write(_number_format_info->NegativeSign);
; 587  :                         break;
; 588  :                     case 12:
; 589  :                         break;
; 590  :                     case 13:
; 591  :                         writer->Write(_number_format_info->NegativeSign);

  00137	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0013a	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  00141	48 8b cb	 mov	 rcx, rbx
  00144	ff 10		 call	 QWORD PTR [rax]

; 592  :                         writer->Write(L' ');

  00146	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00149	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0014e	48 8b cb	 mov	 rcx, rbx
  00151	ff 50 08	 call	 QWORD PTR [rax+8]

; 593  :                         writer->Write(_number_format_info->CurrencySymbol);
; 594  :                         break;
; 595  :                     case 14:
; 596  :                         writer->Write(L')');
; 597  :                         break;

  00154	e9 54 ff ff ff	 jmp	 $LN31@WriteSuffi
$LN27@WriteSuffi:

; 598  :                     case 15:
; 599  :                         writer->Write(L' ');

  00159	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0015c	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00161	48 8b cb	 mov	 rcx, rbx
  00164	ff 50 08	 call	 QWORD PTR [rax+8]

; 600  :                         writer->Write(_number_format_info->CurrencySymbol);

  00167	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  0016b	48 81 c2 38 01
	00 00		 add	 rdx, 312		; 00000138H
$LN33@WriteSuffi:

; 601  :                         writer->Write(L')');
; 602  :                         break;
; 603  :                     }
; 604  :                 }
; 605  :             }

  00172	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00175	48 8b cb	 mov	 rcx, rbx
  00178	ff 10		 call	 QWORD PTR [rax]
$LN12@WriteSuffi:
  0017a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0017d	ba 29 00 00 00	 mov	 edx, 41			; 00000029H
  00182	48 8b cb	 mov	 rcx, rbx
  00185	ff 50 08	 call	 QWORD PTR [rax+8]
$LN4@WriteSuffi:
  00188	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0018d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00191	5f		 pop	 rdi
  00192	c3		 ret	 0
  00193	90		 npad	 1
$LN29@WriteSuffi:
  00194	00 00 00 00	 DD	 $LN4@WriteSuffi
  00198	00 00 00 00	 DD	 $LN4@WriteSuffi
  0019c	00 00 00 00	 DD	 $LN15@WriteSuffi
  001a0	00 00 00 00	 DD	 $LN16@WriteSuffi
  001a4	00 00 00 00	 DD	 $LN17@WriteSuffi
  001a8	00 00 00 00	 DD	 $LN18@WriteSuffi
  001ac	00 00 00 00	 DD	 $LN19@WriteSuffi
  001b0	00 00 00 00	 DD	 $LN20@WriteSuffi
  001b4	00 00 00 00	 DD	 $LN4@WriteSuffi
  001b8	00 00 00 00	 DD	 $LN22@WriteSuffi
  001bc	00 00 00 00	 DD	 $LN15@WriteSuffi
  001c0	00 00 00 00	 DD	 $LN4@WriteSuffi
  001c4	00 00 00 00	 DD	 $LN25@WriteSuffi
  001c8	00 00 00 00	 DD	 $LN12@WriteSuffi
  001cc	00 00 00 00	 DD	 $LN27@WriteSuffi
?WriteSuffix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteSuffix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence, COMDAT

; 507  :             {

$LN65:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 54		 push	 r12
  0000a	41 55		 push	 r13
  0000c	41 56		 push	 r14
  0000e	41 57		 push	 r15
  00010	48 8d 6c 24 d9	 lea	 rbp, QWORD PTR [rsp-39]
  00015	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  0001c	48 c7 45 a7 fe
	ff ff ff	 mov	 QWORD PTR $T1[rbp-185], -2
  00024	48 89 9c 24 28
	01 00 00	 mov	 QWORD PTR [rsp+296], rbx
  0002c	48 8b da	 mov	 rbx, rdx
  0002f	4c 8b e1	 mov	 r12, rcx

; 508  :                 ResourceHolderUINT root;

  00032	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00036	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003b	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 52   :             _p = p;

  0003c	33 f6		 xor	 esi, esi
  0003e	48 89 75 97	 mov	 QWORD PTR r_reader$[rbp-177], rsi

; 142  :         {

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@
  00049	48 89 45 8f	 mov	 QWORD PTR r_reader$[rbp-185], rax

; 143  :             _start = p;

  0004d	48 89 5d 9f	 mov	 QWORD PTR r_reader$[rbp-169], rbx

; 144  :             _p = p + lstrlenW(p) - 1;

  00051	48 8b cb	 mov	 rcx, rbx
  00054	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0005a	48 63 c8	 movsxd	 rcx, eax
  0005d	48 ff c9	 dec	 rcx
  00060	48 8d 04 4b	 lea	 rax, QWORD PTR [rbx+rcx*2]
  00064	48 89 45 97	 mov	 QWORD PTR r_reader$[rbp-177], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 510  :                 size_t work_buf_len = lstrlenW(number_sequence_str) * 2 + 1 + _precision + 1;

  00068	48 8b cb	 mov	 rcx, rbx
  0006b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00071	8d 0c 00	 lea	 ecx, DWORD PTR [rax+rax]
  00074	41 8b 44 24 18	 mov	 eax, DWORD PTR [r12+24]
  00079	83 c0 02	 add	 eax, 2
  0007c	03 c8		 add	 ecx, eax
  0007e	48 63 d9	 movsxd	 rbx, ecx

; 511  :                 wchar_t* work_buf = root.AllocateString(work_buf_len);

  00081	48 8b d3	 mov	 rdx, rbx
  00084	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00088	e8 00 00 00 00	 call	 ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
  0008d	48 8b c8	 mov	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 264  :             : StringWriter(buffer != nullptr ? buffer + size : nullptr, buffer, buffer != nullptr ? buffer + size : nullptr)

  00090	48 85 c0	 test	 rax, rax
  00093	48 8d 04 58	 lea	 rax, QWORD PTR [rax+rbx*2]
  00097	75 02		 jne	 SHORT $LN15@FormatNumb
  00099	8b c6		 mov	 eax, esi
$LN15@FormatNumb:

; 201  :             _p = p;

  0009b	48 89 44 24 28	 mov	 QWORD PTR r_writer$[rsp+8], rax

; 202  :             _sob = sob;

  000a0	48 89 4c 24 30	 mov	 QWORD PTR r_writer$[rsp+16], rcx

; 203  :             _eob = eob;

  000a5	48 89 44 24 38	 mov	 QWORD PTR r_writer$[rsp+24], rax

; 204  :             _written = 0;

  000aa	48 89 75 87	 mov	 QWORD PTR r_writer$[rbp-153], rsi

; 265  :         {

  000ae	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
  000b5	48 89 54 24 20	 mov	 QWORD PTR r_writer$[rsp], rdx
  000ba	48 3b c1	 cmp	 rax, rcx

; 271  :             if (_p <= _sob)

  000bd	0f 86 95 01 00
	00		 jbe	 $LN63@FormatNumb

; 273  :             --_p;

  000c3	48 83 c0 fe	 add	 rax, -2
  000c7	48 89 44 24 28	 mov	 QWORD PTR r_writer$[rsp+8], rax

; 274  :             *_p = c;

  000cc	66 89 30	 mov	 WORD PTR [rax], si

; 275  :             ++_written;

  000cf	48 ff 45 87	 inc	 QWORD PTR r_writer$[rbp-153]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 513  :                 ThousandSeparatedStringWriter t_writer(&r_writer, _format_type, _number_format_info);

  000d3	49 8b 44 24 20	 mov	 rax, QWORD PTR [r12+32]
  000d8	41 0f b7 4c 24
	14		 movzx	 ecx, WORD PTR [r12+20]

; 106  :                 if (format_type == L'C')

  000de	44 8b 75 07	 mov	 r14d, DWORD PTR t_writer$[rbp-137]
  000e2	66 83 f9 43	 cmp	 cx, 67			; 00000043H
  000e6	75 06		 jne	 SHORT $LN25@FormatNumb

; 107  :                 {
; 108  :                     decimal_info = &format_option->Currency;
; 109  :                     _is_supported_thousand = TRUE;

  000e8	41 83 ce 01	 or	 r14d, 1
  000ec	eb 26		 jmp	 SHORT $LN30@FormatNumb
$LN25@FormatNumb:

; 110  :                 }
; 111  :                 else if (format_type == L'P')

  000ee	66 83 f9 50	 cmp	 cx, 80			; 00000050H
  000f2	75 0c		 jne	 SHORT $LN27@FormatNumb

; 112  :                 {
; 113  :                     decimal_info = &format_option->Percent;

  000f4	48 05 d0 00 00
	00		 add	 rax, 208		; 000000d0H

; 114  :                     _is_supported_thousand = TRUE;

  000fa	41 83 ce 01	 or	 r14d, 1
  000fe	eb 14		 jmp	 SHORT $LN30@FormatNumb
$LN27@FormatNumb:

; 115  :                 }
; 116  :                 else if (format_type == L'N')

  00100	48 83 c0 68	 add	 rax, 104		; 00000068H
  00104	66 83 f9 4e	 cmp	 cx, 78			; 0000004eH
  00108	75 06		 jne	 SHORT $LN29@FormatNumb

; 117  :                 {
; 118  :                     decimal_info = &format_option->Number;
; 119  :                     _is_supported_thousand = TRUE;

  0010a	41 83 ce 01	 or	 r14d, 1

; 120  :                 }
; 121  :                 else

  0010e	eb 04		 jmp	 SHORT $LN30@FormatNumb
$LN29@FormatNumb:

; 122  :                 {
; 123  :                     decimal_info = &format_option->Number;
; 124  :                     _is_supported_thousand = FALSE;

  00110	41 83 e6 fe	 and	 r14d, -2		; fffffffeH
$LN30@FormatNumb:

; 125  :                 }
; 126  : 
; 127  :                 const wchar_t* in_ptr = decimal_info->GroupSeparator;
; 128  : 
; 129  :                 _current_group = &decimal_info->GroupSizes[0];

  00114	4c 8d 68 48	 lea	 r13, QWORD PTR [rax+72]

; 130  :                 _group_separator = decimal_info->GroupSeparator;

  00118	4c 8d 78 26	 lea	 r15, QWORD PTR [rax+38]

; 131  :                 _current_group_size = *_current_group - L'0';

  0011c	41 0f b7 5d 00	 movzx	 ebx, WORD PTR [r13]
$LN61@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 149  :             if (_p < _start)

  00121	83 eb 30	 sub	 ebx, 48			; 00000030H
  00124	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL2@FormatNumb:
  00130	48 8b 45 97	 mov	 rax, QWORD PTR r_reader$[rbp-177]
  00134	48 3b 45 9f	 cmp	 rax, QWORD PTR r_reader$[rbp-169]
  00138	0f 82 9e 00 00
	00		 jb	 $LN59@FormatNumb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 514  :                 while (r_reader.PeekChar() != L'\0')

  0013e	66 83 38 00	 cmp	 WORD PTR [rax], 0
  00142	0f 84 94 00 00
	00		 je	 $LN59@FormatNumb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 57   :             wchar_t c = PeekChar();

  00148	48 8d 4d 8f	 lea	 rcx, QWORD PTR r_reader$[rbp-185]
  0014c	48 8b 45 8f	 mov	 rax, QWORD PTR r_reader$[rbp-185]
  00150	ff 10		 call	 QWORD PTR [rax]
  00152	0f b7 f8	 movzx	 edi, ax

; 58   :             Progress();

  00155	48 8d 4d 8f	 lea	 rcx, QWORD PTR r_reader$[rbp-185]
  00159	48 8b 55 8f	 mov	 rdx, QWORD PTR r_reader$[rbp-185]
  0015d	ff 52 08	 call	 QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 137  :                 if (_is_supported_thousand && c >= L'0' && c <= L'9')

  00160	41 f6 c6 01	 test	 r14b, 1
  00164	74 61		 je	 SHORT $LN40@FormatNumb
  00166	8d 4f d0	 lea	 ecx, DWORD PTR [rdi-48]
  00169	66 83 f9 09	 cmp	 cx, 9
  0016d	77 58		 ja	 SHORT $LN40@FormatNumb

; 138  :                 {
; 139  :                     // 桁区切りをサポートする場合
; 140  :                     if (_current_group_size > 0 && _current_group_index >= _current_group_size)

  0016f	85 db		 test	 ebx, ebx
  00171	7e 3d		 jle	 SHORT $LN42@FormatNumb
  00173	3b f3		 cmp	 esi, ebx
  00175	7c 39		 jl	 SHORT $LN42@FormatNumb

; 141  :                     {
; 142  :                         // 現在のグループ幅が 0 ではなく、かつ既に出力した文字数がグループ幅に達した場合
; 143  : 
; 144  :                         // グループ区切り文字を出力してから与えられた文字を出力する
; 145  :                         _native_writer->Write(_group_separator);

  00177	49 8b d7	 mov	 rdx, r15
  0017a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  0017f	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  00184	ff 10		 call	 QWORD PTR [rax]

; 146  :                         _native_writer->Write(c);

  00186	0f b7 d7	 movzx	 edx, di
  00189	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  0018e	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  00193	ff 50 08	 call	 QWORD PTR [rax+8]

; 147  :                         _current_group_index = 1;

  00196	be 01 00 00 00	 mov	 esi, 1

; 148  : 
; 149  :                         // 次のグループが存在すればそのグループに移行する
; 150  :                         if (_current_group[1] != L'\0')

  0019b	49 8d 45 02	 lea	 rax, QWORD PTR [r13+2]
  0019f	66 83 38 00	 cmp	 WORD PTR [rax], 0
  001a3	74 8b		 je	 SHORT $LL2@FormatNumb

; 151  :                         {
; 152  :                             _current_group += 1;

  001a5	4c 8b e8	 mov	 r13, rax

; 153  :                             _current_group_size = _current_group[0] - L'0';

  001a8	0f b7 18	 movzx	 ebx, WORD PTR [rax]

; 154  :                         }
; 155  :                     }
; 156  :                     else

  001ab	e9 71 ff ff ff	 jmp	 $LN61@FormatNumb
$LN42@FormatNumb:

; 157  :                     {
; 158  :                         // 現在のグループの幅が 0 であるかあるいは出力した文字数がグループ幅に達していない場合
; 159  :                         _native_writer->Write(c);

  001b0	0f b7 d7	 movzx	 edx, di
  001b3	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001b8	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001bd	ff 50 08	 call	 QWORD PTR [rax+8]

; 160  :                         _current_group_index += 1;

  001c0	ff c6		 inc	 esi

; 161  :                     }
; 162  :                 }
; 163  :                 else

  001c2	e9 69 ff ff ff	 jmp	 $LL2@FormatNumb
$LN40@FormatNumb:

; 164  :                 {
; 165  :                     // 桁区切りをサポートしない場合
; 166  : 
; 167  :                     _native_writer->Write(c);

  001c7	0f b7 d7	 movzx	 edx, di
  001ca	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001cf	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001d4	ff 50 08	 call	 QWORD PTR [rax+8]

; 515  :                     t_writer.Write(r_reader.ReadChar());

  001d7	e9 54 ff ff ff	 jmp	 $LL2@FormatNumb
$LN59@FormatNumb:

; 516  :                 writer->Write(t_writer.GetString());

  001dc	4c 8b 7d 77	 mov	 r15, QWORD PTR writer$[rbp-185]
  001e0	49 8b 07	 mov	 rax, QWORD PTR [r15]
  001e3	48 8b 18	 mov	 rbx, QWORD PTR [rax]

; 179  :                 return (_native_writer->GetString());

  001e6	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r_writer$[rsp]
  001eb	48 8b 44 24 20	 mov	 rax, QWORD PTR r_writer$[rsp]
  001f0	ff 50 10	 call	 QWORD PTR [rax+16]

; 516  :                 writer->Write(t_writer.GetString());

  001f3	48 8b d0	 mov	 rdx, rax
  001f6	49 8b cf	 mov	 rcx, r15
  001f9	ff d3		 call	 rbx

; 517  :                 if (_precision > 0)

  001fb	41 83 7c 24 18
	00		 cmp	 DWORD PTR [r12+24], 0
  00201	7e 31		 jle	 SHORT $LN50@FormatNumb

; 518  :                 {
; 519  :                     writer->Write(_number_format_info->Currency.DecimalSeparator);

  00203	49 8b 07	 mov	 rax, QWORD PTR [r15]
  00206	49 8b 54 24 20	 mov	 rdx, QWORD PTR [r12+32]
  0020b	48 83 c2 04	 add	 rdx, 4
  0020f	49 8b cf	 mov	 rcx, r15
  00212	ff 10		 call	 QWORD PTR [rax]

; 520  :                     writer->Write(L'0', _precision);

  00214	49 63 5c 24 18	 movsxd	 rbx, DWORD PTR [r12+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00219	48 85 db	 test	 rbx, rbx
  0021c	74 16		 je	 SHORT $LN50@FormatNumb
  0021e	66 90		 npad	 2
$LL49@FormatNumb:

; 228  :             {
; 229  :                 Write(c);

  00220	49 8b 07	 mov	 rax, QWORD PTR [r15]
  00223	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00228	49 8b cf	 mov	 rcx, r15
  0022b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0022e	48 83 eb 01	 sub	 rbx, 1

; 227  :             while (count > 0)

  00232	75 ec		 jne	 SHORT $LL49@FormatNumb
$LN50@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 522  :             }

  00234	48 8d 4d af	 lea	 rcx, QWORD PTR root$[rbp-185]
  00238	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0023d	48 8b 9c 24 28
	01 00 00	 mov	 rbx, QWORD PTR [rsp+296]
  00245	48 81 c4 e0 00
	00 00		 add	 rsp, 224		; 000000e0H
  0024c	41 5f		 pop	 r15
  0024e	41 5e		 pop	 r14
  00250	41 5d		 pop	 r13
  00252	41 5c		 pop	 r12
  00254	5f		 pop	 rdi
  00255	5e		 pop	 rsi
  00256	5d		 pop	 rbp
  00257	c3		 ret	 0
$LN63@FormatNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 272  :                 throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00258	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  0025f	48 8d 4d d7	 lea	 rcx, QWORD PTR $T2[rbp-185]
  00263	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00268	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  0026f	48 8d 4d d7	 lea	 rcx, QWORD PTR $T2[rbp-185]
  00273	e8 00 00 00 00	 call	 _CxxThrowException
  00278	cc		 int	 3
$LN60@FormatNumb:
?FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
r_writer$ = 32
r_reader$ = 72
$T1 = 96
root$ = 104
$T2 = 144
t_writer$ = 144
this$ = 288
number_sequence_str$ = 296
writer$ = 304
?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatNumberSequence@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEB_WPEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatNumberSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
x_sign$ = 56
writer$ = 64
?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WritePrefix, COMDAT

; 424  :             {

$LN36:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b d8	 mov	 rbx, r8
  0000d	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00011	48 8b f9	 mov	 rdi, rcx

; 425  :                 if (x_sign >= 0)

  00014	84 d2		 test	 dl, dl
  00016	78 41		 js	 SHORT $LN6@WritePrefi

; 426  :                 {
; 427  :                     switch (_number_format_info->Currency.PositivePattern)

  00018	41 8b 48 64	 mov	 ecx, DWORD PTR [r8+100]
  0001c	83 e9 01	 sub	 ecx, 1
  0001f	0f 84 73 01 00
	00		 je	 $LN4@WritePrefi
  00025	83 e9 01	 sub	 ecx, 1
  00028	74 23		 je	 SHORT $LN10@WritePrefi
  0002a	83 f9 01	 cmp	 ecx, 1
  0002d	0f 84 65 01 00
	00		 je	 $LN4@WritePrefi

; 499  :                     case 15:
; 500  :                         writer->Write(L'(');
; 501  :                         break;
; 502  :                     }
; 503  :                 }
; 504  :             }

  00033	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00036	49 8d 90 38 01
	00 00		 lea	 rdx, QWORD PTR [r8+312]
  0003d	48 8b cb	 mov	 rcx, rbx
  00040	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN10@WritePrefi:
  0004d	49 8d 90 38 01
	00 00		 lea	 rdx, QWORD PTR [r8+312]
  00054	e9 b2 00 00 00	 jmp	 $LN34@WritePrefi
$LN6@WritePrefi:

; 428  :                     {
; 429  :                     case 0:
; 430  :                     default:
; 431  :                         writer->Write(_number_format_info->CurrencySymbol);
; 432  :                         break;
; 433  :                     case 1:
; 434  :                         break;
; 435  :                     case 2:
; 436  :                         writer->Write(_number_format_info->CurrencySymbol);
; 437  :                         writer->Write(L' ');
; 438  :                         break;
; 439  :                     case 3:
; 440  :                         break;
; 441  :                     }
; 442  :                 }
; 443  :                 else
; 444  :                 {
; 445  :                     switch (_number_format_info->Currency.NegativePattern)

  00059	41 8b 40 60	 mov	 eax, DWORD PTR [r8+96]
  0005d	ff c8		 dec	 eax
  0005f	83 f8 0e	 cmp	 eax, 14
  00062	0f 87 0f 01 00
	00		 ja	 $LN12@WritePrefi
  00068	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  0006f	48 98		 cdqe
  00071	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN29@WritePrefi[rdx+rax*4]
  00078	48 03 ca	 add	 rcx, rdx
  0007b	ff e1		 jmp	 rcx
$LN13@WritePrefi:

; 450  :                         writer->Write(_number_format_info->CurrencySymbol);
; 451  :                         break;
; 452  :                     case 1:
; 453  :                         writer->Write(_number_format_info->NegativeSign);

  0007d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00080	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  00087	48 8b cb	 mov	 rcx, rbx
  0008a	ff 10		 call	 QWORD PTR [rax]

; 454  :                         writer->Write(_number_format_info->CurrencySymbol);
; 455  :                         break;

  0008c	e9 f4 00 00 00	 jmp	 $LN31@WritePrefi
$LN14@WritePrefi:

; 456  :                     case 2:
; 457  :                         writer->Write(_number_format_info->CurrencySymbol);

  00091	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00094	49 8d 90 38 01
	00 00		 lea	 rdx, QWORD PTR [r8+312]
  0009b	48 8b cb	 mov	 rcx, rbx
  0009e	ff 10		 call	 QWORD PTR [rax]

; 458  :                         writer->Write(_number_format_info->NegativeSign);

  000a0	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]

; 499  :                     case 15:
; 500  :                         writer->Write(L'(');
; 501  :                         break;
; 502  :                     }
; 503  :                 }
; 504  :             }

  000a4	48 8b cb	 mov	 rcx, rbx
  000a7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000aa	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  000b1	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000b6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ba	5f		 pop	 rdi
  000bb	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN15@WritePrefi:
  000be	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000c1	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  000c8	48 8b cb	 mov	 rcx, rbx
  000cb	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000d0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d4	5f		 pop	 rdi
  000d5	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN16@WritePrefi:
  000d8	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000db	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  000e0	48 8b cb	 mov	 rcx, rbx
  000e3	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000e8	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ec	5f		 pop	 rdi
  000ed	48 ff 60 08	 rex_jmp QWORD PTR [rax+8]
$LN21@WritePrefi:

; 459  :                         break;
; 460  :                     case 3:
; 461  :                         writer->Write(_number_format_info->NegativeSign);
; 462  :                         break;
; 463  :                     case 4:
; 464  :                         writer->Write(L'(');
; 465  :                         break;
; 466  :                     case 5:
; 467  :                         writer->Write(_number_format_info->NegativeSign);
; 468  :                         break;
; 469  :                     case 6:
; 470  :                         break;
; 471  :                     case 7:
; 472  :                         break;
; 473  :                     case 8:
; 474  :                         writer->Write(_number_format_info->NegativeSign);
; 475  :                         break;
; 476  :                     case 9:
; 477  :                         writer->Write(_number_format_info->NegativeSign);

  000f1	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000f4	49 8d 90 5a 01
	00 00		 lea	 rdx, QWORD PTR [r8+346]
  000fb	48 8b cb	 mov	 rcx, rbx
  000fe	ff 10		 call	 QWORD PTR [rax]
$LN33@WritePrefi:

; 499  :                     case 15:
; 500  :                         writer->Write(L'(');
; 501  :                         break;
; 502  :                     }
; 503  :                 }
; 504  :             }

  00100	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00104	48 81 c2 38 01
	00 00		 add	 rdx, 312		; 00000138H
$LN34@WritePrefi:
  0010b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0010e	48 8b cb	 mov	 rcx, rbx
  00111	ff 10		 call	 QWORD PTR [rax]
  00113	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00116	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0011b	48 8b cb	 mov	 rcx, rbx
  0011e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00123	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00127	5f		 pop	 rdi
  00128	48 ff 60 08	 rex_jmp QWORD PTR [rax+8]
$LN24@WritePrefi:

; 478  :                         writer->Write(_number_format_info->CurrencySymbol);
; 479  :                         writer->Write(L' ');
; 480  :                         break;
; 481  :                     case 10:
; 482  :                         break;
; 483  :                     case 11:
; 484  :                         writer->Write(_number_format_info->CurrencySymbol);
; 485  :                         writer->Write(L' ');
; 486  :                         break;
; 487  :                     case 12:
; 488  :                         writer->Write(_number_format_info->CurrencySymbol);

  0012c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0012f	49 8d 90 38 01
	00 00		 lea	 rdx, QWORD PTR [r8+312]
  00136	48 8b cb	 mov	 rcx, rbx
  00139	ff 10		 call	 QWORD PTR [rax]

; 489  :                         writer->Write(L' ');

  0013b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0013e	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00143	48 8b cb	 mov	 rcx, rbx
  00146	ff 50 08	 call	 QWORD PTR [rax+8]

; 490  :                         writer->Write(_number_format_info->NegativeSign);

  00149	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]

; 499  :                     case 15:
; 500  :                         writer->Write(L'(');
; 501  :                         break;
; 502  :                     }
; 503  :                 }
; 504  :             }

  0014d	48 8b cb	 mov	 rcx, rbx
  00150	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00153	48 81 c2 5a 01
	00 00		 add	 rdx, 346		; 0000015aH
  0015a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0015f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00163	5f		 pop	 rdi
  00164	48 ff 20	 rex_jmp QWORD PTR [rax]
$LN26@WritePrefi:

; 491  :                         break;
; 492  :                     case 13:
; 493  :                         break;
; 494  :                     case 14:
; 495  :                         writer->Write(L'(');

  00167	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0016a	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0016f	48 8b cb	 mov	 rcx, rbx
  00172	ff 50 08	 call	 QWORD PTR [rax+8]

; 496  :                         writer->Write(_number_format_info->CurrencySymbol);
; 497  :                         writer->Write(L' ');
; 498  :                         break;

  00175	eb 89		 jmp	 SHORT $LN33@WritePrefi
$LN12@WritePrefi:

; 446  :                     {
; 447  :                     case 0:
; 448  :                     default:
; 449  :                         writer->Write(L'(');

  00177	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0017a	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0017f	48 8b cb	 mov	 rcx, rbx
  00182	ff 50 08	 call	 QWORD PTR [rax+8]
$LN31@WritePrefi:

; 499  :                     case 15:
; 500  :                         writer->Write(L'(');
; 501  :                         break;
; 502  :                     }
; 503  :                 }
; 504  :             }

  00185	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00189	48 8b cb	 mov	 rcx, rbx
  0018c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0018f	48 81 c2 38 01
	00 00		 add	 rdx, 312		; 00000138H
  00196	ff 10		 call	 QWORD PTR [rax]
$LN4@WritePrefi:
  00198	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0019d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001a1	5f		 pop	 rdi
  001a2	c3		 ret	 0
  001a3	90		 npad	 1
$LN29@WritePrefi:
  001a4	00 00 00 00	 DD	 $LN13@WritePrefi
  001a8	00 00 00 00	 DD	 $LN14@WritePrefi
  001ac	00 00 00 00	 DD	 $LN15@WritePrefi
  001b0	00 00 00 00	 DD	 $LN16@WritePrefi
  001b4	00 00 00 00	 DD	 $LN15@WritePrefi
  001b8	00 00 00 00	 DD	 $LN4@WritePrefi
  001bc	00 00 00 00	 DD	 $LN4@WritePrefi
  001c0	00 00 00 00	 DD	 $LN15@WritePrefi
  001c4	00 00 00 00	 DD	 $LN21@WritePrefi
  001c8	00 00 00 00	 DD	 $LN4@WritePrefi
  001cc	00 00 00 00	 DD	 $LN10@WritePrefi
  001d0	00 00 00 00	 DD	 $LN24@WritePrefi
  001d4	00 00 00 00	 DD	 $LN4@WritePrefi
  001d8	00 00 00 00	 DD	 $LN26@WritePrefi
  001dc	00 00 00 00	 DD	 $LN16@WritePrefi
?WritePrefix@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXDPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WritePrefix
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z
_TEXT	SEGMENT
this$ = 48
writer$ = 56
?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteZeroValue, COMDAT

; 414  :             {

$LN13:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 415  :                 writer->Write(L'0');

  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 8b da	 mov	 rbx, rdx
  00010	48 8b f9	 mov	 rdi, rcx
  00013	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00018	48 8b cb	 mov	 rcx, rbx
  0001b	ff 50 08	 call	 QWORD PTR [rax+8]

; 416  :                 if (_precision > 0)

  0001e	83 7f 18 00	 cmp	 DWORD PTR [rdi+24], 0
  00022	7e 30		 jle	 SHORT $LN6@WriteZeroV

; 417  :                 {
; 418  :                     writer->Write(_number_format_info->Currency.DecimalSeparator);

  00024	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]
  00028	48 8b cb	 mov	 rcx, rbx
  0002b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0002e	48 83 c2 04	 add	 rdx, 4
  00032	ff 10		 call	 QWORD PTR [rax]

; 419  :                     writer->Write(L'0', _precision);

  00034	48 63 7f 18	 movsxd	 rdi, DWORD PTR [rdi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 227  :             while (count > 0)

  00038	48 85 ff	 test	 rdi, rdi
  0003b	74 17		 je	 SHORT $LN6@WriteZeroV
  0003d	0f 1f 00	 npad	 3
$LL5@WriteZeroV:

; 228  :             {
; 229  :                 Write(c);

  00040	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00043	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0004e	48 83 ef 01	 sub	 rdi, 1
  00052	75 ec		 jne	 SHORT $LL5@WriteZeroV
$LN6@WriteZeroV:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 421  :             }

  00054	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
?WriteZeroValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::WriteZeroValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::GetDefaultPrecisionValue, COMDAT

; 410  :                 return (_number_format_info->Currency.DecimalDigits);

  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00004	8b 00		 mov	 eax, DWORD PTR [rax]

; 411  :             }

  00006	c3		 ret	 0
?GetDefaultPrecisionValue@FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAHXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::GetDefaultPrecisionValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 8
precision$ = 16
number_format_info$ = 24
??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatterTypeC, COMDAT

; 190  :             const __UNIT_TYPE _10n_base_number = 10000000000000000000UL; // 10^19

  00000	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H

; 191  :             const int digit_count_on_word = 19;

  0000a	c7 41 10 13 00
	00 00		 mov	 DWORD PTR [rcx+16], 19
  00011	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  : 
; 196  :         protected:
; 197  :             wchar_t _format_type;
; 198  :             int _precision;
; 199  :             const PMC_NUMBER_FORMAT_INFO* _number_format_info;
; 200  : 
; 201  :         protected:
; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)
; 203  :             {
; 204  :                 _format_type = format_type;

  00015	b8 43 00 00 00	 mov	 eax, 67			; 00000043H
  0001a	66 89 41 14	 mov	 WORD PTR [rcx+20], ax

; 404  :             {

  0001e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00025	48 89 01	 mov	 QWORD PTR [rcx], rax

; 405  :             }

  00028	48 8b c1	 mov	 rax, rcx

; 205  :                 _precision = precision;

  0002b	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 206  :                 _number_format_info = number_format_info;

  0002e	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 405  :             }

  00032	c3		 ret	 0
??0FormatterTypeC@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@HPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::FormatterTypeC::FormatterTypeC
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z
_TEXT	SEGMENT
this$ = 8
writer$ = 16
d$ = 24
?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit, COMDAT

; 393  :                 writer->Write(L'0' + d);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 8b ca	 mov	 rcx, rdx
  00006	41 8d 50 30	 lea	 edx, DWORD PTR [r8+48]
  0000a	48 ff 60 08	 rex_jmp QWORD PTR [rax+8]
?WriteDigit@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@I@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteDigit
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z
_TEXT	SEGMENT
this$ = 48
r$ = 56
writer$ = 56
x$ = 64
?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord, COMDAT

; 332  :             {

$LN70:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 7c 24 18	 mov	 QWORD PTR [rsp+24], rdi
  0000a	55		 push	 rbp
  0000b	48 8b ec	 mov	 rbp, rsp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	49 8b c0	 mov	 rax, r8

; 333  :                 __UNIT_TYPE r;
; 334  :                 if (sizeof(__UNIT_TYPE) >= sizeof(_UINT64_T))
; 335  :                 {
; 336  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00015	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  00019	48 8b fa	 mov	 rdi, rdx
  0001c	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00022	48 8b d0	 mov	 rdx, rax
  00025	33 c9		 xor	 ecx, ecx
  00027	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  0002c	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00030	48 8b cf	 mov	 rcx, rdi
  00033	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00036	66 83 c2 30	 add	 dx, 48			; 00000030H

; 333  :                 __UNIT_TYPE r;
; 334  :                 if (sizeof(__UNIT_TYPE) >= sizeof(_UINT64_T))
; 335  :                 {
; 336  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0003a	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  0003d	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 337  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00041	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  00045	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0004b	48 8b d3	 mov	 rdx, rbx
  0004e	33 c9		 xor	 ecx, ecx
  00050	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  00055	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00059	48 8b cf	 mov	 rcx, rdi
  0005c	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0005f	66 83 c2 30	 add	 dx, 48			; 00000030H

; 337  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00063	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  00066	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 338  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0006a	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  0006e	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00074	48 8b d3	 mov	 rdx, rbx
  00077	33 c9		 xor	 ecx, ecx
  00079	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  0007e	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00082	48 8b cf	 mov	 rcx, rdi
  00085	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00088	66 83 c2 30	 add	 dx, 48			; 00000030H

; 338  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0008c	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  0008f	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 339  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00093	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  00097	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0009d	48 8b d3	 mov	 rdx, rbx
  000a0	33 c9		 xor	 ecx, ecx
  000a2	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  000a7	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  000ab	48 8b cf	 mov	 rcx, rdi
  000ae	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  000b1	66 83 c2 30	 add	 dx, 48			; 00000030H

; 339  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  000b5	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  000b8	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 340  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  000bc	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  000c0	41 b8 0a 00 00
	00		 mov	 r8d, 10
  000c6	48 8b d3	 mov	 rdx, rbx
  000c9	33 c9		 xor	 ecx, ecx
  000cb	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  000d0	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  000d4	48 8b cf	 mov	 rcx, rdi
  000d7	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  000da	66 83 c2 30	 add	 dx, 48			; 00000030H

; 340  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  000de	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  000e1	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 341  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  000e5	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  000e9	41 b8 0a 00 00
	00		 mov	 r8d, 10
  000ef	48 8b d3	 mov	 rdx, rbx
  000f2	33 c9		 xor	 ecx, ecx
  000f4	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  000f9	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  000fd	48 8b cf	 mov	 rcx, rdi
  00100	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00103	66 83 c2 30	 add	 dx, 48			; 00000030H

; 341  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00107	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  0010a	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 342  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0010e	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  00112	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00118	48 8b d3	 mov	 rdx, rbx
  0011b	33 c9		 xor	 ecx, ecx
  0011d	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  00122	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00126	48 8b cf	 mov	 rcx, rdi
  00129	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0012c	66 83 c2 30	 add	 dx, 48			; 00000030H

; 342  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00130	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  00133	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 343  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00137	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  0013b	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00141	48 8b d3	 mov	 rdx, rbx
  00144	33 c9		 xor	 ecx, ecx
  00146	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  0014b	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  0014f	48 8b cf	 mov	 rcx, rdi
  00152	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00155	66 83 c2 30	 add	 dx, 48			; 00000030H

; 343  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00159	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  0015c	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 344  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00160	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  00164	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0016a	48 8b d3	 mov	 rdx, rbx
  0016d	33 c9		 xor	 ecx, ecx
  0016f	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  00174	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00178	48 8b cf	 mov	 rcx, rdi
  0017b	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0017e	66 83 c2 30	 add	 dx, 48			; 00000030H

; 344  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00182	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  00185	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 345  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00189	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  0018d	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00193	48 8b d3	 mov	 rdx, rbx
  00196	33 c9		 xor	 ecx, ecx
  00198	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  0019d	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  001a1	48 8b cf	 mov	 rcx, rdi
  001a4	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  001a7	66 83 c2 30	 add	 dx, 48			; 00000030H

; 345  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  001ab	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  001ae	41 ff 50 08	 call	 QWORD PTR [r8+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 333  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  001b2	b9 0a 00 00 00	 mov	 ecx, 10
  001b7	f0 0f c1 0d 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 355  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  001bf	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  001c3	41 b8 0a 00 00
	00		 mov	 r8d, 10
  001c9	48 8b d3	 mov	 rdx, rbx
  001cc	33 c9		 xor	 ecx, ecx
  001ce	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  001d3	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  001d7	48 8b cf	 mov	 rcx, rdi
  001da	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  001dd	66 83 c2 30	 add	 dx, 48			; 00000030H

; 355  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  001e1	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  001e4	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 356  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  001e8	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  001ec	41 b8 0a 00 00
	00		 mov	 r8d, 10
  001f2	48 8b d3	 mov	 rdx, rbx
  001f5	33 c9		 xor	 ecx, ecx
  001f7	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  001fc	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00200	48 8b cf	 mov	 rcx, rdi
  00203	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00206	66 83 c2 30	 add	 dx, 48			; 00000030H

; 356  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0020a	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  0020d	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 357  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00211	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  00215	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0021b	48 8b d3	 mov	 rdx, rbx
  0021e	33 c9		 xor	 ecx, ecx
  00220	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  00225	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00229	48 8b cf	 mov	 rcx, rdi
  0022c	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  0022f	66 83 c2 30	 add	 dx, 48			; 00000030H

; 357  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00233	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  00236	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 358  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0023a	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  0023e	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00244	48 8b d3	 mov	 rdx, rbx
  00247	33 c9		 xor	 ecx, ecx
  00249	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  0024e	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00252	48 8b cf	 mov	 rcx, rdi
  00255	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00258	66 83 c2 30	 add	 dx, 48			; 00000030H

; 358  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0025c	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  0025f	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 359  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00263	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  00267	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0026d	48 8b d3	 mov	 rdx, rbx
  00270	33 c9		 xor	 ecx, ecx
  00272	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  00277	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  0027b	48 8b cf	 mov	 rcx, rdi
  0027e	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00281	66 83 c2 30	 add	 dx, 48			; 00000030H

; 359  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00285	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  00288	41 ff 50 08	 call	 QWORD PTR [r8+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 333  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  0028c	b9 05 00 00 00	 mov	 ecx, 5
  00291	f0 0f c1 0d 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 369  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  00299	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  0029d	41 b8 0a 00 00
	00		 mov	 r8d, 10
  002a3	48 8b d3	 mov	 rdx, rbx
  002a6	33 c9		 xor	 ecx, ecx
  002a8	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  002ad	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  002b1	48 8b cf	 mov	 rcx, rdi
  002b4	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  002b7	66 83 c2 30	 add	 dx, 48			; 00000030H

; 369  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  002bb	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  002be	41 ff 50 08	 call	 QWORD PTR [r8+8]

; 370  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  002c2	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  002c6	41 b8 0a 00 00
	00		 mov	 r8d, 10
  002cc	48 8b d3	 mov	 rdx, rbx
  002cf	33 c9		 xor	 ecx, ecx
  002d1	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  002d6	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  002da	48 8b cf	 mov	 rcx, rdi
  002dd	4c 8b 0f	 mov	 r9, QWORD PTR [rdi]
  002e0	66 83 c2 30	 add	 dx, 48			; 00000030H

; 370  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  002e4	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  002e7	41 ff 51 08	 call	 QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 333  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  002eb	b9 02 00 00 00	 mov	 ecx, 2
  002f0	f0 0f c1 0d 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 380  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  002f8	4c 8d 4d 18	 lea	 r9, QWORD PTR r$[rbp-32]
  002fc	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00302	48 8b d3	 mov	 rdx, rbx
  00305	33 c9		 xor	 ecx, ecx
  00307	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  0030c	0f b7 55 18	 movzx	 edx, WORD PTR r$[rbp-32]
  00310	48 8b cf	 mov	 rcx, rdi
  00313	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00316	66 83 c2 30	 add	 dx, 48			; 00000030H

; 380  :                     x = _DIVREM_UNIT(0, x, 10, &r); WriteDigit(writer, (_UINT32_T)r);

  0031a	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  0031d	41 ff 50 08	 call	 QWORD PTR [r8+8]
  00321	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00324	8d 53 30	 lea	 edx, DWORD PTR [rbx+48]
  00327	48 8b cf	 mov	 rcx, rdi
  0032a	41 ff 50 08	 call	 QWORD PTR [r8+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 310  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  0032e	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 389  :             }

  00335	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0033a	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  0033f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00343	5d		 pop	 rbp
  00344	c3		 ret	 0
?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z
_TEXT	SEGMENT
this$ = 48
r$ = 56
writer$ = 56
x$ = 64
?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord, COMDAT

; 315  :             {

$LN18:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b d8	 mov	 rbx, r8
  0000d	48 8b fa	 mov	 rdi, rdx
$LL4@WriteLeadi:

; 316  :                 __UNIT_TYPE r;
; 317  :                 do
; 318  :                 {
; 319  :                     x = _DIVREM_UNIT(0, x, 10, &r);

  00010	4c 8d 4c 24 38	 lea	 r9, QWORD PTR r$[rsp]
  00015	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0001b	48 8b d3	 mov	 rdx, rbx
  0001e	33 c9		 xor	 ecx, ecx
  00020	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  00025	0f b7 54 24 38	 movzx	 edx, WORD PTR r$[rsp]

; 316  :                 __UNIT_TYPE r;
; 317  :                 do
; 318  :                 {
; 319  :                     x = _DIVREM_UNIT(0, x, 10, &r);

  0002a	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  0002d	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00030	66 83 c2 30	 add	 dx, 48			; 00000030H
  00034	48 8b cf	 mov	 rcx, rdi
  00037	ff 50 08	 call	 QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 310  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  0003a	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 327  :                 } while (x != 0);

  00041	48 85 db	 test	 rbx, rbx
  00044	75 ca		 jne	 SHORT $LL4@WriteLeadi

; 328  :             }

  00046	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
?WriteLeadingOneWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteLeadingOneWord
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z
_TEXT	SEGMENT
simple_number_sequence_writer$ = 32
$T1 = 72
this$ = 144
in_buf$ = 152
in_buf_count$ = 160
r$2 = 168
out_buf$ = 168
out_buf_count$ = 176
?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence, COMDAT

; 298  :             {

$LN43:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	49 89 5b 10	 mov	 QWORD PTR [r11+16], rbx
  00007	56		 push	 rsi
  00008	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000f	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR out_buf_count$[rsp]
  00017	48 8b da	 mov	 rbx, rdx
  0001a	48 8b f1	 mov	 rsi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  0001d	4d 89 4b a8	 mov	 QWORD PTR [r11-88], r9
  00021	33 c9		 xor	 ecx, ecx
  00023	4d 85 c9	 test	 r9, r9

; 203  :             _eob = eob;
; 204  :             _written = 0;

  00026	49 89 4b b8	 mov	 QWORD PTR [r11-72], rcx
  0002a	49 8d 14 41	 lea	 rdx, QWORD PTR [r9+rax*2]
  0002e	49 8d 04 41	 lea	 rax, QWORD PTR [r9+rax*2]
  00032	48 0f 44 d1	 cmove	 rdx, rcx
  00036	48 0f 44 c1	 cmove	 rax, rcx
  0003a	49 89 53 a0	 mov	 QWORD PTR [r11-96], rdx
  0003e	49 89 43 b0	 mov	 QWORD PTR [r11-80], rax

; 265  :         {

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
  00049	49 89 43 98	 mov	 QWORD PTR [r11-104], rax
  0004d	49 3b d1	 cmp	 rdx, r9

; 271  :             if (_p <= _sob)

  00050	0f 86 b0 00 00
	00		 jbe	 $LN42@ConstructS

; 273  :             --_p;

  00056	48 83 ea 02	 sub	 rdx, 2
  0005a	49 89 7b 08	 mov	 QWORD PTR [r11+8], rdi
  0005e	49 89 53 a0	 mov	 QWORD PTR [r11-96], rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 302  :                 __UNIT_TYPE in_count = in_buf_count - 1;

  00062	49 8d 78 ff	 lea	 rdi, QWORD PTR [r8-1]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 274  :             *_p = c;

  00066	66 89 0a	 mov	 WORD PTR [rdx], cx

; 275  :             ++_written;

  00069	49 ff 43 b8	 inc	 QWORD PTR [r11-72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 303  :                 while (in_count != 0)

  0006d	48 85 ff	 test	 rdi, rdi
  00070	74 28		 je	 SHORT $LN3@ConstructS
  00072	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL2@ConstructS:

; 304  :                 {
; 305  :                     WriteTrailingWord(&simple_number_sequence_writer, *in_ptr);

  00080	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  00083	48 8d 54 24 20	 lea	 rdx, QWORD PTR simple_number_sequence_writer$[rsp]
  00088	48 8b ce	 mov	 rcx, rsi
  0008b	e8 00 00 00 00	 call	 ?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord

; 306  :                     ++in_ptr;

  00090	48 83 c3 08	 add	 rbx, 8

; 307  :                     --in_count;

  00094	48 83 ef 01	 sub	 rdi, 1
  00098	75 e6		 jne	 SHORT $LL2@ConstructS
$LN3@ConstructS:

; 308  :                 }
; 309  :                 WriteLeadingOneWord(&simple_number_sequence_writer, *in_ptr);

  0009a	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
  0009d	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR [rsp+144]
  000a5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL21@ConstructS:

; 319  :                     x = _DIVREM_UNIT(0, x, 10, &r);

  000b0	4c 8d 8c 24 a8
	00 00 00	 lea	 r9, QWORD PTR r$2[rsp]
  000b8	41 b8 0a 00 00
	00		 mov	 r8d, 10
  000be	48 8b d3	 mov	 rdx, rbx
  000c1	33 c9		 xor	 ecx, ecx
  000c3	e8 00 00 00 00	 call	 _DIVREM_UNIT

; 393  :                 writer->Write(L'0' + d);

  000c8	0f b7 94 24 a8
	00 00 00	 movzx	 edx, WORD PTR r$2[rsp]
  000d0	48 8d 4c 24 20	 lea	 rcx, QWORD PTR simple_number_sequence_writer$[rsp]

; 319  :                     x = _DIVREM_UNIT(0, x, 10, &r);

  000d5	48 8b d8	 mov	 rbx, rax

; 393  :                 writer->Write(L'0' + d);

  000d8	66 83 c2 30	 add	 dx, 48			; 00000030H
  000dc	48 8b 44 24 20	 mov	 rax, QWORD PTR simple_number_sequence_writer$[rsp]
  000e1	ff 50 08	 call	 QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 310  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  000e4	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 327  :                 } while (x != 0);

  000eb	48 85 db	 test	 rbx, rbx
  000ee	75 c0		 jne	 SHORT $LL21@ConstructS

; 311  :             }

  000f0	48 8b 44 24 28	 mov	 rax, QWORD PTR simple_number_sequence_writer$[rsp+8]
  000f5	48 8b 9c 24 98
	00 00 00	 mov	 rbx, QWORD PTR [rsp+152]
  000fd	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00104	5e		 pop	 rsi
  00105	c3		 ret	 0
$LN42@ConstructS:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 272  :                 throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00106	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  0010d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp]
  00112	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00117	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  0011e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp]
  00123	e8 00 00 00 00	 call	 _CxxThrowException
  00128	cc		 int	 3
$LN40@ConstructS:
?ConstructSimpleNumberSequence@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAPEA_WPEA_K_KPEA_W1@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConstructSimpleNumberSequence
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z
_TEXT	SEGMENT
root$ = 56
this$ = 144
r_value$1 = 152
x$ = 152
r_buf$ = 160
?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber, COMDAT

; 273  :             {

$LN27:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00010	48 c7 40 a8 fe
	ff ff ff	 mov	 QWORD PTR [rax-88], -2
  00018	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  0001c	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
  00020	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
  00024	4d 8b e0	 mov	 r12, r8
  00027	48 8b ea	 mov	 rbp, rdx
  0002a	4c 8b e9	 mov	 r13, rcx

; 274  :                 ResourceHolderUINT root;

  0002d	48 8d 48 b0	 lea	 rcx, QWORD PTR [rax-80]
  00031	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00036	90		 npad	 1

; 275  :                 __UNIT_TYPE work_bit_count = x->UNIT_BIT_COUNT + __UNIT_TYPE_BIT_COUNT;

  00037	48 8b 5d 20	 mov	 rbx, QWORD PTR [rbp+32]

; 276  :                 __UNIT_TYPE* u_ptr = root.AllocateBlock(work_bit_count);

  0003b	48 8d 53 40	 lea	 rdx, QWORD PTR [rbx+64]
  0003f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  00044	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00049	4c 8b f8	 mov	 r15, rax

; 277  :                 __UNIT_TYPE* q_ptr = root.AllocateBlock(work_bit_count);

  0004c	48 8d 53 40	 lea	 rdx, QWORD PTR [rbx+64]
  00050	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  00055	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  0005a	4c 8b f0	 mov	 r14, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  0005d	49 8b ff	 mov	 rdi, r15
  00060	48 8b 75 40	 mov	 rsi, QWORD PTR [rbp+64]
  00064	48 8b 4d 38	 mov	 rcx, QWORD PTR [rbp+56]
  00068	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 279  :                 __UNIT_TYPE* r_ptr = r_buf;

  0006b	49 8b f4	 mov	 rsi, r12
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 157  :             return ((u + v - 1) / v);

  0006e	48 8d 7b 7f	 lea	 rdi, QWORD PTR [rbx+127]
  00072	48 c1 ef 06	 shr	 rdi, 6
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 281  :                 while (work_u_count > 0)

  00076	48 85 ff	 test	 rdi, rdi
  00079	74 75		 je	 SHORT $LN23@ConvertAs1
  0007b	0f 1f 44 00 00	 npad	 5
$LL2@ConvertAs1:

; 282  :                 {
; 283  :                     root.ClearBlock(q_ptr);

  00080	49 8b d6	 mov	 rdx, r14
  00083	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  00088	e8 00 00 00 00	 call	 ?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock

; 284  :                     __UNIT_TYPE r_value;
; 285  :                     DivRem_X_1W(u_ptr, work_u_count, _10n_base_number, q_ptr, &r_value);

  0008d	48 8d 84 24 98
	00 00 00	 lea	 rax, QWORD PTR r_value$1[rsp]
  00095	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0009a	4d 8b ce	 mov	 r9, r14
  0009d	4d 8b 45 08	 mov	 r8, QWORD PTR [r13+8]
  000a1	48 8b d7	 mov	 rdx, rdi
  000a4	49 8b cf	 mov	 rcx, r15
  000a7	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 286  :                     root.CheckBlock(q_ptr);

  000ac	49 8b d6	 mov	 rdx, r14
  000af	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  000b4	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 287  :                     *r_ptr++ = r_value;

  000b9	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR r_value$1[rsp]
  000c1	48 89 06	 mov	 QWORD PTR [rsi], rax
  000c4	48 83 c6 08	 add	 rsi, 8

; 288  :                     __UNIT_TYPE* temp = u_ptr;

  000c8	49 8b c7	 mov	 rax, r15

; 289  :                     u_ptr = q_ptr;

  000cb	4d 8b fe	 mov	 r15, r14

; 290  :                     q_ptr = temp;

  000ce	4c 8b f0	 mov	 r14, rax

; 282  :                 {
; 283  :                     root.ClearBlock(q_ptr);

  000d1	48 8d 47 ff	 lea	 rax, QWORD PTR [rdi-1]
  000d5	49 8d 04 c7	 lea	 rax, QWORD PTR [r15+rax*8]
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@ConvertAs1:

; 291  :                     while (work_u_count > 0 && u_ptr[work_u_count - 1] == 0)

  000e0	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000e4	75 9a		 jne	 SHORT $LL2@ConvertAs1

; 292  :                         --work_u_count;

  000e6	48 83 e8 08	 sub	 rax, 8
  000ea	48 83 ef 01	 sub	 rdi, 1

; 291  :                     while (work_u_count > 0 && u_ptr[work_u_count - 1] == 0)

  000ee	75 f0		 jne	 SHORT $LL4@ConvertAs1
$LN23@ConvertAs1:

; 293  :                 }
; 294  :                 return (r_ptr - r_buf);

  000f0	49 2b f4	 sub	 rsi, r12
  000f3	48 c1 fe 03	 sar	 rsi, 3
  000f7	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  000fc	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00101	48 8b c6	 mov	 rax, rsi

; 295  :             }

  00104	4c 8d 5c 24 60	 lea	 r11, QWORD PTR [rsp+96]
  00109	49 8b 5b 30	 mov	 rbx, QWORD PTR [r11+48]
  0010d	49 8b 6b 40	 mov	 rbp, QWORD PTR [r11+64]
  00111	49 8b 73 48	 mov	 rsi, QWORD PTR [r11+72]
  00115	49 8b e3	 mov	 rsp, r11
  00118	41 5f		 pop	 r15
  0011a	41 5e		 pop	 r14
  0011c	41 5d		 pop	 r13
  0011e	41 5c		 pop	 r12
  00120	5f		 pop	 rdi
  00121	c3		 ret	 0
?ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 56
this$ = 144
r_value$1 = 152
x$ = 152
r_buf$ = 160
?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$ = 56
this$ = 144
r_value$1 = 152
x$ = 152
r_buf$ = 160
?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??ConvertAs10nBasedNumber@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAA_KPEAU__tag_NUMBER_HEADER@3456@PEA_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::ConvertAs10nBasedNumber'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
_TEXT	SEGMENT
simple_number_sequence_writer$1 = 48
root$2 = 88
root$ = 120
$T3 = 152
$T4 = 160
_10n_based_number_buf$1$ = 272
r_value$5 = 272
this$ = 272
r$6 = 280
x_abs$ = 280
writer$ = 288
?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally, COMDAT

; 246  :             {

$LN74:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 54		 push	 r12
  0000a	41 55		 push	 r13
  0000c	41 56		 push	 r14
  0000e	41 57		 push	 r15
  00010	48 8d 6c 24 d9	 lea	 rbp, QWORD PTR [rsp-39]
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 c7 45 ef fe
	ff ff ff	 mov	 QWORD PTR $T3[rbp-169], -2
  00024	48 89 9c 24 28
	01 00 00	 mov	 QWORD PTR [rsp+296], rbx
  0002c	4c 8b f2	 mov	 r14, rdx
  0002f	4c 8b e9	 mov	 r13, rcx

; 247  :                 ResourceHolderUINT root;

  00032	48 8d 4d cf	 lea	 rcx, QWORD PTR root$[rbp-169]
  00036	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003b	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 157  :             return ((u + v - 1) / v);

  0003c	49 8b 46 20	 mov	 rax, QWORD PTR [r14+32]
  00040	48 8d 50 07	 lea	 rdx, QWORD PTR [rax+7]
  00044	48 c1 ea 03	 shr	 rdx, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 248  :                 __UNIT_TYPE _10n_based_number_bit_count = x_abs->UNIT_BIT_COUNT + _DIVIDE_CEILING_UNIT(x_abs->UNIT_BIT_COUNT, 8);

  00048	48 03 d0	 add	 rdx, rax

; 249  :                 __UNIT_TYPE* _10n_based_number_buf = root.AllocateBlock(_10n_based_number_bit_count);

  0004b	48 8d 4d cf	 lea	 rcx, QWORD PTR root$[rbp-169]
  0004f	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00054	48 89 45 67	 mov	 QWORD PTR _10n_based_number_buf$1$[rbp-169], rax

; 274  :                 ResourceHolderUINT root;

  00058	48 8d 4d af	 lea	 rcx, QWORD PTR root$2[rbp-169]
  0005c	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00061	90		 npad	 1

; 275  :                 __UNIT_TYPE work_bit_count = x->UNIT_BIT_COUNT + __UNIT_TYPE_BIT_COUNT;

  00062	49 8b 5e 20	 mov	 rbx, QWORD PTR [r14+32]

; 276  :                 __UNIT_TYPE* u_ptr = root.AllocateBlock(work_bit_count);

  00066	48 8d 53 40	 lea	 rdx, QWORD PTR [rbx+64]
  0006a	48 8d 4d af	 lea	 rcx, QWORD PTR root$2[rbp-169]
  0006e	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00073	4c 8b e0	 mov	 r12, rax

; 277  :                 __UNIT_TYPE* q_ptr = root.AllocateBlock(work_bit_count);

  00076	48 8d 53 40	 lea	 rdx, QWORD PTR [rbx+64]
  0007a	48 8d 4d af	 lea	 rcx, QWORD PTR root$2[rbp-169]
  0007e	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00083	4c 8b f8	 mov	 r15, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  00086	49 8b fc	 mov	 rdi, r12
  00089	49 8b 76 40	 mov	 rsi, QWORD PTR [r14+64]
  0008d	49 8b 4e 38	 mov	 rcx, QWORD PTR [r14+56]
  00091	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 279  :                 __UNIT_TYPE* r_ptr = r_buf;

  00094	4c 8b 75 67	 mov	 r14, QWORD PTR _10n_based_number_buf$1$[rbp-169]
  00098	49 8b f6	 mov	 rsi, r14
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 157  :             return ((u + v - 1) / v);

  0009b	48 8d 7b 7f	 lea	 rdi, QWORD PTR [rbx+127]
  0009f	48 c1 ef 06	 shr	 rdi, 6
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 281  :                 while (work_u_count > 0)

  000a3	48 85 ff	 test	 rdi, rdi
  000a6	74 68		 je	 SHORT $LN68@FormatInte
  000a8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL7@FormatInte:

; 282  :                 {
; 283  :                     root.ClearBlock(q_ptr);

  000b0	49 8b d7	 mov	 rdx, r15
  000b3	48 8d 4d af	 lea	 rcx, QWORD PTR root$2[rbp-169]
  000b7	e8 00 00 00 00	 call	 ?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock

; 284  :                     __UNIT_TYPE r_value;
; 285  :                     DivRem_X_1W(u_ptr, work_u_count, _10n_base_number, q_ptr, &r_value);

  000bc	48 8d 45 67	 lea	 rax, QWORD PTR r_value$5[rbp-169]
  000c0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c5	4d 8b cf	 mov	 r9, r15
  000c8	4d 8b 45 08	 mov	 r8, QWORD PTR [r13+8]
  000cc	48 8b d7	 mov	 rdx, rdi
  000cf	49 8b cc	 mov	 rcx, r12
  000d2	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 286  :                     root.CheckBlock(q_ptr);

  000d7	49 8b d7	 mov	 rdx, r15
  000da	48 8d 4d af	 lea	 rcx, QWORD PTR root$2[rbp-169]
  000de	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 287  :                     *r_ptr++ = r_value;

  000e3	48 8b 45 67	 mov	 rax, QWORD PTR r_value$5[rbp-169]
  000e7	48 89 06	 mov	 QWORD PTR [rsi], rax
  000ea	48 83 c6 08	 add	 rsi, 8

; 288  :                     __UNIT_TYPE* temp = u_ptr;

  000ee	49 8b c4	 mov	 rax, r12

; 289  :                     u_ptr = q_ptr;

  000f1	4d 8b e7	 mov	 r12, r15

; 290  :                     q_ptr = temp;

  000f4	4c 8b f8	 mov	 r15, rax

; 282  :                 {
; 283  :                     root.ClearBlock(q_ptr);

  000f7	48 8d 47 ff	 lea	 rax, QWORD PTR [rdi-1]
  000fb	49 8d 04 c4	 lea	 rax, QWORD PTR [r12+rax*8]
  000ff	90		 npad	 1
$LL9@FormatInte:

; 291  :                     while (work_u_count > 0 && u_ptr[work_u_count - 1] == 0)

  00100	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00104	75 aa		 jne	 SHORT $LL7@FormatInte

; 292  :                         --work_u_count;

  00106	48 83 e8 08	 sub	 rax, 8
  0010a	48 83 ef 01	 sub	 rdi, 1

; 291  :                     while (work_u_count > 0 && u_ptr[work_u_count - 1] == 0)

  0010e	75 f0		 jne	 SHORT $LL9@FormatInte
$LN68@FormatInte:

; 293  :                 }
; 294  :                 return (r_ptr - r_buf);

  00110	49 2b f6	 sub	 rsi, r14
  00113	48 c1 fe 03	 sar	 rsi, 3
  00117	48 8d 4d af	 lea	 rcx, QWORD PTR root$2[rbp-169]
  0011b	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT

; 250  :                 __UNIT_TYPE _10n_based_number_buf_count = ConvertAs10nBasedNumber(x_abs, _10n_based_number_buf);
; 251  :                 __UNIT_TYPE simple_number_sequence_buf_size = digit_count_on_word * _10n_based_number_buf_count + 1;

  00120	49 63 7d 10	 movsxd	 rdi, DWORD PTR [r13+16]
  00124	48 0f af fe	 imul	 rdi, rsi
  00128	48 ff c7	 inc	 rdi

; 252  :                 wchar_t* simple_number_sequence = root.AllocateString(simple_number_sequence_buf_size);

  0012b	48 8b d7	 mov	 rdx, rdi
  0012e	48 8d 4d cf	 lea	 rcx, QWORD PTR root$[rbp-169]
  00132	e8 00 00 00 00	 call	 ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_W_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
  00137	48 8b d8	 mov	 rbx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 264  :             : StringWriter(buffer != nullptr ? buffer + size : nullptr, buffer, buffer != nullptr ? buffer + size : nullptr)

  0013a	33 d2		 xor	 edx, edx
  0013c	48 85 c0	 test	 rax, rax
  0013f	48 8d 04 78	 lea	 rax, QWORD PTR [rax+rdi*2]
  00143	75 02		 jne	 SHORT $LN25@FormatInte
  00145	8b c2		 mov	 eax, edx
$LN25@FormatInte:

; 201  :             _p = p;

  00147	48 89 45 8f	 mov	 QWORD PTR simple_number_sequence_writer$1[rbp-161], rax

; 202  :             _sob = sob;

  0014b	48 89 5d 97	 mov	 QWORD PTR simple_number_sequence_writer$1[rbp-153], rbx

; 203  :             _eob = eob;

  0014f	48 89 45 9f	 mov	 QWORD PTR simple_number_sequence_writer$1[rbp-145], rax

; 204  :             _written = 0;

  00153	48 89 55 a7	 mov	 QWORD PTR simple_number_sequence_writer$1[rbp-137], rdx

; 265  :         {

  00157	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
  0015e	48 89 4d 87	 mov	 QWORD PTR simple_number_sequence_writer$1[rbp-169], rcx
  00162	48 3b c3	 cmp	 rax, rbx

; 271  :             if (_p <= _sob)

  00165	0f 86 ca 00 00
	00		 jbe	 $LN72@FormatInte

; 273  :             --_p;

  0016b	48 83 c0 fe	 add	 rax, -2
  0016f	48 89 45 8f	 mov	 QWORD PTR simple_number_sequence_writer$1[rbp-161], rax

; 274  :             *_p = c;

  00173	66 89 10	 mov	 WORD PTR [rax], dx

; 275  :             ++_written;

  00176	48 ff 45 a7	 inc	 QWORD PTR simple_number_sequence_writer$1[rbp-137]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 301  :                 __UNIT_TYPE* in_ptr = in_buf;

  0017a	49 8b fe	 mov	 rdi, r14

; 302  :                 __UNIT_TYPE in_count = in_buf_count - 1;

  0017d	48 83 ee 01	 sub	 rsi, 1

; 303  :                 while (in_count != 0)

  00181	74 26		 je	 SHORT $LN19@FormatInte
  00183	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL18@FormatInte:

; 304  :                 {
; 305  :                     WriteTrailingWord(&simple_number_sequence_writer, *in_ptr);

  00190	4c 8b 07	 mov	 r8, QWORD PTR [rdi]
  00193	48 8d 55 87	 lea	 rdx, QWORD PTR simple_number_sequence_writer$1[rbp-169]
  00197	49 8b cd	 mov	 rcx, r13
  0019a	e8 00 00 00 00	 call	 ?WriteTrailingWord@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@AEAAXPEAVStringWriter@3456@_K@Z ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::WriteTrailingWord

; 306  :                     ++in_ptr;

  0019f	48 83 c7 08	 add	 rdi, 8

; 307  :                     --in_count;

  001a3	48 83 ee 01	 sub	 rsi, 1

; 303  :                 while (in_count != 0)

  001a7	75 e7		 jne	 SHORT $LL18@FormatInte
$LN19@FormatInte:

; 308  :                 }
; 309  :                 WriteLeadingOneWord(&simple_number_sequence_writer, *in_ptr);

  001a9	48 8b 3f	 mov	 rdi, QWORD PTR [rdi]
  001ac	0f 1f 40 00	 npad	 4
$LL37@FormatInte:

; 319  :                     x = _DIVREM_UNIT(0, x, 10, &r);

  001b0	4c 8d 4d 6f	 lea	 r9, QWORD PTR r$6[rbp-169]
  001b4	41 b8 0a 00 00
	00		 mov	 r8d, 10
  001ba	48 8b d7	 mov	 rdx, rdi
  001bd	33 c9		 xor	 ecx, ecx
  001bf	e8 00 00 00 00	 call	 _DIVREM_UNIT
  001c4	48 8b f8	 mov	 rdi, rax

; 393  :                 writer->Write(L'0' + d);

  001c7	48 8b 45 87	 mov	 rax, QWORD PTR simple_number_sequence_writer$1[rbp-169]
  001cb	0f b7 55 6f	 movzx	 edx, WORD PTR r$6[rbp-169]
  001cf	66 83 c2 30	 add	 dx, 48			; 00000030H
  001d3	48 8d 4d 87	 lea	 rcx, QWORD PTR simple_number_sequence_writer$1[rbp-169]
  001d7	ff 50 08	 call	 QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 310  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  001da	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 327  :                 } while (x != 0);

  001e1	48 85 ff	 test	 rdi, rdi
  001e4	75 ca		 jne	 SHORT $LL37@FormatInte

; 253  :                 wchar_t* top_of_simple_number_sequence = ConstructSimpleNumberSequence(_10n_based_number_buf, _10n_based_number_buf_count, simple_number_sequence, simple_number_sequence_buf_size);
; 254  :                 root.DeallocateBlock(_10n_based_number_buf);

  001e6	49 8b d6	 mov	 rdx, r14
  001e9	48 8d 4d cf	 lea	 rcx, QWORD PTR root$[rbp-169]
  001ed	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 255  :                 FormatNumberSequence(top_of_simple_number_sequence, writer);

  001f2	49 8b 45 00	 mov	 rax, QWORD PTR [r13]
  001f6	4c 8b 45 77	 mov	 r8, QWORD PTR writer$[rbp-169]
  001fa	48 8b 55 8f	 mov	 rdx, QWORD PTR simple_number_sequence_writer$1[rbp-161]
  001fe	49 8b cd	 mov	 rcx, r13
  00201	ff 50 20	 call	 QWORD PTR [rax+32]

; 256  :                 root.DeallocateString(simple_number_sequence);

  00204	48 8b d3	 mov	 rdx, rbx
  00207	48 8d 4d cf	 lea	 rcx, QWORD PTR root$[rbp-169]
  0020b	e8 00 00 00 00	 call	 ?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
  00210	90		 npad	 1

; 257  :             }

  00211	48 8d 4d cf	 lea	 rcx, QWORD PTR root$[rbp-169]
  00215	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0021a	48 8b 9c 24 28
	01 00 00	 mov	 rbx, QWORD PTR [rsp+296]
  00222	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00229	41 5f		 pop	 r15
  0022b	41 5e		 pop	 r14
  0022d	41 5d		 pop	 r13
  0022f	41 5c		 pop	 r12
  00231	5f		 pop	 rdi
  00232	5e		 pop	 rsi
  00233	5d		 pop	 rbp
  00234	c3		 ret	 0
$LN72@FormatInte:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 272  :                 throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00235	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  0023c	48 8d 4d f7	 lea	 rcx, QWORD PTR $T4[rbp-169]
  00240	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00245	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  0024c	48 8d 4d f7	 lea	 rcx, QWORD PTR $T4[rbp-169]
  00250	e8 00 00 00 00	 call	 _CxxThrowException
  00255	cc		 int	 3
$LN70@FormatInte:
?FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
simple_number_sequence_writer$1 = 48
root$2 = 88
root$ = 120
$T3 = 152
$T4 = 160
_10n_based_number_buf$1$ = 272
r_value$5 = 272
this$ = 272
r$6 = 280
x_abs$ = 280
writer$ = 288
?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$0
  00000	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
simple_number_sequence_writer$1 = 48
root$2 = 88
root$ = 120
$T3 = 152
$T4 = 160
_10n_based_number_buf$1$ = 272
r_value$5 = 272
this$ = 272
r$6 = 280
x_abs$ = 280
writer$ = 288
?dtor$1@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$1
  00000	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$1@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
simple_number_sequence_writer$1 = 48
root$2 = 88
root$ = 120
$T3 = 152
$T4 = 160
_10n_based_number_buf$1$ = 272
r_value$5 = 272
this$ = 272
r$6 = 280
x_abs$ = 280
writer$ = 288
?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$0
  00000	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
simple_number_sequence_writer$1 = 48
root$2 = 88
root$ = 120
$T3 = 152
$T4 = 160
_10n_based_number_buf$1$ = 272
r_value$5 = 272
this$ = 272
r$6 = 280
x_abs$ = 280
writer$ = 288
?dtor$1@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$1
  00000	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$1@?0??FormatInternally@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@MEAAXPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::FormatInternally'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
this$ = 96
x_sign$ = 104
x_abs$ = 112
writer$ = 120
?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format, COMDAT

; 211  :             {

$LN13:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H

; 212  :                 if (_precision < 0)

  00014	83 79 18 00	 cmp	 DWORD PTR [rcx+24], 0
  00018	49 8b f1	 mov	 rsi, r9
  0001b	49 8b e8	 mov	 rbp, r8
  0001e	0f b6 fa	 movzx	 edi, dl
  00021	48 8b d9	 mov	 rbx, rcx
  00024	7d 08		 jge	 SHORT $LN2@Format

; 213  :                     _precision = GetDefaultPrecisionValue();

  00026	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00029	ff 10		 call	 QWORD PTR [rax]
  0002b	89 43 18	 mov	 DWORD PTR [rbx+24], eax
$LN2@Format:

; 214  :                 if (x_abs->IS_ZERO)

  0002e	f6 45 08 01	 test	 BYTE PTR [rbp+8], 1
  00032	74 23		 je	 SHORT $LN3@Format

; 215  :                 {
; 216  :                     // x == 0 の場合
; 217  :                     if (x_sign != 0)

  00034	40 84 ff	 test	 dil, dil
  00037	75 67		 jne	 SHORT $LN11@Format

; 219  :                     WritePrefix(x_sign, writer);

  00039	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003c	4c 8b c6	 mov	 r8, rsi
  0003f	33 d2		 xor	 edx, edx
  00041	48 8b cb	 mov	 rcx, rbx
  00044	ff 50 18	 call	 QWORD PTR [rax+24]

; 220  :                     WriteZeroValue(writer);

  00047	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0004a	48 8b d6	 mov	 rdx, rsi
  0004d	48 8b cb	 mov	 rcx, rbx
  00050	ff 50 10	 call	 QWORD PTR [rax+16]

; 221  :                     WriteSuffix(x_sign, writer);

  00053	33 d2		 xor	 edx, edx

; 222  :                 }
; 223  :                 else

  00055	eb 28		 jmp	 SHORT $LN9@Format
$LN3@Format:

; 224  :                 {
; 225  :                     // x != 0 の場合
; 226  :                     if (x_sign == 0)

  00057	40 84 ff	 test	 dil, dil
  0005a	74 6e		 je	 SHORT $LN12@Format

; 228  : 
; 229  :                     WritePrefix(x_sign, writer);

  0005c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0005f	4c 8b c6	 mov	 r8, rsi
  00062	40 0f b6 d7	 movzx	 edx, dil
  00066	48 8b cb	 mov	 rcx, rbx
  00069	ff 50 18	 call	 QWORD PTR [rax+24]

; 230  :                     FormatInternally(x_abs, writer);

  0006c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0006f	4c 8b c6	 mov	 r8, rsi
  00072	48 8b d5	 mov	 rdx, rbp
  00075	48 8b cb	 mov	 rcx, rbx
  00078	ff 50 08	 call	 QWORD PTR [rax+8]

; 231  :                     WriteSuffix(x_sign, writer);

  0007b	40 0f b6 d7	 movzx	 edx, dil
$LN9@Format:

; 232  :                 }
; 233  :             }

  0007f	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00082	4c 8b c6	 mov	 r8, rsi
  00085	48 8b cb	 mov	 rcx, rbx
  00088	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  0008d	48 8b 6c 24 68	 mov	 rbp, QWORD PTR [rsp+104]
  00092	48 8b 74 24 70	 mov	 rsi, QWORD PTR [rsp+112]
  00097	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0009b	5f		 pop	 rdi
  0009c	48 ff 60 28	 rex_jmp QWORD PTR [rax+40]
$LN11@Format:

; 218  :                         throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_tostring.cpp;Formatter::Format;1");

  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  000ae	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T2[rsp]
  000b3	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000b8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000bf	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T2[rsp]
  000c4	e8 00 00 00 00	 call	 _CxxThrowException
  000c9	cc		 int	 3
$LN12@Format:

; 227  :                         throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_tostring.cpp;Formatter::Format;1");

  000ca	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1EK@CCPHDNPL@?$AAp?$AAm?$AAc?$AA_?$AAt?$AAo?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAc?$AAp@
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  000d8	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  000dd	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000e2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000e9	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  000ee	e8 00 00 00 00	 call	 _CxxThrowException
  000f3	cc		 int	 3
$LN8@Format:
?Format@Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAAXDPEAU__tag_NUMBER_HEADER@3456@PEAVStringWriter@3456@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Format
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 8
format_type$ = 16
precision$ = 24
number_format_info$ = 32
??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter, COMDAT

; 202  :             Formatter(wchar_t format_type, int precision, const PMC_NUMBER_FORMAT_INFO* number_format_info)

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@

; 191  :             const int digit_count_on_word = 19;

  00007	c7 41 10 13 00
	00 00		 mov	 DWORD PTR [rcx+16], 19
  0000e	48 89 01	 mov	 QWORD PTR [rcx], rax
  00011	48 b8 00 00 e8
	89 04 23 c7 8a	 mov	 rax, -8446744073709551616 ; 8ac7230489e80000H
  0001b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 203  :             {
; 204  :                 _format_type = format_type;
; 205  :                 _precision = precision;
; 206  :                 _number_format_info = number_format_info;
; 207  :             }

  0001f	48 8b c1	 mov	 rax, rcx
  00022	66 89 51 14	 mov	 WORD PTR [rcx+20], dx
  00026	44 89 41 18	 mov	 DWORD PTR [rcx+24], r8d
  0002a	4c 89 49 20	 mov	 QWORD PTR [rcx+32], r9
  0002e	c3		 ret	 0
??0Formatter@DecimalFromatter@Internal@Core@Math@Palmtree@@IEAA@_WHPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::Formatter::Formatter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 8
?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString, COMDAT

; 179  :                 return (_native_writer->GetString());

  00000	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00004	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00007	48 ff 60 10	 rex_jmp QWORD PTR [rax+16]
?GetString@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::GetString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
this$ = 48
str$ = 56
?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write, COMDAT

; 172  :             {

$LN10:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	48 8b f9	 mov	 rdi, rcx

; 173  :                 while (*str != L'\0')

  00010	0f b7 12	 movzx	 edx, WORD PTR [rdx]
  00013	66 85 d2	 test	 dx, dx
  00016	74 1d		 je	 SHORT $LN3@Write
  00018	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@Write:

; 174  :                     Write(*str++);

  00020	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00023	48 8d 5b 02	 lea	 rbx, QWORD PTR [rbx+2]
  00027	48 8b cf	 mov	 rcx, rdi
  0002a	ff 50 08	 call	 QWORD PTR [rax+8]
  0002d	0f b7 13	 movzx	 edx, WORD PTR [rbx]
  00030	66 85 d2	 test	 dx, dx
  00033	75 eb		 jne	 SHORT $LL2@Write
$LN3@Write:

; 175  :             }

  00035	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
_TEXT	SEGMENT
this$ = 48
c$ = 56
?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write, COMDAT

; 136  :             {

$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 137  :                 if (_is_supported_thousand && c >= L'0' && c <= L'9')

  0000a	f6 41 30 01	 test	 BYTE PTR [rcx+48], 1
  0000e	0f b7 fa	 movzx	 edi, dx
  00011	48 8b d9	 mov	 rbx, rcx
  00014	74 77		 je	 SHORT $LN2@Write
  00016	8d 47 d0	 lea	 eax, DWORD PTR [rdi-48]
  00019	66 83 f8 09	 cmp	 ax, 9
  0001d	77 6e		 ja	 SHORT $LN2@Write

; 138  :                 {
; 139  :                     // 桁区切りをサポートする場合
; 140  :                     if (_current_group_size > 0 && _current_group_index >= _current_group_size)

  0001f	8b 41 48	 mov	 eax, DWORD PTR [rcx+72]
  00022	85 c0		 test	 eax, eax
  00024	7e 4c		 jle	 SHORT $LN9@Write
  00026	39 41 4c	 cmp	 DWORD PTR [rcx+76], eax
  00029	7c 47		 jl	 SHORT $LN9@Write

; 141  :                     {
; 142  :                         // 現在のグループ幅が 0 ではなく、かつ既に出力した文字数がグループ幅に達した場合
; 143  : 
; 144  :                         // グループ区切り文字を出力してから与えられた文字を出力する
; 145  :                         _native_writer->Write(_group_separator);

  0002b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0002f	48 8b 53 38	 mov	 rdx, QWORD PTR [rbx+56]
  00033	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00036	ff 10		 call	 QWORD PTR [rax]

; 146  :                         _native_writer->Write(c);

  00038	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  0003c	0f b7 d7	 movzx	 edx, di
  0003f	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00042	ff 50 08	 call	 QWORD PTR [rax+8]

; 147  :                         _current_group_index = 1;
; 148  : 
; 149  :                         // 次のグループが存在すればそのグループに移行する
; 150  :                         if (_current_group[1] != L'\0')

  00045	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  00049	48 83 c0 02	 add	 rax, 2
  0004d	c7 43 4c 01 00
	00 00		 mov	 DWORD PTR [rbx+76], 1
  00054	66 83 38 00	 cmp	 WORD PTR [rax], 0
  00058	74 40		 je	 SHORT $LN3@Write

; 151  :                         {
; 152  :                             _current_group += 1;

  0005a	48 89 43 40	 mov	 QWORD PTR [rbx+64], rax

; 153  :                             _current_group_size = _current_group[0] - L'0';

  0005e	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00061	83 e8 30	 sub	 eax, 48			; 00000030H
  00064	89 43 48	 mov	 DWORD PTR [rbx+72], eax

; 168  :                 }
; 169  :             }

  00067	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
  00071	c3		 ret	 0
$LN9@Write:

; 154  :                         }
; 155  :                     }
; 156  :                     else
; 157  :                     {
; 158  :                         // 現在のグループの幅が 0 であるかあるいは出力した文字数がグループ幅に達していない場合
; 159  :                         _native_writer->Write(c);

  00072	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00076	0f b7 d7	 movzx	 edx, di
  00079	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0007c	ff 50 08	 call	 QWORD PTR [rax+8]

; 160  :                         _current_group_index += 1;

  0007f	ff 43 4c	 inc	 DWORD PTR [rbx+76]

; 168  :                 }
; 169  :             }

  00082	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00087	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008b	5f		 pop	 rdi
  0008c	c3		 ret	 0
$LN2@Write:

; 161  :                     }
; 162  :                 }
; 163  :                 else
; 164  :                 {
; 165  :                     // 桁区切りをサポートしない場合
; 166  : 
; 167  :                     _native_writer->Write(c);

  0008d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00091	0f b7 d7	 movzx	 edx, di
  00094	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00097	ff 50 08	 call	 QWORD PTR [rax+8]
$LN3@Write:

; 168  :                 }
; 169  :             }

  0009a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0009f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a3	5f		 pop	 rdi
  000a4	c3		 ret	 0
?Write@ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::Write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z
_TEXT	SEGMENT
this$ = 8
native_writer$ = 16
format_type$ = 24
format_option$ = 32
??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::ThousandSeparatedStringWriter, COMDAT
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 201  :             _p = p;

  00000	45 33 db	 xor	 r11d, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 104  :                 _native_writer = native_writer;

  00003	48 89 51 28	 mov	 QWORD PTR [rcx+40], rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 201  :             _p = p;

  00007	4c 89 59 08	 mov	 QWORD PTR [rcx+8], r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 103  :             {

  0000b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@6B@
  00012	48 89 01	 mov	 QWORD PTR [rcx], rax
  00015	4c 8b d1	 mov	 r10, rcx

; 104  :                 _native_writer = native_writer;

  00018	8b 41 30	 mov	 eax, DWORD PTR [rcx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h

; 202  :             _sob = sob;

  0001b	4c 89 59 10	 mov	 QWORD PTR [rcx+16], r11

; 203  :             _eob = eob;

  0001f	4c 89 59 18	 mov	 QWORD PTR [rcx+24], r11

; 204  :             _written = 0;

  00023	4c 89 59 20	 mov	 QWORD PTR [rcx+32], r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 106  :                 if (format_type == L'C')

  00027	66 41 83 f8 43	 cmp	 r8w, 67			; 00000043H
  0002c	74 0e		 je	 SHORT $LN11@ThousandSe

; 107  :                 {
; 108  :                     decimal_info = &format_option->Currency;
; 109  :                     _is_supported_thousand = TRUE;
; 110  :                 }
; 111  :                 else if (format_type == L'P')

  0002e	66 41 83 f8 50	 cmp	 r8w, 80			; 00000050H
  00033	75 0c		 jne	 SHORT $LN4@ThousandSe

; 112  :                 {
; 113  :                     decimal_info = &format_option->Percent;

  00035	49 81 c1 d0 00
	00 00		 add	 r9, 208			; 000000d0H
$LN11@ThousandSe:

; 125  :                 }
; 126  : 
; 127  :                 const wchar_t* in_ptr = decimal_info->GroupSeparator;
; 128  : 
; 129  :                 _current_group = &decimal_info->GroupSizes[0];

  0003c	83 c8 01	 or	 eax, 1
  0003f	eb 0e		 jmp	 SHORT $LN7@ThousandSe
$LN4@ThousandSe:

; 114  :                     _is_supported_thousand = TRUE;
; 115  :                 }
; 116  :                 else if (format_type == L'N')

  00041	49 83 c1 68	 add	 r9, 104			; 00000068H
  00045	66 41 83 f8 4e	 cmp	 r8w, 78			; 0000004eH
  0004a	74 f0		 je	 SHORT $LN11@ThousandSe

; 117  :                 {
; 118  :                     decimal_info = &format_option->Number;
; 119  :                     _is_supported_thousand = TRUE;
; 120  :                 }
; 121  :                 else
; 122  :                 {
; 123  :                     decimal_info = &format_option->Number;
; 124  :                     _is_supported_thousand = FALSE;

  0004c	83 e0 fe	 and	 eax, -2			; fffffffeH
$LN7@ThousandSe:

; 125  :                 }
; 126  : 
; 127  :                 const wchar_t* in_ptr = decimal_info->GroupSeparator;
; 128  : 
; 129  :                 _current_group = &decimal_info->GroupSizes[0];

  0004f	89 41 30	 mov	 DWORD PTR [rcx+48], eax

; 130  :                 _group_separator = decimal_info->GroupSeparator;

  00052	49 8d 41 26	 lea	 rax, QWORD PTR [r9+38]
  00056	49 89 42 38	 mov	 QWORD PTR [r10+56], rax
  0005a	49 8d 49 48	 lea	 rcx, QWORD PTR [r9+72]
  0005e	49 89 4a 40	 mov	 QWORD PTR [r10+64], rcx

; 131  :                 _current_group_size = *_current_group - L'0';

  00062	0f b7 01	 movzx	 eax, WORD PTR [rcx]
  00065	83 e8 30	 sub	 eax, 48			; 00000030H

; 132  :                 _current_group_index = 0;

  00068	45 89 5a 4c	 mov	 DWORD PTR [r10+76], r11d
  0006c	41 89 42 48	 mov	 DWORD PTR [r10+72], eax

; 133  :             }

  00070	49 8b c2	 mov	 rax, r10
  00073	c3		 ret	 0
??0ThousandSeparatedStringWriter@DecimalFromatter@Internal@Core@Math@Palmtree@@QEAA@PEAVStringWriter@2345@_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@2345@@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::ThousandSeparatedStringWriter::ThousandSeparatedStringWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z
_TEXT	SEGMENT
$T1 = 32
root$ = 40
x$ = 96
e$ = 104
?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10, COMDAT

; 73   :         {

  00000	40 57		 push	 rdi
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 60	 mov	 QWORD PTR [rsp+96], rbx
  00014	48 89 74 24 68	 mov	 QWORD PTR [rsp+104], rsi
  00019	48 8b fa	 mov	 rdi, rdx
  0001c	8b f1		 mov	 esi, ecx

; 74   :             ResourceHolderUINT root;

  0001e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00023	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00028	90		 npad	 1

; 75   :             NUMBER_HEADER* _10 = From_I_Imp(10);

  00029	b9 0a 00 00 00	 mov	 ecx, 10
  0002e	e8 00 00 00 00	 call	 ?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::From_I_Imp
  00033	48 8b d8	 mov	 rbx, rax

; 76   :             root.HookNumber(_10);

  00036	48 8b d0	 mov	 rdx, rax
  00039	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0003e	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 77   : #if _M_IX86
; 78   :             NUMBER_HEADER* exponent_of_10 = PMC_Pow_X_I_Imp(_10, e);
; 79   : #elif defined(_M_X64)
; 80   :             NUMBER_HEADER* exponent_of_10 = PMC_Pow_X_L_Imp(_10, e);

  00043	48 8b d7	 mov	 rdx, rdi
  00046	48 8b cb	 mov	 rcx, rbx
  00049	e8 00 00 00 00	 call	 ?PMC_Pow_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Pow_X_L_Imp
  0004e	48 8b d8	 mov	 rbx, rax

; 81   : #else
; 82   : #error unknown platform
; 83   : #endif
; 84   :             root.HookNumber(exponent_of_10);

  00051	48 8b d0	 mov	 rdx, rax
  00054	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00059	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 85   :             NUMBER_HEADER* x_times_of_exponent_of_10 = PMC_Multiply_X_I_Imp(exponent_of_10, x);

  0005e	8b d6		 mov	 edx, esi
  00060	48 8b cb	 mov	 rcx, rbx
  00063	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  00068	48 8b d8	 mov	 rbx, rax

; 86   :             return (x_times_of_exponent_of_10);

  0006b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00070	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00075	48 8b c3	 mov	 rax, rbx

; 87   :         }

  00078	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  0007d	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  00082	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
?get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
x$ = 96
e$ = 104
?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
x$ = 96
e$ = 104
?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??get_x_times_of_exponent_of_10@DecimalFromatter@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@2345@I_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_x_times_of_exponent_of_10'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z
_TEXT	SEGMENT
root$ = 56
src_buf$ = 128
temp_r$1 = 136
src_buf_count$ = 136
?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z PROC ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal, COMDAT

; 45   :         {

  00000	48 8b c4	 mov	 rax, rsp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 56		 push	 r14
  00007	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000b	48 c7 40 b8 fe
	ff ff ff	 mov	 QWORD PTR [rax-72], -2
  00013	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00017	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
  0001b	48 8b da	 mov	 rbx, rdx
  0001e	48 8b f1	 mov	 rsi, rcx

; 46   :             ResourceHolderUINT root;

  00021	48 8d 48 c0	 lea	 rcx, QWORD PTR [rax-64]
  00025	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0002a	90		 npad	 1

; 47   :             __UNIT_TYPE* work1_buf = root.AllocateBlock(src_buf_count * __UNIT_TYPE_BIT_COUNT);

  0002b	48 8b fb	 mov	 rdi, rbx
  0002e	48 c1 e7 06	 shl	 rdi, 6
  00032	48 8b d7	 mov	 rdx, rdi
  00035	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  0003a	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  0003f	48 8b e8	 mov	 rbp, rax

; 48   :             __UNIT_TYPE* work2_buf = root.AllocateBlock(src_buf_count * __UNIT_TYPE_BIT_COUNT);

  00042	48 8b d7	 mov	 rdx, rdi
  00045	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  0004a	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  0004f	48 8b fd	 mov	 rdi, rbp
  00052	48 8b cb	 mov	 rcx, rbx
  00055	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp

; 53   :             _UINT32_T digit_count = 0;

  00058	33 ff		 xor	 edi, edi
$LN21@get_digit_:

; 54   :             while (1)
; 55   :             {
; 56   :                 while (u_count > 0 && u_buf[u_count - 1] == 0)

  0005a	4c 8b f0	 mov	 r14, rax
  0005d	48 85 db	 test	 rbx, rbx
  00060	74 1e		 je	 SHORT $LN20@get_digit_
  00062	48 8d 04 dd f8
	ff ff ff	 lea	 rax, QWORD PTR [rbx*8-8]
  0006a	48 03 c5	 add	 rax, rbp
  0006d	0f 1f 00	 npad	 3
$LL4@get_digit_:
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	75 2b		 jne	 SHORT $LN5@get_digit_

; 57   :                     --u_count;

  00076	48 83 e8 08	 sub	 rax, 8
  0007a	48 83 eb 01	 sub	 rbx, 1

; 54   :             while (1)
; 55   :             {
; 56   :                 while (u_count > 0 && u_buf[u_count - 1] == 0)

  0007e	75 f0		 jne	 SHORT $LL4@get_digit_
$LN20@get_digit_:

; 68   :             return (digit_count);

  00080	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  00085	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0008a	8b c7		 mov	 eax, edi

; 69   :         }

  0008c	4c 8d 5c 24 60	 lea	 r11, QWORD PTR [rsp+96]
  00091	49 8b 5b 20	 mov	 rbx, QWORD PTR [r11+32]
  00095	49 8b 6b 30	 mov	 rbp, QWORD PTR [r11+48]
  00099	49 8b e3	 mov	 rsp, r11
  0009c	41 5e		 pop	 r14
  0009e	5f		 pop	 rdi
  0009f	5e		 pop	 rsi
  000a0	c3		 ret	 0
$LN5@get_digit_:

; 58   :                 if (u_count <= 0)
; 59   :                     break;
; 60   :                 __UNIT_TYPE temp_r;
; 61   :                 root.ClearBlock(q_buf);

  000a1	49 8b d6	 mov	 rdx, r14
  000a4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$[rsp]
  000a9	e8 00 00 00 00	 call	 ?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock

; 62   :                 DivRem_X_1W(u_buf, u_count, 10, q_buf, &temp_r);

  000ae	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR temp_r$1[rsp]
  000b6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000bb	4d 8b ce	 mov	 r9, r14
  000be	41 b8 0a 00 00
	00		 mov	 r8d, 10
  000c4	48 8b d3	 mov	 rdx, rbx
  000c7	48 8b cd	 mov	 rcx, rbp
  000ca	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 63   :                 __UNIT_TYPE* t = u_buf;

  000cf	48 8b c5	 mov	 rax, rbp

; 64   :                 u_buf = q_buf;

  000d2	49 8b ee	 mov	 rbp, r14

; 65   :                 q_buf = t;
; 66   :                 ++digit_count;

  000d5	ff c7		 inc	 edi

; 67   :             }

  000d7	eb 81		 jmp	 SHORT $LN21@get_digit_
  000d9	cc		 int	 3
?get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z ENDP ; Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 56
src_buf$ = 128
temp_r$1 = 136
src_buf_count$ = 136
?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$ = 56
src_buf$ = 128
temp_r$1 = 136
src_buf_count$ = 136
?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??get_digit_count_as_decimal@DecimalFromatter@Internal@Core@Math@Palmtree@@YAIPEA_K_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DecimalFromatter::get_digit_count_as_decimal'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ROTATE_L_UNIT
_TEXT	SEGMENT
x$ = 8
count$ = 16
_ROTATE_L_UNIT PROC					; COMDAT

; 329  :         {

  00000	48 8b c1	 mov	 rax, rcx

; 330  : #ifdef _M_IX86
; 331  :             return (_rotl(x, count));
; 332  : #elif defined(_M_X64)
; 333  :             return (_rotl64(x, count));

  00003	8b ca		 mov	 ecx, edx
  00005	48 d3 c0	 rol	 rax, cl

; 334  : #else
; 335  : #error unknown platform
; 336  : #endif
; 337  :         }

  00008	c3		 ret	 0
_ROTATE_L_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ADD_UNIT
_TEXT	SEGMENT
carry$ = 8
u$ = 16
v$ = 24
w$ = 32
_ADD_UNIT PROC						; COMDAT

; 177  : #ifdef _M_IX86
; 178  :             return (_addcarry_u32(carry, u, v, w));
; 179  : #elif defined(_M_X64)
; 180  :             return (_addcarry_u64(carry, u, v, w));

  00000	80 c1 ff	 add	 cl, -1
  00003	49 13 d0	 adc	 rdx, r8
  00006	49 89 11	 mov	 QWORD PTR [r9], rdx
  00009	0f 92 c0	 setb	 al

; 181  : #else
; 182  : #error unknown platform
; 183  : #endif
; 184  :         }

  0000c	c3		 ret	 0
_ADD_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _DIVIDE_CEILING_UNIT
_TEXT	SEGMENT
u$ = 8
v$ = 16
_DIVIDE_CEILING_UNIT PROC				; COMDAT

; 157  :             return ((u + v - 1) / v);

  00000	48 8d 42 ff	 lea	 rax, QWORD PTR [rdx-1]
  00004	4c 8b c2	 mov	 r8, rdx
  00007	48 03 c1	 add	 rax, rcx
  0000a	33 d2		 xor	 edx, edx
  0000c	49 f7 f0	 div	 r8

; 158  :         }

  0000f	c3		 ret	 0
_DIVIDE_CEILING_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _COPY_MEMORY_UNIT
_TEXT	SEGMENT
d$ = 8
s$ = 16
count$ = 24
_COPY_MEMORY_UNIT PROC					; COMDAT

; 63   :         {

  00000	48 89 74 24 08	 mov	 QWORD PTR [rsp+8], rsi
  00005	48 89 7c 24 10	 mov	 QWORD PTR [rsp+16], rdi

; 64   : #ifdef _M_IX86
; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);
; 66   : #elif defined(_M_X64)
; 67   :             __movsq(d, s, count);

  0000a	48 8b f9	 mov	 rdi, rcx
  0000d	48 8b f2	 mov	 rsi, rdx
  00010	49 8b c8	 mov	 rcx, r8
  00013	f3 48 a5	 rep movsq

; 68   : #else
; 69   : #error unknown platform
; 70   : #endif
; 71   :         }

  00016	48 8b 74 24 08	 mov	 rsi, QWORD PTR [rsp+8]
  0001b	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  00020	c3		 ret	 0
_COPY_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 8
?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToDIV64Counter, COMDAT

; 333  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00000	f0 0f c1 0d 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, ecx

; 334  :     }

  00008	c3		 ret	 0
?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToDIV64Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 8
?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToDIV32Counter, COMDAT

; 327  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV32, value);

  00000	f0 0f c1 0d 0c
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+12, ecx

; 328  :     }

  00008	c3		 ret	 0
?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToDIV32Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementDIV64Counter, COMDAT

; 310  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  00000	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8

; 311  :     }

  00007	c3		 ret	 0
?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementDIV64Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementDIV32Counter, COMDAT

; 304  :         _InterlockedIncrement(&statistics_info.COUNT_DIV32);

  00000	f0 ff 05 0c 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+12

; 305  :     }

  00007	c3		 ret	 0
?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementDIV32Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z
_TEXT	SEGMENT
$T1 = 48
x$ = 112
format$ = 120
format_option$ = 128
buffer$ = 136
buffer_size$ = 144
?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_ToString, COMDAT

; 1435 :     {

$LN8:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	49 8b f1	 mov	 rsi, r9
  00017	49 8b f8	 mov	 rdi, r8
  0001a	48 8b ea	 mov	 rbp, rdx
  0001d	48 8b d9	 mov	 rbx, rcx

; 1436 :         if (x == nullptr)

  00020	48 85 c9	 test	 rcx, rcx
  00023	74 51		 je	 SHORT $LN7@PMC_ToStri

; 1438 :         if (format_option == nullptr)
; 1439 :             format_option = &default_number_format_option;
; 1440 :         NUMBER_HEADER* nx = (NUMBER_HEADER*)x;
; 1441 :         CheckNumber(nx);

  00025	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 1442 :         return (ToString_Imp(nx->IS_ZERO ? 0 : 1, nx, format, format_option, buffer, buffer_size));

  0002a	0f b6 4b 08	 movzx	 ecx, BYTE PTR [rbx+8]
  0002e	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?default_number_format_option@Internal@Core@Math@Palmtree@@3U__tag_PMC_NUMBER_FORMAT_INFO@1234@A
  00035	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR buffer_size$[rsp]
  0003d	48 85 ff	 test	 rdi, rdi
  00040	f6 d1		 not	 cl
  00042	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00047	4c 0f 45 cf	 cmovne	 r9, rdi
  0004b	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  00050	80 e1 01	 and	 cl, 1
  00053	4c 8b c5	 mov	 r8, rbp
  00056	48 8b d3	 mov	 rdx, rbx
  00059	e8 00 00 00 00	 call	 ?ToString_Imp@Internal@Core@Math@Palmtree@@YA_KDPEAU__tag_NUMBER_HEADER@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ; Palmtree::Math::Core::Internal::ToString_Imp

; 1443 :     }

  0005e	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  00063	48 8b 6c 24 78	 mov	 rbp, QWORD PTR [rsp+120]
  00068	48 8b b4 24 80
	00 00 00	 mov	 rsi, QWORD PTR [rsp+128]
  00070	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00074	5f		 pop	 rdi
  00075	c3		 ret	 0
$LN7@PMC_ToStri:

; 1437 :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"x");

  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13HADAKIJA@?$AAx@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00084	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  00089	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00095	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  0009a	e8 00 00 00 00	 call	 _CxxThrowException
  0009f	cc		 int	 3
$LN5@PMC_ToStri:
?PMC_ToString@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@PEB_WPEBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_ToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z
_TEXT	SEGMENT
info$ = 8
?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo, COMDAT

; 1477 :         InitializeNumberFormatoInfo(info);

  00000	e9 00 00 00 00	 jmp	 ?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo
?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 48
?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_ToString, COMDAT

; 1481 :     {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1482 :         InitializeNumberFormatoInfo(&default_number_format_option);

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?default_number_format_option@Internal@Core@Math@Palmtree@@3U__tag_PMC_NUMBER_FORMAT_INFO@1234@A
  0000b	e8 00 00 00 00	 call	 ?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo

; 1483 : 
; 1484 :         return (PMC_STATUS_OK);

  00010	33 c0		 xor	 eax, eax

; 1485 :     }

  00012	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00016	c3		 ret	 0
?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_ToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_tostring.cpp
;	COMDAT ?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z
_TEXT	SEGMENT
info$ = 48
?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z PROC ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo, COMDAT

; 1446 :     {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b d9	 mov	 rbx, rcx

; 1447 :         info->Currency.DecimalDigits = 2;

  0000d	c7 01 02 00 00
	00		 mov	 DWORD PTR [rcx], 2

; 1448 :         lstrcpyW(info->Currency.DecimalSeparator, L".");

  00013	48 83 c1 04	 add	 rcx, 4
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13JOFGPIOO@?$AA?4@
  0001e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1449 :         lstrcpyW(info->Currency.GroupSeparator, L",");

  00024	48 8d 4b 26	 lea	 rcx, QWORD PTR [rbx+38]
  00028	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DEFPDAGF@?$AA?0@
  0002f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1450 :         lstrcpyW(info->Currency.GroupSizes, L"3");

  00035	48 8d 4b 48	 lea	 rcx, QWORD PTR [rbx+72]
  00039	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DMCFHHKM@?$AA3@
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1451 :         info->Currency.NegativePattern = 0;

  00046	33 ff		 xor	 edi, edi

; 1452 :         info->Currency.PositivePattern = 0;
; 1453 : 
; 1454 :         info->Number.DecimalDigits = 2;

  00048	c7 43 68 02 00
	00 00		 mov	 DWORD PTR [rbx+104], 2

; 1455 :         lstrcpyW(info->Number.DecimalSeparator, L".");

  0004f	48 8d 4b 6c	 lea	 rcx, QWORD PTR [rbx+108]
  00053	48 89 7b 60	 mov	 QWORD PTR [rbx+96], rdi
  00057	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13JOFGPIOO@?$AA?4@
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1456 :         lstrcpyW(info->Number.GroupSeparator, L",");

  00064	48 8d 8b 8e 00
	00 00		 lea	 rcx, QWORD PTR [rbx+142]
  0006b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DEFPDAGF@?$AA?0@
  00072	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1457 :         lstrcpyW(info->Number.GroupSizes, L"3");

  00078	48 8d 8b b0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+176]
  0007f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DMCFHHKM@?$AA3@
  00086	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1458 :         info->Number.NegativePattern = 1;
; 1459 :         info->Number.PositivePattern = -1; // 未使用
; 1460 : 
; 1461 :         info->Percent.DecimalDigits = 2;
; 1462 :         lstrcpyW(info->Percent.DecimalSeparator, L".");

  0008c	48 8d 8b d4 00
	00 00		 lea	 rcx, QWORD PTR [rbx+212]
  00093	c7 83 c8 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rbx+200], 1
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13JOFGPIOO@?$AA?4@
  000a4	c7 83 cc 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [rbx+204], -1
  000ae	c7 83 d0 00 00
	00 02 00 00 00	 mov	 DWORD PTR [rbx+208], 2
  000b8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1463 :         lstrcpyW(info->Percent.GroupSeparator, L",");

  000be	48 8d 8b f6 00
	00 00		 lea	 rcx, QWORD PTR [rbx+246]
  000c5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DEFPDAGF@?$AA?0@
  000cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1464 :         lstrcpyW(info->Percent.GroupSizes, L"3");

  000d2	48 8d 8b 18 01
	00 00		 lea	 rcx, QWORD PTR [rbx+280]
  000d9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13DMCFHHKM@?$AA3@
  000e0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1465 :         info->Percent.NegativePattern = 0;
; 1466 :         info->Percent.PositivePattern = 0;
; 1467 : 
; 1468 :         lstrcpyW(info->CurrencySymbol, L"\u00a4");

  000e6	48 8d 8b 38 01
	00 00		 lea	 rcx, QWORD PTR [rbx+312]
  000ed	48 89 bb 30 01
	00 00		 mov	 QWORD PTR [rbx+304], rdi
  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13BMLCKOLB@?$PP?$KE@
  000fb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1469 :         lstrcpyW(info->NegativeSign, L"-");

  00101	48 8d 8b 5a 01
	00 00		 lea	 rcx, QWORD PTR [rbx+346]
  00108	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13IMODFHAA@?$AA?9@
  0010f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1470 :         lstrcpyW(info->PercentSymbol, L"%");

  00115	48 8d 8b 9e 01
	00 00		 lea	 rcx, QWORD PTR [rbx+414]
  0011c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13EJFHHPOP@?$AA?$CF@
  00123	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1471 :         lstrcpyW(info->PerMilleSymbol, L"\u2030");

  00129	48 8d 8b c0 01
	00 00		 lea	 rcx, QWORD PTR [rbx+448]
  00130	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13BGNNJOKC@?$AA0@
  00137	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 1472 :         lstrcpyW(info->PositiveSign, L"+");

  0013d	48 8d 8b 7c 01
	00 00		 lea	 rcx, QWORD PTR [rbx+380]
  00144	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_13KJIIAINM@?$AA?$CL@

; 1473 :     }

  0014b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00150	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00154	5f		 pop	 rdi

; 1472 :         lstrcpyW(info->PositiveSign, L"+");

  00155	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp_lstrcpyW
?InitializeNumberFormatoInfo@Internal@Core@Math@Palmtree@@YAXPEAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ENDP ; Palmtree::Math::Core::Internal::InitializeNumberFormatoInfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 8
?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ PROC ; Palmtree::Math::Core::Internal::ReverseStringWriter::GetString, COMDAT

; 290  :             return (_p);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 291  :         }

  00004	c3		 ret	 0
?GetString@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ENDP ; Palmtree::Math::Core::Internal::ReverseStringWriter::GetString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
this$ = 48
str$ = 56
?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write, COMDAT

; 279  :         {

$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b f9	 mov	 rdi, rcx
  00012	48 8b f2	 mov	 rsi, rdx

; 280  :             const wchar_t* p = str + lstrlenW(str);

  00015	48 8b ca	 mov	 rcx, rdx
  00018	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0001e	4c 63 c0	 movsxd	 r8, eax
  00021	4a 8d 1c 46	 lea	 rbx, QWORD PTR [rsi+r8*2]

; 281  :             while (p > str)

  00025	48 3b de	 cmp	 rbx, rsi
  00028	76 1b		 jbe	 SHORT $LN3@Write
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL7@Write:

; 282  :             {
; 283  :                 --p;
; 284  :                 Write(*p);

  00030	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00033	48 83 eb 02	 sub	 rbx, 2
  00037	48 8b cf	 mov	 rcx, rdi
  0003a	0f b7 13	 movzx	 edx, WORD PTR [rbx]
  0003d	ff 50 08	 call	 QWORD PTR [rax+8]
  00040	48 3b de	 cmp	 rbx, rsi
  00043	77 eb		 ja	 SHORT $LL7@Write
$LN3@Write:

; 285  :             }
; 286  :         }

  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
c$ = 104
?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write, COMDAT

; 270  :         {

$LN7:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 271  :             if (_p <= _sob)

  00004	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00008	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0000c	76 14		 jbe	 SHORT $LN6@Write

; 273  :             --_p;

  0000e	48 83 c0 fe	 add	 rax, -2
  00012	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 274  :             *_p = c;

  00016	66 89 10	 mov	 WORD PTR [rax], dx

; 275  :             ++_written;

  00019	48 ff 41 20	 inc	 QWORD PTR [rcx+32]

; 276  :         }

  0001d	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00021	c3		 ret	 0
$LN6@Write:

; 272  :                 throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00022	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  00029	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002e	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  0003a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0003f	e8 00 00 00 00	 call	 _CxxThrowException
  00044	cc		 int	 3
$LN4@Write:
?Write@ReverseStringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringWriter::Write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
buffer$ = 104
size$ = 112
??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter, COMDAT

; 265  :         {

$LN16:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 199  :         StringWriter(wchar_t* p, wchar_t* sob, wchar_t* eob)

  00004	45 33 d2	 xor	 r10d, r10d

; 200  :         {
; 201  :             _p = p;
; 202  :             _sob = sob;

  00007	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx
  0000b	48 85 d2	 test	 rdx, rdx

; 203  :             _eob = eob;
; 204  :             _written = 0;

  0000e	4c 89 51 20	 mov	 QWORD PTR [rcx+32], r10
  00012	4a 8d 04 42	 lea	 rax, QWORD PTR [rdx+r8*2]
  00016	49 0f 44 c2	 cmove	 rax, r10
  0001a	4e 8d 0c 42	 lea	 r9, QWORD PTR [rdx+r8*2]
  0001e	4d 0f 44 ca	 cmove	 r9, r10
  00022	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00026	4c 89 49 08	 mov	 QWORD PTR [rcx+8], r9

; 265  :         {

  0002a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ReverseStringWriter@Internal@Core@Math@Palmtree@@6B@
  00031	48 89 01	 mov	 QWORD PTR [rcx], rax

; 271  :             if (_p <= _sob)

  00034	4c 3b ca	 cmp	 r9, rdx
  00037	76 18		 jbe	 SHORT $LN15@ReverseStr

; 273  :             --_p;

  00039	49 8d 41 fe	 lea	 rax, QWORD PTR [r9-2]
  0003d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 274  :             *_p = c;

  00041	66 44 89 10	 mov	 WORD PTR [rax], r10w

; 266  :             Write(L'\0');
; 267  :         }

  00045	48 8b c1	 mov	 rax, rcx

; 275  :             ++_written;

  00048	48 ff 41 20	 inc	 QWORD PTR [rcx+32]

; 266  :             Write(L'\0');
; 267  :         }

  0004c	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00050	c3		 ret	 0
$LN15@ReverseStr:

; 272  :                 throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  00058	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0005d	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  00069	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0006e	e8 00 00 00 00	 call	 _CxxThrowException
  00073	cc		 int	 3
$LN13@ReverseStr:
??0ReverseStringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringWriter::ReverseStringWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ
_TEXT	SEGMENT
this$ = 8
?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ PROC ; Palmtree::Math::Core::Internal::StringWriter::GetLength, COMDAT

; 250  :             return (_written);

  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]

; 251  :         }

  00004	c3		 ret	 0
?GetLength@StringWriter@Internal@Core@Math@Palmtree@@QEAA_KXZ ENDP ; Palmtree::Math::Core::Internal::StringWriter::GetLength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 8
?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ PROC ; Palmtree::Math::Core::Internal::StringWriter::GetString, COMDAT

; 245  :             return (_sob);

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]

; 246  :         }

  00004	c3		 ret	 0
?GetString@StringWriter@Internal@Core@Math@Palmtree@@UEAAPEA_WXZ ENDP ; Palmtree::Math::Core::Internal::StringWriter::GetString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
this$ = 48
str$ = 56
?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::Write, COMDAT

; 235  :         {

$LN10:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	48 8b f9	 mov	 rdi, rcx

; 236  :             while (*str != L'\0')

  00010	0f b7 12	 movzx	 edx, WORD PTR [rdx]
  00013	66 85 d2	 test	 dx, dx
  00016	74 1e		 je	 SHORT $LN3@Write
  00018	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@Write:

; 237  :             {
; 238  :                 Write(*str);

  00020	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00023	48 8b cf	 mov	 rcx, rdi
  00026	ff 50 08	 call	 QWORD PTR [rax+8]
  00029	0f b7 53 02	 movzx	 edx, WORD PTR [rbx+2]

; 239  :                 ++str;

  0002d	48 8d 5b 02	 lea	 rbx, QWORD PTR [rbx+2]
  00031	66 85 d2	 test	 dx, dx
  00034	75 ea		 jne	 SHORT $LL2@Write
$LN3@Write:

; 240  :             }
; 241  :         }

  00036	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::Write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z
_TEXT	SEGMENT
this$ = 48
c$ = 56
count$ = 64
?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::Write, COMDAT

; 226  :         {

$LN11:

; 227  :             while (count > 0)

  00000	4d 85 c0	 test	 r8, r8
  00003	74 3c		 je	 SHORT $LN9@Write
  00005	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  0000a	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 226  :         {

  00014	49 8b d8	 mov	 rbx, r8
  00017	0f b7 f2	 movzx	 esi, dx
  0001a	48 8b f9	 mov	 rdi, rcx
  0001d	0f 1f 00	 npad	 3
$LL2@Write:

; 228  :             {
; 229  :                 Write(c);

  00020	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00023	0f b7 d6	 movzx	 edx, si
  00026	48 8b cf	 mov	 rcx, rdi
  00029	ff 50 08	 call	 QWORD PTR [rax+8]

; 230  :                 --count;

  0002c	48 83 eb 01	 sub	 rbx, 1
  00030	75 ee		 jne	 SHORT $LL2@Write

; 231  :             }
; 232  :         }

  00032	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00037	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
$LN9@Write:
  00041	c3		 ret	 0
?Write@StringWriter@Internal@Core@Math@Palmtree@@QEAAX_W_K@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::Write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
c$ = 104
?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::Write, COMDAT

; 214  :         {

$LN8:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 215  :             if (_p != nullptr)

  00004	4c 8b 41 08	 mov	 r8, QWORD PTR [rcx+8]
  00008	4d 85 c0	 test	 r8, r8
  0000b	74 1c		 je	 SHORT $LN2@Write

; 216  :             {
; 217  :                 if (_p + 1 >= _eob)

  0000d	49 8d 40 02	 lea	 rax, QWORD PTR [r8+2]
  00011	48 3b 41 18	 cmp	 rax, QWORD PTR [rcx+24]
  00015	73 1b		 jae	 SHORT $LN7@Write

; 219  :                 *_p++ = c;

  00017	66 41 89 10	 mov	 WORD PTR [r8], dx
  0001b	48 83 41 08 02	 add	 QWORD PTR [rcx+8], 2
  00020	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 220  :                 *_p = L'\0';

  00024	33 d2		 xor	 edx, edx
  00026	66 89 10	 mov	 WORD PTR [rax], dx
$LN2@Write:

; 221  :             }
; 222  :             ++_written;

  00029	48 ff 41 20	 inc	 QWORD PTR [rcx+32]

; 223  :         }

  0002d	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00031	c3		 ret	 0
$LN7@Write:

; 218  :                     throw InsufficientBufferException(L"書き込み先バッファのサイズが不足しています。");

  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@JABAMCFP@?$PP?x?$AAM?$PP?$LM?$AA?$HP?$AAH?$PP?P?$PP?C?$PP?U?$PP?$KB?$AAn?$PP?$LF?$PP?$KE?$PP?$LK?$AAL?$AA?$AN@
  00039	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0003e	e8 00 00 00 00	 call	 ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
  00043	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInsufficientBufferException@Internal@Core@Math@Palmtree@@
  0004a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004f	e8 00 00 00 00	 call	 _CxxThrowException
  00054	cc		 int	 3
$LN5@Write:
?Write@StringWriter@Internal@Core@Math@Palmtree@@UEAAX_W@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::Write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z
_TEXT	SEGMENT
this$ = 8
buffer$ = 16
size$ = 24
??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::StringWriter, COMDAT

; 205  :         }
; 206  : 
; 207  :     public:
; 208  :         StringWriter(wchar_t* buffer, size_t size)
; 209  :             : StringWriter(buffer, buffer, buffer != nullptr ? buffer + size : nullptr)

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN3@StringWrit
  00005	4a 8d 04 42	 lea	 rax, QWORD PTR [rdx+r8*2]
  00009	eb 02		 jmp	 SHORT $LN4@StringWrit
$LN3@StringWrit:
  0000b	33 c0		 xor	 eax, eax
$LN4@StringWrit:

; 203  :             _eob = eob;

  0000d	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 210  :         {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 211  :         }

  0001b	48 8b c1	 mov	 rax, rcx

; 201  :             _p = p;

  0001e	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx

; 202  :             _sob = sob;

  00022	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 204  :             _written = 0;

  00026	48 c7 41 20 00
	00 00 00	 mov	 QWORD PTR [rcx+32], 0

; 211  :         }

  0002e	c3		 ret	 0
??0StringWriter@Internal@Core@Math@Palmtree@@QEAA@PEA_W_K@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::StringWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z
_TEXT	SEGMENT
this$ = 8
p$ = 16
sob$ = 24
eob$ = 32
??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z PROC ; Palmtree::Math::Core::Internal::StringWriter::StringWriter, COMDAT

; 199  :         StringWriter(wchar_t* p, wchar_t* sob, wchar_t* eob)

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringWriter@Internal@Core@Math@Palmtree@@6B@

; 200  :         {
; 201  :             _p = p;

  00007	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 202  :             _sob = sob;
; 203  :             _eob = eob;
; 204  :             _written = 0;
; 205  :         }

  0000e	48 8b c1	 mov	 rax, rcx
  00011	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8
  00015	4c 89 49 18	 mov	 QWORD PTR [rcx+24], r9
  00019	48 c7 41 20 00
	00 00 00	 mov	 QWORD PTR [rcx+32], 0
  00021	c3		 ret	 0
??0StringWriter@Internal@Core@Math@Palmtree@@IEAA@PEA_W00@Z ENDP ; Palmtree::Math::Core::Internal::StringWriter::StringWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z
_TEXT	SEGMENT
a$ = 8
eoa$ = 16
b$ = 24
?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith, COMDAT

; 179  :             while (*b != L'\0')

  00000	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00004	66 85 c0	 test	 ax, ax
  00007	74 23		 je	 SHORT $LN3@StartsWith
  00009	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@StartsWith:

; 180  :             {
; 181  :                 if (a < eoa || *a != *b)

  00010	48 3b ca	 cmp	 rcx, rdx
  00013	72 1d		 jb	 SHORT $LN8@StartsWith
  00015	66 39 01	 cmp	 WORD PTR [rcx], ax
  00018	75 18		 jne	 SHORT $LN8@StartsWith

; 183  :                 --a;
; 184  :                 ++b;

  0001a	41 0f b7 40 02	 movzx	 eax, WORD PTR [r8+2]
  0001f	49 83 c0 02	 add	 r8, 2
  00023	48 83 e9 02	 sub	 rcx, 2
  00027	66 85 c0	 test	 ax, ax
  0002a	75 e4		 jne	 SHORT $LL2@StartsWith
$LN3@StartsWith:

; 185  :             }
; 186  :             return (1);

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 187  :         }

  00031	c3		 ret	 0
$LN8@StartsWith:

; 182  :                     return (0);

  00032	33 c0		 xor	 eax, eax

; 187  :         }

  00034	c3		 ret	 0
?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@CAHPEB_W00@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
str$ = 104
?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::SkipString, COMDAT

; 167  :         {

$LN18:
  00000	40 53		 push	 rbx
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H

; 179  :             while (*b != L'\0')

  00006	66 83 3a 00	 cmp	 WORD PTR [rdx], 0

; 167  :         {

  0000a	48 8b d9	 mov	 rbx, rcx

; 168  :             if (!StartsWith(_p, _start, str))

  0000d	4c 8b 41 08	 mov	 r8, QWORD PTR [rcx+8]
  00011	4c 8b ca	 mov	 r9, rdx

; 179  :             while (*b != L'\0')

  00014	74 28		 je	 SHORT $LN2@SkipString

; 180  :             {
; 181  :                 if (a < eoa || *a != *b)

  00016	4c 8b 51 10	 mov	 r10, QWORD PTR [rcx+16]
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL5@SkipString:
  00020	4d 3b c2	 cmp	 r8, r10
  00023	72 32		 jb	 SHORT $LN15@SkipString
  00025	41 0f b7 01	 movzx	 eax, WORD PTR [r9]
  00029	66 41 39 00	 cmp	 WORD PTR [r8], ax
  0002d	75 28		 jne	 SHORT $LN15@SkipString

; 182  :                     return (0);
; 183  :                 --a;
; 184  :                 ++b;

  0002f	49 83 c1 02	 add	 r9, 2
  00033	49 83 e8 02	 sub	 r8, 2
  00037	66 41 83 39 00	 cmp	 WORD PTR [r9], 0
  0003c	75 e2		 jne	 SHORT $LL5@SkipString
$LN2@SkipString:

; 172  :             }
; 173  :             _p -= lstrlenW(str);

  0003e	48 8b ca	 mov	 rcx, rdx
  00041	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  00047	48 63 c8	 movsxd	 rcx, eax
  0004a	48 03 c9	 add	 rcx, rcx
  0004d	48 29 4b 08	 sub	 QWORD PTR [rbx+8], rcx

; 174  :         }

  00051	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00055	5b		 pop	 rbx
  00056	c3		 ret	 0
$LN15@SkipString:

; 169  :             {
; 170  :                 // str で始まっていないにもかかわらず、strをスキップしようとした。
; 171  :                 throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_stringio.h;ReverseStringReader::SkipString;1");

  00057	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1GC@GGAPGHKN@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  00065	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0006a	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00076	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0007b	e8 00 00 00 00	 call	 _CxxThrowException
  00080	cc		 int	 3
$LN16@SkipString:
?SkipString@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::SkipString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
_TEXT	SEGMENT
this$ = 8
str$ = 16
?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith, COMDAT

; 179  :             while (*b != L'\0')

  00000	66 83 3a 00	 cmp	 WORD PTR [rdx], 0

; 163  :             return (StartsWith(_p, _start, str));

  00004	4c 8b 41 08	 mov	 r8, QWORD PTR [rcx+8]

; 179  :             while (*b != L'\0')

  00008	74 22		 je	 SHORT $LN5@StartsWith

; 180  :             {
; 181  :                 if (a < eoa || *a != *b)

  0000a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0000e	66 90		 npad	 2
$LL4@StartsWith:
  00010	4c 3b c1	 cmp	 r8, rcx
  00013	72 1d		 jb	 SHORT $LN10@StartsWith
  00015	0f b7 02	 movzx	 eax, WORD PTR [rdx]
  00018	66 41 39 00	 cmp	 WORD PTR [r8], ax
  0001c	75 14		 jne	 SHORT $LN10@StartsWith

; 182  :                     return (0);
; 183  :                 --a;
; 184  :                 ++b;

  0001e	48 83 c2 02	 add	 rdx, 2
  00022	49 83 e8 02	 sub	 r8, 2
  00026	66 83 3a 00	 cmp	 WORD PTR [rdx], 0
  0002a	75 e4		 jne	 SHORT $LL4@StartsWith
$LN5@StartsWith:

; 163  :             return (StartsWith(_p, _start, str));

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 164  :         }

  00031	c3		 ret	 0
$LN10@StartsWith:

; 163  :             return (StartsWith(_p, _start, str));

  00032	33 c0		 xor	 eax, eax

; 164  :         }

  00034	c3		 ret	 0
?StartsWith@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::StartsWith
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 96
?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::Progress, COMDAT

; 155  :         {

$LN7:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 156  :             if (_p < _start)

  00004	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00008	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0000c	72 0d		 jb	 SHORT $LN6@Progress

; 158  :             --_p;

  0000e	48 83 c0 fe	 add	 rax, -2
  00012	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 159  :         }

  00016	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0001a	c3		 ret	 0
$LN6@Progress:

; 157  :                 throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_stringio.h;ReverseStringReader::Progress;1");

  0001b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FO@BNHGDLLE@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
  00022	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  00029	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002e	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0003f	e8 00 00 00 00	 call	 _CxxThrowException
  00044	cc		 int	 3
$LN4@Progress:
?Progress@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAAXXZ ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::Progress
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
_TEXT	SEGMENT
this$ = 8
?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar, COMDAT

; 149  :             if (_p < _start)

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00008	73 03		 jae	 SHORT $LN2@PeekChar

; 150  :                 return (L'\0');

  0000a	33 c0		 xor	 eax, eax

; 152  :         }

  0000c	c3		 ret	 0
$LN2@PeekChar:

; 151  :             return (*_p);

  0000d	0f b7 00	 movzx	 eax, WORD PTR [rax]

; 152  :         }

  00010	c3		 ret	 0
?PeekChar@ReverseStringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::PeekChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
p$ = 56
??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::ReverseStringReader::ReverseStringReader, COMDAT

; 142  :         {

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ReverseStringReader@Internal@Core@Math@Palmtree@@6B@

; 52   :             _p = p;

  00011	48 c7 41 08 00
	00 00 00	 mov	 QWORD PTR [rcx+8], 0

; 142  :         {

  00019	48 89 01	 mov	 QWORD PTR [rcx], rax
  0001c	48 8b f9	 mov	 rdi, rcx

; 143  :             _start = p;

  0001f	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx
  00023	48 8b da	 mov	 rbx, rdx

; 144  :             _p = p + lstrlenW(p) - 1;

  00026	48 8b ca	 mov	 rcx, rdx
  00029	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0002f	48 98		 cdqe
  00031	48 83 eb 02	 sub	 rbx, 2
  00035	48 8d 04 43	 lea	 rax, QWORD PTR [rbx+rax*2]

; 145  :         }

  00039	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003e	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax
  00042	48 8b c7	 mov	 rax, rdi
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??0ReverseStringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::ReverseStringReader::ReverseStringReader
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::StringReader::StartsWith, COMDAT

; 121  :             while (*b != L'\0')

  00000	0f b7 02	 movzx	 eax, WORD PTR [rdx]
  00003	66 85 c0	 test	 ax, ax
  00006	74 1b		 je	 SHORT $LN3@StartsWith
  00008	48 2b ca	 sub	 rcx, rdx
  0000b	0f 1f 44 00 00	 npad	 5
$LL2@StartsWith:

; 122  :             {
; 123  :                 if (*a != *b)

  00010	66 39 04 11	 cmp	 WORD PTR [rcx+rdx], ax
  00014	75 13		 jne	 SHORT $LN7@StartsWith

; 125  :                 ++a;
; 126  :                 ++b;

  00016	0f b7 42 02	 movzx	 eax, WORD PTR [rdx+2]
  0001a	48 83 c2 02	 add	 rdx, 2
  0001e	66 85 c0	 test	 ax, ax
  00021	75 ed		 jne	 SHORT $LL2@StartsWith
$LN3@StartsWith:

; 127  :             }
; 128  :             return (1);

  00023	b8 01 00 00 00	 mov	 eax, 1

; 129  :         }

  00028	c3		 ret	 0
$LN7@StartsWith:

; 124  :                     return (0);

  00029	33 c0		 xor	 eax, eax

; 129  :         }

  0002b	c3		 ret	 0
?StartsWith@StringReader@Internal@Core@Math@Palmtree@@CAHPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::StartsWith
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
str$ = 104
?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z PROC ; Palmtree::Math::Core::Internal::StringReader::SkipString, COMDAT

; 109  :         {

$LN17:
  00000	40 53		 push	 rbx
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H

; 121  :             while (*b != L'\0')

  00006	44 0f b7 02	 movzx	 r8d, WORD PTR [rdx]

; 109  :         {

  0000a	48 8b d9	 mov	 rbx, rcx

; 110  :             if (!StartsWith(_p, str))

  0000d	48 8b c2	 mov	 rax, rdx

; 121  :             while (*b != L'\0')

  00010	66 45 85 c0	 test	 r8w, r8w
  00014	74 20		 je	 SHORT $LN2@SkipString
  00016	4c 8b 49 08	 mov	 r9, QWORD PTR [rcx+8]
  0001a	4c 2b ca	 sub	 r9, rdx
  0001d	0f 1f 00	 npad	 3
$LL5@SkipString:

; 122  :             {
; 123  :                 if (*a != *b)

  00020	66 45 39 04 01	 cmp	 WORD PTR [r9+rax], r8w
  00025	75 28		 jne	 SHORT $LN14@SkipString

; 124  :                     return (0);
; 125  :                 ++a;
; 126  :                 ++b;

  00027	44 0f b7 40 02	 movzx	 r8d, WORD PTR [rax+2]
  0002c	48 83 c0 02	 add	 rax, 2
  00030	66 45 85 c0	 test	 r8w, r8w
  00034	75 ea		 jne	 SHORT $LL5@SkipString
$LN2@SkipString:

; 114  :             }
; 115  :             _p += lstrlenW(str);

  00036	48 8b ca	 mov	 rcx, rdx
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0003f	48 63 c8	 movsxd	 rcx, eax
  00042	48 03 c9	 add	 rcx, rcx
  00045	48 01 4b 08	 add	 QWORD PTR [rbx+8], rcx

; 116  :         }

  00049	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0004d	5b		 pop	 rbx
  0004e	c3		 ret	 0
$LN14@SkipString:

; 111  :             {
; 112  :                 // str で始まっていないにもかかわらず、strをスキップしようとした。
; 113  :                 throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_stringio.h;StringReader::SkipString;1");

  0004f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FE@KONPIGEM@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  0005d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00062	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00067	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0006e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00073	e8 00 00 00 00	 call	 _CxxThrowException
  00078	cc		 int	 3
$LN15@SkipString:
?SkipString@StringReader@Internal@Core@Math@Palmtree@@UEAAXPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::SkipString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z
_TEXT	SEGMENT
this$ = 8
str$ = 16
?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z PROC ; Palmtree::Math::Core::Internal::StringReader::StartsWith, COMDAT

; 121  :             while (*b != L'\0')

  00000	0f b7 02	 movzx	 eax, WORD PTR [rdx]
  00003	66 85 c0	 test	 ax, ax
  00006	74 1b		 je	 SHORT $LN5@StartsWith
  00008	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000c	48 2b ca	 sub	 rcx, rdx
  0000f	90		 npad	 1
$LL4@StartsWith:

; 122  :             {
; 123  :                 if (*a != *b)

  00010	66 39 04 11	 cmp	 WORD PTR [rcx+rdx], ax
  00014	75 13		 jne	 SHORT $LN9@StartsWith

; 124  :                     return (0);
; 125  :                 ++a;
; 126  :                 ++b;

  00016	0f b7 42 02	 movzx	 eax, WORD PTR [rdx+2]
  0001a	48 83 c2 02	 add	 rdx, 2
  0001e	66 85 c0	 test	 ax, ax
  00021	75 ed		 jne	 SHORT $LL4@StartsWith
$LN5@StartsWith:

; 85   :             return (StartsWith(_p, str));

  00023	b8 01 00 00 00	 mov	 eax, 1

; 86   :         }

  00028	c3		 ret	 0
$LN9@StartsWith:

; 85   :             return (StartsWith(_p, str));

  00029	33 c0		 xor	 eax, eax

; 86   :         }

  0002b	c3		 ret	 0
?StartsWith@StringReader@Internal@Core@Math@Palmtree@@UEAAHPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::StartsWith
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 96
?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ PROC ; Palmtree::Math::Core::Internal::StringReader::Progress, COMDAT

; 77   :         {

$LN7:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 78   :             if (*_p == L'\0')

  00004	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00008	66 83 38 00	 cmp	 WORD PTR [rax], 0
  0000c	74 0d		 je	 SHORT $LN6@Progress

; 80   :             ++_p;

  0000e	48 83 c0 02	 add	 rax, 2
  00012	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 81   :         }

  00016	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0001a	c3		 ret	 0
$LN6@Progress:

; 79   :                 throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_stringio.h;StringReader::Progress;1");

  0001b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FA@CNGEABBJ@?$AAp?$AAm?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAi?$AAo?$AA?4?$AAh?$AA?$DL@
  00022	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  00029	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002e	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0003a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0003f	e8 00 00 00 00	 call	 _CxxThrowException
  00044	cc		 int	 3
$LN4@Progress:
?Progress@StringReader@Internal@Core@Math@Palmtree@@UEAAXXZ ENDP ; Palmtree::Math::Core::Internal::StringReader::Progress
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ
_TEXT	SEGMENT
this$ = 8
?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ PROC ; Palmtree::Math::Core::Internal::StringReader::PeekChar, COMDAT

; 73   :             return (*_p);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	0f b7 00	 movzx	 eax, WORD PTR [rax]

; 74   :         }

  00007	c3		 ret	 0
?PeekChar@StringReader@Internal@Core@Math@Palmtree@@UEAA_WXZ ENDP ; Palmtree::Math::Core::Internal::StringReader::PeekChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z
_TEXT	SEGMENT
this$ = 48
default_char$ = 56
?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z PROC ; Palmtree::Math::Core::Internal::StringReader::ReadChar, COMDAT

; 63   :         {

$LN5:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 64   :             wchar_t c = PeekChar();

  0000f	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00012	0f b7 f2	 movzx	 esi, dx
  00015	48 8b d9	 mov	 rbx, rcx
  00018	ff 10		 call	 QWORD PTR [rax]
  0001a	0f b7 f8	 movzx	 edi, ax

; 65   :             if (c == L'\0')

  0001d	66 85 c0	 test	 ax, ax
  00020	75 13		 jne	 SHORT $LN2@ReadChar

; 66   :                 return (default_char);

  00022	0f b7 c6	 movzx	 eax, si

; 68   :             return (c);
; 69   :         }

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
$LN2@ReadChar:

; 67   :             Progress();

  00035	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00038	48 8b cb	 mov	 rcx, rbx
  0003b	ff 50 08	 call	 QWORD PTR [rax+8]

; 68   :             return (c);
; 69   :         }

  0003e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00043	0f b7 c7	 movzx	 eax, di
  00046	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_W_W@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::ReadChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ
_TEXT	SEGMENT
this$ = 48
?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ PROC ; Palmtree::Math::Core::Internal::StringReader::ReadChar, COMDAT

; 56   :         {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 57   :             wchar_t c = PeekChar();

  0000a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0000d	48 8b f9	 mov	 rdi, rcx
  00010	ff 10		 call	 QWORD PTR [rax]

; 58   :             Progress();

  00012	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00015	48 8b cf	 mov	 rcx, rdi
  00018	0f b7 d8	 movzx	 ebx, ax
  0001b	ff 52 08	 call	 QWORD PTR [rdx+8]

; 59   :             return (c);

  0001e	0f b7 c3	 movzx	 eax, bx

; 60   :         }

  00021	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00026	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
?ReadChar@StringReader@Internal@Core@Math@Palmtree@@QEAA_WXZ ENDP ; Palmtree::Math::Core::Internal::StringReader::ReadChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_stringio.h
;	COMDAT ??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 8
p$ = 16
??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::StringReader::StringReader, COMDAT

; 50   :         StringReader(const wchar_t* p)

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StringReader@Internal@Core@Math@Palmtree@@6B@

; 51   :         {
; 52   :             _p = p;

  00007	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 53   :         }

  0000e	48 8b c1	 mov	 rax, rcx
  00011	c3		 ret	 0
??0StringReader@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::StringReader::StringReader
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 295  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT

; 295  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 296  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 291  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 291  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 292  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 286  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	c7 41 18 00 ff
	ff ff		 mov	 DWORD PTR [rcx+24], -256 ; ffffffffffffff00H

; 57   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 58   :             _data = data;

  0003a	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8

; 286  :         {

  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax

; 287  :         }

  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 276  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GNotSupportedException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException, COMDAT

; 276  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 277  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1NotSupportedException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::~NotSupportedException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException, COMDAT

; 272  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 272  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 273  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException, COMDAT

; 267  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 48   :         {
; 49   :             _code = code;

  0002f	c7 41 18 f6 ff
	ff ff		 mov	 DWORD PTR [rcx+24], -10

; 50   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 51   :             _data = nullptr;

  0003a	48 c7 41 28 00
	00 00 00	 mov	 QWORD PTR [rcx+40], 0

; 267  :         {

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7NotSupportedException@Internal@Core@Math@Palmtree@@6B@
  00049	48 89 01	 mov	 QWORD PTR [rcx], rax

; 268  :         }

  0004c	48 8b c1	 mov	 rax, rcx
  0004f	48 83 c4 18	 add	 rsp, 24
  00053	c3		 ret	 0
??0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0NotSupportedException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::NotSupportedException::NotSupportedException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 238  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInsufficientBufferException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException, COMDAT

; 238  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 239  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InsufficientBufferException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::~InsufficientBufferException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException, COMDAT

; 234  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 234  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 235  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException, COMDAT

; 229  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 48   :         {
; 49   :             _code = code;

  0002f	c7 41 18 f8 ff
	ff ff		 mov	 DWORD PTR [rcx+24], -8

; 50   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 51   :             _data = nullptr;

  0003a	48 c7 41 28 00
	00 00 00	 mov	 QWORD PTR [rcx+40], 0

; 229  :         {

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InsufficientBufferException@Internal@Core@Math@Palmtree@@6B@
  00049	48 89 01	 mov	 QWORD PTR [rcx], rax

; 230  :         }

  0004c	48 8b c1	 mov	 rax, rcx
  0004f	48 83 c4 18	 add	 rsp, 24
  00053	c3		 ret	 0
??0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InsufficientBufferException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InsufficientBufferException::InsufficientBufferException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 219  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GFormatException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::FormatException::~FormatException, COMDAT

; 219  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 220  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::FormatException::~FormatException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1FormatException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::~FormatException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::FormatException::FormatException, COMDAT

; 215  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 215  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 216  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::FormatException::FormatException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::FormatException::FormatException, COMDAT

; 210  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 48   :         {
; 49   :             _code = code;

  0002f	c7 41 18 f9 ff
	ff ff		 mov	 DWORD PTR [rcx+24], -7

; 50   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 51   :             _data = nullptr;

  0003a	48 c7 41 28 00
	00 00 00	 mov	 QWORD PTR [rcx+40], 0

; 210  :         {

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7FormatException@Internal@Core@Math@Palmtree@@6B@
  00049	48 89 01	 mov	 QWORD PTR [rcx], rax

; 211  :         }

  0004c	48 8b c1	 mov	 rax, rcx
  0004f	48 83 c4 18	 add	 rsp, 24
  00053	c3		 ret	 0
??0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::FormatException::FormatException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0FormatException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::FormatException::FormatException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 124  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT

; 124  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 125  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 120  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 120  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 121  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 115  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	c7 41 18 fe ff
	ff ff		 mov	 DWORD PTR [rcx+24], -2

; 57   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 58   :             _data = data;

  0003a	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8

; 115  :         {

  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax

; 116  :         }

  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
$LN12:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 70   :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00031	48 83 c1 08	 add	 rcx, 8
  00035	e8 00 00 00 00	 call	 __std_exception_destroy
  0003a	90		 npad	 1
  0003b	f6 c3 01	 test	 bl, 1
  0003e	74 0e		 je	 SHORT $LN9@scalar
  00040	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00045	48 8b cf	 mov	 rcx, rdi
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1
$LN9@scalar:
  0004e	48 8b c7	 mov	 rax, rdi
  00051	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT

; 70   :         {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00026	48 83 c1 08	 add	 rcx, 8
  0002a	e8 00 00 00 00	 call	 __std_exception_destroy
  0002f	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 71   :         }

  00030	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00034	c3		 ret	 0
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 62   :         Exception(const Exception& p) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 67   :         }

  00045	48 8b c1	 mov	 rax, rcx
  00048	48 83 c4 18	 add	 rsp, 24
  0004c	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 57   :             _message = message;

  00032	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 58   :             _data = data;

  00036	4c 89 49 28	 mov	 QWORD PTR [rcx+40], r9

; 59   :         }

  0003a	48 8b c1	 mov	 rax, rcx
  0003d	48 83 c4 18	 add	 rsp, 24
  00041	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 48   :         {
; 49   :             _code = code;

  0002f	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 50   :             _message = message;

  00032	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 51   :             _data = nullptr;

  00036	48 c7 41 28 00
	00 00 00	 mov	 QWORD PTR [rcx+40], 0

; 52   :         }

  0003e	48 8b c1	 mov	 rax, rcx
  00041	48 83 c4 18	 add	 rsp, 24
  00045	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	8b da		 mov	 ebx, edx
  00016	48 8b f9	 mov	 rdi, rcx

; 85   :     {

  00019	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00020	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00023	48 83 c1 08	 add	 rcx, 8
  00027	e8 00 00 00 00	 call	 __std_exception_destroy
  0002c	90		 npad	 1
  0002d	f6 c3 01	 test	 bl, 1
  00030	74 0e		 je	 SHORT $LN6@scalar
  00032	ba 18 00 00 00	 mov	 edx, 24
  00037	48 8b cf	 mov	 rcx, rdi
  0003a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0003f	90		 npad	 1
$LN6@scalar:
  00040	48 8b c7	 mov	 rax, rdi
  00043	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0000b	48 85 d2	 test	 rdx, rdx
  0000e	48 0f 45 c2	 cmovne	 rax, rdx

; 92   :     }

  00012	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN5:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 __std_exception_destroy
  00020	90		 npad	 1

; 87   :     }

  00021	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00025	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0exception@std@@QEAA@XZ PROC				; std::exception::exception, COMDAT

; 50   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	33 c0		 xor	 eax, eax
  0000c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00010	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 51   :     }

  00014	48 8b c1	 mov	 rax, rcx
  00017	c3		 ret	 0
??0exception@std@@QEAA@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
