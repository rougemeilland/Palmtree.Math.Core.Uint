; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
PUBLIC	??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
PUBLIC	??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException
PUBLIC	??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W
PUBLIC	?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z ; Palmtree::Math::Core::Internal::Rem_X_1W
PUBLIC	?DivRem_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z ; Palmtree::Math::Core::Internal::DivRem_X_X
PUBLIC	?Initialize_DivRem@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_DivRem
PUBLIC	?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_I_X
PUBLIC	?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_L_X
PUBLIC	?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I
PUBLIC	?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L
PUBLIC	?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X
PUBLIC	_DIVREM_UNIT
PUBLIC	_DIVREM_SINGLE_UNIT
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DivisionByZeroException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ ; `string'
PUBLIC	_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_13JAOPNPKD@?$AAv@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DivisionByZeroException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@ ; `string'
PUBLIC	??_C@_13ICFKHAEN@?$AAu@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DivisionByZeroException::`RTTI Complete Object Locator'
PUBLIC	??_R3DivisionByZeroException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DivisionByZeroException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DivisionByZeroException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DivisionByZeroException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DivisionByZeroException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DivisionByZeroException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::DivisionByZeroException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::DuplicateNumber
EXTRN	?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z:PROC ; Palmtree::Math::Core::Internal::RightShift_Imp
EXTRN	?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z:PROC ; Palmtree::Math::Core::Internal::LeftShift_Imp
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
EXTRN	?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
EXTRN	?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A:BYTE ; Palmtree::Math::Core::Internal::number_zero
EXTRN	?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A:BYTE ; Palmtree::Math::Core::Internal::statistics_info
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
_BSS	SEGMENT
?fp_DivRem_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K01000@ZEA DQ 01H DUP (?) ; Palmtree::Math::Core::Internal::fp_DivRem_X_X
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+38
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+78
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD imagerel $LN8
	DD	imagerel $LN8+70
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel $LN8
	DD	imagerel $LN8+66
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN8
	DD	imagerel $LN8+77
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+53
	DD	imagerel $unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+92
	DD	imagerel $unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel $LN11
	DD	imagerel $LN11+84
	DD	imagerel $unwind$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD imagerel $LN726
	DD	imagerel $LN726+19
	DD	imagerel $unwind$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD imagerel $LN726+19
	DD	imagerel $LN726+67
	DD	imagerel $chain$1$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD imagerel $LN726+67
	DD	imagerel $LN726+3949
	DD	imagerel $chain$3$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD imagerel $LN726+3949
	DD	imagerel $LN726+3967
	DD	imagerel $chain$4$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD imagerel $LN726+3967
	DD	imagerel $LN726+4649
	DD	imagerel $chain$5$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD imagerel $LN726+4649
	DD	imagerel $LN726+4710
	DD	imagerel $chain$6$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD imagerel $LN747
	DD	imagerel $LN747+17
	DD	imagerel $unwind$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD imagerel $LN747+17
	DD	imagerel $LN747+25
	DD	imagerel $chain$0$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD imagerel $LN747+25
	DD	imagerel $LN747+57
	DD	imagerel $chain$1$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD imagerel $LN747+57
	DD	imagerel $LN747+3221
	DD	imagerel $chain$3$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD imagerel $LN747+3221
	DD	imagerel $LN747+3239
	DD	imagerel $chain$4$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD imagerel $LN747+3239
	DD	imagerel $LN747+3909
	DD	imagerel $chain$5$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD imagerel $LN747+3909
	DD	imagerel $LN747+3956
	DD	imagerel $chain$6$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DivRem_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z DD imagerel $LN44
	DD	imagerel $LN44+312
	DD	imagerel $unwind$?DivRem_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z DD imagerel $LN51
	DD	imagerel $LN51+352
	DD	imagerel $unwind$?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z DD imagerel $LN112
	DD	imagerel $LN112+356
	DD	imagerel $unwind$?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z DD imagerel $LN35
	DD	imagerel $LN35+320
	DD	imagerel $unwind$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z DD imagerel $LN74
	DD	imagerel $LN74+329
	DD	imagerel $unwind$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z DD imagerel $LN16
	DD	imagerel $LN16+358
	DD	imagerel $unwind$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_COPY_MEMORY_UNIT DD imagerel _COPY_MEMORY_UNIT
	DD	imagerel _COPY_MEMORY_UNIT+33
	DD	imagerel $unwind$_COPY_MEMORY_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_DIVREM_SINGLE_UNIT DD imagerel $LN26
	DD	imagerel $LN26+146
	DD	imagerel $unwind$_DIVREM_SINGLE_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z DD imagerel ?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z
	DD	imagerel ?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z+236
	DD	imagerel $unwind$?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z DD imagerel ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z
	DD	imagerel ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z+779
	DD	imagerel $unwind$?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z DD imagerel ?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z
	DD	imagerel ?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z+159
	DD	imagerel $unwind$?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z DD imagerel ?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z
	DD	imagerel ?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z+115
	DD	imagerel $unwind$?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z DD imagerel ?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z
	DD	imagerel ?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z+121
	DD	imagerel $unwind$?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalculateQ_@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z DD imagerel ?CalculateQ_@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z
	DD	imagerel ?CalculateQ_@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z+240
	DD	imagerel $unwind$?CalculateQ_@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalculateQ_X@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z DD imagerel ?CalculateQ_X@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z
	DD	imagerel ?CalculateQ_X@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z+166
	DD	imagerel $unwind$?CalculateQ_X@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z DD imagerel ?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z
	DD	imagerel ?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z+3644
	DD	imagerel $unwind$?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z DD imagerel ?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z
	DD	imagerel ?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z+3568
	DD	imagerel $unwind$?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z DD imagerel ?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z
	DD	imagerel ?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z+937
	DD	imagerel $unwind$?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z DD imagerel ?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z
	DD	imagerel ?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z+458
	DD	imagerel $unwind$?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z DD imagerel ?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z
	DD	imagerel ?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z+687
	DD	imagerel $unwind$?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z DD imagerel ?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z
	DD	imagerel ?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z+559
	DD	imagerel $unwind$?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z
	DD	imagerel ?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z+386
	DD	imagerel $unwind$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z
	DD	imagerel ?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z+392
	DD	imagerel $unwind$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+931
	DD	imagerel $unwind$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DivisionByZeroException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DivisionByZeroException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::DivisionByZeroException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3DivisionByZeroException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2DivisionByZeroException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2DivisionByZeroException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@DivisionByZeroException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::DivisionByZeroException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3DivisionByZeroException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3DivisionByZeroException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::DivisionByZeroException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2DivisionByZeroException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::DivisionByZeroException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3DivisionByZeroException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 01H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_13ICFKHAEN@?$AAu@
CONST	SEGMENT
??_C@_13ICFKHAEN@?$AAu@ DB 'u', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@
CONST	SEGMENT
??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@ DB '0'
	DB	00H, 'k0', 088H, '0', 08bH, '0d', 096H, 097H, '{L0L', 088H, 08fH
	DB	'0', 08cH, '0', 088H, '0F0h0W0~0W0_0', 02H, '0', 00H, 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::DivisionByZeroException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVDivisionByZeroException@Internal@Core@Math@Palmtree@'
	DB	'@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@@8??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13JAOPNPKD@?$AAv@
CONST	SEGMENT
??_C@_13JAOPNPKD@?$AAv@ DB 'v', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
CONST	SEGMENT
??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ DB 085H
	DB	'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv', 01fH, 'u'
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'd', 00H, 'i', 00H, 'v', 00H
	DB	'r', 00H, 'e', 00H, 'm', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'D', 00H, 'i', 00H, 'v', 00H, 'R', 00H, 'e', 00H
	DB	'm', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H, 'I', 00H, 'V'
	DB	00H, 'R', 00H, 'E', 00H, 'M', 00H, '_', 00H, 'U', 00H, 'N', 00H
	DB	'I', 00H, 'T', 00H, '_', 00H, 'n', 00H, 'W', 00H, ';', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DQ	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::DivisionByZeroException::`vftable'
	DQ	FLAT:??_EDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DQ	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DQ	FLAT:??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+175
	DD	00H
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+351
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+368
	DD	01H
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+465
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+479
	DD	02H
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+714
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+731
	DD	03H
	DD	imagerel ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z+889
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z
	DD	040H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z DD 0c2711H
	DD	015d427H
	DD	0147423H
	DD	013641fH
	DD	012341bH
	DD	0f008d20fH
	DD	05004e006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z+177
	DD	03H
	DD	imagerel ?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z+300
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z DD 081b11H
	DD	014541bH
	DD	0123417H
	DD	0e007d20bH
	DD	060047005H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z+172
	DD	00H
	DD	imagerel ?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z+295
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z DD 081b11H
	DD	013541bH
	DD	0123417H
	DD	0e007d20bH
	DD	060047005H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z DD 0a1401H
	DD	0103414H
	DD	0f0107214H
	DD	0d00ce00eH
	DD	07008c00aH
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z DD 081201H
	DD	0f00bf212H
	DD	0d007e009H
	DD	060047005H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z DD 0a1c01H
	DD	07b011cH
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z DD 0a1c01H
	DD	07b011cH
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalculateQ_X@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z DD 0a1a01H
	DD	0b741aH
	DD	0a641aH
	DD	09541aH
	DD	08341aH
	DD	0e016521aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalculateQ_@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z DD 070d01H
	DD	0f009620dH
	DD	07005e007H
	DD	050036004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z DD 0a1901H
	DD	0153419H
	DD	0f015b219H
	DD	0d011e013H
	DD	0700dc00fH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z DD 081401H
	DD	047414H
	DD	03640fH
	DD	02540aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_DIVREM_SINGLE_UNIT DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_COPY_MEMORY_UNIT DD 040a01H
	DD	02740aH
	DD	016405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z+88
	DD	00H
	DD	imagerel ?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z+205
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z DD 061b11H
	DD	014641bH
	DD	0133417H
	DD	07004f20bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z+61
	DD	00H
	DD	imagerel ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z+126
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z+141
	DD	00H
	DD	imagerel ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z+218
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z+252
	DD	00H
	DD	imagerel ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z+287
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z DD 019930522H
	DD	05H
	DD	imagerel $stateUnwindMap$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z DD 061b11H
	DD	014641bH
	DD	0133417H
	DD	07004f20bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z DD imagerel ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z+60
	DD	00H
	DD	imagerel ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z+123
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z+137
	DD	00H
	DD	imagerel ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z+210
	DD	0ffffffffH
	DD	imagerel ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z+243
	DD	00H
	DD	imagerel ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z+278
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z@4HA
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z DD 061b11H
	DD	014641bH
	DD	0133417H
	DD	07004f20bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z DD 050b01H
	DD	012010bH
	DD	060037004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z DD 061201H
	DD	0146412H
	DD	0123412H
	DD	0700bf212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DivRem_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z DD 040a01H
	DD	0c640aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD 021H
	DD	imagerel $LN747
	DD	imagerel $LN747+17
	DD	imagerel $unwind$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD 021H
	DD	imagerel $LN747+17
	DD	imagerel $LN747+25
	DD	imagerel $chain$0$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD 021H
	DD	imagerel $LN747+25
	DD	imagerel $LN747+57
	DD	imagerel $chain$1$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD 040821H
	DD	021e408H
	DD	0233404H
	DD	imagerel $LN747+25
	DD	imagerel $LN747+57
	DD	imagerel $chain$1$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD 020421H
	DD	020f404H
	DD	imagerel $LN747+17
	DD	imagerel $LN747+25
	DD	imagerel $chain$0$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD 020421H
	DD	022c404H
	DD	imagerel $LN747
	DD	imagerel $LN747+17
	DD	imagerel $unwind$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z DD 051101H
	DD	0240111H
	DD	060057006H
	DD	05004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD 021H
	DD	imagerel $LN726
	DD	imagerel $LN726+19
	DD	imagerel $unwind$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD 020021H
	DD	01fd400H
	DD	imagerel $LN726
	DD	imagerel $LN726+19
	DD	imagerel $unwind$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD 021H
	DD	imagerel $LN726+19
	DD	imagerel $LN726+67
	DD	imagerel $chain$1$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD 040821H
	DD	01ef408H
	DD	0283404H
	DD	imagerel $LN726+19
	DD	imagerel $LN726+67
	DD	imagerel $chain$1$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD 040f21H
	DD	01fd40fH
	DD	020c404H
	DD	imagerel $LN726
	DD	imagerel $LN726+19
	DD	imagerel $unwind$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z DD 061301H
	DD	0210113H
	DD	07006e008H
	DD	050046005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+37
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+62
	DD	01H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+72
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+37
	DD	00H
	DD	imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+66
	DD	01H
	DD	imagerel ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z+76
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+37
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+62
	DD	01H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+72
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+58
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z+62
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gexception@std@@UEAAPEAXI@Z DD imagerel ??_Gexception@std@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_Gexception@std@@UEAAPEAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_Gexception@std@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_Gexception@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z
_TEXT	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp, COMDAT

; 2039 :     {

  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	41 56		 push	 r14
  00006	41 57		 push	 r15
  00008	48 8b ec	 mov	 rbp, rsp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 c7 45 d0 fe
	ff ff ff	 mov	 QWORD PTR $T1[rbp-112], -2
  00017	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  0001b	48 89 70 10	 mov	 QWORD PTR [rax+16], rsi
  0001f	48 89 78 18	 mov	 QWORD PTR [rax+24], rdi
  00023	4c 89 68 20	 mov	 QWORD PTR [rax+32], r13
  00027	49 8b f0	 mov	 rsi, r8
  0002a	4c 8b fa	 mov	 r15, rdx
  0002d	4c 8b f1	 mov	 r14, rcx

; 2040 :         if (u->IS_ZERO)

  00030	f6 41 08 01	 test	 BYTE PTR [rcx+8], 1
  00034	74 18		 je	 SHORT $LN2@PMC_DivRem

; 2041 :         {
; 2042 :             // u が 0 である場合
; 2043 : 
; 2044 :             // q = 0, r = 0 を返す
; 2045 :             if (q != nullptr)

  00036	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0003d	4d 85 c0	 test	 r8, r8
  00040	0f 84 3c 03 00
	00		 je	 $LN4@PMC_DivRem

; 2046 :                 *q = &number_zero;

  00046	49 89 38	 mov	 QWORD PTR [r8], rdi

; 2047 :             return (&number_zero);

  00049	e9 34 03 00 00	 jmp	 $LN4@PMC_DivRem
$LN2@PMC_DivRem:

; 2048 :         }
; 2049 :         else
; 2050 :         {
; 2051 :             // u が 0 ではない場合
; 2052 : 
; 2053 :             if (v->IS_ONE)

  0004e	f6 42 08 02	 test	 BYTE PTR [rdx+8], 2
  00052	74 19		 je	 SHORT $LN5@PMC_DivRem

; 2054 :             {
; 2055 :                 // v が 1 である場合
; 2056 : 
; 2057 :                 // q = u, r = 0 を返す
; 2058 :                 if (q != nullptr)

  00054	48 85 f6	 test	 rsi, rsi
  00057	74 08		 je	 SHORT $LN7@PMC_DivRem

; 2059 :                     *q = DuplicateNumber(u);

  00059	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0005e	48 89 06	 mov	 QWORD PTR [rsi], rax
$LN7@PMC_DivRem:

; 2060 :                 return (&number_zero);

  00061	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00068	e9 18 03 00 00	 jmp	 $LN22@PMC_DivRem
$LN5@PMC_DivRem:

; 2061 :             }
; 2062 :             else
; 2063 :             {
; 2064 :                 // u > 0 かつ v > 1 である場合
; 2065 : 
; 2066 :                 // x と y の商・剰余を計算する
; 2067 :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  0006d	48 8b 59 20	 mov	 rbx, QWORD PTR [rcx+32]

; 2068 :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  00071	48 8b 7a 20	 mov	 rdi, QWORD PTR [rdx+32]

; 2069 :                 if (u_bit_count < v_bit_count)

  00075	48 3b df	 cmp	 rbx, rdi
  00078	73 19		 jae	 SHORT $LN8@PMC_DivRem

; 2070 :                 {
; 2071 :                     // 明らかに u < v である場合
; 2072 : 
; 2073 :                     // q = 0, r = u を返す。
; 2074 :                     if (q != nullptr)

  0007a	48 85 f6	 test	 rsi, rsi
  0007d	74 0a		 je	 SHORT $LN10@PMC_DivRem

; 2075 :                         *q = &number_zero;

  0007f	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00086	49 89 38	 mov	 QWORD PTR [r8], rdi
$LN10@PMC_DivRem:

; 2076 :                     return (DuplicateNumber(u));

  00089	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0008e	e9 f2 02 00 00	 jmp	 $LN22@PMC_DivRem
$LN8@PMC_DivRem:

; 2077 :                 }
; 2078 :                 else if (v_bit_count <= sizeof(__UNIT_TYPE) * 8)

  00093	48 8d 4d d8	 lea	 rcx, QWORD PTR root$5[rbp-112]
  00097	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0009c	48 83 ff 40	 cmp	 rdi, 64			; 00000040H
  000a0	0f 87 30 01 00
	00		 ja	 $LN11@PMC_DivRem

; 2079 :                 {
; 2080 :                     // 除数が 1 ワードで表現できる場合
; 2081 : 
; 2082 :                     if (q != nullptr)

  000a6	48 85 f6	 test	 rsi, rsi
  000a9	0f 84 c1 00 00
	00		 je	 $LN13@PMC_DivRem

; 2083 :                     {
; 2084 :                         ResourceHolderUINT root;
; 2085 :                         __UNIT_TYPE q_bit_count = u_bit_count - v_bit_count + 1 + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには u_bit_count - v_bit_count + 1 だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。

  000af	48 2b df	 sub	 rbx, rdi
  000b2	48 8d 53 41	 lea	 rdx, QWORD PTR [rbx+65]

; 2086 :                         *q = root.AllocateNumber(q_bit_count);

  000b6	48 8d 4d d8	 lea	 rcx, QWORD PTR root$5[rbp-112]
  000ba	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000bf	48 89 06	 mov	 QWORD PTR [rsi], rax

; 2087 :                         __UNIT_TYPE r_bit_count = sizeof(__UNIT_TYPE) * 8;
; 2088 :                         NUMBER_HEADER* r = root.AllocateNumber(r_bit_count);

  000c2	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  000c7	48 8d 4d d8	 lea	 rcx, QWORD PTR root$5[rbp-112]
  000cb	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000d0	48 8b d8	 mov	 rbx, rax

; 2089 :                         DivRem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v->BLOCK[0], (*q)->BLOCK, r->BLOCK);

  000d3	4c 8b 0e	 mov	 r9, QWORD PTR [rsi]
  000d6	4d 8b 47 40	 mov	 r8, QWORD PTR [r15+64]
  000da	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  000de	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000e3	4d 8b 49 40	 mov	 r9, QWORD PTR [r9+64]
  000e7	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  000ea	49 8b 56 18	 mov	 rdx, QWORD PTR [r14+24]
  000ee	49 8b 4e 40	 mov	 rcx, QWORD PTR [r14+64]
  000f2	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 2090 :                         root.CheckNumber(*q);

  000f7	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  000fa	48 8d 4d d8	 lea	 rcx, QWORD PTR root$5[rbp-112]
  000fe	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 2091 :                         root.CheckNumber(r);

  00103	48 8b d3	 mov	 rdx, rbx
  00106	48 8d 4d d8	 lea	 rcx, QWORD PTR root$5[rbp-112]
  0010a	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 2092 :                         CommitNumber(*q);

  0010f	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00112	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 2093 :                         CommitNumber(r);

  00117	48 8b cb	 mov	 rcx, rbx
  0011a	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 2094 :                         if ((*q)->IS_ZERO)

  0011f	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  00122	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00129	48 8d 4d d8	 lea	 rcx, QWORD PTR root$5[rbp-112]
  0012d	f6 42 08 01	 test	 BYTE PTR [rdx+8], 1
  00131	74 0a		 je	 SHORT $LN15@PMC_DivRem

; 2095 :                         {
; 2096 :                             root.DeallocateNumber(*q);

  00133	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 2097 :                             *q = &number_zero;

  00138	48 89 3e	 mov	 QWORD PTR [rsi], rdi

; 2098 :                         }
; 2099 :                         else

  0013b	eb 05		 jmp	 SHORT $LN16@PMC_DivRem
$LN15@PMC_DivRem:

; 2100 :                             root.UnlinkNumber(*q);

  0013d	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN16@PMC_DivRem:

; 2101 :                         if (r->IS_ZERO)

  00142	48 8b d3	 mov	 rdx, rbx
  00145	48 8d 4d d8	 lea	 rcx, QWORD PTR root$5[rbp-112]
  00149	f6 43 08 01	 test	 BYTE PTR [rbx+8], 1
  0014d	74 0a		 je	 SHORT $LN17@PMC_DivRem

; 2102 :                         {
; 2103 :                             root.DeallocateNumber(r);

  0014f	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 2104 :                             r = &number_zero;

  00154	48 8b df	 mov	 rbx, rdi

; 2105 :                         }
; 2106 :                         else

  00157	eb 06		 jmp	 SHORT $LN18@PMC_DivRem
$LN17@PMC_DivRem:

; 2107 :                             root.UnlinkNumber(r);

  00159	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0015e	90		 npad	 1
$LN18@PMC_DivRem:

; 2108 :                         return (r);

  0015f	48 8d 4d d8	 lea	 rcx, QWORD PTR root$5[rbp-112]
  00163	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00168	48 8b c3	 mov	 rax, rbx
  0016b	e9 15 02 00 00	 jmp	 $LN22@PMC_DivRem
$LN13@PMC_DivRem:

; 2109 :                     }
; 2110 :                     else
; 2111 :                     {
; 2112 :                         ResourceHolderUINT root;
; 2113 :                         __UNIT_TYPE r_bit_count = sizeof(__UNIT_TYPE) * 8;
; 2114 :                         NUMBER_HEADER* r = root.AllocateNumber(r_bit_count);

  00170	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00175	48 8d 4d d8	 lea	 rcx, QWORD PTR root$4[rbp-112]
  00179	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  0017e	48 8b f8	 mov	 rdi, rax

; 2115 :                         r->BLOCK[0] = Rem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v->BLOCK[0]);

  00181	4d 8b 47 40	 mov	 r8, QWORD PTR [r15+64]
  00185	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00188	49 8b 56 18	 mov	 rdx, QWORD PTR [r14+24]
  0018c	49 8b 4e 40	 mov	 rcx, QWORD PTR [r14+64]
  00190	e8 00 00 00 00	 call	 ?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z ; Palmtree::Math::Core::Internal::Rem_X_1W
  00195	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00199	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2116 :                         root.CheckNumber(r);

  0019c	48 8b d7	 mov	 rdx, rdi
  0019f	48 8d 4d d8	 lea	 rcx, QWORD PTR root$4[rbp-112]
  001a3	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 2117 :                         CommitNumber(r);

  001a8	48 8b cf	 mov	 rcx, rdi
  001ab	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 2118 :                         if (r->IS_ZERO)

  001b0	48 8b d7	 mov	 rdx, rdi
  001b3	48 8d 4d d8	 lea	 rcx, QWORD PTR root$4[rbp-112]
  001b7	f6 47 08 01	 test	 BYTE PTR [rdi+8], 1
  001bb	74 0e		 je	 SHORT $LN19@PMC_DivRem

; 2119 :                         {
; 2120 :                             root.DeallocateNumber(r);

  001bd	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 2121 :                             r = &number_zero;

  001c2	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 2122 :                         }
; 2123 :                         else

  001c9	eb 06		 jmp	 SHORT $LN20@PMC_DivRem
$LN19@PMC_DivRem:

; 2124 :                             root.UnlinkNumber(r);

  001cb	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  001d0	90		 npad	 1
$LN20@PMC_DivRem:

; 2125 :                         return (r);

  001d1	e9 a3 01 00 00	 jmp	 $LN34@PMC_DivRem
$LN11@PMC_DivRem:

; 2126 :                     }
; 2127 :                 }
; 2128 :                 else
; 2129 :                 {
; 2130 :                     // 除数を表現するのに 2 ワード以上必要な場合
; 2131 :                     if (q != nullptr)

  001d6	48 85 f6	 test	 rsi, rsi
  001d9	0f 84 fc 00 00
	00		 je	 $LN21@PMC_DivRem

; 2132 :                     {
; 2133 :                         ResourceHolderUINT root;
; 2134 :                         __UNIT_TYPE q_bit_count = u_bit_count - v_bit_count + 1 + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには u_bit_count - v_bit_count + 1 だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。

  001df	48 8b d3	 mov	 rdx, rbx
  001e2	48 2b d7	 sub	 rdx, rdi
  001e5	48 83 c2 41	 add	 rdx, 65			; 00000041H

; 2135 :                         __UNIT_TYPE r_bit_count = u_bit_count + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには v_bit_count だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。
; 2136 :                         *q = root.AllocateNumber(q_bit_count);

  001e9	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  001ed	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  001f2	48 89 06	 mov	 QWORD PTR [rsi], rax

; 2137 :                         NUMBER_HEADER* r = root.AllocateNumber(r_bit_count);

  001f5	48 8d 53 40	 lea	 rdx, QWORD PTR [rbx+64]
  001f9	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  001fd	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00202	4c 8b e8	 mov	 r13, rax

; 2138 :                          __UNIT_TYPE* work_v_buf = root.AllocateBlock(v->UNIT_WORD_COUNT * __UNIT_TYPE_BIT_COUNT);

  00205	49 8b 57 18	 mov	 rdx, QWORD PTR [r15+24]
  00209	48 c1 e2 06	 shl	 rdx, 6
  0020d	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  00211	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  00216	48 8b d8	 mov	 rbx, rax

; 2139 :                         (*fp_DivRem_X_X)(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, work_v_buf, (*q)->BLOCK, r->BLOCK);

  00219	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  0021c	49 8b 4d 40	 mov	 rcx, QWORD PTR [r13+64]
  00220	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00225	48 8b 4a 40	 mov	 rcx, QWORD PTR [rdx+64]
  00229	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0022e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00233	4d 8b 4f 18	 mov	 r9, QWORD PTR [r15+24]
  00237	4d 8b 47 40	 mov	 r8, QWORD PTR [r15+64]
  0023b	49 8b 56 18	 mov	 rdx, QWORD PTR [r14+24]
  0023f	49 8b 4e 40	 mov	 rcx, QWORD PTR [r14+64]
  00243	ff 15 00 00 00
	00		 call	 QWORD PTR ?fp_DivRem_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K01000@ZEA

; 2140 :                         root.CheckBlock(work_v_buf);

  00249	48 8b d3	 mov	 rdx, rbx
  0024c	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  00250	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 2141 :                         root.CheckNumber(*q);

  00255	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  00258	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  0025c	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 2142 :                         root.CheckNumber(r);

  00261	49 8b d5	 mov	 rdx, r13
  00264	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  00268	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 2143 :                         root.DeallocateBlock(work_v_buf);

  0026d	48 8b d3	 mov	 rdx, rbx
  00270	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  00274	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 2144 :                         CommitNumber(*q);

  00279	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0027c	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 2145 :                         CommitNumber(r);

  00281	49 8b cd	 mov	 rcx, r13
  00284	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 2146 :                         if ((*q)->IS_ZERO)

  00289	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  0028c	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00293	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  00297	f6 42 08 01	 test	 BYTE PTR [rdx+8], 1
  0029b	74 0a		 je	 SHORT $LN23@PMC_DivRem

; 2147 :                         {
; 2148 :                             root.DeallocateNumber(*q);

  0029d	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 2149 :                             *q = &number_zero;

  002a2	48 89 3e	 mov	 QWORD PTR [rsi], rdi

; 2150 :                         }
; 2151 :                         else

  002a5	eb 05		 jmp	 SHORT $LN24@PMC_DivRem
$LN23@PMC_DivRem:

; 2152 :                             root.UnlinkNumber(*q);

  002a7	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN24@PMC_DivRem:

; 2153 :                         if (r->IS_ZERO)

  002ac	49 8b d5	 mov	 rdx, r13
  002af	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  002b3	41 f6 45 08 01	 test	 BYTE PTR [r13+8], 1
  002b8	74 0a		 je	 SHORT $LN25@PMC_DivRem

; 2154 :                         {
; 2155 :                             root.DeallocateNumber(r);

  002ba	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 2156 :                             r = &number_zero;

  002bf	4c 8b ef	 mov	 r13, rdi

; 2157 :                         }
; 2158 :                         else

  002c2	eb 06		 jmp	 SHORT $LN26@PMC_DivRem
$LN25@PMC_DivRem:

; 2159 :                             root.UnlinkNumber(r);

  002c4	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  002c9	90		 npad	 1
$LN26@PMC_DivRem:

; 2160 :                         return (r);

  002ca	48 8d 4d d8	 lea	 rcx, QWORD PTR root$3[rbp-112]
  002ce	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  002d3	49 8b c5	 mov	 rax, r13
  002d6	e9 aa 00 00 00	 jmp	 $LN22@PMC_DivRem
$LN21@PMC_DivRem:

; 2161 :                     }
; 2162 :                     else
; 2163 :                     {
; 2164 :                         ResourceHolderUINT root;
; 2165 :                         __UNIT_TYPE r_bit_count = u_bit_count + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには v_bit_count だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。

  002db	48 8d 53 40	 lea	 rdx, QWORD PTR [rbx+64]

; 2166 :                         NUMBER_HEADER* r = root.AllocateNumber(r_bit_count);

  002df	48 8d 4d d8	 lea	 rcx, QWORD PTR root$2[rbp-112]
  002e3	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  002e8	48 8b f8	 mov	 rdi, rax

; 2167 :                         __UNIT_TYPE* work_v_buf = root.AllocateBlock(v->UNIT_WORD_COUNT * __UNIT_TYPE_BIT_COUNT);

  002eb	49 8b 57 18	 mov	 rdx, QWORD PTR [r15+24]
  002ef	48 c1 e2 06	 shl	 rdx, 6
  002f3	48 8d 4d d8	 lea	 rcx, QWORD PTR root$2[rbp-112]
  002f7	e8 00 00 00 00	 call	 ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEA_K_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
  002fc	48 8b d8	 mov	 rbx, rax

; 2168 :                         (*fp_DivRem_X_X)(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, work_v_buf, nullptr, r->BLOCK);

  002ff	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00303	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00308	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00311	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00316	4d 8b 4f 18	 mov	 r9, QWORD PTR [r15+24]
  0031a	4d 8b 47 40	 mov	 r8, QWORD PTR [r15+64]
  0031e	49 8b 56 18	 mov	 rdx, QWORD PTR [r14+24]
  00322	49 8b 4e 40	 mov	 rcx, QWORD PTR [r14+64]
  00326	ff 15 00 00 00
	00		 call	 QWORD PTR ?fp_DivRem_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K01000@ZEA

; 2169 :                         root.CheckBlock(work_v_buf);

  0032c	48 8b d3	 mov	 rdx, rbx
  0032f	48 8d 4d d8	 lea	 rcx, QWORD PTR root$2[rbp-112]
  00333	e8 00 00 00 00	 call	 ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock

; 2170 :                         root.CheckNumber(r);

  00338	48 8b d7	 mov	 rdx, rdi
  0033b	48 8d 4d d8	 lea	 rcx, QWORD PTR root$2[rbp-112]
  0033f	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 2171 :                         root.DeallocateBlock(work_v_buf);

  00344	48 8b d3	 mov	 rdx, rbx
  00347	48 8d 4d d8	 lea	 rcx, QWORD PTR root$2[rbp-112]
  0034b	e8 00 00 00 00	 call	 ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEA_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock

; 2172 :                         CommitNumber(r);

  00350	48 8b cf	 mov	 rcx, rdi
  00353	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 2173 :                         if (r->IS_ZERO)

  00358	48 8b d7	 mov	 rdx, rdi
  0035b	48 8d 4d d8	 lea	 rcx, QWORD PTR root$2[rbp-112]
  0035f	f6 47 08 01	 test	 BYTE PTR [rdi+8], 1
  00363	74 0e		 je	 SHORT $LN27@PMC_DivRem

; 2174 :                         {
; 2175 :                             root.DeallocateNumber(r);

  00365	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 2176 :                             r = &number_zero;

  0036a	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 2177 :                         }
; 2178 :                         else

  00371	eb 06		 jmp	 SHORT $LN28@PMC_DivRem
$LN27@PMC_DivRem:

; 2179 :                             root.UnlinkNumber(r);

  00373	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  00378	90		 npad	 1
$LN28@PMC_DivRem:
$LN34@PMC_DivRem:

; 2180 :                         return (r);
; 2181 :                     }
; 2182 :                 }
; 2183 :             }
; 2184 :         }
; 2185 :     }

  00379	48 8d 4d d8	 lea	 rcx, QWORD PTR root$2[rbp-112]
  0037d	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN4@PMC_DivRem:
  00382	48 8b c7	 mov	 rax, rdi
$LN22@PMC_DivRem:
  00385	4c 8d 5c 24 70	 lea	 r11, QWORD PTR [rsp+112]
  0038a	49 8b 5b 20	 mov	 rbx, QWORD PTR [r11+32]
  0038e	49 8b 73 28	 mov	 rsi, QWORD PTR [r11+40]
  00392	49 8b 7b 30	 mov	 rdi, QWORD PTR [r11+48]
  00396	4d 8b 6b 38	 mov	 r13, QWORD PTR [r11+56]
  0039a	49 8b e3	 mov	 rsp, r11
  0039d	41 5f		 pop	 r15
  0039f	41 5e		 pop	 r14
  003a1	5d		 pop	 rbp
  003a2	c3		 ret	 0
?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?dtor$0@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$0
  00000	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR root$5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?dtor$1@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$1
  00000	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR root$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$1@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?dtor$2@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$2
  00000	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR root$3[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$2@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?dtor$3@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$3
  00000	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$3@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?dtor$0@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$0
  00000	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR root$5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?dtor$1@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$1
  00000	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR root$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$1@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?dtor$2@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$2
  00000	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR root$3[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$2@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
root$2 = 72
root$3 = 72
root$4 = 72
root$5 = 72
u$ = 144
v$ = 152
q$ = 160
?dtor$3@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$3
  00000	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$3@?0??PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z
_TEXT	SEGMENT
root$1 = 56
$T2 = 56
u$ = 144
r_buf$3 = 152
v$ = 152
q$ = 160
?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L_Imp, COMDAT

; 1818 :     {

  00000	48 8b c4	 mov	 rax, rsp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 56		 push	 r14
  00007	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000b	48 c7 40 a8 fe
	ff ff ff	 mov	 QWORD PTR [rax-88], -2
  00013	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00017	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
  0001b	49 8b d8	 mov	 rbx, r8
  0001e	48 8b f2	 mov	 rsi, rdx
  00021	48 8b f9	 mov	 rdi, rcx

; 1819 :         if (v == 0)

  00024	48 85 d2	 test	 rdx, rdx
  00027	0f 84 38 01 00
	00		 je	 $LN62@PMC_DivRem

; 1825 :         }
; 1826 :         if (u->IS_ZERO)

  0002d	f6 41 08 01	 test	 BYTE PTR [rcx+8], 1
  00031	74 16		 je	 SHORT $LN3@PMC_DivRem

; 1827 :         {
; 1828 :             // x が 0 である場合
; 1829 : 
; 1830 :             // q = 0, r = 0 を返す
; 1831 :             if (q != nullptr)

  00033	48 85 db	 test	 rbx, rbx
  00036	74 0a		 je	 SHORT $LN5@PMC_DivRem

; 1832 :                 *q = &number_zero;

  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0003f	49 89 00	 mov	 QWORD PTR [r8], rax
$LN5@PMC_DivRem:

; 1833 :             return (0);

  00042	33 c0		 xor	 eax, eax
  00044	e9 07 01 00 00	 jmp	 $LN33@PMC_DivRem
$LN3@PMC_DivRem:

; 1834 :         }
; 1835 :         else
; 1836 :         {
; 1837 :             // u が 0 ではない場合
; 1838 : 
; 1839 :             if (v == 1)

  00049	48 83 fe 01	 cmp	 rsi, 1
  0004d	75 14		 jne	 SHORT $LN6@PMC_DivRem

; 1840 :             {
; 1841 :                 // v が 1 である場合
; 1842 : 
; 1843 :                 // q = u, r = 0 を返す
; 1844 :                 if (q != nullptr)

  0004f	48 85 db	 test	 rbx, rbx
  00052	74 08		 je	 SHORT $LN8@PMC_DivRem

; 1845 :                     *q = DuplicateNumber(u);

  00054	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00059	48 89 03	 mov	 QWORD PTR [rbx], rax
$LN8@PMC_DivRem:

; 1846 :                 return (0);

  0005c	33 c0		 xor	 eax, eax
  0005e	e9 ed 00 00 00	 jmp	 $LN33@PMC_DivRem
$LN6@PMC_DivRem:

; 1847 :             }
; 1848 :             else
; 1849 :             {
; 1850 :                 // u > 0 かつ v > 1 である場合
; 1851 : 
; 1852 :                 // u と v の商・剰余を計算する
; 1853 :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 1854 :                 if (sizeof(__UNIT_TYPE) < sizeof(v))
; 1855 :                 {
; 1856 :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 1857 :                     _UINT32_T v_hi;
; 1858 :                     _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);
; 1859 :                     if (v_hi == 0)
; 1860 :                     {
; 1861 :                         // v の値が 32bit で表現可能な場合
; 1862 :                         __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);
; 1863 :                         if (u_bit_count < v_bit_count)
; 1864 :                         {
; 1865 :                             // 明らかに u < v である場合
; 1866 : 
; 1867 :                             // q = 0, r = u を返す。
; 1868 :                             if (q != nullptr)
; 1869 :                                 *q = &number_zero;
; 1870 :                             return (u->BLOCK[0]);
; 1871 :                         }
; 1872 :                         else
; 1873 :                         {
; 1874 :                             if (q != nullptr)
; 1875 :                             {
; 1876 :                                 ResourceHolderUINT root;
; 1877 :                                 __UNIT_TYPE q_bit_count = u_bit_count - v_bit_count + 1 + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには u_bit_count - v_bit_count + 1 だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。
; 1878 :                                 *q = root.AllocateNumber(q_bit_count);
; 1879 :                                 __UNIT_TYPE r_buf = 0;
; 1880 :                                 DivRem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v_lo, (*q)->BLOCK, &r_buf);
; 1881 :                                 root.CheckNumber(*q);
; 1882 :                                 CommitNumber(*q);
; 1883 :                                 if ((*q)->IS_ZERO)
; 1884 :                                 {
; 1885 :                                     root.DeallocateNumber(*q);
; 1886 :                                     *q = &number_zero;
; 1887 :                                 }
; 1888 :                                 else
; 1889 :                                     root.UnlinkNumber(*q);
; 1890 :                                 return (r_buf);
; 1891 :                             }
; 1892 :                             else
; 1893 :                             {
; 1894 :                                 __UNIT_TYPE r_buf = Rem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v_lo);
; 1895 :                                 return (r_buf);
; 1896 :                             }
; 1897 :                         }
; 1898 :                     }
; 1899 :                     else
; 1900 :                     {
; 1901 :                         // v の値が 32bit では表現できない場合
; 1902 :                         __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);
; 1903 :                         if (u_bit_count < v_bit_count)
; 1904 :                         {
; 1905 :                             // 明らかに u < v である場合
; 1906 : 
; 1907 :                             // q = 0, r = u を返す。
; 1908 :                             if (q != nullptr)
; 1909 :                                 *q = &number_zero;
; 1910 :                             if (sizeof(v) == sizeof(__UNIT_TYPE))
; 1911 :                                 return (u->BLOCK[0]);
; 1912 :                             else
; 1913 :                             {
; 1914 :                                 __UNIT_TYPE r_lo = u->BLOCK[0];
; 1915 :                                 __UNIT_TYPE r_hi = u->UNIT_WORD_COUNT > 1 ? u->BLOCK[1] : 0;
; 1916 :                                 return (_FROMWORDTODWORD((_UINT32_T)r_hi, (_UINT32_T)r_lo));
; 1917 :                             }
; 1918 :                         }
; 1919 :                         else
; 1920 :                         {
; 1921 :                             if (q != nullptr)
; 1922 :                             {
; 1923 :                                 ResourceHolderUINT root;
; 1924 :                                 __UNIT_TYPE q_bit_count = u_bit_count - v_bit_count + 1 + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには u_bit_count - v_bit_count + 1 だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。
; 1925 :                                 __UNIT_TYPE r_bit_count = u_bit_count + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには v_bit_count だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。
; 1926 :                                 *q = root.AllocateNumber(q_bit_count);
; 1927 :                                 __UNIT_TYPE v_buf[] = { v_lo, v_hi };
; 1928 :                                 __UNIT_TYPE work_v_buf[] = { 0, 0 };
; 1929 :                                 __UNIT_TYPE* r_buf = root.AllocateBlock(r_bit_count);
; 1930 :                                 (*fp_DivRem_X_X)(u->BLOCK, u->UNIT_WORD_COUNT, v_buf, sizeof(v_buf) / sizeof(v_buf[0]), work_v_buf, (*q)->BLOCK, r_buf);
; 1931 :                                 root.CheckNumber(*q);
; 1932 :                                 root.CheckBlock(r_buf);
; 1933 :                                 CommitNumber(*q);
; 1934 :                                 if ((*q)->IS_ZERO)
; 1935 :                                 {
; 1936 :                                     root.DeallocateNumber(*q);
; 1937 :                                     *q = &number_zero;
; 1938 :                                 }
; 1939 :                                 else
; 1940 :                                     root.UnlinkNumber(*q);
; 1941 :                                 return (_FROMWORDTODWORD((_UINT32_T)r_buf[1], (_UINT32_T)r_buf[0]));
; 1942 :                             }
; 1943 :                             else
; 1944 :                             {
; 1945 :                                 ResourceHolderUINT root;
; 1946 :                                 __UNIT_TYPE r_bit_count = u_bit_count + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには v_bit_count だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。
; 1947 :                                 __UNIT_TYPE v_buf[] = { v_lo, v_hi };
; 1948 :                                 __UNIT_TYPE work_v_buf[] = { 0, 0 };
; 1949 :                                 __UNIT_TYPE* r_buf = root.AllocateBlock(r_bit_count);
; 1950 :                                 (*fp_DivRem_X_X)(u->BLOCK, u->UNIT_WORD_COUNT, v_buf, sizeof(v_buf) / sizeof(v_buf[0]), work_v_buf, nullptr, r_buf);
; 1951 :                                 root.CheckBlock(r_buf);
; 1952 :                                 _UINT64_T r = _FROMWORDTODWORD((_UINT32_T)r_buf[1], (_UINT32_T)r_buf[0]);
; 1953 :                                 root.DeallocateBlock(r_buf);
; 1954 :                                 return (r);
; 1955 :                             }
; 1956 :                         }
; 1957 :                     }
; 1958 :                 }
; 1959 :                 else
; 1960 :                 {
; 1961 :                     // _UINT64_T が 1 ワードで表現できる場合
; 1962 : 
; 1963 :                     // x と y の商・剰余を計算する
; 1964 :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00063	4c 8b 71 20	 mov	 r14, QWORD PTR [rcx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 469  :             _BitScanReverse64(&pos, x);

  00067	48 0f bd c6	 bsr	 rax, rsi

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  0006b	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00070	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1965 :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);

  00072	48 63 c1	 movsxd	 rax, ecx
  00075	bd 40 00 00 00	 mov	 ebp, 64			; 00000040H
  0007a	48 2b e8	 sub	 rbp, rax

; 1966 :                     if (u_bit_count < v_bit_count)

  0007d	4c 3b f5	 cmp	 r14, rbp
  00080	73 1b		 jae	 SHORT $LN29@PMC_DivRem

; 1967 :                     {
; 1968 :                         // 明らかに u < v である場合
; 1969 : 
; 1970 :                         // q = 0, r = u を返す。
; 1971 :                         if (q != nullptr)

  00082	48 85 db	 test	 rbx, rbx
  00085	74 0a		 je	 SHORT $LN31@PMC_DivRem

; 1972 :                             *q = &number_zero;

  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0008e	49 89 00	 mov	 QWORD PTR [r8], rax
$LN31@PMC_DivRem:

; 1973 :                         return (u->BLOCK[0]);

  00091	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	e9 b3 00 00 00	 jmp	 $LN33@PMC_DivRem
$LN29@PMC_DivRem:

; 1974 :                     }
; 1975 :                     else
; 1976 :                     {
; 1977 :                         if (q != nullptr)

  0009d	48 85 db	 test	 rbx, rbx
  000a0	0f 84 9a 00 00
	00		 je	 $LN32@PMC_DivRem

; 1978 :                         {
; 1979 :                             ResourceHolderUINT root;

  000a6	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000ab	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000b0	90		 npad	 1

; 1980 :                             __UNIT_TYPE q_bit_count = u_bit_count - v_bit_count + 1 + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには u_bit_count - v_bit_count + 1 だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。

  000b1	4c 2b f5	 sub	 r14, rbp
  000b4	49 8d 56 41	 lea	 rdx, QWORD PTR [r14+65]

; 1981 :                             *q = root.AllocateNumber(q_bit_count);

  000b8	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000bd	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000c2	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1982 :                             __UNIT_TYPE r_buf = 0;

  000c5	48 c7 84 24 98
	00 00 00 00 00
	00 00		 mov	 QWORD PTR r_buf$3[rsp], 0

; 1983 :                             DivRem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, (*q)->BLOCK, &r_buf);

  000d1	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR r_buf$3[rsp]
  000d9	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000de	4c 8b 48 40	 mov	 r9, QWORD PTR [rax+64]
  000e2	4c 8b c6	 mov	 r8, rsi
  000e5	48 8b 57 18	 mov	 rdx, QWORD PTR [rdi+24]
  000e9	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  000ed	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 1984 :                             root.CheckNumber(*q);

  000f2	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000f5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000fa	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 1985 :                             CommitNumber(*q);

  000ff	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00102	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 1986 :                             if ((*q)->IS_ZERO)

  00107	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  0010a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  0010f	f6 42 08 01	 test	 BYTE PTR [rdx+8], 1
  00113	74 11		 je	 SHORT $LN34@PMC_DivRem

; 1987 :                             {
; 1988 :                                 root.DeallocateNumber(*q);

  00115	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 1989 :                                 *q = &number_zero;

  0011a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00121	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1990 :                             }
; 1991 :                             else

  00124	eb 06		 jmp	 SHORT $LN35@PMC_DivRem
$LN34@PMC_DivRem:

; 1992 :                                 root.UnlinkNumber(*q);

  00126	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0012b	90		 npad	 1
$LN35@PMC_DivRem:

; 1993 :                             return (r_buf);

  0012c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  00131	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00136	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR r_buf$3[rsp]
  0013e	eb 10		 jmp	 SHORT $LN33@PMC_DivRem
$LN32@PMC_DivRem:

; 1994 :                         }
; 1995 :                         else
; 1996 :                         {
; 1997 :                             __UNIT_TYPE r_buf = Rem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v);

  00140	4c 8b c6	 mov	 r8, rsi
  00143	48 8b 57 18	 mov	 rdx, QWORD PTR [rdi+24]
  00147	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  0014b	e8 00 00 00 00	 call	 ?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z ; Palmtree::Math::Core::Internal::Rem_X_1W
$LN33@PMC_DivRem:

; 1998 :                             return (r_buf);
; 1999 :                         }
; 2000 :                     }
; 2001 :                 }
; 2002 : 
; 2003 :             }
; 2004 :         }
; 2005 :     }

  00150	4c 8d 5c 24 70	 lea	 r11, QWORD PTR [rsp+112]
  00155	49 8b 5b 20	 mov	 rbx, QWORD PTR [r11+32]
  00159	49 8b 6b 30	 mov	 rbp, QWORD PTR [r11+48]
  0015d	49 8b e3	 mov	 rsp, r11
  00160	41 5e		 pop	 r14
  00162	5f		 pop	 rdi
  00163	5e		 pop	 rsi
  00164	c3		 ret	 0
$LN62@PMC_DivRem:

; 1820 :         {
; 1821 :             // v が 0 である場合
; 1822 : 
; 1823 :             // 0 による除算はエラーで返す
; 1824 :             throw DivisionByZeroException(L"0による除算が行われようとしました。");

  00165	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@
  0016c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T2[rsp]
  00171	e8 00 00 00 00	 call	 ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
  00176	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
  0017d	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T2[rsp]
  00182	e8 00 00 00 00	 call	 _CxxThrowException
  00187	cc		 int	 3
$LN60@PMC_DivRem:
?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
$T2 = 56
u$ = 144
r_buf$3 = 152
v$ = 152
q$ = 160
?dtor$3@?0??PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_L_Imp'::`1'::dtor$3
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$3@?0??PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_L_Imp'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
$T2 = 56
u$ = 144
r_buf$3 = 152
v$ = 152
q$ = 160
?dtor$3@?0??PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_L_Imp'::`1'::dtor$3
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$3@?0??PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_L_Imp'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z
_TEXT	SEGMENT
root$1 = 56
$T2 = 56
u$ = 144
v$ = 152
q$ = 160
r_buf$3 = 168
?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I_Imp, COMDAT

; 1521 :     {

  00000	48 8b c4	 mov	 rax, rsp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 56		 push	 r14
  00007	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000b	48 c7 40 a8 fe
	ff ff ff	 mov	 QWORD PTR [rax-88], -2
  00013	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00017	48 89 68 10	 mov	 QWORD PTR [rax+16], rbp
  0001b	49 8b d8	 mov	 rbx, r8
  0001e	8b f2		 mov	 esi, edx
  00020	48 8b f9	 mov	 rdi, rcx

; 1522 :         if (v == 0)

  00023	85 d2		 test	 edx, edx
  00025	0f 84 34 01 00
	00		 je	 $LN23@PMC_DivRem

; 1528 :         }
; 1529 :         if (u->IS_ZERO)

  0002b	f6 41 08 01	 test	 BYTE PTR [rcx+8], 1
  0002f	74 16		 je	 SHORT $LN3@PMC_DivRem

; 1530 :         {
; 1531 :             // u が 0 である場合
; 1532 : 
; 1533 :             // q = 0, r = 0 を返す
; 1534 : 
; 1535 :             if (q != nullptr)

  00031	48 85 db	 test	 rbx, rbx
  00034	74 0a		 je	 SHORT $LN5@PMC_DivRem

; 1536 :                 *q = &number_zero;

  00036	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0003d	49 89 00	 mov	 QWORD PTR [r8], rax
$LN5@PMC_DivRem:

; 1537 :             return (0);

  00040	33 c0		 xor	 eax, eax
  00042	e9 03 01 00 00	 jmp	 $LN13@PMC_DivRem
$LN3@PMC_DivRem:

; 1538 :         }
; 1539 :         else
; 1540 :         {
; 1541 :             // u が 0 ではない場合
; 1542 : 
; 1543 :             if (v == 1)

  00047	83 fe 01	 cmp	 esi, 1
  0004a	75 14		 jne	 SHORT $LN6@PMC_DivRem

; 1544 :             {
; 1545 :                 // v が 1 である場合
; 1546 : 
; 1547 :                 // q = u, r = 0 を返す
; 1548 :                 if (q != nullptr)

  0004c	48 85 db	 test	 rbx, rbx
  0004f	74 08		 je	 SHORT $LN8@PMC_DivRem

; 1549 :                     *q = DuplicateNumber(u);

  00051	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00056	48 89 03	 mov	 QWORD PTR [rbx], rax
$LN8@PMC_DivRem:

; 1550 :                 return (0);

  00059	33 c0		 xor	 eax, eax
  0005b	e9 ea 00 00 00	 jmp	 $LN13@PMC_DivRem
$LN6@PMC_DivRem:

; 1551 :             }
; 1552 :             else
; 1553 :             {
; 1554 :                 // u と v がともに 0 ではない場合
; 1555 : 
; 1556 :                 // x と y の商・剰余を計算する
; 1557 :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00060	4c 8b 71 20	 mov	 r14, QWORD PTR [rcx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 426  :             _BitScanReverse(&pos, x);

  00064	0f bd c6	 bsr	 eax, esi

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00067	b9 1f 00 00 00	 mov	 ecx, 31
  0006c	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1558 :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  0006e	48 63 c1	 movsxd	 rax, ecx
  00071	bd 20 00 00 00	 mov	 ebp, 32			; 00000020H
  00076	48 2b e8	 sub	 rbp, rax

; 1559 :                 if (u_bit_count < v_bit_count)

  00079	4c 3b f5	 cmp	 r14, rbp
  0007c	73 1a		 jae	 SHORT $LN9@PMC_DivRem

; 1560 :                 {
; 1561 :                     // 明らかに u < v である場合
; 1562 : 
; 1563 :                     // q = 0, r = u を返す。
; 1564 :                     if (q != nullptr)

  0007e	48 85 db	 test	 rbx, rbx
  00081	74 0a		 je	 SHORT $LN11@PMC_DivRem

; 1565 :                         *q = &number_zero;

  00083	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0008a	49 89 00	 mov	 QWORD PTR [r8], rax
$LN11@PMC_DivRem:

; 1566 :                     return ((_UINT32_T)u->BLOCK[0]);

  0008d	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  00091	8b 00		 mov	 eax, DWORD PTR [rax]
  00093	e9 b2 00 00 00	 jmp	 $LN13@PMC_DivRem
$LN9@PMC_DivRem:

; 1567 :                 }
; 1568 :                 else
; 1569 :                 {
; 1570 :                     if (q != nullptr)

  00098	48 85 db	 test	 rbx, rbx
  0009b	0f 84 99 00 00
	00		 je	 $LN12@PMC_DivRem

; 1571 :                     {
; 1572 :                         ResourceHolderUINT root;

  000a1	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000a6	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000ab	90		 npad	 1

; 1573 :                         __UNIT_TYPE q_bit_count = u_bit_count - v_bit_count + 1 + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには u_bit_count - v_bit_count + 1 だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。

  000ac	4c 2b f5	 sub	 r14, rbp
  000af	49 8d 56 41	 lea	 rdx, QWORD PTR [r14+65]

; 1574 :                         *q = root.AllocateNumber(q_bit_count);

  000b3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000b8	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000bd	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1575 :                         __UNIT_TYPE r_buf = 0;

  000c0	48 c7 84 24 a8
	00 00 00 00 00
	00 00		 mov	 QWORD PTR r_buf$3[rsp], 0

; 1576 :                         DivRem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, (*q)->BLOCK, &r_buf);

  000cc	4c 8b c6	 mov	 r8, rsi
  000cf	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR r_buf$3[rsp]
  000d7	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000dc	4c 8b 48 40	 mov	 r9, QWORD PTR [rax+64]
  000e0	48 8b 57 18	 mov	 rdx, QWORD PTR [rdi+24]
  000e4	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  000e8	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 1577 :                         root.CheckNumber(*q);

  000ed	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000f0	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000f5	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 1578 :                         CommitNumber(*q);

  000fa	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000fd	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 1579 :                         if ((*q)->IS_ZERO)

  00102	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00105	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  0010a	f6 42 08 01	 test	 BYTE PTR [rdx+8], 1
  0010e	74 11		 je	 SHORT $LN14@PMC_DivRem

; 1580 :                         {
; 1581 :                             root.DeallocateNumber(*q);

  00110	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 1582 :                             *q = &number_zero;

  00115	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0011c	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1583 :                         }
; 1584 :                         else

  0011f	eb 06		 jmp	 SHORT $LN15@PMC_DivRem
$LN14@PMC_DivRem:

; 1585 :                             root.UnlinkNumber(*q);

  00121	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  00126	90		 npad	 1
$LN15@PMC_DivRem:

; 1586 :                         return ((_UINT32_T)r_buf);

  00127	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  0012c	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00131	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR r_buf$3[rsp]
  00138	eb 10		 jmp	 SHORT $LN13@PMC_DivRem
$LN12@PMC_DivRem:

; 1587 :                     }
; 1588 :                     else
; 1589 :                     {
; 1590 :                         __UNIT_TYPE r_buf = Rem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v);

  0013a	4c 8b c6	 mov	 r8, rsi
  0013d	48 8b 57 18	 mov	 rdx, QWORD PTR [rdi+24]
  00141	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00145	e8 00 00 00 00	 call	 ?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z ; Palmtree::Math::Core::Internal::Rem_X_1W
$LN13@PMC_DivRem:

; 1591 :                         return ((_UINT32_T)r_buf);
; 1592 :                     }
; 1593 :                 }
; 1594 :             }
; 1595 :         }
; 1596 :     }

  0014a	4c 8d 5c 24 70	 lea	 r11, QWORD PTR [rsp+112]
  0014f	49 8b 5b 20	 mov	 rbx, QWORD PTR [r11+32]
  00153	49 8b 6b 28	 mov	 rbp, QWORD PTR [r11+40]
  00157	49 8b e3	 mov	 rsp, r11
  0015a	41 5e		 pop	 r14
  0015c	5f		 pop	 rdi
  0015d	5e		 pop	 rsi
  0015e	c3		 ret	 0
$LN23@PMC_DivRem:

; 1523 :         {
; 1524 :             // v が 0 である場合
; 1525 : 
; 1526 :             // 0 による除算はエラーで返す
; 1527 :             throw DivisionByZeroException(L"0による除算が行われようとしました。");

  0015f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@
  00166	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T2[rsp]
  0016b	e8 00 00 00 00	 call	 ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
  00170	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
  00177	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T2[rsp]
  0017c	e8 00 00 00 00	 call	 _CxxThrowException
  00181	cc		 int	 3
$LN21@PMC_DivRem:
?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
$T2 = 56
u$ = 144
v$ = 152
q$ = 160
r_buf$3 = 168
?dtor$0@?0??PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_I_Imp'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
$T2 = 56
u$ = 144
v$ = 152
q$ = 160
r_buf$3 = 168
?dtor$0@?0??PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_I_Imp'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z
_TEXT	SEGMENT
d_factor$1$ = 48
u_buf$ = 128
uj_1$1$ = 136
u_buf_len$ = 136
uj_2$1$ = 144
v_buf$ = 144
tv523 = 152
v_buf_len$ = 152
v1$1$ = 160
work_v_buf$ = 160
q_buf$ = 168
v2$1$ = 176
r_buf$ = 176
?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z PROC ; Palmtree::Math::Core::Internal::DivRem_X_X_using_ADX_MULX, COMDAT

; 1392 :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 54		 push	 r12
  0000a	41 55		 push	 r13
  0000c	41 56		 push	 r14
  0000e	41 57		 push	 r15
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 1393 :         // u の最上位ワードは 0 でありうることに注意すること。
; 1394 : 
; 1395 : #ifdef _DEBUG
; 1396 :         if (v_buf[v_buf_len - 1] == 0)
; 1397 :         {
; 1398 :             ; // このルートには到達しないはず。デバッグ用。
; 1399 :         }
; 1400 : #endif
; 1401 : 
; 1402 :         __UNIT_TYPE d_factor = _LZCNT_ALT_UNIT(v_buf[v_buf_len - 1]);

  00014	4b 8b 44 c8 f8	 mov	 rax, QWORD PTR [r8+r9*8-8]
  00019	4d 8b f9	 mov	 r15, r9
  0001c	49 8b d8	 mov	 rbx, r8
  0001f	48 8b ea	 mov	 rbp, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 455  :             if (x == 0)

  00022	48 85 c0	 test	 rax, rax
  00025	75 05		 jne	 SHORT $LN13@DivRem_X_X

; 456  :                 return (sizeof(x) * 8);

  00027	8d 50 40	 lea	 edx, QWORD PTR [rax+64]
  0002a	eb 0b		 jmp	 SHORT $LN12@DivRem_X_X
$LN13@DivRem_X_X:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);
; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);

  0002c	48 0f bd c0	 bsr	 rax, rax

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00030	ba 3f 00 00 00	 mov	 edx, 63			; 0000003fH
  00035	2b d0		 sub	 edx, eax
$LN12@DivRem_X_X:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1403 :         if (d_factor == 0)

  00037	4c 8b b4 24 b0
	00 00 00	 mov	 r14, QWORD PTR r_buf$[rsp]
  0003f	48 63 fa	 movsxd	 rdi, edx
  00042	48 89 7c 24 30	 mov	 QWORD PTR d_factor$1$[rsp], rdi
  00047	85 d2		 test	 edx, edx
  00049	75 2a		 jne	 SHORT $LN5@DivRem_X_X
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  0004b	4c 8b a4 24 a0
	00 00 00	 mov	 r12, QWORD PTR work_v_buf$[rsp]
  00053	48 8b f1	 mov	 rsi, rcx
  00056	48 8b cd	 mov	 rcx, rbp
  00059	49 8b fe	 mov	 rdi, r14
  0005c	f3 48 a5	 rep movsq
  0005f	49 8b fc	 mov	 rdi, r12
  00062	48 8b f3	 mov	 rsi, rbx
  00065	49 8b cf	 mov	 rcx, r15
  00068	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1407 :             r_buf[u_buf_len] = 0;

  0006b	49 c7 04 ee 00
	00 00 00	 mov	 QWORD PTR [r14+rbp*8], 0

; 1408 :         }
; 1409 :         else

  00073	eb 34		 jmp	 SHORT $LN6@DivRem_X_X
$LN5@DivRem_X_X:

; 1410 :         {
; 1411 :             LeftShift_Imp(u_buf, u_buf_len, d_factor, r_buf, FALSE);

  00075	45 33 ed	 xor	 r13d, r13d
  00078	4d 8b ce	 mov	 r9, r14
  0007b	4c 8b c7	 mov	 r8, rdi
  0007e	44 89 6c 24 20	 mov	 DWORD PTR [rsp+32], r13d
  00083	48 8b d5	 mov	 rdx, rbp
  00086	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp

; 1412 :             LeftShift_Imp(v_buf, v_buf_len, d_factor, work_v_buf, FALSE);

  0008b	4c 8b a4 24 a0
	00 00 00	 mov	 r12, QWORD PTR work_v_buf$[rsp]
  00093	4c 8b c7	 mov	 r8, rdi
  00096	4d 8b cc	 mov	 r9, r12
  00099	44 89 6c 24 20	 mov	 DWORD PTR [rsp+32], r13d
  0009e	49 8b d7	 mov	 rdx, r15
  000a1	48 8b cb	 mov	 rcx, rbx
  000a4	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp
$LN6@DivRem_X_X:

; 1413 :         }
; 1414 : 
; 1415 :         __UNIT_TYPE* work_u_buf = r_buf;
; 1416 :         __UNIT_TYPE q_index = u_buf_len - v_buf_len;

  000a9	b8 02 00 00 00	 mov	 eax, 2
  000ae	48 8d 5d fe	 lea	 rbx, QWORD PTR [rbp-2]
  000b2	49 2b c7	 sub	 rax, r15
  000b5	49 8d 1c de	 lea	 rbx, QWORD PTR [r14+rbx*8]
  000b9	48 c1 e0 03	 shl	 rax, 3
  000bd	48 8b f5	 mov	 rsi, rbp
  000c0	49 2b c6	 sub	 rax, r14
  000c3	49 2b f7	 sub	 rsi, r15
  000c6	48 03 84 24 a8
	00 00 00	 add	 rax, QWORD PTR q_buf$[rsp]
  000ce	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv523[rsp], rax
  000d6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL2@DivRem_X_X:

; 796  :         __UNIT_TYPE uj_2 = u_buf[u_index - 2];

  000e0	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 797  :         __UNIT_TYPE v1 = v_buf[v_buf_len - 1];
; 798  :         __UNIT_TYPE v2 = v_buf[v_buf_len - 2];

  000e3	4b 8b 54 fc f0	 mov	 rdx, QWORD PTR [r12+r15*8-16]
  000e8	48 8b 43 08	 mov	 rax, QWORD PTR [rbx+8]
  000ec	4c 8b 6b 10	 mov	 r13, QWORD PTR [rbx+16]
  000f0	48 89 8c 24 90
	00 00 00	 mov	 QWORD PTR uj_2$1$[rsp], rcx
  000f8	4b 8b 4c fc f8	 mov	 rcx, QWORD PTR [r12+r15*8-8]
  000fd	48 89 8c 24 a0
	00 00 00	 mov	 QWORD PTR v1$1$[rsp], rcx

; 799  :         __UNIT_TYPE q_ = AsumeQ_(uj, uj_1, v1);

  00105	4c 8b c1	 mov	 r8, rcx
  00108	48 89 94 24 b0
	00 00 00	 mov	 QWORD PTR v2$1$[rsp], rdx
  00110	49 8b cd	 mov	 rcx, r13
  00113	48 8b d0	 mov	 rdx, rax
  00116	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR uj_1$1$[rsp], rax
  0011e	e8 00 00 00 00	 call	 ?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z ; Palmtree::Math::Core::Internal::AsumeQ_

; 800  :         if (!CheckQ_X(q_, uj, uj_1, uj_2, v1, v2))

  00123	4c 8b 8c 24 90
	00 00 00	 mov	 r9, QWORD PTR uj_2$1$[rsp]
  0012b	48 8b f8	 mov	 rdi, rax
  0012e	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR v2$1$[rsp]
  00136	49 8b d5	 mov	 rdx, r13
  00139	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR uj_1$1$[rsp]
  00141	48 8b cf	 mov	 rcx, rdi
  00144	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00149	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR v1$1$[rsp]
  00151	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00156	e8 00 00 00 00	 call	 ?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z ; Palmtree::Math::Core::Internal::CheckQ_X
  0015b	85 c0		 test	 eax, eax
  0015d	74 37		 je	 SHORT $LN19@DivRem_X_X

; 801  :             return (q_);
; 802  :         --q_;
; 803  :         if (!CheckQ_X(q_, uj, uj_1, uj_2, v1, v2))

  0015f	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR v2$1$[rsp]
  00167	48 ff cf	 dec	 rdi
  0016a	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR uj_1$1$[rsp]
  00172	49 8b d5	 mov	 rdx, r13
  00175	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0017a	48 8b cf	 mov	 rcx, rdi
  0017d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR v1$1$[rsp]
  00185	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0018a	e8 00 00 00 00	 call	 ?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z ; Palmtree::Math::Core::Internal::CheckQ_X
  0018f	85 c0		 test	 eax, eax
  00191	74 03		 je	 SHORT $LN19@DivRem_X_X

; 804  :             return (q_);
; 805  :         --q_;

  00193	48 ff cf	 dec	 rdi
$LN19@DivRem_X_X:

; 1417 : 
; 1418 :         for (;;)
; 1419 :         {
; 1420 :             __UNIT_TYPE q_ = CalculateQ_X(work_u_buf, work_v_buf, v_buf_len, q_index);
; 1421 : 
; 1422 :             if (SubtructOneLineX(work_u_buf, u_buf_len, work_v_buf, v_buf_len, q_index, q_))

  00196	48 89 7c 24 28	 mov	 QWORD PTR [rsp+40], rdi
  0019b	4d 8b cf	 mov	 r9, r15
  0019e	4d 8b c4	 mov	 r8, r12
  001a1	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  001a6	48 8b d5	 mov	 rdx, rbp
  001a9	49 8b ce	 mov	 rcx, r14
  001ac	e8 00 00 00 00	 call	 ?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z ; Palmtree::Math::Core::Internal::SubtructOneLineX
  001b1	85 c0		 test	 eax, eax
  001b3	74 19		 je	 SHORT $LN7@DivRem_X_X

; 1423 :             {
; 1424 :                 // 桁借りが発生した場合
; 1425 : 
; 1426 :                 --q_;

  001b5	48 ff cf	 dec	 rdi

; 1427 :                 AddOneLineX(work_u_buf, u_buf_len, work_v_buf, v_buf_len, q_index);

  001b8	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  001bd	4d 8b cf	 mov	 r9, r15
  001c0	4d 8b c4	 mov	 r8, r12
  001c3	48 8b d5	 mov	 rdx, rbp
  001c6	49 8b ce	 mov	 rcx, r14
  001c9	e8 00 00 00 00	 call	 ?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z ; Palmtree::Math::Core::Internal::AddOneLineX
$LN7@DivRem_X_X:

; 1428 :             }
; 1429 : 
; 1430 :             if (q_buf != nullptr)

  001ce	48 83 bc 24 a8
	00 00 00 00	 cmp	 QWORD PTR q_buf$[rsp], 0
  001d7	74 0c		 je	 SHORT $LN8@DivRem_X_X

; 1431 :                 q_buf[q_index] = q_;

  001d9	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv523[rsp]
  001e1	48 89 3c 18	 mov	 QWORD PTR [rax+rbx], rdi
$LN8@DivRem_X_X:

; 1432 : 
; 1433 : 
; 1434 :             if (q_index == 0)

  001e5	48 85 f6	 test	 rsi, rsi
  001e8	74 0c		 je	 SHORT $LN25@DivRem_X_X

; 1435 :                 break;
; 1436 :             --q_index;

  001ea	48 ff ce	 dec	 rsi
  001ed	48 83 eb 08	 sub	 rbx, 8

; 1437 :         }

  001f1	e9 ea fe ff ff	 jmp	 $LL2@DivRem_X_X
$LN25@DivRem_X_X:

; 1438 : 
; 1439 :         if (d_factor > 0)

  001f6	4c 8b 44 24 30	 mov	 r8, QWORD PTR d_factor$1$[rsp]
  001fb	4d 85 c0	 test	 r8, r8
  001fe	74 17		 je	 SHORT $LN10@DivRem_X_X

; 1440 :             RightShift_Imp(work_u_buf, u_buf_len + 1, d_factor, work_u_buf, FALSE);

  00200	48 8d 55 01	 lea	 rdx, QWORD PTR [rbp+1]
  00204	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0020c	4d 8b ce	 mov	 r9, r14
  0020f	49 8b ce	 mov	 rcx, r14
  00212	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
$LN10@DivRem_X_X:

; 1441 :     }

  00217	48 8b 9c 24 80
	00 00 00	 mov	 rbx, QWORD PTR [rsp+128]
  0021f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00223	41 5f		 pop	 r15
  00225	41 5e		 pop	 r14
  00227	41 5d		 pop	 r13
  00229	41 5c		 pop	 r12
  0022b	5f		 pop	 rdi
  0022c	5e		 pop	 rsi
  0022d	5d		 pop	 rbp
  0022e	c3		 ret	 0
?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z ENDP ; Palmtree::Math::Core::Internal::DivRem_X_X_using_ADX_MULX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z
_TEXT	SEGMENT
uj$1$ = 48
lh_mi$1 = 56
rh_mi$2 = 64
rh_hi$3 = 72
lh_mi$4 = 80
rh_mi$5 = 88
tv622 = 96
d_factor$1$ = 104
t_hi$6 = 112
t_hi$7 = 120
u_buf$ = 192
pos$8 = 200
u_buf_len$ = 200
v1$1$ = 208
v_buf$ = 208
uj_1$1$ = 216
rh_hi$9 = 216
v_buf_len$ = 216
v2$1$ = 224
work_v_buf$ = 224
q_buf$ = 232
uj_2$1$ = 240
r_buf$ = 240
?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z PROC ; Palmtree::Math::Core::Internal::DivRem_X_X_using_ADC_MUL, COMDAT

; 1335 :     {

  00000	40 53		 push	 rbx
  00002	55		 push	 rbp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 55		 push	 r13
  00007	41 56		 push	 r14
  00009	41 57		 push	 r15
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H

; 1336 :         // u および v の最上位ワードは 0 でありうることに注意すること。
; 1337 :         if (sizeof(__UNIT_TYPE) != sizeof(__UNIT_TYPE))
; 1338 :         {
; 1339 :             while (u_buf[u_buf_len - 1] == 0)
; 1340 :                 --u_buf_len;
; 1341 :             while (v_buf[v_buf_len - 1] == 0)
; 1342 :                 --v_buf_len;
; 1343 :         }
; 1344 : 
; 1345 : #ifdef _DEBUG
; 1346 :         if (v_buf[v_buf_len - 1] == 0)
; 1347 :         {
; 1348 :             ; // このルートには到達しないはず。デバッグ用。
; 1349 :         }
; 1350 : #endif
; 1351 : 
; 1352 :         __UNIT_TYPE d_factor = _LZCNT_ALT_UNIT(v_buf[v_buf_len - 1]);

  00012	4b 8b 44 c8 f8	 mov	 rax, QWORD PTR [r8+r9*8-8]
  00017	4d 8b f9	 mov	 r15, r9
  0001a	49 8b d8	 mov	 rbx, r8
  0001d	48 8b ea	 mov	 rbp, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 455  :             if (x == 0)

  00020	48 85 c0	 test	 rax, rax
  00023	75 05		 jne	 SHORT $LN18@DivRem_X_X

; 456  :                 return (sizeof(x) * 8);

  00025	8d 50 40	 lea	 edx, QWORD PTR [rax+64]
  00028	eb 12		 jmp	 SHORT $LN17@DivRem_X_X
$LN18@DivRem_X_X:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);
; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);

  0002a	48 0f bd c0	 bsr	 rax, rax

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  0002e	ba 3f 00 00 00	 mov	 edx, 63			; 0000003fH
  00033	89 84 24 c8 00
	00 00		 mov	 DWORD PTR pos$8[rsp], eax
  0003a	2b d0		 sub	 edx, eax
$LN17@DivRem_X_X:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1353 :         if (d_factor == 0)

  0003c	4c 8b b4 24 f0
	00 00 00	 mov	 r14, QWORD PTR r_buf$[rsp]
  00044	48 63 fa	 movsxd	 rdi, edx
  00047	48 89 7c 24 68	 mov	 QWORD PTR d_factor$1$[rsp], rdi
  0004c	85 d2		 test	 edx, edx
  0004e	75 2a		 jne	 SHORT $LN10@DivRem_X_X
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  00050	4c 8b ac 24 e0
	00 00 00	 mov	 r13, QWORD PTR work_v_buf$[rsp]
  00058	48 8b f1	 mov	 rsi, rcx
  0005b	48 8b cd	 mov	 rcx, rbp
  0005e	49 8b fe	 mov	 rdi, r14
  00061	f3 48 a5	 rep movsq
  00064	49 8b fd	 mov	 rdi, r13
  00067	48 8b f3	 mov	 rsi, rbx
  0006a	49 8b cf	 mov	 rcx, r15
  0006d	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1357 :             r_buf[u_buf_len] = 0;

  00070	49 c7 04 ee 00
	00 00 00	 mov	 QWORD PTR [r14+rbp*8], 0

; 1358 :         }
; 1359 :         else

  00078	eb 37		 jmp	 SHORT $LN11@DivRem_X_X
$LN10@DivRem_X_X:

; 1360 :         {
; 1361 :             LeftShift_Imp(u_buf, u_buf_len, d_factor, r_buf, FALSE);

  0007a	4d 8b ce	 mov	 r9, r14
  0007d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00085	4c 8b c7	 mov	 r8, rdi
  00088	48 8b d5	 mov	 rdx, rbp
  0008b	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp

; 1362 :             LeftShift_Imp(v_buf, v_buf_len, d_factor, work_v_buf, FALSE);

  00090	4c 8b ac 24 e0
	00 00 00	 mov	 r13, QWORD PTR work_v_buf$[rsp]
  00098	4c 8b c7	 mov	 r8, rdi
  0009b	4d 8b cd	 mov	 r9, r13
  0009e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  000a6	49 8b d7	 mov	 rdx, r15
  000a9	48 8b cb	 mov	 rcx, rbx
  000ac	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp
$LN11@DivRem_X_X:

; 1363 :         }
; 1364 : 
; 1365 :         __UNIT_TYPE* work_u_buf = r_buf;
; 1366 :         __UNIT_TYPE q_index = u_buf_len - v_buf_len;

  000b1	b8 02 00 00 00	 mov	 eax, 2
  000b6	48 8d 5d fe	 lea	 rbx, QWORD PTR [rbp-2]
  000ba	49 2b c7	 sub	 rax, r15
  000bd	49 8d 1c de	 lea	 rbx, QWORD PTR [r14+rbx*8]
  000c1	48 c1 e0 03	 shl	 rax, 3
  000c5	48 8b f5	 mov	 rsi, rbp
  000c8	49 2b c6	 sub	 rax, r14
  000cb	49 2b f7	 sub	 rsi, r15
  000ce	48 03 84 24 e8
	00 00 00	 add	 rax, QWORD PTR q_buf$[rsp]
  000d6	48 89 44 24 60	 mov	 QWORD PTR tv622[rsp], rax
  000db	0f 1f 44 00 00	 npad	 5
$LL6@DivRem_X_X:

; 778  :         __UNIT_TYPE uj_2 = u_buf[u_index - 2];

  000e0	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000e3	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
  000e7	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]

; 779  :         __UNIT_TYPE v1 = v_buf[v_buf_len - 1];
; 780  :         __UNIT_TYPE v2 = v_buf[v_buf_len - 2];

  000eb	4b 8b 7c fd f0	 mov	 rdi, QWORD PTR [r13+r15*8-16]
  000f0	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR uj_2$1$[rsp], rax
  000f8	4b 8b 44 fd f8	 mov	 rax, QWORD PTR [r13+r15*8-8]

; 781  :         __UNIT_TYPE q_ = AsumeQ_(uj, uj_1, v1);

  000fd	4c 8b c0	 mov	 r8, rax
  00100	48 89 4c 24 30	 mov	 QWORD PTR uj$1$[rsp], rcx
  00105	48 89 94 24 d8
	00 00 00	 mov	 QWORD PTR uj_1$1$[rsp], rdx
  0010d	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR v1$1$[rsp], rax
  00115	48 89 bc 24 e0
	00 00 00	 mov	 QWORD PTR v2$1$[rsp], rdi
  0011d	e8 00 00 00 00	 call	 ?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z ; Palmtree::Math::Core::Internal::AsumeQ_
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00122	4c 8b 94 24 d8
	00 00 00	 mov	 r10, QWORD PTR uj_1$1$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 781  :         __UNIT_TYPE q_ = AsumeQ_(uj, uj_1, v1);

  0012a	48 8b f8	 mov	 rdi, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  0012d	48 f7 a4 24 e0
	00 00 00	 mul	 QWORD PTR v2$1$[rsp]

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00135	4c 8b 4c 24 30	 mov	 r9, QWORD PTR uj$1$[rsp]
  0013a	49 8b ca	 mov	 rcx, r10

; 221  :             return (_umul128(u, v, w_hi));

  0013d	4c 8b d8	 mov	 r11, rax
  00140	48 89 54 24 38	 mov	 QWORD PTR lh_mi$1[rsp], rdx
  00145	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR v1$1$[rsp]
  0014d	48 f7 e7	 mul	 rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00150	48 2b c8	 sub	 rcx, rax

; 221  :             return (_umul128(u, v, w_hi));

  00153	48 89 54 24 70	 mov	 QWORD PTR t_hi$6[rsp], rdx

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00158	49 8b c1	 mov	 rax, r9
  0015b	48 89 4c 24 40	 mov	 QWORD PTR rh_mi$2[rsp], rcx
  00160	48 1b c2	 sbb	 rax, rdx
  00163	48 89 84 24 d8
	00 00 00	 mov	 QWORD PTR rh_hi$9[rsp], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  0016b	b8 02 00 00 00	 mov	 eax, 2
  00170	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 727  :         if (rh_hi > 0)

  00178	48 83 bc 24 d8
	00 00 00 00	 cmp	 QWORD PTR rh_hi$9[rsp], 0
  00181	0f 87 98 00 00
	00		 ja	 $LN77@DivRem_X_X

; 728  :             return (FALSE);
; 729  :         else if (lh_mi > rh_mi)

  00187	48 8b 44 24 38	 mov	 rax, QWORD PTR lh_mi$1[rsp]
  0018c	48 3b 44 24 40	 cmp	 rax, QWORD PTR rh_mi$2[rsp]
  00191	77 1c		 ja	 SHORT $LN79@DivRem_X_X

; 730  :             return (TRUE);
; 731  :         else if (lh_mi < rh_mi)

  00193	0f 82 86 00 00
	00		 jb	 $LN77@DivRem_X_X

; 732  :             return (FALSE);
; 733  :         else
; 734  :             return (lh_lo > rh_lo);

  00199	4c 8b 84 24 f0
	00 00 00	 mov	 r8, QWORD PTR uj_2$1$[rsp]
  001a1	33 c9		 xor	 ecx, ecx
  001a3	4d 3b d8	 cmp	 r11, r8
  001a6	0f 97 c1	 seta	 cl

; 782  :         if (!CheckQ_(q_, uj, uj_1, uj_2, v1, v2))

  001a9	85 c9		 test	 ecx, ecx
  001ab	74 72		 je	 SHORT $LN77@DivRem_X_X

; 729  :         else if (lh_mi > rh_mi)

  001ad	eb 08		 jmp	 SHORT $LN25@DivRem_X_X
$LN79@DivRem_X_X:
  001af	4c 8b 84 24 f0
	00 00 00	 mov	 r8, QWORD PTR uj_2$1$[rsp]
$LN25@DivRem_X_X:

; 784  :         --q_;

  001b7	48 ff cf	 dec	 rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  001ba	b9 02 00 00 00	 mov	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  001bf	48 8b c7	 mov	 rax, rdi
  001c2	48 f7 a4 24 e0
	00 00 00	 mul	 QWORD PTR v2$1$[rsp]
  001ca	4c 8b d8	 mov	 r11, rax
  001cd	48 89 54 24 50	 mov	 QWORD PTR lh_mi$4[rsp], rdx
  001d2	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR v1$1$[rsp]
  001da	48 f7 e7	 mul	 rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001dd	4c 2b d0	 sub	 r10, rax

; 221  :             return (_umul128(u, v, w_hi));

  001e0	48 89 54 24 78	 mov	 QWORD PTR t_hi$7[rsp], rdx

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001e5	4c 89 54 24 58	 mov	 QWORD PTR rh_mi$5[rsp], r10
  001ea	4c 1b ca	 sbb	 r9, rdx
  001ed	4c 89 4c 24 48	 mov	 QWORD PTR rh_hi$3[rsp], r9
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  001f2	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 727  :         if (rh_hi > 0)

  001fa	48 83 7c 24 48
	00		 cmp	 QWORD PTR rh_hi$3[rsp], 0
  00200	77 1d		 ja	 SHORT $LN77@DivRem_X_X

; 728  :             return (FALSE);
; 729  :         else if (lh_mi > rh_mi)

  00202	48 8b 44 24 50	 mov	 rax, QWORD PTR lh_mi$4[rsp]
  00207	48 3b 44 24 58	 cmp	 rax, QWORD PTR rh_mi$5[rsp]
  0020c	77 0e		 ja	 SHORT $LN26@DivRem_X_X

; 730  :             return (TRUE);
; 731  :         else if (lh_mi < rh_mi)

  0020e	72 0f		 jb	 SHORT $LN77@DivRem_X_X

; 732  :             return (FALSE);
; 733  :         else
; 734  :             return (lh_lo > rh_lo);

  00210	33 c0		 xor	 eax, eax
  00212	4d 3b d8	 cmp	 r11, r8
  00215	0f 97 c0	 seta	 al

; 785  :         if (!CheckQ_(q_, uj, uj_1, uj_2, v1, v2))

  00218	85 c0		 test	 eax, eax
  0021a	74 03		 je	 SHORT $LN77@DivRem_X_X
$LN26@DivRem_X_X:

; 786  :             return (q_);
; 787  :         --q_;

  0021c	48 ff cf	 dec	 rdi
$LN77@DivRem_X_X:

; 1367 : 
; 1368 :         for (;;)
; 1369 :         {
; 1370 :             __UNIT_TYPE q_ = CalculateQ_(work_u_buf, work_v_buf, v_buf_len, q_index);
; 1371 : 
; 1372 : 
; 1373 :             if (SubtructOneLine(work_u_buf, u_buf_len, work_v_buf, v_buf_len, q_index, q_))

  0021f	48 89 7c 24 28	 mov	 QWORD PTR [rsp+40], rdi
  00224	4d 8b cf	 mov	 r9, r15
  00227	4d 8b c5	 mov	 r8, r13
  0022a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0022f	48 8b d5	 mov	 rdx, rbp
  00232	49 8b ce	 mov	 rcx, r14
  00235	e8 00 00 00 00	 call	 ?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z ; Palmtree::Math::Core::Internal::SubtructOneLine
  0023a	85 c0		 test	 eax, eax
  0023c	74 19		 je	 SHORT $LN12@DivRem_X_X

; 1374 :             {
; 1375 :                 // 桁借りが発生した場合
; 1376 :                 --q_;

  0023e	48 ff cf	 dec	 rdi

; 1377 :                 AddOneLine(work_u_buf, u_buf_len, work_v_buf, v_buf_len, q_index);

  00241	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  00246	4d 8b cf	 mov	 r9, r15
  00249	4d 8b c5	 mov	 r8, r13
  0024c	48 8b d5	 mov	 rdx, rbp
  0024f	49 8b ce	 mov	 rcx, r14
  00252	e8 00 00 00 00	 call	 ?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z ; Palmtree::Math::Core::Internal::AddOneLine
$LN12@DivRem_X_X:

; 1378 :             }
; 1379 : 
; 1380 :             if (q_buf != nullptr)

  00257	48 83 bc 24 e8
	00 00 00 00	 cmp	 QWORD PTR q_buf$[rsp], 0
  00260	74 09		 je	 SHORT $LN13@DivRem_X_X

; 1381 :                 q_buf[q_index] = q_;

  00262	48 8b 44 24 60	 mov	 rax, QWORD PTR tv622[rsp]
  00267	48 89 3c 18	 mov	 QWORD PTR [rax+rbx], rdi
$LN13@DivRem_X_X:

; 1382 :             if (q_index == 0)

  0026b	48 85 f6	 test	 rsi, rsi
  0026e	74 0c		 je	 SHORT $LN74@DivRem_X_X

; 1383 :                 break;
; 1384 :             --q_index;

  00270	48 ff ce	 dec	 rsi
  00273	48 83 eb 08	 sub	 rbx, 8

; 1385 :         }

  00277	e9 64 fe ff ff	 jmp	 $LL6@DivRem_X_X
$LN74@DivRem_X_X:

; 1386 : 
; 1387 :         if (d_factor > 0)

  0027c	4c 8b 44 24 68	 mov	 r8, QWORD PTR d_factor$1$[rsp]
  00281	4d 85 c0	 test	 r8, r8
  00284	74 17		 je	 SHORT $LN15@DivRem_X_X

; 1388 :             RightShift_Imp(work_u_buf, u_buf_len + 1, d_factor, work_u_buf, FALSE);

  00286	48 8d 55 01	 lea	 rdx, QWORD PTR [rbp+1]
  0028a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00292	4d 8b ce	 mov	 r9, r14
  00295	49 8b ce	 mov	 rcx, r14
  00298	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
$LN15@DivRem_X_X:

; 1389 :     }

  0029d	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  002a4	41 5f		 pop	 r15
  002a6	41 5e		 pop	 r14
  002a8	41 5d		 pop	 r13
  002aa	5f		 pop	 rdi
  002ab	5e		 pop	 rsi
  002ac	5d		 pop	 rbp
  002ad	5b		 pop	 rbx
  002ae	c3		 ret	 0
?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z ENDP ; Palmtree::Math::Core::Internal::DivRem_X_X_using_ADC_MUL
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z
_TEXT	SEGMENT
u_buf$ = 48
u_buf_len$ = 56
v_buf$ = 64
v_buf_len$ = 72
q_index$ = 80
?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z PROC ; Palmtree::Math::Core::Internal::AddOneLineX, COMDAT

; 1269 :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1270 :         __UNIT_TYPE* u_ptr = &u_buf[q_index];

  0000a	48 8b 44 24 50	 mov	 rax, QWORD PTR q_index$[rsp]
  0000f	4d 8b d9	 mov	 r11, r9

; 1271 :         __UNIT_TYPE* v_ptr = &v_buf[0];
; 1272 :         __UNIT_TYPE v_count = v_buf_len;
; 1273 :         char c = 0;
; 1274 : 
; 1275 :         // まず 32 ワードずつ加算をする。
; 1276 :         __UNIT_TYPE count = v_count >> 5;

  00012	4d 8b d3	 mov	 r10, r11
  00015	48 8b d9	 mov	 rbx, rcx
  00018	49 c1 ea 05	 shr	 r10, 5
  0001c	48 8b fa	 mov	 rdi, rdx
  0001f	4c 8d 0c c1	 lea	 r9, QWORD PTR [rcx+rax*8]
  00023	32 c9		 xor	 cl, cl

; 1277 :         while (count != 0)

  00025	4d 85 d2	 test	 r10, r10
  00028	74 25		 je	 SHORT $LN3@AddOneLine
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL2@AddOneLine:

; 1278 :         {
; 1279 :             c = _ADD_32WORDS_ADCX(c, u_ptr, v_ptr, u_ptr);

  00030	49 8b d1	 mov	 rdx, r9
  00033	e8 00 00 00 00	 call	 _ADD_32WORDS_ADCX

; 1280 :             u_ptr += 32;

  00038	49 81 c1 00 01
	00 00		 add	 r9, 256			; 00000100H

; 1281 :             v_ptr += 32;

  0003f	49 81 c0 00 01
	00 00		 add	 r8, 256			; 00000100H
  00046	0f b6 c8	 movzx	 ecx, al

; 1282 :             --count;

  00049	49 83 ea 01	 sub	 r10, 1
  0004d	75 e1		 jne	 SHORT $LL2@AddOneLine
$LN3@AddOneLine:

; 1283 :         }
; 1284 :         // この時点で未処理の桁は 32 ワード未満のはず
; 1285 : 
; 1286 :         // 未処理の桁が 16 ワード以上あるなら 16 ワード加算を行う。
; 1287 :         if (v_count & 0x10)

  0004f	41 f6 c3 10	 test	 r11b, 16
  00053	74 13		 je	 SHORT $LN4@AddOneLine

; 1288 :         {
; 1289 :             c = _ADD_16WORDS_ADCX(c, u_ptr, v_ptr, u_ptr);

  00055	49 8b d1	 mov	 rdx, r9
  00058	e8 00 00 00 00	 call	 _ADD_16WORDS_ADCX

; 1290 :             u_ptr += 16;

  0005d	49 83 e9 80	 sub	 r9, -128		; ffffffffffffff80H
  00061	0f b6 c8	 movzx	 ecx, al

; 1291 :             v_ptr += 16;

  00064	49 83 e8 80	 sub	 r8, -128		; ffffffffffffff80H
$LN4@AddOneLine:

; 1292 :         }
; 1293 :         // この時点で未処理の桁は 16 ワード未満のはず
; 1294 : 
; 1295 :         // 未処理の桁が 8 ワード以上あるなら 8 ワード加算を行う。
; 1296 :         if (v_count & 0x8)

  00068	41 f6 c3 08	 test	 r11b, 8
  0006c	0f 84 83 00 00
	00		 je	 $LN5@AddOneLine
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1704 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00072	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00075	80 c1 ff	 add	 cl, -1
  00078	66 49 0f 38 f6
	00		 adcx	 rax, QWORD PTR [r8]
  0007e	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1705 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  00081	49 8b 41 08	 mov	 rax, QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00085	66 49 0f 38 f6
	40 08		 adcx	 rax, QWORD PTR [r8+8]
  0008c	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1706 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  00090	49 8b 41 10	 mov	 rax, QWORD PTR [r9+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00094	66 49 0f 38 f6
	40 10		 adcx	 rax, QWORD PTR [r8+16]
  0009b	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1707 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  0009f	49 8b 41 18	 mov	 rax, QWORD PTR [r9+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000a3	66 49 0f 38 f6
	40 18		 adcx	 rax, QWORD PTR [r8+24]
  000aa	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1708 :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  000ae	49 8b 41 20	 mov	 rax, QWORD PTR [r9+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000b2	66 49 0f 38 f6
	40 20		 adcx	 rax, QWORD PTR [r8+32]
  000b9	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1709 :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  000bd	49 8b 41 28	 mov	 rax, QWORD PTR [r9+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000c1	66 49 0f 38 f6
	40 28		 adcx	 rax, QWORD PTR [r8+40]
  000c8	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1710 :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  000cc	49 8b 41 30	 mov	 rax, QWORD PTR [r9+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000d0	66 49 0f 38 f6
	40 30		 adcx	 rax, QWORD PTR [r8+48]
  000d7	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1711 :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  000db	49 8b 41 38	 mov	 rax, QWORD PTR [r9+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000df	66 49 0f 38 f6
	40 38		 adcx	 rax, QWORD PTR [r8+56]
  000e6	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
  000ea	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1299 :             u_ptr += 8;

  000ed	49 83 c1 40	 add	 r9, 64			; 00000040H

; 1300 :             v_ptr += 8;

  000f1	49 83 c0 40	 add	 r8, 64			; 00000040H
$LN5@AddOneLine:

; 1301 :         }
; 1302 :         // この時点で未処理の桁は 8 ワード未満のはず
; 1303 : 
; 1304 :         // 未処理の桁が 4 ワード以上あるなら 4 ワード加算を行う。
; 1305 :         if (v_count & 0x4)

  000f5	41 f6 c3 04	 test	 r11b, 4
  000f9	74 47		 je	 SHORT $LN6@AddOneLine
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2016 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  000fb	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000fe	80 c1 ff	 add	 cl, -1
  00101	66 49 0f 38 f6
	00		 adcx	 rax, QWORD PTR [r8]
  00107	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2017 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0010a	49 8b 41 08	 mov	 rax, QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0010e	66 49 0f 38 f6
	40 08		 adcx	 rax, QWORD PTR [r8+8]
  00115	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2018 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  00119	49 8b 41 10	 mov	 rax, QWORD PTR [r9+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0011d	66 49 0f 38 f6
	40 10		 adcx	 rax, QWORD PTR [r8+16]
  00124	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2019 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  00128	49 8b 41 18	 mov	 rax, QWORD PTR [r9+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0012c	66 49 0f 38 f6
	40 18		 adcx	 rax, QWORD PTR [r8+24]
  00133	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
  00137	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1308 :             u_ptr += 4;

  0013a	49 83 c1 20	 add	 r9, 32			; 00000020H

; 1309 :             v_ptr += 4;

  0013e	49 83 c0 20	 add	 r8, 32			; 00000020H
$LN6@AddOneLine:

; 1310 :         }
; 1311 :         // この時点で未処理の桁は 4 ワード未満のはず
; 1312 : 
; 1313 :         // 未処理の桁が 2 ワード以上あるなら 2 ワード加算を行う。
; 1314 :         if (v_count & 0x2)

  00142	41 f6 c3 02	 test	 r11b, 2
  00146	74 29		 je	 SHORT $LN7@AddOneLine
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2230 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00148	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0014b	80 c1 ff	 add	 cl, -1
  0014e	66 49 0f 38 f6
	00		 adcx	 rax, QWORD PTR [r8]
  00154	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2231 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  00157	49 8b 41 08	 mov	 rax, QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0015b	66 49 0f 38 f6
	40 08		 adcx	 rax, QWORD PTR [r8+8]
  00162	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
  00166	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1317 :             u_ptr += 2;

  00169	49 83 c1 10	 add	 r9, 16

; 1318 :             v_ptr += 2;

  0016d	49 83 c0 10	 add	 r8, 16
$LN7@AddOneLine:

; 1319 :         }
; 1320 :         // この時点で未処理の桁は 2 ワード未満のはず
; 1321 : 
; 1322 :         // 未処理の桁が 1 ワード以上あるなら 1 ワード加算を行う。
; 1323 :         if (v_count & 0x1)

  00171	41 f6 c3 01	 test	 r11b, 1
  00175	74 13		 je	 SHORT $LN8@AddOneLine

; 1324 :         {
; 1325 :             c = _ADD_UNIT(c, *u_ptr, *v_ptr, u_ptr);

  00177	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0017a	80 c1 ff	 add	 cl, -1
  0017d	49 13 00	 adc	 rax, QWORD PTR [r8]
  00180	49 89 01	 mov	 QWORD PTR [r9], rax
  00183	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1326 :             ++u_ptr;

  00186	49 83 c1 08	 add	 r9, 8
$LN8@AddOneLine:

; 1327 :             ++v_ptr;
; 1328 :         }
; 1329 : 
; 1330 :         // 残りの桁の繰り上がりを計算する。
; 1331 :         DoCarry(c, u_ptr, u_buf + u_buf_len + 1 - u_ptr);

  0018a	48 8d 14 fd 08
	00 00 00	 lea	 rdx, QWORD PTR [rdi*8+8]
  00192	49 2b d1	 sub	 rdx, r9
  00195	48 03 d3	 add	 rdx, rbx
  00198	48 c1 fa 03	 sar	 rdx, 3

; 1178 :             if (u_count <= 0)

  0019c	48 85 d2	 test	 rdx, rdx
  0019f	74 1e		 je	 SHORT $LN65@AddOneLine
$LL47@AddOneLine:

; 1179 :             {
; 1180 :                 // u の最上位まで達してしまった場合
; 1181 :                 return;
; 1182 :             }
; 1183 :             else if (c)

  001a1	84 c9		 test	 cl, cl
  001a3	74 1a		 je	 SHORT $LN65@AddOneLine

; 1184 :             {
; 1185 :                 // u の最上位に達しておらず、かつキャリーが立っている場合
; 1186 : 
; 1187 :                 // 繰り上がりを継続する
; 1188 :                 c = _ADD_UNIT(c, *u_ptr, 0, u_ptr);

  001a5	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001a8	80 c1 ff	 add	 cl, -1
  001ab	48 83 d0 00	 adc	 rax, 0
  001af	49 89 01	 mov	 QWORD PTR [r9], rax
  001b2	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1189 :                 ++u_ptr;

  001b5	49 83 c1 08	 add	 r9, 8

; 1190 :                 --u_count;

  001b9	48 83 ea 01	 sub	 rdx, 1
  001bd	75 e2		 jne	 SHORT $LL47@AddOneLine
$LN65@AddOneLine:

; 1332 :     }

  001bf	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  001c4	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001c8	5f		 pop	 rdi
  001c9	c3		 ret	 0
?AddOneLineX@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z ENDP ; Palmtree::Math::Core::Internal::AddOneLineX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z
_TEXT	SEGMENT
u_buf$ = 48
u_buf_len$ = 56
v_buf$ = 64
v_buf_len$ = 72
q_index$ = 80
?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z PROC ; Palmtree::Math::Core::Internal::AddOneLine, COMDAT

; 1203 :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1204 :         __UNIT_TYPE* u_ptr = &u_buf[q_index];

  0000a	48 8b 44 24 50	 mov	 rax, QWORD PTR q_index$[rsp]
  0000f	4d 8b d1	 mov	 r10, r9

; 1205 :         __UNIT_TYPE* v_ptr = &v_buf[0];
; 1206 :         __UNIT_TYPE v_count = v_buf_len;
; 1207 :         char c = 0;
; 1208 : 
; 1209 :         // まず 32 ワードずつ加算をする。
; 1210 :         __UNIT_TYPE count = v_count >> 5;

  00012	4d 8b da	 mov	 r11, r10
  00015	48 8b d9	 mov	 rbx, rcx
  00018	49 c1 eb 05	 shr	 r11, 5
  0001c	48 8b fa	 mov	 rdi, rdx
  0001f	4c 8d 0c c1	 lea	 r9, QWORD PTR [rcx+rax*8]
  00023	32 c9		 xor	 cl, cl

; 1211 :         while (count != 0)

  00025	4d 85 db	 test	 r11, r11
  00028	0f 84 2d 02 00
	00		 je	 $LN3@AddOneLine
  0002e	66 90		 npad	 2
$LL2@AddOneLine:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 43   :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00030	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00033	80 c1 ff	 add	 cl, -1
  00036	49 13 00	 adc	 rax, QWORD PTR [r8]
  00039	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 44   :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  0003c	49 8b 41 08	 mov	 rax, QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00040	49 13 40 08	 adc	 rax, QWORD PTR [r8+8]
  00044	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 45   :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00048	49 8b 41 10	 mov	 rax, QWORD PTR [r9+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0004c	49 13 40 10	 adc	 rax, QWORD PTR [r8+16]
  00050	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 46   :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  00054	49 8b 41 18	 mov	 rax, QWORD PTR [r9+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00058	49 13 40 18	 adc	 rax, QWORD PTR [r8+24]
  0005c	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 47   :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  00060	49 8b 41 20	 mov	 rax, QWORD PTR [r9+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00064	49 13 40 20	 adc	 rax, QWORD PTR [r8+32]
  00068	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 48   :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  0006c	49 8b 41 28	 mov	 rax, QWORD PTR [r9+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00070	49 13 40 28	 adc	 rax, QWORD PTR [r8+40]
  00074	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 49   :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  00078	49 8b 41 30	 mov	 rax, QWORD PTR [r9+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0007c	49 13 40 30	 adc	 rax, QWORD PTR [r8+48]
  00080	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 50   :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  00084	49 8b 41 38	 mov	 rax, QWORD PTR [r9+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00088	49 13 40 38	 adc	 rax, QWORD PTR [r8+56]
  0008c	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 51   :     c = _ADD_UNIT(c, xp[8], yp[8], &zp[8]);

  00090	49 8b 41 40	 mov	 rax, QWORD PTR [r9+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00094	49 13 40 40	 adc	 rax, QWORD PTR [r8+64]
  00098	49 89 41 40	 mov	 QWORD PTR [r9+64], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 52   :     c = _ADD_UNIT(c, xp[9], yp[9], &zp[9]);

  0009c	49 8b 41 48	 mov	 rax, QWORD PTR [r9+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000a0	49 13 40 48	 adc	 rax, QWORD PTR [r8+72]
  000a4	49 89 41 48	 mov	 QWORD PTR [r9+72], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 53   :     c = _ADD_UNIT(c, xp[10], yp[10], &zp[10]);

  000a8	49 8b 41 50	 mov	 rax, QWORD PTR [r9+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000ac	49 13 40 50	 adc	 rax, QWORD PTR [r8+80]
  000b0	49 89 41 50	 mov	 QWORD PTR [r9+80], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 54   :     c = _ADD_UNIT(c, xp[11], yp[11], &zp[11]);

  000b4	49 8b 41 58	 mov	 rax, QWORD PTR [r9+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000b8	49 13 40 58	 adc	 rax, QWORD PTR [r8+88]
  000bc	49 89 41 58	 mov	 QWORD PTR [r9+88], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 55   :     c = _ADD_UNIT(c, xp[12], yp[12], &zp[12]);

  000c0	49 8b 41 60	 mov	 rax, QWORD PTR [r9+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000c4	49 13 40 60	 adc	 rax, QWORD PTR [r8+96]
  000c8	49 89 41 60	 mov	 QWORD PTR [r9+96], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 56   :     c = _ADD_UNIT(c, xp[13], yp[13], &zp[13]);

  000cc	49 8b 41 68	 mov	 rax, QWORD PTR [r9+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000d0	49 13 40 68	 adc	 rax, QWORD PTR [r8+104]
  000d4	49 89 41 68	 mov	 QWORD PTR [r9+104], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 57   :     c = _ADD_UNIT(c, xp[14], yp[14], &zp[14]);

  000d8	49 8b 41 70	 mov	 rax, QWORD PTR [r9+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000dc	49 13 40 70	 adc	 rax, QWORD PTR [r8+112]
  000e0	49 89 41 70	 mov	 QWORD PTR [r9+112], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 58   :     c = _ADD_UNIT(c, xp[15], yp[15], &zp[15]);

  000e4	49 8b 41 78	 mov	 rax, QWORD PTR [r9+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000e8	49 13 40 78	 adc	 rax, QWORD PTR [r8+120]
  000ec	49 89 41 78	 mov	 QWORD PTR [r9+120], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 59   :     c = _ADD_UNIT(c, xp[16], yp[16], &zp[16]);

  000f0	49 8b 81 80 00
	00 00		 mov	 rax, QWORD PTR [r9+128]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000f7	49 13 80 80 00
	00 00		 adc	 rax, QWORD PTR [r8+128]
  000fe	49 89 81 80 00
	00 00		 mov	 QWORD PTR [r9+128], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 60   :     c = _ADD_UNIT(c, xp[17], yp[17], &zp[17]);

  00105	49 8b 81 88 00
	00 00		 mov	 rax, QWORD PTR [r9+136]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0010c	49 13 80 88 00
	00 00		 adc	 rax, QWORD PTR [r8+136]
  00113	49 89 81 88 00
	00 00		 mov	 QWORD PTR [r9+136], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 61   :     c = _ADD_UNIT(c, xp[18], yp[18], &zp[18]);

  0011a	49 8b 81 90 00
	00 00		 mov	 rax, QWORD PTR [r9+144]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00121	49 13 80 90 00
	00 00		 adc	 rax, QWORD PTR [r8+144]
  00128	49 89 81 90 00
	00 00		 mov	 QWORD PTR [r9+144], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 62   :     c = _ADD_UNIT(c, xp[19], yp[19], &zp[19]);

  0012f	49 8b 81 98 00
	00 00		 mov	 rax, QWORD PTR [r9+152]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00136	49 13 80 98 00
	00 00		 adc	 rax, QWORD PTR [r8+152]
  0013d	49 89 81 98 00
	00 00		 mov	 QWORD PTR [r9+152], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 63   :     c = _ADD_UNIT(c, xp[20], yp[20], &zp[20]);

  00144	49 8b 81 a0 00
	00 00		 mov	 rax, QWORD PTR [r9+160]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0014b	49 13 80 a0 00
	00 00		 adc	 rax, QWORD PTR [r8+160]
  00152	49 89 81 a0 00
	00 00		 mov	 QWORD PTR [r9+160], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 64   :     c = _ADD_UNIT(c, xp[21], yp[21], &zp[21]);

  00159	49 8b 81 a8 00
	00 00		 mov	 rax, QWORD PTR [r9+168]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00160	49 13 80 a8 00
	00 00		 adc	 rax, QWORD PTR [r8+168]
  00167	49 89 81 a8 00
	00 00		 mov	 QWORD PTR [r9+168], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 65   :     c = _ADD_UNIT(c, xp[22], yp[22], &zp[22]);

  0016e	49 8b 81 b0 00
	00 00		 mov	 rax, QWORD PTR [r9+176]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00175	49 13 80 b0 00
	00 00		 adc	 rax, QWORD PTR [r8+176]
  0017c	49 89 81 b0 00
	00 00		 mov	 QWORD PTR [r9+176], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 66   :     c = _ADD_UNIT(c, xp[23], yp[23], &zp[23]);

  00183	49 8b 81 b8 00
	00 00		 mov	 rax, QWORD PTR [r9+184]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0018a	49 13 80 b8 00
	00 00		 adc	 rax, QWORD PTR [r8+184]
  00191	49 89 81 b8 00
	00 00		 mov	 QWORD PTR [r9+184], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 67   :     c = _ADD_UNIT(c, xp[24], yp[24], &zp[24]);

  00198	49 8b 81 c0 00
	00 00		 mov	 rax, QWORD PTR [r9+192]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0019f	49 13 80 c0 00
	00 00		 adc	 rax, QWORD PTR [r8+192]
  001a6	49 89 81 c0 00
	00 00		 mov	 QWORD PTR [r9+192], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 68   :     c = _ADD_UNIT(c, xp[25], yp[25], &zp[25]);

  001ad	49 8b 81 c8 00
	00 00		 mov	 rax, QWORD PTR [r9+200]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001b4	49 13 80 c8 00
	00 00		 adc	 rax, QWORD PTR [r8+200]
  001bb	49 89 81 c8 00
	00 00		 mov	 QWORD PTR [r9+200], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 69   :     c = _ADD_UNIT(c, xp[26], yp[26], &zp[26]);

  001c2	49 8b 81 d0 00
	00 00		 mov	 rax, QWORD PTR [r9+208]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001c9	49 13 80 d0 00
	00 00		 adc	 rax, QWORD PTR [r8+208]
  001d0	49 89 81 d0 00
	00 00		 mov	 QWORD PTR [r9+208], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 70   :     c = _ADD_UNIT(c, xp[27], yp[27], &zp[27]);

  001d7	49 8b 81 d8 00
	00 00		 mov	 rax, QWORD PTR [r9+216]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001de	49 13 80 d8 00
	00 00		 adc	 rax, QWORD PTR [r8+216]
  001e5	49 89 81 d8 00
	00 00		 mov	 QWORD PTR [r9+216], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 71   :     c = _ADD_UNIT(c, xp[28], yp[28], &zp[28]);

  001ec	49 8b 81 e0 00
	00 00		 mov	 rax, QWORD PTR [r9+224]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001f3	49 13 80 e0 00
	00 00		 adc	 rax, QWORD PTR [r8+224]
  001fa	49 89 81 e0 00
	00 00		 mov	 QWORD PTR [r9+224], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 72   :     c = _ADD_UNIT(c, xp[29], yp[29], &zp[29]);

  00201	49 8b 81 e8 00
	00 00		 mov	 rax, QWORD PTR [r9+232]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00208	49 13 80 e8 00
	00 00		 adc	 rax, QWORD PTR [r8+232]
  0020f	49 89 81 e8 00
	00 00		 mov	 QWORD PTR [r9+232], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 73   :     c = _ADD_UNIT(c, xp[30], yp[30], &zp[30]);

  00216	49 8b 81 f0 00
	00 00		 mov	 rax, QWORD PTR [r9+240]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0021d	49 13 80 f0 00
	00 00		 adc	 rax, QWORD PTR [r8+240]
  00224	49 89 81 f0 00
	00 00		 mov	 QWORD PTR [r9+240], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 74   :     c = _ADD_UNIT(c, xp[31], yp[31], &zp[31]);

  0022b	49 8b 81 f8 00
	00 00		 mov	 rax, QWORD PTR [r9+248]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00232	49 13 80 f8 00
	00 00		 adc	 rax, QWORD PTR [r8+248]
  00239	49 89 81 f8 00
	00 00		 mov	 QWORD PTR [r9+248], rax
  00240	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1214 :             u_ptr += 32;

  00243	49 81 c1 00 01
	00 00		 add	 r9, 256			; 00000100H

; 1215 :             v_ptr += 32;

  0024a	49 81 c0 00 01
	00 00		 add	 r8, 256			; 00000100H

; 1216 :             --count;

  00251	49 83 eb 01	 sub	 r11, 1
  00255	0f 85 d5 fd ff
	ff		 jne	 $LL2@AddOneLine
$LN3@AddOneLine:

; 1217 :         }
; 1218 :         // この時点で未処理の桁は 32 ワード未満のはず
; 1219 : 
; 1220 :         // 未処理の桁が 16 ワード以上あるなら 16 ワード加算を行う。
; 1221 :         if (v_count & 0x10)

  0025b	41 f6 c2 10	 test	 r10b, 16
  0025f	74 13		 je	 SHORT $LN4@AddOneLine

; 1222 :         {
; 1223 :             c = _ADD_16WORDS_ADC(c, u_ptr, v_ptr, u_ptr);

  00261	49 8b d1	 mov	 rdx, r9
  00264	e8 00 00 00 00	 call	 _ADD_16WORDS_ADC

; 1224 :             u_ptr += 16;

  00269	49 83 e9 80	 sub	 r9, -128		; ffffffffffffff80H
  0026d	0f b6 c8	 movzx	 ecx, al

; 1225 :             v_ptr += 16;

  00270	49 83 e8 80	 sub	 r8, -128		; ffffffffffffff80H
$LN4@AddOneLine:

; 1226 :         }
; 1227 :         // この時点で未処理の桁は 16 ワード未満のはず
; 1228 : 
; 1229 :         // 未処理の桁が 8 ワード以上あるなら 8 ワード加算を行う。
; 1230 :         if (v_count & 0x8)

  00274	41 f6 c2 08	 test	 r10b, 8
  00278	74 6b		 je	 SHORT $LN5@AddOneLine
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1619 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0027a	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0027d	80 c1 ff	 add	 cl, -1
  00280	49 13 00	 adc	 rax, QWORD PTR [r8]
  00283	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1620 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00286	49 8b 41 08	 mov	 rax, QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0028a	49 13 40 08	 adc	 rax, QWORD PTR [r8+8]
  0028e	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1621 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00292	49 8b 41 10	 mov	 rax, QWORD PTR [r9+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00296	49 13 40 10	 adc	 rax, QWORD PTR [r8+16]
  0029a	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1622 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  0029e	49 8b 41 18	 mov	 rax, QWORD PTR [r9+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002a2	49 13 40 18	 adc	 rax, QWORD PTR [r8+24]
  002a6	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1623 :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  002aa	49 8b 41 20	 mov	 rax, QWORD PTR [r9+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002ae	49 13 40 20	 adc	 rax, QWORD PTR [r8+32]
  002b2	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1624 :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  002b6	49 8b 41 28	 mov	 rax, QWORD PTR [r9+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002ba	49 13 40 28	 adc	 rax, QWORD PTR [r8+40]
  002be	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1625 :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  002c2	49 8b 41 30	 mov	 rax, QWORD PTR [r9+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002c6	49 13 40 30	 adc	 rax, QWORD PTR [r8+48]
  002ca	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1626 :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  002ce	49 8b 41 38	 mov	 rax, QWORD PTR [r9+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002d2	49 13 40 38	 adc	 rax, QWORD PTR [r8+56]
  002d6	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
  002da	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1233 :             u_ptr += 8;

  002dd	49 83 c1 40	 add	 r9, 64			; 00000040H

; 1234 :             v_ptr += 8;

  002e1	49 83 c0 40	 add	 r8, 64			; 00000040H
$LN5@AddOneLine:

; 1235 :         }
; 1236 :         // この時点で未処理の桁は 8 ワード未満のはず
; 1237 : 
; 1238 :         // 未処理の桁が 4 ワード以上あるなら 4 ワード加算を行う。
; 1239 :         if (v_count & 0x4)

  002e5	41 f6 c2 04	 test	 r10b, 4
  002e9	74 3b		 je	 SHORT $LN6@AddOneLine
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1959 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  002eb	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002ee	80 c1 ff	 add	 cl, -1
  002f1	49 13 00	 adc	 rax, QWORD PTR [r8]
  002f4	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1960 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  002f7	49 8b 41 08	 mov	 rax, QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002fb	49 13 40 08	 adc	 rax, QWORD PTR [r8+8]
  002ff	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1961 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00303	49 8b 41 10	 mov	 rax, QWORD PTR [r9+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00307	49 13 40 10	 adc	 rax, QWORD PTR [r8+16]
  0030b	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1962 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  0030f	49 8b 41 18	 mov	 rax, QWORD PTR [r9+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00313	49 13 40 18	 adc	 rax, QWORD PTR [r8+24]
  00317	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
  0031b	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1242 :             u_ptr += 4;

  0031e	49 83 c1 20	 add	 r9, 32			; 00000020H

; 1243 :             v_ptr += 4;

  00322	49 83 c0 20	 add	 r8, 32			; 00000020H
$LN6@AddOneLine:

; 1244 :         }
; 1245 :         // この時点で未処理の桁は 4 ワード未満のはず
; 1246 : 
; 1247 :         // 未処理の桁が 2 ワード以上あるなら 2 ワード加算を行う。
; 1248 :         if (v_count & 0x2)

  00326	41 f6 c2 02	 test	 r10b, 2
  0032a	74 23		 je	 SHORT $LN7@AddOneLine
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2187 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0032c	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0032f	80 c1 ff	 add	 cl, -1
  00332	49 13 00	 adc	 rax, QWORD PTR [r8]
  00335	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2188 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00338	49 8b 41 08	 mov	 rax, QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0033c	49 13 40 08	 adc	 rax, QWORD PTR [r8+8]
  00340	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
  00344	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1251 :             u_ptr += 2;

  00347	49 83 c1 10	 add	 r9, 16

; 1252 :             v_ptr += 2;

  0034b	49 83 c0 10	 add	 r8, 16
$LN7@AddOneLine:

; 1253 :         }
; 1254 :         // この時点で未処理の桁は 2 ワード未満のはず
; 1255 : 
; 1256 :         // 未処理の桁が 1 ワード以上あるなら 1 ワード加算を行う。
; 1257 :         if (v_count & 0x1)

  0034f	41 f6 c2 01	 test	 r10b, 1
  00353	74 13		 je	 SHORT $LN8@AddOneLine

; 1258 :         {
; 1259 :             c = _ADD_UNIT(c, *u_ptr, *v_ptr, u_ptr);

  00355	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00358	80 c1 ff	 add	 cl, -1
  0035b	49 13 00	 adc	 rax, QWORD PTR [r8]
  0035e	49 89 01	 mov	 QWORD PTR [r9], rax
  00361	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1260 :             ++u_ptr;

  00364	49 83 c1 08	 add	 r9, 8
$LN8@AddOneLine:

; 1261 :             ++v_ptr;
; 1262 :         }
; 1263 : 
; 1264 :         // 残りの桁の繰り上がりを計算する。
; 1265 :         DoCarry(c, u_ptr, u_buf + u_buf_len + 1 - u_ptr);

  00368	48 8d 14 fd 08
	00 00 00	 lea	 rdx, QWORD PTR [rdi*8+8]
  00370	49 2b d1	 sub	 rdx, r9
  00373	48 03 d3	 add	 rdx, rbx
  00376	48 c1 fa 03	 sar	 rdx, 3

; 1178 :             if (u_count <= 0)

  0037a	48 85 d2	 test	 rdx, rdx
  0037d	74 1f		 je	 SHORT $LN131@AddOneLine
  0037f	90		 npad	 1
$LL113@AddOneLine:

; 1179 :             {
; 1180 :                 // u の最上位まで達してしまった場合
; 1181 :                 return;
; 1182 :             }
; 1183 :             else if (c)

  00380	84 c9		 test	 cl, cl
  00382	74 1a		 je	 SHORT $LN131@AddOneLine

; 1184 :             {
; 1185 :                 // u の最上位に達しておらず、かつキャリーが立っている場合
; 1186 : 
; 1187 :                 // 繰り上がりを継続する
; 1188 :                 c = _ADD_UNIT(c, *u_ptr, 0, u_ptr);

  00384	49 8b 01	 mov	 rax, QWORD PTR [r9]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00387	80 c1 ff	 add	 cl, -1
  0038a	48 83 d0 00	 adc	 rax, 0
  0038e	49 89 01	 mov	 QWORD PTR [r9], rax
  00391	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1189 :                 ++u_ptr;

  00394	49 83 c1 08	 add	 r9, 8

; 1190 :                 --u_count;

  00398	48 83 ea 01	 sub	 rdx, 1
  0039c	75 e2		 jne	 SHORT $LL113@AddOneLine
$LN131@AddOneLine:

; 1266 :     }

  0039e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  003a3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  003a7	5f		 pop	 rdi
  003a8	c3		 ret	 0
?AddOneLine@Internal@Core@Math@Palmtree@@YAXPEA_K_K011@Z ENDP ; Palmtree::Math::Core::Internal::AddOneLine
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?DoCarry@Internal@Core@Math@Palmtree@@YAXDPEA_K_K@Z
_TEXT	SEGMENT
c$ = 8
u_ptr$ = 16
u_count$ = 24
?DoCarry@Internal@Core@Math@Palmtree@@YAXDPEA_K_K@Z PROC ; Palmtree::Math::Core::Internal::DoCarry, COMDAT

; 1175 :         // 繰り上がりを続く限り行う
; 1176 :         for (;;)
; 1177 :         {
; 1178 :             if (u_count <= 0)

  00000	4d 85 c0	 test	 r8, r8
  00003	74 1e		 je	 SHORT $LN13@DoCarry
$LL2@DoCarry:

; 1179 :             {
; 1180 :                 // u の最上位まで達してしまった場合
; 1181 :                 return;
; 1182 :             }
; 1183 :             else if (c)

  00005	84 c9		 test	 cl, cl
  00007	74 1a		 je	 SHORT $LN13@DoCarry

; 1184 :             {
; 1185 :                 // u の最上位に達しておらず、かつキャリーが立っている場合
; 1186 : 
; 1187 :                 // 繰り上がりを継続する
; 1188 :                 c = _ADD_UNIT(c, *u_ptr, 0, u_ptr);

  00009	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0000c	80 c1 ff	 add	 cl, -1
  0000f	48 83 d0 00	 adc	 rax, 0
  00013	48 89 02	 mov	 QWORD PTR [rdx], rax
  00016	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1189 :                 ++u_ptr;

  00019	48 83 c2 08	 add	 rdx, 8

; 1190 :                 --u_count;

  0001d	49 83 e8 01	 sub	 r8, 1
  00021	75 e2		 jne	 SHORT $LL2@DoCarry
$LN13@DoCarry:

; 1191 :             }
; 1192 :             else
; 1193 :             {
; 1194 :                 // u の最上位に達しておらず、かつキャリーが立っていない場合
; 1195 : 
; 1196 :                 // 繰り上がりを中断し、復帰する。
; 1197 :                 return;
; 1198 :             }
; 1199 :         }
; 1200 :     }

  00023	c3		 ret	 0
?DoCarry@Internal@Core@Math@Palmtree@@YAXDPEA_K_K@Z ENDP ; Palmtree::Math::Core::Internal::DoCarry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z
_TEXT	SEGMENT
t_hi$1 = 0
t_lo$2 = 8
t_hi$3 = 16
t_lo$4 = 24
t_hi$5 = 32
t_lo$6 = 40
t_hi$7 = 48
t_lo$8 = 56
t_hi$9 = 64
t_lo$10 = 72
t_hi$11 = 80
t_lo$12 = 88
t_hi$13 = 96
t_lo$14 = 104
t_hi$15 = 112
t_lo$16 = 120
t_hi$17 = 128
t_lo$18 = 136
t_hi$19 = 144
t_lo$20 = 152
t_hi$21 = 160
t_lo$22 = 168
t_hi$23 = 176
t_lo$24 = 184
t_hi$25 = 192
t_lo$26 = 200
t_hi$27 = 208
t_lo$28 = 216
t_hi$29 = 224
t_lo$30 = 232
t_hi$31 = 240
t_lo$32 = 248
t_hi$33 = 256
t_lo$34 = 264
t_hi$35 = 272
t_lo$36 = 280
t_hi$37 = 288
t_lo$38 = 296
t_hi$39 = 304
t_lo$40 = 312
t_hi$41 = 320
t_lo$42 = 328
t_hi$43 = 336
t_lo$44 = 344
t_hi$45 = 352
t_lo$46 = 360
t_hi$47 = 368
t_lo$48 = 376
t_hi$49 = 384
t_lo$50 = 392
t_hi$51 = 400
t_lo$52 = 408
t_hi$53 = 416
t_lo$54 = 424
t_hi$55 = 432
t_lo$56 = 440
t_hi$57 = 448
t_lo$58 = 456
t_hi$59 = 464
t_lo$60 = 472
t_hi$61 = 480
t_lo$62 = 488
t_hi$63 = 496
t_lo$64 = 504
t_hi$65 = 512
t_lo$66 = 520
t_hi$67 = 528
t_lo$68 = 536
t_hi$69 = 544
t_lo$70 = 552
t_hi$71 = 560
t_lo$72 = 568
t_hi$73 = 576
t_lo$74 = 584
t_hi$75 = 592
t_lo$76 = 600
t_hi$77 = 608
t_lo$78 = 616
t_hi$79 = 624
t_lo$80 = 632
t_hi$81 = 640
t_lo$82 = 648
t_hi$83 = 656
t_lo$84 = 664
t_hi$85 = 672
t_lo$86 = 680
t_hi$87 = 688
t_lo$88 = 696
t_hi$89 = 704
t_lo$90 = 712
t_hi$91 = 720
t_lo$92 = 728
t_hi$93 = 736
t_lo$94 = 744
t_hi$95 = 752
t_lo$96 = 760
t_hi$97 = 768
t_lo$98 = 776
t_hi$99 = 784
t_lo$100 = 792
t_hi$101 = 800
t_lo$102 = 808
t_hi$103 = 816
t_lo$104 = 824
t_hi$105 = 832
t_lo$106 = 840
t_hi$107 = 848
t_lo$108 = 856
t_hi$109 = 864
t_lo$110 = 872
t_hi$111 = 880
t_lo$112 = 888
t_hi$113 = 896
t_lo$114 = 904
t_hi$115 = 912
t_lo$116 = 920
t_hi$117 = 928
t_lo$118 = 936
t_hi$119 = 944
t_lo$120 = 952
t_hi$121 = 960
t_hi$122 = 1056
u_buf$ = 1056
t_lo$123 = 1064
u_buf_len$ = 1064
t_hi$124 = 1072
v_buf$ = 1072
t_lo$125 = 1080
v_buf_len$ = 1080
t_lo$126 = 1088
q_index$ = 1088
q_$ = 1096
?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z PROC ; Palmtree::Math::Core::Internal::SubtructOneLineX, COMDAT

; 1023 :     {

  00000	40 55		 push	 rbp
  00002	53		 push	 rbx
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 54		 push	 r12
  00007	41 55		 push	 r13
  00009	41 56		 push	 r14
  0000b	41 57		 push	 r15
  0000d	48 8d ac 24 28
	fd ff ff	 lea	 rbp, QWORD PTR [rsp-728]
  00015	48 81 ec d8 03
	00 00		 sub	 rsp, 984		; 000003d8H

; 1024 :         __UNIT_TYPE* u_ptr = &u_buf[q_index];

  0001c	48 8b 85 40 03
	00 00		 mov	 rax, QWORD PTR q_index$[rbp-256]

; 1025 :         __UNIT_TYPE* v_ptr = &v_buf[0];
; 1026 :         __UNIT_TYPE v_count = v_buf_len;
; 1027 :         __UNIT_TYPE k = 0;

  00023	33 ff		 xor	 edi, edi

; 1028 :         char c = 0;
; 1029 : 
; 1030 :         __UNIT_TYPE count = v_count >> 5;

  00025	4d 8b f9	 mov	 r15, r9
  00028	40 32 f6	 xor	 sil, sil
  0002b	49 c1 ef 05	 shr	 r15, 5
  0002f	4c 8b ea	 mov	 r13, rdx

; 1031 :         while (count != 0)

  00032	48 8b 95 48 03
	00 00		 mov	 rdx, QWORD PTR q_$[rbp-256]
  00039	4d 8b f1	 mov	 r14, r9
  0003c	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]
  00040	49 8b d8	 mov	 rbx, r8
  00043	4c 8b e1	 mov	 r12, rcx
  00046	44 8b df	 mov	 r11d, edi
  00049	4d 85 ff	 test	 r15, r15
  0004c	0f 84 90 06 00
	00		 je	 $LN3@SubtructOn
$LL2@SubtructOn:

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00052	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00055	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0005a	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0005d	4d 03 c3	 add	 r8, r11
  00060	4c 89 85 40 03
	00 00		 mov	 QWORD PTR t_lo$126[rbp-256], r8
  00067	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0006d	40 80 c6 ff	 add	 sil, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00071	4c 89 95 20 03
	00 00		 mov	 QWORD PTR t_hi$122[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00078	49 1b c8	 sbb	 rcx, r8
  0007b	48 89 08	 mov	 QWORD PTR [rax], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0007e	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00082	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00086	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0008b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0008f	4d 03 c2	 add	 r8, r10
  00092	4c 89 85 28 03
	00 00		 mov	 QWORD PTR t_lo$123[rbp-256], r8
  00099	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0009f	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000a3	4c 89 9d 30 03
	00 00		 mov	 QWORD PTR t_hi$124[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000aa	49 1b c8	 sbb	 rcx, r8
  000ad	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  000b1	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000b5	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  000b9	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  000be	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000c2	4d 03 c3	 add	 r8, r11
  000c5	4c 89 85 38 03
	00 00		 mov	 QWORD PTR t_lo$125[rbp-256], r8
  000cc	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000d2	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000d6	4c 89 14 24	 mov	 QWORD PTR t_hi$1[rsp], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000da	49 1b c8	 sbb	 rcx, r8
  000dd	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  000e1	48 8b 4b 18	 mov	 rcx, QWORD PTR [rbx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000e5	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  000e9	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  000ee	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000f2	4d 03 c2	 add	 r8, r10
  000f5	4c 89 44 24 08	 mov	 QWORD PTR t_lo$2[rsp], r8
  000fa	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00100	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00104	4c 89 5c 24 10	 mov	 QWORD PTR t_hi$3[rsp], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00109	49 1b c8	 sbb	 rcx, r8
  0010c	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00110	48 8b 4b 20	 mov	 rcx, QWORD PTR [rbx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00114	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00118	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0011d	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00121	4d 03 c3	 add	 r8, r11
  00124	4c 89 44 24 18	 mov	 QWORD PTR t_lo$4[rsp], r8
  00129	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0012f	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00133	4c 89 54 24 20	 mov	 QWORD PTR t_hi$5[rsp], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00138	49 1b c8	 sbb	 rcx, r8
  0013b	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0013f	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00143	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00147	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0014c	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00150	4d 03 c2	 add	 r8, r10
  00153	4c 89 44 24 28	 mov	 QWORD PTR t_lo$6[rsp], r8
  00158	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0015e	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00162	4c 89 5c 24 30	 mov	 QWORD PTR t_hi$7[rsp], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00167	49 1b c8	 sbb	 rcx, r8
  0016a	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0016e	48 8b 4b 30	 mov	 rcx, QWORD PTR [rbx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00172	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00176	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0017b	48 8b 48 30	 mov	 rcx, QWORD PTR [rax+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0017f	4d 03 c3	 add	 r8, r11
  00182	4c 89 44 24 38	 mov	 QWORD PTR t_lo$8[rsp], r8
  00187	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0018d	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00191	4c 89 54 24 40	 mov	 QWORD PTR t_hi$9[rsp], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00196	49 1b c8	 sbb	 rcx, r8
  00199	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0019d	48 8b 4b 38	 mov	 rcx, QWORD PTR [rbx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001a1	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  001a5	c4 62 bb f6 d9	 mulx	 r11, r8, rcx

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001aa	4d 03 c2	 add	 r8, r10
  001ad	4c 89 44 24 48	 mov	 QWORD PTR t_lo$10[rsp], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  001b2	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001b6	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001bc	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001c0	4c 89 5c 24 50	 mov	 QWORD PTR t_hi$11[rsp], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001c5	49 1b c8	 sbb	 rcx, r8
  001c8	48 89 48 38	 mov	 QWORD PTR [rax+56], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  001cc	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001d0	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  001d4	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  001d9	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001dd	4d 03 c3	 add	 r8, r11
  001e0	4c 89 44 24 58	 mov	 QWORD PTR t_lo$12[rsp], r8
  001e5	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001eb	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001ef	4c 89 54 24 60	 mov	 QWORD PTR t_hi$13[rsp], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001f4	49 1b c8	 sbb	 rcx, r8
  001f7	48 89 48 40	 mov	 QWORD PTR [rax+64], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  001fb	48 8b 4b 48	 mov	 rcx, QWORD PTR [rbx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001ff	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00203	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00208	48 8b 48 48	 mov	 rcx, QWORD PTR [rax+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0020c	4d 03 c2	 add	 r8, r10
  0020f	4c 89 44 24 68	 mov	 QWORD PTR t_lo$14[rsp], r8
  00214	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0021a	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0021e	4c 89 5c 24 70	 mov	 QWORD PTR t_hi$15[rsp], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00223	49 1b c8	 sbb	 rcx, r8
  00226	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0022a	48 8b 4b 50	 mov	 rcx, QWORD PTR [rbx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0022e	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00232	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00237	48 8b 48 50	 mov	 rcx, QWORD PTR [rax+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0023b	4d 03 c3	 add	 r8, r11
  0023e	4c 89 44 24 78	 mov	 QWORD PTR t_lo$16[rsp], r8
  00243	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00249	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0024d	4c 89 55 80	 mov	 QWORD PTR t_hi$17[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00251	49 1b c8	 sbb	 rcx, r8
  00254	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00258	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0025c	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00260	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00265	48 8b 48 58	 mov	 rcx, QWORD PTR [rax+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00269	4d 03 c2	 add	 r8, r10
  0026c	4c 89 45 88	 mov	 QWORD PTR t_lo$18[rbp-256], r8
  00270	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00276	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0027a	4c 89 5d 90	 mov	 QWORD PTR t_hi$19[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0027e	49 1b c8	 sbb	 rcx, r8
  00281	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00285	48 8b 4b 60	 mov	 rcx, QWORD PTR [rbx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00289	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  0028d	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00292	48 8b 48 60	 mov	 rcx, QWORD PTR [rax+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00296	4d 03 c3	 add	 r8, r11
  00299	4c 89 45 98	 mov	 QWORD PTR t_lo$20[rbp-256], r8
  0029d	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002a3	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002a7	4c 89 55 a0	 mov	 QWORD PTR t_hi$21[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002ab	49 1b c8	 sbb	 rcx, r8
  002ae	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  002b2	48 8b 4b 68	 mov	 rcx, QWORD PTR [rbx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002b6	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  002ba	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  002bf	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002c3	4d 03 c2	 add	 r8, r10
  002c6	4c 89 45 a8	 mov	 QWORD PTR t_lo$22[rbp-256], r8
  002ca	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002d0	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002d4	4c 89 5d b0	 mov	 QWORD PTR t_hi$23[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002d8	49 1b c8	 sbb	 rcx, r8
  002db	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  002df	48 8b 4b 70	 mov	 rcx, QWORD PTR [rbx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002e3	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  002e7	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  002ec	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002f0	4d 03 c3	 add	 r8, r11
  002f3	4c 89 45 b8	 mov	 QWORD PTR t_lo$24[rbp-256], r8
  002f7	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi
  002fd	4c 89 55 c0	 mov	 QWORD PTR t_hi$25[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00301	41 80 c1 ff	 add	 r9b, -1
  00305	49 1b c8	 sbb	 rcx, r8
  00308	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0030c	48 8b 4b 78	 mov	 rcx, QWORD PTR [rbx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00310	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00314	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00319	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0031d	4d 03 c2	 add	 r8, r10
  00320	4c 89 45 c8	 mov	 QWORD PTR t_lo$26[rbp-256], r8
  00324	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0032a	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0032e	4c 89 5d d0	 mov	 QWORD PTR t_hi$27[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00332	49 1b c8	 sbb	 rcx, r8
  00335	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00339	48 8b 8b 80 00
	00 00		 mov	 rcx, QWORD PTR [rbx+128]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00340	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00344	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00349	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00350	4d 03 c3	 add	 r8, r11
  00353	4c 89 45 d8	 mov	 QWORD PTR t_lo$28[rbp-256], r8
  00357	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0035d	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00361	4c 89 55 e0	 mov	 QWORD PTR t_hi$29[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00365	49 1b c8	 sbb	 rcx, r8
  00368	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0036f	48 8b 8b 88 00
	00 00		 mov	 rcx, QWORD PTR [rbx+136]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00376	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  0037a	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0037f	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00386	4d 03 c2	 add	 r8, r10
  00389	4c 89 45 e8	 mov	 QWORD PTR t_lo$30[rbp-256], r8
  0038d	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00393	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00397	4c 89 5d f0	 mov	 QWORD PTR t_hi$31[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0039b	49 1b c8	 sbb	 rcx, r8
  0039e	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  003a5	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003ac	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  003b0	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  003b5	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  003bc	4d 03 c3	 add	 r8, r11
  003bf	4c 89 45 f8	 mov	 QWORD PTR t_lo$32[rbp-256], r8
  003c3	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003c9	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  003cd	4c 89 55 00	 mov	 QWORD PTR t_hi$33[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003d1	49 1b c8	 sbb	 rcx, r8
  003d4	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  003db	48 8b 8b 98 00
	00 00		 mov	 rcx, QWORD PTR [rbx+152]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003e2	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  003e6	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  003eb	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  003f2	4d 03 c2	 add	 r8, r10
  003f5	4c 89 45 08	 mov	 QWORD PTR t_lo$34[rbp-256], r8
  003f9	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003ff	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00403	4c 89 5d 10	 mov	 QWORD PTR t_hi$35[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00407	49 1b c8	 sbb	 rcx, r8
  0040a	48 89 88 98 00
	00 00		 mov	 QWORD PTR [rax+152], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00411	48 8b 8b a0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+160]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00418	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  0041c	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00421	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00428	4d 03 c3	 add	 r8, r11
  0042b	4c 89 45 18	 mov	 QWORD PTR t_lo$36[rbp-256], r8
  0042f	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00435	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00439	4c 89 55 20	 mov	 QWORD PTR t_hi$37[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0043d	49 1b c8	 sbb	 rcx, r8
  00440	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00447	48 8b 8b a8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+168]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0044e	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00452	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00457	48 8b 88 a8 00
	00 00		 mov	 rcx, QWORD PTR [rax+168]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0045e	4d 03 c2	 add	 r8, r10
  00461	4c 89 45 28	 mov	 QWORD PTR t_lo$38[rbp-256], r8
  00465	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0046b	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0046f	4c 89 5d 30	 mov	 QWORD PTR t_hi$39[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00473	49 1b c8	 sbb	 rcx, r8
  00476	48 89 88 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0047d	48 8b 8b b0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+176]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00484	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00488	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0048d	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00494	4d 03 c3	 add	 r8, r11
  00497	4c 89 45 38	 mov	 QWORD PTR t_lo$40[rbp-256], r8
  0049b	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004a1	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  004a5	4c 89 55 40	 mov	 QWORD PTR t_hi$41[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004a9	49 1b c8	 sbb	 rcx, r8
  004ac	48 89 88 b0 00
	00 00		 mov	 QWORD PTR [rax+176], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  004b3	48 8b 8b b8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+184]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004ba	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  004be	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  004c3	48 8b 88 b8 00
	00 00		 mov	 rcx, QWORD PTR [rax+184]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  004ca	4d 03 c2	 add	 r8, r10
  004cd	4c 89 45 48	 mov	 QWORD PTR t_lo$42[rbp-256], r8
  004d1	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004d7	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  004db	4c 89 5d 50	 mov	 QWORD PTR t_hi$43[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004df	49 1b c8	 sbb	 rcx, r8
  004e2	48 89 88 b8 00
	00 00		 mov	 QWORD PTR [rax+184], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  004e9	48 8b 8b c0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+192]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004f0	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  004f4	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  004f9	48 8b 88 c0 00
	00 00		 mov	 rcx, QWORD PTR [rax+192]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00500	4d 03 c3	 add	 r8, r11
  00503	4c 89 45 58	 mov	 QWORD PTR t_lo$44[rbp-256], r8
  00507	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0050d	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00511	4c 89 55 60	 mov	 QWORD PTR t_hi$45[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00515	49 1b c8	 sbb	 rcx, r8
  00518	48 89 88 c0 00
	00 00		 mov	 QWORD PTR [rax+192], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0051f	48 8b 8b c8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+200]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00526	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  0052a	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0052f	48 8b 88 c8 00
	00 00		 mov	 rcx, QWORD PTR [rax+200]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00536	4d 03 c2	 add	 r8, r10
  00539	4c 89 45 68	 mov	 QWORD PTR t_lo$46[rbp-256], r8
  0053d	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00543	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00547	4c 89 5d 70	 mov	 QWORD PTR t_hi$47[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0054b	49 1b c8	 sbb	 rcx, r8
  0054e	48 89 88 c8 00
	00 00		 mov	 QWORD PTR [rax+200], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00555	48 8b 8b d0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+208]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0055c	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00560	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00565	48 8b 88 d0 00
	00 00		 mov	 rcx, QWORD PTR [rax+208]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0056c	4d 03 c3	 add	 r8, r11
  0056f	4c 89 45 78	 mov	 QWORD PTR t_lo$48[rbp-256], r8
  00573	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00579	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0057d	4c 89 95 80 00
	00 00		 mov	 QWORD PTR t_hi$49[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00584	49 1b c8	 sbb	 rcx, r8
  00587	48 89 88 d0 00
	00 00		 mov	 QWORD PTR [rax+208], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0058e	48 8b 8b d8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+216]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00595	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00599	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0059e	48 8b 88 d8 00
	00 00		 mov	 rcx, QWORD PTR [rax+216]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  005a5	4d 03 c2	 add	 r8, r10
  005a8	4c 89 85 88 00
	00 00		 mov	 QWORD PTR t_lo$50[rbp-256], r8
  005af	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005b5	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  005b9	4c 89 9d 90 00
	00 00		 mov	 QWORD PTR t_hi$51[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005c0	49 1b c8	 sbb	 rcx, r8
  005c3	48 89 88 d8 00
	00 00		 mov	 QWORD PTR [rax+216], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  005ca	48 8b 8b e0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+224]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005d1	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  005d5	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  005da	48 8b 88 e0 00
	00 00		 mov	 rcx, QWORD PTR [rax+224]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  005e1	4d 03 c3	 add	 r8, r11
  005e4	4c 89 85 98 00
	00 00		 mov	 QWORD PTR t_lo$52[rbp-256], r8
  005eb	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005f1	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  005f5	4c 89 95 a0 00
	00 00		 mov	 QWORD PTR t_hi$53[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005fc	49 1b c8	 sbb	 rcx, r8
  005ff	48 89 88 e0 00
	00 00		 mov	 QWORD PTR [rax+224], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00606	48 8b 8b e8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+232]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0060d	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00611	c4 62 bb f6 d9	 mulx	 r11, r8, rcx

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00616	4d 03 c2	 add	 r8, r10
  00619	4c 89 85 a8 00
	00 00		 mov	 QWORD PTR t_lo$54[rbp-256], r8
  00620	66 4c 0f 38 f6
	df		 adcx	 r11, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00626	48 8b 88 e8 00
	00 00		 mov	 rcx, QWORD PTR [rax+232]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0062d	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00631	4c 89 9d b0 00
	00 00		 mov	 QWORD PTR t_hi$55[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00638	49 1b c8	 sbb	 rcx, r8
  0063b	48 89 88 e8 00
	00 00		 mov	 QWORD PTR [rax+232], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00642	48 8b 8b f0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+240]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00649	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  0064d	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00652	48 8b 88 f0 00
	00 00		 mov	 rcx, QWORD PTR [rax+240]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00659	4d 03 c3	 add	 r8, r11
  0065c	4c 89 85 b8 00
	00 00		 mov	 QWORD PTR t_lo$56[rbp-256], r8
  00663	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00669	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0066d	4c 89 95 c0 00
	00 00		 mov	 QWORD PTR t_hi$57[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00674	49 1b c8	 sbb	 rcx, r8
  00677	48 89 88 f0 00
	00 00		 mov	 QWORD PTR [rax+240], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0067e	48 8b 8b f8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+248]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00685	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00689	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0068e	48 8b 88 f8 00
	00 00		 mov	 rcx, QWORD PTR [rax+248]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00695	4d 03 c2	 add	 r8, r10
  00698	4c 89 85 c8 00
	00 00		 mov	 QWORD PTR t_lo$58[rbp-256], r8
  0069f	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  006a5	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  006a9	4c 89 9d d0 00
	00 00		 mov	 QWORD PTR t_hi$59[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  006b0	49 1b c8	 sbb	 rcx, r8
  006b3	48 89 88 f8 00
	00 00		 mov	 QWORD PTR [rax+248], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  006ba	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  006bf	40 0f 92 c6	 setb	 sil
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1065 :             u_ptr += 32;

  006c3	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H

; 1066 :             v_ptr += 32;

  006c9	48 81 c3 00 01
	00 00		 add	 rbx, 256		; 00000100H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  006d0	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1031 :         while (count != 0)

  006d8	49 83 ef 01	 sub	 r15, 1
  006dc	0f 85 70 f9 ff
	ff		 jne	 $LL2@SubtructOn
$LN3@SubtructOn:

; 1067 :             --count;
; 1068 : #ifdef ENABLED_PERFORMANCE_COUNTER
; 1069 :             if (sizeof(k) == sizeof(_UINT64_T))
; 1070 :                 AddToMULTI64Counter(32);
; 1071 :             else
; 1072 :                 AddToMULTI32Counter(32);
; 1073 : #endif
; 1074 :         }
; 1075 : 
; 1076 :         if (v_count & 0x10)

  006e2	41 f6 c6 10	 test	 r14b, 16
  006e6	0f 84 42 03 00
	00		 je	 $LN8@SubtructOn

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  006ec	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  006ef	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  006f4	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  006f7	4d 03 c3	 add	 r8, r11
  006fa	4c 89 85 d8 00
	00 00		 mov	 QWORD PTR t_lo$60[rbp-256], r8
  00701	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00707	40 80 c6 ff	 add	 sil, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0070b	4c 89 95 e0 00
	00 00		 mov	 QWORD PTR t_hi$61[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00712	49 1b c8	 sbb	 rcx, r8
  00715	48 89 08	 mov	 QWORD PTR [rax], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00718	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0071c	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00720	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00725	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00729	4d 03 c2	 add	 r8, r10
  0072c	4c 89 85 e8 00
	00 00		 mov	 QWORD PTR t_lo$62[rbp-256], r8
  00733	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00739	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0073d	4c 89 9d f0 00
	00 00		 mov	 QWORD PTR t_hi$63[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00744	49 1b c8	 sbb	 rcx, r8
  00747	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0074b	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0074f	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00753	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00758	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0075c	4d 03 c3	 add	 r8, r11
  0075f	4c 89 85 f8 00
	00 00		 mov	 QWORD PTR t_lo$64[rbp-256], r8
  00766	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0076c	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00770	4c 89 95 00 01
	00 00		 mov	 QWORD PTR t_hi$65[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00777	49 1b c8	 sbb	 rcx, r8
  0077a	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0077e	48 8b 4b 18	 mov	 rcx, QWORD PTR [rbx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00782	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00786	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0078b	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0078f	4d 03 c2	 add	 r8, r10
  00792	4c 89 85 08 01
	00 00		 mov	 QWORD PTR t_lo$66[rbp-256], r8
  00799	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0079f	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  007a3	4c 89 9d 10 01
	00 00		 mov	 QWORD PTR t_hi$67[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007aa	49 1b c8	 sbb	 rcx, r8
  007ad	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  007b1	48 8b 4b 20	 mov	 rcx, QWORD PTR [rbx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007b5	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  007b9	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  007be	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  007c2	4d 03 c3	 add	 r8, r11
  007c5	4c 89 85 18 01
	00 00		 mov	 QWORD PTR t_lo$68[rbp-256], r8
  007cc	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007d2	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  007d6	4c 89 95 20 01
	00 00		 mov	 QWORD PTR t_hi$69[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007dd	49 1b c8	 sbb	 rcx, r8
  007e0	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  007e4	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007e8	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  007ec	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  007f1	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  007f5	4d 03 c2	 add	 r8, r10
  007f8	4c 89 85 28 01
	00 00		 mov	 QWORD PTR t_lo$70[rbp-256], r8
  007ff	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00805	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00809	4c 89 9d 30 01
	00 00		 mov	 QWORD PTR t_hi$71[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00810	49 1b c8	 sbb	 rcx, r8
  00813	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00817	48 8b 4b 30	 mov	 rcx, QWORD PTR [rbx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0081b	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  0081f	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00824	48 8b 48 30	 mov	 rcx, QWORD PTR [rax+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00828	4d 03 c3	 add	 r8, r11
  0082b	4c 89 85 38 01
	00 00		 mov	 QWORD PTR t_lo$72[rbp-256], r8
  00832	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00838	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0083c	4c 89 95 40 01
	00 00		 mov	 QWORD PTR t_hi$73[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00843	49 1b c8	 sbb	 rcx, r8
  00846	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0084a	48 8b 4b 38	 mov	 rcx, QWORD PTR [rbx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0084e	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00852	c4 62 bb f6 d9	 mulx	 r11, r8, rcx

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00857	4d 03 c2	 add	 r8, r10
  0085a	4c 89 85 48 01
	00 00		 mov	 QWORD PTR t_lo$74[rbp-256], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00861	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00865	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0086b	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0086f	4c 89 9d 50 01
	00 00		 mov	 QWORD PTR t_hi$75[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00876	49 1b c8	 sbb	 rcx, r8
  00879	48 89 48 38	 mov	 QWORD PTR [rax+56], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0087d	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00881	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00885	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0088a	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0088e	4d 03 c3	 add	 r8, r11
  00891	4c 89 85 58 01
	00 00		 mov	 QWORD PTR t_lo$76[rbp-256], r8
  00898	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0089e	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008a2	4c 89 95 60 01
	00 00		 mov	 QWORD PTR t_hi$77[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008a9	49 1b c8	 sbb	 rcx, r8
  008ac	48 89 48 40	 mov	 QWORD PTR [rax+64], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  008b0	48 8b 4b 48	 mov	 rcx, QWORD PTR [rbx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008b4	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  008b8	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  008bd	48 8b 48 48	 mov	 rcx, QWORD PTR [rax+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008c1	4d 03 c2	 add	 r8, r10
  008c4	4c 89 85 68 01
	00 00		 mov	 QWORD PTR t_lo$78[rbp-256], r8
  008cb	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008d1	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008d5	4c 89 9d 70 01
	00 00		 mov	 QWORD PTR t_hi$79[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008dc	49 1b c8	 sbb	 rcx, r8
  008df	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  008e3	48 8b 4b 50	 mov	 rcx, QWORD PTR [rbx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008e7	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  008eb	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  008f0	48 8b 48 50	 mov	 rcx, QWORD PTR [rax+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008f4	4d 03 c3	 add	 r8, r11
  008f7	4c 89 85 78 01
	00 00		 mov	 QWORD PTR t_lo$80[rbp-256], r8
  008fe	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00904	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00908	4c 89 95 80 01
	00 00		 mov	 QWORD PTR t_hi$81[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0090f	49 1b c8	 sbb	 rcx, r8
  00912	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00916	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0091a	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  0091e	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00923	48 8b 48 58	 mov	 rcx, QWORD PTR [rax+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00927	4d 03 c2	 add	 r8, r10
  0092a	4c 89 85 88 01
	00 00		 mov	 QWORD PTR t_lo$82[rbp-256], r8
  00931	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00937	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0093b	4c 89 9d 90 01
	00 00		 mov	 QWORD PTR t_hi$83[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00942	49 1b c8	 sbb	 rcx, r8
  00945	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00949	48 8b 4b 60	 mov	 rcx, QWORD PTR [rbx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0094d	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00951	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00956	48 8b 48 60	 mov	 rcx, QWORD PTR [rax+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0095a	4d 03 c3	 add	 r8, r11
  0095d	4c 89 85 98 01
	00 00		 mov	 QWORD PTR t_lo$84[rbp-256], r8
  00964	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0096a	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0096e	4c 89 95 a0 01
	00 00		 mov	 QWORD PTR t_hi$85[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00975	49 1b c8	 sbb	 rcx, r8
  00978	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  0097c	48 8b 4b 68	 mov	 rcx, QWORD PTR [rbx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00980	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00984	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00989	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0098d	4d 03 c2	 add	 r8, r10
  00990	4c 89 85 a8 01
	00 00		 mov	 QWORD PTR t_lo$86[rbp-256], r8
  00997	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0099d	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  009a1	4c 89 9d b0 01
	00 00		 mov	 QWORD PTR t_hi$87[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009a8	49 1b c8	 sbb	 rcx, r8
  009ab	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  009af	48 8b 4b 70	 mov	 rcx, QWORD PTR [rbx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009b3	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  009b7	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  009bc	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  009c0	4d 03 c3	 add	 r8, r11
  009c3	4c 89 85 b8 01
	00 00		 mov	 QWORD PTR t_lo$88[rbp-256], r8
  009ca	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi
  009d0	4c 89 95 c0 01
	00 00		 mov	 QWORD PTR t_hi$89[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009d7	41 80 c1 ff	 add	 r9b, -1
  009db	49 1b c8	 sbb	 rcx, r8
  009de	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  009e2	48 8b 4b 78	 mov	 rcx, QWORD PTR [rbx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009e6	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  009ea	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  009ef	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  009f3	4d 03 c2	 add	 r8, r10
  009f6	4c 89 85 c8 01
	00 00		 mov	 QWORD PTR t_lo$90[rbp-256], r8
  009fd	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a03	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a07	4c 89 9d d0 01
	00 00		 mov	 QWORD PTR t_hi$91[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a0e	49 1b c8	 sbb	 rcx, r8
  00a11	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00a15	b9 10 00 00 00	 mov	 ecx, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a1a	40 0f 92 c6	 setb	 sil
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1094 :             u_ptr += 16;

  00a1e	48 83 e8 80	 sub	 rax, -128		; ffffffffffffff80H

; 1095 :             v_ptr += 16;

  00a22	48 83 eb 80	 sub	 rbx, -128		; ffffffffffffff80H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00a26	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx
$LN8@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1104 :         if (v_count & 0x8)

  00a2e	41 f6 c6 08	 test	 r14b, 8
  00a32	0f 84 aa 01 00
	00		 je	 $LN11@SubtructOn

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00a38	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00a3b	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00a40	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a43	4d 03 c3	 add	 r8, r11
  00a46	4c 89 85 d8 01
	00 00		 mov	 QWORD PTR t_lo$92[rbp-256], r8
  00a4d	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a53	40 80 c6 ff	 add	 sil, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a57	4c 89 95 e0 01
	00 00		 mov	 QWORD PTR t_hi$93[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a5e	49 1b c8	 sbb	 rcx, r8
  00a61	48 89 08	 mov	 QWORD PTR [rax], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00a64	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a68	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00a6c	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00a71	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a75	4d 03 c2	 add	 r8, r10
  00a78	4c 89 85 e8 01
	00 00		 mov	 QWORD PTR t_lo$94[rbp-256], r8
  00a7f	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a85	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a89	4c 89 9d f0 01
	00 00		 mov	 QWORD PTR t_hi$95[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a90	49 1b c8	 sbb	 rcx, r8
  00a93	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00a97	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a9b	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00a9f	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00aa4	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00aa8	4d 03 c3	 add	 r8, r11
  00aab	4c 89 85 f8 01
	00 00		 mov	 QWORD PTR t_lo$96[rbp-256], r8
  00ab2	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00ab8	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00abc	4c 89 95 00 02
	00 00		 mov	 QWORD PTR t_hi$97[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00ac3	49 1b c8	 sbb	 rcx, r8
  00ac6	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00aca	48 8b 4b 18	 mov	 rcx, QWORD PTR [rbx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00ace	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00ad2	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00ad7	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00adb	4d 03 c2	 add	 r8, r10
  00ade	4c 89 85 08 02
	00 00		 mov	 QWORD PTR t_lo$98[rbp-256], r8
  00ae5	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00aeb	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00aef	4c 89 9d 10 02
	00 00		 mov	 QWORD PTR t_hi$99[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00af6	49 1b c8	 sbb	 rcx, r8
  00af9	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00afd	48 8b 4b 20	 mov	 rcx, QWORD PTR [rbx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b01	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00b05	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00b0a	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b0e	4d 03 c3	 add	 r8, r11
  00b11	4c 89 85 18 02
	00 00		 mov	 QWORD PTR t_lo$100[rbp-256], r8
  00b18	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b1e	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b22	4c 89 95 20 02
	00 00		 mov	 QWORD PTR t_hi$101[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b29	49 1b c8	 sbb	 rcx, r8
  00b2c	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00b30	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b34	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00b38	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00b3d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b41	4d 03 c2	 add	 r8, r10
  00b44	4c 89 85 28 02
	00 00		 mov	 QWORD PTR t_lo$102[rbp-256], r8
  00b4b	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b51	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b55	4c 89 9d 30 02
	00 00		 mov	 QWORD PTR t_hi$103[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b5c	49 1b c8	 sbb	 rcx, r8
  00b5f	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00b63	48 8b 4b 30	 mov	 rcx, QWORD PTR [rbx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b67	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00b6b	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00b70	48 8b 48 30	 mov	 rcx, QWORD PTR [rax+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b74	4d 03 c3	 add	 r8, r11
  00b77	4c 89 85 38 02
	00 00		 mov	 QWORD PTR t_lo$104[rbp-256], r8
  00b7e	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b84	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b88	4c 89 95 40 02
	00 00		 mov	 QWORD PTR t_hi$105[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b8f	49 1b c8	 sbb	 rcx, r8
  00b92	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00b96	48 8b 4b 38	 mov	 rcx, QWORD PTR [rbx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b9a	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00b9e	c4 62 bb f6 d9	 mulx	 r11, r8, rcx

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00ba3	4d 03 c2	 add	 r8, r10
  00ba6	4c 89 85 48 02
	00 00		 mov	 QWORD PTR t_lo$106[rbp-256], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00bad	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00bb1	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00bb7	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00bbb	4c 89 9d 50 02
	00 00		 mov	 QWORD PTR t_hi$107[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00bc2	49 1b c8	 sbb	 rcx, r8
  00bc5	48 89 48 38	 mov	 QWORD PTR [rax+56], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00bc9	b9 08 00 00 00	 mov	 ecx, 8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00bce	40 0f 92 c6	 setb	 sil
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1114 :             u_ptr += 8;

  00bd2	48 83 c0 40	 add	 rax, 64			; 00000040H

; 1115 :             v_ptr += 8;

  00bd6	48 83 c3 40	 add	 rbx, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00bda	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx
$LN11@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1124 :         if (v_count & 0x4)

  00be2	41 f6 c6 04	 test	 r14b, 4
  00be6	0f 84 de 00 00
	00		 je	 $LN14@SubtructOn

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00bec	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00bef	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00bf4	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00bf7	4d 03 c3	 add	 r8, r11
  00bfa	4c 89 85 58 02
	00 00		 mov	 QWORD PTR t_lo$108[rbp-256], r8
  00c01	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c07	40 80 c6 ff	 add	 sil, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c0b	4c 89 95 60 02
	00 00		 mov	 QWORD PTR t_hi$109[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c12	49 1b c8	 sbb	 rcx, r8
  00c15	48 89 08	 mov	 QWORD PTR [rax], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00c18	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c1c	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00c20	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00c25	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c29	4d 03 c2	 add	 r8, r10
  00c2c	4c 89 85 68 02
	00 00		 mov	 QWORD PTR t_lo$110[rbp-256], r8
  00c33	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c39	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c3d	4c 89 9d 70 02
	00 00		 mov	 QWORD PTR t_hi$111[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c44	49 1b c8	 sbb	 rcx, r8
  00c47	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00c4b	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c4f	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00c53	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00c58	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c5c	4d 03 c3	 add	 r8, r11
  00c5f	4c 89 85 78 02
	00 00		 mov	 QWORD PTR t_lo$112[rbp-256], r8
  00c66	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c6c	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c70	4c 89 95 80 02
	00 00		 mov	 QWORD PTR t_hi$113[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c77	49 1b c8	 sbb	 rcx, r8
  00c7a	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00c7e	48 8b 4b 18	 mov	 rcx, QWORD PTR [rbx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c82	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00c86	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00c8b	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c8f	4d 03 c2	 add	 r8, r10
  00c92	4c 89 85 88 02
	00 00		 mov	 QWORD PTR t_lo$114[rbp-256], r8
  00c99	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c9f	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00ca3	4c 89 9d 90 02
	00 00		 mov	 QWORD PTR t_hi$115[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00caa	49 1b c8	 sbb	 rcx, r8
  00cad	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00cb1	b9 04 00 00 00	 mov	 ecx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00cb6	40 0f 92 c6	 setb	 sil
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1130 :             u_ptr += 4;

  00cba	48 83 c0 20	 add	 rax, 32			; 00000020H

; 1131 :             v_ptr += 4;

  00cbe	48 83 c3 20	 add	 rbx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00cc2	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx
$LN14@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1140 :         if (v_count & 0x2)

  00cca	41 f6 c6 02	 test	 r14b, 2
  00cce	74 78		 je	 SHORT $LN17@SubtructOn

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00cd0	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00cd3	c4 62 bb f6 d1	 mulx	 r10, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00cd8	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00cdb	4d 03 c3	 add	 r8, r11
  00cde	4c 89 85 98 02
	00 00		 mov	 QWORD PTR t_lo$116[rbp-256], r8
  00ce5	66 4c 0f 38 f6
	d7		 adcx	 r10, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00ceb	40 80 c6 ff	 add	 sil, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00cef	4c 89 95 a0 02
	00 00		 mov	 QWORD PTR t_hi$117[rbp-256], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00cf6	49 1b c8	 sbb	 rcx, r8
  00cf9	48 89 08	 mov	 QWORD PTR [rax], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00cfc	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d00	41 0f 92 c1	 setb	 r9b

; 233  :             return (_mulx_u64(u, v, w_hi));

  00d04	c4 62 bb f6 d9	 mulx	 r11, r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00d09	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00d0d	4d 03 c2	 add	 r8, r10
  00d10	4c 89 85 a8 02
	00 00		 mov	 QWORD PTR t_lo$118[rbp-256], r8
  00d17	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d1d	41 80 c1 ff	 add	 r9b, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00d21	4c 89 9d b0 02
	00 00		 mov	 QWORD PTR t_hi$119[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d28	49 1b c8	 sbb	 rcx, r8
  00d2b	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00d2f	b9 02 00 00 00	 mov	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d34	40 0f 92 c6	 setb	 sil
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1144 :             u_ptr += 2;

  00d38	48 83 c0 10	 add	 rax, 16

; 1145 :             v_ptr += 2;

  00d3c	48 83 c3 10	 add	 rbx, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00d40	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx
$LN17@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1154 :         if (v_count & 0x1)

  00d48	41 f6 c6 01	 test	 r14b, 1
  00d4c	74 3e		 je	 SHORT $LN20@SubtructOn

; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00d4e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00d51	c4 62 b3 f6 c1	 mulx	 r8, r9, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00d56	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00d59	4d 03 cb	 add	 r9, r11
  00d5c	4d 8b d8	 mov	 r11, r8
  00d5f	4c 89 8d b8 02
	00 00		 mov	 QWORD PTR t_lo$120[rbp-256], r9
  00d66	66 4c 0f 38 f6
	df		 adcx	 r11, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d6c	40 80 c6 ff	 add	 sil, -1

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00d70	4c 89 9d c0 02
	00 00		 mov	 QWORD PTR t_hi$121[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d77	49 1b c9	 sbb	 rcx, r9
  00d7a	48 89 08	 mov	 QWORD PTR [rax], rcx
  00d7d	40 0f 92 c6	 setb	 sil
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1157 :             u_ptr += 1;

  00d81	48 83 c0 08	 add	 rax, 8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 337  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI64);

  00d85	f0 ff 05 00 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A
$LN20@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1167 :         c = _SUBTRUCT_UNIT(c, *u_ptr, k, u_ptr);

  00d8c	48 8b 08	 mov	 rcx, QWORD PTR [rax]

; 1169 : 
; 1170 :         return (DoBorrow(c, u_ptr, u_buf + u_buf_len + 1 - u_ptr));

  00d8f	4e 8d 04 ed 08
	00 00 00	 lea	 r8, QWORD PTR [r13*8+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d97	40 80 c6 ff	 add	 sil, -1
  00d9b	49 1b cb	 sbb	 rcx, r11
  00d9e	48 89 08	 mov	 QWORD PTR [rax], rcx
  00da1	0f 92 c2	 setb	 dl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1168 :         u_ptr += 1;

  00da4	48 83 c0 08	 add	 rax, 8

; 1169 : 
; 1170 :         return (DoBorrow(c, u_ptr, u_buf + u_buf_len + 1 - u_ptr));

  00da8	4c 2b c0	 sub	 r8, rax
  00dab	4d 03 c4	 add	 r8, r12
  00dae	49 c1 f8 03	 sar	 r8, 3

; 814  :             if (u_count <= 0)

  00db2	4d 85 c0	 test	 r8, r8
  00db5	74 1d		 je	 SHORT $LN692@SubtructOn
$LL679@SubtructOn:

; 819  :                 {
; 820  :                     // かつそれでも桁借りを行う必要がある場合
; 821  : 
; 822  :                     // 減算結果が負になってしまったので呼び出し元に通知する。
; 823  :                     return (TRUE);
; 824  :                 }
; 825  : 
; 826  :                 // u の最上位に達してしまった場合はいずれにしろループを中断して正常復帰する。
; 827  : 
; 828  :                 return (FALSE);
; 829  :             }
; 830  :             else if (c)

  00db7	84 d2		 test	 dl, dl
  00db9	74 1f		 je	 SHORT $LN685@SubtructOn

; 831  :             {
; 832  :                 // u の最上位に達しておらず、かつボローが立っている場合
; 833  : 
; 834  :                 // 桁借りを継続する
; 835  :                 c = _SUBTRUCT_UNIT(c, *up, 0, up);

  00dbb	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00dbe	80 c2 ff	 add	 dl, -1
  00dc1	48 1b cf	 sbb	 rcx, rdi
  00dc4	48 89 08	 mov	 QWORD PTR [rax], rcx
  00dc7	0f 92 c2	 setb	 dl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 836  :                 ++up;

  00dca	48 83 c0 08	 add	 rax, 8

; 837  :                 --u_count;

  00dce	49 83 e8 01	 sub	 r8, 1
  00dd2	75 e3		 jne	 SHORT $LL679@SubtructOn
$LN692@SubtructOn:

; 815  :             {
; 816  :                 // u の最上位まで達してしまった場合
; 817  : 
; 818  :                 if (c)

  00dd4	84 d2		 test	 dl, dl
  00dd6	40 0f 95 c7	 setne	 dil
$LN685@SubtructOn:

; 1171 :     }

  00dda	8b c7		 mov	 eax, edi
  00ddc	48 81 c4 d8 03
	00 00		 add	 rsp, 984		; 000003d8H
  00de3	41 5f		 pop	 r15
  00de5	41 5e		 pop	 r14
  00de7	41 5d		 pop	 r13
  00de9	41 5c		 pop	 r12
  00deb	5f		 pop	 rdi
  00dec	5e		 pop	 rsi
  00ded	5b		 pop	 rbx
  00dee	5d		 pop	 rbp
  00def	c3		 ret	 0
?SubtructOneLineX@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z ENDP ; Palmtree::Math::Core::Internal::SubtructOneLineX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z
_TEXT	SEGMENT
t_hi$1 = 0
t_lo$2 = 8
t_hi$3 = 16
t_lo$4 = 24
t_hi$5 = 32
t_lo$6 = 40
t_hi$7 = 48
t_lo$8 = 56
t_hi$9 = 64
t_lo$10 = 72
t_hi$11 = 80
t_lo$12 = 88
t_hi$13 = 96
t_lo$14 = 104
t_hi$15 = 112
t_lo$16 = 120
t_hi$17 = 128
t_lo$18 = 136
t_hi$19 = 144
t_lo$20 = 152
t_hi$21 = 160
t_lo$22 = 168
t_hi$23 = 176
t_lo$24 = 184
t_hi$25 = 192
t_lo$26 = 200
t_hi$27 = 208
t_lo$28 = 216
t_hi$29 = 224
t_lo$30 = 232
t_hi$31 = 240
t_lo$32 = 248
t_hi$33 = 256
t_lo$34 = 264
t_hi$35 = 272
t_lo$36 = 280
t_hi$37 = 288
t_lo$38 = 296
t_hi$39 = 304
t_lo$40 = 312
t_hi$41 = 320
t_lo$42 = 328
t_hi$43 = 336
t_lo$44 = 344
t_hi$45 = 352
t_lo$46 = 360
t_hi$47 = 368
t_lo$48 = 376
t_hi$49 = 384
t_lo$50 = 392
t_hi$51 = 400
t_lo$52 = 408
t_hi$53 = 416
t_lo$54 = 424
t_hi$55 = 432
t_lo$56 = 440
t_hi$57 = 448
t_lo$58 = 456
t_hi$59 = 464
t_lo$60 = 472
t_hi$61 = 480
t_lo$62 = 488
t_hi$63 = 496
t_lo$64 = 504
t_hi$65 = 512
t_lo$66 = 520
t_hi$67 = 528
t_lo$68 = 536
t_hi$69 = 544
t_lo$70 = 552
t_hi$71 = 560
t_lo$72 = 568
t_hi$73 = 576
t_lo$74 = 584
t_hi$75 = 592
t_lo$76 = 600
t_hi$77 = 608
t_lo$78 = 616
t_hi$79 = 624
t_lo$80 = 632
t_hi$81 = 640
t_lo$82 = 648
t_hi$83 = 656
t_lo$84 = 664
t_hi$85 = 672
t_lo$86 = 680
t_hi$87 = 688
t_lo$88 = 696
t_hi$89 = 704
t_lo$90 = 712
t_hi$91 = 720
t_lo$92 = 728
t_hi$93 = 736
t_lo$94 = 744
t_hi$95 = 752
t_lo$96 = 760
t_hi$97 = 768
t_lo$98 = 776
t_hi$99 = 784
t_lo$100 = 792
t_hi$101 = 800
t_lo$102 = 808
t_hi$103 = 816
t_lo$104 = 824
t_hi$105 = 832
t_lo$106 = 840
t_hi$107 = 848
t_lo$108 = 856
t_hi$109 = 864
t_lo$110 = 872
t_hi$111 = 880
t_lo$112 = 888
t_hi$113 = 896
t_lo$114 = 904
t_hi$115 = 912
t_lo$116 = 920
t_hi$117 = 928
t_lo$118 = 936
t_hi$119 = 944
t_lo$120 = 952
t_hi$121 = 960
t_hi$122 = 1056
u_buf$ = 1056
t_lo$123 = 1064
u_buf_len$ = 1064
t_hi$124 = 1072
v_buf$ = 1072
t_lo$125 = 1080
v_buf_len$ = 1080
t_lo$126 = 1088
q_index$ = 1088
q_$ = 1096
?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z PROC ; Palmtree::Math::Core::Internal::SubtructOneLine, COMDAT

; 872  :     {

  00000	40 55		 push	 rbp
  00002	53		 push	 rbx
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 54		 push	 r12
  00007	41 55		 push	 r13
  00009	41 56		 push	 r14
  0000b	41 57		 push	 r15
  0000d	48 8d ac 24 28
	fd ff ff	 lea	 rbp, QWORD PTR [rsp-728]
  00015	48 81 ec d8 03
	00 00		 sub	 rsp, 984		; 000003d8H

; 873  :         __UNIT_TYPE* u_ptr = &u_buf[q_index];

  0001c	48 8b 85 40 03
	00 00		 mov	 rax, QWORD PTR q_index$[rbp-256]

; 874  :         __UNIT_TYPE* v_ptr = &v_buf[0];
; 875  :         __UNIT_TYPE v_count = v_buf_len;
; 876  :         __UNIT_TYPE k = 0;

  00023	45 33 f6	 xor	 r14d, r14d

; 880  :         while (count != 0)

  00026	48 8b bd 48 03
	00 00		 mov	 rdi, QWORD PTR q_$[rbp-256]
  0002d	4d 8b f9	 mov	 r15, r9
  00030	49 8b d8	 mov	 rbx, r8
  00033	49 c1 ef 05	 shr	 r15, 5
  00037	45 32 c0	 xor	 r8b, r8b
  0003a	49 8b f1	 mov	 rsi, r9
  0003d	4c 8d 14 c1	 lea	 r10, QWORD PTR [rcx+rax*8]
  00041	4c 8b ea	 mov	 r13, rdx
  00044	4c 8b e1	 mov	 r12, rcx
  00047	45 8b de	 mov	 r11d, r14d
  0004a	4d 85 ff	 test	 r15, r15
  0004d	0f 84 be 06 00
	00		 je	 $LN3@SubtructOn
  00053	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL2@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00060	48 8b c7	 mov	 rax, rdi
  00063	48 f7 23	 mul	 QWORD PTR [rbx]
  00066	48 8b c8	 mov	 rcx, rax
  00069	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0006c	49 8b 02	 mov	 rax, QWORD PTR [r10]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0006f	49 03 cb	 add	 rcx, r11
  00072	48 89 8d 40 03
	00 00		 mov	 QWORD PTR t_lo$126[rbp-256], rcx
  00079	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0007c	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00080	4c 89 8d 20 03
	00 00		 mov	 QWORD PTR t_hi$122[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00087	48 1b c1	 sbb	 rax, rcx
  0008a	49 89 02	 mov	 QWORD PTR [r10], rax

; 221  :             return (_umul128(u, v, w_hi));

  0008d	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00090	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00094	48 f7 63 08	 mul	 QWORD PTR [rbx+8]
  00098	48 8b c8	 mov	 rcx, rax
  0009b	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0009e	49 8b 42 08	 mov	 rax, QWORD PTR [r10+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000a2	49 03 c9	 add	 rcx, r9
  000a5	48 89 8d 28 03
	00 00		 mov	 QWORD PTR t_lo$123[rbp-256], rcx
  000ac	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000af	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000b3	4c 89 9d 30 03
	00 00		 mov	 QWORD PTR t_hi$124[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000ba	48 1b c1	 sbb	 rax, rcx
  000bd	49 89 42 08	 mov	 QWORD PTR [r10+8], rax

; 221  :             return (_umul128(u, v, w_hi));

  000c1	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000c4	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  000c8	48 f7 63 10	 mul	 QWORD PTR [rbx+16]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  000d2	49 8b 42 10	 mov	 rax, QWORD PTR [r10+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000d6	49 03 cb	 add	 rcx, r11
  000d9	48 89 8d 38 03
	00 00		 mov	 QWORD PTR t_lo$125[rbp-256], rcx
  000e0	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000e3	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000e7	4c 89 0c 24	 mov	 QWORD PTR t_hi$1[rsp], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000eb	48 1b c1	 sbb	 rax, rcx
  000ee	49 89 42 10	 mov	 QWORD PTR [r10+16], rax

; 221  :             return (_umul128(u, v, w_hi));

  000f2	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  000f5	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  000f9	48 f7 63 18	 mul	 QWORD PTR [rbx+24]
  000fd	48 8b c8	 mov	 rcx, rax
  00100	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00103	49 8b 42 18	 mov	 rax, QWORD PTR [r10+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00107	49 03 c9	 add	 rcx, r9
  0010a	48 89 4c 24 08	 mov	 QWORD PTR t_lo$2[rsp], rcx
  0010f	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00112	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00116	4c 89 5c 24 10	 mov	 QWORD PTR t_hi$3[rsp], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0011b	48 1b c1	 sbb	 rax, rcx
  0011e	49 89 42 18	 mov	 QWORD PTR [r10+24], rax

; 221  :             return (_umul128(u, v, w_hi));

  00122	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00125	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00129	48 f7 63 20	 mul	 QWORD PTR [rbx+32]
  0012d	48 8b c8	 mov	 rcx, rax
  00130	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00133	49 8b 42 20	 mov	 rax, QWORD PTR [r10+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00137	49 03 cb	 add	 rcx, r11
  0013a	48 89 4c 24 18	 mov	 QWORD PTR t_lo$4[rsp], rcx
  0013f	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00142	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00146	4c 89 4c 24 20	 mov	 QWORD PTR t_hi$5[rsp], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0014b	48 1b c1	 sbb	 rax, rcx
  0014e	49 89 42 20	 mov	 QWORD PTR [r10+32], rax

; 221  :             return (_umul128(u, v, w_hi));

  00152	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00155	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00159	48 f7 63 28	 mul	 QWORD PTR [rbx+40]
  0015d	48 8b c8	 mov	 rcx, rax
  00160	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00163	49 8b 42 28	 mov	 rax, QWORD PTR [r10+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00167	49 03 c9	 add	 rcx, r9
  0016a	48 89 4c 24 28	 mov	 QWORD PTR t_lo$6[rsp], rcx
  0016f	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00172	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00176	4c 89 5c 24 30	 mov	 QWORD PTR t_hi$7[rsp], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0017b	48 1b c1	 sbb	 rax, rcx
  0017e	49 89 42 28	 mov	 QWORD PTR [r10+40], rax

; 221  :             return (_umul128(u, v, w_hi));

  00182	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00185	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00189	48 f7 63 30	 mul	 QWORD PTR [rbx+48]
  0018d	4c 8b ca	 mov	 r9, rdx
  00190	48 8b c8	 mov	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00193	49 8b 42 30	 mov	 rax, QWORD PTR [r10+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00197	49 03 cb	 add	 rcx, r11
  0019a	48 89 4c 24 38	 mov	 QWORD PTR t_lo$8[rsp], rcx
  0019f	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001a2	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001a6	4c 89 4c 24 40	 mov	 QWORD PTR t_hi$9[rsp], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001ab	48 1b c1	 sbb	 rax, rcx
  001ae	49 89 42 30	 mov	 QWORD PTR [r10+48], rax

; 221  :             return (_umul128(u, v, w_hi));

  001b2	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001b5	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  001b9	48 f7 63 38	 mul	 QWORD PTR [rbx+56]
  001bd	48 8b c8	 mov	 rcx, rax
  001c0	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  001c3	49 8b 42 38	 mov	 rax, QWORD PTR [r10+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001c7	49 03 c9	 add	 rcx, r9
  001ca	48 89 4c 24 48	 mov	 QWORD PTR t_lo$10[rsp], rcx
  001cf	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001d2	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001d6	4c 89 5c 24 50	 mov	 QWORD PTR t_hi$11[rsp], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001db	48 1b c1	 sbb	 rax, rcx
  001de	49 89 42 38	 mov	 QWORD PTR [r10+56], rax

; 221  :             return (_umul128(u, v, w_hi));

  001e2	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  001e5	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  001e9	48 f7 63 40	 mul	 QWORD PTR [rbx+64]
  001ed	48 8b c8	 mov	 rcx, rax
  001f0	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  001f3	49 8b 42 40	 mov	 rax, QWORD PTR [r10+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001f7	49 03 cb	 add	 rcx, r11
  001fa	48 89 4c 24 58	 mov	 QWORD PTR t_lo$12[rsp], rcx
  001ff	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00202	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00206	4c 89 4c 24 60	 mov	 QWORD PTR t_hi$13[rsp], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0020b	48 1b c1	 sbb	 rax, rcx
  0020e	49 89 42 40	 mov	 QWORD PTR [r10+64], rax

; 221  :             return (_umul128(u, v, w_hi));

  00212	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00215	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00219	48 f7 63 48	 mul	 QWORD PTR [rbx+72]
  0021d	48 8b c8	 mov	 rcx, rax
  00220	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00223	49 8b 42 48	 mov	 rax, QWORD PTR [r10+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00227	49 03 c9	 add	 rcx, r9
  0022a	48 89 4c 24 68	 mov	 QWORD PTR t_lo$14[rsp], rcx
  0022f	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00232	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00236	4c 89 5c 24 70	 mov	 QWORD PTR t_hi$15[rsp], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0023b	48 1b c1	 sbb	 rax, rcx
  0023e	49 89 42 48	 mov	 QWORD PTR [r10+72], rax

; 221  :             return (_umul128(u, v, w_hi));

  00242	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00245	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00249	48 f7 63 50	 mul	 QWORD PTR [rbx+80]
  0024d	48 8b c8	 mov	 rcx, rax
  00250	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00253	49 8b 42 50	 mov	 rax, QWORD PTR [r10+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00257	49 03 cb	 add	 rcx, r11
  0025a	48 89 4c 24 78	 mov	 QWORD PTR t_lo$16[rsp], rcx
  0025f	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00262	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00266	4c 89 4d 80	 mov	 QWORD PTR t_hi$17[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0026a	48 1b c1	 sbb	 rax, rcx
  0026d	49 89 42 50	 mov	 QWORD PTR [r10+80], rax

; 221  :             return (_umul128(u, v, w_hi));

  00271	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00274	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00278	48 f7 63 58	 mul	 QWORD PTR [rbx+88]
  0027c	48 8b c8	 mov	 rcx, rax
  0027f	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00282	49 8b 42 58	 mov	 rax, QWORD PTR [r10+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00286	49 03 c9	 add	 rcx, r9
  00289	48 89 4d 88	 mov	 QWORD PTR t_lo$18[rbp-256], rcx
  0028d	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00290	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00294	4c 89 5d 90	 mov	 QWORD PTR t_hi$19[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00298	48 1b c1	 sbb	 rax, rcx
  0029b	49 89 42 58	 mov	 QWORD PTR [r10+88], rax

; 221  :             return (_umul128(u, v, w_hi));

  0029f	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002a2	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  002a6	48 f7 63 60	 mul	 QWORD PTR [rbx+96]
  002aa	48 8b c8	 mov	 rcx, rax
  002ad	4c 8b ca	 mov	 r9, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002b0	49 03 cb	 add	 rcx, r11
  002b3	48 89 4d 98	 mov	 QWORD PTR t_lo$20[rbp-256], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  002b7	49 8b 42 60	 mov	 rax, QWORD PTR [r10+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002bb	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002be	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002c2	4c 89 4d a0	 mov	 QWORD PTR t_hi$21[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002c6	48 1b c1	 sbb	 rax, rcx
  002c9	49 89 42 60	 mov	 QWORD PTR [r10+96], rax

; 221  :             return (_umul128(u, v, w_hi));

  002cd	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002d0	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  002d4	48 f7 63 68	 mul	 QWORD PTR [rbx+104]
  002d8	48 8b c8	 mov	 rcx, rax
  002db	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  002de	49 8b 42 68	 mov	 rax, QWORD PTR [r10+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002e2	49 03 c9	 add	 rcx, r9
  002e5	48 89 4d a8	 mov	 QWORD PTR t_lo$22[rbp-256], rcx
  002e9	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002ec	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002f0	4c 89 5d b0	 mov	 QWORD PTR t_hi$23[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002f4	48 1b c1	 sbb	 rax, rcx
  002f7	49 89 42 68	 mov	 QWORD PTR [r10+104], rax

; 221  :             return (_umul128(u, v, w_hi));

  002fb	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  002fe	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00302	48 f7 63 70	 mul	 QWORD PTR [rbx+112]
  00306	48 8b c8	 mov	 rcx, rax
  00309	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0030c	49 8b 42 70	 mov	 rax, QWORD PTR [r10+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00310	49 03 cb	 add	 rcx, r11
  00313	48 89 4d b8	 mov	 QWORD PTR t_lo$24[rbp-256], rcx
  00317	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0031a	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0031e	4c 89 4d c0	 mov	 QWORD PTR t_hi$25[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00322	48 1b c1	 sbb	 rax, rcx
  00325	49 89 42 70	 mov	 QWORD PTR [r10+112], rax

; 221  :             return (_umul128(u, v, w_hi));

  00329	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0032c	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00330	48 f7 63 78	 mul	 QWORD PTR [rbx+120]
  00334	48 8b c8	 mov	 rcx, rax
  00337	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0033a	49 8b 42 78	 mov	 rax, QWORD PTR [r10+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0033e	49 03 c9	 add	 rcx, r9
  00341	48 89 4d c8	 mov	 QWORD PTR t_lo$26[rbp-256], rcx
  00345	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00348	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0034c	4c 89 5d d0	 mov	 QWORD PTR t_hi$27[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00350	48 1b c1	 sbb	 rax, rcx
  00353	49 89 42 78	 mov	 QWORD PTR [r10+120], rax

; 221  :             return (_umul128(u, v, w_hi));

  00357	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0035a	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  0035e	48 f7 a3 80 00
	00 00		 mul	 QWORD PTR [rbx+128]
  00365	48 8b c8	 mov	 rcx, rax
  00368	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0036b	49 8b 82 80 00
	00 00		 mov	 rax, QWORD PTR [r10+128]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00372	49 03 cb	 add	 rcx, r11
  00375	48 89 4d d8	 mov	 QWORD PTR t_lo$28[rbp-256], rcx
  00379	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0037c	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00380	4c 89 4d e0	 mov	 QWORD PTR t_hi$29[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00384	48 1b c1	 sbb	 rax, rcx
  00387	49 89 82 80 00
	00 00		 mov	 QWORD PTR [r10+128], rax

; 221  :             return (_umul128(u, v, w_hi));

  0038e	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00391	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00395	48 f7 a3 88 00
	00 00		 mul	 QWORD PTR [rbx+136]
  0039c	48 8b c8	 mov	 rcx, rax
  0039f	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  003a2	49 8b 82 88 00
	00 00		 mov	 rax, QWORD PTR [r10+136]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003a9	49 03 c9	 add	 rcx, r9
  003ac	48 89 4d e8	 mov	 QWORD PTR t_lo$30[rbp-256], rcx
  003b0	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003b3	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003b7	4c 89 5d f0	 mov	 QWORD PTR t_hi$31[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003bb	48 1b c1	 sbb	 rax, rcx
  003be	49 89 82 88 00
	00 00		 mov	 QWORD PTR [r10+136], rax

; 221  :             return (_umul128(u, v, w_hi));

  003c5	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003c8	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  003cc	48 f7 a3 90 00
	00 00		 mul	 QWORD PTR [rbx+144]
  003d3	48 8b c8	 mov	 rcx, rax
  003d6	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  003d9	49 8b 82 90 00
	00 00		 mov	 rax, QWORD PTR [r10+144]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003e0	49 03 cb	 add	 rcx, r11
  003e3	48 89 4d f8	 mov	 QWORD PTR t_lo$32[rbp-256], rcx
  003e7	4d 13 ce	 adc	 r9, r14
  003ea	4c 89 4d 00	 mov	 QWORD PTR t_hi$33[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003ee	41 80 c0 ff	 add	 r8b, -1
  003f2	48 1b c1	 sbb	 rax, rcx
  003f5	49 89 82 90 00
	00 00		 mov	 QWORD PTR [r10+144], rax

; 221  :             return (_umul128(u, v, w_hi));

  003fc	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  003ff	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00403	48 f7 a3 98 00
	00 00		 mul	 QWORD PTR [rbx+152]
  0040a	48 8b c8	 mov	 rcx, rax
  0040d	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00410	49 8b 82 98 00
	00 00		 mov	 rax, QWORD PTR [r10+152]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00417	49 03 c9	 add	 rcx, r9
  0041a	48 89 4d 08	 mov	 QWORD PTR t_lo$34[rbp-256], rcx
  0041e	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00421	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00425	4c 89 5d 10	 mov	 QWORD PTR t_hi$35[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00429	48 1b c1	 sbb	 rax, rcx
  0042c	49 89 82 98 00
	00 00		 mov	 QWORD PTR [r10+152], rax

; 221  :             return (_umul128(u, v, w_hi));

  00433	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00436	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  0043a	48 f7 a3 a0 00
	00 00		 mul	 QWORD PTR [rbx+160]
  00441	48 8b c8	 mov	 rcx, rax
  00444	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00447	49 8b 82 a0 00
	00 00		 mov	 rax, QWORD PTR [r10+160]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0044e	49 03 cb	 add	 rcx, r11
  00451	48 89 4d 18	 mov	 QWORD PTR t_lo$36[rbp-256], rcx
  00455	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00458	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0045c	4c 89 4d 20	 mov	 QWORD PTR t_hi$37[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00460	48 1b c1	 sbb	 rax, rcx
  00463	49 89 82 a0 00
	00 00		 mov	 QWORD PTR [r10+160], rax

; 221  :             return (_umul128(u, v, w_hi));

  0046a	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0046d	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00471	48 f7 a3 a8 00
	00 00		 mul	 QWORD PTR [rbx+168]
  00478	48 8b c8	 mov	 rcx, rax
  0047b	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0047e	49 8b 82 a8 00
	00 00		 mov	 rax, QWORD PTR [r10+168]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00485	49 03 c9	 add	 rcx, r9
  00488	48 89 4d 28	 mov	 QWORD PTR t_lo$38[rbp-256], rcx
  0048c	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0048f	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00493	4c 89 5d 30	 mov	 QWORD PTR t_hi$39[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00497	48 1b c1	 sbb	 rax, rcx
  0049a	49 89 82 a8 00
	00 00		 mov	 QWORD PTR [r10+168], rax

; 221  :             return (_umul128(u, v, w_hi));

  004a1	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004a4	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  004a8	48 f7 a3 b0 00
	00 00		 mul	 QWORD PTR [rbx+176]
  004af	48 8b c8	 mov	 rcx, rax
  004b2	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  004b5	49 8b 82 b0 00
	00 00		 mov	 rax, QWORD PTR [r10+176]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004bc	49 03 cb	 add	 rcx, r11
  004bf	48 89 4d 38	 mov	 QWORD PTR t_lo$40[rbp-256], rcx
  004c3	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004c6	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004ca	4c 89 4d 40	 mov	 QWORD PTR t_hi$41[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004ce	48 1b c1	 sbb	 rax, rcx
  004d1	49 89 82 b0 00
	00 00		 mov	 QWORD PTR [r10+176], rax

; 221  :             return (_umul128(u, v, w_hi));

  004d8	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004db	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  004df	48 f7 a3 b8 00
	00 00		 mul	 QWORD PTR [rbx+184]
  004e6	48 8b c8	 mov	 rcx, rax
  004e9	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  004ec	49 8b 82 b8 00
	00 00		 mov	 rax, QWORD PTR [r10+184]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004f3	49 03 c9	 add	 rcx, r9
  004f6	48 89 4d 48	 mov	 QWORD PTR t_lo$42[rbp-256], rcx
  004fa	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  004fd	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00501	4c 89 5d 50	 mov	 QWORD PTR t_hi$43[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00505	48 1b c1	 sbb	 rax, rcx
  00508	49 89 82 b8 00
	00 00		 mov	 QWORD PTR [r10+184], rax

; 221  :             return (_umul128(u, v, w_hi));

  0050f	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00512	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00516	48 f7 a3 c0 00
	00 00		 mul	 QWORD PTR [rbx+192]
  0051d	48 8b c8	 mov	 rcx, rax
  00520	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00523	49 8b 82 c0 00
	00 00		 mov	 rax, QWORD PTR [r10+192]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0052a	49 03 cb	 add	 rcx, r11
  0052d	48 89 4d 58	 mov	 QWORD PTR t_lo$44[rbp-256], rcx
  00531	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00534	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00538	4c 89 4d 60	 mov	 QWORD PTR t_hi$45[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0053c	48 1b c1	 sbb	 rax, rcx
  0053f	41 0f 92 c0	 setb	 r8b
  00543	49 89 82 c0 00
	00 00		 mov	 QWORD PTR [r10+192], rax

; 221  :             return (_umul128(u, v, w_hi));

  0054a	48 8b c7	 mov	 rax, rdi
  0054d	48 f7 a3 c8 00
	00 00		 mul	 QWORD PTR [rbx+200]
  00554	48 8b c8	 mov	 rcx, rax
  00557	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0055a	49 8b 82 c8 00
	00 00		 mov	 rax, QWORD PTR [r10+200]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00561	49 03 c9	 add	 rcx, r9
  00564	48 89 4d 68	 mov	 QWORD PTR t_lo$46[rbp-256], rcx
  00568	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0056b	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0056f	4c 89 5d 70	 mov	 QWORD PTR t_hi$47[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00573	48 1b c1	 sbb	 rax, rcx
  00576	49 89 82 c8 00
	00 00		 mov	 QWORD PTR [r10+200], rax

; 221  :             return (_umul128(u, v, w_hi));

  0057d	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00580	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00584	48 f7 a3 d0 00
	00 00		 mul	 QWORD PTR [rbx+208]
  0058b	48 8b c8	 mov	 rcx, rax
  0058e	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00591	49 8b 82 d0 00
	00 00		 mov	 rax, QWORD PTR [r10+208]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00598	49 03 cb	 add	 rcx, r11
  0059b	48 89 4d 78	 mov	 QWORD PTR t_lo$48[rbp-256], rcx
  0059f	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005a2	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  005a6	4c 89 8d 80 00
	00 00		 mov	 QWORD PTR t_hi$49[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005ad	48 1b c1	 sbb	 rax, rcx
  005b0	49 89 82 d0 00
	00 00		 mov	 QWORD PTR [r10+208], rax

; 221  :             return (_umul128(u, v, w_hi));

  005b7	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005ba	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  005be	48 f7 a3 d8 00
	00 00		 mul	 QWORD PTR [rbx+216]
  005c5	48 8b c8	 mov	 rcx, rax
  005c8	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  005cb	49 8b 82 d8 00
	00 00		 mov	 rax, QWORD PTR [r10+216]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  005d2	49 03 c9	 add	 rcx, r9
  005d5	48 89 8d 88 00
	00 00		 mov	 QWORD PTR t_lo$50[rbp-256], rcx
  005dc	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005df	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  005e3	4c 89 9d 90 00
	00 00		 mov	 QWORD PTR t_hi$51[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005ea	48 1b c1	 sbb	 rax, rcx
  005ed	49 89 82 d8 00
	00 00		 mov	 QWORD PTR [r10+216], rax

; 221  :             return (_umul128(u, v, w_hi));

  005f4	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  005f7	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  005fb	48 f7 a3 e0 00
	00 00		 mul	 QWORD PTR [rbx+224]
  00602	48 8b c8	 mov	 rcx, rax
  00605	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00608	49 8b 82 e0 00
	00 00		 mov	 rax, QWORD PTR [r10+224]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0060f	49 03 cb	 add	 rcx, r11
  00612	48 89 8d 98 00
	00 00		 mov	 QWORD PTR t_lo$52[rbp-256], rcx
  00619	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0061c	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00620	4c 89 8d a0 00
	00 00		 mov	 QWORD PTR t_hi$53[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00627	48 1b c1	 sbb	 rax, rcx
  0062a	49 89 82 e0 00
	00 00		 mov	 QWORD PTR [r10+224], rax

; 221  :             return (_umul128(u, v, w_hi));

  00631	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00634	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00638	48 f7 a3 e8 00
	00 00		 mul	 QWORD PTR [rbx+232]
  0063f	48 8b c8	 mov	 rcx, rax
  00642	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00645	49 8b 82 e8 00
	00 00		 mov	 rax, QWORD PTR [r10+232]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0064c	49 03 c9	 add	 rcx, r9
  0064f	48 89 8d a8 00
	00 00		 mov	 QWORD PTR t_lo$54[rbp-256], rcx
  00656	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00659	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0065d	4c 89 9d b0 00
	00 00		 mov	 QWORD PTR t_hi$55[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00664	48 1b c1	 sbb	 rax, rcx
  00667	49 89 82 e8 00
	00 00		 mov	 QWORD PTR [r10+232], rax

; 221  :             return (_umul128(u, v, w_hi));

  0066e	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00671	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00675	48 f7 a3 f0 00
	00 00		 mul	 QWORD PTR [rbx+240]
  0067c	48 8b c8	 mov	 rcx, rax
  0067f	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00682	49 8b 82 f0 00
	00 00		 mov	 rax, QWORD PTR [r10+240]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00689	49 03 cb	 add	 rcx, r11
  0068c	48 89 8d b8 00
	00 00		 mov	 QWORD PTR t_lo$56[rbp-256], rcx
  00693	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00696	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0069a	4c 89 8d c0 00
	00 00		 mov	 QWORD PTR t_hi$57[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  006a1	48 1b c1	 sbb	 rax, rcx
  006a4	49 89 82 f0 00
	00 00		 mov	 QWORD PTR [r10+240], rax

; 221  :             return (_umul128(u, v, w_hi));

  006ab	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  006ae	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  006b2	48 f7 a3 f8 00
	00 00		 mul	 QWORD PTR [rbx+248]
  006b9	48 8b c8	 mov	 rcx, rax
  006bc	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  006bf	49 8b 82 f8 00
	00 00		 mov	 rax, QWORD PTR [r10+248]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  006c6	49 03 c9	 add	 rcx, r9
  006c9	48 89 8d c8 00
	00 00		 mov	 QWORD PTR t_lo$58[rbp-256], rcx
  006d0	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  006d3	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  006d7	4c 89 9d d0 00
	00 00		 mov	 QWORD PTR t_hi$59[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  006de	48 1b c1	 sbb	 rax, rcx
  006e1	49 89 82 f8 00
	00 00		 mov	 QWORD PTR [r10+248], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  006e8	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  006ed	41 0f 92 c0	 setb	 r8b
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 914  :             u_ptr += 32;

  006f1	49 81 c2 00 01
	00 00		 add	 r10, 256		; 00000100H

; 915  :             v_ptr += 32;

  006f8	48 81 c3 00 01
	00 00		 add	 rbx, 256		; 00000100H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  006ff	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 880  :         while (count != 0)

  00707	49 83 ef 01	 sub	 r15, 1
  0070b	0f 85 4f f9 ff
	ff		 jne	 $LL2@SubtructOn
$LN3@SubtructOn:

; 916  :             --count;
; 917  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 918  :             if (sizeof(k) == sizeof(_UINT64_T))
; 919  :                 AddToMULTI64Counter(32);
; 920  :             else
; 921  :                 AddToMULTI32Counter(32);
; 922  : #endif
; 923  :         }
; 924  : 
; 925  :         if (v_count & 0x10)

  00711	40 f6 c6 10	 test	 sil, 16
  00715	0f 84 52 03 00
	00		 je	 $LN8@SubtructOn
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  0071b	48 8b c7	 mov	 rax, rdi
  0071e	48 f7 23	 mul	 QWORD PTR [rbx]
  00721	48 8b c8	 mov	 rcx, rax
  00724	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00727	49 8b 02	 mov	 rax, QWORD PTR [r10]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0072a	49 03 cb	 add	 rcx, r11
  0072d	48 89 8d d8 00
	00 00		 mov	 QWORD PTR t_lo$60[rbp-256], rcx
  00734	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00737	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0073b	4c 89 8d e0 00
	00 00		 mov	 QWORD PTR t_hi$61[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00742	48 1b c1	 sbb	 rax, rcx
  00745	49 89 02	 mov	 QWORD PTR [r10], rax

; 221  :             return (_umul128(u, v, w_hi));

  00748	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0074b	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  0074f	48 f7 63 08	 mul	 QWORD PTR [rbx+8]
  00753	48 8b c8	 mov	 rcx, rax
  00756	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00759	49 8b 42 08	 mov	 rax, QWORD PTR [r10+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0075d	49 03 c9	 add	 rcx, r9
  00760	48 89 8d e8 00
	00 00		 mov	 QWORD PTR t_lo$62[rbp-256], rcx
  00767	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0076a	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0076e	4c 89 9d f0 00
	00 00		 mov	 QWORD PTR t_hi$63[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00775	48 1b c1	 sbb	 rax, rcx
  00778	49 89 42 08	 mov	 QWORD PTR [r10+8], rax

; 221  :             return (_umul128(u, v, w_hi));

  0077c	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0077f	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00783	48 f7 63 10	 mul	 QWORD PTR [rbx+16]
  00787	48 8b c8	 mov	 rcx, rax
  0078a	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0078d	49 8b 42 10	 mov	 rax, QWORD PTR [r10+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00791	49 03 cb	 add	 rcx, r11
  00794	48 89 8d f8 00
	00 00		 mov	 QWORD PTR t_lo$64[rbp-256], rcx
  0079b	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0079e	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007a2	4c 89 8d 00 01
	00 00		 mov	 QWORD PTR t_hi$65[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007a9	48 1b c1	 sbb	 rax, rcx
  007ac	49 89 42 10	 mov	 QWORD PTR [r10+16], rax

; 221  :             return (_umul128(u, v, w_hi));

  007b0	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007b3	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  007b7	48 f7 63 18	 mul	 QWORD PTR [rbx+24]
  007bb	48 8b c8	 mov	 rcx, rax
  007be	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  007c1	49 8b 42 18	 mov	 rax, QWORD PTR [r10+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007c5	49 03 c9	 add	 rcx, r9
  007c8	48 89 8d 08 01
	00 00		 mov	 QWORD PTR t_lo$66[rbp-256], rcx
  007cf	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007d2	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007d6	4c 89 9d 10 01
	00 00		 mov	 QWORD PTR t_hi$67[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007dd	48 1b c1	 sbb	 rax, rcx
  007e0	49 89 42 18	 mov	 QWORD PTR [r10+24], rax

; 221  :             return (_umul128(u, v, w_hi));

  007e4	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  007e7	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  007eb	48 f7 63 20	 mul	 QWORD PTR [rbx+32]
  007ef	48 8b c8	 mov	 rcx, rax
  007f2	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  007f5	49 8b 42 20	 mov	 rax, QWORD PTR [r10+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007f9	49 03 cb	 add	 rcx, r11
  007fc	48 89 8d 18 01
	00 00		 mov	 QWORD PTR t_lo$68[rbp-256], rcx
  00803	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00806	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0080a	4c 89 8d 20 01
	00 00		 mov	 QWORD PTR t_hi$69[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00811	48 1b c1	 sbb	 rax, rcx
  00814	49 89 42 20	 mov	 QWORD PTR [r10+32], rax

; 221  :             return (_umul128(u, v, w_hi));

  00818	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0081b	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  0081f	48 f7 63 28	 mul	 QWORD PTR [rbx+40]
  00823	48 8b c8	 mov	 rcx, rax
  00826	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00829	49 8b 42 28	 mov	 rax, QWORD PTR [r10+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0082d	49 03 c9	 add	 rcx, r9
  00830	48 89 8d 28 01
	00 00		 mov	 QWORD PTR t_lo$70[rbp-256], rcx
  00837	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0083a	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0083e	4c 89 9d 30 01
	00 00		 mov	 QWORD PTR t_hi$71[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00845	48 1b c1	 sbb	 rax, rcx
  00848	49 89 42 28	 mov	 QWORD PTR [r10+40], rax

; 221  :             return (_umul128(u, v, w_hi));

  0084c	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0084f	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00853	48 f7 63 30	 mul	 QWORD PTR [rbx+48]
  00857	4c 8b ca	 mov	 r9, rdx
  0085a	48 8b c8	 mov	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0085d	49 8b 42 30	 mov	 rax, QWORD PTR [r10+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00861	49 03 cb	 add	 rcx, r11
  00864	48 89 8d 38 01
	00 00		 mov	 QWORD PTR t_lo$72[rbp-256], rcx
  0086b	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0086e	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00872	4c 89 8d 40 01
	00 00		 mov	 QWORD PTR t_hi$73[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00879	48 1b c1	 sbb	 rax, rcx
  0087c	49 89 42 30	 mov	 QWORD PTR [r10+48], rax

; 221  :             return (_umul128(u, v, w_hi));

  00880	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00883	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00887	48 f7 63 38	 mul	 QWORD PTR [rbx+56]
  0088b	48 8b c8	 mov	 rcx, rax
  0088e	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00891	49 8b 42 38	 mov	 rax, QWORD PTR [r10+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00895	49 03 c9	 add	 rcx, r9
  00898	48 89 8d 48 01
	00 00		 mov	 QWORD PTR t_lo$74[rbp-256], rcx
  0089f	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008a2	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008a6	4c 89 9d 50 01
	00 00		 mov	 QWORD PTR t_hi$75[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008ad	48 1b c1	 sbb	 rax, rcx
  008b0	49 89 42 38	 mov	 QWORD PTR [r10+56], rax

; 221  :             return (_umul128(u, v, w_hi));

  008b4	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008b7	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  008bb	48 f7 63 40	 mul	 QWORD PTR [rbx+64]
  008bf	48 8b c8	 mov	 rcx, rax
  008c2	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  008c5	49 8b 42 40	 mov	 rax, QWORD PTR [r10+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008c9	49 03 cb	 add	 rcx, r11
  008cc	48 89 8d 58 01
	00 00		 mov	 QWORD PTR t_lo$76[rbp-256], rcx
  008d3	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008d6	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008da	4c 89 8d 60 01
	00 00		 mov	 QWORD PTR t_hi$77[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008e1	48 1b c1	 sbb	 rax, rcx
  008e4	49 89 42 40	 mov	 QWORD PTR [r10+64], rax

; 221  :             return (_umul128(u, v, w_hi));

  008e8	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  008eb	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  008ef	48 f7 63 48	 mul	 QWORD PTR [rbx+72]
  008f3	48 8b c8	 mov	 rcx, rax
  008f6	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  008f9	49 8b 42 48	 mov	 rax, QWORD PTR [r10+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008fd	49 03 c9	 add	 rcx, r9
  00900	48 89 8d 68 01
	00 00		 mov	 QWORD PTR t_lo$78[rbp-256], rcx
  00907	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0090a	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0090e	4c 89 9d 70 01
	00 00		 mov	 QWORD PTR t_hi$79[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00915	48 1b c1	 sbb	 rax, rcx
  00918	49 89 42 48	 mov	 QWORD PTR [r10+72], rax

; 221  :             return (_umul128(u, v, w_hi));

  0091c	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0091f	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00923	48 f7 63 50	 mul	 QWORD PTR [rbx+80]
  00927	48 8b c8	 mov	 rcx, rax
  0092a	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0092d	49 8b 42 50	 mov	 rax, QWORD PTR [r10+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00931	49 03 cb	 add	 rcx, r11
  00934	48 89 8d 78 01
	00 00		 mov	 QWORD PTR t_lo$80[rbp-256], rcx
  0093b	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0093e	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00942	4c 89 8d 80 01
	00 00		 mov	 QWORD PTR t_hi$81[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00949	48 1b c1	 sbb	 rax, rcx
  0094c	49 89 42 50	 mov	 QWORD PTR [r10+80], rax

; 221  :             return (_umul128(u, v, w_hi));

  00950	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00953	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00957	48 f7 63 58	 mul	 QWORD PTR [rbx+88]
  0095b	48 8b c8	 mov	 rcx, rax
  0095e	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00961	49 8b 42 58	 mov	 rax, QWORD PTR [r10+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00965	49 03 c9	 add	 rcx, r9
  00968	48 89 8d 88 01
	00 00		 mov	 QWORD PTR t_lo$82[rbp-256], rcx
  0096f	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00972	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00976	4c 89 9d 90 01
	00 00		 mov	 QWORD PTR t_hi$83[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0097d	48 1b c1	 sbb	 rax, rcx
  00980	49 89 42 58	 mov	 QWORD PTR [r10+88], rax

; 221  :             return (_umul128(u, v, w_hi));

  00984	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00987	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  0098b	48 f7 63 60	 mul	 QWORD PTR [rbx+96]
  0098f	48 8b c8	 mov	 rcx, rax
  00992	4c 8b ca	 mov	 r9, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00995	49 03 cb	 add	 rcx, r11
  00998	48 89 8d 98 01
	00 00		 mov	 QWORD PTR t_lo$84[rbp-256], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0099f	49 8b 42 60	 mov	 rax, QWORD PTR [r10+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009a3	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009a6	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009aa	4c 89 8d a0 01
	00 00		 mov	 QWORD PTR t_hi$85[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009b1	48 1b c1	 sbb	 rax, rcx
  009b4	49 89 42 60	 mov	 QWORD PTR [r10+96], rax

; 221  :             return (_umul128(u, v, w_hi));

  009b8	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009bb	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  009bf	48 f7 63 68	 mul	 QWORD PTR [rbx+104]
  009c3	48 8b c8	 mov	 rcx, rax
  009c6	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  009c9	49 8b 42 68	 mov	 rax, QWORD PTR [r10+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009cd	49 03 c9	 add	 rcx, r9
  009d0	48 89 8d a8 01
	00 00		 mov	 QWORD PTR t_lo$86[rbp-256], rcx
  009d7	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009da	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009de	4c 89 9d b0 01
	00 00		 mov	 QWORD PTR t_hi$87[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009e5	48 1b c1	 sbb	 rax, rcx
  009e8	49 89 42 68	 mov	 QWORD PTR [r10+104], rax

; 221  :             return (_umul128(u, v, w_hi));

  009ec	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  009ef	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  009f3	48 f7 63 70	 mul	 QWORD PTR [rbx+112]
  009f7	48 8b c8	 mov	 rcx, rax
  009fa	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  009fd	49 8b 42 70	 mov	 rax, QWORD PTR [r10+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a01	49 03 cb	 add	 rcx, r11
  00a04	48 89 8d b8 01
	00 00		 mov	 QWORD PTR t_lo$88[rbp-256], rcx
  00a0b	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a0e	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a12	4c 89 8d c0 01
	00 00		 mov	 QWORD PTR t_hi$89[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a19	48 1b c1	 sbb	 rax, rcx
  00a1c	49 89 42 70	 mov	 QWORD PTR [r10+112], rax

; 221  :             return (_umul128(u, v, w_hi));

  00a20	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a23	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00a27	48 f7 63 78	 mul	 QWORD PTR [rbx+120]
  00a2b	48 8b c8	 mov	 rcx, rax
  00a2e	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00a31	49 8b 42 78	 mov	 rax, QWORD PTR [r10+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a35	49 03 c9	 add	 rcx, r9
  00a38	48 89 8d c8 01
	00 00		 mov	 QWORD PTR t_lo$90[rbp-256], rcx
  00a3f	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a42	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a46	4c 89 9d d0 01
	00 00		 mov	 QWORD PTR t_hi$91[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a4d	48 1b c1	 sbb	 rax, rcx
  00a50	49 89 42 78	 mov	 QWORD PTR [r10+120], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00a54	b8 10 00 00 00	 mov	 eax, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a59	41 0f 92 c0	 setb	 r8b
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 943  :             u_ptr += 16;

  00a5d	49 83 ea 80	 sub	 r10, -128		; ffffffffffffff80H

; 944  :             v_ptr += 16;

  00a61	48 83 eb 80	 sub	 rbx, -128		; ffffffffffffff80H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00a65	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN8@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 953  :         if (v_count & 0x8)

  00a6d	40 f6 c6 08	 test	 sil, 8
  00a71	0f 84 b2 01 00
	00		 je	 $LN11@SubtructOn
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00a77	48 8b c7	 mov	 rax, rdi
  00a7a	48 f7 23	 mul	 QWORD PTR [rbx]
  00a7d	48 8b c8	 mov	 rcx, rax
  00a80	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00a83	49 8b 02	 mov	 rax, QWORD PTR [r10]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a86	49 03 cb	 add	 rcx, r11
  00a89	48 89 8d d8 01
	00 00		 mov	 QWORD PTR t_lo$92[rbp-256], rcx
  00a90	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a93	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a97	4c 89 8d e0 01
	00 00		 mov	 QWORD PTR t_hi$93[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00a9e	48 1b c1	 sbb	 rax, rcx
  00aa1	49 89 02	 mov	 QWORD PTR [r10], rax

; 221  :             return (_umul128(u, v, w_hi));

  00aa4	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00aa7	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00aab	48 f7 63 08	 mul	 QWORD PTR [rbx+8]
  00aaf	48 8b c8	 mov	 rcx, rax
  00ab2	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00ab5	49 8b 42 08	 mov	 rax, QWORD PTR [r10+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00ab9	49 03 c9	 add	 rcx, r9
  00abc	48 89 8d e8 01
	00 00		 mov	 QWORD PTR t_lo$94[rbp-256], rcx
  00ac3	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00ac6	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00aca	4c 89 9d f0 01
	00 00		 mov	 QWORD PTR t_hi$95[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00ad1	48 1b c1	 sbb	 rax, rcx
  00ad4	49 89 42 08	 mov	 QWORD PTR [r10+8], rax

; 221  :             return (_umul128(u, v, w_hi));

  00ad8	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00adb	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00adf	48 f7 63 10	 mul	 QWORD PTR [rbx+16]
  00ae3	48 8b c8	 mov	 rcx, rax
  00ae6	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00ae9	49 8b 42 10	 mov	 rax, QWORD PTR [r10+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00aed	49 03 cb	 add	 rcx, r11
  00af0	48 89 8d f8 01
	00 00		 mov	 QWORD PTR t_lo$96[rbp-256], rcx
  00af7	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00afa	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00afe	4c 89 8d 00 02
	00 00		 mov	 QWORD PTR t_hi$97[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b05	48 1b c1	 sbb	 rax, rcx
  00b08	49 89 42 10	 mov	 QWORD PTR [r10+16], rax

; 221  :             return (_umul128(u, v, w_hi));

  00b0c	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b0f	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00b13	48 f7 63 18	 mul	 QWORD PTR [rbx+24]
  00b17	48 8b c8	 mov	 rcx, rax
  00b1a	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00b1d	49 8b 42 18	 mov	 rax, QWORD PTR [r10+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b21	49 03 c9	 add	 rcx, r9
  00b24	48 89 8d 08 02
	00 00		 mov	 QWORD PTR t_lo$98[rbp-256], rcx
  00b2b	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b2e	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b32	4c 89 9d 10 02
	00 00		 mov	 QWORD PTR t_hi$99[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b39	48 1b c1	 sbb	 rax, rcx
  00b3c	49 89 42 18	 mov	 QWORD PTR [r10+24], rax

; 221  :             return (_umul128(u, v, w_hi));

  00b40	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b43	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00b47	48 f7 63 20	 mul	 QWORD PTR [rbx+32]
  00b4b	48 8b c8	 mov	 rcx, rax
  00b4e	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00b51	49 8b 42 20	 mov	 rax, QWORD PTR [r10+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b55	49 03 cb	 add	 rcx, r11
  00b58	48 89 8d 18 02
	00 00		 mov	 QWORD PTR t_lo$100[rbp-256], rcx
  00b5f	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b62	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b66	4c 89 8d 20 02
	00 00		 mov	 QWORD PTR t_hi$101[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b6d	48 1b c1	 sbb	 rax, rcx
  00b70	49 89 42 20	 mov	 QWORD PTR [r10+32], rax

; 221  :             return (_umul128(u, v, w_hi));

  00b74	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b77	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00b7b	48 f7 63 28	 mul	 QWORD PTR [rbx+40]
  00b7f	48 8b c8	 mov	 rcx, rax
  00b82	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00b85	49 8b 42 28	 mov	 rax, QWORD PTR [r10+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b89	49 03 c9	 add	 rcx, r9
  00b8c	48 89 8d 28 02
	00 00		 mov	 QWORD PTR t_lo$102[rbp-256], rcx
  00b93	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00b96	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b9a	4c 89 9d 30 02
	00 00		 mov	 QWORD PTR t_hi$103[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00ba1	48 1b c1	 sbb	 rax, rcx
  00ba4	49 89 42 28	 mov	 QWORD PTR [r10+40], rax

; 221  :             return (_umul128(u, v, w_hi));

  00ba8	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00bab	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00baf	48 f7 63 30	 mul	 QWORD PTR [rbx+48]
  00bb3	4c 8b ca	 mov	 r9, rdx
  00bb6	48 8b c8	 mov	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00bb9	49 8b 42 30	 mov	 rax, QWORD PTR [r10+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00bbd	49 03 cb	 add	 rcx, r11
  00bc0	48 89 8d 38 02
	00 00		 mov	 QWORD PTR t_lo$104[rbp-256], rcx
  00bc7	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00bca	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00bce	4c 89 8d 40 02
	00 00		 mov	 QWORD PTR t_hi$105[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00bd5	48 1b c1	 sbb	 rax, rcx
  00bd8	49 89 42 30	 mov	 QWORD PTR [r10+48], rax

; 221  :             return (_umul128(u, v, w_hi));

  00bdc	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00bdf	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00be3	48 f7 63 38	 mul	 QWORD PTR [rbx+56]
  00be7	48 8b c8	 mov	 rcx, rax
  00bea	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00bed	49 8b 42 38	 mov	 rax, QWORD PTR [r10+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00bf1	49 03 c9	 add	 rcx, r9
  00bf4	48 89 8d 48 02
	00 00		 mov	 QWORD PTR t_lo$106[rbp-256], rcx
  00bfb	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00bfe	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00c02	4c 89 9d 50 02
	00 00		 mov	 QWORD PTR t_hi$107[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c09	48 1b c1	 sbb	 rax, rcx
  00c0c	49 89 42 38	 mov	 QWORD PTR [r10+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00c10	b8 08 00 00 00	 mov	 eax, 8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c15	41 0f 92 c0	 setb	 r8b
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 963  :             u_ptr += 8;

  00c19	49 83 c2 40	 add	 r10, 64			; 00000040H

; 964  :             v_ptr += 8;

  00c1d	48 83 c3 40	 add	 rbx, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00c21	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN11@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 973  :         if (v_count & 0x4)

  00c29	40 f6 c6 04	 test	 sil, 4
  00c2d	0f 84 e2 00 00
	00		 je	 $LN14@SubtructOn
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00c33	48 8b c7	 mov	 rax, rdi
  00c36	48 f7 23	 mul	 QWORD PTR [rbx]
  00c39	48 8b c8	 mov	 rcx, rax
  00c3c	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00c3f	49 8b 02	 mov	 rax, QWORD PTR [r10]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00c42	49 03 cb	 add	 rcx, r11
  00c45	48 89 8d 58 02
	00 00		 mov	 QWORD PTR t_lo$108[rbp-256], rcx
  00c4c	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c4f	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00c53	4c 89 8d 60 02
	00 00		 mov	 QWORD PTR t_hi$109[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c5a	48 1b c1	 sbb	 rax, rcx
  00c5d	49 89 02	 mov	 QWORD PTR [r10], rax

; 221  :             return (_umul128(u, v, w_hi));

  00c60	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c63	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00c67	48 f7 63 08	 mul	 QWORD PTR [rbx+8]
  00c6b	48 8b c8	 mov	 rcx, rax
  00c6e	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00c71	49 8b 42 08	 mov	 rax, QWORD PTR [r10+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00c75	49 03 c9	 add	 rcx, r9
  00c78	48 89 8d 68 02
	00 00		 mov	 QWORD PTR t_lo$110[rbp-256], rcx
  00c7f	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c82	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00c86	4c 89 9d 70 02
	00 00		 mov	 QWORD PTR t_hi$111[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c8d	48 1b c1	 sbb	 rax, rcx
  00c90	49 89 42 08	 mov	 QWORD PTR [r10+8], rax

; 221  :             return (_umul128(u, v, w_hi));

  00c94	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00c97	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00c9b	48 f7 63 10	 mul	 QWORD PTR [rbx+16]
  00c9f	48 8b c8	 mov	 rcx, rax
  00ca2	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00ca5	49 8b 42 10	 mov	 rax, QWORD PTR [r10+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00ca9	49 03 cb	 add	 rcx, r11
  00cac	48 89 8d 78 02
	00 00		 mov	 QWORD PTR t_lo$112[rbp-256], rcx
  00cb3	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00cb6	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00cba	4c 89 8d 80 02
	00 00		 mov	 QWORD PTR t_hi$113[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00cc1	48 1b c1	 sbb	 rax, rcx
  00cc4	49 89 42 10	 mov	 QWORD PTR [r10+16], rax

; 221  :             return (_umul128(u, v, w_hi));

  00cc8	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00ccb	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00ccf	48 f7 63 18	 mul	 QWORD PTR [rbx+24]
  00cd3	48 8b c8	 mov	 rcx, rax
  00cd6	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00cd9	49 8b 42 18	 mov	 rax, QWORD PTR [r10+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00cdd	49 03 c9	 add	 rcx, r9
  00ce0	48 89 8d 88 02
	00 00		 mov	 QWORD PTR t_lo$114[rbp-256], rcx
  00ce7	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00cea	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00cee	4c 89 9d 90 02
	00 00		 mov	 QWORD PTR t_hi$115[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00cf5	48 1b c1	 sbb	 rax, rcx
  00cf8	49 89 42 18	 mov	 QWORD PTR [r10+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00cfc	b8 04 00 00 00	 mov	 eax, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d01	41 0f 92 c0	 setb	 r8b
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 979  :             u_ptr += 4;

  00d05	49 83 c2 20	 add	 r10, 32			; 00000020H

; 980  :             v_ptr += 4;

  00d09	48 83 c3 20	 add	 rbx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00d0d	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN14@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 989  :         if (v_count & 0x2)

  00d15	40 f6 c6 02	 test	 sil, 2
  00d19	74 7a		 je	 SHORT $LN17@SubtructOn
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00d1b	48 8b c7	 mov	 rax, rdi
  00d1e	48 f7 23	 mul	 QWORD PTR [rbx]
  00d21	48 8b c8	 mov	 rcx, rax
  00d24	4c 8b ca	 mov	 r9, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00d27	49 8b 02	 mov	 rax, QWORD PTR [r10]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00d2a	49 03 cb	 add	 rcx, r11
  00d2d	48 89 8d 98 02
	00 00		 mov	 QWORD PTR t_lo$116[rbp-256], rcx
  00d34	4d 13 ce	 adc	 r9, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d37	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00d3b	4c 89 8d a0 02
	00 00		 mov	 QWORD PTR t_hi$117[rbp-256], r9

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d42	48 1b c1	 sbb	 rax, rcx
  00d45	49 89 02	 mov	 QWORD PTR [r10], rax

; 221  :             return (_umul128(u, v, w_hi));

  00d48	48 8b c7	 mov	 rax, rdi

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d4b	41 0f 92 c0	 setb	 r8b

; 221  :             return (_umul128(u, v, w_hi));

  00d4f	48 f7 63 08	 mul	 QWORD PTR [rbx+8]
  00d53	48 8b c8	 mov	 rcx, rax
  00d56	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00d59	49 8b 42 08	 mov	 rax, QWORD PTR [r10+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00d5d	49 03 c9	 add	 rcx, r9
  00d60	48 89 8d a8 02
	00 00		 mov	 QWORD PTR t_lo$118[rbp-256], rcx
  00d67	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d6a	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00d6e	4c 89 9d b0 02
	00 00		 mov	 QWORD PTR t_hi$119[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d75	48 1b c1	 sbb	 rax, rcx
  00d78	49 89 42 08	 mov	 QWORD PTR [r10+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00d7c	b8 02 00 00 00	 mov	 eax, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00d81	41 0f 92 c0	 setb	 r8b
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 993  :             u_ptr += 2;

  00d85	49 83 c2 10	 add	 r10, 16

; 994  :             v_ptr += 2;

  00d89	48 83 c3 10	 add	 rbx, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00d8d	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN17@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1003 :         if (v_count & 0x1)

  00d95	40 f6 c6 01	 test	 sil, 1
  00d99	74 3c		 je	 SHORT $LN20@SubtructOn
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00d9b	48 8b c7	 mov	 rax, rdi
  00d9e	48 f7 23	 mul	 QWORD PTR [rbx]
  00da1	48 8b c8	 mov	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00da4	49 8b 02	 mov	 rax, QWORD PTR [r10]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00da7	49 03 cb	 add	 rcx, r11
  00daa	4c 8b da	 mov	 r11, rdx
  00dad	48 89 8d b8 02
	00 00		 mov	 QWORD PTR t_lo$120[rbp-256], rcx
  00db4	4d 13 de	 adc	 r11, r14

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00db7	41 80 c0 ff	 add	 r8b, -1

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00dbb	4c 89 9d c0 02
	00 00		 mov	 QWORD PTR t_hi$121[rbp-256], r11

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00dc2	48 1b c1	 sbb	 rax, rcx
  00dc5	49 89 02	 mov	 QWORD PTR [r10], rax
  00dc8	41 0f 92 c0	 setb	 r8b
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1006 :             u_ptr += 1;

  00dcc	49 83 c2 08	 add	 r10, 8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 337  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI64);

  00dd0	f0 ff 05 00 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A
$LN20@SubtructOn:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1016 :         c = _SUBTRUCT_UNIT(c, *u_ptr, k, u_ptr);

  00dd7	49 8b 02	 mov	 rax, QWORD PTR [r10]

; 1018 : 
; 1019 :         return (DoBorrow(c, u_ptr, u_buf + u_buf_len + 1 - u_ptr));

  00dda	4a 8d 14 ed 08
	00 00 00	 lea	 rdx, QWORD PTR [r13*8+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00de2	41 80 c0 ff	 add	 r8b, -1
  00de6	49 1b c3	 sbb	 rax, r11
  00de9	49 89 02	 mov	 QWORD PTR [r10], rax
  00dec	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1017 :         u_ptr += 1;

  00def	49 83 c2 08	 add	 r10, 8

; 1018 : 
; 1019 :         return (DoBorrow(c, u_ptr, u_buf + u_buf_len + 1 - u_ptr));

  00df3	49 2b d2	 sub	 rdx, r10
  00df6	49 03 d4	 add	 rdx, r12
  00df9	48 c1 fa 03	 sar	 rdx, 3

; 814  :             if (u_count <= 0)

  00dfd	48 85 d2	 test	 rdx, rdx
  00e00	74 1d		 je	 SHORT $LN692@SubtructOn
$LL679@SubtructOn:

; 819  :                 {
; 820  :                     // かつそれでも桁借りを行う必要がある場合
; 821  : 
; 822  :                     // 減算結果が負になってしまったので呼び出し元に通知する。
; 823  :                     return (TRUE);
; 824  :                 }
; 825  : 
; 826  :                 // u の最上位に達してしまった場合はいずれにしろループを中断して正常復帰する。
; 827  : 
; 828  :                 return (FALSE);
; 829  :             }
; 830  :             else if (c)

  00e02	84 c9		 test	 cl, cl
  00e04	74 1f		 je	 SHORT $LN685@SubtructOn

; 831  :             {
; 832  :                 // u の最上位に達しておらず、かつボローが立っている場合
; 833  : 
; 834  :                 // 桁借りを継続する
; 835  :                 c = _SUBTRUCT_UNIT(c, *up, 0, up);

  00e06	49 8b 02	 mov	 rax, QWORD PTR [r10]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00e09	80 c1 ff	 add	 cl, -1
  00e0c	49 1b c6	 sbb	 rax, r14
  00e0f	49 89 02	 mov	 QWORD PTR [r10], rax
  00e12	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 836  :                 ++up;

  00e15	49 83 c2 08	 add	 r10, 8

; 837  :                 --u_count;

  00e19	48 83 ea 01	 sub	 rdx, 1
  00e1d	75 e3		 jne	 SHORT $LL679@SubtructOn
$LN692@SubtructOn:

; 815  :             {
; 816  :                 // u の最上位まで達してしまった場合
; 817  : 
; 818  :                 if (c)

  00e1f	84 c9		 test	 cl, cl
  00e21	41 0f 95 c6	 setne	 r14b
$LN685@SubtructOn:

; 1020 :     }

  00e25	41 8b c6	 mov	 eax, r14d
  00e28	48 81 c4 d8 03
	00 00		 add	 rsp, 984		; 000003d8H
  00e2f	41 5f		 pop	 r15
  00e31	41 5e		 pop	 r14
  00e33	41 5d		 pop	 r13
  00e35	41 5c		 pop	 r12
  00e37	5f		 pop	 rdi
  00e38	5e		 pop	 rsi
  00e39	5b		 pop	 rbx
  00e3a	5d		 pop	 rbp
  00e3b	c3		 ret	 0
?SubtructOneLine@Internal@Core@Math@Palmtree@@YAHPEA_K_K0111@Z ENDP ; Palmtree::Math::Core::Internal::SubtructOneLine
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?_MULTIPLYX_DIGIT_UNIT_DIV@Internal@Core@Math@Palmtree@@YADDPEA_K0_K0@Z
_TEXT	SEGMENT
c$ = 8
k$ = 16
vp$ = 24
q_$ = 32
up$ = 40
?_MULTIPLYX_DIGIT_UNIT_DIV@Internal@Core@Math@Palmtree@@YADDPEA_K0_K0@Z PROC ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT_DIV, COMDAT

; 862  :         __UNIT_TYPE t_hi;
; 863  :         __UNIT_TYPE t_lo;
; 864  :         t_lo = _MULTIPLYX_UNIT(*vp, q_, &t_hi);

  00000	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00003	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00006	49 8b d1	 mov	 rdx, r9
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 861  :     {

  00009	44 0f b6 d1	 movzx	 r10d, cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  0000d	c4 62 bb f6 c8	 mulx	 r9, r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00012	48 8b 54 24 28	 mov	 rdx, QWORD PTR up$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00017	b8 00 00 00 00	 mov	 eax, 0
  0001c	4d 03 03	 add	 r8, QWORD PTR [r11]
  0001f	66 4c 0f 38 f6
	c8		 adcx	 r9, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 866  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00025	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00028	41 80 c2 ff	 add	 r10b, -1
  0002c	49 1b c8	 sbb	 rcx, r8
  0002f	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00032	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 867  :         *k = t_hi;

  00035	4d 89 0b	 mov	 QWORD PTR [r11], r9

; 868  :         return (c);
; 869  :     }

  00038	c3		 ret	 0
?_MULTIPLYX_DIGIT_UNIT_DIV@Internal@Core@Math@Palmtree@@YADDPEA_K0_K0@Z ENDP ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT_DIV
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YADDPEA_K0_K0@Z
_TEXT	SEGMENT
c$ = 8
k$ = 16
vp$ = 24
q_$ = 32
up$ = 40
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YADDPEA_K0_K0@Z PROC ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT, COMDAT

; 850  :     {

  00000	4c 8b da	 mov	 r11, rdx
  00003	44 0f b6 d1	 movzx	 r10d, cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00007	49 8b c1	 mov	 rax, r9
  0000a	49 f7 20	 mul	 QWORD PTR [r8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  0000d	4c 8b 44 24 28	 mov	 r8, QWORD PTR up$[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00012	49 03 03	 add	 rax, QWORD PTR [r11]
  00015	48 83 d2 00	 adc	 rdx, 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 855  :         c = _SUBTRUCT_UNIT(c, *up, t_lo, up);

  00019	49 8b 08	 mov	 rcx, QWORD PTR [r8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0001c	41 80 c2 ff	 add	 r10b, -1
  00020	48 1b c8	 sbb	 rcx, rax
  00023	49 89 08	 mov	 QWORD PTR [r8], rcx
  00026	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 856  :         *k = t_hi;

  00029	49 89 13	 mov	 QWORD PTR [r11], rdx

; 857  :         return (c);
; 858  :     }

  0002c	c3		 ret	 0
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YADDPEA_K0_K0@Z ENDP ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?DoBorrow@Internal@Core@Math@Palmtree@@YAHDPEA_K_K@Z
_TEXT	SEGMENT
c$ = 8
up$ = 16
u_count$ = 24
?DoBorrow@Internal@Core@Math@Palmtree@@YAHDPEA_K_K@Z PROC ; Palmtree::Math::Core::Internal::DoBorrow, COMDAT

; 811  :         // 桁借りを続く限り行う
; 812  :         for (;;)
; 813  :         {
; 814  :             if (u_count <= 0)

  00000	4d 85 c0	 test	 r8, r8
  00003	74 1e		 je	 SHORT $LN14@DoBorrow
$LL2@DoBorrow:

; 824  :                 }
; 825  : 
; 826  :                 // u の最上位に達してしまった場合はいずれにしろループを中断して正常復帰する。
; 827  : 
; 828  :                 return (FALSE);
; 829  :             }
; 830  :             else if (c)

  00005	84 c9		 test	 cl, cl
  00007	74 24		 je	 SHORT $LN8@DoBorrow

; 831  :             {
; 832  :                 // u の最上位に達しておらず、かつボローが立っている場合
; 833  : 
; 834  :                 // 桁借りを継続する
; 835  :                 c = _SUBTRUCT_UNIT(c, *up, 0, up);

  00009	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0000c	80 c1 ff	 add	 cl, -1
  0000f	48 83 d8 00	 sbb	 rax, 0
  00013	48 89 02	 mov	 QWORD PTR [rdx], rax
  00016	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 836  :                 ++up;

  00019	48 83 c2 08	 add	 rdx, 8

; 837  :                 --u_count;

  0001d	49 83 e8 01	 sub	 r8, 1
  00021	75 e2		 jne	 SHORT $LL2@DoBorrow
$LN14@DoBorrow:

; 815  :             {
; 816  :                 // u の最上位まで達してしまった場合
; 817  : 
; 818  :                 if (c)

  00023	84 c9		 test	 cl, cl
  00025	74 06		 je	 SHORT $LN8@DoBorrow

; 819  :                 {
; 820  :                     // かつそれでも桁借りを行う必要がある場合
; 821  : 
; 822  :                     // 減算結果が負になってしまったので呼び出し元に通知する。
; 823  :                     return (TRUE);

  00027	b8 01 00 00 00	 mov	 eax, 1

; 845  :             }
; 846  :         }
; 847  :     }

  0002c	c3		 ret	 0
$LN8@DoBorrow:

; 838  :             }
; 839  :             else
; 840  :             {
; 841  :                 // u の最上位に達しておらず、かつボローが立っていない場合
; 842  : 
; 843  :                 // 桁借りを中断し復帰する。
; 844  :                 return (FALSE);

  0002d	33 c0		 xor	 eax, eax

; 845  :             }
; 846  :         }
; 847  :     }

  0002f	c3		 ret	 0
?DoBorrow@Internal@Core@Math@Palmtree@@YAHDPEA_K_K@Z ENDP ; Palmtree::Math::Core::Internal::DoBorrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?CalculateQ_X@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z
_TEXT	SEGMENT
u_buf$ = 64
v_buf$ = 72
v_buf_len$ = 80
q_index$ = 88
?CalculateQ_X@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z PROC ; Palmtree::Math::Core::Internal::CalculateQ_X, COMDAT

; 792  :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 56		 push	 r14
  00016	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 793  :         __UNIT_TYPE u_index = q_index + v_buf_len;
; 794  :         __UNIT_TYPE uj = u_buf[u_index];
; 795  :         __UNIT_TYPE uj_1 = u_buf[u_index - 1];
; 796  :         __UNIT_TYPE uj_2 = u_buf[u_index - 2];
; 797  :         __UNIT_TYPE v1 = v_buf[v_buf_len - 1];

  0001a	4a 8b 74 c2 f8	 mov	 rsi, QWORD PTR [rdx+r8*8-8]
  0001f	4b 8d 04 08	 lea	 rax, QWORD PTR [r8+r9]
  00023	48 8b 7c c1 f8	 mov	 rdi, QWORD PTR [rcx+rax*8-8]

; 798  :         __UNIT_TYPE v2 = v_buf[v_buf_len - 2];

  00028	4e 8b 74 c2 f0	 mov	 r14, QWORD PTR [rdx+r8*8-16]

; 799  :         __UNIT_TYPE q_ = AsumeQ_(uj, uj_1, v1);

  0002d	4c 8b c6	 mov	 r8, rsi
  00030	48 8b 1c c1	 mov	 rbx, QWORD PTR [rcx+rax*8]
  00034	48 8b d7	 mov	 rdx, rdi
  00037	48 8b 6c c1 f0	 mov	 rbp, QWORD PTR [rcx+rax*8-16]
  0003c	48 8b cb	 mov	 rcx, rbx
  0003f	e8 00 00 00 00	 call	 ?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z ; Palmtree::Math::Core::Internal::AsumeQ_
  00044	48 8b c8	 mov	 rcx, rax

; 800  :         if (!CheckQ_X(q_, uj, uj_1, uj_2, v1, v2))

  00047	4c 89 74 24 28	 mov	 QWORD PTR [rsp+40], r14
  0004c	4c 8b cd	 mov	 r9, rbp
  0004f	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  00054	4c 8b c7	 mov	 r8, rdi
  00057	48 8b d3	 mov	 rdx, rbx
  0005a	e8 00 00 00 00	 call	 ?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z ; Palmtree::Math::Core::Internal::CheckQ_X
  0005f	85 c0		 test	 eax, eax
  00061	75 05		 jne	 SHORT $LN2@CalculateQ

; 801  :             return (q_);

  00063	48 8b c1	 mov	 rax, rcx
  00066	eb 23		 jmp	 SHORT $LN1@CalculateQ
$LN2@CalculateQ:

; 802  :         --q_;

  00068	48 ff c9	 dec	 rcx

; 803  :         if (!CheckQ_X(q_, uj, uj_1, uj_2, v1, v2))

  0006b	4c 89 74 24 28	 mov	 QWORD PTR [rsp+40], r14
  00070	4c 8b c7	 mov	 r8, rdi
  00073	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  00078	48 8b d3	 mov	 rdx, rbx
  0007b	e8 00 00 00 00	 call	 ?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z ; Palmtree::Math::Core::Internal::CheckQ_X
  00080	85 c0		 test	 eax, eax

; 804  :             return (q_);

  00082	48 8b c1	 mov	 rax, rcx
  00085	74 04		 je	 SHORT $LN1@CalculateQ

; 805  :         --q_;

  00087	48 8d 41 ff	 lea	 rax, QWORD PTR [rcx-1]
$LN1@CalculateQ:

; 806  :         return (q_);
; 807  :     }

  0008b	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00090	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00095	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  0009a	48 8b 7c 24 58	 mov	 rdi, QWORD PTR [rsp+88]
  0009f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a3	41 5e		 pop	 r14
  000a5	c3		 ret	 0
?CalculateQ_X@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z ENDP ; Palmtree::Math::Core::Internal::CalculateQ_X
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?CalculateQ_@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z
_TEXT	SEGMENT
rh_hi$1 = 112
u_buf$ = 112
lh_mi$2 = 120
v_buf$ = 120
rh_mi$3 = 128
v_buf_len$ = 128
t_hi$4 = 136
q_index$ = 136
?CalculateQ_@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z PROC ; Palmtree::Math::Core::Internal::CalculateQ_, COMDAT

; 774  :     {

  00000	40 53		 push	 rbx
  00002	55		 push	 rbp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 56		 push	 r14
  00007	41 57		 push	 r15
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 775  :         __UNIT_TYPE u_index = q_index + v_buf_len;
; 776  :         __UNIT_TYPE uj = u_buf[u_index];
; 777  :         __UNIT_TYPE uj_1 = u_buf[u_index - 1];
; 778  :         __UNIT_TYPE uj_2 = u_buf[u_index - 2];
; 779  :         __UNIT_TYPE v1 = v_buf[v_buf_len - 1];

  0000d	4e 8b 74 c2 f8	 mov	 r14, QWORD PTR [rdx+r8*8-8]
  00012	4b 8d 04 08	 lea	 rax, QWORD PTR [r8+r9]
  00016	48 8b 6c c1 f8	 mov	 rbp, QWORD PTR [rcx+rax*8-8]

; 780  :         __UNIT_TYPE v2 = v_buf[v_buf_len - 2];

  0001b	4e 8b 7c c2 f0	 mov	 r15, QWORD PTR [rdx+r8*8-16]

; 781  :         __UNIT_TYPE q_ = AsumeQ_(uj, uj_1, v1);

  00020	4d 8b c6	 mov	 r8, r14
  00023	48 8b 34 c1	 mov	 rsi, QWORD PTR [rcx+rax*8]
  00027	48 8b d5	 mov	 rdx, rbp
  0002a	48 8b 7c c1 f0	 mov	 rdi, QWORD PTR [rcx+rax*8-16]
  0002f	48 8b ce	 mov	 rcx, rsi
  00032	e8 00 00 00 00	 call	 ?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z ; Palmtree::Math::Core::Internal::AsumeQ_
  00037	48 8b d8	 mov	 rbx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0003a	48 8b cd	 mov	 rcx, rbp

; 221  :             return (_umul128(u, v, w_hi));

  0003d	49 f7 e7	 mul	 r15
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 89 54 24 78	 mov	 QWORD PTR lh_mi$2[rsp], rdx
  00048	49 8b c6	 mov	 rax, r14
  0004b	48 f7 e3	 mul	 rbx

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0004e	48 2b c8	 sub	 rcx, rax

; 221  :             return (_umul128(u, v, w_hi));

  00051	48 89 94 24 88
	00 00 00	 mov	 QWORD PTR t_hi$4[rsp], rdx

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00059	48 89 8c 24 80
	00 00 00	 mov	 QWORD PTR rh_mi$3[rsp], rcx
  00061	48 8b ce	 mov	 rcx, rsi
  00064	48 1b ca	 sbb	 rcx, rdx
  00067	48 89 4c 24 70	 mov	 QWORD PTR rh_hi$1[rsp], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  0006c	b9 02 00 00 00	 mov	 ecx, 2
  00071	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 727  :         if (rh_hi > 0)

  00079	48 83 7c 24 70
	00		 cmp	 QWORD PTR rh_hi$1[rsp], 0
  0007f	77 5f		 ja	 SHORT $LN27@CalculateQ

; 728  :             return (FALSE);
; 729  :         else if (lh_mi > rh_mi)

  00081	48 8b 44 24 78	 mov	 rax, QWORD PTR lh_mi$2[rsp]
  00086	48 3b 84 24 80
	00 00 00	 cmp	 rax, QWORD PTR rh_mi$3[rsp]
  0008e	77 0e		 ja	 SHORT $LN2@CalculateQ

; 730  :             return (TRUE);
; 731  :         else if (lh_mi < rh_mi)

  00090	72 4e		 jb	 SHORT $LN27@CalculateQ

; 732  :             return (FALSE);
; 733  :         else
; 734  :             return (lh_lo > rh_lo);

  00092	33 c0		 xor	 eax, eax
  00094	4c 3b c7	 cmp	 r8, rdi
  00097	0f 97 c0	 seta	 al

; 782  :         if (!CheckQ_(q_, uj, uj_1, uj_2, v1, v2))

  0009a	85 c0		 test	 eax, eax
  0009c	74 42		 je	 SHORT $LN27@CalculateQ
$LN2@CalculateQ:

; 784  :         --q_;
; 785  :         if (!CheckQ_(q_, uj, uj_1, uj_2, v1, v2))

  0009e	4c 89 7c 24 28	 mov	 QWORD PTR [rsp+40], r15
  000a3	48 8d 4b ff	 lea	 rcx, QWORD PTR [rbx-1]
  000a7	4c 8b cf	 mov	 r9, rdi
  000aa	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  000af	4c 8b c5	 mov	 r8, rbp
  000b2	48 8b d6	 mov	 rdx, rsi
  000b5	e8 00 00 00 00	 call	 ?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z ; Palmtree::Math::Core::Internal::CheckQ_
  000ba	85 c0		 test	 eax, eax
  000bc	75 11		 jne	 SHORT $LN3@CalculateQ

; 786  :             return (q_);

  000be	48 8d 43 ff	 lea	 rax, QWORD PTR [rbx-1]

; 788  :         return (q_);
; 789  :     }

  000c2	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000c6	41 5f		 pop	 r15
  000c8	41 5e		 pop	 r14
  000ca	5f		 pop	 rdi
  000cb	5e		 pop	 rsi
  000cc	5d		 pop	 rbp
  000cd	5b		 pop	 rbx
  000ce	c3		 ret	 0
$LN3@CalculateQ:

; 787  :         --q_;

  000cf	48 8d 43 fe	 lea	 rax, QWORD PTR [rbx-2]

; 788  :         return (q_);
; 789  :     }

  000d3	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d7	41 5f		 pop	 r15
  000d9	41 5e		 pop	 r14
  000db	5f		 pop	 rdi
  000dc	5e		 pop	 rsi
  000dd	5d		 pop	 rbp
  000de	5b		 pop	 rbx
  000df	c3		 ret	 0
$LN27@CalculateQ:

; 783  :             return (q_);

  000e0	48 8b c3	 mov	 rax, rbx

; 788  :         return (q_);
; 789  :     }

  000e3	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000e7	41 5f		 pop	 r15
  000e9	41 5e		 pop	 r14
  000eb	5f		 pop	 rdi
  000ec	5e		 pop	 rsi
  000ed	5d		 pop	 rbp
  000ee	5b		 pop	 rbx
  000ef	c3		 ret	 0
?CalculateQ_@Internal@Core@Math@Palmtree@@YA_KPEA_K0_K1@Z ENDP ; Palmtree::Math::Core::Internal::CalculateQ_
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z
_TEXT	SEGMENT
lh_mi$ = 0
rh_mi$ = 8
t_hi$ = 16
q_$ = 48
uj$ = 56
uj_1$ = 64
rh_hi$ = 72
uj_2$ = 72
v1$ = 80
v2$ = 88
?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z PROC ; Palmtree::Math::Core::Internal::CheckQ_X, COMDAT

; 738  :     {

  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00009	48 8b d1	 mov	 rdx, rcx
  0000c	c4 e2 e3 f6 44
	24 58		 mulx	 rax, rbx, QWORD PTR v2$[rsp]
  00013	48 8b 54 24 50	 mov	 rdx, QWORD PTR v1$[rsp]
  00018	48 89 04 24	 mov	 QWORD PTR lh_mi$[rsp], rax
  0001c	c4 62 fb f6 d1	 mulx	 r10, rax, rcx

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00021	4c 2b c0	 sub	 r8, rax

; 233  :             return (_mulx_u64(u, v, w_hi));

  00024	4c 89 54 24 10	 mov	 QWORD PTR t_hi$[rsp], r10

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00029	4c 89 44 24 08	 mov	 QWORD PTR rh_mi$[rsp], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  0002e	b8 02 00 00 00	 mov	 eax, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00033	4d 1b da	 sbb	 r11, r10
  00036	4c 89 5c 24 48	 mov	 QWORD PTR rh_hi$[rsp], r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  0003b	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 755  :         if (rh_hi > 0)

  00043	48 83 7c 24 48
	00		 cmp	 QWORD PTR rh_hi$[rsp], 0
  00049	77 26		 ja	 SHORT $LN23@CheckQ_X

; 756  :         {
; 757  :             return (FALSE);
; 758  :         }
; 759  :         else if (lh_mi > rh_mi)

  0004b	48 8b 04 24	 mov	 rax, QWORD PTR lh_mi$[rsp]
  0004f	48 3b 44 24 08	 cmp	 rax, QWORD PTR rh_mi$[rsp]
  00054	76 0b		 jbe	 SHORT $LN6@CheckQ_X

; 760  :         {
; 761  :             return (TRUE);

  00056	b8 01 00 00 00	 mov	 eax, 1

; 770  :         }
; 771  :     }

  0005b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005f	5b		 pop	 rbx
  00060	c3		 ret	 0
$LN6@CheckQ_X:

; 762  :         }
; 763  :         else if (lh_mi < rh_mi)

  00061	72 0e		 jb	 SHORT $LN23@CheckQ_X

; 766  :         }
; 767  :         else
; 768  :         {
; 769  :             return (lh_lo > rh_lo);

  00063	33 c0		 xor	 eax, eax
  00065	49 3b d9	 cmp	 rbx, r9
  00068	0f 97 c0	 seta	 al

; 770  :         }
; 771  :     }

  0006b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006f	5b		 pop	 rbx
  00070	c3		 ret	 0
$LN23@CheckQ_X:

; 764  :         {
; 765  :             return (FALSE);

  00071	33 c0		 xor	 eax, eax

; 770  :         }
; 771  :     }

  00073	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00077	5b		 pop	 rbx
  00078	c3		 ret	 0
?CheckQ_X@Internal@Core@Math@Palmtree@@YAH_K00000@Z ENDP ; Palmtree::Math::Core::Internal::CheckQ_X
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z
_TEXT	SEGMENT
lh_mi$ = 0
rh_mi$ = 8
t_hi$ = 16
q_$ = 48
uj$ = 56
uj_1$ = 64
rh_hi$ = 72
uj_2$ = 72
v1$ = 80
v2$ = 88
?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z PROC	; Palmtree::Math::Core::Internal::CheckQ_, COMDAT

; 711  :     {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b d2	 mov	 r10, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00007	48 8b c1	 mov	 rax, rcx
  0000a	48 f7 64 24 58	 mul	 QWORD PTR v2$[rsp]
  0000f	4c 8b d8	 mov	 r11, rax
  00012	48 89 14 24	 mov	 QWORD PTR lh_mi$[rsp], rdx
  00016	48 8b 44 24 50	 mov	 rax, QWORD PTR v1$[rsp]
  0001b	48 f7 e1	 mul	 rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  0001e	b9 02 00 00 00	 mov	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00023	4c 2b c0	 sub	 r8, rax

; 221  :             return (_umul128(u, v, w_hi));

  00026	48 89 54 24 10	 mov	 QWORD PTR t_hi$[rsp], rdx

; 202  :             return (_subborrow_u64(borrow, u, v, w));

  0002b	4c 89 44 24 08	 mov	 QWORD PTR rh_mi$[rsp], r8
  00030	4c 1b d2	 sbb	 r10, rdx
  00033	4c 89 54 24 48	 mov	 QWORD PTR rh_hi$[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00038	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 727  :         if (rh_hi > 0)

  00040	48 83 7c 24 48
	00		 cmp	 QWORD PTR rh_hi$[rsp], 0
  00046	77 24		 ja	 SHORT $LN23@CheckQ_

; 728  :             return (FALSE);
; 729  :         else if (lh_mi > rh_mi)

  00048	48 8b 04 24	 mov	 rax, QWORD PTR lh_mi$[rsp]
  0004c	48 3b 44 24 08	 cmp	 rax, QWORD PTR rh_mi$[rsp]
  00051	76 0a		 jbe	 SHORT $LN6@CheckQ_

; 730  :             return (TRUE);

  00053	b8 01 00 00 00	 mov	 eax, 1

; 735  :     }

  00058	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005c	c3		 ret	 0
$LN6@CheckQ_:

; 731  :         else if (lh_mi < rh_mi)

  0005d	72 0d		 jb	 SHORT $LN23@CheckQ_

; 733  :         else
; 734  :             return (lh_lo > rh_lo);

  0005f	33 c0		 xor	 eax, eax
  00061	4d 3b d9	 cmp	 r11, r9
  00064	0f 97 c0	 seta	 al

; 735  :     }

  00067	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006b	c3		 ret	 0
$LN23@CheckQ_:

; 732  :             return (FALSE);

  0006c	33 c0		 xor	 eax, eax

; 735  :     }

  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	c3		 ret	 0
?CheckQ_@Internal@Core@Math@Palmtree@@YAH_K00000@Z ENDP	; Palmtree::Math::Core::Internal::CheckQ_
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z
_TEXT	SEGMENT
r$ = 48
uj$ = 48
uj_1$ = 56
v1$ = 64
?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z PROC	; Palmtree::Math::Core::Internal::AsumeQ_, COMDAT

; 696  :     {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b d2	 mov	 r10, rdx

; 697  :         if (uj == v1)

  00007	49 3b c8	 cmp	 rcx, r8
  0000a	75 0c		 jne	 SHORT $LN2@AsumeQ_

; 698  :             return (-1);

  0000c	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 708  :     }

  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
$LN2@AsumeQ_:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00018	49 8b c0	 mov	 rax, r8
  0001b	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 326  :         if (v_hi == 0)

  0001f	85 c0		 test	 eax, eax
  00021	75 63		 jne	 SHORT $LN7@AsumeQ_

; 56   :             _r = (_UINT32_T)(t % v);

  00023	33 d2		 xor	 edx, edx
  00025	45 8b c8	 mov	 r9d, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00028	48 8b c1	 mov	 rax, rcx

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0002b	8b c9		 mov	 ecx, ecx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0002d	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00031	49 f7 f1	 div	 r9
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00034	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00036	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00038	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0003c	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0003f	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00042	49 f7 f1	 div	 r9
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00045	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00049	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0004b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0004d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00051	48 0b c1	 or	 rax, rcx
  00054	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00057	49 f7 f1	 div	 r9
  0005a	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0005d	8b c2		 mov	 eax, edx
  0005f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 67   :             q4 = (_UINT32_T)(t / v);

  00063	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00065	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 67   :             q4 = (_UINT32_T)(t / v);

  00068	49 f7 f1	 div	 r9
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0006b	8b c8		 mov	 ecx, eax
  0006d	41 8b c0	 mov	 eax, r8d
  00070	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00074	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 325  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  00077	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 707  :         return (q);

  0007e	48 8b c1	 mov	 rax, rcx

; 708  :     }

  00081	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00085	c3		 ret	 0
$LN7@AsumeQ_:

; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00086	4c 8d 4c 24 30	 lea	 r9, QWORD PTR r$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00090	48 8b c8	 mov	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 325  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  00093	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 708  :     }

  0009a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009e	c3		 ret	 0
?AsumeQ_@Internal@Core@Math@Palmtree@@YA_K_K00@Z ENDP	; Palmtree::Math::Core::Internal::AsumeQ_
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
tv721 = 160
u_hi$ = 160
u_lo$ = 168
v$ = 176
r$ = 184
?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z PROC ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW, COMDAT

; 161  :         {

  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	41 54		 push	 r12
  0000f	41 55		 push	 r13
  00011	41 56		 push	 r14
  00013	41 57		 push	 r15
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b d9	 mov	 rbx, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 438  :             if (x == 0)

  0001c	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 161  :         {

  00021	4d 8b e0	 mov	 r12, r8
  00024	48 8b ea	 mov	 rbp, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 438  :             if (x == 0)

  00027	4d 85 c0	 test	 r8, r8
  0002a	0f 85 80 00 00
	00		 jne	 $LN17@DIVREM_UNI

; 439  :                 return (sizeof(x) * 8);

  00030	44 8b f9	 mov	 r15d, ecx
$LN2@DIVREM_UNI:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 176  :                 u0 = (_UINT32_T)(u_hi >> (64 - d));

  00033	41 2b cf	 sub	 ecx, r15d
  00036	4c 8b f3	 mov	 r14, rbx

; 177  :                 u_hi = (u_hi << d) | (u_lo >> (64 - d));

  00039	48 d3 ea	 shr	 rdx, cl
  0003c	48 8b c3	 mov	 rax, rbx
  0003f	49 d3 ee	 shr	 r14, cl
  00042	48 8b da	 mov	 rbx, rdx
  00045	41 8b cf	 mov	 ecx, r15d
  00048	48 d3 e0	 shl	 rax, cl
  0004b	48 0b d8	 or	 rbx, rax

; 178  :                 u_lo = u_lo << d;

  0004e	48 d3 e5	 shl	 rbp, cl

; 179  :                 v = v << d;

  00051	49 d3 e4	 shl	 r12, cl
$LN3@DIVREM_UNI:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00054	48 8b f3	 mov	 rsi, rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 193  :                 q_ = _Calculate_Q_(u0, u1, u2, v1, v2);

  00057	44 89 64 24 20	 mov	 DWORD PTR [rsp+32], r12d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0005c	4d 8b ec	 mov	 r13, r12
  0005f	48 c1 ee 20	 shr	 rsi, 32			; 00000020H
  00063	49 c1 ed 20	 shr	 r13, 32			; 00000020H
  00067	48 8b fd	 mov	 rdi, rbp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 193  :                 q_ = _Calculate_Q_(u0, u1, u2, v1, v2);

  0006a	45 8b cd	 mov	 r9d, r13d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0006d	48 c1 ef 20	 shr	 rdi, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 193  :                 q_ = _Calculate_Q_(u0, u1, u2, v1, v2);

  00071	8b d6		 mov	 edx, esi
  00073	44 8b c3	 mov	 r8d, ebx
  00076	41 8b ce	 mov	 ecx, r14d
  00079	e8 00 00 00 00	 call	 ?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z ; Palmtree::Math::Core::Internal::DivRem::_Calculate_Q_
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0007e	41 8b cc	 mov	 ecx, r12d
  00081	49 8b d5	 mov	 rdx, r13
  00084	48 c1 e2 20	 shl	 rdx, 32			; 00000020H
  00088	48 0b d1	 or	 rdx, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 196  :                 _UINT64_T t_lo = _umul128(_FROMWORDTODWORD(v1, v2), q_, &t_hi);

  0008b	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0008d	48 89 94 24 a0
	00 00 00	 mov	 QWORD PTR tv721[rsp], rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 196  :                 _UINT64_T t_lo = _umul128(_FROMWORDTODWORD(v1, v2), q_, &t_hi);

  00095	48 f7 e2	 mul	 rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00098	4c 8b c0	 mov	 r8, rax
  0009b	48 8b ca	 mov	 rcx, rdx
  0009e	49 c1 e8 20	 shr	 r8, 32			; 00000020H
  000a2	48 c1 e9 20	 shr	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 201  :                 if (tt != 0)

  000a6	85 c9		 test	 ecx, ecx
  000a8	0f 85 61 01 00
	00		 jne	 $LN52@DIVREM_UNI
  000ae	eb 18		 jmp	 SHORT $LN4@DIVREM_UNI
$LN17@DIVREM_UNI:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 442  :             _BitScanReverse64(&pos, x);

  000b0	49 0f bd c4	 bsr	 rax, r12

; 443  : #elif defined(__GNUC__)
; 444  :             _UINT64_T pos;
; 445  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 446  : #else
; 447  : #error unknown compiler
; 448  : #endif
; 449  :             return (sizeof(x) * 8 - 1 - pos);

  000b4	41 bf 3f 00 00
	00		 mov	 r15d, 63		; 0000003fH
  000ba	44 2b f8	 sub	 r15d, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 170  :             if (d == 0)

  000bd	0f 85 70 ff ff
	ff		 jne	 $LN2@DIVREM_UNI

; 171  :             {
; 172  :                 u0 = 0;

  000c3	45 33 f6	 xor	 r14d, r14d

; 173  :             }
; 174  :             else

  000c6	eb 8c		 jmp	 SHORT $LN3@DIVREM_UNI
$LN4@DIVREM_UNI:

; 203  :                 char borrow = 0;
; 204  :                 borrow = _subborrow_u32(borrow, u2, t2, &u2);

  000c8	2b d8		 sub	 ebx, eax

; 205  :                 borrow = _subborrow_u32(borrow, u1, t1, &u1);

  000ca	41 1b f0	 sbb	 esi, r8d

; 206  :                 borrow = _subborrow_u32(borrow, u0, t0, &u0);

  000cd	44 1b f2	 sbb	 r14d, edx
  000d0	0f 92 c0	 setb	 al

; 207  :                 if (borrow)

  000d3	84 c0		 test	 al, al
  000d5	74 0a		 je	 SHORT $LN5@DIVREM_UNI

; 208  :                 {
; 209  :                     char carry = 0;
; 210  :                     carry = _addcarry_u32(carry, u2, v2, &u2);

  000d7	41 03 dc	 add	 ebx, r12d

; 211  :                     carry = _addcarry_u32(carry, u1, v1, &u1);

  000da	41 13 f5	 adc	 esi, r13d

; 212  :                     carry = _addcarry_u32(carry, u0, 0, &u0);

  000dd	41 83 d6 00	 adc	 r14d, 0
$LN5@DIVREM_UNI:

; 213  :                     --q_;
; 214  :                 }
; 215  :                 q1 = q_;
; 216  :                 if (u0 > 0)

  000e1	45 85 f6	 test	 r14d, r14d
  000e4	0f 85 4f 01 00
	00		 jne	 $LN53@DIVREM_UNI

; 218  :             }
; 219  : 
; 220  :             {
; 221  :                 q_ = _Calculate_Q_(u1, u2, u3, v1, v2);

  000ea	45 8b cd	 mov	 r9d, r13d
  000ed	44 89 64 24 20	 mov	 DWORD PTR [rsp+32], r12d
  000f2	44 8b c7	 mov	 r8d, edi
  000f5	8b d3		 mov	 edx, ebx
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z ; Palmtree::Math::Core::Internal::DivRem::_Calculate_Q_
  000fe	44 8b f0	 mov	 r14d, eax

; 222  : 
; 223  :                 _UINT64_T t_hi;
; 224  :                 _UINT64_T t_lo = _umul128(_FROMWORDTODWORD(v1, v2), q_, &t_hi);

  00101	8b c0		 mov	 eax, eax
  00103	48 f7 a4 24 a0
	00 00 00	 mul	 QWORD PTR tv721[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0010b	4c 8b c0	 mov	 r8, rax
  0010e	48 8b ca	 mov	 rcx, rdx
  00111	49 c1 e8 20	 shr	 r8, 32			; 00000020H
  00115	48 c1 e9 20	 shr	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 229  :                 if (tt != 0)

  00119	85 c9		 test	 ecx, ecx
  0011b	0f 85 42 01 00
	00		 jne	 $LN54@DIVREM_UNI

; 231  :                 char borrow = 0;
; 232  :                 borrow = _subborrow_u32(borrow, u3, t2, &u3);

  00121	2b f8		 sub	 edi, eax

; 233  :                 borrow = _subborrow_u32(borrow, u2, t1, &u2);

  00123	41 1b d8	 sbb	 ebx, r8d

; 234  :                 borrow = _subborrow_u32(borrow, u1, t0, &u1);

  00126	1b f2		 sbb	 esi, edx
  00128	0f 92 c0	 setb	 al

; 235  :                 if (borrow)

  0012b	84 c0		 test	 al, al
  0012d	74 0b		 je	 SHORT $LN8@DIVREM_UNI

; 236  :                 {
; 237  :                     char carry = 0;
; 238  :                     carry = _addcarry_u32(carry, u3, v2, &u3);

  0012f	41 03 fc	 add	 edi, r12d

; 239  :                     carry = _addcarry_u32(carry, u2, v1, &u2);

  00132	41 13 dd	 adc	 ebx, r13d

; 240  :                     carry = _addcarry_u32(carry, u1, 0, &u1);

  00135	13 f1		 adc	 esi, ecx

; 241  :                     --q_;

  00137	41 ff ce	 dec	 r14d
$LN8@DIVREM_UNI:

; 242  :                 }
; 243  :                 q2 = q_;
; 244  :                 if (u1 > 0)

  0013a	85 f6		 test	 esi, esi
  0013c	0f 85 4b 01 00
	00		 jne	 $LN55@DIVREM_UNI

; 246  :             }
; 247  : 
; 248  :             {
; 249  :                 q_ = _Calculate_Q_(u2, u3, u4, v1, v2);

  00142	45 8b cd	 mov	 r9d, r13d
  00145	44 89 64 24 20	 mov	 DWORD PTR [rsp+32], r12d
  0014a	44 8b c5	 mov	 r8d, ebp
  0014d	8b d7		 mov	 edx, edi
  0014f	8b cb		 mov	 ecx, ebx
  00151	e8 00 00 00 00	 call	 ?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z ; Palmtree::Math::Core::Internal::DivRem::_Calculate_Q_
  00156	44 8b d0	 mov	 r10d, eax

; 250  : 
; 251  :                 _UINT64_T t_hi;
; 252  :                 _UINT64_T t_lo = _umul128(_FROMWORDTODWORD(v1, v2), q_, &t_hi);

  00159	8b c0		 mov	 eax, eax
  0015b	48 f7 a4 24 a0
	00 00 00	 mul	 QWORD PTR tv721[rsp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00163	4c 8b c0	 mov	 r8, rax
  00166	48 8b ca	 mov	 rcx, rdx
  00169	49 c1 e8 20	 shr	 r8, 32			; 00000020H
  0016d	48 c1 e9 20	 shr	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 257  :                 if (tt != 0)

  00171	85 c9		 test	 ecx, ecx
  00173	0f 85 3e 01 00
	00		 jne	 $LN56@DIVREM_UNI

; 259  :                 char borrow = 0;
; 260  :                 borrow = _subborrow_u32(borrow, u4, t2, &u4);

  00179	2b e8		 sub	 ebp, eax

; 261  :                 borrow = _subborrow_u32(borrow, u3, t1, &u3);

  0017b	41 1b f8	 sbb	 edi, r8d

; 262  :                 borrow = _subborrow_u32(borrow, u2, t0, &u2);

  0017e	1b da		 sbb	 ebx, edx
  00180	0f 92 c0	 setb	 al

; 263  :                 if (borrow)

  00183	84 c0		 test	 al, al
  00185	74 0b		 je	 SHORT $LN11@DIVREM_UNI

; 264  :                 {
; 265  :                     char carry = 0;
; 266  :                     carry = _addcarry_u32(carry, u4, v2, &u4);

  00187	41 03 ec	 add	 ebp, r12d

; 267  :                     carry = _addcarry_u32(carry, u3, v1, &u3);

  0018a	41 13 fd	 adc	 edi, r13d

; 268  :                     carry = _addcarry_u32(carry, u2, 0, &u2);

  0018d	13 d9		 adc	 ebx, ecx

; 269  :                     --q_;

  0018f	41 ff ca	 dec	 r10d
$LN11@DIVREM_UNI:

; 270  :                 }
; 271  :                 q3 = q_;
; 272  :                 if (u2 > 0)

  00192	85 db		 test	 ebx, ebx
  00194	0f 85 47 01 00
	00		 jne	 $LN57@DIVREM_UNI

; 274  :             }
; 275  : 
; 276  :             if (d == 0)

  0019a	44 8b cf	 mov	 r9d, edi
  0019d	45 85 ff	 test	 r15d, r15d
  001a0	75 08		 jne	 SHORT $LN13@DIVREM_UNI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001a2	49 c1 e1 20	 shl	 r9, 32			; 00000020H
  001a6	8b c5		 mov	 eax, ebp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 278  :             else

  001a8	eb 32		 jmp	 SHORT $LN50@DIVREM_UNI
$LN13@DIVREM_UNI:

; 282  :                 _UINT32_T r_lo = (u3 << (32 - d)) | (u4 >> d);

  001aa	49 63 d7	 movsxd	 rdx, r15d
  001ad	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  001b3	48 8b ca	 mov	 rcx, rdx
  001b6	45 2b c7	 sub	 r8d, r15d
  001b9	49 d3 e9	 shr	 r9, cl
  001bc	41 8b c8	 mov	 ecx, r8d
  001bf	d3 e3		 shl	 ebx, cl
  001c1	48 8b ca	 mov	 rcx, rdx
  001c4	8b c3		 mov	 eax, ebx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001c6	4c 0b c8	 or	 r9, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 282  :                 _UINT32_T r_lo = (u3 << (32 - d)) | (u4 >> d);

  001c9	8b c5		 mov	 eax, ebp
  001cb	48 d3 e8	 shr	 rax, cl
  001ce	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001d1	49 c1 e1 20	 shl	 r9, 32			; 00000020H
  001d5	4c 0b c8	 or	 r9, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 282  :                 _UINT32_T r_lo = (u3 << (32 - d)) | (u4 >> d);

  001d8	d3 e7		 shl	 edi, cl
  001da	8b c7		 mov	 eax, edi
$LN50@DIVREM_UNI:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001dc	4c 0b c8	 or	 r9, rax
  001df	41 8b ca	 mov	 ecx, r10d
  001e2	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR r$[rsp]
  001ea	4c 89 08	 mov	 QWORD PTR [rax], r9
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 319  :         }

  001ed	48 8b 9c 24 a8
	00 00 00	 mov	 rbx, QWORD PTR [rsp+168]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001f5	41 8b c6	 mov	 eax, r14d
  001f8	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  001fc	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 319  :         }

  001ff	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00203	41 5f		 pop	 r15
  00205	41 5e		 pop	 r14
  00207	41 5d		 pop	 r13
  00209	41 5c		 pop	 r12
  0020b	5f		 pop	 rdi
  0020c	5e		 pop	 rsi
  0020d	5d		 pop	 rbp
  0020e	c3		 ret	 0
$LN52@DIVREM_UNI:

; 202  :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_nW;0");

  0020f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00216	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  0021d	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T6[rsp]
  00222	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00227	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0022e	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T6[rsp]
  00233	e8 00 00 00 00	 call	 _CxxThrowException
  00238	cc		 int	 3
$LN53@DIVREM_UNI:

; 217  :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_nW;0");

  00239	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00240	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  00247	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T5[rsp]
  0024c	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00251	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00258	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T5[rsp]
  0025d	e8 00 00 00 00	 call	 _CxxThrowException
  00262	cc		 int	 3
$LN54@DIVREM_UNI:

; 230  :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_nW;0");

  00263	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  0026a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  00271	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T4[rsp]
  00276	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  0027b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00282	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T4[rsp]
  00287	e8 00 00 00 00	 call	 _CxxThrowException
  0028c	cc		 int	 3
$LN55@DIVREM_UNI:

; 245  :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_nW;0");

  0028d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00294	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  0029b	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  002a0	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  002a5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  002ac	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  002b1	e8 00 00 00 00	 call	 _CxxThrowException
  002b6	cc		 int	 3
$LN56@DIVREM_UNI:

; 258  :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_nW;0");

  002b7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  002be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  002c5	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T2[rsp]
  002ca	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  002cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  002d6	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T2[rsp]
  002db	e8 00 00 00 00	 call	 _CxxThrowException
  002e0	cc		 int	 3
$LN57@DIVREM_UNI:

; 273  :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_nW;0");

  002e1	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1FC@EDOPPJEK@?$AAp?$AAm?$AAc?$AA_?$AAd?$AAi?$AAv?$AAr?$AAe?$AAm?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  002e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  002ef	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  002f4	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  002f9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00300	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  00305	e8 00 00 00 00	 call	 _CxxThrowException
  0030a	cc		 int	 3
$LN49@DIVREM_UNI:
?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ENDP ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z
_TEXT	SEGMENT
uj$ = 8
uj1$ = 16
uj2$ = 24
v1$ = 32
v2$ = 40
?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z PROC ; Palmtree::Math::Core::Internal::DivRem::_Calculate_Q_, COMDAT

; 138  :         {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	44 8b d2	 mov	 r10d, edx
  00017	41 8b d8	 mov	 ebx, r8d
  0001a	44 8b d9	 mov	 r11d, ecx
  0001d	41 8b e9	 mov	 ebp, r9d

; 111  :             return (uj == v1 ? (_UINT32_T)-1 : (_UINT32_T)(_FROMWORDTODWORD(uj, uj1) / v1));

  00020	41 3b c9	 cmp	 ecx, r9d
  00023	75 08		 jne	 SHORT $LN7@Calculate_
  00025	41 b9 ff ff ff
	ff		 mov	 r9d, -1			; ffffffffH
  0002b	eb 12		 jmp	 SHORT $LN8@Calculate_
$LN7@Calculate_:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0002d	49 8b c3	 mov	 rax, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 111  :             return (uj == v1 ? (_UINT32_T)-1 : (_UINT32_T)(_FROMWORDTODWORD(uj, uj1) / v1));

  00030	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00032	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00036	49 0b c2	 or	 rax, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 111  :             return (uj == v1 ? (_UINT32_T)-1 : (_UINT32_T)(_FROMWORDTODWORD(uj, uj1) / v1));

  00039	48 f7 f5	 div	 rbp
  0003c	4c 8b c8	 mov	 r9, rax
$LN8@Calculate_:

; 117  :             _UINT32_T x1_lo = _FROMDWORDTOWORD((_UINT64_T)v2 * q_, &x1_hi);

  0003f	8b 7c 24 28	 mov	 edi, DWORD PTR v2$[rsp]
  00043	45 8b c1	 mov	 r8d, r9d
  00046	8b f7		 mov	 esi, edi
  00048	49 0f af f0	 imul	 rsi, r8

; 118  :             _UINT32_T x2_hi;
; 119  :             _UINT32_T x2_lo = _FROMDWORDTOWORD((_UINT64_T)v1 * q_, &x2_hi);

  0004c	4c 0f af c5	 imul	 r8, rbp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00050	48 8b d6	 mov	 rdx, rsi
  00053	48 c1 ea 20	 shr	 rdx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 124  :             carry = _addcarry_u32(carry, x1_lo,     0, &lh2);

  00057	83 c6 00	 add	 esi, 0

; 125  :             carry = _addcarry_u32(carry, x1_hi, x2_lo, &lh1);

  0005a	41 13 d0	 adc	 edx, r8d
  0005d	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00060	49 c1 e8 20	 shr	 r8, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 126  :             carry = _addcarry_u32(carry,     0, x2_hi, &lh0);

  00064	04 ff		 add	 al, -1
  00066	41 83 d0 00	 adc	 r8d, 0

; 127  :             _UINT32_T rh2 = uj2;
; 128  :             _UINT32_T rh1 = uj1;
; 129  :             _UINT32_T rh0 = uj;
; 130  :             if (rh0 != lh0)

  0006a	33 c9		 xor	 ecx, ecx
  0006c	45 3b d8	 cmp	 r11d, r8d
  0006f	74 05		 je	 SHORT $LN12@Calculate_

; 131  :                 return (lh0 > rh0);

  00071	45 3b c3	 cmp	 r8d, r11d
  00074	eb 0c		 jmp	 SHORT $LN29@Calculate_
$LN12@Calculate_:

; 132  :             if (rh1 != lh1)

  00076	44 3b d2	 cmp	 r10d, edx
  00079	74 05		 je	 SHORT $LN13@Calculate_

; 133  :                 return (lh1 > rh1);

  0007b	41 3b d2	 cmp	 edx, r10d
  0007e	eb 02		 jmp	 SHORT $LN29@Calculate_
$LN13@Calculate_:

; 134  :             return (lh2 > rh2);

  00080	3b f3		 cmp	 esi, ebx
$LN29@Calculate_:

; 139  :             _UINT32_T q_ = _Asume_Q_(uj, uj1, v1);
; 140  :             if (_Check_Q_(q_, uj, uj1, uj2, v1, v2))

  00082	8b c1		 mov	 eax, ecx
  00084	0f 97 c0	 seta	 al
  00087	85 c0		 test	 eax, eax
  00089	74 49		 je	 SHORT $LN28@Calculate_

; 141  :             {
; 142  :                 --q_;

  0008b	41 ff c9	 dec	 r9d

; 117  :             _UINT32_T x1_lo = _FROMDWORDTOWORD((_UINT64_T)v2 * q_, &x1_hi);

  0008e	45 8b c1	 mov	 r8d, r9d
  00091	49 0f af f8	 imul	 rdi, r8

; 118  :             _UINT32_T x2_hi;
; 119  :             _UINT32_T x2_lo = _FROMDWORDTOWORD((_UINT64_T)v1 * q_, &x2_hi);

  00095	4c 0f af c5	 imul	 r8, rbp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00099	48 8b d7	 mov	 rdx, rdi
  0009c	48 c1 ea 20	 shr	 rdx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 124  :             carry = _addcarry_u32(carry, x1_lo,     0, &lh2);

  000a0	83 c7 00	 add	 edi, 0

; 125  :             carry = _addcarry_u32(carry, x1_hi, x2_lo, &lh1);

  000a3	41 13 d0	 adc	 edx, r8d
  000a6	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000a9	49 c1 e8 20	 shr	 r8, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 126  :             carry = _addcarry_u32(carry,     0, x2_hi, &lh0);

  000ad	04 ff		 add	 al, -1
  000af	41 83 d0 00	 adc	 r8d, 0

; 127  :             _UINT32_T rh2 = uj2;
; 128  :             _UINT32_T rh1 = uj1;
; 129  :             _UINT32_T rh0 = uj;
; 130  :             if (rh0 != lh0)

  000b3	45 3b d8	 cmp	 r11d, r8d
  000b6	74 05		 je	 SHORT $LN20@Calculate_

; 131  :                 return (lh0 > rh0);

  000b8	0f 92 c1	 setb	 cl
  000bb	eb 0f		 jmp	 SHORT $LN19@Calculate_
$LN20@Calculate_:

; 132  :             if (rh1 != lh1)

  000bd	44 3b d2	 cmp	 r10d, edx
  000c0	74 05		 je	 SHORT $LN21@Calculate_

; 133  :                 return (lh1 > rh1);

  000c2	0f 92 c1	 setb	 cl
  000c5	eb 05		 jmp	 SHORT $LN19@Calculate_
$LN21@Calculate_:

; 134  :             return (lh2 > rh2);

  000c7	3b fb		 cmp	 edi, ebx
  000c9	0f 97 c1	 seta	 cl
$LN19@Calculate_:

; 143  :                 if (_Check_Q_(q_, uj, uj1, uj2, v1, v2))
; 144  :                     --q_;
; 145  :             }
; 146  :             return (q_);

  000cc	41 8d 41 ff	 lea	 eax, DWORD PTR [r9-1]
  000d0	85 c9		 test	 ecx, ecx
  000d2	75 03		 jne	 SHORT $LN3@Calculate_
$LN28@Calculate_:

; 147  :         }

  000d4	41 8b c1	 mov	 eax, r9d
$LN3@Calculate_:
  000d7	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  000dc	48 8b 6c 24 10	 mov	 rbp, QWORD PTR [rsp+16]
  000e1	48 8b 74 24 18	 mov	 rsi, QWORD PTR [rsp+24]
  000e6	48 8b 7c 24 20	 mov	 rdi, QWORD PTR [rsp+32]
  000eb	c3		 ret	 0
?_Calculate_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIIIII@Z ENDP ; Palmtree::Math::Core::Internal::DivRem::_Calculate_Q_
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?_Check_Q_@DivRem@Internal@Core@Math@Palmtree@@YAHIIIIII@Z
_TEXT	SEGMENT
q_$ = 8
uj$ = 16
uj1$ = 24
uj2$ = 32
v1$ = 40
v2$ = 48
?_Check_Q_@DivRem@Internal@Core@Math@Palmtree@@YAHIIIIII@Z PROC ; Palmtree::Math::Core::Internal::DivRem::_Check_Q_, COMDAT

; 116  :             _UINT32_T x1_hi;
; 117  :             _UINT32_T x1_lo = _FROMDWORDTOWORD((_UINT64_T)v2 * q_, &x1_hi);

  00000	44 8b 5c 24 30	 mov	 r11d, DWORD PTR v2$[rsp]

; 118  :             _UINT32_T x2_hi;
; 119  :             _UINT32_T x2_lo = _FROMDWORDTOWORD((_UINT64_T)v1 * q_, &x2_hi);

  00005	44 8b 54 24 28	 mov	 r10d, DWORD PTR v1$[rsp]
  0000a	8b c1		 mov	 eax, ecx
  0000c	4c 0f af d0	 imul	 r10, rax
  00010	4c 0f af d8	 imul	 r11, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00014	49 8b cb	 mov	 rcx, r11
  00017	48 c1 e9 20	 shr	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 124  :             carry = _addcarry_u32(carry, x1_lo,     0, &lh2);

  0001b	41 83 c3 00	 add	 r11d, 0

; 125  :             carry = _addcarry_u32(carry, x1_hi, x2_lo, &lh1);

  0001f	41 13 ca	 adc	 ecx, r10d
  00022	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00025	49 c1 ea 20	 shr	 r10, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 126  :             carry = _addcarry_u32(carry,     0, x2_hi, &lh0);

  00029	04 ff		 add	 al, -1
  0002b	41 83 d2 00	 adc	 r10d, 0

; 127  :             _UINT32_T rh2 = uj2;
; 128  :             _UINT32_T rh1 = uj1;
; 129  :             _UINT32_T rh0 = uj;
; 130  :             if (rh0 != lh0)

  0002f	33 c0		 xor	 eax, eax
  00031	41 3b d2	 cmp	 edx, r10d
  00034	74 07		 je	 SHORT $LN2@Check_Q_

; 131  :                 return (lh0 > rh0);

  00036	44 3b d2	 cmp	 r10d, edx

; 135  :         }

  00039	0f 97 c0	 seta	 al
  0003c	c3		 ret	 0
$LN2@Check_Q_:

; 132  :             if (rh1 != lh1)

  0003d	44 3b c1	 cmp	 r8d, ecx
  00040	74 07		 je	 SHORT $LN3@Check_Q_

; 133  :                 return (lh1 > rh1);

  00042	41 3b c8	 cmp	 ecx, r8d

; 135  :         }

  00045	0f 97 c0	 seta	 al
  00048	c3		 ret	 0
$LN3@Check_Q_:

; 134  :             return (lh2 > rh2);

  00049	45 3b d9	 cmp	 r11d, r9d

; 135  :         }

  0004c	0f 97 c0	 seta	 al
  0004f	c3		 ret	 0
?_Check_Q_@DivRem@Internal@Core@Math@Palmtree@@YAHIIIIII@Z ENDP ; Palmtree::Math::Core::Internal::DivRem::_Check_Q_
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?_Asume_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIII@Z
_TEXT	SEGMENT
uj$ = 8
uj1$ = 16
v1$ = 24
?_Asume_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIII@Z PROC ; Palmtree::Math::Core::Internal::DivRem::_Asume_Q_, COMDAT

; 111  :             return (uj == v1 ? (_UINT32_T)-1 : (_UINT32_T)(_FROMWORDTODWORD(uj, uj1) / v1));

  00000	41 3b c8	 cmp	 ecx, r8d
  00003	75 06		 jne	 SHORT $LN3@Asume_Q_
  00005	b8 ff ff ff ff	 mov	 eax, -1			; ffffffffH

; 112  :         }

  0000a	c3		 ret	 0
$LN3@Asume_Q_:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0000b	8b c1		 mov	 eax, ecx
  0000d	8b ca		 mov	 ecx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 111  :             return (uj == v1 ? (_UINT32_T)-1 : (_UINT32_T)(_FROMWORDTODWORD(uj, uj1) / v1));

  0000f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00011	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00015	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 111  :             return (uj == v1 ? (_UINT32_T)-1 : (_UINT32_T)(_FROMWORDTODWORD(uj, uj1) / v1));

  00018	41 8b c8	 mov	 ecx, r8d
  0001b	48 f7 f1	 div	 rcx

; 112  :         }

  0001e	c3		 ret	 0
?_Asume_Q_@DivRem@Internal@Core@Math@Palmtree@@YAIIII@Z ENDP ; Palmtree::Math::Core::Internal::DivRem::_Asume_Q_
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?_DIVREM_UNIT_1W@DivRem@Internal@Core@Math@Palmtree@@YA_K_K0IPEA_K@Z
_TEXT	SEGMENT
u_hi$ = 8
u_lo$ = 16
v$ = 24
r$ = 32
?_DIVREM_UNIT_1W@DivRem@Internal@Core@Math@Palmtree@@YA_K_K0IPEA_K@Z PROC ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_1W, COMDAT

; 42   :         {

  00000	4c 8b d2	 mov	 r10, rdx

; 56   :             _r = (_UINT32_T)(t % v);

  00003	45 8b d8	 mov	 r11d, r8d
  00006	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00008	48 8b c1	 mov	 rax, rcx
  0000b	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0000f	49 f7 f3	 div	 r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00012	8b c9		 mov	 ecx, ecx
  00014	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00016	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00018	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0001c	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0001f	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00022	49 f7 f3	 div	 r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00025	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00029	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0002b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0002d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00031	48 0b c1	 or	 rax, rcx
  00034	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00037	49 f7 f3	 div	 r11
  0003a	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0003d	8b c2		 mov	 eax, edx
  0003f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00043	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00045	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00048	49 f7 f3	 div	 r11
  0004b	8b ca		 mov	 ecx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0004d	41 8b d0	 mov	 edx, r8d
  00050	48 c1 e2 20	 shl	 rdx, 32			; 00000020H
  00054	8b c0		 mov	 eax, eax
  00056	48 0b c2	 or	 rax, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00059	49 89 09	 mov	 QWORD PTR [r9], rcx

; 69   : 
; 70   : #ifdef _DEBUG
; 71   :             {
; 72   :                 if (*r < 0)
; 73   :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_1W;1");
; 74   :                 if (*r >= v)
; 75   :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_1W;2");
; 76   :                 _UINT64_T temp4 = (_UINT64_T)q4 * v;
; 77   :                 _UINT64_T temp3 = (_UINT64_T)q3 * v;
; 78   :                 _UINT64_T temp2 = (_UINT64_T)q2 * v;
; 79   :                 _UINT64_T temp1 = (_UINT64_T)q1 * v;
; 80   :                 _UINT32_T t_u4;
; 81   :                 _UINT32_T t_u3;
; 82   :                 _UINT32_T t_u2;
; 83   :                 _UINT32_T t_u1;
; 84   :                 _UINT32_T t_u0;
; 85   :                 char carry = 0;
; 86   :                 carry = _addcarry_u32(carry, (_UINT32_T)temp4, (_UINT32_T)*r, &t_u4);
; 87   :                 carry = _addcarry_u32(carry, (_UINT32_T)temp3, (_UINT32_T)(temp4 >> 32), &t_u3);
; 88   :                 carry = _addcarry_u32(carry, (_UINT32_T)temp2, (_UINT32_T)(temp3 >> 32), &t_u2);
; 89   :                 carry = _addcarry_u32(carry, (_UINT32_T)temp1, (_UINT32_T)(temp2 >> 32), &t_u1);
; 90   :                 carry = _addcarry_u32(carry, 0, temp1 >> 32, &t_u0);
; 91   :                 if (carry)
; 92   :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_1W;3");
; 93   :                 if (t_u0 != 0)
; 94   :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_1W;4");
; 95   :                 if (t_u1 != (u_hi >> 32))
; 96   :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_1W;5");
; 97   :                 if (t_u2 != (_UINT32_T)u_hi)
; 98   :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_1W;6");
; 99   :                 if (t_u3 != (u_lo >> 32))
; 100  :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_1W;7");
; 101  :                 if (t_u4 != (_UINT32_T)u_lo)
; 102  :                     throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_divrem.cpp;DivRem::_DIVREM_UNIT_1W;8");
; 103  :             }
; 104  : #endif
; 105  : 
; 106  :             return (_FROMWORDTODWORD(q3, q4));
; 107  :         }

  0005c	c3		 ret	 0
?_DIVREM_UNIT_1W@DivRem@Internal@Core@Math@Palmtree@@YA_K_K0IPEA_K@Z ENDP ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_1W
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_2WORDS_ADCX
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_2WORDS_ADCX PROC					; COMDAT

; 2229 : #ifdef _MSC_VER
; 2230 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	66 49 0f 38 f6
	00		 adcx	 rax, QWORD PTR [r8]
  0000c	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2231 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0000f	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00013	66 49 0f 38 f6
	48 08		 adcx	 rcx, QWORD PTR [r8+8]
  0001a	49 89 49 08	 mov	 QWORD PTR [r9+8], rcx
  0001e	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2268 : }

  00021	c3		 ret	 0
_ADD_2WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_2WORDS_ADC
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_2WORDS_ADC PROC					; COMDAT

; 2186 : #ifdef _MSC_VER
; 2187 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	49 13 00	 adc	 rax, QWORD PTR [r8]
  00009	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2188 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  0000c	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00010	49 13 48 08	 adc	 rcx, QWORD PTR [r8+8]
  00014	49 89 49 08	 mov	 QWORD PTR [r9+8], rcx
  00018	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2225 : }

  0001b	c3		 ret	 0
_ADD_2WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_4WORDS_ADCX
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_4WORDS_ADCX PROC					; COMDAT

; 2015 : #ifdef _MSC_VER
; 2016 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	66 49 0f 38 f6
	00		 adcx	 rax, QWORD PTR [r8]
  0000c	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2017 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0000f	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00013	66 49 0f 38 f6
	40 08		 adcx	 rax, QWORD PTR [r8+8]
  0001a	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2018 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  0001e	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00022	66 49 0f 38 f6
	40 10		 adcx	 rax, QWORD PTR [r8+16]
  00029	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2019 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  0002d	48 8b 4a 18	 mov	 rcx, QWORD PTR [rdx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00031	66 49 0f 38 f6
	48 18		 adcx	 rcx, QWORD PTR [r8+24]
  00038	49 89 49 18	 mov	 QWORD PTR [r9+24], rcx
  0003c	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2068 : }

  0003f	c3		 ret	 0
_ADD_4WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_4WORDS_ADC
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_4WORDS_ADC PROC					; COMDAT

; 1958 : #ifdef _MSC_VER
; 1959 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	49 13 00	 adc	 rax, QWORD PTR [r8]
  00009	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1960 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  0000c	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00010	49 13 40 08	 adc	 rax, QWORD PTR [r8+8]
  00014	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1961 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00018	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0001c	49 13 40 10	 adc	 rax, QWORD PTR [r8+16]
  00020	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1962 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  00024	48 8b 4a 18	 mov	 rcx, QWORD PTR [rdx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00028	49 13 48 18	 adc	 rcx, QWORD PTR [r8+24]
  0002c	49 89 49 18	 mov	 QWORD PTR [r9+24], rcx
  00030	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2011 : }

  00033	c3		 ret	 0
_ADD_4WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_8WORDS_ADCX
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_8WORDS_ADCX PROC					; COMDAT

; 1703 : #ifdef _MSC_VER
; 1704 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	66 49 0f 38 f6
	00		 adcx	 rax, QWORD PTR [r8]
  0000c	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1705 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0000f	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00013	66 49 0f 38 f6
	40 08		 adcx	 rax, QWORD PTR [r8+8]
  0001a	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1706 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  0001e	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00022	66 49 0f 38 f6
	40 10		 adcx	 rax, QWORD PTR [r8+16]
  00029	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1707 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  0002d	48 8b 42 18	 mov	 rax, QWORD PTR [rdx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00031	66 49 0f 38 f6
	40 18		 adcx	 rax, QWORD PTR [r8+24]
  00038	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1708 :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  0003c	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00040	66 49 0f 38 f6
	40 20		 adcx	 rax, QWORD PTR [r8+32]
  00047	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1709 :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  0004b	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0004f	66 49 0f 38 f6
	40 28		 adcx	 rax, QWORD PTR [r8+40]
  00056	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1710 :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  0005a	48 8b 42 30	 mov	 rax, QWORD PTR [rdx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0005e	66 49 0f 38 f6
	40 30		 adcx	 rax, QWORD PTR [r8+48]
  00065	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1711 :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  00069	48 8b 4a 38	 mov	 rcx, QWORD PTR [rdx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0006d	66 49 0f 38 f6
	48 38		 adcx	 rcx, QWORD PTR [r8+56]
  00074	49 89 49 38	 mov	 QWORD PTR [r9+56], rcx
  00078	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1784 : }

  0007b	c3		 ret	 0
_ADD_8WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_8WORDS_ADC
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_8WORDS_ADC PROC					; COMDAT

; 1618 : #ifdef _MSC_VER
; 1619 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	49 13 00	 adc	 rax, QWORD PTR [r8]
  00009	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1620 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  0000c	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00010	49 13 40 08	 adc	 rax, QWORD PTR [r8+8]
  00014	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1621 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00018	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0001c	49 13 40 10	 adc	 rax, QWORD PTR [r8+16]
  00020	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1622 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  00024	48 8b 42 18	 mov	 rax, QWORD PTR [rdx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00028	49 13 40 18	 adc	 rax, QWORD PTR [r8+24]
  0002c	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1623 :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  00030	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00034	49 13 40 20	 adc	 rax, QWORD PTR [r8+32]
  00038	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1624 :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  0003c	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00040	49 13 40 28	 adc	 rax, QWORD PTR [r8+40]
  00044	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1625 :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  00048	48 8b 42 30	 mov	 rax, QWORD PTR [rdx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0004c	49 13 40 30	 adc	 rax, QWORD PTR [r8+48]
  00050	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1626 :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  00054	48 8b 4a 38	 mov	 rcx, QWORD PTR [rdx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00058	49 13 48 38	 adc	 rcx, QWORD PTR [r8+56]
  0005c	49 89 49 38	 mov	 QWORD PTR [r9+56], rcx
  00060	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1699 : }

  00063	c3		 ret	 0
_ADD_8WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_16WORDS_ADCX
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_16WORDS_ADCX PROC					; COMDAT

; 1195 : #ifdef _MSC_VER
; 1196 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	66 49 0f 38 f6
	00		 adcx	 rax, QWORD PTR [r8]
  0000c	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1197 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0000f	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00013	66 49 0f 38 f6
	40 08		 adcx	 rax, QWORD PTR [r8+8]
  0001a	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1198 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  0001e	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00022	66 49 0f 38 f6
	40 10		 adcx	 rax, QWORD PTR [r8+16]
  00029	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1199 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  0002d	48 8b 42 18	 mov	 rax, QWORD PTR [rdx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00031	66 49 0f 38 f6
	40 18		 adcx	 rax, QWORD PTR [r8+24]
  00038	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1200 :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  0003c	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00040	66 49 0f 38 f6
	40 20		 adcx	 rax, QWORD PTR [r8+32]
  00047	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1201 :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  0004b	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0004f	66 49 0f 38 f6
	40 28		 adcx	 rax, QWORD PTR [r8+40]
  00056	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1202 :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  0005a	48 8b 42 30	 mov	 rax, QWORD PTR [rdx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0005e	66 49 0f 38 f6
	40 30		 adcx	 rax, QWORD PTR [r8+48]
  00065	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1203 :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  00069	48 8b 42 38	 mov	 rax, QWORD PTR [rdx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0006d	66 49 0f 38 f6
	40 38		 adcx	 rax, QWORD PTR [r8+56]
  00074	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1204 :     c = _ADDX_UNIT(c, xp[8], yp[8], &zp[8]);

  00078	48 8b 42 40	 mov	 rax, QWORD PTR [rdx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0007c	66 49 0f 38 f6
	40 40		 adcx	 rax, QWORD PTR [r8+64]
  00083	49 89 41 40	 mov	 QWORD PTR [r9+64], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1205 :     c = _ADDX_UNIT(c, xp[9], yp[9], &zp[9]);

  00087	48 8b 42 48	 mov	 rax, QWORD PTR [rdx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0008b	66 49 0f 38 f6
	40 48		 adcx	 rax, QWORD PTR [r8+72]
  00092	49 89 41 48	 mov	 QWORD PTR [r9+72], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1206 :     c = _ADDX_UNIT(c, xp[10], yp[10], &zp[10]);

  00096	48 8b 42 50	 mov	 rax, QWORD PTR [rdx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0009a	66 49 0f 38 f6
	40 50		 adcx	 rax, QWORD PTR [r8+80]
  000a1	49 89 41 50	 mov	 QWORD PTR [r9+80], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1207 :     c = _ADDX_UNIT(c, xp[11], yp[11], &zp[11]);

  000a5	48 8b 42 58	 mov	 rax, QWORD PTR [rdx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000a9	66 49 0f 38 f6
	40 58		 adcx	 rax, QWORD PTR [r8+88]
  000b0	49 89 41 58	 mov	 QWORD PTR [r9+88], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1208 :     c = _ADDX_UNIT(c, xp[12], yp[12], &zp[12]);

  000b4	48 8b 42 60	 mov	 rax, QWORD PTR [rdx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000b8	66 49 0f 38 f6
	40 60		 adcx	 rax, QWORD PTR [r8+96]
  000bf	49 89 41 60	 mov	 QWORD PTR [r9+96], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1209 :     c = _ADDX_UNIT(c, xp[13], yp[13], &zp[13]);

  000c3	48 8b 42 68	 mov	 rax, QWORD PTR [rdx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000c7	66 49 0f 38 f6
	40 68		 adcx	 rax, QWORD PTR [r8+104]
  000ce	49 89 41 68	 mov	 QWORD PTR [r9+104], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1210 :     c = _ADDX_UNIT(c, xp[14], yp[14], &zp[14]);

  000d2	48 8b 42 70	 mov	 rax, QWORD PTR [rdx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000d6	66 49 0f 38 f6
	40 70		 adcx	 rax, QWORD PTR [r8+112]
  000dd	49 89 41 70	 mov	 QWORD PTR [r9+112], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1211 :     c = _ADDX_UNIT(c, xp[15], yp[15], &zp[15]);

  000e1	48 8b 4a 78	 mov	 rcx, QWORD PTR [rdx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000e5	66 49 0f 38 f6
	48 78		 adcx	 rcx, QWORD PTR [r8+120]
  000ec	49 89 49 78	 mov	 QWORD PTR [r9+120], rcx
  000f0	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1332 : }

  000f3	c3		 ret	 0
_ADD_16WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_16WORDS_ADC
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_16WORDS_ADC PROC					; COMDAT

; 1054 : #ifdef _MSC_VER
; 1055 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	49 13 00	 adc	 rax, QWORD PTR [r8]
  00009	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1056 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  0000c	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00010	49 13 40 08	 adc	 rax, QWORD PTR [r8+8]
  00014	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1057 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00018	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0001c	49 13 40 10	 adc	 rax, QWORD PTR [r8+16]
  00020	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1058 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  00024	48 8b 42 18	 mov	 rax, QWORD PTR [rdx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00028	49 13 40 18	 adc	 rax, QWORD PTR [r8+24]
  0002c	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1059 :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  00030	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00034	49 13 40 20	 adc	 rax, QWORD PTR [r8+32]
  00038	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1060 :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  0003c	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00040	49 13 40 28	 adc	 rax, QWORD PTR [r8+40]
  00044	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1061 :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  00048	48 8b 42 30	 mov	 rax, QWORD PTR [rdx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0004c	49 13 40 30	 adc	 rax, QWORD PTR [r8+48]
  00050	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1062 :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  00054	48 8b 42 38	 mov	 rax, QWORD PTR [rdx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00058	49 13 40 38	 adc	 rax, QWORD PTR [r8+56]
  0005c	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1063 :     c = _ADD_UNIT(c, xp[8], yp[8], &zp[8]);

  00060	48 8b 42 40	 mov	 rax, QWORD PTR [rdx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00064	49 13 40 40	 adc	 rax, QWORD PTR [r8+64]
  00068	49 89 41 40	 mov	 QWORD PTR [r9+64], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1064 :     c = _ADD_UNIT(c, xp[9], yp[9], &zp[9]);

  0006c	48 8b 42 48	 mov	 rax, QWORD PTR [rdx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00070	49 13 40 48	 adc	 rax, QWORD PTR [r8+72]
  00074	49 89 41 48	 mov	 QWORD PTR [r9+72], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1065 :     c = _ADD_UNIT(c, xp[10], yp[10], &zp[10]);

  00078	48 8b 42 50	 mov	 rax, QWORD PTR [rdx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0007c	49 13 40 50	 adc	 rax, QWORD PTR [r8+80]
  00080	49 89 41 50	 mov	 QWORD PTR [r9+80], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1066 :     c = _ADD_UNIT(c, xp[11], yp[11], &zp[11]);

  00084	48 8b 42 58	 mov	 rax, QWORD PTR [rdx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00088	49 13 40 58	 adc	 rax, QWORD PTR [r8+88]
  0008c	49 89 41 58	 mov	 QWORD PTR [r9+88], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1067 :     c = _ADD_UNIT(c, xp[12], yp[12], &zp[12]);

  00090	48 8b 42 60	 mov	 rax, QWORD PTR [rdx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00094	49 13 40 60	 adc	 rax, QWORD PTR [r8+96]
  00098	49 89 41 60	 mov	 QWORD PTR [r9+96], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1068 :     c = _ADD_UNIT(c, xp[13], yp[13], &zp[13]);

  0009c	48 8b 42 68	 mov	 rax, QWORD PTR [rdx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000a0	49 13 40 68	 adc	 rax, QWORD PTR [r8+104]
  000a4	49 89 41 68	 mov	 QWORD PTR [r9+104], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1069 :     c = _ADD_UNIT(c, xp[14], yp[14], &zp[14]);

  000a8	48 8b 42 70	 mov	 rax, QWORD PTR [rdx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000ac	49 13 40 70	 adc	 rax, QWORD PTR [r8+112]
  000b0	49 89 41 70	 mov	 QWORD PTR [r9+112], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1070 :     c = _ADD_UNIT(c, xp[15], yp[15], &zp[15]);

  000b4	48 8b 4a 78	 mov	 rcx, QWORD PTR [rdx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000b8	49 13 48 78	 adc	 rcx, QWORD PTR [r8+120]
  000bc	49 89 49 78	 mov	 QWORD PTR [r9+120], rcx
  000c0	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1191 : }

  000c3	c3		 ret	 0
_ADD_16WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_32WORDS_ADCX
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_32WORDS_ADCX PROC					; COMDAT

; 295  : #ifdef _MSC_VER
; 296  :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	66 49 0f 38 f6
	00		 adcx	 rax, QWORD PTR [r8]
  0000c	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 297  :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0000f	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00013	66 49 0f 38 f6
	40 08		 adcx	 rax, QWORD PTR [r8+8]
  0001a	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 298  :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  0001e	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00022	66 49 0f 38 f6
	40 10		 adcx	 rax, QWORD PTR [r8+16]
  00029	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 299  :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  0002d	48 8b 42 18	 mov	 rax, QWORD PTR [rdx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00031	66 49 0f 38 f6
	40 18		 adcx	 rax, QWORD PTR [r8+24]
  00038	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 300  :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  0003c	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00040	66 49 0f 38 f6
	40 20		 adcx	 rax, QWORD PTR [r8+32]
  00047	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 301  :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  0004b	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0004f	66 49 0f 38 f6
	40 28		 adcx	 rax, QWORD PTR [r8+40]
  00056	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 302  :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  0005a	48 8b 42 30	 mov	 rax, QWORD PTR [rdx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0005e	66 49 0f 38 f6
	40 30		 adcx	 rax, QWORD PTR [r8+48]
  00065	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 303  :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  00069	48 8b 42 38	 mov	 rax, QWORD PTR [rdx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0006d	66 49 0f 38 f6
	40 38		 adcx	 rax, QWORD PTR [r8+56]
  00074	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 304  :     c = _ADDX_UNIT(c, xp[8], yp[8], &zp[8]);

  00078	48 8b 42 40	 mov	 rax, QWORD PTR [rdx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0007c	66 49 0f 38 f6
	40 40		 adcx	 rax, QWORD PTR [r8+64]
  00083	49 89 41 40	 mov	 QWORD PTR [r9+64], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 305  :     c = _ADDX_UNIT(c, xp[9], yp[9], &zp[9]);

  00087	48 8b 42 48	 mov	 rax, QWORD PTR [rdx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0008b	66 49 0f 38 f6
	40 48		 adcx	 rax, QWORD PTR [r8+72]
  00092	49 89 41 48	 mov	 QWORD PTR [r9+72], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 306  :     c = _ADDX_UNIT(c, xp[10], yp[10], &zp[10]);

  00096	48 8b 42 50	 mov	 rax, QWORD PTR [rdx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0009a	66 49 0f 38 f6
	40 50		 adcx	 rax, QWORD PTR [r8+80]
  000a1	49 89 41 50	 mov	 QWORD PTR [r9+80], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 307  :     c = _ADDX_UNIT(c, xp[11], yp[11], &zp[11]);

  000a5	48 8b 42 58	 mov	 rax, QWORD PTR [rdx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000a9	66 49 0f 38 f6
	40 58		 adcx	 rax, QWORD PTR [r8+88]
  000b0	49 89 41 58	 mov	 QWORD PTR [r9+88], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 308  :     c = _ADDX_UNIT(c, xp[12], yp[12], &zp[12]);

  000b4	48 8b 42 60	 mov	 rax, QWORD PTR [rdx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000b8	66 49 0f 38 f6
	40 60		 adcx	 rax, QWORD PTR [r8+96]
  000bf	49 89 41 60	 mov	 QWORD PTR [r9+96], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 309  :     c = _ADDX_UNIT(c, xp[13], yp[13], &zp[13]);

  000c3	48 8b 42 68	 mov	 rax, QWORD PTR [rdx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000c7	66 49 0f 38 f6
	40 68		 adcx	 rax, QWORD PTR [r8+104]
  000ce	49 89 41 68	 mov	 QWORD PTR [r9+104], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 310  :     c = _ADDX_UNIT(c, xp[14], yp[14], &zp[14]);

  000d2	48 8b 42 70	 mov	 rax, QWORD PTR [rdx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000d6	66 49 0f 38 f6
	40 70		 adcx	 rax, QWORD PTR [r8+112]
  000dd	49 89 41 70	 mov	 QWORD PTR [r9+112], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 311  :     c = _ADDX_UNIT(c, xp[15], yp[15], &zp[15]);

  000e1	48 8b 42 78	 mov	 rax, QWORD PTR [rdx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000e5	66 49 0f 38 f6
	40 78		 adcx	 rax, QWORD PTR [r8+120]
  000ec	49 89 41 78	 mov	 QWORD PTR [r9+120], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 312  :     c = _ADDX_UNIT(c, xp[16], yp[16], &zp[16]);

  000f0	48 8b 82 80 00
	00 00		 mov	 rax, QWORD PTR [rdx+128]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000f7	66 49 0f 38 f6
	80 80 00 00 00	 adcx	 rax, QWORD PTR [r8+128]
  00101	49 89 81 80 00
	00 00		 mov	 QWORD PTR [r9+128], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 313  :     c = _ADDX_UNIT(c, xp[17], yp[17], &zp[17]);

  00108	48 8b 82 88 00
	00 00		 mov	 rax, QWORD PTR [rdx+136]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0010f	66 49 0f 38 f6
	80 88 00 00 00	 adcx	 rax, QWORD PTR [r8+136]
  00119	49 89 81 88 00
	00 00		 mov	 QWORD PTR [r9+136], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 314  :     c = _ADDX_UNIT(c, xp[18], yp[18], &zp[18]);

  00120	48 8b 82 90 00
	00 00		 mov	 rax, QWORD PTR [rdx+144]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00127	66 49 0f 38 f6
	80 90 00 00 00	 adcx	 rax, QWORD PTR [r8+144]
  00131	49 89 81 90 00
	00 00		 mov	 QWORD PTR [r9+144], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 315  :     c = _ADDX_UNIT(c, xp[19], yp[19], &zp[19]);

  00138	48 8b 82 98 00
	00 00		 mov	 rax, QWORD PTR [rdx+152]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0013f	66 49 0f 38 f6
	80 98 00 00 00	 adcx	 rax, QWORD PTR [r8+152]
  00149	49 89 81 98 00
	00 00		 mov	 QWORD PTR [r9+152], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 316  :     c = _ADDX_UNIT(c, xp[20], yp[20], &zp[20]);

  00150	48 8b 82 a0 00
	00 00		 mov	 rax, QWORD PTR [rdx+160]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00157	66 49 0f 38 f6
	80 a0 00 00 00	 adcx	 rax, QWORD PTR [r8+160]
  00161	49 89 81 a0 00
	00 00		 mov	 QWORD PTR [r9+160], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 317  :     c = _ADDX_UNIT(c, xp[21], yp[21], &zp[21]);

  00168	48 8b 82 a8 00
	00 00		 mov	 rax, QWORD PTR [rdx+168]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0016f	66 49 0f 38 f6
	80 a8 00 00 00	 adcx	 rax, QWORD PTR [r8+168]
  00179	49 89 81 a8 00
	00 00		 mov	 QWORD PTR [r9+168], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 318  :     c = _ADDX_UNIT(c, xp[22], yp[22], &zp[22]);

  00180	48 8b 82 b0 00
	00 00		 mov	 rax, QWORD PTR [rdx+176]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00187	66 49 0f 38 f6
	80 b0 00 00 00	 adcx	 rax, QWORD PTR [r8+176]
  00191	49 89 81 b0 00
	00 00		 mov	 QWORD PTR [r9+176], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 319  :     c = _ADDX_UNIT(c, xp[23], yp[23], &zp[23]);

  00198	48 8b 82 b8 00
	00 00		 mov	 rax, QWORD PTR [rdx+184]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0019f	66 49 0f 38 f6
	80 b8 00 00 00	 adcx	 rax, QWORD PTR [r8+184]
  001a9	49 89 81 b8 00
	00 00		 mov	 QWORD PTR [r9+184], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 320  :     c = _ADDX_UNIT(c, xp[24], yp[24], &zp[24]);

  001b0	48 8b 82 c0 00
	00 00		 mov	 rax, QWORD PTR [rdx+192]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001b7	66 49 0f 38 f6
	80 c0 00 00 00	 adcx	 rax, QWORD PTR [r8+192]
  001c1	49 89 81 c0 00
	00 00		 mov	 QWORD PTR [r9+192], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 321  :     c = _ADDX_UNIT(c, xp[25], yp[25], &zp[25]);

  001c8	48 8b 82 c8 00
	00 00		 mov	 rax, QWORD PTR [rdx+200]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001cf	66 49 0f 38 f6
	80 c8 00 00 00	 adcx	 rax, QWORD PTR [r8+200]
  001d9	49 89 81 c8 00
	00 00		 mov	 QWORD PTR [r9+200], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 322  :     c = _ADDX_UNIT(c, xp[26], yp[26], &zp[26]);

  001e0	48 8b 82 d0 00
	00 00		 mov	 rax, QWORD PTR [rdx+208]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001e7	66 49 0f 38 f6
	80 d0 00 00 00	 adcx	 rax, QWORD PTR [r8+208]
  001f1	49 89 81 d0 00
	00 00		 mov	 QWORD PTR [r9+208], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 323  :     c = _ADDX_UNIT(c, xp[27], yp[27], &zp[27]);

  001f8	48 8b 82 d8 00
	00 00		 mov	 rax, QWORD PTR [rdx+216]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001ff	66 49 0f 38 f6
	80 d8 00 00 00	 adcx	 rax, QWORD PTR [r8+216]
  00209	49 89 81 d8 00
	00 00		 mov	 QWORD PTR [r9+216], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 324  :     c = _ADDX_UNIT(c, xp[28], yp[28], &zp[28]);

  00210	48 8b 82 e0 00
	00 00		 mov	 rax, QWORD PTR [rdx+224]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00217	66 49 0f 38 f6
	80 e0 00 00 00	 adcx	 rax, QWORD PTR [r8+224]
  00221	49 89 81 e0 00
	00 00		 mov	 QWORD PTR [r9+224], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 325  :     c = _ADDX_UNIT(c, xp[29], yp[29], &zp[29]);

  00228	48 8b 82 e8 00
	00 00		 mov	 rax, QWORD PTR [rdx+232]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0022f	66 49 0f 38 f6
	80 e8 00 00 00	 adcx	 rax, QWORD PTR [r8+232]
  00239	49 89 81 e8 00
	00 00		 mov	 QWORD PTR [r9+232], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 326  :     c = _ADDX_UNIT(c, xp[30], yp[30], &zp[30]);

  00240	48 8b 82 f0 00
	00 00		 mov	 rax, QWORD PTR [rdx+240]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00247	66 49 0f 38 f6
	80 f0 00 00 00	 adcx	 rax, QWORD PTR [r8+240]
  00251	49 89 81 f0 00
	00 00		 mov	 QWORD PTR [r9+240], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 327  :     c = _ADDX_UNIT(c, xp[31], yp[31], &zp[31]);

  00258	48 8b 8a f8 00
	00 00		 mov	 rcx, QWORD PTR [rdx+248]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0025f	66 49 0f 38 f6
	88 f8 00 00 00	 adcx	 rcx, QWORD PTR [r8+248]
  00269	49 89 89 f8 00
	00 00		 mov	 QWORD PTR [r9+248], rcx
  00270	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 544  : }

  00273	c3		 ret	 0
_ADD_32WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT _ADD_32WORDS_ADC
_TEXT	SEGMENT
c$ = 8
xp$ = 16
yp$ = 24
zp$ = 32
_ADD_32WORDS_ADC PROC					; COMDAT

; 42   : #ifdef _MSC_VER
; 43   :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00003	80 c1 ff	 add	 cl, -1
  00006	49 13 00	 adc	 rax, QWORD PTR [r8]
  00009	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 44   :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  0000c	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00010	49 13 40 08	 adc	 rax, QWORD PTR [r8+8]
  00014	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 45   :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00018	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0001c	49 13 40 10	 adc	 rax, QWORD PTR [r8+16]
  00020	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 46   :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  00024	48 8b 42 18	 mov	 rax, QWORD PTR [rdx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00028	49 13 40 18	 adc	 rax, QWORD PTR [r8+24]
  0002c	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 47   :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  00030	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00034	49 13 40 20	 adc	 rax, QWORD PTR [r8+32]
  00038	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 48   :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  0003c	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00040	49 13 40 28	 adc	 rax, QWORD PTR [r8+40]
  00044	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 49   :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  00048	48 8b 42 30	 mov	 rax, QWORD PTR [rdx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0004c	49 13 40 30	 adc	 rax, QWORD PTR [r8+48]
  00050	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 50   :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  00054	48 8b 42 38	 mov	 rax, QWORD PTR [rdx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00058	49 13 40 38	 adc	 rax, QWORD PTR [r8+56]
  0005c	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 51   :     c = _ADD_UNIT(c, xp[8], yp[8], &zp[8]);

  00060	48 8b 42 40	 mov	 rax, QWORD PTR [rdx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00064	49 13 40 40	 adc	 rax, QWORD PTR [r8+64]
  00068	49 89 41 40	 mov	 QWORD PTR [r9+64], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 52   :     c = _ADD_UNIT(c, xp[9], yp[9], &zp[9]);

  0006c	48 8b 42 48	 mov	 rax, QWORD PTR [rdx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00070	49 13 40 48	 adc	 rax, QWORD PTR [r8+72]
  00074	49 89 41 48	 mov	 QWORD PTR [r9+72], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 53   :     c = _ADD_UNIT(c, xp[10], yp[10], &zp[10]);

  00078	48 8b 42 50	 mov	 rax, QWORD PTR [rdx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0007c	49 13 40 50	 adc	 rax, QWORD PTR [r8+80]
  00080	49 89 41 50	 mov	 QWORD PTR [r9+80], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 54   :     c = _ADD_UNIT(c, xp[11], yp[11], &zp[11]);

  00084	48 8b 42 58	 mov	 rax, QWORD PTR [rdx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00088	49 13 40 58	 adc	 rax, QWORD PTR [r8+88]
  0008c	49 89 41 58	 mov	 QWORD PTR [r9+88], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 55   :     c = _ADD_UNIT(c, xp[12], yp[12], &zp[12]);

  00090	48 8b 42 60	 mov	 rax, QWORD PTR [rdx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00094	49 13 40 60	 adc	 rax, QWORD PTR [r8+96]
  00098	49 89 41 60	 mov	 QWORD PTR [r9+96], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 56   :     c = _ADD_UNIT(c, xp[13], yp[13], &zp[13]);

  0009c	48 8b 42 68	 mov	 rax, QWORD PTR [rdx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000a0	49 13 40 68	 adc	 rax, QWORD PTR [r8+104]
  000a4	49 89 41 68	 mov	 QWORD PTR [r9+104], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 57   :     c = _ADD_UNIT(c, xp[14], yp[14], &zp[14]);

  000a8	48 8b 42 70	 mov	 rax, QWORD PTR [rdx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000ac	49 13 40 70	 adc	 rax, QWORD PTR [r8+112]
  000b0	49 89 41 70	 mov	 QWORD PTR [r9+112], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 58   :     c = _ADD_UNIT(c, xp[15], yp[15], &zp[15]);

  000b4	48 8b 42 78	 mov	 rax, QWORD PTR [rdx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000b8	49 13 40 78	 adc	 rax, QWORD PTR [r8+120]
  000bc	49 89 41 78	 mov	 QWORD PTR [r9+120], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 59   :     c = _ADD_UNIT(c, xp[16], yp[16], &zp[16]);

  000c0	48 8b 82 80 00
	00 00		 mov	 rax, QWORD PTR [rdx+128]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000c7	49 13 80 80 00
	00 00		 adc	 rax, QWORD PTR [r8+128]
  000ce	49 89 81 80 00
	00 00		 mov	 QWORD PTR [r9+128], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 60   :     c = _ADD_UNIT(c, xp[17], yp[17], &zp[17]);

  000d5	48 8b 82 88 00
	00 00		 mov	 rax, QWORD PTR [rdx+136]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000dc	49 13 80 88 00
	00 00		 adc	 rax, QWORD PTR [r8+136]
  000e3	49 89 81 88 00
	00 00		 mov	 QWORD PTR [r9+136], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 61   :     c = _ADD_UNIT(c, xp[18], yp[18], &zp[18]);

  000ea	48 8b 82 90 00
	00 00		 mov	 rax, QWORD PTR [rdx+144]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000f1	49 13 80 90 00
	00 00		 adc	 rax, QWORD PTR [r8+144]
  000f8	49 89 81 90 00
	00 00		 mov	 QWORD PTR [r9+144], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 62   :     c = _ADD_UNIT(c, xp[19], yp[19], &zp[19]);

  000ff	48 8b 82 98 00
	00 00		 mov	 rax, QWORD PTR [rdx+152]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00106	49 13 80 98 00
	00 00		 adc	 rax, QWORD PTR [r8+152]
  0010d	49 89 81 98 00
	00 00		 mov	 QWORD PTR [r9+152], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 63   :     c = _ADD_UNIT(c, xp[20], yp[20], &zp[20]);

  00114	48 8b 82 a0 00
	00 00		 mov	 rax, QWORD PTR [rdx+160]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0011b	49 13 80 a0 00
	00 00		 adc	 rax, QWORD PTR [r8+160]
  00122	49 89 81 a0 00
	00 00		 mov	 QWORD PTR [r9+160], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 64   :     c = _ADD_UNIT(c, xp[21], yp[21], &zp[21]);

  00129	48 8b 82 a8 00
	00 00		 mov	 rax, QWORD PTR [rdx+168]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00130	49 13 80 a8 00
	00 00		 adc	 rax, QWORD PTR [r8+168]
  00137	49 89 81 a8 00
	00 00		 mov	 QWORD PTR [r9+168], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 65   :     c = _ADD_UNIT(c, xp[22], yp[22], &zp[22]);

  0013e	48 8b 82 b0 00
	00 00		 mov	 rax, QWORD PTR [rdx+176]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00145	49 13 80 b0 00
	00 00		 adc	 rax, QWORD PTR [r8+176]
  0014c	49 89 81 b0 00
	00 00		 mov	 QWORD PTR [r9+176], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 66   :     c = _ADD_UNIT(c, xp[23], yp[23], &zp[23]);

  00153	48 8b 82 b8 00
	00 00		 mov	 rax, QWORD PTR [rdx+184]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0015a	49 13 80 b8 00
	00 00		 adc	 rax, QWORD PTR [r8+184]
  00161	49 89 81 b8 00
	00 00		 mov	 QWORD PTR [r9+184], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 67   :     c = _ADD_UNIT(c, xp[24], yp[24], &zp[24]);

  00168	48 8b 82 c0 00
	00 00		 mov	 rax, QWORD PTR [rdx+192]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0016f	49 13 80 c0 00
	00 00		 adc	 rax, QWORD PTR [r8+192]
  00176	49 89 81 c0 00
	00 00		 mov	 QWORD PTR [r9+192], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 68   :     c = _ADD_UNIT(c, xp[25], yp[25], &zp[25]);

  0017d	48 8b 82 c8 00
	00 00		 mov	 rax, QWORD PTR [rdx+200]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00184	49 13 80 c8 00
	00 00		 adc	 rax, QWORD PTR [r8+200]
  0018b	49 89 81 c8 00
	00 00		 mov	 QWORD PTR [r9+200], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 69   :     c = _ADD_UNIT(c, xp[26], yp[26], &zp[26]);

  00192	48 8b 82 d0 00
	00 00		 mov	 rax, QWORD PTR [rdx+208]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00199	49 13 80 d0 00
	00 00		 adc	 rax, QWORD PTR [r8+208]
  001a0	49 89 81 d0 00
	00 00		 mov	 QWORD PTR [r9+208], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 70   :     c = _ADD_UNIT(c, xp[27], yp[27], &zp[27]);

  001a7	48 8b 82 d8 00
	00 00		 mov	 rax, QWORD PTR [rdx+216]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001ae	49 13 80 d8 00
	00 00		 adc	 rax, QWORD PTR [r8+216]
  001b5	49 89 81 d8 00
	00 00		 mov	 QWORD PTR [r9+216], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 71   :     c = _ADD_UNIT(c, xp[28], yp[28], &zp[28]);

  001bc	48 8b 82 e0 00
	00 00		 mov	 rax, QWORD PTR [rdx+224]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001c3	49 13 80 e0 00
	00 00		 adc	 rax, QWORD PTR [r8+224]
  001ca	49 89 81 e0 00
	00 00		 mov	 QWORD PTR [r9+224], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 72   :     c = _ADD_UNIT(c, xp[29], yp[29], &zp[29]);

  001d1	48 8b 82 e8 00
	00 00		 mov	 rax, QWORD PTR [rdx+232]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001d8	49 13 80 e8 00
	00 00		 adc	 rax, QWORD PTR [r8+232]
  001df	49 89 81 e8 00
	00 00		 mov	 QWORD PTR [r9+232], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 73   :     c = _ADD_UNIT(c, xp[30], yp[30], &zp[30]);

  001e6	48 8b 82 f0 00
	00 00		 mov	 rax, QWORD PTR [rdx+240]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001ed	49 13 80 f0 00
	00 00		 adc	 rax, QWORD PTR [r8+240]
  001f4	49 89 81 f0 00
	00 00		 mov	 QWORD PTR [r9+240], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 74   :     c = _ADD_UNIT(c, xp[31], yp[31], &zp[31]);

  001fb	48 8b 8a f8 00
	00 00		 mov	 rcx, QWORD PTR [rdx+248]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00202	49 13 88 f8 00
	00 00		 adc	 rcx, QWORD PTR [r8+248]
  00209	49 89 89 f8 00
	00 00		 mov	 QWORD PTR [r9+248], rcx
  00210	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 291  : }

  00213	c3		 ret	 0
_ADD_32WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_UNIT
_TEXT	SEGMENT
x$ = 8
_LZCNT_ALT_UNIT PROC					; COMDAT

; 455  :             if (x == 0)

  00000	48 85 c9	 test	 rcx, rcx
  00003	75 06		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  00005	b8 40 00 00 00	 mov	 eax, 64			; 00000040H

; 480  :         }

  0000a	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);
; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);

  0000b	48 0f bd c9	 bsr	 rcx, rcx

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  0000f	b8 3f 00 00 00	 mov	 eax, 63			; 0000003fH
  00014	2b c1		 sub	 eax, ecx

; 480  :         }

  00016	c3		 ret	 0
_LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_64
_TEXT	SEGMENT
x$ = 8
_LZCNT_ALT_64 PROC					; COMDAT

; 438  :             if (x == 0)

  00000	48 85 c9	 test	 rcx, rcx
  00003	75 06		 jne	 SHORT $LN2@LZCNT_ALT_

; 439  :                 return (sizeof(x) * 8);

  00005	b8 40 00 00 00	 mov	 eax, 64			; 00000040H

; 450  :         }

  0000a	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 440  : #ifdef _MSC_VER
; 441  :             DWORD pos;
; 442  :             _BitScanReverse64(&pos, x);

  0000b	48 0f bd c9	 bsr	 rcx, rcx

; 443  : #elif defined(__GNUC__)
; 444  :             _UINT64_T pos;
; 445  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 446  : #else
; 447  : #error unknown compiler
; 448  : #endif
; 449  :             return (sizeof(x) * 8 - 1 - pos);

  0000f	b8 3f 00 00 00	 mov	 eax, 63			; 0000003fH
  00014	2b c1		 sub	 eax, ecx

; 450  :         }

  00016	c3		 ret	 0
_LZCNT_ALT_64 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_32
_TEXT	SEGMENT
x$ = 8
_LZCNT_ALT_32 PROC					; COMDAT

; 422  :             if (x == 0)

  00000	85 c9		 test	 ecx, ecx
  00002	75 06		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  00004	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 433  :         }

  00009	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  0000a	0f bd c9	 bsr	 ecx, ecx

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  0000d	b8 1f 00 00 00	 mov	 eax, 31
  00012	2b c1		 sub	 eax, ecx

; 433  :         }

  00014	c3		 ret	 0
_LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT _DIVREM_SINGLE_UNIT
_TEXT	SEGMENT
r$ = 48
u$ = 56
RR$ = 64
v$ = 64
q$ = 72
_DIVREM_SINGLE_UNIT PROC				; COMDAT

; 339  :     {

$LN26:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00006	49 8b c0	 mov	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 339  :     {

  00009	49 8b d9	 mov	 rbx, r9
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0000c	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 339  :     {

  00010	4c 8b d2	 mov	 r10, rdx

; 326  :         if (v_hi == 0)

  00013	85 c0		 test	 eax, eax
  00015	75 63		 jne	 SHORT $LN4@DIVREM_SIN

; 56   :             _r = (_UINT32_T)(t % v);

  00017	33 d2		 xor	 edx, edx
  00019	45 8b c0	 mov	 r8d, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0001c	48 8b c1	 mov	 rax, rcx

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0001f	8b c9		 mov	 ecx, ecx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00021	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00025	49 f7 f0	 div	 r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00028	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0002a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0002c	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00030	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00033	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00036	49 f7 f0	 div	 r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00039	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0003d	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0003f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00041	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00045	48 0b c1	 or	 rax, rcx
  00048	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0004b	49 f7 f0	 div	 r8
  0004e	4c 8b c8	 mov	 r9, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00051	8b c2		 mov	 eax, edx
  00053	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00057	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00059	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0005c	49 f7 f0	 div	 r8
  0005f	44 8b c2	 mov	 r8d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00062	8b c8		 mov	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 342  :         return (RR);

  00064	41 8b c0	 mov	 eax, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00067	41 8b d1	 mov	 edx, r9d
  0006a	48 c1 e2 20	 shl	 rdx, 32			; 00000020H
  0006e	48 0b d1	 or	 rdx, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00071	48 89 13	 mov	 QWORD PTR [rbx], rdx

; 343  :     }

  00074	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00078	5b		 pop	 rbx
  00079	c3		 ret	 0
$LN4@DIVREM_SIN:

; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0007a	4c 8d 4c 24 40	 lea	 r9, QWORD PTR RR$[rsp]
  0007f	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00084	48 89 03	 mov	 QWORD PTR [rbx], rax

; 342  :         return (RR);

  00087	48 8b 44 24 40	 mov	 rax, QWORD PTR RR$[rsp]

; 343  :     }

  0008c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00090	5b		 pop	 rbx
  00091	c3		 ret	 0
_DIVREM_SINGLE_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT _DIVREM_UNIT
_TEXT	SEGMENT
u_hi$ = 8
u_lo$ = 16
v$ = 24
r$ = 32
_DIVREM_UNIT PROC					; COMDAT
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00000	49 8b c0	 mov	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 323  :     {

  00003	4c 8b da	 mov	 r11, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00006	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 326  :         if (v_hi == 0)

  0000a	85 c0		 test	 eax, eax
  0000c	75 5a		 jne	 SHORT $LN2@DIVREM_UNI

; 56   :             _r = (_UINT32_T)(t % v);

  0000e	33 d2		 xor	 edx, edx
  00010	45 8b d0	 mov	 r10d, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00013	48 8b c1	 mov	 rax, rcx

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00016	8b c9		 mov	 ecx, ecx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00018	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0001c	49 f7 f2	 div	 r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0001f	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00021	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00023	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00027	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0002a	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0002d	49 f7 f2	 div	 r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00030	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00034	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00036	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00038	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0003c	48 0b c1	 or	 rax, rcx
  0003f	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00042	49 f7 f2	 div	 r10
  00045	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00048	8b c2		 mov	 eax, edx
  0004a	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0004e	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00050	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00053	49 f7 f2	 div	 r10
  00056	8b ca		 mov	 ecx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00058	41 8b d0	 mov	 edx, r8d
  0005b	48 c1 e2 20	 shl	 rdx, 32			; 00000020H
  0005f	8b c0		 mov	 eax, eax
  00061	48 0b c2	 or	 rax, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00064	49 89 09	 mov	 QWORD PTR [r9], rcx

; 334  :             return (q);
; 335  :         }
; 336  :     }

  00067	c3		 ret	 0
$LN2@DIVREM_UNI:

; 327  :         {
; 328  :             _UINT64_T q = DivRem::_DIVREM_UNIT_1W(u_hi, u_lo, v_lo, r);
; 329  :             return (q);
; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00068	e9 00 00 00 00	 jmp	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
_DIVREM_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _MULTIPLYX_UNIT
_TEXT	SEGMENT
u$ = 8
v$ = 16
w_hi$ = 24
_MULTIPLYX_UNIT PROC					; COMDAT

; 229  : #ifdef _MSC_VER
; 230  : #ifdef _M_IX86
; 231  :             return (_FROMDWORDTOWORD((_UINT64_T)u * v, w_hi));
; 232  : #elif defined(_M_X64)
; 233  :             return (_mulx_u64(u, v, w_hi));

  00000	c4 e2 fb f6 c9	 mulx	 rcx, rax, rcx
  00005	49 89 08	 mov	 QWORD PTR [r8], rcx

; 234  : #else
; 235  : #error unknown platform
; 236  : #endif
; 237  : #elif defined(__GNUC__)
; 238  : #ifdef _M_IX86
; 239  :             _UINT32_T w_lo;
; 240  :             __asm__("mulxl %3, %0, %1" : "=r"(w_lo), "=r"(*w_hi), "+d"(u) : "rm"(v));
; 241  :             return (w_lo);
; 242  : #elif defined(_M_X64)
; 243  :             _UINT64_T w_lo;
; 244  :             __asm__("mulxq %3, %0, %1" : "=r"(w_lo), "=r"(*w_hi), "+d"(u) : "rm"(v));
; 245  :             return (w_lo);
; 246  : #else
; 247  : #error unknown platform
; 248  : #endif
; 249  : #else
; 250  : #error unknown compiler
; 251  : #endif
; 252  :         }

  00008	c3		 ret	 0
_MULTIPLYX_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _MULTIPLY_UNIT
_TEXT	SEGMENT
u$ = 8
v$ = 16
w_hi$ = 24
_MULTIPLY_UNIT PROC					; COMDAT

; 210  : #ifdef _M_IX86
; 211  : #ifdef _MSC_VER
; 212  :             return (_FROMDWORDTOWORD((_UINT64_T)u * v, w_hi));
; 213  : #elif defined(__GNUC__)
; 214  :             _UINT32_T w_lo;
; 215  :             __asm__("mull %3": "=a"(w_lo), "=d"(*w_hi) : "0"(u), "rm"(v));
; 216  :             return (w_lo);
; 217  : #else
; 218  : #error unknown compiler
; 219  : #endif
; 220  : #elif defined(_M_X64)
; 221  :             return (_umul128(u, v, w_hi));

  00000	48 8b c2	 mov	 rax, rdx
  00003	48 f7 e1	 mul	 rcx
  00006	49 89 10	 mov	 QWORD PTR [r8], rdx

; 222  : #else
; 223  : #error unknown platform
; 224  : #endif
; 225  :         }

  00009	c3		 ret	 0
_MULTIPLY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _SUBTRUCT_UNIT
_TEXT	SEGMENT
borrow$ = 8
u$ = 16
v$ = 24
w$ = 32
_SUBTRUCT_UNIT PROC					; COMDAT

; 199  : #ifdef _M_IX86
; 200  :             return (_subborrow_u32(borrow, u, v, w));
; 201  : #elif defined(_M_X64)
; 202  :             return (_subborrow_u64(borrow, u, v, w));

  00000	80 c1 ff	 add	 cl, -1
  00003	49 1b d0	 sbb	 rdx, r8
  00006	49 89 11	 mov	 QWORD PTR [r9], rdx
  00009	0f 92 c0	 setb	 al

; 203  : #else
; 204  : #error unknown platform
; 205  : #endif
; 206  :         }

  0000c	c3		 ret	 0
_SUBTRUCT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ADDX_UNIT
_TEXT	SEGMENT
carry$ = 8
u$ = 16
v$ = 24
w$ = 32
_ADDX_UNIT PROC						; COMDAT

; 188  : #ifdef _M_IX86
; 189  :             return (_addcarryx_u32(carry, u, v, w));
; 190  : #elif defined(_M_X64)
; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00000	80 c1 ff	 add	 cl, -1
  00003	66 49 0f 38 f6
	d0		 adcx	 rdx, r8
  00009	49 89 11	 mov	 QWORD PTR [r9], rdx
  0000c	0f 92 c0	 setb	 al

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  :         }

  0000f	c3		 ret	 0
_ADDX_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ADD_UNIT
_TEXT	SEGMENT
carry$ = 8
u$ = 16
v$ = 24
w$ = 32
_ADD_UNIT PROC						; COMDAT

; 177  : #ifdef _M_IX86
; 178  :             return (_addcarry_u32(carry, u, v, w));
; 179  : #elif defined(_M_X64)
; 180  :             return (_addcarry_u64(carry, u, v, w));

  00000	80 c1 ff	 add	 cl, -1
  00003	49 13 d0	 adc	 rdx, r8
  00006	49 89 11	 mov	 QWORD PTR [r9], rdx
  00009	0f 92 c0	 setb	 al

; 181  : #else
; 182  : #error unknown platform
; 183  : #endif
; 184  :         }

  0000c	c3		 ret	 0
_ADD_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _FROMDWORDTOWORD
_TEXT	SEGMENT
value$ = 8
result_high$ = 16
_FROMDWORDTOWORD PROC					; COMDAT

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00000	48 8b c1	 mov	 rax, rcx
  00003	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  00007	89 02		 mov	 DWORD PTR [rdx], eax

; 147  :             return ((_UINT32_T)value);

  00009	8b c1		 mov	 eax, ecx

; 148  :         }

  0000b	c3		 ret	 0
_FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _FROMWORDTODWORD
_TEXT	SEGMENT
value_high$ = 8
value_low$ = 16
_FROMWORDTODWORD PROC					; COMDAT

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00000	8b c1		 mov	 eax, ecx
  00002	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00006	8b ca		 mov	 ecx, edx
  00008	48 0b c1	 or	 rax, rcx

; 142  :         }

  0000b	c3		 ret	 0
_FROMWORDTODWORD ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _COPY_MEMORY_UNIT
_TEXT	SEGMENT
d$ = 8
s$ = 16
count$ = 24
_COPY_MEMORY_UNIT PROC					; COMDAT

; 63   :         {

  00000	48 89 74 24 08	 mov	 QWORD PTR [rsp+8], rsi
  00005	48 89 7c 24 10	 mov	 QWORD PTR [rsp+16], rdi

; 64   : #ifdef _M_IX86
; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);
; 66   : #elif defined(_M_X64)
; 67   :             __movsq(d, s, count);

  0000a	48 8b f9	 mov	 rdi, rcx
  0000d	48 8b f2	 mov	 rsi, rdx
  00010	49 8b c8	 mov	 rcx, r8
  00013	f3 48 a5	 rep movsq

; 68   : #else
; 69   : #error unknown platform
; 70   : #endif
; 71   :         }

  00016	48 8b 74 24 08	 mov	 rsi, QWORD PTR [rsp+8]
  0001b	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  00020	c3		 ret	 0
_COPY_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 8
?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToMULTI64Counter, COMDAT

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00000	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx

; 361  :     }

  00008	c3		 ret	 0
?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 8
?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToMULTI32Counter, COMDAT

; 354  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI32, value);

  00000	f0 0f c1 0d 04
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+4, ecx

; 355  :     }

  00008	c3		 ret	 0
?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToMULTI32Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 8
?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToDIV64Counter, COMDAT

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00000	f0 0f c1 0d 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, ecx

; 349  :     }

  00008	c3		 ret	 0
?AddToDIV64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToDIV64Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 8
?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToDIV32Counter, COMDAT

; 342  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV32, value);

  00000	f0 0f c1 0d 0c
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+12, ecx

; 343  :     }

  00008	c3		 ret	 0
?AddToDIV32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToDIV32Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementMULTI64Counter, COMDAT

; 337  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI64);

  00000	f0 ff 05 00 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A

; 338  :     }

  00007	c3		 ret	 0
?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementMULTI64Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementMULTI32Counter, COMDAT

; 331  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI32);

  00000	f0 ff 05 04 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+4

; 332  :     }

  00007	c3		 ret	 0
?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementMULTI32Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementDIV64Counter, COMDAT

; 325  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  00000	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8

; 326  :     }

  00007	c3		 ret	 0
?IncrementDIV64Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementDIV64Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementDIV32Counter, COMDAT

; 319  :         _InterlockedIncrement(&statistics_info.COUNT_DIV32);

  00000	f0 ff 05 0c 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+12

; 320  :     }

  00007	c3		 ret	 0
?IncrementDIV32Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementDIV32Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z
_TEXT	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
$T3 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X, COMDAT

; 2188 :     {

$LN16:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000b	48 c7 40 98 fe
	ff ff ff	 mov	 QWORD PTR [rax-104], -2
  00013	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00017	48 89 70 18	 mov	 QWORD PTR [rax+24], rsi
  0001b	49 8b f0	 mov	 rsi, r8
  0001e	48 8b da	 mov	 rbx, rdx
  00021	48 8b f9	 mov	 rdi, rcx

; 2189 :         if (u == nullptr)

  00024	48 85 c9	 test	 rcx, rcx
  00027	0f 84 e5 00 00
	00		 je	 $LN12@PMC_DivRem

; 2191 :         if (v == nullptr)

  0002d	48 85 d2	 test	 rdx, rdx
  00030	0f 84 06 01 00
	00		 je	 $LN13@PMC_DivRem

; 2193 :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 2194 :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;
; 2195 :         CheckNumber(nu);

  00036	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 2196 :         CheckNumber(nv);

  0003b	48 8b cb	 mov	 rcx, rbx
  0003e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 2197 :         if (nv->IS_ZERO)

  00043	f6 43 08 01	 test	 BYTE PTR [rbx+8], 1
  00047	0f 85 a2 00 00
	00		 jne	 $LN14@PMC_DivRem

; 2203 :         }
; 2204 :         ResourceHolderUINT root;

  0004d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00052	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00057	90		 npad	 1

; 2205 :         NUMBER_HEADER* nq;
; 2206 :         NUMBER_HEADER* nr;
; 2207 : 
; 2208 :         if (q != nullptr)

  00058	48 8b d3	 mov	 rdx, rbx
  0005b	48 8b cf	 mov	 rcx, rdi
  0005e	48 85 f6	 test	 rsi, rsi
  00061	74 44		 je	 SHORT $LN5@PMC_DivRem

; 2209 :         {
; 2210 :             nr = PMC_DivRem_X_X_Imp(nu, nv, &nq);

  00063	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR nq$[rsp]
  0006b	e8 00 00 00 00	 call	 ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp
  00070	48 8b f8	 mov	 rdi, rax

; 2211 :             root.HookNumber(nq);

  00073	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR nq$[rsp]
  0007b	48 8b d3	 mov	 rdx, rbx
  0007e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00083	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 2212 :             root.HookNumber(nr);

  00088	48 8b d7	 mov	 rdx, rdi
  0008b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00090	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 2213 : #ifdef _DEBUG
; 2214 :             CheckNumber(nq);
; 2215 :             CheckNumber(nr);
; 2216 : #endif
; 2217 :             root.UnlinkNumber(nq);

  00095	48 8b d3	 mov	 rdx, rbx
  00098	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0009d	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 2218 :             *q = (PMC_HANDLE_UINT)nq;

  000a2	48 89 1e	 mov	 QWORD PTR [rsi], rbx

; 2219 :             root.UnlinkNumber(nr);
; 2220 :         }
; 2221 :         else

  000a5	eb 18		 jmp	 SHORT $LN10@PMC_DivRem
$LN5@PMC_DivRem:

; 2222 :         {
; 2223 :             nr = PMC_DivRem_X_X_Imp(nu, nv, nullptr);

  000a7	45 33 c0	 xor	 r8d, r8d
  000aa	e8 00 00 00 00	 call	 ?PMC_DivRem_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0PEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X_Imp
  000af	48 8b f8	 mov	 rdi, rax

; 2224 :             root.HookNumber(nr);

  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  000ba	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
$LN10@PMC_DivRem:

; 2225 : #ifdef _DEBUG
; 2226 :             CheckNumber(nr);
; 2227 : #endif
; 2228 :             root.UnlinkNumber(nr);
; 2229 :         }
; 2230 : 
; 2231 :         return ((PMC_HANDLE_UINT)nr);

  000bf	48 8b d7	 mov	 rdx, rdi
  000c2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  000c7	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  000cc	90		 npad	 1
  000cd	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  000d2	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000d7	48 8b c7	 mov	 rax, rdi

; 2232 :     }

  000da	4c 8d 9c 24 80
	00 00 00	 lea	 r11, QWORD PTR [rsp+128]
  000e2	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  000e6	49 8b 73 20	 mov	 rsi, QWORD PTR [r11+32]
  000ea	49 8b e3	 mov	 rsp, r11
  000ed	5f		 pop	 rdi
  000ee	c3		 ret	 0
$LN14@PMC_DivRem:

; 2198 :         {
; 2199 :             // v が 0 である場合
; 2200 : 
; 2201 :             // 0 による除算はエラーで返す
; 2202 :             throw DivisionByZeroException(L"0による除算が行われようとしました。");

  000ef	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@
  000f6	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp]
  000fb	e8 00 00 00 00	 call	 ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
  00100	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
  00107	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp]
  0010c	e8 00 00 00 00	 call	 _CxxThrowException
  00111	cc		 int	 3
$LN12@PMC_DivRem:

; 2190 :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00112	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00119	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00120	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T3[rsp]
  00125	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0012a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00131	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T3[rsp]
  00136	e8 00 00 00 00	 call	 _CxxThrowException
  0013b	cc		 int	 3
$LN13@PMC_DivRem:

; 2192 :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0013c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  00143	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0014a	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  0014f	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00154	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0015b	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  00160	e8 00 00 00 00	 call	 _CxxThrowException
  00165	cc		 int	 3
$LN9@PMC_DivRem:
?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
$T3 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?dtor$0@?0??PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
$T3 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?dtor$0@?0??PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0PEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z
_TEXT	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L, COMDAT

; 2008 :     {

$LN74:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000b	48 c7 40 98 fe
	ff ff ff	 mov	 QWORD PTR [rax-104], -2
  00013	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00017	48 89 70 18	 mov	 QWORD PTR [rax+24], rsi
  0001b	49 8b f0	 mov	 rsi, r8
  0001e	48 8b fa	 mov	 rdi, rdx
  00021	48 8b d9	 mov	 rbx, rcx

; 2009 :         if (sizeof(__UNIT_TYPE) * 2 < sizeof(v))
; 2010 :         {
; 2011 :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 2012 :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_divrem.cpp;PMC_DivRem_X_L;1");
; 2013 :         }
; 2014 :         if (u == nullptr)

  00024	48 85 c9	 test	 rcx, rcx
  00027	0f 84 f2 00 00
	00		 je	 $LN71@PMC_DivRem

; 2016 :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 2017 :         CheckNumber(nu);

  0002d	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 2018 :         ResourceHolderUINT root;

  00032	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00037	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003c	90		 npad	 1

; 2019 :         NUMBER_HEADER* nq;
; 2020 :         if (q != nullptr)

  0003d	48 85 f6	 test	 rsi, rsi
  00040	74 4b		 je	 SHORT $LN4@PMC_DivRem

; 2021 :         {
; 2022 :             _UINT64_T r = PMC_DivRem_X_L_Imp(nu, v, &nq);

  00042	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR nq$[rsp]
  0004a	48 8b d7	 mov	 rdx, rdi
  0004d	48 8b cb	 mov	 rcx, rbx
  00050	e8 00 00 00 00	 call	 ?PMC_DivRem_X_L_Imp@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_NUMBER_HEADER@1234@_KPEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L_Imp
  00055	48 8b f8	 mov	 rdi, rax

; 2023 :             root.HookNumber(nq);

  00058	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR nq$[rsp]
  00060	48 8b d3	 mov	 rdx, rbx
  00063	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00068	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 2024 : #ifdef _DEBUG
; 2025 :             CheckNumber(nq);
; 2026 : #endif
; 2027 :             *q = (PMC_HANDLE_UINT)nq;

  0006d	48 89 1e	 mov	 QWORD PTR [rsi], rbx

; 2028 :             root.UnlinkNumber(nq);

  00070	48 8b d3	 mov	 rdx, rbx
  00073	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00078	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0007d	90		 npad	 1

; 2029 :             return (r);

  0007e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00083	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00088	48 8b c7	 mov	 rax, rdi
  0008b	eb 5a		 jmp	 SHORT $LN1@PMC_DivRem
$LN4@PMC_DivRem:

; 1819 :         if (v == 0)

  0008d	48 85 ff	 test	 rdi, rdi
  00090	74 6a		 je	 SHORT $LN72@PMC_DivRem

; 1825 :         }
; 1826 :         if (u->IS_ZERO)

  00092	f6 43 08 01	 test	 BYTE PTR [rbx+8], 1
  00096	74 04		 je	 SHORT $LN10@PMC_DivRem
$LN69@PMC_DivRem:

; 2030 :         }
; 2031 :         else
; 2032 :         {
; 2033 :             _UINT64_T r = PMC_DivRem_X_L_Imp(nu, v, nullptr);
; 2034 :             return (r);

  00098	33 db		 xor	 ebx, ebx
  0009a	eb 3e		 jmp	 SHORT $LN40@PMC_DivRem
$LN10@PMC_DivRem:

; 1839 :             if (v == 1)

  0009c	48 83 ff 01	 cmp	 rdi, 1
  000a0	74 f6		 je	 SHORT $LN69@PMC_DivRem
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 469  :             _BitScanReverse64(&pos, x);

  000a2	48 0f bd c7	 bsr	 rax, rdi

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  000a6	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  000ab	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1965 :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);

  000ad	48 63 c1	 movsxd	 rax, ecx
  000b0	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  000b5	48 2b c8	 sub	 rcx, rax

; 1966 :                     if (u_bit_count < v_bit_count)

  000b8	48 39 4b 20	 cmp	 QWORD PTR [rbx+32], rcx
  000bc	73 09		 jae	 SHORT $LN36@PMC_DivRem

; 1967 :                     {
; 1968 :                         // 明らかに u < v である場合
; 1969 : 
; 1970 :                         // q = 0, r = u を返す。
; 1971 :                         if (q != nullptr)
; 1972 :                             *q = &number_zero;
; 1973 :                         return (u->BLOCK[0]);

  000be	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  000c2	48 8b 18	 mov	 rbx, QWORD PTR [rax]
  000c5	eb 13		 jmp	 SHORT $LN40@PMC_DivRem
$LN36@PMC_DivRem:

; 1974 :                     }
; 1975 :                     else
; 1976 :                     {
; 1977 :                         if (q != nullptr)
; 1978 :                         {
; 1979 :                             ResourceHolderUINT root;
; 1980 :                             __UNIT_TYPE q_bit_count = u_bit_count - v_bit_count + 1 + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには u_bit_count - v_bit_count + 1 だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。
; 1981 :                             *q = root.AllocateNumber(q_bit_count);
; 1982 :                             __UNIT_TYPE r_buf = 0;
; 1983 :                             DivRem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, (*q)->BLOCK, &r_buf);
; 1984 :                             root.CheckNumber(*q);
; 1985 :                             CommitNumber(*q);
; 1986 :                             if ((*q)->IS_ZERO)
; 1987 :                             {
; 1988 :                                 root.DeallocateNumber(*q);
; 1989 :                                 *q = &number_zero;
; 1990 :                             }
; 1991 :                             else
; 1992 :                                 root.UnlinkNumber(*q);
; 1993 :                             return (r_buf);
; 1994 :                         }
; 1995 :                         else
; 1996 :                         {
; 1997 :                             __UNIT_TYPE r_buf = Rem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v);

  000c7	4c 8b c7	 mov	 r8, rdi
  000ca	48 8b 53 18	 mov	 rdx, QWORD PTR [rbx+24]
  000ce	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  000d2	e8 00 00 00 00	 call	 ?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z ; Palmtree::Math::Core::Internal::Rem_X_1W
  000d7	48 8b d8	 mov	 rbx, rax
$LN40@PMC_DivRem:

; 2030 :         }
; 2031 :         else
; 2032 :         {
; 2033 :             _UINT64_T r = PMC_DivRem_X_L_Imp(nu, v, nullptr);
; 2034 :             return (r);

  000da	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  000df	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000e4	48 8b c3	 mov	 rax, rbx
$LN1@PMC_DivRem:

; 2035 :         }
; 2036 :     }

  000e7	4c 8d 9c 24 80
	00 00 00	 lea	 r11, QWORD PTR [rsp+128]
  000ef	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  000f3	49 8b 73 20	 mov	 rsi, QWORD PTR [r11+32]
  000f7	49 8b e3	 mov	 rsp, r11
  000fa	5f		 pop	 rdi
  000fb	c3		 ret	 0
$LN72@PMC_DivRem:

; 1824 :             throw DivisionByZeroException(L"0による除算が行われようとしました。");

  000fc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@
  00103	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp]
  00108	e8 00 00 00 00	 call	 ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
  0010d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
  00114	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp]
  00119	e8 00 00 00 00	 call	 _CxxThrowException
  0011e	90		 npad	 1
$LN71@PMC_DivRem:

; 2015 :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0011f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00126	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0012d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  00132	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00137	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0013e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  00143	e8 00 00 00 00	 call	 _CxxThrowException
  00148	cc		 int	 3
$LN68@PMC_DivRem:
?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?dtor$0@?0??PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_L'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_L'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?dtor$0@?0??PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_L'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YA_KPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_L'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z
_TEXT	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I, COMDAT

; 1599 :     {

$LN35:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000b	48 c7 40 98 fe
	ff ff ff	 mov	 QWORD PTR [rax-104], -2
  00013	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00017	48 89 70 18	 mov	 QWORD PTR [rax+24], rsi
  0001b	49 8b f0	 mov	 rsi, r8
  0001e	8b fa		 mov	 edi, edx
  00020	48 8b d9	 mov	 rbx, rcx

; 1600 :         if (sizeof(__UNIT_TYPE) < sizeof(v))
; 1601 :         {
; 1602 :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 1603 :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_divrem.cpp;PMC_DivRem_X_I;1");
; 1604 :         }
; 1605 :         if (u == nullptr)

  00023	48 85 c9	 test	 rcx, rcx
  00026	0f 84 ea 00 00
	00		 je	 $LN32@PMC_DivRem

; 1607 :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 1608 :         CheckNumber(nu);

  0002c	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 1609 :         ResourceHolderUINT root;

  00031	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00036	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003b	90		 npad	 1

; 1610 :         NUMBER_HEADER* nq;
; 1611 :         if (q != nullptr)

  0003c	48 85 f6	 test	 rsi, rsi
  0003f	74 48		 je	 SHORT $LN4@PMC_DivRem

; 1612 :         {
; 1613 :             _UINT32_T r = PMC_DivRem_X_I_Imp(nu, v, &nq);

  00041	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR nq$[rsp]
  00049	8b d7		 mov	 edx, edi
  0004b	48 8b cb	 mov	 rcx, rbx
  0004e	e8 00 00 00 00	 call	 ?PMC_DivRem_X_I_Imp@Internal@Core@Math@Palmtree@@YAIPEAU__tag_NUMBER_HEADER@1234@IPEAPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I_Imp
  00053	8b f8		 mov	 edi, eax

; 1614 :             root.HookNumber(nq);

  00055	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR nq$[rsp]
  0005d	48 8b d3	 mov	 rdx, rbx
  00060	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00065	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 1615 : #ifdef _DEBUG
; 1616 :             CheckNumber(nq);
; 1617 : #endif
; 1618 :             *q = (PMC_HANDLE_UINT)nq;

  0006a	48 89 1e	 mov	 QWORD PTR [rsi], rbx

; 1619 :             root.UnlinkNumber(nq);

  0006d	48 8b d3	 mov	 rdx, rbx
  00070	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00075	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0007a	90		 npad	 1

; 1620 :             return (r);

  0007b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00080	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00085	8b c7		 mov	 eax, edi
  00087	eb 55		 jmp	 SHORT $LN1@PMC_DivRem
$LN4@PMC_DivRem:

; 1522 :         if (v == 0)

  00089	85 ff		 test	 edi, edi
  0008b	74 66		 je	 SHORT $LN33@PMC_DivRem

; 1528 :         }
; 1529 :         if (u->IS_ZERO)

  0008d	f6 43 08 01	 test	 BYTE PTR [rbx+8], 1
  00091	74 04		 je	 SHORT $LN10@PMC_DivRem
$LN30@PMC_DivRem:

; 1621 :         }
; 1622 :         else
; 1623 :         {
; 1624 :             _UINT32_T r = PMC_DivRem_X_I_Imp(nu, v, nullptr);
; 1625 :             return (r);

  00093	33 db		 xor	 ebx, ebx
  00095	eb 3b		 jmp	 SHORT $LN20@PMC_DivRem
$LN10@PMC_DivRem:

; 1543 :             if (v == 1)

  00097	83 ff 01	 cmp	 edi, 1
  0009a	74 f7		 je	 SHORT $LN30@PMC_DivRem
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 426  :             _BitScanReverse(&pos, x);

  0009c	0f bd c7	 bsr	 eax, edi

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  0009f	b9 1f 00 00 00	 mov	 ecx, 31
  000a4	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1558 :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  000a6	48 63 c1	 movsxd	 rax, ecx
  000a9	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000ae	48 2b c8	 sub	 rcx, rax

; 1559 :                 if (u_bit_count < v_bit_count)

  000b1	48 39 4b 20	 cmp	 QWORD PTR [rbx+32], rcx
  000b5	73 08		 jae	 SHORT $LN16@PMC_DivRem

; 1560 :                 {
; 1561 :                     // 明らかに u < v である場合
; 1562 : 
; 1563 :                     // q = 0, r = u を返す。
; 1564 :                     if (q != nullptr)
; 1565 :                         *q = &number_zero;
; 1566 :                     return ((_UINT32_T)u->BLOCK[0]);

  000b7	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  000bb	8b 18		 mov	 ebx, DWORD PTR [rax]
  000bd	eb 13		 jmp	 SHORT $LN20@PMC_DivRem
$LN16@PMC_DivRem:

; 1567 :                 }
; 1568 :                 else
; 1569 :                 {
; 1570 :                     if (q != nullptr)
; 1571 :                     {
; 1572 :                         ResourceHolderUINT root;
; 1573 :                         __UNIT_TYPE q_bit_count = u_bit_count - v_bit_count + 1 + __UNIT_TYPE_BIT_COUNT; // 演算結果を格納するためには u_bit_count - v_bit_count + 1 だけあれば十分であるが、除算の作業用バッファも兼ねているので余分にとっている。
; 1574 :                         *q = root.AllocateNumber(q_bit_count);
; 1575 :                         __UNIT_TYPE r_buf = 0;
; 1576 :                         DivRem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, (*q)->BLOCK, &r_buf);
; 1577 :                         root.CheckNumber(*q);
; 1578 :                         CommitNumber(*q);
; 1579 :                         if ((*q)->IS_ZERO)
; 1580 :                         {
; 1581 :                             root.DeallocateNumber(*q);
; 1582 :                             *q = &number_zero;
; 1583 :                         }
; 1584 :                         else
; 1585 :                             root.UnlinkNumber(*q);
; 1586 :                         return ((_UINT32_T)r_buf);
; 1587 :                     }
; 1588 :                     else
; 1589 :                     {
; 1590 :                         __UNIT_TYPE r_buf = Rem_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v);

  000bf	4c 8b c7	 mov	 r8, rdi
  000c2	48 8b 53 18	 mov	 rdx, QWORD PTR [rbx+24]
  000c6	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  000ca	e8 00 00 00 00	 call	 ?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z ; Palmtree::Math::Core::Internal::Rem_X_1W
  000cf	48 8b d8	 mov	 rbx, rax
$LN20@PMC_DivRem:

; 1621 :         }
; 1622 :         else
; 1623 :         {
; 1624 :             _UINT32_T r = PMC_DivRem_X_I_Imp(nu, v, nullptr);
; 1625 :             return (r);

  000d2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  000d7	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000dc	8b c3		 mov	 eax, ebx
$LN1@PMC_DivRem:

; 1626 :         }
; 1627 :     }

  000de	4c 8d 9c 24 80
	00 00 00	 lea	 r11, QWORD PTR [rsp+128]
  000e6	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  000ea	49 8b 73 20	 mov	 rsi, QWORD PTR [r11+32]
  000ee	49 8b e3	 mov	 rsp, r11
  000f1	5f		 pop	 rdi
  000f2	c3		 ret	 0
$LN33@PMC_DivRem:

; 1527 :             throw DivisionByZeroException(L"0による除算が行われようとしました。");

  000f3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@
  000fa	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp]
  000ff	e8 00 00 00 00	 call	 ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
  00104	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
  0010b	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp]
  00110	e8 00 00 00 00	 call	 _CxxThrowException
  00115	90		 npad	 1
$LN32@PMC_DivRem:

; 1606 :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00116	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  0011d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00124	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  00129	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0012e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00135	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  0013a	e8 00 00 00 00	 call	 _CxxThrowException
  0013f	cc		 int	 3
$LN29@PMC_DivRem:
?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?dtor$0@?0??PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_I'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$ = 40
$T1 = 72
$T2 = 72
nq$ = 144
u$ = 144
v$ = 152
q$ = 160
?dtor$0@?0??PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_I'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YAIPEAU__tag_PMC_HANDLE_UINT@1234@IPEAPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_DivRem_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z
_TEXT	SEGMENT
temp_r$1 = 32
pos$2 = 40
$T3 = 48
$T4 = 96
u$ = 176
v$ = 184
q$ = 192
?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_L_X, COMDAT

; 1630 :     {

$LN112:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000b	49 8b d8	 mov	 rbx, r8
  0000e	48 8b f2	 mov	 rsi, rdx
  00011	48 8b f9	 mov	 rdi, rcx

; 1631 :         if (sizeof(__UNIT_TYPE) * 2 < sizeof(u))
; 1632 :         {
; 1633 :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 1634 :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_divrem.cpp;PMC_DivRem_L_X;1");
; 1635 :         }
; 1636 :         if (v == nullptr)

  00014	48 85 d2	 test	 rdx, rdx
  00017	0f 84 fa 00 00
	00		 je	 $LN110@PMC_DivRem

; 1638 :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;
; 1639 :         CheckNumber(nv);

  0001d	48 8b ca	 mov	 rcx, rdx
  00020	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 1640 :         if (nv->IS_ZERO)

  00025	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  00028	a8 01		 test	 al, 1
  0002a	0f 85 11 01 00
	00		 jne	 $LN111@PMC_DivRem

; 1646 :         }
; 1647 :         if (u == 0)

  00030	48 85 ff	 test	 rdi, rdi
  00033	75 15		 jne	 SHORT $LN5@PMC_DivRem

; 1648 :         {
; 1649 :             // x が 0 である場合
; 1650 : 
; 1651 :             // q = 0, r = 0 を返す
; 1652 :             if (q != nullptr)

  00035	48 85 db	 test	 rbx, rbx
  00038	74 1c		 je	 SHORT $LN10@PMC_DivRem

; 1653 :                 *q = 0;

  0003a	48 89 3b	 mov	 QWORD PTR [rbx], rdi

; 1667 :                 return (0);

  0003d	33 c0		 xor	 eax, eax

; 1810 :                     }
; 1811 :                 }
; 1812 : 
; 1813 :             }
; 1814 :         }
; 1815 :     }

  0003f	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00046	5f		 pop	 rdi
  00047	5e		 pop	 rsi
  00048	5b		 pop	 rbx
  00049	c3		 ret	 0
$LN5@PMC_DivRem:

; 1654 :             return (0);
; 1655 :         }
; 1656 :         else
; 1657 :         {
; 1658 :             // u が 0 ではない場合
; 1659 : 
; 1660 :             if (nv->IS_ONE)

  0004a	a8 02		 test	 al, 2
  0004c	74 15		 je	 SHORT $LN8@PMC_DivRem

; 1661 :             {
; 1662 :                 // v が 1 である場合
; 1663 : 
; 1664 :                 // q = u, r = 0 を返す
; 1665 :                 if (q != nullptr)

  0004e	48 85 db	 test	 rbx, rbx
  00051	74 03		 je	 SHORT $LN10@PMC_DivRem

; 1666 :                     *q = u;

  00053	48 89 3b	 mov	 QWORD PTR [rbx], rdi
$LN10@PMC_DivRem:

; 1667 :                 return (0);

  00056	33 c0		 xor	 eax, eax

; 1810 :                     }
; 1811 :                 }
; 1812 : 
; 1813 :             }
; 1814 :         }
; 1815 :     }

  00058	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0005f	5f		 pop	 rdi
  00060	5e		 pop	 rsi
  00061	5b		 pop	 rbx
  00062	c3		 ret	 0
$LN8@PMC_DivRem:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 469  :             _BitScanReverse64(&pos, x);

  00063	48 0f bd c7	 bsr	 rax, rdi

; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00067	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1783 :                     __UNIT_TYPE u_bit_count = sizeof(u) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)u);

  0006c	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00071	2b c8		 sub	 ecx, eax
  00073	89 44 24 28	 mov	 DWORD PTR pos$2[rsp], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1783 :                     __UNIT_TYPE u_bit_count = sizeof(u) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)u);

  00077	48 63 c9	 movsxd	 rcx, ecx
  0007a	48 2b d1	 sub	 rdx, rcx

; 1784 :                     __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;
; 1785 :                     if (u_bit_count < v_bit_count)

  0007d	48 3b 56 20	 cmp	 rdx, QWORD PTR [rsi+32]
  00081	73 1a		 jae	 SHORT $LN30@PMC_DivRem

; 1786 :                     {
; 1787 :                         // 明らかに u < v である場合
; 1788 : 
; 1789 :                         // q = 0, r = u を返す。
; 1790 :                         if (q != nullptr)

  00083	48 85 db	 test	 rbx, rbx
  00086	74 07		 je	 SHORT $LN32@PMC_DivRem

; 1791 :                             *q = 0;

  00088	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0
$LN32@PMC_DivRem:

; 1792 :                         return (u);

  0008f	48 8b c7	 mov	 rax, rdi

; 1810 :                     }
; 1811 :                 }
; 1812 : 
; 1813 :             }
; 1814 :         }
; 1815 :     }

  00092	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00099	5f		 pop	 rdi
  0009a	5e		 pop	 rsi
  0009b	5b		 pop	 rbx
  0009c	c3		 ret	 0
$LN30@PMC_DivRem:

; 1793 :                     }
; 1794 :                     else
; 1795 :                     {
; 1796 :                         // u のビット数が v のビット数以上である場合
; 1797 : 
; 1798 :                         // u は 1 ワードで表現できるので、v も 1 ワードで表現できる。
; 1799 :                         __UNIT_TYPE temp_r;
; 1800 :                         __UNIT_TYPE temp_q = _DIVREM_UNIT(0, (__UNIT_TYPE)u, (__UNIT_TYPE)nv->BLOCK[0], &temp_r);

  0009d	48 8b 46 40	 mov	 rax, QWORD PTR [rsi+64]
  000a1	4c 8b 00	 mov	 r8, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000a4	49 8b c0	 mov	 rax, r8
  000a7	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 326  :         if (v_hi == 0)

  000ab	85 c0		 test	 eax, eax
  000ad	75 37		 jne	 SHORT $LN83@PMC_DivRem

; 63   :             q3 = (_UINT32_T)(t / v);

  000af	33 d2		 xor	 edx, edx
  000b1	45 8b c8	 mov	 r9d, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000b4	48 8b c7	 mov	 rax, rdi

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000b7	8b cf		 mov	 ecx, edi

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000b9	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  000bd	49 f7 f1	 div	 r9
  000c0	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000c3	8b c2		 mov	 eax, edx
  000c5	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000c9	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000cb	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000ce	49 f7 f1	 div	 r9
  000d1	8b ca		 mov	 ecx, edx
  000d3	48 89 4c 24 20	 mov	 QWORD PTR temp_r$1[rsp], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000d8	41 8b c8	 mov	 ecx, r8d
  000db	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
  000df	8b c0		 mov	 eax, eax
  000e1	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  000e4	eb 12		 jmp	 SHORT $LN84@PMC_DivRem
$LN83@PMC_DivRem:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  000e6	4c 8d 4c 24 20	 lea	 r9, QWORD PTR temp_r$1[rsp]
  000eb	48 8b d7	 mov	 rdx, rdi
  000ee	33 c9		 xor	 ecx, ecx
  000f0	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  000f5	48 8b c8	 mov	 rcx, rax
$LN84@PMC_DivRem:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 325  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  000f8	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1807 :                         if (q != nullptr)

  000ff	48 85 db	 test	 rbx, rbx
  00102	74 03		 je	 SHORT $LN35@PMC_DivRem

; 1808 :                             *q = temp_q;

  00104	48 89 0b	 mov	 QWORD PTR [rbx], rcx
$LN35@PMC_DivRem:

; 1809 :                         return (temp_r);

  00107	48 8b 44 24 20	 mov	 rax, QWORD PTR temp_r$1[rsp]

; 1810 :                     }
; 1811 :                 }
; 1812 : 
; 1813 :             }
; 1814 :         }
; 1815 :     }

  0010c	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00113	5f		 pop	 rdi
  00114	5e		 pop	 rsi
  00115	5b		 pop	 rbx
  00116	c3		 ret	 0
$LN110@PMC_DivRem:

; 1637 :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00117	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0011e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00125	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  0012a	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0012f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00136	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  0013b	e8 00 00 00 00	 call	 _CxxThrowException
  00140	cc		 int	 3
$LN111@PMC_DivRem:

; 1641 :         {
; 1642 :             // v が 0 である場合
; 1643 : 
; 1644 :             // 0 による除算はエラーで返す
; 1645 :             throw DivisionByZeroException(L"0による除算が行われようとしました。");

  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@
  00148	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T4[rsp]
  0014d	e8 00 00 00 00	 call	 ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
  00152	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
  00159	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T4[rsp]
  0015e	e8 00 00 00 00	 call	 _CxxThrowException
  00163	cc		 int	 3
$LN108@PMC_DivRem:
?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YA_K_KPEAU__tag_PMC_HANDLE_UINT@1234@PEA_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_DivRem_L_X
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
u$ = 144
pos$3 = 152
v$ = 152
q$ = 160
temp_r$4 = 168
?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_I_X, COMDAT

; 1444 :     {

$LN51:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	8b f9		 mov	 edi, ecx
  00014	49 8b d8	 mov	 rbx, r8
  00017	48 8b f2	 mov	 rsi, rdx

; 1445 :         if (sizeof(__UNIT_TYPE) < sizeof(u))
; 1446 :         {
; 1447 :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 1448 :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_divrem.cpp;PMC_DivRem_I_X;1");
; 1449 :         }
; 1450 :         if (v == nullptr)

  0001a	48 85 d2	 test	 rdx, rdx
  0001d	0f 84 f0 00 00
	00		 je	 $LN49@PMC_DivRem

; 1452 :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;
; 1453 :         CheckNumber(nv);

  00023	48 8b ca	 mov	 rcx, rdx
  00026	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 1454 :         if (nv->IS_ZERO)

  0002b	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  0002e	a8 01		 test	 al, 1
  00030	0f 85 07 01 00
	00		 jne	 $LN50@PMC_DivRem

; 1460 :         }
; 1461 :         if (u == 0)

  00036	85 ff		 test	 edi, edi
  00038	75 0e		 jne	 SHORT $LN5@PMC_DivRem

; 1462 :         {
; 1463 :             // u が 0 である場合
; 1464 : 
; 1465 :             // q = 0, r = 0 を返す
; 1466 :             if (q != nullptr)

  0003a	48 85 db	 test	 rbx, rbx
  0003d	74 14		 je	 SHORT $LN10@PMC_DivRem

; 1467 :                 *q = 0;

  0003f	89 3b		 mov	 DWORD PTR [rbx], edi

; 1481 :                 return (0);

  00041	33 c0		 xor	 eax, eax
  00043	e9 b6 00 00 00	 jmp	 $LN12@PMC_DivRem
$LN5@PMC_DivRem:

; 1468 :             return (0);
; 1469 :         }
; 1470 :         else
; 1471 :         {
; 1472 :             // u が 0 ではない場合
; 1473 : 
; 1474 :             if (nv->IS_ONE)

  00048	a8 02		 test	 al, 2
  0004a	74 0e		 je	 SHORT $LN8@PMC_DivRem

; 1475 :             {
; 1476 :                 // v が 1 である場合
; 1477 : 
; 1478 :                 // q = u, r = 0 を返す
; 1479 :                 if (q != nullptr)

  0004c	48 85 db	 test	 rbx, rbx
  0004f	74 02		 je	 SHORT $LN10@PMC_DivRem

; 1480 :                     *q = u;

  00051	89 3b		 mov	 DWORD PTR [rbx], edi
$LN10@PMC_DivRem:

; 1481 :                 return (0);

  00053	33 c0		 xor	 eax, eax
  00055	e9 a4 00 00 00	 jmp	 $LN12@PMC_DivRem
$LN8@PMC_DivRem:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 426  :             _BitScanReverse(&pos, x);

  0005a	0f bd cf	 bsr	 ecx, edi

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  0005d	b8 1f 00 00 00	 mov	 eax, 31
  00062	2b c1		 sub	 eax, ecx
  00064	89 8c 24 98 00
	00 00		 mov	 DWORD PTR pos$3[rsp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1488 :                 __UNIT_TYPE u_bit_count = sizeof(u) * 8 - _LZCNT_ALT_32(u);

  0006b	48 98		 cdqe
  0006d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00072	48 2b c8	 sub	 rcx, rax

; 1489 :                 __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;
; 1490 :                 if (u_bit_count < v_bit_count)

  00075	48 3b 4e 20	 cmp	 rcx, QWORD PTR [rsi+32]
  00079	73 0f		 jae	 SHORT $LN11@PMC_DivRem

; 1491 :                 {
; 1492 :                     // 明らかに u < v である場合
; 1493 : 
; 1494 :                     // q = 0, r = u を返す。
; 1495 :                     if (q != nullptr)

  0007b	48 85 db	 test	 rbx, rbx
  0007e	74 06		 je	 SHORT $LN13@PMC_DivRem

; 1496 :                         *q = 0;

  00080	c7 03 00 00 00
	00		 mov	 DWORD PTR [rbx], 0
$LN13@PMC_DivRem:

; 1497 :                     return (u);

  00086	8b c7		 mov	 eax, edi
  00088	eb 74		 jmp	 SHORT $LN12@PMC_DivRem
$LN11@PMC_DivRem:

; 1498 :                 }
; 1499 :                 else
; 1500 :                 {
; 1501 :                     // u のビット数が v のビット数以上である場合
; 1502 : 
; 1503 :                     // u は 1 ワードで表現できるので、v も 1 ワードで表現できる。
; 1504 :                     __UNIT_TYPE temp_r;
; 1505 :                     __UNIT_TYPE temp_q = _DIVREM_UNIT(0, u, (__UNIT_TYPE)nv->BLOCK[0], &temp_r);

  0008a	48 8b 46 40	 mov	 rax, QWORD PTR [rsi+64]
  0008e	4c 8b 00	 mov	 r8, QWORD PTR [rax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00091	49 8b c0	 mov	 rax, r8
  00094	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 326  :         if (v_hi == 0)

  00098	85 c0		 test	 eax, eax
  0009a	75 38		 jne	 SHORT $LN22@PMC_DivRem

; 56   :             _r = (_UINT32_T)(t % v);

  0009c	41 8b c8	 mov	 ecx, r8d

; 63   :             q3 = (_UINT32_T)(t / v);

  0009f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000a1	48 8b c7	 mov	 rax, rdi
  000a4	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  000a8	48 f7 f1	 div	 rcx
  000ab	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000ae	8b c2		 mov	 eax, edx
  000b0	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000b4	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000b6	48 0b c7	 or	 rax, rdi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000b9	48 f7 f1	 div	 rcx
  000bc	8b ca		 mov	 ecx, edx
  000be	48 89 8c 24 a8
	00 00 00	 mov	 QWORD PTR temp_r$4[rsp], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000c6	41 8b c8	 mov	 ecx, r8d
  000c9	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
  000cd	8b c0		 mov	 eax, eax
  000cf	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  000d2	eb 15		 jmp	 SHORT $LN23@PMC_DivRem
$LN22@PMC_DivRem:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  000d4	4c 8d 8c 24 a8
	00 00 00	 lea	 r9, QWORD PTR temp_r$4[rsp]
  000dc	48 8b d7	 mov	 rdx, rdi
  000df	33 c9		 xor	 ecx, ecx
  000e1	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  000e6	48 8b c8	 mov	 rcx, rax
$LN23@PMC_DivRem:

; 1506 :                     if (q != nullptr)

  000e9	48 85 db	 test	 rbx, rbx
  000ec	74 02		 je	 SHORT $LN14@PMC_DivRem

; 1507 :                         *q = (_UINT32_T)temp_q;

  000ee	89 0b		 mov	 DWORD PTR [rbx], ecx
$LN14@PMC_DivRem:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 319  :         _InterlockedIncrement(&statistics_info.COUNT_DIV32);

  000f0	f0 ff 05 0c 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+12
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 1514 :                     return ((_UINT32_T)temp_r);

  000f7	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR temp_r$4[rsp]
$LN12@PMC_DivRem:

; 1515 :                 }
; 1516 :             }
; 1517 :         }
; 1518 :     }

  000fe	4c 8d 9c 24 80
	00 00 00	 lea	 r11, QWORD PTR [rsp+128]
  00106	49 8b 5b 10	 mov	 rbx, QWORD PTR [r11+16]
  0010a	49 8b 73 20	 mov	 rsi, QWORD PTR [r11+32]
  0010e	49 8b e3	 mov	 rsp, r11
  00111	5f		 pop	 rdi
  00112	c3		 ret	 0
$LN49@PMC_DivRem:

; 1451 :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00113	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  0011a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00121	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00126	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0012b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00132	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00137	e8 00 00 00 00	 call	 _CxxThrowException
  0013c	cc		 int	 3
$LN50@PMC_DivRem:

; 1455 :         {
; 1456 :             // v が 0 である場合
; 1457 : 
; 1458 :             // 0 による除算はエラーで返す
; 1459 :             throw DivisionByZeroException(L"0による除算が行われようとしました。");

  0013d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@BGDHBHIM@?$AA0?$AAk?$PP?$II?$PP?$IL?$AAd?$PP?$JH?$AAL?$AAL?$PP?$IP?$PP?$IM?$PP?$II?$AAF?$AAh?$AAW?$AA?$HO@
  00144	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T2[rsp]
  00149	e8 00 00 00 00	 call	 ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
  0014e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVDivisionByZeroException@Internal@Core@Math@Palmtree@@
  00155	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T2[rsp]
  0015a	e8 00 00 00 00	 call	 _CxxThrowException
  0015f	cc		 int	 3
$LN47@PMC_DivRem:
?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YAIIPEAU__tag_PMC_HANDLE_UINT@1234@PEAI@Z ENDP ; Palmtree::Math::Core::Internal::PMC_DivRem_I_X
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?Initialize_DivRem@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 8
?Initialize_DivRem@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_DivRem, COMDAT

; 2235 :     {

  00000	8b 01		 mov	 eax, DWORD PTR [rcx]

; 2236 :         fp_DivRem_X_X = feature->PROCESSOR_FEATURE_ADX && feature->PROCESSOR_FEATURE_BMI2 ? DivRem_X_X_using_ADX_MULX : DivRem_X_X_using_ADC_MUL;
; 2237 :         return (PMC_STATUS_OK);

  00002	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?DivRem_X_X_using_ADC_MUL@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z ; Palmtree::Math::Core::Internal::DivRem_X_X_using_ADC_MUL
  00009	83 e0 0a	 and	 eax, 10
  0000c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?DivRem_X_X_using_ADX_MULX@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z ; Palmtree::Math::Core::Internal::DivRem_X_X_using_ADX_MULX
  00013	3c 0a		 cmp	 al, 10
  00015	48 0f 45 ca	 cmovne	 rcx, rdx
  00019	33 c0		 xor	 eax, eax
  0001b	48 89 0d 00 00
	00 00		 mov	 QWORD PTR ?fp_DivRem_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K01000@ZEA, rcx

; 2238 :     }

  00022	c3		 ret	 0
?Initialize_DivRem@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_DivRem
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?DivRem_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z
_TEXT	SEGMENT
r$1 = 80
u_buf$ = 80
r$2 = 88
u_count$ = 88
v_buf$ = 96
v_count$ = 104
work_v_buf$ = 112
q_buf$ = 120
r_buf$ = 128
?DivRem_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z PROC ; Palmtree::Math::Core::Internal::DivRem_X_X, COMDAT

; 352  :     {

$LN44:
  00000	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 353  :         __UNIT_TYPE* u_buf_2 = u_buf;
; 354  :         __UNIT_TYPE u_count_2 = u_count;
; 355  :         __UNIT_TYPE* v_buf_2 = v_buf;
; 356  :         __UNIT_TYPE v_count_2 = v_count;
; 357  :         if (v_count_2 == 1)

  0000a	49 83 f9 01	 cmp	 r9, 1
  0000e	0f 85 e1 00 00
	00		 jne	 $LN2@DivRem_X_X

; 358  :         {
; 359  :             if (u_count_2 == 1)

  00014	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00017	49 3b d1	 cmp	 rdx, r9
  0001a	0f 85 86 00 00
	00		 jne	 $LN4@DivRem_X_X

; 360  :             {
; 361  :                 __UNIT_TYPE r;
; 362  :                 __UNIT_TYPE q = _DIVREM_UNIT(0, u_buf_2[0], v_buf_2[0], &r);

  00020	4c 8b 11	 mov	 r10, QWORD PTR [rcx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00023	49 8b c0	 mov	 rax, r8
  00026	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 326  :         if (v_hi == 0)

  0002a	85 c0		 test	 eax, eax
  0002c	75 37		 jne	 SHORT $LN16@DivRem_X_X

; 63   :             q3 = (_UINT32_T)(t / v);

  0002e	33 d2		 xor	 edx, edx
  00030	41 8b f0	 mov	 esi, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00033	49 8b c2	 mov	 rax, r10

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00036	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00039	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0003d	48 f7 f6	 div	 rsi
  00040	48 8b f8	 mov	 rdi, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00043	8b c2		 mov	 eax, edx
  00045	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00049	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0004b	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0004e	48 f7 f6	 div	 rsi
  00051	8b f2		 mov	 esi, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00053	8b d7		 mov	 edx, edi
  00055	48 c1 e2 20	 shl	 rdx, 32			; 00000020H
  00059	8b c0		 mov	 eax, eax
  0005b	48 0b d0	 or	 rdx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0005e	48 89 74 24 50	 mov	 QWORD PTR r$1[rsp], rsi

; 329  :             return (q);

  00063	eb 17		 jmp	 SHORT $LN17@DivRem_X_X
$LN16@DivRem_X_X:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00065	4c 8d 4c 24 50	 lea	 r9, QWORD PTR r$1[rsp]
  0006a	49 8b d2	 mov	 rdx, r10
  0006d	33 c9		 xor	 ecx, ecx
  0006f	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00074	48 8b 74 24 50	 mov	 rsi, QWORD PTR r$1[rsp]
  00079	48 8b d0	 mov	 rdx, rax
$LN17@DivRem_X_X:

; 363  :                 if (q_buf != nullptr)

  0007c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR q_buf$[rsp]
  00081	48 85 c9	 test	 rcx, rcx
  00084	74 03		 je	 SHORT $LN6@DivRem_X_X

; 364  :                     q_buf[0] = q;

  00086	48 89 11	 mov	 QWORD PTR [rcx], rdx
$LN6@DivRem_X_X:

; 365  :                 r_buf[0] = r;

  00089	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR r_buf$[rsp]
  00091	48 89 30	 mov	 QWORD PTR [rax], rsi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 325  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  00094	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 396  :     }

  0009b	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
$LN4@DivRem_X_X:

; 366  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 367  :                 if (sizeof(r) == sizeof(_UINT64_T))
; 368  :                     IncrementDIV64Counter();
; 369  :                 else
; 370  :                     IncrementDIV32Counter();
; 371  : #endif
; 372  :             }
; 373  :             else
; 374  :             {
; 375  :                 if (q_buf != nullptr)

  000a6	4c 8b 4c 24 78	 mov	 r9, QWORD PTR q_buf$[rsp]
  000ab	4d 85 c9	 test	 r9, r9
  000ae	74 2a		 je	 SHORT $LN9@DivRem_X_X

; 376  :                 {
; 377  :                     __UNIT_TYPE r;
; 378  :                     DivRem_X_1W(u_buf_2, u_count_2, v_buf_2[0], q_buf, &r);

  000b0	48 8d 44 24 58	 lea	 rax, QWORD PTR r$2[rsp]
  000b5	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ba	e8 00 00 00 00	 call	 ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ; Palmtree::Math::Core::Internal::DivRem_X_1W

; 379  :                     r_buf[0] = r;

  000bf	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR r_buf$[rsp]
  000c7	48 8b 44 24 58	 mov	 rax, QWORD PTR r$2[rsp]
  000cc	48 89 01	 mov	 QWORD PTR [rcx], rax

; 396  :     }

  000cf	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  000d4	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d8	5f		 pop	 rdi
  000d9	c3		 ret	 0
$LN9@DivRem_X_X:

; 380  :                 }
; 381  :                 else
; 382  :                     r_buf[0] = Rem_X_1W(u_buf_2, u_count_2, v_buf_2[0]);

  000da	e8 00 00 00 00	 call	 ?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z ; Palmtree::Math::Core::Internal::Rem_X_1W
  000df	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR r_buf$[rsp]
  000e7	48 89 01	 mov	 QWORD PTR [rcx], rax

; 396  :     }

  000ea	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  000ef	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000f3	5f		 pop	 rdi
  000f4	c3		 ret	 0
$LN2@DivRem_X_X:

; 383  :             }
; 384  :         }
; 385  :         else
; 386  :         {
; 387  :             if (u_count_2 < v_count_2)

  000f5	49 3b d1	 cmp	 rdx, r9
  000f8	73 2d		 jae	 SHORT $LN11@DivRem_X_X

; 388  :             {
; 389  :                 if (q_buf != nullptr)

  000fa	48 8b 44 24 78	 mov	 rax, QWORD PTR q_buf$[rsp]
  000ff	48 85 c0	 test	 rax, rax
  00102	74 07		 je	 SHORT $LN13@DivRem_X_X

; 390  :                     q_buf[0] = 0;

  00104	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN13@DivRem_X_X:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  0010b	48 8b bc 24 80
	00 00 00	 mov	 rdi, QWORD PTR r_buf$[rsp]
  00113	48 8b f1	 mov	 rsi, rcx
  00116	48 8b ca	 mov	 rcx, rdx
  00119	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 396  :     }

  0011c	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  00121	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00125	5f		 pop	 rdi
  00126	c3		 ret	 0
$LN11@DivRem_X_X:
  00127	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  0012c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00130	5f		 pop	 rdi

; 391  :                 _COPY_MEMORY_UNIT(r_buf, u_buf, u_count);
; 392  :             }
; 393  :             else
; 394  :                 (*fp_DivRem_X_X)(u_buf_2, u_count_2, v_buf_2, v_count_2, work_v_buf, q_buf, r_buf);

  00131	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR ?fp_DivRem_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K01000@ZEA
?DivRem_X_X@Internal@Core@Math@Palmtree@@YAXPEA_K_K01000@Z ENDP ; Palmtree::Math::Core::Internal::DivRem_X_X
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z
_TEXT	SEGMENT
RR$1 = 32
RR$2 = 40
RR$3 = 48
RR$4 = 56
RR$5 = 64
RR$6 = 72
RR$7 = 80
RR$8 = 88
RR$9 = 96
RR$10 = 104
RR$11 = 112
RR$12 = 120
RR$13 = 128
RR$14 = 136
RR$15 = 144
RR$16 = 152
RR$17 = 160
RR$18 = 168
RR$19 = 176
RR$20 = 184
RR$21 = 192
RR$22 = 200
RR$23 = 208
RR$24 = 216
RR$25 = 224
RR$26 = 232
RR$27 = 240
dummy_q$ = 320
u_buf$ = 320
RR$28 = 328
u_buf_len$ = 328
v$ = 336
RR$29 = 344
?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z PROC ; Palmtree::Math::Core::Internal::Rem_X_1W, COMDAT

; 399  :     {

$LN747:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 8d 68 c8	 lea	 rbp, QWORD PTR [rax-56]
  0000a	48 81 ec 20 01
	00 00		 sub	 rsp, 288		; 00000120H
  00011	4c 89 60 d8	 mov	 QWORD PTR [rax-40], r12

; 400  :         // u の最上位ワードは 0 でありうることに注意すること。
; 401  :         __UNIT_TYPE* up = u_buf + u_buf_len - 1;

  00015	48 8d 79 f8	 lea	 rdi, QWORD PTR [rcx-8]
  00019	4c 89 78 c8	 mov	 QWORD PTR [rax-56], r15
  0001d	48 8d 3c d7	 lea	 rdi, QWORD PTR [rdi+rdx*8]

; 402  :         __UNIT_TYPE u_count = u_buf_len;
; 403  :         __UNIT_TYPE dummy_q;
; 404  :         __UNIT_TYPE r = 0;
; 405  :         __UNIT_TYPE count = u_count >> 5;

  00021	4c 8b fa	 mov	 r15, rdx
  00024	33 c9		 xor	 ecx, ecx
  00026	49 c1 ef 05	 shr	 r15, 5
  0002a	49 8b f0	 mov	 rsi, r8
  0002d	4c 8b e2	 mov	 r12, rdx

; 406  :         while (count != 0)

  00030	4d 85 ff	 test	 r15, r15
  00033	0f 84 5c 0c 00
	00		 je	 $LN3@Rem_X_1W
  00039	48 89 58 e0	 mov	 QWORD PTR [rax-32], rbx
  0003d	4c 89 70 d0	 mov	 QWORD PTR [rax-48], r14
  00041	4d 8b f0	 mov	 r14, r8
  00044	49 c1 ee 20	 shr	 r14, 32			; 00000020H
  00048	8b de		 mov	 ebx, esi
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Rem_X_1W:

; 407  :         {
; 408  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &dummy_q);

  00050	4c 8b 17	 mov	 r10, QWORD PTR [rdi]

; 326  :         if (v_hi == 0)

  00053	45 85 f6	 test	 r14d, r14d
  00056	75 4a		 jne	 SHORT $LN25@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00058	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0005a	48 8b c1	 mov	 rax, rcx
  0005d	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00061	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00064	8b c9		 mov	 ecx, ecx
  00066	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00068	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0006a	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0006e	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00071	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00074	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00077	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0007b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0007d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0007f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00083	48 0b c1	 or	 rax, rcx
  00086	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00089	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0008c	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0008e	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00090	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00094	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00097	48 f7 f3	 div	 rbx
  0009a	8b ca		 mov	 ecx, edx
  0009c	48 89 4d 48	 mov	 QWORD PTR RR$28[rbp-256], rcx

; 329  :             return (q);

  000a0	eb 13		 jmp	 SHORT $LN26@Rem_X_1W
$LN25@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  000a2	4c 8d 4d 48	 lea	 r9, QWORD PTR RR$28[rbp-256]
  000a6	4c 8b c6	 mov	 r8, rsi
  000a9	49 8b d2	 mov	 rdx, r10
  000ac	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  000b1	48 8b 4d 48	 mov	 rcx, QWORD PTR RR$28[rbp-256]
$LN26@Rem_X_1W:

; 409  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &dummy_q);

  000b5	4c 8b 57 f8	 mov	 r10, QWORD PTR [rdi-8]

; 326  :         if (v_hi == 0)

  000b9	45 85 f6	 test	 r14d, r14d
  000bc	75 4a		 jne	 SHORT $LN49@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  000be	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000c0	48 8b c1	 mov	 rax, rcx
  000c3	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  000c7	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000ca	8b c9		 mov	 ecx, ecx
  000cc	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  000ce	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000d0	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  000d4	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000d7	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  000da	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000dd	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000e1	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  000e3	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000e5	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  000e9	48 0b c1	 or	 rax, rcx
  000ec	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  000ef	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000f2	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000f4	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000f6	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  000fa	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000fd	48 f7 f3	 div	 rbx
  00100	8b ca		 mov	 ecx, edx
  00102	48 89 4d 58	 mov	 QWORD PTR RR$29[rbp-256], rcx

; 329  :             return (q);

  00106	eb 13		 jmp	 SHORT $LN50@Rem_X_1W
$LN49@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00108	4c 8d 4d 58	 lea	 r9, QWORD PTR RR$29[rbp-256]
  0010c	4c 8b c6	 mov	 r8, rsi
  0010f	49 8b d2	 mov	 rdx, r10
  00112	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00117	48 8b 4d 58	 mov	 rcx, QWORD PTR RR$29[rbp-256]
$LN50@Rem_X_1W:

; 410  :             r = _DIVREM_SINGLE_UNIT(r, up[-2], v, &dummy_q);

  0011b	4c 8b 57 f0	 mov	 r10, QWORD PTR [rdi-16]

; 326  :         if (v_hi == 0)

  0011f	45 85 f6	 test	 r14d, r14d
  00122	75 4b		 jne	 SHORT $LN73@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00124	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00126	48 8b c1	 mov	 rax, rcx
  00129	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0012d	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00130	8b c9		 mov	 ecx, ecx
  00132	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00134	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00136	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0013a	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0013d	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00140	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00143	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00147	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00149	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0014b	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0014f	48 0b c1	 or	 rax, rcx
  00152	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00155	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00158	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0015a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0015c	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00160	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00163	48 f7 f3	 div	 rbx
  00166	8b ca		 mov	 ecx, edx
  00168	48 89 4c 24 20	 mov	 QWORD PTR RR$1[rsp], rcx

; 329  :             return (q);

  0016d	eb 15		 jmp	 SHORT $LN74@Rem_X_1W
$LN73@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0016f	4c 8d 4c 24 20	 lea	 r9, QWORD PTR RR$1[rsp]
  00174	4c 8b c6	 mov	 r8, rsi
  00177	49 8b d2	 mov	 rdx, r10
  0017a	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  0017f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR RR$1[rsp]
$LN74@Rem_X_1W:

; 411  :             r = _DIVREM_SINGLE_UNIT(r, up[-3], v, &dummy_q);

  00184	4c 8b 57 e8	 mov	 r10, QWORD PTR [rdi-24]

; 326  :         if (v_hi == 0)

  00188	45 85 f6	 test	 r14d, r14d
  0018b	75 4b		 jne	 SHORT $LN97@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  0018d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0018f	48 8b c1	 mov	 rax, rcx
  00192	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00196	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00199	8b c9		 mov	 ecx, ecx
  0019b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0019d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0019f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  001a3	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  001a6	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  001a9	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  001ac	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001b0	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  001b2	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001b4	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  001b8	48 0b c1	 or	 rax, rcx
  001bb	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  001be	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001c1	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  001c3	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001c5	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  001c9	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  001cc	48 f7 f3	 div	 rbx
  001cf	8b ca		 mov	 ecx, edx
  001d1	48 89 4c 24 28	 mov	 QWORD PTR RR$2[rsp], rcx

; 329  :             return (q);

  001d6	eb 15		 jmp	 SHORT $LN98@Rem_X_1W
$LN97@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  001d8	4c 8d 4c 24 28	 lea	 r9, QWORD PTR RR$2[rsp]
  001dd	4c 8b c6	 mov	 r8, rsi
  001e0	49 8b d2	 mov	 rdx, r10
  001e3	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  001e8	48 8b 4c 24 28	 mov	 rcx, QWORD PTR RR$2[rsp]
$LN98@Rem_X_1W:

; 412  :             r = _DIVREM_SINGLE_UNIT(r, up[-4], v, &dummy_q);

  001ed	4c 8b 57 e0	 mov	 r10, QWORD PTR [rdi-32]

; 326  :         if (v_hi == 0)

  001f1	45 85 f6	 test	 r14d, r14d
  001f4	75 4b		 jne	 SHORT $LN121@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  001f6	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  001f8	48 8b c1	 mov	 rax, rcx
  001fb	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  001ff	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00202	8b c9		 mov	 ecx, ecx
  00204	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00206	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00208	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0020c	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0020f	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00212	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00215	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00219	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0021b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0021d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00221	48 0b c1	 or	 rax, rcx
  00224	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00227	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0022a	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0022c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0022e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00232	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00235	48 f7 f3	 div	 rbx
  00238	8b ca		 mov	 ecx, edx
  0023a	48 89 4c 24 30	 mov	 QWORD PTR RR$3[rsp], rcx

; 329  :             return (q);

  0023f	eb 15		 jmp	 SHORT $LN122@Rem_X_1W
$LN121@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00241	4c 8d 4c 24 30	 lea	 r9, QWORD PTR RR$3[rsp]
  00246	4c 8b c6	 mov	 r8, rsi
  00249	49 8b d2	 mov	 rdx, r10
  0024c	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00251	48 8b 4c 24 30	 mov	 rcx, QWORD PTR RR$3[rsp]
$LN122@Rem_X_1W:

; 413  :             r = _DIVREM_SINGLE_UNIT(r, up[-5], v, &dummy_q);

  00256	4c 8b 57 d8	 mov	 r10, QWORD PTR [rdi-40]

; 326  :         if (v_hi == 0)

  0025a	45 85 f6	 test	 r14d, r14d
  0025d	75 4b		 jne	 SHORT $LN145@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  0025f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00261	48 8b c1	 mov	 rax, rcx
  00264	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00268	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0026b	8b c9		 mov	 ecx, ecx
  0026d	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0026f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00271	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00275	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00278	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0027b	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0027e	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00282	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00284	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00286	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0028a	48 0b c1	 or	 rax, rcx
  0028d	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00290	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00293	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00295	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00297	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0029b	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0029e	48 f7 f3	 div	 rbx
  002a1	8b ca		 mov	 ecx, edx
  002a3	48 89 4c 24 38	 mov	 QWORD PTR RR$4[rsp], rcx

; 329  :             return (q);

  002a8	eb 15		 jmp	 SHORT $LN146@Rem_X_1W
$LN145@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  002aa	4c 8d 4c 24 38	 lea	 r9, QWORD PTR RR$4[rsp]
  002af	4c 8b c6	 mov	 r8, rsi
  002b2	49 8b d2	 mov	 rdx, r10
  002b5	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  002ba	48 8b 4c 24 38	 mov	 rcx, QWORD PTR RR$4[rsp]
$LN146@Rem_X_1W:

; 414  :             r = _DIVREM_SINGLE_UNIT(r, up[-6], v, &dummy_q);

  002bf	4c 8b 57 d0	 mov	 r10, QWORD PTR [rdi-48]

; 326  :         if (v_hi == 0)

  002c3	45 85 f6	 test	 r14d, r14d
  002c6	75 4b		 jne	 SHORT $LN169@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  002c8	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  002ca	48 8b c1	 mov	 rax, rcx
  002cd	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  002d1	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002d4	8b c9		 mov	 ecx, ecx
  002d6	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  002d8	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002da	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  002de	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  002e1	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  002e4	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  002e7	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002eb	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  002ed	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002ef	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  002f3	48 0b c1	 or	 rax, rcx
  002f6	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  002f9	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002fc	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  002fe	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00300	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00304	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00307	48 f7 f3	 div	 rbx
  0030a	8b ca		 mov	 ecx, edx
  0030c	48 89 4c 24 40	 mov	 QWORD PTR RR$5[rsp], rcx

; 329  :             return (q);

  00311	eb 15		 jmp	 SHORT $LN170@Rem_X_1W
$LN169@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00313	4c 8d 4c 24 40	 lea	 r9, QWORD PTR RR$5[rsp]
  00318	4c 8b c6	 mov	 r8, rsi
  0031b	49 8b d2	 mov	 rdx, r10
  0031e	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00323	48 8b 4c 24 40	 mov	 rcx, QWORD PTR RR$5[rsp]
$LN170@Rem_X_1W:

; 415  :             r = _DIVREM_SINGLE_UNIT(r, up[-7], v, &dummy_q);

  00328	4c 8b 57 c8	 mov	 r10, QWORD PTR [rdi-56]

; 326  :         if (v_hi == 0)

  0032c	45 85 f6	 test	 r14d, r14d
  0032f	75 4b		 jne	 SHORT $LN193@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00331	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00333	48 8b c1	 mov	 rax, rcx
  00336	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0033a	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0033d	8b c9		 mov	 ecx, ecx
  0033f	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00341	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00343	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00347	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0034a	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0034d	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00350	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00354	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00356	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00358	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0035c	48 0b c1	 or	 rax, rcx
  0035f	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00362	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00365	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00367	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00369	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0036d	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00370	48 f7 f3	 div	 rbx
  00373	8b ca		 mov	 ecx, edx
  00375	48 89 4c 24 48	 mov	 QWORD PTR RR$6[rsp], rcx

; 329  :             return (q);

  0037a	eb 15		 jmp	 SHORT $LN194@Rem_X_1W
$LN193@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0037c	4c 8d 4c 24 48	 lea	 r9, QWORD PTR RR$6[rsp]
  00381	4c 8b c6	 mov	 r8, rsi
  00384	49 8b d2	 mov	 rdx, r10
  00387	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  0038c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR RR$6[rsp]
$LN194@Rem_X_1W:

; 416  :             r = _DIVREM_SINGLE_UNIT(r, up[-8], v, &dummy_q);

  00391	4c 8b 57 c0	 mov	 r10, QWORD PTR [rdi-64]

; 326  :         if (v_hi == 0)

  00395	45 85 f6	 test	 r14d, r14d
  00398	75 4b		 jne	 SHORT $LN217@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  0039a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0039c	48 8b c1	 mov	 rax, rcx
  0039f	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  003a3	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003a6	8b c9		 mov	 ecx, ecx
  003a8	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  003aa	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003ac	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  003b0	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  003b3	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  003b6	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  003b9	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003bd	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  003bf	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003c1	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  003c5	48 0b c1	 or	 rax, rcx
  003c8	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  003cb	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003ce	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  003d0	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003d2	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  003d6	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  003d9	48 f7 f3	 div	 rbx
  003dc	8b ca		 mov	 ecx, edx
  003de	48 89 4c 24 50	 mov	 QWORD PTR RR$7[rsp], rcx

; 329  :             return (q);

  003e3	eb 15		 jmp	 SHORT $LN218@Rem_X_1W
$LN217@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  003e5	4c 8d 4c 24 50	 lea	 r9, QWORD PTR RR$7[rsp]
  003ea	4c 8b c6	 mov	 r8, rsi
  003ed	49 8b d2	 mov	 rdx, r10
  003f0	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  003f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR RR$7[rsp]
$LN218@Rem_X_1W:

; 417  :             r = _DIVREM_SINGLE_UNIT(r, up[-9], v, &dummy_q);

  003fa	4c 8b 57 b8	 mov	 r10, QWORD PTR [rdi-72]

; 326  :         if (v_hi == 0)

  003fe	45 85 f6	 test	 r14d, r14d
  00401	75 4b		 jne	 SHORT $LN241@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00403	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00405	48 8b c1	 mov	 rax, rcx
  00408	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0040c	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0040f	8b c9		 mov	 ecx, ecx
  00411	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00413	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00415	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00419	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0041c	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0041f	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00422	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00426	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00428	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0042a	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0042e	48 0b c1	 or	 rax, rcx
  00431	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00434	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00437	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00439	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0043b	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0043f	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00442	48 f7 f3	 div	 rbx
  00445	8b ca		 mov	 ecx, edx
  00447	48 89 4c 24 58	 mov	 QWORD PTR RR$8[rsp], rcx

; 329  :             return (q);

  0044c	eb 15		 jmp	 SHORT $LN242@Rem_X_1W
$LN241@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0044e	4c 8d 4c 24 58	 lea	 r9, QWORD PTR RR$8[rsp]
  00453	4c 8b c6	 mov	 r8, rsi
  00456	49 8b d2	 mov	 rdx, r10
  00459	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  0045e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR RR$8[rsp]
$LN242@Rem_X_1W:

; 418  :             r = _DIVREM_SINGLE_UNIT(r, up[-10], v, &dummy_q);

  00463	4c 8b 57 b0	 mov	 r10, QWORD PTR [rdi-80]

; 326  :         if (v_hi == 0)

  00467	45 85 f6	 test	 r14d, r14d
  0046a	75 4b		 jne	 SHORT $LN265@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  0046c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0046e	48 8b c1	 mov	 rax, rcx
  00471	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00475	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00478	8b c9		 mov	 ecx, ecx
  0047a	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0047c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0047e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00482	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00485	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00488	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0048b	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0048f	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00491	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00493	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00497	48 0b c1	 or	 rax, rcx
  0049a	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0049d	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004a0	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  004a2	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004a4	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  004a8	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  004ab	48 f7 f3	 div	 rbx
  004ae	8b ca		 mov	 ecx, edx
  004b0	48 89 4c 24 60	 mov	 QWORD PTR RR$9[rsp], rcx

; 329  :             return (q);

  004b5	eb 15		 jmp	 SHORT $LN266@Rem_X_1W
$LN265@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  004b7	4c 8d 4c 24 60	 lea	 r9, QWORD PTR RR$9[rsp]
  004bc	4c 8b c6	 mov	 r8, rsi
  004bf	49 8b d2	 mov	 rdx, r10
  004c2	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  004c7	48 8b 4c 24 60	 mov	 rcx, QWORD PTR RR$9[rsp]
$LN266@Rem_X_1W:

; 419  :             r = _DIVREM_SINGLE_UNIT(r, up[-11], v, &dummy_q);

  004cc	4c 8b 57 a8	 mov	 r10, QWORD PTR [rdi-88]

; 326  :         if (v_hi == 0)

  004d0	45 85 f6	 test	 r14d, r14d
  004d3	75 4b		 jne	 SHORT $LN289@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  004d5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  004d7	48 8b c1	 mov	 rax, rcx
  004da	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  004de	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004e1	8b c9		 mov	 ecx, ecx
  004e3	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  004e5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004e7	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  004eb	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  004ee	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  004f1	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  004f4	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004f8	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  004fa	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004fc	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00500	48 0b c1	 or	 rax, rcx
  00503	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00506	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00509	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0050b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0050d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00511	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00514	48 f7 f3	 div	 rbx
  00517	8b ca		 mov	 ecx, edx
  00519	48 89 4c 24 68	 mov	 QWORD PTR RR$10[rsp], rcx

; 329  :             return (q);

  0051e	eb 15		 jmp	 SHORT $LN290@Rem_X_1W
$LN289@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00520	4c 8d 4c 24 68	 lea	 r9, QWORD PTR RR$10[rsp]
  00525	4c 8b c6	 mov	 r8, rsi
  00528	49 8b d2	 mov	 rdx, r10
  0052b	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00530	48 8b 4c 24 68	 mov	 rcx, QWORD PTR RR$10[rsp]
$LN290@Rem_X_1W:

; 420  :             r = _DIVREM_SINGLE_UNIT(r, up[-12], v, &dummy_q);

  00535	4c 8b 57 a0	 mov	 r10, QWORD PTR [rdi-96]

; 326  :         if (v_hi == 0)

  00539	45 85 f6	 test	 r14d, r14d
  0053c	75 4b		 jne	 SHORT $LN313@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  0053e	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00540	48 8b c1	 mov	 rax, rcx
  00543	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00547	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0054a	8b c9		 mov	 ecx, ecx
  0054c	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0054e	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00550	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00554	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00557	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0055a	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0055d	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00561	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00563	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00565	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00569	48 0b c1	 or	 rax, rcx
  0056c	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0056f	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00572	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00574	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00576	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0057a	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0057d	48 f7 f3	 div	 rbx
  00580	8b ca		 mov	 ecx, edx
  00582	48 89 4c 24 70	 mov	 QWORD PTR RR$11[rsp], rcx

; 329  :             return (q);

  00587	eb 15		 jmp	 SHORT $LN314@Rem_X_1W
$LN313@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00589	4c 8d 4c 24 70	 lea	 r9, QWORD PTR RR$11[rsp]
  0058e	4c 8b c6	 mov	 r8, rsi
  00591	49 8b d2	 mov	 rdx, r10
  00594	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00599	48 8b 4c 24 70	 mov	 rcx, QWORD PTR RR$11[rsp]
$LN314@Rem_X_1W:

; 421  :             r = _DIVREM_SINGLE_UNIT(r, up[-13], v, &dummy_q);

  0059e	4c 8b 57 98	 mov	 r10, QWORD PTR [rdi-104]

; 326  :         if (v_hi == 0)

  005a2	45 85 f6	 test	 r14d, r14d
  005a5	75 4b		 jne	 SHORT $LN337@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  005a7	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  005a9	48 8b c1	 mov	 rax, rcx
  005ac	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  005b0	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005b3	8b c9		 mov	 ecx, ecx
  005b5	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  005b7	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005b9	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  005bd	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  005c0	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  005c3	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  005c6	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005ca	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  005cc	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005ce	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  005d2	48 0b c1	 or	 rax, rcx
  005d5	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  005d8	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005db	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  005dd	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005df	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  005e3	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  005e6	48 f7 f3	 div	 rbx
  005e9	8b ca		 mov	 ecx, edx
  005eb	48 89 4c 24 78	 mov	 QWORD PTR RR$12[rsp], rcx

; 329  :             return (q);

  005f0	eb 15		 jmp	 SHORT $LN338@Rem_X_1W
$LN337@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  005f2	4c 8d 4c 24 78	 lea	 r9, QWORD PTR RR$12[rsp]
  005f7	4c 8b c6	 mov	 r8, rsi
  005fa	49 8b d2	 mov	 rdx, r10
  005fd	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00602	48 8b 4c 24 78	 mov	 rcx, QWORD PTR RR$12[rsp]
$LN338@Rem_X_1W:

; 422  :             r = _DIVREM_SINGLE_UNIT(r, up[-14], v, &dummy_q);

  00607	4c 8b 57 90	 mov	 r10, QWORD PTR [rdi-112]

; 326  :         if (v_hi == 0)

  0060b	45 85 f6	 test	 r14d, r14d
  0060e	75 4a		 jne	 SHORT $LN361@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00610	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00612	48 8b c1	 mov	 rax, rcx
  00615	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00619	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0061c	8b c9		 mov	 ecx, ecx
  0061e	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00620	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00622	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00626	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00629	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0062c	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0062f	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00633	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00635	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00637	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0063b	48 0b c1	 or	 rax, rcx
  0063e	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00641	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00644	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00646	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00648	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0064c	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0064f	48 f7 f3	 div	 rbx
  00652	8b ca		 mov	 ecx, edx
  00654	48 89 4d 80	 mov	 QWORD PTR RR$13[rbp-256], rcx

; 329  :             return (q);

  00658	eb 13		 jmp	 SHORT $LN362@Rem_X_1W
$LN361@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0065a	4c 8d 4d 80	 lea	 r9, QWORD PTR RR$13[rbp-256]
  0065e	4c 8b c6	 mov	 r8, rsi
  00661	49 8b d2	 mov	 rdx, r10
  00664	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00669	48 8b 4d 80	 mov	 rcx, QWORD PTR RR$13[rbp-256]
$LN362@Rem_X_1W:

; 423  :             r = _DIVREM_SINGLE_UNIT(r, up[-15], v, &dummy_q);

  0066d	4c 8b 57 88	 mov	 r10, QWORD PTR [rdi-120]

; 326  :         if (v_hi == 0)

  00671	45 85 f6	 test	 r14d, r14d
  00674	75 4a		 jne	 SHORT $LN385@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00676	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00678	48 8b c1	 mov	 rax, rcx
  0067b	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0067f	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00682	8b c9		 mov	 ecx, ecx
  00684	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00686	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00688	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0068c	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0068f	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00692	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00695	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00699	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0069b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0069d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  006a1	48 0b c1	 or	 rax, rcx
  006a4	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  006a7	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006aa	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  006ac	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006ae	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  006b2	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  006b5	48 f7 f3	 div	 rbx
  006b8	8b ca		 mov	 ecx, edx
  006ba	48 89 4d 88	 mov	 QWORD PTR RR$14[rbp-256], rcx

; 329  :             return (q);

  006be	eb 13		 jmp	 SHORT $LN386@Rem_X_1W
$LN385@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  006c0	4c 8d 4d 88	 lea	 r9, QWORD PTR RR$14[rbp-256]
  006c4	4c 8b c6	 mov	 r8, rsi
  006c7	49 8b d2	 mov	 rdx, r10
  006ca	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  006cf	48 8b 4d 88	 mov	 rcx, QWORD PTR RR$14[rbp-256]
$LN386@Rem_X_1W:

; 424  :             r = _DIVREM_SINGLE_UNIT(r, up[-16], v, &dummy_q);

  006d3	4c 8b 57 80	 mov	 r10, QWORD PTR [rdi-128]

; 326  :         if (v_hi == 0)

  006d7	45 85 f6	 test	 r14d, r14d
  006da	75 4a		 jne	 SHORT $LN409@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  006dc	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  006de	48 8b c1	 mov	 rax, rcx
  006e1	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  006e5	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006e8	8b c9		 mov	 ecx, ecx
  006ea	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  006ec	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006ee	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  006f2	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  006f5	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  006f8	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  006fb	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006ff	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00701	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00703	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00707	48 0b c1	 or	 rax, rcx
  0070a	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0070d	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00710	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00712	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00714	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00718	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0071b	48 f7 f3	 div	 rbx
  0071e	8b ca		 mov	 ecx, edx
  00720	48 89 4d 90	 mov	 QWORD PTR RR$15[rbp-256], rcx

; 329  :             return (q);

  00724	eb 13		 jmp	 SHORT $LN410@Rem_X_1W
$LN409@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00726	4c 8d 4d 90	 lea	 r9, QWORD PTR RR$15[rbp-256]
  0072a	4c 8b c6	 mov	 r8, rsi
  0072d	49 8b d2	 mov	 rdx, r10
  00730	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00735	48 8b 4d 90	 mov	 rcx, QWORD PTR RR$15[rbp-256]
$LN410@Rem_X_1W:

; 425  :             r = _DIVREM_SINGLE_UNIT(r, up[-17], v, &dummy_q);

  00739	4c 8b 97 78 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-136]

; 326  :         if (v_hi == 0)

  00740	45 85 f6	 test	 r14d, r14d
  00743	75 4a		 jne	 SHORT $LN433@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00745	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00747	48 8b c1	 mov	 rax, rcx
  0074a	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0074e	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00751	8b c9		 mov	 ecx, ecx
  00753	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00755	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00757	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0075b	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0075e	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00761	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00764	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00768	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0076a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0076c	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00770	48 0b c1	 or	 rax, rcx
  00773	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00776	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00779	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0077b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0077d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00781	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00784	48 f7 f3	 div	 rbx
  00787	8b ca		 mov	 ecx, edx
  00789	48 89 4d 98	 mov	 QWORD PTR RR$16[rbp-256], rcx

; 329  :             return (q);

  0078d	eb 13		 jmp	 SHORT $LN434@Rem_X_1W
$LN433@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0078f	4c 8d 4d 98	 lea	 r9, QWORD PTR RR$16[rbp-256]
  00793	4c 8b c6	 mov	 r8, rsi
  00796	49 8b d2	 mov	 rdx, r10
  00799	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  0079e	48 8b 4d 98	 mov	 rcx, QWORD PTR RR$16[rbp-256]
$LN434@Rem_X_1W:

; 426  :             r = _DIVREM_SINGLE_UNIT(r, up[-18], v, &dummy_q);

  007a2	4c 8b 97 70 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-144]

; 326  :         if (v_hi == 0)

  007a9	45 85 f6	 test	 r14d, r14d
  007ac	75 4a		 jne	 SHORT $LN457@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  007ae	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  007b0	48 8b c1	 mov	 rax, rcx
  007b3	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  007b7	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007ba	8b c9		 mov	 ecx, ecx
  007bc	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  007be	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007c0	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  007c4	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  007c7	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  007ca	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  007cd	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007d1	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  007d3	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007d5	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  007d9	48 0b c1	 or	 rax, rcx
  007dc	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  007df	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007e2	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  007e4	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007e6	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  007ea	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  007ed	48 f7 f3	 div	 rbx
  007f0	8b ca		 mov	 ecx, edx
  007f2	48 89 4d a0	 mov	 QWORD PTR RR$17[rbp-256], rcx

; 329  :             return (q);

  007f6	eb 13		 jmp	 SHORT $LN458@Rem_X_1W
$LN457@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  007f8	4c 8d 4d a0	 lea	 r9, QWORD PTR RR$17[rbp-256]
  007fc	4c 8b c6	 mov	 r8, rsi
  007ff	49 8b d2	 mov	 rdx, r10
  00802	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00807	48 8b 4d a0	 mov	 rcx, QWORD PTR RR$17[rbp-256]
$LN458@Rem_X_1W:

; 427  :             r = _DIVREM_SINGLE_UNIT(r, up[-19], v, &dummy_q);

  0080b	4c 8b 97 68 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-152]

; 326  :         if (v_hi == 0)

  00812	45 85 f6	 test	 r14d, r14d
  00815	75 4a		 jne	 SHORT $LN481@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00817	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00819	48 8b c1	 mov	 rax, rcx
  0081c	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00820	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00823	8b c9		 mov	 ecx, ecx
  00825	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00827	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00829	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0082d	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00830	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00833	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00836	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0083a	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0083c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0083e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00842	48 0b c1	 or	 rax, rcx
  00845	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00848	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0084b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0084d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0084f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00853	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00856	48 f7 f3	 div	 rbx
  00859	8b ca		 mov	 ecx, edx
  0085b	48 89 4d a8	 mov	 QWORD PTR RR$18[rbp-256], rcx

; 329  :             return (q);

  0085f	eb 13		 jmp	 SHORT $LN482@Rem_X_1W
$LN481@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00861	4c 8d 4d a8	 lea	 r9, QWORD PTR RR$18[rbp-256]
  00865	4c 8b c6	 mov	 r8, rsi
  00868	49 8b d2	 mov	 rdx, r10
  0086b	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00870	48 8b 4d a8	 mov	 rcx, QWORD PTR RR$18[rbp-256]
$LN482@Rem_X_1W:

; 428  :             r = _DIVREM_SINGLE_UNIT(r, up[-20], v, &dummy_q);

  00874	4c 8b 97 60 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-160]

; 326  :         if (v_hi == 0)

  0087b	45 85 f6	 test	 r14d, r14d
  0087e	75 4a		 jne	 SHORT $LN505@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00880	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00882	48 8b c1	 mov	 rax, rcx
  00885	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00889	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0088c	8b c9		 mov	 ecx, ecx
  0088e	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00890	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00892	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00896	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00899	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0089c	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0089f	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008a3	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  008a5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008a7	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  008ab	48 0b c1	 or	 rax, rcx
  008ae	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  008b1	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008b4	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  008b6	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008b8	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  008bc	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  008bf	48 f7 f3	 div	 rbx
  008c2	8b ca		 mov	 ecx, edx
  008c4	48 89 4d b0	 mov	 QWORD PTR RR$19[rbp-256], rcx

; 329  :             return (q);

  008c8	eb 13		 jmp	 SHORT $LN506@Rem_X_1W
$LN505@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  008ca	4c 8d 4d b0	 lea	 r9, QWORD PTR RR$19[rbp-256]
  008ce	4c 8b c6	 mov	 r8, rsi
  008d1	49 8b d2	 mov	 rdx, r10
  008d4	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  008d9	48 8b 4d b0	 mov	 rcx, QWORD PTR RR$19[rbp-256]
$LN506@Rem_X_1W:

; 429  :             r = _DIVREM_SINGLE_UNIT(r, up[-21], v, &dummy_q);

  008dd	4c 8b 97 58 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-168]

; 326  :         if (v_hi == 0)

  008e4	45 85 f6	 test	 r14d, r14d
  008e7	75 4a		 jne	 SHORT $LN529@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  008e9	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  008eb	48 8b c1	 mov	 rax, rcx
  008ee	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  008f2	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008f5	8b c9		 mov	 ecx, ecx
  008f7	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  008f9	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008fb	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  008ff	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00902	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00905	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00908	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0090c	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0090e	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00910	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00914	48 0b c1	 or	 rax, rcx
  00917	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  0091a	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0091d	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0091f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00921	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00925	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00928	48 f7 f3	 div	 rbx
  0092b	8b ca		 mov	 ecx, edx
  0092d	48 89 4d b8	 mov	 QWORD PTR RR$20[rbp-256], rcx

; 329  :             return (q);

  00931	eb 13		 jmp	 SHORT $LN530@Rem_X_1W
$LN529@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00933	4c 8d 4d b8	 lea	 r9, QWORD PTR RR$20[rbp-256]
  00937	4c 8b c6	 mov	 r8, rsi
  0093a	49 8b d2	 mov	 rdx, r10
  0093d	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00942	48 8b 4d b8	 mov	 rcx, QWORD PTR RR$20[rbp-256]
$LN530@Rem_X_1W:

; 430  :             r = _DIVREM_SINGLE_UNIT(r, up[-22], v, &dummy_q);

  00946	4c 8b 97 50 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-176]

; 326  :         if (v_hi == 0)

  0094d	45 85 f6	 test	 r14d, r14d
  00950	75 4a		 jne	 SHORT $LN553@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00952	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00954	48 8b c1	 mov	 rax, rcx
  00957	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0095b	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0095e	8b c9		 mov	 ecx, ecx
  00960	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00962	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00964	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00968	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0096b	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0096e	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00971	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00975	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00977	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00979	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0097d	48 0b c1	 or	 rax, rcx
  00980	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00983	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00986	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00988	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0098a	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0098e	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00991	48 f7 f3	 div	 rbx
  00994	8b ca		 mov	 ecx, edx
  00996	48 89 4d c0	 mov	 QWORD PTR RR$21[rbp-256], rcx

; 329  :             return (q);

  0099a	eb 13		 jmp	 SHORT $LN554@Rem_X_1W
$LN553@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0099c	4c 8d 4d c0	 lea	 r9, QWORD PTR RR$21[rbp-256]
  009a0	4c 8b c6	 mov	 r8, rsi
  009a3	49 8b d2	 mov	 rdx, r10
  009a6	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  009ab	48 8b 4d c0	 mov	 rcx, QWORD PTR RR$21[rbp-256]
$LN554@Rem_X_1W:

; 431  :             r = _DIVREM_SINGLE_UNIT(r, up[-23], v, &dummy_q);

  009af	4c 8b 97 48 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-184]

; 326  :         if (v_hi == 0)

  009b6	45 85 f6	 test	 r14d, r14d
  009b9	75 4a		 jne	 SHORT $LN577@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  009bb	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  009bd	48 8b c1	 mov	 rax, rcx
  009c0	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  009c4	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009c7	8b c9		 mov	 ecx, ecx
  009c9	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  009cb	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009cd	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  009d1	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  009d4	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  009d7	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  009da	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009de	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  009e0	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009e2	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  009e6	48 0b c1	 or	 rax, rcx
  009e9	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  009ec	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009ef	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  009f1	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009f3	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  009f7	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  009fa	48 f7 f3	 div	 rbx
  009fd	8b ca		 mov	 ecx, edx
  009ff	48 89 4d c8	 mov	 QWORD PTR RR$22[rbp-256], rcx

; 329  :             return (q);

  00a03	eb 13		 jmp	 SHORT $LN578@Rem_X_1W
$LN577@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00a05	4c 8d 4d c8	 lea	 r9, QWORD PTR RR$22[rbp-256]
  00a09	4c 8b c6	 mov	 r8, rsi
  00a0c	49 8b d2	 mov	 rdx, r10
  00a0f	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00a14	48 8b 4d c8	 mov	 rcx, QWORD PTR RR$22[rbp-256]
$LN578@Rem_X_1W:

; 432  :             r = _DIVREM_SINGLE_UNIT(r, up[-24], v, &dummy_q);

  00a18	4c 8b 97 40 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-192]

; 326  :         if (v_hi == 0)

  00a1f	45 85 f6	 test	 r14d, r14d
  00a22	75 4a		 jne	 SHORT $LN601@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00a24	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00a26	48 8b c1	 mov	 rax, rcx
  00a29	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00a2d	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a30	8b c9		 mov	 ecx, ecx
  00a32	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00a34	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a36	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00a3a	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00a3d	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00a40	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00a43	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a47	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00a49	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a4b	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00a4f	48 0b c1	 or	 rax, rcx
  00a52	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00a55	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a58	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00a5a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a5c	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00a60	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00a63	48 f7 f3	 div	 rbx
  00a66	8b ca		 mov	 ecx, edx
  00a68	48 89 4d d0	 mov	 QWORD PTR RR$23[rbp-256], rcx

; 329  :             return (q);

  00a6c	eb 13		 jmp	 SHORT $LN602@Rem_X_1W
$LN601@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00a6e	4c 8d 4d d0	 lea	 r9, QWORD PTR RR$23[rbp-256]
  00a72	4c 8b c6	 mov	 r8, rsi
  00a75	49 8b d2	 mov	 rdx, r10
  00a78	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00a7d	48 8b 4d d0	 mov	 rcx, QWORD PTR RR$23[rbp-256]
$LN602@Rem_X_1W:

; 433  :             r = _DIVREM_SINGLE_UNIT(r, up[-25], v, &dummy_q);

  00a81	4c 8b 97 38 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-200]

; 326  :         if (v_hi == 0)

  00a88	45 85 f6	 test	 r14d, r14d
  00a8b	75 4a		 jne	 SHORT $LN625@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00a8d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00a8f	48 8b c1	 mov	 rax, rcx
  00a92	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00a96	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a99	8b c9		 mov	 ecx, ecx
  00a9b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00a9d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a9f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00aa3	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00aa6	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00aa9	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00aac	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ab0	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00ab2	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ab4	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00ab8	48 0b c1	 or	 rax, rcx
  00abb	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00abe	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ac1	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00ac3	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ac5	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00ac9	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00acc	48 f7 f3	 div	 rbx
  00acf	8b ca		 mov	 ecx, edx
  00ad1	48 89 4d d8	 mov	 QWORD PTR RR$24[rbp-256], rcx

; 329  :             return (q);

  00ad5	eb 13		 jmp	 SHORT $LN626@Rem_X_1W
$LN625@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00ad7	4c 8d 4d d8	 lea	 r9, QWORD PTR RR$24[rbp-256]
  00adb	4c 8b c6	 mov	 r8, rsi
  00ade	49 8b d2	 mov	 rdx, r10
  00ae1	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00ae6	48 8b 4d d8	 mov	 rcx, QWORD PTR RR$24[rbp-256]
$LN626@Rem_X_1W:

; 434  :             r = _DIVREM_SINGLE_UNIT(r, up[-26], v, &dummy_q);

  00aea	4c 8b 97 30 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-208]

; 326  :         if (v_hi == 0)

  00af1	45 85 f6	 test	 r14d, r14d
  00af4	75 4a		 jne	 SHORT $LN649@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00af6	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00af8	48 8b c1	 mov	 rax, rcx
  00afb	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00aff	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b02	8b c9		 mov	 ecx, ecx
  00b04	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00b06	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b08	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00b0c	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00b0f	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00b12	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00b15	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b19	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00b1b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b1d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00b21	48 0b c1	 or	 rax, rcx
  00b24	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00b27	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b2a	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00b2c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b2e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00b32	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00b35	48 f7 f3	 div	 rbx
  00b38	8b ca		 mov	 ecx, edx
  00b3a	48 89 4d e0	 mov	 QWORD PTR RR$25[rbp-256], rcx

; 329  :             return (q);

  00b3e	eb 13		 jmp	 SHORT $LN650@Rem_X_1W
$LN649@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00b40	4c 8d 4d e0	 lea	 r9, QWORD PTR RR$25[rbp-256]
  00b44	4c 8b c6	 mov	 r8, rsi
  00b47	49 8b d2	 mov	 rdx, r10
  00b4a	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00b4f	48 8b 4d e0	 mov	 rcx, QWORD PTR RR$25[rbp-256]
$LN650@Rem_X_1W:

; 435  :             r = _DIVREM_SINGLE_UNIT(r, up[-27], v, &dummy_q);

  00b53	4c 8b 97 28 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-216]

; 326  :         if (v_hi == 0)

  00b5a	45 85 f6	 test	 r14d, r14d
  00b5d	75 4a		 jne	 SHORT $LN673@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00b5f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00b61	48 8b c1	 mov	 rax, rcx
  00b64	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00b68	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b6b	8b c9		 mov	 ecx, ecx
  00b6d	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00b6f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b71	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00b75	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00b78	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00b7b	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00b7e	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b82	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00b84	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b86	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00b8a	48 0b c1	 or	 rax, rcx
  00b8d	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00b90	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b93	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00b95	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b97	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00b9b	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00b9e	48 f7 f3	 div	 rbx
  00ba1	8b ca		 mov	 ecx, edx
  00ba3	48 89 4d e8	 mov	 QWORD PTR RR$26[rbp-256], rcx

; 329  :             return (q);

  00ba7	eb 13		 jmp	 SHORT $LN674@Rem_X_1W
$LN673@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00ba9	4c 8d 4d e8	 lea	 r9, QWORD PTR RR$26[rbp-256]
  00bad	4c 8b c6	 mov	 r8, rsi
  00bb0	49 8b d2	 mov	 rdx, r10
  00bb3	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00bb8	48 8b 4d e8	 mov	 rcx, QWORD PTR RR$26[rbp-256]
$LN674@Rem_X_1W:

; 436  :             r = _DIVREM_SINGLE_UNIT(r, up[-28], v, &dummy_q);

  00bbc	4c 8b 97 20 ff
	ff ff		 mov	 r10, QWORD PTR [rdi-224]

; 326  :         if (v_hi == 0)

  00bc3	45 85 f6	 test	 r14d, r14d
  00bc6	75 4a		 jne	 SHORT $LN697@Rem_X_1W

; 56   :             _r = (_UINT32_T)(t % v);

  00bc8	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00bca	48 8b c1	 mov	 rax, rcx
  00bcd	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00bd1	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bd4	8b c9		 mov	 ecx, ecx
  00bd6	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00bd8	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bda	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00bde	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00be1	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00be4	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00be7	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00beb	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00bed	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bef	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00bf3	48 0b c1	 or	 rax, rcx
  00bf6	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 64   :             _r = (_UINT32_T)(t % v);

  00bf9	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bfc	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00bfe	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c00	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00c04	48 0b c1	 or	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00c07	48 f7 f3	 div	 rbx
  00c0a	8b ca		 mov	 ecx, edx
  00c0c	48 89 4d f0	 mov	 QWORD PTR RR$27[rbp-256], rcx

; 329  :             return (q);

  00c10	eb 13		 jmp	 SHORT $LN698@Rem_X_1W
$LN697@Rem_X_1W:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00c12	4c 8d 4d f0	 lea	 r9, QWORD PTR RR$27[rbp-256]
  00c16	4c 8b c6	 mov	 r8, rsi
  00c19	49 8b d2	 mov	 rdx, r10
  00c1c	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00c21	48 8b 4d f0	 mov	 rcx, QWORD PTR RR$27[rbp-256]
$LN698@Rem_X_1W:

; 437  :             r = _DIVREM_SINGLE_UNIT(r, up[-29], v, &dummy_q);

  00c25	48 8b 97 18 ff
	ff ff		 mov	 rdx, QWORD PTR [rdi-232]
  00c2c	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00c30	4c 8b c6	 mov	 r8, rsi
  00c33	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 438  :             r = _DIVREM_SINGLE_UNIT(r, up[-30], v, &dummy_q);

  00c38	48 8b 97 10 ff
	ff ff		 mov	 rdx, QWORD PTR [rdi-240]
  00c3f	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00c43	4c 8b c6	 mov	 r8, rsi
  00c46	48 8b c8	 mov	 rcx, rax
  00c49	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 439  :             r = _DIVREM_SINGLE_UNIT(r, up[-31], v, &dummy_q);

  00c4e	48 8b 97 08 ff
	ff ff		 mov	 rdx, QWORD PTR [rdi-248]
  00c55	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00c59	4c 8b c6	 mov	 r8, rsi
  00c5c	48 8b c8	 mov	 rcx, rax
  00c5f	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT
  00c64	48 8b c8	 mov	 rcx, rax

; 440  :             up -= 32;

  00c67	48 81 ef 00 01
	00 00		 sub	 rdi, 256		; 00000100H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00c6e	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00c73	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 406  :         while (count != 0)

  00c7b	49 83 ef 01	 sub	 r15, 1
  00c7f	0f 85 cb f3 ff
	ff		 jne	 $LL2@Rem_X_1W
  00c85	4c 8b b4 24 08
	01 00 00	 mov	 r14, QWORD PTR [rsp+264]
  00c8d	48 8b 9c 24 18
	01 00 00	 mov	 rbx, QWORD PTR [rsp+280]
$LN3@Rem_X_1W:

; 441  :             --count;
; 442  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 443  :             if (sizeof(r) == sizeof(_UINT64_T))
; 444  :                 AddToDIV64Counter(32);
; 445  :             else
; 446  :                 AddToDIV32Counter(32);
; 447  : #endif
; 448  :         }
; 449  : 
; 450  :         if (u_count & 0x10)

  00c95	4c 8b bc 24 00
	01 00 00	 mov	 r15, QWORD PTR [rsp+256]
  00c9d	41 f6 c4 10	 test	 r12b, 16
  00ca1	0f 84 40 01 00
	00		 je	 $LN8@Rem_X_1W

; 451  :         {
; 452  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &dummy_q);

  00ca7	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00caa	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00cae	4c 8b c6	 mov	 r8, rsi
  00cb1	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 453  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &dummy_q);

  00cb6	48 8b 57 f8	 mov	 rdx, QWORD PTR [rdi-8]
  00cba	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00cbe	4c 8b c6	 mov	 r8, rsi
  00cc1	48 8b c8	 mov	 rcx, rax
  00cc4	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 454  :             r = _DIVREM_SINGLE_UNIT(r, up[-2], v, &dummy_q);

  00cc9	48 8b 57 f0	 mov	 rdx, QWORD PTR [rdi-16]
  00ccd	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00cd1	4c 8b c6	 mov	 r8, rsi
  00cd4	48 8b c8	 mov	 rcx, rax
  00cd7	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 455  :             r = _DIVREM_SINGLE_UNIT(r, up[-3], v, &dummy_q);

  00cdc	48 8b 57 e8	 mov	 rdx, QWORD PTR [rdi-24]
  00ce0	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00ce4	4c 8b c6	 mov	 r8, rsi
  00ce7	48 8b c8	 mov	 rcx, rax
  00cea	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 456  :             r = _DIVREM_SINGLE_UNIT(r, up[-4], v, &dummy_q);

  00cef	48 8b 57 e0	 mov	 rdx, QWORD PTR [rdi-32]
  00cf3	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00cf7	4c 8b c6	 mov	 r8, rsi
  00cfa	48 8b c8	 mov	 rcx, rax
  00cfd	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 457  :             r = _DIVREM_SINGLE_UNIT(r, up[-5], v, &dummy_q);

  00d02	48 8b 57 d8	 mov	 rdx, QWORD PTR [rdi-40]
  00d06	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00d0a	4c 8b c6	 mov	 r8, rsi
  00d0d	48 8b c8	 mov	 rcx, rax
  00d10	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 458  :             r = _DIVREM_SINGLE_UNIT(r, up[-6], v, &dummy_q);

  00d15	48 8b 57 d0	 mov	 rdx, QWORD PTR [rdi-48]
  00d19	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00d1d	4c 8b c6	 mov	 r8, rsi
  00d20	48 8b c8	 mov	 rcx, rax
  00d23	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 459  :             r = _DIVREM_SINGLE_UNIT(r, up[-7], v, &dummy_q);

  00d28	48 8b 57 c8	 mov	 rdx, QWORD PTR [rdi-56]
  00d2c	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00d30	4c 8b c6	 mov	 r8, rsi
  00d33	48 8b c8	 mov	 rcx, rax
  00d36	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 460  :             r = _DIVREM_SINGLE_UNIT(r, up[-8], v, &dummy_q);

  00d3b	48 8b 57 c0	 mov	 rdx, QWORD PTR [rdi-64]
  00d3f	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00d43	4c 8b c6	 mov	 r8, rsi
  00d46	48 8b c8	 mov	 rcx, rax
  00d49	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 461  :             r = _DIVREM_SINGLE_UNIT(r, up[-9], v, &dummy_q);

  00d4e	48 8b 57 b8	 mov	 rdx, QWORD PTR [rdi-72]
  00d52	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00d56	4c 8b c6	 mov	 r8, rsi
  00d59	48 8b c8	 mov	 rcx, rax
  00d5c	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 462  :             r = _DIVREM_SINGLE_UNIT(r, up[-10], v, &dummy_q);

  00d61	48 8b 57 b0	 mov	 rdx, QWORD PTR [rdi-80]
  00d65	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00d69	4c 8b c6	 mov	 r8, rsi
  00d6c	48 8b c8	 mov	 rcx, rax
  00d6f	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 463  :             r = _DIVREM_SINGLE_UNIT(r, up[-11], v, &dummy_q);

  00d74	48 8b 57 a8	 mov	 rdx, QWORD PTR [rdi-88]
  00d78	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00d7c	4c 8b c6	 mov	 r8, rsi
  00d7f	48 8b c8	 mov	 rcx, rax
  00d82	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 464  :             r = _DIVREM_SINGLE_UNIT(r, up[-12], v, &dummy_q);

  00d87	48 8b 57 a0	 mov	 rdx, QWORD PTR [rdi-96]
  00d8b	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00d8f	4c 8b c6	 mov	 r8, rsi
  00d92	48 8b c8	 mov	 rcx, rax
  00d95	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 465  :             r = _DIVREM_SINGLE_UNIT(r, up[-13], v, &dummy_q);

  00d9a	48 8b 57 98	 mov	 rdx, QWORD PTR [rdi-104]
  00d9e	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00da2	4c 8b c6	 mov	 r8, rsi
  00da5	48 8b c8	 mov	 rcx, rax
  00da8	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 466  :             r = _DIVREM_SINGLE_UNIT(r, up[-14], v, &dummy_q);

  00dad	48 8b 57 90	 mov	 rdx, QWORD PTR [rdi-112]
  00db1	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00db5	4c 8b c6	 mov	 r8, rsi
  00db8	48 8b c8	 mov	 rcx, rax
  00dbb	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 467  :             r = _DIVREM_SINGLE_UNIT(r, up[-15], v, &dummy_q);

  00dc0	48 8b 57 88	 mov	 rdx, QWORD PTR [rdi-120]
  00dc4	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00dc8	4c 8b c6	 mov	 r8, rsi
  00dcb	48 8b c8	 mov	 rcx, rax
  00dce	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT
  00dd3	48 8b c8	 mov	 rcx, rax

; 468  :             up -= 16;

  00dd6	48 83 c7 80	 add	 rdi, -128		; ffffffffffffff80H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00dda	b8 10 00 00 00	 mov	 eax, 16
  00ddf	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
$LN8@Rem_X_1W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 477  :         if (u_count & 0x8)

  00de7	41 f6 c4 08	 test	 r12b, 8
  00deb	0f 84 a8 00 00
	00		 je	 $LN11@Rem_X_1W

; 478  :         {
; 479  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &dummy_q);

  00df1	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00df4	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00df8	4c 8b c6	 mov	 r8, rsi
  00dfb	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 480  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &dummy_q);

  00e00	48 8b 57 f8	 mov	 rdx, QWORD PTR [rdi-8]
  00e04	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00e08	4c 8b c6	 mov	 r8, rsi
  00e0b	48 8b c8	 mov	 rcx, rax
  00e0e	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 481  :             r = _DIVREM_SINGLE_UNIT(r, up[-2], v, &dummy_q);

  00e13	48 8b 57 f0	 mov	 rdx, QWORD PTR [rdi-16]
  00e17	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00e1b	4c 8b c6	 mov	 r8, rsi
  00e1e	48 8b c8	 mov	 rcx, rax
  00e21	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 482  :             r = _DIVREM_SINGLE_UNIT(r, up[-3], v, &dummy_q);

  00e26	48 8b 57 e8	 mov	 rdx, QWORD PTR [rdi-24]
  00e2a	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00e2e	4c 8b c6	 mov	 r8, rsi
  00e31	48 8b c8	 mov	 rcx, rax
  00e34	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 483  :             r = _DIVREM_SINGLE_UNIT(r, up[-4], v, &dummy_q);

  00e39	48 8b 57 e0	 mov	 rdx, QWORD PTR [rdi-32]
  00e3d	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00e41	4c 8b c6	 mov	 r8, rsi
  00e44	48 8b c8	 mov	 rcx, rax
  00e47	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 484  :             r = _DIVREM_SINGLE_UNIT(r, up[-5], v, &dummy_q);

  00e4c	48 8b 57 d8	 mov	 rdx, QWORD PTR [rdi-40]
  00e50	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00e54	4c 8b c6	 mov	 r8, rsi
  00e57	48 8b c8	 mov	 rcx, rax
  00e5a	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 485  :             r = _DIVREM_SINGLE_UNIT(r, up[-6], v, &dummy_q);

  00e5f	48 8b 57 d0	 mov	 rdx, QWORD PTR [rdi-48]
  00e63	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00e67	4c 8b c6	 mov	 r8, rsi
  00e6a	48 8b c8	 mov	 rcx, rax
  00e6d	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 486  :             r = _DIVREM_SINGLE_UNIT(r, up[-7], v, &dummy_q);

  00e72	48 8b 57 c8	 mov	 rdx, QWORD PTR [rdi-56]
  00e76	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00e7a	4c 8b c6	 mov	 r8, rsi
  00e7d	48 8b c8	 mov	 rcx, rax
  00e80	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT
  00e85	48 8b c8	 mov	 rcx, rax

; 487  :             up -= 8;

  00e88	48 83 ef 40	 sub	 rdi, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00e8c	b8 08 00 00 00	 mov	 eax, 8
  00e91	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
$LN11@Rem_X_1W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 496  :         if (u_count & 0x4)

  00e99	41 f6 c4 04	 test	 r12b, 4
  00e9d	74 5c		 je	 SHORT $LN14@Rem_X_1W

; 497  :         {
; 498  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &dummy_q);

  00e9f	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00ea2	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00ea6	4c 8b c6	 mov	 r8, rsi
  00ea9	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 499  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &dummy_q);

  00eae	48 8b 57 f8	 mov	 rdx, QWORD PTR [rdi-8]
  00eb2	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00eb6	4c 8b c6	 mov	 r8, rsi
  00eb9	48 8b c8	 mov	 rcx, rax
  00ebc	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 500  :             r = _DIVREM_SINGLE_UNIT(r, up[-2], v, &dummy_q);

  00ec1	48 8b 57 f0	 mov	 rdx, QWORD PTR [rdi-16]
  00ec5	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00ec9	4c 8b c6	 mov	 r8, rsi
  00ecc	48 8b c8	 mov	 rcx, rax
  00ecf	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 501  :             r = _DIVREM_SINGLE_UNIT(r, up[-3], v, &dummy_q);

  00ed4	48 8b 57 e8	 mov	 rdx, QWORD PTR [rdi-24]
  00ed8	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00edc	4c 8b c6	 mov	 r8, rsi
  00edf	48 8b c8	 mov	 rcx, rax
  00ee2	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT
  00ee7	48 8b c8	 mov	 rcx, rax

; 502  :             up -= 4;

  00eea	48 83 ef 20	 sub	 rdi, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00eee	b8 04 00 00 00	 mov	 eax, 4
  00ef3	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
$LN14@Rem_X_1W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 511  :         if (u_count & 0x2)

  00efb	41 f6 c4 02	 test	 r12b, 2
  00eff	74 36		 je	 SHORT $LN17@Rem_X_1W

; 512  :         {
; 513  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &dummy_q);

  00f01	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00f04	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00f08	4c 8b c6	 mov	 r8, rsi
  00f0b	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 514  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &dummy_q);

  00f10	48 8b 57 f8	 mov	 rdx, QWORD PTR [rdi-8]
  00f14	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00f18	4c 8b c6	 mov	 r8, rsi
  00f1b	48 8b c8	 mov	 rcx, rax
  00f1e	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT
  00f23	48 8b c8	 mov	 rcx, rax

; 515  :             up -= 2;

  00f26	48 83 ef 10	 sub	 rdi, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00f2a	b8 02 00 00 00	 mov	 eax, 2
  00f2f	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
$LN17@Rem_X_1W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 524  :         if (u_count & 0x1)

  00f37	41 f6 c4 01	 test	 r12b, 1
  00f3b	4c 8b a4 24 10
	01 00 00	 mov	 r12, QWORD PTR [rsp+272]
  00f43	74 21		 je	 SHORT $LN745@Rem_X_1W

; 525  :         {
; 526  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &dummy_q);

  00f45	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00f48	4c 8d 4d 40	 lea	 r9, QWORD PTR dummy_q$[rbp-256]
  00f4c	4c 8b c6	 mov	 r8, rsi
  00f4f	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 325  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  00f54	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 537  :     }

  00f5b	48 81 c4 20 01
	00 00		 add	 rsp, 288		; 00000120H
  00f62	5f		 pop	 rdi
  00f63	5e		 pop	 rsi
  00f64	5d		 pop	 rbp
  00f65	c3		 ret	 0
$LN745@Rem_X_1W:

; 527  :             up -= 1;
; 528  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 529  :             if (sizeof(r) == sizeof(_UINT64_T))
; 530  :                 IncrementDIV64Counter();
; 531  :             else
; 532  :                 IncrementDIV32Counter();
; 533  : #endif
; 534  :         }
; 535  : 
; 536  :         return (r);

  00f66	48 8b c1	 mov	 rax, rcx

; 537  :     }

  00f69	48 81 c4 20 01
	00 00		 add	 rsp, 288		; 00000120H
  00f70	5f		 pop	 rdi
  00f71	5e		 pop	 rsi
  00f72	5d		 pop	 rbp
  00f73	c3		 ret	 0
?Rem_X_1W@Internal@Core@Math@Palmtree@@YA_KPEA_K_K1@Z ENDP ; Palmtree::Math::Core::Internal::Rem_X_1W
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp
;	COMDAT ?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z
_TEXT	SEGMENT
RR$1 = 32
RR$2 = 40
RR$3 = 48
RR$4 = 56
RR$5 = 64
RR$6 = 72
RR$7 = 80
RR$8 = 88
RR$9 = 96
RR$10 = 104
RR$11 = 112
RR$12 = 120
RR$13 = 128
RR$14 = 136
RR$15 = 144
RR$16 = 152
RR$17 = 160
RR$18 = 168
RR$19 = 176
RR$20 = 184
RR$21 = 192
RR$22 = 200
RR$23 = 208
RR$24 = 216
RR$25 = 224
RR$26 = 304
u_buf$ = 304
RR$27 = 312
u_buf_len$ = 312
v$ = 320
RR$28 = 328
q_buf$ = 328
r_buf$ = 336
?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z PROC ; Palmtree::Math::Core::Internal::DivRem_X_1W, COMDAT

; 540  :     {

$LN726:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	41 56		 push	 r14
  00008	48 8d 68 d8	 lea	 rbp, QWORD PTR [rax-40]
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	4c 89 60 d8	 mov	 QWORD PTR [rax-40], r12

; 541  :         // u の最上位ワードは 0 でありうることに注意すること。
; 542  :         __UNIT_TYPE* up = u_buf + u_buf_len - 1;

  00017	48 8d 79 f8	 lea	 rdi, QWORD PTR [rcx-8]

; 543  :         __UNIT_TYPE* qp = q_buf + u_buf_len - 1;
; 544  :         __UNIT_TYPE u_count = u_buf_len;
; 545  :         if (sizeof(__UNIT_TYPE) != sizeof(__UNIT_TYPE))
; 546  :         {
; 547  :             while (*up == 0)
; 548  :             {
; 549  :                 --up;
; 550  :                 --qp;
; 551  :                 --u_count;
; 552  :             }
; 553  :         }
; 554  :         __UNIT_TYPE r = 0;
; 555  :         __UNIT_TYPE count = u_count >> 5;

  0001b	4c 8b e2	 mov	 r12, rdx
  0001e	4c 89 68 d0	 mov	 QWORD PTR [rax-48], r13
  00022	49 c1 ec 05	 shr	 r12, 5
  00026	49 8d 71 f8	 lea	 rsi, QWORD PTR [r9-8]
  0002a	33 c9		 xor	 ecx, ecx
  0002c	48 8d 3c d7	 lea	 rdi, QWORD PTR [rdi+rdx*8]
  00030	48 8d 34 d6	 lea	 rsi, QWORD PTR [rsi+rdx*8]
  00034	4d 8b f0	 mov	 r14, r8
  00037	4c 8b ea	 mov	 r13, rdx

; 556  :         while (count != 0)

  0003a	4d 85 e4	 test	 r12, r12
  0003d	0f 84 2a 0f 00
	00		 je	 $LN5@DivRem_X_1
  00043	48 89 58 18	 mov	 QWORD PTR [rax+24], rbx
  00047	4c 89 78 c8	 mov	 QWORD PTR [rax-56], r15
  0004b	4d 8b f8	 mov	 r15, r8
  0004e	49 c1 ef 20	 shr	 r15, 32			; 00000020H
  00052	41 8b de	 mov	 ebx, r14d
$LL4@DivRem_X_1:

; 557  :         {
; 558  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &qp[-0]);

  00055	4c 8b 17	 mov	 r10, QWORD PTR [rdi]

; 326  :         if (v_hi == 0)

  00058	45 85 ff	 test	 r15d, r15d
  0005b	75 5a		 jne	 SHORT $LN28@DivRem_X_1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0005d	48 8b c1	 mov	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00060	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00062	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00066	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00069	8b c9		 mov	 ecx, ecx
  0006b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0006d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0006f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00073	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00076	49 8b ca	 mov	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00079	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0007c	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00080	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00082	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00084	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00088	48 0b c1	 or	 rax, rcx
  0008b	41 8b ca	 mov	 ecx, r10d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0008e	48 f7 f3	 div	 rbx
  00091	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00094	8b c2		 mov	 eax, edx
  00096	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0009a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0009c	48 0b c1	 or	 rax, rcx
  0009f	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000a2	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000a5	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000a9	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000ac	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  000ae	4c 89 55 30	 mov	 QWORD PTR RR$26[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000b2	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  000b5	eb 16		 jmp	 SHORT $LN29@DivRem_X_1
$LN28@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  000b7	4c 8d 4d 30	 lea	 r9, QWORD PTR RR$26[rbp-256]
  000bb	4d 8b c6	 mov	 r8, r14
  000be	49 8b d2	 mov	 rdx, r10
  000c1	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  000c6	4c 8b 55 30	 mov	 r10, QWORD PTR RR$26[rbp-256]
  000ca	48 8b c8	 mov	 rcx, rax
$LN29@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  000cd	48 89 0e	 mov	 QWORD PTR [rsi], rcx

; 559  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &qp[-1]);

  000d0	4c 8b 5f f8	 mov	 r11, QWORD PTR [rdi-8]

; 326  :         if (v_hi == 0)

  000d4	45 85 ff	 test	 r15d, r15d
  000d7	75 5b		 jne	 SHORT $LN52@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  000d9	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000db	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000de	49 8b c2	 mov	 rax, r10
  000e1	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  000e5	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000e8	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  000ea	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000ec	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  000f0	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000f3	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  000f6	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  000f9	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000fd	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  000ff	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00101	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00105	48 0b c1	 or	 rax, rcx
  00108	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0010b	48 f7 f3	 div	 rbx
  0010e	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00111	8b c2		 mov	 eax, edx
  00113	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00117	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00119	48 0b c1	 or	 rax, rcx
  0011c	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0011f	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00122	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00126	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00129	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0012b	4c 89 55 38	 mov	 QWORD PTR RR$27[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0012f	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00132	eb 19		 jmp	 SHORT $LN53@DivRem_X_1
$LN52@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00134	4c 8d 4d 38	 lea	 r9, QWORD PTR RR$27[rbp-256]
  00138	4d 8b c6	 mov	 r8, r14
  0013b	49 8b d3	 mov	 rdx, r11
  0013e	49 8b ca	 mov	 rcx, r10
  00141	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00146	4c 8b 55 38	 mov	 r10, QWORD PTR RR$27[rbp-256]
  0014a	48 8b c8	 mov	 rcx, rax
$LN53@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  0014d	48 89 4e f8	 mov	 QWORD PTR [rsi-8], rcx

; 560  :             r = _DIVREM_SINGLE_UNIT(r, up[-2], v, &qp[-2]);

  00151	4c 8b 5f f0	 mov	 r11, QWORD PTR [rdi-16]

; 326  :         if (v_hi == 0)

  00155	45 85 ff	 test	 r15d, r15d
  00158	75 5b		 jne	 SHORT $LN76@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  0015a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0015c	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0015f	49 8b c2	 mov	 rax, r10
  00162	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00166	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00169	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0016b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0016d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00171	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00174	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00177	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0017a	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0017e	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00180	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00182	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00186	48 0b c1	 or	 rax, rcx
  00189	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0018c	48 f7 f3	 div	 rbx
  0018f	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00192	8b c2		 mov	 eax, edx
  00194	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00198	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0019a	48 0b c1	 or	 rax, rcx
  0019d	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  001a0	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001a3	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  001a7	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001aa	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  001ac	4c 89 55 48	 mov	 QWORD PTR RR$28[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001b0	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  001b3	eb 19		 jmp	 SHORT $LN77@DivRem_X_1
$LN76@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  001b5	4c 8d 4d 48	 lea	 r9, QWORD PTR RR$28[rbp-256]
  001b9	4d 8b c6	 mov	 r8, r14
  001bc	49 8b d3	 mov	 rdx, r11
  001bf	49 8b ca	 mov	 rcx, r10
  001c2	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  001c7	4c 8b 55 48	 mov	 r10, QWORD PTR RR$28[rbp-256]
  001cb	48 8b c8	 mov	 rcx, rax
$LN77@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  001ce	48 89 4e f0	 mov	 QWORD PTR [rsi-16], rcx

; 561  :             r = _DIVREM_SINGLE_UNIT(r, up[-3], v, &qp[-3]);

  001d2	4c 8b 5f e8	 mov	 r11, QWORD PTR [rdi-24]

; 326  :         if (v_hi == 0)

  001d6	45 85 ff	 test	 r15d, r15d
  001d9	75 5c		 jne	 SHORT $LN100@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  001db	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001dd	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  001e0	49 8b c2	 mov	 rax, r10
  001e3	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  001e7	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001ea	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  001ec	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001ee	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  001f2	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  001f5	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  001f8	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  001fb	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  001ff	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00201	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00203	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00207	48 0b c1	 or	 rax, rcx
  0020a	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0020d	48 f7 f3	 div	 rbx
  00210	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00213	8b c2		 mov	 eax, edx
  00215	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00219	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0021b	48 0b c1	 or	 rax, rcx
  0021e	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00221	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00224	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00228	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0022b	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0022d	4c 89 54 24 20	 mov	 QWORD PTR RR$1[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00232	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00235	eb 1b		 jmp	 SHORT $LN101@DivRem_X_1
$LN100@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00237	4c 8d 4c 24 20	 lea	 r9, QWORD PTR RR$1[rsp]
  0023c	4d 8b c6	 mov	 r8, r14
  0023f	49 8b d3	 mov	 rdx, r11
  00242	49 8b ca	 mov	 rcx, r10
  00245	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  0024a	4c 8b 54 24 20	 mov	 r10, QWORD PTR RR$1[rsp]
  0024f	48 8b c8	 mov	 rcx, rax
$LN101@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00252	48 89 4e e8	 mov	 QWORD PTR [rsi-24], rcx

; 562  :             r = _DIVREM_SINGLE_UNIT(r, up[-4], v, &qp[-4]);

  00256	4c 8b 5f e0	 mov	 r11, QWORD PTR [rdi-32]

; 326  :         if (v_hi == 0)

  0025a	45 85 ff	 test	 r15d, r15d
  0025d	75 5c		 jne	 SHORT $LN124@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  0025f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00261	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00264	49 8b c2	 mov	 rax, r10
  00267	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0026b	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0026e	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00270	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00272	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00276	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00279	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0027c	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0027f	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00283	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00285	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00287	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0028b	48 0b c1	 or	 rax, rcx
  0028e	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00291	48 f7 f3	 div	 rbx
  00294	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00297	8b c2		 mov	 eax, edx
  00299	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0029d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0029f	48 0b c1	 or	 rax, rcx
  002a2	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  002a5	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002a8	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  002ac	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002af	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  002b1	4c 89 54 24 28	 mov	 QWORD PTR RR$2[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002b6	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  002b9	eb 1b		 jmp	 SHORT $LN125@DivRem_X_1
$LN124@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  002bb	4c 8d 4c 24 28	 lea	 r9, QWORD PTR RR$2[rsp]
  002c0	4d 8b c6	 mov	 r8, r14
  002c3	49 8b d3	 mov	 rdx, r11
  002c6	49 8b ca	 mov	 rcx, r10
  002c9	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  002ce	4c 8b 54 24 28	 mov	 r10, QWORD PTR RR$2[rsp]
  002d3	48 8b c8	 mov	 rcx, rax
$LN125@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  002d6	48 89 4e e0	 mov	 QWORD PTR [rsi-32], rcx

; 563  :             r = _DIVREM_SINGLE_UNIT(r, up[-5], v, &qp[-5]);

  002da	4c 8b 5f d8	 mov	 r11, QWORD PTR [rdi-40]

; 326  :         if (v_hi == 0)

  002de	45 85 ff	 test	 r15d, r15d
  002e1	75 5c		 jne	 SHORT $LN148@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  002e3	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002e5	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  002e8	49 8b c2	 mov	 rax, r10
  002eb	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  002ef	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002f2	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  002f4	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  002f6	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  002fa	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  002fd	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00300	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00303	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00307	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00309	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0030b	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0030f	48 0b c1	 or	 rax, rcx
  00312	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00315	48 f7 f3	 div	 rbx
  00318	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0031b	8b c2		 mov	 eax, edx
  0031d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00321	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00323	48 0b c1	 or	 rax, rcx
  00326	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00329	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0032c	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00330	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00333	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00335	4c 89 54 24 30	 mov	 QWORD PTR RR$3[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0033a	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  0033d	eb 1b		 jmp	 SHORT $LN149@DivRem_X_1
$LN148@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0033f	4c 8d 4c 24 30	 lea	 r9, QWORD PTR RR$3[rsp]
  00344	4d 8b c6	 mov	 r8, r14
  00347	49 8b d3	 mov	 rdx, r11
  0034a	49 8b ca	 mov	 rcx, r10
  0034d	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00352	4c 8b 54 24 30	 mov	 r10, QWORD PTR RR$3[rsp]
  00357	48 8b c8	 mov	 rcx, rax
$LN149@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  0035a	48 89 4e d8	 mov	 QWORD PTR [rsi-40], rcx

; 564  :             r = _DIVREM_SINGLE_UNIT(r, up[-6], v, &qp[-6]);

  0035e	4c 8b 5f d0	 mov	 r11, QWORD PTR [rdi-48]

; 326  :         if (v_hi == 0)

  00362	45 85 ff	 test	 r15d, r15d
  00365	75 5c		 jne	 SHORT $LN172@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00367	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00369	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0036c	49 8b c2	 mov	 rax, r10
  0036f	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00373	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00376	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00378	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0037a	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0037e	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00381	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00384	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00387	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0038b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0038d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0038f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00393	48 0b c1	 or	 rax, rcx
  00396	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00399	48 f7 f3	 div	 rbx
  0039c	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0039f	8b c2		 mov	 eax, edx
  003a1	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  003a5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003a7	48 0b c1	 or	 rax, rcx
  003aa	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  003ad	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003b0	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  003b4	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003b7	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  003b9	4c 89 54 24 38	 mov	 QWORD PTR RR$4[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003be	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  003c1	eb 1b		 jmp	 SHORT $LN173@DivRem_X_1
$LN172@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  003c3	4c 8d 4c 24 38	 lea	 r9, QWORD PTR RR$4[rsp]
  003c8	4d 8b c6	 mov	 r8, r14
  003cb	49 8b d3	 mov	 rdx, r11
  003ce	49 8b ca	 mov	 rcx, r10
  003d1	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  003d6	4c 8b 54 24 38	 mov	 r10, QWORD PTR RR$4[rsp]
  003db	48 8b c8	 mov	 rcx, rax
$LN173@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  003de	48 89 4e d0	 mov	 QWORD PTR [rsi-48], rcx

; 565  :             r = _DIVREM_SINGLE_UNIT(r, up[-7], v, &qp[-7]);

  003e2	4c 8b 5f c8	 mov	 r11, QWORD PTR [rdi-56]

; 326  :         if (v_hi == 0)

  003e6	45 85 ff	 test	 r15d, r15d
  003e9	75 5c		 jne	 SHORT $LN196@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  003eb	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003ed	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  003f0	49 8b c2	 mov	 rax, r10
  003f3	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  003f7	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003fa	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  003fc	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  003fe	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00402	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00405	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00408	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0040b	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0040f	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00411	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00413	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00417	48 0b c1	 or	 rax, rcx
  0041a	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0041d	48 f7 f3	 div	 rbx
  00420	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00423	8b c2		 mov	 eax, edx
  00425	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00429	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0042b	48 0b c1	 or	 rax, rcx
  0042e	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00431	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00434	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00438	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0043b	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0043d	4c 89 54 24 40	 mov	 QWORD PTR RR$5[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00442	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00445	eb 1b		 jmp	 SHORT $LN197@DivRem_X_1
$LN196@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00447	4c 8d 4c 24 40	 lea	 r9, QWORD PTR RR$5[rsp]
  0044c	4d 8b c6	 mov	 r8, r14
  0044f	49 8b d3	 mov	 rdx, r11
  00452	49 8b ca	 mov	 rcx, r10
  00455	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  0045a	4c 8b 54 24 40	 mov	 r10, QWORD PTR RR$5[rsp]
  0045f	48 8b c8	 mov	 rcx, rax
$LN197@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00462	48 89 4e c8	 mov	 QWORD PTR [rsi-56], rcx

; 566  :             r = _DIVREM_SINGLE_UNIT(r, up[-8], v, &qp[-8]);

  00466	4c 8b 5f c0	 mov	 r11, QWORD PTR [rdi-64]

; 326  :         if (v_hi == 0)

  0046a	45 85 ff	 test	 r15d, r15d
  0046d	75 5c		 jne	 SHORT $LN220@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  0046f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00471	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00474	49 8b c2	 mov	 rax, r10
  00477	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0047b	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0047e	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00480	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00482	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00486	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00489	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0048c	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0048f	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00493	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00495	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00497	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0049b	48 0b c1	 or	 rax, rcx
  0049e	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  004a1	48 f7 f3	 div	 rbx
  004a4	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004a7	8b c2		 mov	 eax, edx
  004a9	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  004ad	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004af	48 0b c1	 or	 rax, rcx
  004b2	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  004b5	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004b8	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  004bc	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004bf	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  004c1	4c 89 54 24 48	 mov	 QWORD PTR RR$6[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004c6	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  004c9	eb 1b		 jmp	 SHORT $LN221@DivRem_X_1
$LN220@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  004cb	4c 8d 4c 24 48	 lea	 r9, QWORD PTR RR$6[rsp]
  004d0	4d 8b c6	 mov	 r8, r14
  004d3	49 8b d3	 mov	 rdx, r11
  004d6	49 8b ca	 mov	 rcx, r10
  004d9	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  004de	4c 8b 54 24 48	 mov	 r10, QWORD PTR RR$6[rsp]
  004e3	48 8b c8	 mov	 rcx, rax
$LN221@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  004e6	48 89 4e c0	 mov	 QWORD PTR [rsi-64], rcx

; 567  :             r = _DIVREM_SINGLE_UNIT(r, up[-9], v, &qp[-9]);

  004ea	4c 8b 5f b8	 mov	 r11, QWORD PTR [rdi-72]

; 326  :         if (v_hi == 0)

  004ee	45 85 ff	 test	 r15d, r15d
  004f1	75 5c		 jne	 SHORT $LN244@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  004f3	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  004f5	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  004f8	49 8b c2	 mov	 rax, r10
  004fb	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  004ff	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00502	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00504	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00506	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0050a	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0050d	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00510	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00513	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00517	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00519	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0051b	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0051f	48 0b c1	 or	 rax, rcx
  00522	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00525	48 f7 f3	 div	 rbx
  00528	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0052b	8b c2		 mov	 eax, edx
  0052d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00531	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00533	48 0b c1	 or	 rax, rcx
  00536	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00539	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0053c	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00540	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00543	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00545	4c 89 54 24 50	 mov	 QWORD PTR RR$7[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0054a	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  0054d	eb 1b		 jmp	 SHORT $LN245@DivRem_X_1
$LN244@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0054f	4c 8d 4c 24 50	 lea	 r9, QWORD PTR RR$7[rsp]
  00554	4d 8b c6	 mov	 r8, r14
  00557	49 8b d3	 mov	 rdx, r11
  0055a	49 8b ca	 mov	 rcx, r10
  0055d	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00562	4c 8b 54 24 50	 mov	 r10, QWORD PTR RR$7[rsp]
  00567	48 8b c8	 mov	 rcx, rax
$LN245@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  0056a	48 89 4e b8	 mov	 QWORD PTR [rsi-72], rcx

; 568  :             r = _DIVREM_SINGLE_UNIT(r, up[-10], v, &qp[-10]);

  0056e	4c 8b 5f b0	 mov	 r11, QWORD PTR [rdi-80]

; 326  :         if (v_hi == 0)

  00572	45 85 ff	 test	 r15d, r15d
  00575	75 5c		 jne	 SHORT $LN268@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00577	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00579	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0057c	49 8b c2	 mov	 rax, r10
  0057f	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00583	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00586	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00588	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0058a	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0058e	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00591	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00594	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00597	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0059b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0059d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0059f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  005a3	48 0b c1	 or	 rax, rcx
  005a6	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  005a9	48 f7 f3	 div	 rbx
  005ac	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005af	8b c2		 mov	 eax, edx
  005b1	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  005b5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005b7	48 0b c1	 or	 rax, rcx
  005ba	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  005bd	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005c0	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  005c4	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005c7	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  005c9	4c 89 54 24 58	 mov	 QWORD PTR RR$8[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005ce	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  005d1	eb 1b		 jmp	 SHORT $LN269@DivRem_X_1
$LN268@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  005d3	4c 8d 4c 24 58	 lea	 r9, QWORD PTR RR$8[rsp]
  005d8	4d 8b c6	 mov	 r8, r14
  005db	49 8b d3	 mov	 rdx, r11
  005de	49 8b ca	 mov	 rcx, r10
  005e1	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  005e6	4c 8b 54 24 58	 mov	 r10, QWORD PTR RR$8[rsp]
  005eb	48 8b c8	 mov	 rcx, rax
$LN269@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  005ee	48 89 4e b0	 mov	 QWORD PTR [rsi-80], rcx

; 569  :             r = _DIVREM_SINGLE_UNIT(r, up[-11], v, &qp[-11]);

  005f2	4c 8b 5f a8	 mov	 r11, QWORD PTR [rdi-88]

; 326  :         if (v_hi == 0)

  005f6	45 85 ff	 test	 r15d, r15d
  005f9	75 5c		 jne	 SHORT $LN292@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  005fb	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  005fd	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00600	49 8b c2	 mov	 rax, r10
  00603	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00607	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0060a	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0060c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0060e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00612	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00615	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00618	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0061b	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0061f	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00621	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00623	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00627	48 0b c1	 or	 rax, rcx
  0062a	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0062d	48 f7 f3	 div	 rbx
  00630	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00633	8b c2		 mov	 eax, edx
  00635	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00639	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0063b	48 0b c1	 or	 rax, rcx
  0063e	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00641	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00644	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00648	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0064b	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0064d	4c 89 54 24 60	 mov	 QWORD PTR RR$9[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00652	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00655	eb 1b		 jmp	 SHORT $LN293@DivRem_X_1
$LN292@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00657	4c 8d 4c 24 60	 lea	 r9, QWORD PTR RR$9[rsp]
  0065c	4d 8b c6	 mov	 r8, r14
  0065f	49 8b d3	 mov	 rdx, r11
  00662	49 8b ca	 mov	 rcx, r10
  00665	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  0066a	4c 8b 54 24 60	 mov	 r10, QWORD PTR RR$9[rsp]
  0066f	48 8b c8	 mov	 rcx, rax
$LN293@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00672	48 89 4e a8	 mov	 QWORD PTR [rsi-88], rcx

; 570  :             r = _DIVREM_SINGLE_UNIT(r, up[-12], v, &qp[-12]);

  00676	4c 8b 5f a0	 mov	 r11, QWORD PTR [rdi-96]

; 326  :         if (v_hi == 0)

  0067a	45 85 ff	 test	 r15d, r15d
  0067d	75 5c		 jne	 SHORT $LN316@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  0067f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00681	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00684	49 8b c2	 mov	 rax, r10
  00687	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0068b	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0068e	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00690	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00692	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00696	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00699	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0069c	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0069f	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006a3	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  006a5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006a7	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  006ab	48 0b c1	 or	 rax, rcx
  006ae	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  006b1	48 f7 f3	 div	 rbx
  006b4	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006b7	8b c2		 mov	 eax, edx
  006b9	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  006bd	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006bf	48 0b c1	 or	 rax, rcx
  006c2	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  006c5	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006c8	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  006cc	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006cf	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  006d1	4c 89 54 24 68	 mov	 QWORD PTR RR$10[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  006d6	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  006d9	eb 1b		 jmp	 SHORT $LN317@DivRem_X_1
$LN316@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  006db	4c 8d 4c 24 68	 lea	 r9, QWORD PTR RR$10[rsp]
  006e0	4d 8b c6	 mov	 r8, r14
  006e3	49 8b d3	 mov	 rdx, r11
  006e6	49 8b ca	 mov	 rcx, r10
  006e9	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  006ee	4c 8b 54 24 68	 mov	 r10, QWORD PTR RR$10[rsp]
  006f3	48 8b c8	 mov	 rcx, rax
$LN317@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  006f6	48 89 4e a0	 mov	 QWORD PTR [rsi-96], rcx

; 571  :             r = _DIVREM_SINGLE_UNIT(r, up[-13], v, &qp[-13]);

  006fa	4c 8b 5f 98	 mov	 r11, QWORD PTR [rdi-104]

; 326  :         if (v_hi == 0)

  006fe	45 85 ff	 test	 r15d, r15d
  00701	75 5c		 jne	 SHORT $LN340@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00703	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00705	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00708	49 8b c2	 mov	 rax, r10
  0070b	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0070f	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00712	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00714	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00716	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0071a	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0071d	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00720	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00723	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00727	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00729	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0072b	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0072f	48 0b c1	 or	 rax, rcx
  00732	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00735	48 f7 f3	 div	 rbx
  00738	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0073b	8b c2		 mov	 eax, edx
  0073d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00741	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00743	48 0b c1	 or	 rax, rcx
  00746	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00749	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0074c	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00750	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00753	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00755	4c 89 54 24 70	 mov	 QWORD PTR RR$11[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0075a	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  0075d	eb 1b		 jmp	 SHORT $LN341@DivRem_X_1
$LN340@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0075f	4c 8d 4c 24 70	 lea	 r9, QWORD PTR RR$11[rsp]
  00764	4d 8b c6	 mov	 r8, r14
  00767	49 8b d3	 mov	 rdx, r11
  0076a	49 8b ca	 mov	 rcx, r10
  0076d	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00772	4c 8b 54 24 70	 mov	 r10, QWORD PTR RR$11[rsp]
  00777	48 8b c8	 mov	 rcx, rax
$LN341@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  0077a	48 89 4e 98	 mov	 QWORD PTR [rsi-104], rcx

; 572  :             r = _DIVREM_SINGLE_UNIT(r, up[-14], v, &qp[-14]);

  0077e	4c 8b 5f 90	 mov	 r11, QWORD PTR [rdi-112]

; 326  :         if (v_hi == 0)

  00782	45 85 ff	 test	 r15d, r15d
  00785	75 5c		 jne	 SHORT $LN364@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00787	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00789	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0078c	49 8b c2	 mov	 rax, r10
  0078f	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00793	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00796	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00798	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0079a	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0079e	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  007a1	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  007a4	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  007a7	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007ab	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  007ad	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007af	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  007b3	48 0b c1	 or	 rax, rcx
  007b6	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  007b9	48 f7 f3	 div	 rbx
  007bc	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007bf	8b c2		 mov	 eax, edx
  007c1	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  007c5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007c7	48 0b c1	 or	 rax, rcx
  007ca	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  007cd	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007d0	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  007d4	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007d7	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  007d9	4c 89 54 24 78	 mov	 QWORD PTR RR$12[rsp], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  007de	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  007e1	eb 1b		 jmp	 SHORT $LN365@DivRem_X_1
$LN364@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  007e3	4c 8d 4c 24 78	 lea	 r9, QWORD PTR RR$12[rsp]
  007e8	4d 8b c6	 mov	 r8, r14
  007eb	49 8b d3	 mov	 rdx, r11
  007ee	49 8b ca	 mov	 rcx, r10
  007f1	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  007f6	4c 8b 54 24 78	 mov	 r10, QWORD PTR RR$12[rsp]
  007fb	48 8b c8	 mov	 rcx, rax
$LN365@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  007fe	48 89 4e 90	 mov	 QWORD PTR [rsi-112], rcx

; 573  :             r = _DIVREM_SINGLE_UNIT(r, up[-15], v, &qp[-15]);

  00802	4c 8b 5f 88	 mov	 r11, QWORD PTR [rdi-120]

; 326  :         if (v_hi == 0)

  00806	45 85 ff	 test	 r15d, r15d
  00809	75 5b		 jne	 SHORT $LN388@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  0080b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0080d	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00810	49 8b c2	 mov	 rax, r10
  00813	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00817	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0081a	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0081c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0081e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00822	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00825	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00828	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0082b	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0082f	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00831	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00833	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00837	48 0b c1	 or	 rax, rcx
  0083a	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  0083d	48 f7 f3	 div	 rbx
  00840	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00843	8b c2		 mov	 eax, edx
  00845	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00849	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0084b	48 0b c1	 or	 rax, rcx
  0084e	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00851	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00854	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00858	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0085b	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0085d	4c 89 55 80	 mov	 QWORD PTR RR$13[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00861	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00864	eb 19		 jmp	 SHORT $LN389@DivRem_X_1
$LN388@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00866	4c 8d 4d 80	 lea	 r9, QWORD PTR RR$13[rbp-256]
  0086a	4d 8b c6	 mov	 r8, r14
  0086d	49 8b d3	 mov	 rdx, r11
  00870	49 8b ca	 mov	 rcx, r10
  00873	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00878	4c 8b 55 80	 mov	 r10, QWORD PTR RR$13[rbp-256]
  0087c	48 8b c8	 mov	 rcx, rax
$LN389@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  0087f	48 89 4e 88	 mov	 QWORD PTR [rsi-120], rcx

; 574  :             r = _DIVREM_SINGLE_UNIT(r, up[-16], v, &qp[-16]);

  00883	4c 8b 5f 80	 mov	 r11, QWORD PTR [rdi-128]

; 326  :         if (v_hi == 0)

  00887	45 85 ff	 test	 r15d, r15d
  0088a	75 5b		 jne	 SHORT $LN412@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  0088c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0088e	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00891	49 8b c2	 mov	 rax, r10
  00894	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00898	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0089b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0089d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0089f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  008a3	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  008a6	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  008a9	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  008ac	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008b0	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  008b2	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008b4	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  008b8	48 0b c1	 or	 rax, rcx
  008bb	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  008be	48 f7 f3	 div	 rbx
  008c1	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008c4	8b c2		 mov	 eax, edx
  008c6	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  008ca	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008cc	48 0b c1	 or	 rax, rcx
  008cf	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  008d2	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008d5	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  008d9	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008dc	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  008de	4c 89 55 88	 mov	 QWORD PTR RR$14[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  008e2	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  008e5	eb 19		 jmp	 SHORT $LN413@DivRem_X_1
$LN412@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  008e7	4c 8d 4d 88	 lea	 r9, QWORD PTR RR$14[rbp-256]
  008eb	4d 8b c6	 mov	 r8, r14
  008ee	49 8b d3	 mov	 rdx, r11
  008f1	49 8b ca	 mov	 rcx, r10
  008f4	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  008f9	4c 8b 55 88	 mov	 r10, QWORD PTR RR$14[rbp-256]
  008fd	48 8b c8	 mov	 rcx, rax
$LN413@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00900	48 89 4e 80	 mov	 QWORD PTR [rsi-128], rcx

; 575  :             r = _DIVREM_SINGLE_UNIT(r, up[-17], v, &qp[-17]);

  00904	4c 8b 9f 78 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-136]

; 326  :         if (v_hi == 0)

  0090b	45 85 ff	 test	 r15d, r15d
  0090e	75 5b		 jne	 SHORT $LN436@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00910	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00912	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00915	49 8b c2	 mov	 rax, r10
  00918	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  0091c	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  0091f	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00921	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00923	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00927	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0092a	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  0092d	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00930	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00934	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00936	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00938	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  0093c	48 0b c1	 or	 rax, rcx
  0093f	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00942	48 f7 f3	 div	 rbx
  00945	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00948	8b c2		 mov	 eax, edx
  0094a	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0094e	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00950	48 0b c1	 or	 rax, rcx
  00953	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00956	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00959	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  0095d	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00960	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00962	4c 89 55 90	 mov	 QWORD PTR RR$15[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00966	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00969	eb 19		 jmp	 SHORT $LN437@DivRem_X_1
$LN436@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  0096b	4c 8d 4d 90	 lea	 r9, QWORD PTR RR$15[rbp-256]
  0096f	4d 8b c6	 mov	 r8, r14
  00972	49 8b d3	 mov	 rdx, r11
  00975	49 8b ca	 mov	 rcx, r10
  00978	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  0097d	4c 8b 55 90	 mov	 r10, QWORD PTR RR$15[rbp-256]
  00981	48 8b c8	 mov	 rcx, rax
$LN437@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00984	48 89 8e 78 ff
	ff ff		 mov	 QWORD PTR [rsi-136], rcx

; 576  :             r = _DIVREM_SINGLE_UNIT(r, up[-18], v, &qp[-18]);

  0098b	4c 8b 9f 70 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-144]

; 326  :         if (v_hi == 0)

  00992	45 85 ff	 test	 r15d, r15d
  00995	75 5b		 jne	 SHORT $LN460@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00997	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00999	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  0099c	49 8b c2	 mov	 rax, r10
  0099f	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  009a3	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009a6	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  009a8	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009aa	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  009ae	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  009b1	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  009b4	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  009b7	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009bb	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  009bd	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009bf	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  009c3	48 0b c1	 or	 rax, rcx
  009c6	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  009c9	48 f7 f3	 div	 rbx
  009cc	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009cf	8b c2		 mov	 eax, edx
  009d1	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  009d5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009d7	48 0b c1	 or	 rax, rcx
  009da	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  009dd	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009e0	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  009e4	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009e7	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  009e9	4c 89 55 98	 mov	 QWORD PTR RR$16[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  009ed	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  009f0	eb 19		 jmp	 SHORT $LN461@DivRem_X_1
$LN460@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  009f2	4c 8d 4d 98	 lea	 r9, QWORD PTR RR$16[rbp-256]
  009f6	4d 8b c6	 mov	 r8, r14
  009f9	49 8b d3	 mov	 rdx, r11
  009fc	49 8b ca	 mov	 rcx, r10
  009ff	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00a04	4c 8b 55 98	 mov	 r10, QWORD PTR RR$16[rbp-256]
  00a08	48 8b c8	 mov	 rcx, rax
$LN461@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00a0b	48 89 8e 70 ff
	ff ff		 mov	 QWORD PTR [rsi-144], rcx

; 577  :             r = _DIVREM_SINGLE_UNIT(r, up[-19], v, &qp[-19]);

  00a12	4c 8b 9f 68 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-152]

; 326  :         if (v_hi == 0)

  00a19	45 85 ff	 test	 r15d, r15d
  00a1c	75 5b		 jne	 SHORT $LN484@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00a1e	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a20	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00a23	49 8b c2	 mov	 rax, r10
  00a26	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00a2a	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a2d	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00a2f	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a31	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00a35	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00a38	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00a3b	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00a3e	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a42	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00a44	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a46	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00a4a	48 0b c1	 or	 rax, rcx
  00a4d	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00a50	48 f7 f3	 div	 rbx
  00a53	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a56	8b c2		 mov	 eax, edx
  00a58	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00a5c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a5e	48 0b c1	 or	 rax, rcx
  00a61	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00a64	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a67	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00a6b	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a6e	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00a70	4c 89 55 a0	 mov	 QWORD PTR RR$17[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00a74	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00a77	eb 19		 jmp	 SHORT $LN485@DivRem_X_1
$LN484@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00a79	4c 8d 4d a0	 lea	 r9, QWORD PTR RR$17[rbp-256]
  00a7d	4d 8b c6	 mov	 r8, r14
  00a80	49 8b d3	 mov	 rdx, r11
  00a83	49 8b ca	 mov	 rcx, r10
  00a86	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00a8b	4c 8b 55 a0	 mov	 r10, QWORD PTR RR$17[rbp-256]
  00a8f	48 8b c8	 mov	 rcx, rax
$LN485@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00a92	48 89 8e 68 ff
	ff ff		 mov	 QWORD PTR [rsi-152], rcx

; 578  :             r = _DIVREM_SINGLE_UNIT(r, up[-20], v, &qp[-20]);

  00a99	4c 8b 9f 60 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-160]

; 326  :         if (v_hi == 0)

  00aa0	45 85 ff	 test	 r15d, r15d
  00aa3	75 5b		 jne	 SHORT $LN508@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00aa5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00aa7	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00aaa	49 8b c2	 mov	 rax, r10
  00aad	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00ab1	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ab4	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00ab6	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ab8	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00abc	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00abf	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00ac2	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00ac5	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ac9	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00acb	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00acd	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00ad1	48 0b c1	 or	 rax, rcx
  00ad4	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00ad7	48 f7 f3	 div	 rbx
  00ada	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00add	8b c2		 mov	 eax, edx
  00adf	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00ae3	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ae5	48 0b c1	 or	 rax, rcx
  00ae8	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00aeb	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00aee	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00af2	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00af5	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00af7	4c 89 55 a8	 mov	 QWORD PTR RR$18[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00afb	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00afe	eb 19		 jmp	 SHORT $LN509@DivRem_X_1
$LN508@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00b00	4c 8d 4d a8	 lea	 r9, QWORD PTR RR$18[rbp-256]
  00b04	4d 8b c6	 mov	 r8, r14
  00b07	49 8b d3	 mov	 rdx, r11
  00b0a	49 8b ca	 mov	 rcx, r10
  00b0d	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00b12	4c 8b 55 a8	 mov	 r10, QWORD PTR RR$18[rbp-256]
  00b16	48 8b c8	 mov	 rcx, rax
$LN509@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00b19	48 89 8e 60 ff
	ff ff		 mov	 QWORD PTR [rsi-160], rcx

; 579  :             r = _DIVREM_SINGLE_UNIT(r, up[-21], v, &qp[-21]);

  00b20	4c 8b 9f 58 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-168]

; 326  :         if (v_hi == 0)

  00b27	45 85 ff	 test	 r15d, r15d
  00b2a	75 5b		 jne	 SHORT $LN532@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00b2c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b2e	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00b31	49 8b c2	 mov	 rax, r10
  00b34	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00b38	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b3b	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00b3d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b3f	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00b43	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00b46	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00b49	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00b4c	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b50	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00b52	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b54	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00b58	48 0b c1	 or	 rax, rcx
  00b5b	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00b5e	48 f7 f3	 div	 rbx
  00b61	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b64	8b c2		 mov	 eax, edx
  00b66	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00b6a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b6c	48 0b c1	 or	 rax, rcx
  00b6f	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00b72	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b75	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00b79	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b7c	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00b7e	4c 89 55 b0	 mov	 QWORD PTR RR$19[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00b82	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00b85	eb 19		 jmp	 SHORT $LN533@DivRem_X_1
$LN532@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00b87	4c 8d 4d b0	 lea	 r9, QWORD PTR RR$19[rbp-256]
  00b8b	4d 8b c6	 mov	 r8, r14
  00b8e	49 8b d3	 mov	 rdx, r11
  00b91	49 8b ca	 mov	 rcx, r10
  00b94	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00b99	4c 8b 55 b0	 mov	 r10, QWORD PTR RR$19[rbp-256]
  00b9d	48 8b c8	 mov	 rcx, rax
$LN533@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00ba0	48 89 8e 58 ff
	ff ff		 mov	 QWORD PTR [rsi-168], rcx

; 580  :             r = _DIVREM_SINGLE_UNIT(r, up[-22], v, &qp[-22]);

  00ba7	4c 8b 9f 50 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-176]

; 326  :         if (v_hi == 0)

  00bae	45 85 ff	 test	 r15d, r15d
  00bb1	75 5b		 jne	 SHORT $LN556@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00bb3	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bb5	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00bb8	49 8b c2	 mov	 rax, r10
  00bbb	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00bbf	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bc2	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00bc4	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bc6	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00bca	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00bcd	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00bd0	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00bd3	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bd7	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00bd9	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bdb	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00bdf	48 0b c1	 or	 rax, rcx
  00be2	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00be5	48 f7 f3	 div	 rbx
  00be8	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00beb	8b c2		 mov	 eax, edx
  00bed	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00bf1	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bf3	48 0b c1	 or	 rax, rcx
  00bf6	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00bf9	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00bfc	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00c00	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c03	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00c05	4c 89 55 b8	 mov	 QWORD PTR RR$20[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c09	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00c0c	eb 19		 jmp	 SHORT $LN557@DivRem_X_1
$LN556@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00c0e	4c 8d 4d b8	 lea	 r9, QWORD PTR RR$20[rbp-256]
  00c12	4d 8b c6	 mov	 r8, r14
  00c15	49 8b d3	 mov	 rdx, r11
  00c18	49 8b ca	 mov	 rcx, r10
  00c1b	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00c20	4c 8b 55 b8	 mov	 r10, QWORD PTR RR$20[rbp-256]
  00c24	48 8b c8	 mov	 rcx, rax
$LN557@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00c27	48 89 8e 50 ff
	ff ff		 mov	 QWORD PTR [rsi-176], rcx

; 581  :             r = _DIVREM_SINGLE_UNIT(r, up[-23], v, &qp[-23]);

  00c2e	4c 8b 9f 48 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-184]

; 326  :         if (v_hi == 0)

  00c35	45 85 ff	 test	 r15d, r15d
  00c38	75 5b		 jne	 SHORT $LN580@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00c3a	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c3c	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00c3f	49 8b c2	 mov	 rax, r10
  00c42	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00c46	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c49	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00c4b	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c4d	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00c51	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00c54	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00c57	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00c5a	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c5e	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00c60	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c62	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00c66	48 0b c1	 or	 rax, rcx
  00c69	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00c6c	48 f7 f3	 div	 rbx
  00c6f	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c72	8b c2		 mov	 eax, edx
  00c74	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00c78	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c7a	48 0b c1	 or	 rax, rcx
  00c7d	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00c80	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c83	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00c87	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c8a	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00c8c	4c 89 55 c0	 mov	 QWORD PTR RR$21[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00c90	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00c93	eb 19		 jmp	 SHORT $LN581@DivRem_X_1
$LN580@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00c95	4c 8d 4d c0	 lea	 r9, QWORD PTR RR$21[rbp-256]
  00c99	4d 8b c6	 mov	 r8, r14
  00c9c	49 8b d3	 mov	 rdx, r11
  00c9f	49 8b ca	 mov	 rcx, r10
  00ca2	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00ca7	4c 8b 55 c0	 mov	 r10, QWORD PTR RR$21[rbp-256]
  00cab	48 8b c8	 mov	 rcx, rax
$LN581@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00cae	48 89 8e 48 ff
	ff ff		 mov	 QWORD PTR [rsi-184], rcx

; 582  :             r = _DIVREM_SINGLE_UNIT(r, up[-24], v, &qp[-24]);

  00cb5	4c 8b 9f 40 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-192]

; 326  :         if (v_hi == 0)

  00cbc	45 85 ff	 test	 r15d, r15d
  00cbf	75 5b		 jne	 SHORT $LN604@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00cc1	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00cc3	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00cc6	49 8b c2	 mov	 rax, r10
  00cc9	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00ccd	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00cd0	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00cd2	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00cd4	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00cd8	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00cdb	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00cde	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00ce1	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ce5	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00ce7	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ce9	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00ced	48 0b c1	 or	 rax, rcx
  00cf0	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00cf3	48 f7 f3	 div	 rbx
  00cf6	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00cf9	8b c2		 mov	 eax, edx
  00cfb	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00cff	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d01	48 0b c1	 or	 rax, rcx
  00d04	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00d07	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d0a	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00d0e	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d11	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00d13	4c 89 55 c8	 mov	 QWORD PTR RR$22[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d17	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00d1a	eb 19		 jmp	 SHORT $LN605@DivRem_X_1
$LN604@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00d1c	4c 8d 4d c8	 lea	 r9, QWORD PTR RR$22[rbp-256]
  00d20	4d 8b c6	 mov	 r8, r14
  00d23	49 8b d3	 mov	 rdx, r11
  00d26	49 8b ca	 mov	 rcx, r10
  00d29	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00d2e	4c 8b 55 c8	 mov	 r10, QWORD PTR RR$22[rbp-256]
  00d32	48 8b c8	 mov	 rcx, rax
$LN605@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00d35	48 89 8e 40 ff
	ff ff		 mov	 QWORD PTR [rsi-192], rcx

; 583  :             r = _DIVREM_SINGLE_UNIT(r, up[-25], v, &qp[-25]);

  00d3c	4c 8b 9f 38 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-200]

; 326  :         if (v_hi == 0)

  00d43	45 85 ff	 test	 r15d, r15d
  00d46	75 5b		 jne	 SHORT $LN628@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00d48	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d4a	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00d4d	49 8b c2	 mov	 rax, r10
  00d50	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00d54	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d57	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00d59	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d5b	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00d5f	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00d62	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00d65	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00d68	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d6c	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00d6e	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d70	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00d74	48 0b c1	 or	 rax, rcx
  00d77	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00d7a	48 f7 f3	 div	 rbx
  00d7d	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d80	8b c2		 mov	 eax, edx
  00d82	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00d86	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d88	48 0b c1	 or	 rax, rcx
  00d8b	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00d8e	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d91	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00d95	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d98	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00d9a	4c 89 55 d0	 mov	 QWORD PTR RR$23[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00d9e	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00da1	eb 19		 jmp	 SHORT $LN629@DivRem_X_1
$LN628@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00da3	4c 8d 4d d0	 lea	 r9, QWORD PTR RR$23[rbp-256]
  00da7	4d 8b c6	 mov	 r8, r14
  00daa	49 8b d3	 mov	 rdx, r11
  00dad	49 8b ca	 mov	 rcx, r10
  00db0	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00db5	4c 8b 55 d0	 mov	 r10, QWORD PTR RR$23[rbp-256]
  00db9	48 8b c8	 mov	 rcx, rax
$LN629@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00dbc	48 89 8e 38 ff
	ff ff		 mov	 QWORD PTR [rsi-200], rcx

; 584  :             r = _DIVREM_SINGLE_UNIT(r, up[-26], v, &qp[-26]);

  00dc3	4c 8b 9f 30 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-208]

; 326  :         if (v_hi == 0)

  00dca	45 85 ff	 test	 r15d, r15d
  00dcd	75 5b		 jne	 SHORT $LN652@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00dcf	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00dd1	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00dd4	49 8b c2	 mov	 rax, r10
  00dd7	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00ddb	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00dde	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00de0	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00de2	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00de6	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00de9	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00dec	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00def	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00df3	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00df5	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00df7	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00dfb	48 0b c1	 or	 rax, rcx
  00dfe	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00e01	48 f7 f3	 div	 rbx
  00e04	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e07	8b c2		 mov	 eax, edx
  00e09	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00e0d	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e0f	48 0b c1	 or	 rax, rcx
  00e12	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00e15	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e18	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00e1c	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e1f	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00e21	4c 89 55 d8	 mov	 QWORD PTR RR$24[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e25	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00e28	eb 19		 jmp	 SHORT $LN653@DivRem_X_1
$LN652@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00e2a	4c 8d 4d d8	 lea	 r9, QWORD PTR RR$24[rbp-256]
  00e2e	4d 8b c6	 mov	 r8, r14
  00e31	49 8b d3	 mov	 rdx, r11
  00e34	49 8b ca	 mov	 rcx, r10
  00e37	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00e3c	4c 8b 55 d8	 mov	 r10, QWORD PTR RR$24[rbp-256]
  00e40	48 8b c8	 mov	 rcx, rax
$LN653@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00e43	48 89 8e 30 ff
	ff ff		 mov	 QWORD PTR [rsi-208], rcx

; 585  :             r = _DIVREM_SINGLE_UNIT(r, up[-27], v, &qp[-27]);

  00e4a	4c 8b 9f 28 ff
	ff ff		 mov	 r11, QWORD PTR [rdi-216]

; 326  :         if (v_hi == 0)

  00e51	45 85 ff	 test	 r15d, r15d
  00e54	75 5b		 jne	 SHORT $LN676@DivRem_X_1

; 56   :             _r = (_UINT32_T)(t % v);

  00e56	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e58	41 8b ca	 mov	 ecx, r10d

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00e5b	49 8b c2	 mov	 rax, r10
  00e5e	48 c1 e8 20	 shr	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 56   :             _r = (_UINT32_T)(t % v);

  00e62	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e65	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00e67	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e69	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00e6d	48 0b c1	 or	 rax, rcx

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00e70	49 8b cb	 mov	 rcx, r11
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 60   :             _r = (_UINT32_T)(t % v);

  00e73	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00e76	48 c1 e9 20	 shr	 rcx, 32			; 00000020H

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e7a	8b c2		 mov	 eax, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00e7c	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e7e	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00e82	48 0b c1	 or	 rax, rcx
  00e85	41 8b cb	 mov	 ecx, r11d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 63   :             q3 = (_UINT32_T)(t / v);

  00e88	48 f7 f3	 div	 rbx
  00e8b	4c 8b c0	 mov	 r8, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e8e	8b c2		 mov	 eax, edx
  00e90	48 c1 e0 20	 shl	 rax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00e94	33 d2		 xor	 edx, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e96	48 0b c1	 or	 rax, rcx
  00e99	41 8b c8	 mov	 ecx, r8d
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00e9c	48 f7 f3	 div	 rbx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00e9f	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00ea3	44 8b d2	 mov	 r10d, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00ea6	8b c0		 mov	 eax, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 68   :             *r = (_UINT32_T)(t % v);

  00ea8	4c 89 55 e0	 mov	 QWORD PTR RR$25[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00eac	48 0b c8	 or	 rcx, rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 329  :             return (q);

  00eaf	eb 19		 jmp	 SHORT $LN677@DivRem_X_1
$LN676@DivRem_X_1:

; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             _UINT64_T q = DivRem::_DIVREM_UNIT_nW(u_hi, u_lo, v, r);

  00eb1	4c 8d 4d e0	 lea	 r9, QWORD PTR RR$25[rbp-256]
  00eb5	4d 8b c6	 mov	 r8, r14
  00eb8	49 8b d3	 mov	 rdx, r11
  00ebb	49 8b ca	 mov	 rcx, r10
  00ebe	e8 00 00 00 00	 call	 ?_DIVREM_UNIT_nW@DivRem@Internal@Core@Math@Palmtree@@YA_K_K00PEA_K@Z ; Palmtree::Math::Core::Internal::DivRem::_DIVREM_UNIT_nW
  00ec3	4c 8b 55 e0	 mov	 r10, QWORD PTR RR$25[rbp-256]
  00ec7	48 8b c8	 mov	 rcx, rax
$LN677@DivRem_X_1:

; 341  :         *q = _DIVREM_UNIT(r, u, v, &RR);

  00eca	48 89 8e 28 ff
	ff ff		 mov	 QWORD PTR [rsi-216], rcx

; 586  :             r = _DIVREM_SINGLE_UNIT(r, up[-28], v, &qp[-28]);

  00ed1	4c 8d 8e 20 ff
	ff ff		 lea	 r9, QWORD PTR [rsi-224]
  00ed8	48 8b 97 20 ff
	ff ff		 mov	 rdx, QWORD PTR [rdi-224]
  00edf	49 8b ca	 mov	 rcx, r10
  00ee2	4d 8b c6	 mov	 r8, r14
  00ee5	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 587  :             r = _DIVREM_SINGLE_UNIT(r, up[-29], v, &qp[-29]);

  00eea	48 8b 97 18 ff
	ff ff		 mov	 rdx, QWORD PTR [rdi-232]
  00ef1	4c 8d 8e 18 ff
	ff ff		 lea	 r9, QWORD PTR [rsi-232]
  00ef8	4d 8b c6	 mov	 r8, r14
  00efb	48 8b c8	 mov	 rcx, rax
  00efe	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 588  :             r = _DIVREM_SINGLE_UNIT(r, up[-30], v, &qp[-30]);

  00f03	48 8b 97 10 ff
	ff ff		 mov	 rdx, QWORD PTR [rdi-240]
  00f0a	4c 8d 8e 10 ff
	ff ff		 lea	 r9, QWORD PTR [rsi-240]
  00f11	4d 8b c6	 mov	 r8, r14
  00f14	48 8b c8	 mov	 rcx, rax
  00f17	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 589  :             r = _DIVREM_SINGLE_UNIT(r, up[-31], v, &qp[-31]);

  00f1c	48 8b 97 08 ff
	ff ff		 mov	 rdx, QWORD PTR [rdi-248]
  00f23	4c 8d 8e 08 ff
	ff ff		 lea	 r9, QWORD PTR [rsi-248]
  00f2a	4d 8b c6	 mov	 r8, r14
  00f2d	48 8b c8	 mov	 rcx, rax
  00f30	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 590  :             up -= 32;

  00f35	48 81 ef 00 01
	00 00		 sub	 rdi, 256		; 00000100H
  00f3c	48 8b c8	 mov	 rcx, rax

; 591  :             qp -= 32;

  00f3f	48 81 ee 00 01
	00 00		 sub	 rsi, 256		; 00000100H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  00f46	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00f4b	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 556  :         while (count != 0)

  00f53	49 83 ec 01	 sub	 r12, 1
  00f57	0f 85 f8 f0 ff
	ff		 jne	 $LL4@DivRem_X_1
  00f5d	4c 8b bc 24 f0
	00 00 00	 mov	 r15, QWORD PTR [rsp+240]
  00f65	48 8b 9c 24 40
	01 00 00	 mov	 rbx, QWORD PTR [rsp+320]
$LN5@DivRem_X_1:

; 592  :             --count;
; 593  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 594  :             if (sizeof(r) == sizeof(_UINT64_T))
; 595  :                 AddToDIV64Counter(32);
; 596  :             else
; 597  :                 AddToDIV32Counter(32);
; 598  : #endif
; 599  :         }
; 600  : 
; 601  :         if (u_count & 0x10)

  00f6d	4c 8b a4 24 00
	01 00 00	 mov	 r12, QWORD PTR [rsp+256]
  00f75	41 f6 c5 10	 test	 r13b, 16
  00f79	0f 84 43 01 00
	00		 je	 $LN11@DivRem_X_1

; 602  :         {
; 603  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &qp[-0]);

  00f7f	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00f82	4c 8b ce	 mov	 r9, rsi
  00f85	4d 8b c6	 mov	 r8, r14
  00f88	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 604  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &qp[-1]);

  00f8d	48 8b 57 f8	 mov	 rdx, QWORD PTR [rdi-8]
  00f91	4c 8d 4e f8	 lea	 r9, QWORD PTR [rsi-8]
  00f95	4d 8b c6	 mov	 r8, r14
  00f98	48 8b c8	 mov	 rcx, rax
  00f9b	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 605  :             r = _DIVREM_SINGLE_UNIT(r, up[-2], v, &qp[-2]);

  00fa0	48 8b 57 f0	 mov	 rdx, QWORD PTR [rdi-16]
  00fa4	4c 8d 4e f0	 lea	 r9, QWORD PTR [rsi-16]
  00fa8	4d 8b c6	 mov	 r8, r14
  00fab	48 8b c8	 mov	 rcx, rax
  00fae	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 606  :             r = _DIVREM_SINGLE_UNIT(r, up[-3], v, &qp[-3]);

  00fb3	48 8b 57 e8	 mov	 rdx, QWORD PTR [rdi-24]
  00fb7	4c 8d 4e e8	 lea	 r9, QWORD PTR [rsi-24]
  00fbb	4d 8b c6	 mov	 r8, r14
  00fbe	48 8b c8	 mov	 rcx, rax
  00fc1	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 607  :             r = _DIVREM_SINGLE_UNIT(r, up[-4], v, &qp[-4]);

  00fc6	48 8b 57 e0	 mov	 rdx, QWORD PTR [rdi-32]
  00fca	4c 8d 4e e0	 lea	 r9, QWORD PTR [rsi-32]
  00fce	4d 8b c6	 mov	 r8, r14
  00fd1	48 8b c8	 mov	 rcx, rax
  00fd4	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 608  :             r = _DIVREM_SINGLE_UNIT(r, up[-5], v, &qp[-5]);

  00fd9	48 8b 57 d8	 mov	 rdx, QWORD PTR [rdi-40]
  00fdd	4c 8d 4e d8	 lea	 r9, QWORD PTR [rsi-40]
  00fe1	4d 8b c6	 mov	 r8, r14
  00fe4	48 8b c8	 mov	 rcx, rax
  00fe7	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 609  :             r = _DIVREM_SINGLE_UNIT(r, up[-6], v, &qp[-6]);

  00fec	48 8b 57 d0	 mov	 rdx, QWORD PTR [rdi-48]
  00ff0	4c 8d 4e d0	 lea	 r9, QWORD PTR [rsi-48]
  00ff4	4d 8b c6	 mov	 r8, r14
  00ff7	48 8b c8	 mov	 rcx, rax
  00ffa	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 610  :             r = _DIVREM_SINGLE_UNIT(r, up[-7], v, &qp[-7]);

  00fff	48 8b 57 c8	 mov	 rdx, QWORD PTR [rdi-56]
  01003	4c 8d 4e c8	 lea	 r9, QWORD PTR [rsi-56]
  01007	4d 8b c6	 mov	 r8, r14
  0100a	48 8b c8	 mov	 rcx, rax
  0100d	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 611  :             r = _DIVREM_SINGLE_UNIT(r, up[-8], v, &qp[-8]);

  01012	48 8b 57 c0	 mov	 rdx, QWORD PTR [rdi-64]
  01016	4c 8d 4e c0	 lea	 r9, QWORD PTR [rsi-64]
  0101a	4d 8b c6	 mov	 r8, r14
  0101d	48 8b c8	 mov	 rcx, rax
  01020	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 612  :             r = _DIVREM_SINGLE_UNIT(r, up[-9], v, &qp[-9]);

  01025	48 8b 57 b8	 mov	 rdx, QWORD PTR [rdi-72]
  01029	4c 8d 4e b8	 lea	 r9, QWORD PTR [rsi-72]
  0102d	4d 8b c6	 mov	 r8, r14
  01030	48 8b c8	 mov	 rcx, rax
  01033	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 613  :             r = _DIVREM_SINGLE_UNIT(r, up[-10], v, &qp[-10]);

  01038	48 8b 57 b0	 mov	 rdx, QWORD PTR [rdi-80]
  0103c	4c 8d 4e b0	 lea	 r9, QWORD PTR [rsi-80]
  01040	4d 8b c6	 mov	 r8, r14
  01043	48 8b c8	 mov	 rcx, rax
  01046	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 614  :             r = _DIVREM_SINGLE_UNIT(r, up[-11], v, &qp[-11]);

  0104b	48 8b 57 a8	 mov	 rdx, QWORD PTR [rdi-88]
  0104f	4c 8d 4e a8	 lea	 r9, QWORD PTR [rsi-88]
  01053	4d 8b c6	 mov	 r8, r14
  01056	48 8b c8	 mov	 rcx, rax
  01059	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 615  :             r = _DIVREM_SINGLE_UNIT(r, up[-12], v, &qp[-12]);

  0105e	48 8b 57 a0	 mov	 rdx, QWORD PTR [rdi-96]
  01062	4c 8d 4e a0	 lea	 r9, QWORD PTR [rsi-96]
  01066	4d 8b c6	 mov	 r8, r14
  01069	48 8b c8	 mov	 rcx, rax
  0106c	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 616  :             r = _DIVREM_SINGLE_UNIT(r, up[-13], v, &qp[-13]);

  01071	48 8b 57 98	 mov	 rdx, QWORD PTR [rdi-104]
  01075	4c 8d 4e 98	 lea	 r9, QWORD PTR [rsi-104]
  01079	4d 8b c6	 mov	 r8, r14
  0107c	48 8b c8	 mov	 rcx, rax
  0107f	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 617  :             r = _DIVREM_SINGLE_UNIT(r, up[-14], v, &qp[-14]);

  01084	48 8b 57 90	 mov	 rdx, QWORD PTR [rdi-112]
  01088	4c 8d 4e 90	 lea	 r9, QWORD PTR [rsi-112]
  0108c	4d 8b c6	 mov	 r8, r14
  0108f	48 8b c8	 mov	 rcx, rax
  01092	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 618  :             r = _DIVREM_SINGLE_UNIT(r, up[-15], v, &qp[-15]);

  01097	48 8b 57 88	 mov	 rdx, QWORD PTR [rdi-120]
  0109b	4c 8d 4e 88	 lea	 r9, QWORD PTR [rsi-120]
  0109f	4d 8b c6	 mov	 r8, r14
  010a2	48 8b c8	 mov	 rcx, rax
  010a5	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT
  010aa	48 8b c8	 mov	 rcx, rax

; 619  :             up -= 16;

  010ad	48 83 c7 80	 add	 rdi, -128		; ffffffffffffff80H

; 620  :             qp -= 16;

  010b1	48 83 c6 80	 add	 rsi, -128		; ffffffffffffff80H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  010b5	b8 10 00 00 00	 mov	 eax, 16
  010ba	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
$LN11@DivRem_X_1:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 629  :         if (u_count & 0x8)

  010c2	41 f6 c5 08	 test	 r13b, 8
  010c6	0f 84 ab 00 00
	00		 je	 $LN14@DivRem_X_1

; 630  :         {
; 631  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &qp[-0]);

  010cc	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  010cf	4c 8b ce	 mov	 r9, rsi
  010d2	4d 8b c6	 mov	 r8, r14
  010d5	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 632  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &qp[-1]);

  010da	48 8b 57 f8	 mov	 rdx, QWORD PTR [rdi-8]
  010de	4c 8d 4e f8	 lea	 r9, QWORD PTR [rsi-8]
  010e2	4d 8b c6	 mov	 r8, r14
  010e5	48 8b c8	 mov	 rcx, rax
  010e8	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 633  :             r = _DIVREM_SINGLE_UNIT(r, up[-2], v, &qp[-2]);

  010ed	48 8b 57 f0	 mov	 rdx, QWORD PTR [rdi-16]
  010f1	4c 8d 4e f0	 lea	 r9, QWORD PTR [rsi-16]
  010f5	4d 8b c6	 mov	 r8, r14
  010f8	48 8b c8	 mov	 rcx, rax
  010fb	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 634  :             r = _DIVREM_SINGLE_UNIT(r, up[-3], v, &qp[-3]);

  01100	48 8b 57 e8	 mov	 rdx, QWORD PTR [rdi-24]
  01104	4c 8d 4e e8	 lea	 r9, QWORD PTR [rsi-24]
  01108	4d 8b c6	 mov	 r8, r14
  0110b	48 8b c8	 mov	 rcx, rax
  0110e	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 635  :             r = _DIVREM_SINGLE_UNIT(r, up[-4], v, &qp[-4]);

  01113	48 8b 57 e0	 mov	 rdx, QWORD PTR [rdi-32]
  01117	4c 8d 4e e0	 lea	 r9, QWORD PTR [rsi-32]
  0111b	4d 8b c6	 mov	 r8, r14
  0111e	48 8b c8	 mov	 rcx, rax
  01121	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 636  :             r = _DIVREM_SINGLE_UNIT(r, up[-5], v, &qp[-5]);

  01126	48 8b 57 d8	 mov	 rdx, QWORD PTR [rdi-40]
  0112a	4c 8d 4e d8	 lea	 r9, QWORD PTR [rsi-40]
  0112e	4d 8b c6	 mov	 r8, r14
  01131	48 8b c8	 mov	 rcx, rax
  01134	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 637  :             r = _DIVREM_SINGLE_UNIT(r, up[-6], v, &qp[-6]);

  01139	48 8b 57 d0	 mov	 rdx, QWORD PTR [rdi-48]
  0113d	4c 8d 4e d0	 lea	 r9, QWORD PTR [rsi-48]
  01141	4d 8b c6	 mov	 r8, r14
  01144	48 8b c8	 mov	 rcx, rax
  01147	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 638  :             r = _DIVREM_SINGLE_UNIT(r, up[-7], v, &qp[-7]);

  0114c	48 8b 57 c8	 mov	 rdx, QWORD PTR [rdi-56]
  01150	4c 8d 4e c8	 lea	 r9, QWORD PTR [rsi-56]
  01154	4d 8b c6	 mov	 r8, r14
  01157	48 8b c8	 mov	 rcx, rax
  0115a	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 639  :             up -= 8;

  0115f	48 83 ef 40	 sub	 rdi, 64			; 00000040H
  01163	48 8b c8	 mov	 rcx, rax

; 640  :             qp -= 8;

  01166	48 83 ee 40	 sub	 rsi, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  0116a	b8 08 00 00 00	 mov	 eax, 8
  0116f	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
$LN14@DivRem_X_1:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 649  :         if (u_count & 0x4)

  01177	41 f6 c5 04	 test	 r13b, 4
  0117b	74 5f		 je	 SHORT $LN17@DivRem_X_1

; 650  :         {
; 651  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &qp[-0]);

  0117d	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  01180	4c 8b ce	 mov	 r9, rsi
  01183	4d 8b c6	 mov	 r8, r14
  01186	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 652  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &qp[-1]);

  0118b	48 8b 57 f8	 mov	 rdx, QWORD PTR [rdi-8]
  0118f	4c 8d 4e f8	 lea	 r9, QWORD PTR [rsi-8]
  01193	4d 8b c6	 mov	 r8, r14
  01196	48 8b c8	 mov	 rcx, rax
  01199	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 653  :             r = _DIVREM_SINGLE_UNIT(r, up[-2], v, &qp[-2]);

  0119e	48 8b 57 f0	 mov	 rdx, QWORD PTR [rdi-16]
  011a2	4c 8d 4e f0	 lea	 r9, QWORD PTR [rsi-16]
  011a6	4d 8b c6	 mov	 r8, r14
  011a9	48 8b c8	 mov	 rcx, rax
  011ac	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 654  :             r = _DIVREM_SINGLE_UNIT(r, up[-3], v, &qp[-3]);

  011b1	48 8b 57 e8	 mov	 rdx, QWORD PTR [rdi-24]
  011b5	4c 8d 4e e8	 lea	 r9, QWORD PTR [rsi-24]
  011b9	4d 8b c6	 mov	 r8, r14
  011bc	48 8b c8	 mov	 rcx, rax
  011bf	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 655  :             up -= 4;

  011c4	48 83 ef 20	 sub	 rdi, 32			; 00000020H
  011c8	48 8b c8	 mov	 rcx, rax

; 656  :             qp -= 4;

  011cb	48 83 ee 20	 sub	 rsi, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  011cf	b8 04 00 00 00	 mov	 eax, 4
  011d4	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
$LN17@DivRem_X_1:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 665  :         if (u_count & 0x2)

  011dc	41 f6 c5 02	 test	 r13b, 2
  011e0	74 39		 je	 SHORT $LN20@DivRem_X_1

; 666  :         {
; 667  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &qp[-0]);

  011e2	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  011e5	4c 8b ce	 mov	 r9, rsi
  011e8	4d 8b c6	 mov	 r8, r14
  011eb	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 668  :             r = _DIVREM_SINGLE_UNIT(r, up[-1], v, &qp[-1]);

  011f0	48 8b 57 f8	 mov	 rdx, QWORD PTR [rdi-8]
  011f4	4c 8d 4e f8	 lea	 r9, QWORD PTR [rsi-8]
  011f8	4d 8b c6	 mov	 r8, r14
  011fb	48 8b c8	 mov	 rcx, rax
  011fe	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT

; 669  :             up -= 2;

  01203	48 83 ef 10	 sub	 rdi, 16
  01207	48 8b c8	 mov	 rcx, rax

; 670  :             qp -= 2;

  0120a	48 83 ee 10	 sub	 rsi, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 348  :         _InterlockedExchangeAdd(&statistics_info.COUNT_DIV64, value);

  0120e	b8 02 00 00 00	 mov	 eax, 2
  01213	f0 0f c1 05 08
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8, eax
$LN20@DivRem_X_1:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 679  :         if (u_count & 0x1)

  0121b	41 f6 c5 01	 test	 r13b, 1
  0121f	4c 8b ac 24 f8
	00 00 00	 mov	 r13, QWORD PTR [rsp+248]
  01227	74 29		 je	 SHORT $LN724@DivRem_X_1

; 680  :         {
; 681  :             r = _DIVREM_SINGLE_UNIT(r, up[-0], v, &qp[-0]);

  01229	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  0122c	4c 8b ce	 mov	 r9, rsi
  0122f	4d 8b c6	 mov	 r8, r14
  01232	e8 00 00 00 00	 call	 _DIVREM_SINGLE_UNIT
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 325  :         _InterlockedIncrement(&statistics_info.COUNT_DIV64);

  01237	f0 ff 05 08 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_divrem.cpp

; 692  :         *r_buf = r;

  0123e	48 8b 4d 50	 mov	 rcx, QWORD PTR r_buf$[rbp-256]
  01242	48 89 01	 mov	 QWORD PTR [rcx], rax

; 693  :     }

  01245	48 81 c4 08 01
	00 00		 add	 rsp, 264		; 00000108H
  0124c	41 5e		 pop	 r14
  0124e	5f		 pop	 rdi
  0124f	5e		 pop	 rsi
  01250	5d		 pop	 rbp
  01251	c3		 ret	 0
$LN724@DivRem_X_1:

; 692  :         *r_buf = r;

  01252	48 8b 45 50	 mov	 rax, QWORD PTR r_buf$[rbp-256]
  01256	48 89 08	 mov	 QWORD PTR [rax], rcx

; 693  :     }

  01259	48 81 c4 08 01
	00 00		 add	 rsp, 264		; 00000108H
  01260	41 5e		 pop	 r14
  01262	5f		 pop	 rdi
  01263	5e		 pop	 rsi
  01264	5d		 pop	 rbp
  01265	c3		 ret	 0
?DivRem_X_1W@Internal@Core@Math@Palmtree@@YAXPEA_K_K100@Z ENDP ; Palmtree::Math::Core::Internal::DivRem_X_1W
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 295  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT

; 295  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 296  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 291  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 291  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 292  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 286  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	c7 41 18 00 ff
	ff ff		 mov	 DWORD PTR [rcx+24], -256 ; ffffffffffffff00H

; 57   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 58   :             _data = data;

  0003a	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8

; 286  :         {

  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax

; 287  :         }

  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 181  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GDivisionByZeroException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException, COMDAT

; 181  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 182  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1DivisionByZeroException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::~DivisionByZeroException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException, COMDAT

; 177  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 177  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 178  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z PROC ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException, COMDAT

; 172  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 48   :         {
; 49   :             _code = code;

  0002f	c7 41 18 fb ff
	ff ff		 mov	 DWORD PTR [rcx+24], -5

; 50   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 51   :             _data = nullptr;

  0003a	48 c7 41 28 00
	00 00 00	 mov	 QWORD PTR [rcx+40], 0

; 172  :         {

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7DivisionByZeroException@Internal@Core@Math@Palmtree@@6B@
  00049	48 89 01	 mov	 QWORD PTR [rcx], rax

; 173  :         }

  0004c	48 8b c1	 mov	 rax, rcx
  0004f	48 83 c4 18	 add	 rsp, 24
  00053	c3		 ret	 0
??0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z ENDP ; Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0DivisionByZeroException@Internal@Core@Math@Palmtree@@QEAA@PEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::DivisionByZeroException::DivisionByZeroException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 124  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT

; 124  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 125  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 120  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 120  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 121  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 115  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	c7 41 18 fe ff
	ff ff		 mov	 DWORD PTR [rcx+24], -2

; 57   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 58   :             _data = data;

  0003a	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8

; 115  :         {

  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax

; 116  :         }

  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
$LN12:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 70   :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00031	48 83 c1 08	 add	 rcx, 8
  00035	e8 00 00 00 00	 call	 __std_exception_destroy
  0003a	90		 npad	 1
  0003b	f6 c3 01	 test	 bl, 1
  0003e	74 0e		 je	 SHORT $LN9@scalar
  00040	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00045	48 8b cf	 mov	 rcx, rdi
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1
$LN9@scalar:
  0004e	48 8b c7	 mov	 rax, rdi
  00051	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT

; 70   :         {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00026	48 83 c1 08	 add	 rcx, 8
  0002a	e8 00 00 00 00	 call	 __std_exception_destroy
  0002f	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 71   :         }

  00030	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00034	c3		 ret	 0
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 62   :         Exception(const Exception& p) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 67   :         }

  00045	48 8b c1	 mov	 rax, rcx
  00048	48 83 c4 18	 add	 rsp, 24
  0004c	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 57   :             _message = message;

  00032	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 58   :             _data = data;

  00036	4c 89 49 28	 mov	 QWORD PTR [rcx+40], r9

; 59   :         }

  0003a	48 8b c1	 mov	 rax, rcx
  0003d	48 83 c4 18	 add	 rsp, 24
  00041	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 48   :         {
; 49   :             _code = code;

  0002f	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 50   :             _message = message;

  00032	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 51   :             _data = nullptr;

  00036	48 c7 41 28 00
	00 00 00	 mov	 QWORD PTR [rcx+40], 0

; 52   :         }

  0003e	48 8b c1	 mov	 rax, rcx
  00041	48 83 c4 18	 add	 rsp, 24
  00045	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	8b da		 mov	 ebx, edx
  00016	48 8b f9	 mov	 rdi, rcx

; 85   :     {

  00019	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00020	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00023	48 83 c1 08	 add	 rcx, 8
  00027	e8 00 00 00 00	 call	 __std_exception_destroy
  0002c	90		 npad	 1
  0002d	f6 c3 01	 test	 bl, 1
  00030	74 0e		 je	 SHORT $LN6@scalar
  00032	ba 18 00 00 00	 mov	 edx, 24
  00037	48 8b cf	 mov	 rcx, rdi
  0003a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0003f	90		 npad	 1
$LN6@scalar:
  00040	48 8b c7	 mov	 rax, rdi
  00043	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0000b	48 85 d2	 test	 rdx, rdx
  0000e	48 0f 45 c2	 cmovne	 rax, rdx

; 92   :     }

  00012	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN5:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 __std_exception_destroy
  00020	90		 npad	 1

; 87   :     }

  00021	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00025	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0exception@std@@QEAA@XZ PROC				; std::exception::exception, COMDAT

; 50   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	33 c0		 xor	 eax, eax
  0000c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00010	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 51   :     }

  00014	48 8b c1	 mov	 rax, rcx
  00017	c3		 ret	 0
??0exception@std@@QEAA@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
