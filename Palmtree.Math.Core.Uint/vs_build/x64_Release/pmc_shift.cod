; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp
PUBLIC	?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp
PUBLIC	?Initialize_Shift@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Shift
PUBLIC	?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I
PUBLIC	?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_13ICFKHAEN@?$AAu@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::DuplicateNumber
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A:BYTE ; Palmtree::Math::Core::Internal::number_zero
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+38
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+78
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel $LN8
	DD	imagerel $LN8+66
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN8
	DD	imagerel $LN8+77
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+53
	DD	imagerel $unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+92
	DD	imagerel $unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD imagerel $LN115
	DD	imagerel $LN115+92
	DD	imagerel $unwind$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD imagerel $LN115+92
	DD	imagerel $LN115+1092
	DD	imagerel $chain$0$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD imagerel $LN115+1092
	DD	imagerel $LN115+2012
	DD	imagerel $chain$1$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD imagerel $LN28
	DD	imagerel $LN28+67
	DD	imagerel $unwind$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD imagerel $LN28+67
	DD	imagerel $LN28+1102
	DD	imagerel $chain$0$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD imagerel $LN28+1102
	DD	imagerel $LN28+2010
	DD	imagerel $chain$1$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD imagerel $LN22
	DD	imagerel $LN22+195
	DD	imagerel $unwind$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD imagerel $LN22
	DD	imagerel $LN22+195
	DD	imagerel $unwind$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_COPY_MEMORY_UNIT DD imagerel _COPY_MEMORY_UNIT
	DD	imagerel _COPY_MEMORY_UNIT+33
	DD	imagerel $unwind$_COPY_MEMORY_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ZERO_MEMORY_UNIT DD imagerel _ZERO_MEMORY_UNIT
	DD	imagerel _ZERO_MEMORY_UNIT+22
	DD	imagerel $unwind$_ZERO_MEMORY_UNIT
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel ?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	imagerel ?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+214
	DD	imagerel $unwind$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel ?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	imagerel ?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+206
	DD	imagerel $unwind$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 01H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13ICFKHAEN@?$AAu@
CONST	SEGMENT
??_C@_13ICFKHAEN@?$AAu@ DB 'u', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DQ	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DQ	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DQ	FLAT:??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel ?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+94
	DD	00H
	DD	imagerel ?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+177
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 061911H
	DD	0f6419H
	DD	0e3414H
	DD	07002b206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel ?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+103
	DD	00H
	DD	imagerel ?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+185
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 061911H
	DD	0f6419H
	DD	0e3414H
	DD	07002b206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ZERO_MEMORY_UNIT DD 020501H
	DD	017405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_COPY_MEMORY_UNIT DD 040a01H
	DD	02740aH
	DD	016405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD imagerel ?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z+52
	DD	00H
	DD	imagerel ?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z+123
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD 041a11H
	DD	012341aH
	DD	07002f209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD imagerel ?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z+52
	DD	00H
	DD	imagerel ?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z+123
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z DD 041a11H
	DD	012341aH
	DD	07002f209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD 021H
	DD	imagerel $LN28
	DD	imagerel $LN28+67
	DD	imagerel $unwind$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD 020521H
	DD	025405H
	DD	imagerel $LN28
	DD	imagerel $LN28+67
	DD	imagerel $unwind$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD 071101H
	DD	057411H
	DD	046411H
	DD	033411H
	DD	0e011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD 021H
	DD	imagerel $LN115
	DD	imagerel $LN115+92
	DD	imagerel $unwind$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD 020521H
	DD	03f405H
	DD	imagerel $LN115
	DD	imagerel $LN115+92
	DD	imagerel $unwind$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z DD 081201H
	DD	066412H
	DD	055412H
	DD	043412H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+37
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+62
	DD	01H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+72
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+37
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+62
	DD	01H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+72
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+58
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gexception@std@@UEAAPEAXI@Z DD imagerel ??_Gexception@std@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_Gexception@std@@UEAAPEAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_Gexception@std@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_Gexception@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
;	COMDAT ?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
_TEXT	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
n$ = 120
?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I_Imp, COMDAT

; 332  :     {

  00000	40 57		 push	 rdi
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 70	 mov	 QWORD PTR [rsp+112], rbx
  00014	48 89 74 24 78	 mov	 QWORD PTR [rsp+120], rsi
  00019	8b da		 mov	 ebx, edx
  0001b	48 8b f1	 mov	 rsi, rcx

; 333  :         if (u->IS_ZERO)

  0001e	f6 41 08 01	 test	 BYTE PTR [rcx+8], 1
  00022	74 17		 je	 SHORT $LN2@PMC_LeftSh

; 334  :             return (&number_zero);

  00024	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 348  :         }
; 349  :     }

  0002b	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  00030	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  00035	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
$LN2@PMC_LeftSh:

; 335  :         else if (n == 0)

  0003b	85 d2		 test	 edx, edx
  0003d	75 14		 jne	 SHORT $LN4@PMC_LeftSh

; 348  :         }
; 349  :     }

  0003f	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  00044	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  00049	48 83 c4 60	 add	 rsp, 96			; 00000060H
  0004d	5f		 pop	 rdi

; 336  :             return (DuplicateNumber(u));

  0004e	e9 00 00 00 00	 jmp	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
$LN4@PMC_LeftSh:

; 337  :         else
; 338  :         {
; 339  :             ResourceHolderUINT root;

  00053	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  00058	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0005d	90		 npad	 1

; 340  :             __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  0005e	48 8b 56 20	 mov	 rdx, QWORD PTR [rsi+32]

; 341  :             __UNIT_TYPE w_bit_count = u_bit_count + n;

  00062	48 03 d3	 add	 rdx, rbx

; 342  :             NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00065	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  0006a	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  0006f	48 8b f8	 mov	 rdi, rax

; 343  :             LeftShift_Imp(u->BLOCK, u->UNIT_WORD_COUNT, n, w->BLOCK, FALSE);

  00072	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0007a	4c 8b 48 40	 mov	 r9, QWORD PTR [rax+64]
  0007e	4c 8b c3	 mov	 r8, rbx
  00081	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  00085	48 8b 4e 40	 mov	 rcx, QWORD PTR [rsi+64]
  00089	e8 00 00 00 00	 call	 ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::LeftShift_Imp

; 344  :             root.CheckNumber(w);

  0008e	48 8b d7	 mov	 rdx, rdi
  00091	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  00096	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 345  :             CommitNumber(w);

  0009b	48 8b cf	 mov	 rcx, rdi
  0009e	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 346  :             root.UnlinkNumber(w);

  000a3	48 8b d7	 mov	 rdx, rdi
  000a6	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  000ab	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  000b0	90		 npad	 1

; 347  :             return (w);

  000b1	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  000b6	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000bb	48 8b c7	 mov	 rax, rdi

; 348  :         }
; 349  :     }

  000be	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  000c3	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  000c8	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000cc	5f		 pop	 rdi
  000cd	c3		 ret	 0
?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
n$ = 120
?dtor$0@?0??PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_LeftShift_X_I_Imp'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_LeftShift_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
n$ = 120
?dtor$0@?0??PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_LeftShift_X_I_Imp'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_LeftShift_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
;	COMDAT ?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
_TEXT	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
n$ = 120
?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I_Imp, COMDAT

; 307  :     {

  00000	40 57		 push	 rdi
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 70	 mov	 QWORD PTR [rsp+112], rbx
  00014	48 89 74 24 78	 mov	 QWORD PTR [rsp+120], rsi
  00019	48 8b f9	 mov	 rdi, rcx

; 308  :         if (u->IS_ZERO)

  0001c	f6 41 08 01	 test	 BYTE PTR [rcx+8], 1
  00020	74 17		 je	 SHORT $LN2@PMC_RightS
$LN10@PMC_RightS:

; 327  :             }
; 328  :         }
; 329  :     }

  00022	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00029	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  0002e	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  00033	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
$LN2@PMC_RightS:

; 309  :             return (&number_zero);
; 310  :         else if (n == 0)

  00039	85 d2		 test	 edx, edx
  0003b	75 14		 jne	 SHORT $LN4@PMC_RightS

; 327  :             }
; 328  :         }
; 329  :     }

  0003d	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  00042	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  00047	48 83 c4 60	 add	 rsp, 96			; 00000060H
  0004b	5f		 pop	 rdi

; 311  :             return (DuplicateNumber(u));

  0004c	e9 00 00 00 00	 jmp	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
$LN4@PMC_RightS:

; 312  :         else
; 313  :         {
; 314  :             __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00051	48 8b 59 20	 mov	 rbx, QWORD PTR [rcx+32]

; 315  :             if (u_bit_count <= n)

  00055	8b f2		 mov	 esi, edx
  00057	48 3b de	 cmp	 rbx, rsi
  0005a	76 c6		 jbe	 SHORT $LN10@PMC_RightS

; 316  :                 return (&number_zero);
; 317  :             else
; 318  :             {
; 319  :                 ResourceHolderUINT root;

  0005c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  00061	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00066	90		 npad	 1

; 320  :                 __UNIT_TYPE w_bit_count = u_bit_count - n;

  00067	48 2b de	 sub	 rbx, rsi

; 321  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0006a	48 8b d3	 mov	 rdx, rbx
  0006d	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  00072	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00077	48 8b d8	 mov	 rbx, rax

; 322  :                 RightShift_Imp(u->BLOCK, u->UNIT_WORD_COUNT, n, w->BLOCK, FALSE);

  0007a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00082	4c 8b 48 40	 mov	 r9, QWORD PTR [rax+64]
  00086	44 8b c6	 mov	 r8d, esi
  00089	48 8b 57 18	 mov	 rdx, QWORD PTR [rdi+24]
  0008d	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00091	e8 00 00 00 00	 call	 ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ; Palmtree::Math::Core::Internal::RightShift_Imp

; 323  :                 root.CheckNumber(w);

  00096	48 8b d3	 mov	 rdx, rbx
  00099	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  0009e	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 324  :                 CommitNumber(w);

  000a3	48 8b cb	 mov	 rcx, rbx
  000a6	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 325  :                 root.UnlinkNumber(w);

  000ab	48 8b d3	 mov	 rdx, rbx
  000ae	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  000b3	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  000b8	90		 npad	 1

; 326  :                 return (w);

  000b9	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  000be	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000c3	48 8b c3	 mov	 rax, rbx

; 327  :             }
; 328  :         }
; 329  :     }

  000c6	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  000cb	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  000d0	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
n$ = 120
?dtor$0@?0??PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_RightShift_X_I_Imp'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_RightShift_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
n$ = 120
?dtor$0@?0??PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_RightShift_X_I_Imp'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_RightShift_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT GET_ABS_32
_TEXT	SEGMENT
u$ = 8
sign$ = 16
GET_ABS_32 PROC						; COMDAT

; 583  :             if (u > 0)

  00000	85 c9		 test	 ecx, ecx
  00002	7e 06		 jle	 SHORT $LN9@GET_ABS_32

; 584  :             {
; 585  :                 *sign = 1;

  00004	c6 02 01	 mov	 BYTE PTR [rdx], 1

; 586  :                 return ((_UINT32_T)u);

  00007	8b c1		 mov	 eax, ecx

; 597  :             }
; 598  :         }

  00009	c3		 ret	 0
$LN9@GET_ABS_32:

; 587  :             }
; 588  :             else if (u == 0)

  0000a	75 06		 jne	 SHORT $LN4@GET_ABS_32

; 589  :             {
; 590  :                 *sign = 0;

  0000c	c6 02 00	 mov	 BYTE PTR [rdx], 0

; 591  :                 return (0);

  0000f	33 c0		 xor	 eax, eax

; 597  :             }
; 598  :         }

  00011	c3		 ret	 0
$LN4@GET_ABS_32:

; 592  :             }
; 593  :             else
; 594  :             {
; 595  :                 *sign = -1;
; 596  :                 return ((_UINT32_T)u == 0x80000000U ? 0x80000000U : (_UINT32_T)-u);

  00012	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00017	c6 02 ff	 mov	 BYTE PTR [rdx], -1
  0001a	3b c8		 cmp	 ecx, eax
  0001c	74 04		 je	 SHORT $LN8@GET_ABS_32
  0001e	8b c1		 mov	 eax, ecx
  00020	f7 d8		 neg	 eax
$LN8@GET_ABS_32:

; 597  :             }
; 598  :         }

  00022	c3		 ret	 0
GET_ABS_32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ZERO_MEMORY_UNIT
_TEXT	SEGMENT
d$ = 8
count$ = 16
_ZERO_MEMORY_UNIT PROC					; COMDAT

; 96   :         {

  00000	48 89 7c 24 08	 mov	 QWORD PTR [rsp+8], rdi

; 97   : #ifdef _M_IX86
; 98   :             __stosd((unsigned long*)d, 0, (unsigned long)count);
; 99   : #elif defined(_M_X64)
; 100  :             __stosq(d, 0, count);

  00005	48 8b f9	 mov	 rdi, rcx
  00008	33 c0		 xor	 eax, eax
  0000a	48 8b ca	 mov	 rcx, rdx
  0000d	f3 48 ab	 rep stosq

; 101  : #else
; 102  : #error unknown platform
; 103  : #endif
; 104  :         }

  00010	48 8b 7c 24 08	 mov	 rdi, QWORD PTR [rsp+8]
  00015	c3		 ret	 0
_ZERO_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _COPY_MEMORY_UNIT
_TEXT	SEGMENT
d$ = 8
s$ = 16
count$ = 24
_COPY_MEMORY_UNIT PROC					; COMDAT

; 63   :         {

  00000	48 89 74 24 08	 mov	 QWORD PTR [rsp+8], rsi
  00005	48 89 7c 24 10	 mov	 QWORD PTR [rsp+16], rdi

; 64   : #ifdef _M_IX86
; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);
; 66   : #elif defined(_M_X64)
; 67   :             __movsq(d, s, count);

  0000a	48 8b f9	 mov	 rdi, rcx
  0000d	48 8b f2	 mov	 rsi, rdx
  00010	49 8b c8	 mov	 rcx, r8
  00013	f3 48 a5	 rep movsq

; 68   : #else
; 69   : #error unknown platform
; 70   : #endif
; 71   :         }

  00016	48 8b 74 24 08	 mov	 rsi, QWORD PTR [rsp+8]
  0001b	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  00020	c3		 ret	 0
_COPY_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
;	COMDAT ?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
_TEXT	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
n$ = 152
?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z PROC ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I, COMDAT

; 375  :     {

$LN22:
  00000	40 57		 push	 rdi
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rbx
  0001a	8b da		 mov	 ebx, edx
  0001c	48 8b f9	 mov	 rdi, rcx

; 376  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(n) * 8)
; 377  :         {
; 378  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 379  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_add.cpp;PMC_LeftShift_X_I;1");
; 380  :         }
; 381  :         if (u == nullptr)

  0001f	48 85 c9	 test	 rcx, rcx
  00022	74 75		 je	 SHORT $LN20@PMC_LeftSh

; 383  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 384  :         CheckNumber(nu);

  00024	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 385  :         ResourceHolderUINT root;

  00029	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0002e	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00033	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 583  :             if (u > 0)

  00034	85 db		 test	 ebx, ebx
  00036	7f 04		 jg	 SHORT $LN16@PMC_LeftSh

; 584  :             {
; 585  :                 *sign = 1;
; 586  :                 return ((_UINT32_T)u);
; 587  :             }
; 588  :             else if (u == 0)

  00038	75 0e		 jne	 SHORT $LN11@PMC_LeftSh

; 589  :             {
; 590  :                 *sign = 0;
; 591  :                 return (0);

  0003a	33 db		 xor	 ebx, ebx
$LN16@PMC_LeftSh:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp

; 388  :         NUMBER_HEADER* w = n_sign >= 0 ? PMC_LeftShift_X_I_Imp(nu, n_abs) : PMC_RightShift_X_I_Imp(nu, n_abs);

  0003c	8b d3		 mov	 edx, ebx
  0003e	48 8b cf	 mov	 rcx, rdi
  00041	e8 00 00 00 00	 call	 ?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I_Imp
  00046	eb 15		 jmp	 SHORT $LN18@PMC_LeftSh
$LN11@PMC_LeftSh:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 596  :                 return ((_UINT32_T)u == 0x80000000U ? 0x80000000U : (_UINT32_T)-u);

  00048	ba 00 00 00 80	 mov	 edx, -2147483648	; 80000000H
  0004d	3b da		 cmp	 ebx, edx
  0004f	74 04		 je	 SHORT $LN5@PMC_LeftSh
  00051	8b d3		 mov	 edx, ebx
  00053	f7 da		 neg	 edx
$LN5@PMC_LeftSh:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp

; 388  :         NUMBER_HEADER* w = n_sign >= 0 ? PMC_LeftShift_X_I_Imp(nu, n_abs) : PMC_RightShift_X_I_Imp(nu, n_abs);

  00055	48 8b cf	 mov	 rcx, rdi
  00058	e8 00 00 00 00	 call	 ?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I_Imp
$LN18@PMC_LeftSh:

; 389  :         root.HookNumber(w);

  0005d	48 8b d8	 mov	 rbx, rax
  00060	48 8b d0	 mov	 rdx, rax
  00063	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00068	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 390  : #ifdef _DEBUG
; 391  :         CheckNumber(w);
; 392  : #endif
; 393  :         root.UnlinkNumber(w);

  0006d	48 8b d3	 mov	 rdx, rbx
  00070	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00075	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0007a	90		 npad	 1

; 394  :         return ((PMC_HANDLE_UINT)w);

  0007b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00080	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00085	48 8b c3	 mov	 rax, rbx

; 395  :     }

  00088	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR [rsp+144]
  00090	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
$LN20@PMC_LeftSh:

; 382  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  000a7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000ac	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  000b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000b8	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000bd	e8 00 00 00 00	 call	 _CxxThrowException
  000c2	cc		 int	 3
$LN17@PMC_LeftSh:
?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z ENDP ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
n$ = 152
?dtor$0@?0??PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_LeftShift_X_I'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_LeftShift_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
n$ = 152
?dtor$0@?0??PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_LeftShift_X_I'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_LeftShift_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
;	COMDAT ?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z
_TEXT	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
n$ = 152
?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z PROC ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I, COMDAT

; 352  :     {

$LN22:
  00000	40 57		 push	 rdi
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rbx
  0001a	8b da		 mov	 ebx, edx
  0001c	48 8b f9	 mov	 rdi, rcx

; 353  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(n) * 8)
; 354  :         {
; 355  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 356  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_shift.cpp;PMC_RightShift_X_I;1");
; 357  :         }
; 358  :         if (u == nullptr)

  0001f	48 85 c9	 test	 rcx, rcx
  00022	74 75		 je	 SHORT $LN20@PMC_RightS

; 360  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 361  :         CheckNumber(nu);

  00024	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 362  :         ResourceHolderUINT root;

  00029	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0002e	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00033	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 583  :             if (u > 0)

  00034	85 db		 test	 ebx, ebx
  00036	7f 04		 jg	 SHORT $LN16@PMC_RightS

; 584  :             {
; 585  :                 *sign = 1;
; 586  :                 return ((_UINT32_T)u);
; 587  :             }
; 588  :             else if (u == 0)

  00038	75 0e		 jne	 SHORT $LN11@PMC_RightS

; 589  :             {
; 590  :                 *sign = 0;
; 591  :                 return (0);

  0003a	33 db		 xor	 ebx, ebx
$LN16@PMC_RightS:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp

; 365  :         NUMBER_HEADER* w = n_sign >= 0 ? PMC_RightShift_X_I_Imp(nu, n_abs) : PMC_LeftShift_X_I_Imp(nu, n_abs);

  0003c	8b d3		 mov	 edx, ebx
  0003e	48 8b cf	 mov	 rcx, rdi
  00041	e8 00 00 00 00	 call	 ?PMC_RightShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I_Imp
  00046	eb 15		 jmp	 SHORT $LN18@PMC_RightS
$LN11@PMC_RightS:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 596  :                 return ((_UINT32_T)u == 0x80000000U ? 0x80000000U : (_UINT32_T)-u);

  00048	ba 00 00 00 80	 mov	 edx, -2147483648	; 80000000H
  0004d	3b da		 cmp	 ebx, edx
  0004f	74 04		 je	 SHORT $LN5@PMC_RightS
  00051	8b d3		 mov	 edx, ebx
  00053	f7 da		 neg	 edx
$LN5@PMC_RightS:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp

; 365  :         NUMBER_HEADER* w = n_sign >= 0 ? PMC_RightShift_X_I_Imp(nu, n_abs) : PMC_LeftShift_X_I_Imp(nu, n_abs);

  00055	48 8b cf	 mov	 rcx, rdi
  00058	e8 00 00 00 00	 call	 ?PMC_LeftShift_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I_Imp
$LN18@PMC_RightS:

; 366  :         root.HookNumber(w);

  0005d	48 8b d8	 mov	 rbx, rax
  00060	48 8b d0	 mov	 rdx, rax
  00063	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00068	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 367  : #ifdef _DEBUG
; 368  :         CheckNumber(w);
; 369  : #endif
; 370  :         root.UnlinkNumber(w);

  0006d	48 8b d3	 mov	 rdx, rbx
  00070	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00075	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0007a	90		 npad	 1

; 371  :         return ((PMC_HANDLE_UINT)w);

  0007b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00080	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00085	48 8b c3	 mov	 rax, rbx

; 372  :     }

  00088	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR [rsp+144]
  00090	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
$LN20@PMC_RightS:

; 359  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  000a7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000ac	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  000b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000b8	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000bd	e8 00 00 00 00	 call	 _CxxThrowException
  000c2	cc		 int	 3
$LN17@PMC_RightS:
?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z ENDP ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
n$ = 152
?dtor$0@?0??PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_RightShift_X_I'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_RightShift_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
n$ = 152
?dtor$0@?0??PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_RightShift_X_I'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@H@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_RightShift_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
;	COMDAT ?Initialize_Shift@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 8
?Initialize_Shift@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Shift, COMDAT

; 399  :         return (PMC_STATUS_OK);

  00000	33 c0		 xor	 eax, eax

; 400  :     }

  00002	c3		 ret	 0
?Initialize_Shift@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Shift
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
;	COMDAT ?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
_TEXT	SEGMENT
p$ = 16
p_word_count$ = 24
n$ = 32
o$ = 40
padding_zero$ = 48
?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z PROC ; Palmtree::Math::Core::Internal::LeftShift_Imp, COMDAT

; 172  :     {

$LN28:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	41 56		 push	 r14

; 173  :         __UNIT_TYPE* pp = p;
; 174  :         __UNIT_TYPE p_count = p_word_count;
; 175  :         __UNIT_TYPE* op = o;
; 176  :         __UNIT_TYPE n_word_count = n / __UNIT_TYPE_BIT_COUNT;

  00011	49 8b d8	 mov	 rbx, r8
  00014	4d 8b d0	 mov	 r10, r8
  00017	48 c1 eb 06	 shr	 rbx, 6
  0001b	4d 8b f1	 mov	 r14, r9

; 177  :         __UNIT_TYPE n_lshift_bit_count = n % __UNIT_TYPE_BIT_COUNT;

  0001e	41 83 e2 3f	 and	 r10d, 63		; 0000003fH

; 178  :         if (n_lshift_bit_count == 0)

  00022	75 12		 jne	 SHORT $LN4@LeftShift_
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  00024	48 8b f1	 mov	 rsi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp

; 181  :             _COPY_MEMORY_UNIT(op + n_word_count, pp, p_count);

  00027	49 8d 3c d9	 lea	 rdi, QWORD PTR [r9+rbx*8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  0002b	48 8b ca	 mov	 rcx, rdx
  0002e	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp

; 185  :         else

  00031	e9 80 07 00 00	 jmp	 $LN26@LeftShift_
$LN4@LeftShift_:

; 186  :         {
; 187  :             __UNIT_TYPE n_rshift_bit_count = __UNIT_TYPE_BIT_COUNT - n_lshift_bit_count;
; 188  :             pp += p_count - 1;
; 189  :             op += p_count + n_word_count;
; 190  :             p_count -= 1;
; 191  :             __UNIT_TYPE temp = *pp;

  00036	48 8b 74 d1 f8	 mov	 rsi, QWORD PTR [rcx+rdx*8-8]
  0003b	4c 8d 04 d1	 lea	 r8, QWORD PTR [rcx+rdx*8]
  0003f	48 8d 04 13	 lea	 rax, QWORD PTR [rbx+rdx]
  00043	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  00048	4c 8d 5a ff	 lea	 r11, QWORD PTR [rdx-1]
  0004c	41 b9 40 00 00
	00		 mov	 r9d, 64			; 00000040H
  00052	4d 2b ca	 sub	 r9, r10
  00055	49 8d 04 c6	 lea	 rax, QWORD PTR [r14+rax*8]

; 192  :             __UNIT_TYPE work = temp >> n_rshift_bit_count;

  00059	48 8b d6	 mov	 rdx, rsi
  0005c	49 8b c9	 mov	 rcx, r9
  0005f	48 d3 ea	 shr	 rdx, cl

; 193  :             if (work != 0)

  00062	48 85 d2	 test	 rdx, rdx
  00065	74 03		 je	 SHORT $LN7@LeftShift_

; 194  :                 *op = work;

  00067	48 89 10	 mov	 QWORD PTR [rax], rdx
$LN7@LeftShift_:

; 195  :             --pp;
; 196  :             --op;
; 197  : 
; 198  :             __UNIT_TYPE count = p_count >> 5;

  0006a	49 8b eb	 mov	 rbp, r11
  0006d	49 83 e8 10	 sub	 r8, 16
  00071	48 c1 ed 05	 shr	 rbp, 5
  00075	48 83 e8 08	 sub	 rax, 8

; 199  :             while (count != 0)

  00079	48 85 ed	 test	 rbp, rbp
  0007c	0f 84 bd 03 00
	00		 je	 $LN3@LeftShift_
  00082	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL2@LeftShift_:

; 200  :             {
; 201  :                 work = temp << n_lshift_bit_count; temp = pp[-0]; work |= temp >> n_rshift_bit_count; op[-0] = work;

  00090	49 8b 38	 mov	 rdi, QWORD PTR [r8]
  00093	49 8b ca	 mov	 rcx, r10
  00096	48 d3 e6	 shl	 rsi, cl
  00099	48 8b d7	 mov	 rdx, rdi
  0009c	49 8b c9	 mov	 rcx, r9
  0009f	48 d3 ea	 shr	 rdx, cl

; 202  :                 work = temp << n_lshift_bit_count; temp = pp[-1]; work |= temp >> n_rshift_bit_count; op[-1] = work;

  000a2	49 8b ca	 mov	 rcx, r10
  000a5	48 0b d6	 or	 rdx, rsi
  000a8	48 d3 e7	 shl	 rdi, cl
  000ab	48 89 10	 mov	 QWORD PTR [rax], rdx
  000ae	49 8b c9	 mov	 rcx, r9
  000b1	49 8b 70 f8	 mov	 rsi, QWORD PTR [r8-8]
  000b5	48 8b d6	 mov	 rdx, rsi
  000b8	48 d3 ea	 shr	 rdx, cl

; 203  :                 work = temp << n_lshift_bit_count; temp = pp[-2]; work |= temp >> n_rshift_bit_count; op[-2] = work;

  000bb	49 8b ca	 mov	 rcx, r10
  000be	48 0b d7	 or	 rdx, rdi
  000c1	48 d3 e6	 shl	 rsi, cl
  000c4	48 89 50 f8	 mov	 QWORD PTR [rax-8], rdx
  000c8	49 8b c9	 mov	 rcx, r9
  000cb	49 8b 78 f0	 mov	 rdi, QWORD PTR [r8-16]
  000cf	48 8b d7	 mov	 rdx, rdi
  000d2	48 d3 ea	 shr	 rdx, cl

; 204  :                 work = temp << n_lshift_bit_count; temp = pp[-3]; work |= temp >> n_rshift_bit_count; op[-3] = work;

  000d5	49 8b ca	 mov	 rcx, r10
  000d8	48 0b d6	 or	 rdx, rsi
  000db	48 d3 e7	 shl	 rdi, cl
  000de	48 89 50 f0	 mov	 QWORD PTR [rax-16], rdx
  000e2	49 8b c9	 mov	 rcx, r9
  000e5	49 8b 70 e8	 mov	 rsi, QWORD PTR [r8-24]
  000e9	48 8b d6	 mov	 rdx, rsi
  000ec	48 d3 ea	 shr	 rdx, cl

; 205  :                 work = temp << n_lshift_bit_count; temp = pp[-4]; work |= temp >> n_rshift_bit_count; op[-4] = work;

  000ef	49 8b ca	 mov	 rcx, r10
  000f2	48 0b d7	 or	 rdx, rdi
  000f5	48 d3 e6	 shl	 rsi, cl
  000f8	48 89 50 e8	 mov	 QWORD PTR [rax-24], rdx
  000fc	49 8b c9	 mov	 rcx, r9
  000ff	49 8b 78 e0	 mov	 rdi, QWORD PTR [r8-32]
  00103	48 8b d7	 mov	 rdx, rdi
  00106	48 d3 ea	 shr	 rdx, cl

; 206  :                 work = temp << n_lshift_bit_count; temp = pp[-5]; work |= temp >> n_rshift_bit_count; op[-5] = work;

  00109	49 8b ca	 mov	 rcx, r10
  0010c	48 0b d6	 or	 rdx, rsi
  0010f	48 d3 e7	 shl	 rdi, cl
  00112	48 89 50 e0	 mov	 QWORD PTR [rax-32], rdx
  00116	49 8b c9	 mov	 rcx, r9
  00119	49 8b 70 d8	 mov	 rsi, QWORD PTR [r8-40]
  0011d	48 8b d6	 mov	 rdx, rsi
  00120	48 d3 ea	 shr	 rdx, cl

; 207  :                 work = temp << n_lshift_bit_count; temp = pp[-6]; work |= temp >> n_rshift_bit_count; op[-6] = work;

  00123	49 8b ca	 mov	 rcx, r10
  00126	48 0b d7	 or	 rdx, rdi
  00129	48 d3 e6	 shl	 rsi, cl
  0012c	48 89 50 d8	 mov	 QWORD PTR [rax-40], rdx
  00130	49 8b c9	 mov	 rcx, r9
  00133	49 8b 78 d0	 mov	 rdi, QWORD PTR [r8-48]
  00137	48 8b d7	 mov	 rdx, rdi
  0013a	48 d3 ea	 shr	 rdx, cl

; 208  :                 work = temp << n_lshift_bit_count; temp = pp[-7]; work |= temp >> n_rshift_bit_count; op[-7] = work;

  0013d	49 8b ca	 mov	 rcx, r10
  00140	48 0b d6	 or	 rdx, rsi
  00143	48 d3 e7	 shl	 rdi, cl
  00146	48 89 50 d0	 mov	 QWORD PTR [rax-48], rdx
  0014a	49 8b c9	 mov	 rcx, r9
  0014d	49 8b 70 c8	 mov	 rsi, QWORD PTR [r8-56]
  00151	48 8b d6	 mov	 rdx, rsi
  00154	48 d3 ea	 shr	 rdx, cl

; 209  :                 work = temp << n_lshift_bit_count; temp = pp[-8]; work |= temp >> n_rshift_bit_count; op[-8] = work;

  00157	49 8b ca	 mov	 rcx, r10
  0015a	48 0b d7	 or	 rdx, rdi
  0015d	48 d3 e6	 shl	 rsi, cl
  00160	48 89 50 c8	 mov	 QWORD PTR [rax-56], rdx
  00164	49 8b c9	 mov	 rcx, r9
  00167	49 8b 78 c0	 mov	 rdi, QWORD PTR [r8-64]
  0016b	48 8b d7	 mov	 rdx, rdi
  0016e	48 d3 ea	 shr	 rdx, cl

; 210  :                 work = temp << n_lshift_bit_count; temp = pp[-9]; work |= temp >> n_rshift_bit_count; op[-9] = work;

  00171	49 8b ca	 mov	 rcx, r10
  00174	48 0b d6	 or	 rdx, rsi
  00177	48 d3 e7	 shl	 rdi, cl
  0017a	48 89 50 c0	 mov	 QWORD PTR [rax-64], rdx
  0017e	49 8b c9	 mov	 rcx, r9
  00181	49 8b 70 b8	 mov	 rsi, QWORD PTR [r8-72]
  00185	48 8b d6	 mov	 rdx, rsi
  00188	48 d3 ea	 shr	 rdx, cl

; 211  :                 work = temp << n_lshift_bit_count; temp = pp[-10]; work |= temp >> n_rshift_bit_count; op[-10] = work;

  0018b	49 8b ca	 mov	 rcx, r10
  0018e	48 0b d7	 or	 rdx, rdi
  00191	48 89 50 b8	 mov	 QWORD PTR [rax-72], rdx
  00195	49 8b 78 b0	 mov	 rdi, QWORD PTR [r8-80]
  00199	48 d3 e6	 shl	 rsi, cl
  0019c	48 8b d7	 mov	 rdx, rdi
  0019f	49 8b c9	 mov	 rcx, r9
  001a2	48 d3 ea	 shr	 rdx, cl

; 212  :                 work = temp << n_lshift_bit_count; temp = pp[-11]; work |= temp >> n_rshift_bit_count; op[-11] = work;

  001a5	49 8b ca	 mov	 rcx, r10
  001a8	48 0b d6	 or	 rdx, rsi
  001ab	48 d3 e7	 shl	 rdi, cl
  001ae	48 89 50 b0	 mov	 QWORD PTR [rax-80], rdx
  001b2	49 8b c9	 mov	 rcx, r9
  001b5	49 8b 70 a8	 mov	 rsi, QWORD PTR [r8-88]
  001b9	48 8b d6	 mov	 rdx, rsi
  001bc	48 d3 ea	 shr	 rdx, cl

; 213  :                 work = temp << n_lshift_bit_count; temp = pp[-12]; work |= temp >> n_rshift_bit_count; op[-12] = work;

  001bf	49 8b ca	 mov	 rcx, r10
  001c2	48 0b d7	 or	 rdx, rdi
  001c5	48 d3 e6	 shl	 rsi, cl
  001c8	48 89 50 a8	 mov	 QWORD PTR [rax-88], rdx
  001cc	49 8b c9	 mov	 rcx, r9
  001cf	49 8b 78 a0	 mov	 rdi, QWORD PTR [r8-96]
  001d3	48 8b d7	 mov	 rdx, rdi
  001d6	48 d3 ea	 shr	 rdx, cl

; 214  :                 work = temp << n_lshift_bit_count; temp = pp[-13]; work |= temp >> n_rshift_bit_count; op[-13] = work;

  001d9	49 8b ca	 mov	 rcx, r10
  001dc	48 0b d6	 or	 rdx, rsi
  001df	48 d3 e7	 shl	 rdi, cl
  001e2	48 89 50 a0	 mov	 QWORD PTR [rax-96], rdx
  001e6	49 8b c9	 mov	 rcx, r9
  001e9	49 8b 70 98	 mov	 rsi, QWORD PTR [r8-104]
  001ed	48 8b d6	 mov	 rdx, rsi
  001f0	48 d3 ea	 shr	 rdx, cl

; 215  :                 work = temp << n_lshift_bit_count; temp = pp[-14]; work |= temp >> n_rshift_bit_count; op[-14] = work;

  001f3	49 8b ca	 mov	 rcx, r10
  001f6	48 0b d7	 or	 rdx, rdi
  001f9	48 d3 e6	 shl	 rsi, cl
  001fc	48 89 50 98	 mov	 QWORD PTR [rax-104], rdx
  00200	49 8b c9	 mov	 rcx, r9
  00203	49 8b 78 90	 mov	 rdi, QWORD PTR [r8-112]
  00207	48 8b d7	 mov	 rdx, rdi
  0020a	48 d3 ea	 shr	 rdx, cl

; 216  :                 work = temp << n_lshift_bit_count; temp = pp[-15]; work |= temp >> n_rshift_bit_count; op[-15] = work;

  0020d	49 8b ca	 mov	 rcx, r10
  00210	48 0b d6	 or	 rdx, rsi
  00213	48 d3 e7	 shl	 rdi, cl
  00216	48 89 50 90	 mov	 QWORD PTR [rax-112], rdx
  0021a	49 8b c9	 mov	 rcx, r9
  0021d	49 8b 70 88	 mov	 rsi, QWORD PTR [r8-120]
  00221	48 8b d6	 mov	 rdx, rsi
  00224	48 d3 ea	 shr	 rdx, cl

; 217  :                 work = temp << n_lshift_bit_count; temp = pp[-16]; work |= temp >> n_rshift_bit_count; op[-16] = work;

  00227	49 8b ca	 mov	 rcx, r10
  0022a	48 0b d7	 or	 rdx, rdi
  0022d	48 d3 e6	 shl	 rsi, cl
  00230	48 89 50 88	 mov	 QWORD PTR [rax-120], rdx
  00234	49 8b c9	 mov	 rcx, r9
  00237	49 8b 78 80	 mov	 rdi, QWORD PTR [r8-128]
  0023b	48 8b d7	 mov	 rdx, rdi
  0023e	48 d3 ea	 shr	 rdx, cl

; 218  :                 work = temp << n_lshift_bit_count; temp = pp[-17]; work |= temp >> n_rshift_bit_count; op[-17] = work;

  00241	49 8b ca	 mov	 rcx, r10
  00244	48 0b d6	 or	 rdx, rsi
  00247	48 d3 e7	 shl	 rdi, cl
  0024a	48 89 50 80	 mov	 QWORD PTR [rax-128], rdx
  0024e	49 8b c9	 mov	 rcx, r9
  00251	49 8b b0 78 ff
	ff ff		 mov	 rsi, QWORD PTR [r8-136]
  00258	48 8b d6	 mov	 rdx, rsi
  0025b	48 d3 ea	 shr	 rdx, cl

; 219  :                 work = temp << n_lshift_bit_count; temp = pp[-18]; work |= temp >> n_rshift_bit_count; op[-18] = work;

  0025e	49 8b ca	 mov	 rcx, r10
  00261	48 0b d7	 or	 rdx, rdi
  00264	48 d3 e6	 shl	 rsi, cl
  00267	48 89 90 78 ff
	ff ff		 mov	 QWORD PTR [rax-136], rdx
  0026e	49 8b c9	 mov	 rcx, r9
  00271	49 8b b8 70 ff
	ff ff		 mov	 rdi, QWORD PTR [r8-144]
  00278	48 8b d7	 mov	 rdx, rdi
  0027b	48 d3 ea	 shr	 rdx, cl

; 220  :                 work = temp << n_lshift_bit_count; temp = pp[-19]; work |= temp >> n_rshift_bit_count; op[-19] = work;

  0027e	49 8b ca	 mov	 rcx, r10
  00281	48 0b d6	 or	 rdx, rsi
  00284	48 d3 e7	 shl	 rdi, cl
  00287	48 89 90 70 ff
	ff ff		 mov	 QWORD PTR [rax-144], rdx
  0028e	49 8b c9	 mov	 rcx, r9
  00291	49 8b b0 68 ff
	ff ff		 mov	 rsi, QWORD PTR [r8-152]
  00298	48 8b d6	 mov	 rdx, rsi
  0029b	48 d3 ea	 shr	 rdx, cl

; 221  :                 work = temp << n_lshift_bit_count; temp = pp[-20]; work |= temp >> n_rshift_bit_count; op[-20] = work;

  0029e	49 8b ca	 mov	 rcx, r10
  002a1	48 0b d7	 or	 rdx, rdi
  002a4	48 89 90 68 ff
	ff ff		 mov	 QWORD PTR [rax-152], rdx
  002ab	48 d3 e6	 shl	 rsi, cl
  002ae	49 8b b8 60 ff
	ff ff		 mov	 rdi, QWORD PTR [r8-160]
  002b5	49 8b c9	 mov	 rcx, r9
  002b8	48 8b d7	 mov	 rdx, rdi
  002bb	48 d3 ea	 shr	 rdx, cl

; 222  :                 work = temp << n_lshift_bit_count; temp = pp[-21]; work |= temp >> n_rshift_bit_count; op[-21] = work;

  002be	49 8b ca	 mov	 rcx, r10
  002c1	48 0b d6	 or	 rdx, rsi
  002c4	48 d3 e7	 shl	 rdi, cl
  002c7	48 89 90 60 ff
	ff ff		 mov	 QWORD PTR [rax-160], rdx
  002ce	49 8b c9	 mov	 rcx, r9
  002d1	49 8b b0 58 ff
	ff ff		 mov	 rsi, QWORD PTR [r8-168]
  002d8	48 8b d6	 mov	 rdx, rsi
  002db	48 d3 ea	 shr	 rdx, cl

; 223  :                 work = temp << n_lshift_bit_count; temp = pp[-22]; work |= temp >> n_rshift_bit_count; op[-22] = work;

  002de	49 8b ca	 mov	 rcx, r10
  002e1	48 0b d7	 or	 rdx, rdi
  002e4	48 d3 e6	 shl	 rsi, cl
  002e7	48 89 90 58 ff
	ff ff		 mov	 QWORD PTR [rax-168], rdx
  002ee	49 8b c9	 mov	 rcx, r9
  002f1	49 8b b8 50 ff
	ff ff		 mov	 rdi, QWORD PTR [r8-176]
  002f8	48 8b d7	 mov	 rdx, rdi
  002fb	48 d3 ea	 shr	 rdx, cl

; 224  :                 work = temp << n_lshift_bit_count; temp = pp[-23]; work |= temp >> n_rshift_bit_count; op[-23] = work;

  002fe	49 8b ca	 mov	 rcx, r10
  00301	48 0b d6	 or	 rdx, rsi
  00304	48 d3 e7	 shl	 rdi, cl
  00307	48 89 90 50 ff
	ff ff		 mov	 QWORD PTR [rax-176], rdx
  0030e	49 8b c9	 mov	 rcx, r9
  00311	49 8b b0 48 ff
	ff ff		 mov	 rsi, QWORD PTR [r8-184]
  00318	48 8b d6	 mov	 rdx, rsi
  0031b	48 d3 ea	 shr	 rdx, cl

; 225  :                 work = temp << n_lshift_bit_count; temp = pp[-24]; work |= temp >> n_rshift_bit_count; op[-24] = work;

  0031e	49 8b ca	 mov	 rcx, r10
  00321	48 0b d7	 or	 rdx, rdi
  00324	48 d3 e6	 shl	 rsi, cl
  00327	48 89 90 48 ff
	ff ff		 mov	 QWORD PTR [rax-184], rdx
  0032e	49 8b c9	 mov	 rcx, r9
  00331	49 8b b8 40 ff
	ff ff		 mov	 rdi, QWORD PTR [r8-192]
  00338	48 8b d7	 mov	 rdx, rdi
  0033b	48 d3 ea	 shr	 rdx, cl

; 226  :                 work = temp << n_lshift_bit_count; temp = pp[-25]; work |= temp >> n_rshift_bit_count; op[-25] = work;

  0033e	49 8b ca	 mov	 rcx, r10
  00341	48 0b d6	 or	 rdx, rsi
  00344	48 d3 e7	 shl	 rdi, cl
  00347	48 89 90 40 ff
	ff ff		 mov	 QWORD PTR [rax-192], rdx
  0034e	49 8b c9	 mov	 rcx, r9
  00351	49 8b b0 38 ff
	ff ff		 mov	 rsi, QWORD PTR [r8-200]
  00358	48 8b d6	 mov	 rdx, rsi
  0035b	48 d3 ea	 shr	 rdx, cl

; 227  :                 work = temp << n_lshift_bit_count; temp = pp[-26]; work |= temp >> n_rshift_bit_count; op[-26] = work;

  0035e	49 8b ca	 mov	 rcx, r10
  00361	48 0b d7	 or	 rdx, rdi
  00364	48 d3 e6	 shl	 rsi, cl
  00367	48 89 90 38 ff
	ff ff		 mov	 QWORD PTR [rax-200], rdx
  0036e	49 8b c9	 mov	 rcx, r9
  00371	49 8b b8 30 ff
	ff ff		 mov	 rdi, QWORD PTR [r8-208]
  00378	48 8b d7	 mov	 rdx, rdi
  0037b	48 d3 ea	 shr	 rdx, cl

; 228  :                 work = temp << n_lshift_bit_count; temp = pp[-27]; work |= temp >> n_rshift_bit_count; op[-27] = work;

  0037e	49 8b ca	 mov	 rcx, r10
  00381	48 0b d6	 or	 rdx, rsi
  00384	48 d3 e7	 shl	 rdi, cl
  00387	48 89 90 30 ff
	ff ff		 mov	 QWORD PTR [rax-208], rdx
  0038e	49 8b c9	 mov	 rcx, r9
  00391	49 8b b0 28 ff
	ff ff		 mov	 rsi, QWORD PTR [r8-216]
  00398	48 8b d6	 mov	 rdx, rsi
  0039b	48 d3 ea	 shr	 rdx, cl

; 229  :                 work = temp << n_lshift_bit_count; temp = pp[-28]; work |= temp >> n_rshift_bit_count; op[-28] = work;

  0039e	49 8b ca	 mov	 rcx, r10
  003a1	48 0b d7	 or	 rdx, rdi
  003a4	48 d3 e6	 shl	 rsi, cl
  003a7	48 89 90 28 ff
	ff ff		 mov	 QWORD PTR [rax-216], rdx
  003ae	49 8b c9	 mov	 rcx, r9
  003b1	49 8b b8 20 ff
	ff ff		 mov	 rdi, QWORD PTR [r8-224]
  003b8	48 8b d7	 mov	 rdx, rdi
  003bb	48 d3 ea	 shr	 rdx, cl

; 230  :                 work = temp << n_lshift_bit_count; temp = pp[-29]; work |= temp >> n_rshift_bit_count; op[-29] = work;

  003be	49 8b ca	 mov	 rcx, r10
  003c1	48 0b d6	 or	 rdx, rsi
  003c4	48 d3 e7	 shl	 rdi, cl
  003c7	48 89 90 20 ff
	ff ff		 mov	 QWORD PTR [rax-224], rdx
  003ce	49 8b c9	 mov	 rcx, r9
  003d1	49 8b b0 18 ff
	ff ff		 mov	 rsi, QWORD PTR [r8-232]
  003d8	48 8b d6	 mov	 rdx, rsi
  003db	48 d3 ea	 shr	 rdx, cl

; 231  :                 work = temp << n_lshift_bit_count; temp = pp[-30]; work |= temp >> n_rshift_bit_count; op[-30] = work;

  003de	49 8b ca	 mov	 rcx, r10
  003e1	48 0b d7	 or	 rdx, rdi
  003e4	48 89 90 18 ff
	ff ff		 mov	 QWORD PTR [rax-232], rdx
  003eb	49 8b b8 10 ff
	ff ff		 mov	 rdi, QWORD PTR [r8-240]
  003f2	48 d3 e6	 shl	 rsi, cl
  003f5	48 8b d7	 mov	 rdx, rdi
  003f8	49 8b c9	 mov	 rcx, r9
  003fb	48 d3 ea	 shr	 rdx, cl

; 232  :                 work = temp << n_lshift_bit_count; temp = pp[-31]; work |= temp >> n_rshift_bit_count; op[-31] = work;

  003fe	49 8b ca	 mov	 rcx, r10
  00401	48 0b d6	 or	 rdx, rsi
  00404	48 d3 e7	 shl	 rdi, cl
  00407	48 89 90 10 ff
	ff ff		 mov	 QWORD PTR [rax-240], rdx
  0040e	49 8b c9	 mov	 rcx, r9
  00411	49 8b b0 08 ff
	ff ff		 mov	 rsi, QWORD PTR [r8-248]

; 233  :                 pp -= 32;

  00418	49 81 e8 00 01
	00 00		 sub	 r8, 256			; 00000100H
  0041f	48 8b d6	 mov	 rdx, rsi
  00422	48 d3 ea	 shr	 rdx, cl
  00425	48 0b d7	 or	 rdx, rdi
  00428	48 89 90 08 ff
	ff ff		 mov	 QWORD PTR [rax-248], rdx

; 234  :                 op -= 32;

  0042f	48 2d 00 01 00
	00		 sub	 rax, 256		; 00000100H

; 235  :                 --count;

  00435	48 83 ed 01	 sub	 rbp, 1
  00439	0f 85 51 fc ff
	ff		 jne	 $LL2@LeftShift_
$LN3@LeftShift_:
  0043f	48 8b 6c 24 10	 mov	 rbp, QWORD PTR [rsp+16]

; 236  :             }
; 237  : 
; 238  :             if (p_count & 0x10)

  00444	41 f6 c3 10	 test	 r11b, 16
  00448	0f 84 a6 01 00
	00		 je	 $LN8@LeftShift_

; 239  :             {
; 240  :                 work = temp << n_lshift_bit_count; temp = pp[-0]; work |= temp >> n_rshift_bit_count; op[-0] = work;

  0044e	49 8b 38	 mov	 rdi, QWORD PTR [r8]
  00451	49 8b ca	 mov	 rcx, r10
  00454	48 d3 e6	 shl	 rsi, cl
  00457	48 8b d7	 mov	 rdx, rdi
  0045a	49 8b c9	 mov	 rcx, r9
  0045d	48 d3 ea	 shr	 rdx, cl

; 241  :                 work = temp << n_lshift_bit_count; temp = pp[-1]; work |= temp >> n_rshift_bit_count; op[-1] = work;

  00460	49 8b ca	 mov	 rcx, r10
  00463	48 0b d6	 or	 rdx, rsi
  00466	48 d3 e7	 shl	 rdi, cl
  00469	48 89 10	 mov	 QWORD PTR [rax], rdx
  0046c	49 8b c9	 mov	 rcx, r9
  0046f	49 8b 70 f8	 mov	 rsi, QWORD PTR [r8-8]
  00473	48 8b d6	 mov	 rdx, rsi
  00476	48 d3 ea	 shr	 rdx, cl

; 242  :                 work = temp << n_lshift_bit_count; temp = pp[-2]; work |= temp >> n_rshift_bit_count; op[-2] = work;

  00479	49 8b ca	 mov	 rcx, r10
  0047c	48 0b d7	 or	 rdx, rdi
  0047f	48 d3 e6	 shl	 rsi, cl
  00482	48 89 50 f8	 mov	 QWORD PTR [rax-8], rdx
  00486	49 8b c9	 mov	 rcx, r9
  00489	49 8b 78 f0	 mov	 rdi, QWORD PTR [r8-16]
  0048d	48 8b d7	 mov	 rdx, rdi
  00490	48 d3 ea	 shr	 rdx, cl

; 243  :                 work = temp << n_lshift_bit_count; temp = pp[-3]; work |= temp >> n_rshift_bit_count; op[-3] = work;

  00493	49 8b ca	 mov	 rcx, r10
  00496	48 0b d6	 or	 rdx, rsi
  00499	48 d3 e7	 shl	 rdi, cl
  0049c	48 89 50 f0	 mov	 QWORD PTR [rax-16], rdx
  004a0	49 8b c9	 mov	 rcx, r9
  004a3	49 8b 70 e8	 mov	 rsi, QWORD PTR [r8-24]
  004a7	48 8b d6	 mov	 rdx, rsi
  004aa	48 d3 ea	 shr	 rdx, cl

; 244  :                 work = temp << n_lshift_bit_count; temp = pp[-4]; work |= temp >> n_rshift_bit_count; op[-4] = work;

  004ad	49 8b ca	 mov	 rcx, r10
  004b0	48 0b d7	 or	 rdx, rdi
  004b3	48 d3 e6	 shl	 rsi, cl
  004b6	48 89 50 e8	 mov	 QWORD PTR [rax-24], rdx
  004ba	49 8b c9	 mov	 rcx, r9
  004bd	49 8b 78 e0	 mov	 rdi, QWORD PTR [r8-32]
  004c1	48 8b d7	 mov	 rdx, rdi
  004c4	48 d3 ea	 shr	 rdx, cl

; 245  :                 work = temp << n_lshift_bit_count; temp = pp[-5]; work |= temp >> n_rshift_bit_count; op[-5] = work;

  004c7	49 8b ca	 mov	 rcx, r10
  004ca	48 0b d6	 or	 rdx, rsi
  004cd	48 d3 e7	 shl	 rdi, cl
  004d0	48 89 50 e0	 mov	 QWORD PTR [rax-32], rdx
  004d4	49 8b c9	 mov	 rcx, r9
  004d7	49 8b 70 d8	 mov	 rsi, QWORD PTR [r8-40]
  004db	48 8b d6	 mov	 rdx, rsi
  004de	48 d3 ea	 shr	 rdx, cl

; 246  :                 work = temp << n_lshift_bit_count; temp = pp[-6]; work |= temp >> n_rshift_bit_count; op[-6] = work;

  004e1	49 8b ca	 mov	 rcx, r10
  004e4	48 0b d7	 or	 rdx, rdi
  004e7	48 d3 e6	 shl	 rsi, cl
  004ea	48 89 50 d8	 mov	 QWORD PTR [rax-40], rdx
  004ee	49 8b c9	 mov	 rcx, r9
  004f1	49 8b 78 d0	 mov	 rdi, QWORD PTR [r8-48]
  004f5	48 8b d7	 mov	 rdx, rdi
  004f8	48 d3 ea	 shr	 rdx, cl

; 247  :                 work = temp << n_lshift_bit_count; temp = pp[-7]; work |= temp >> n_rshift_bit_count; op[-7] = work;

  004fb	49 8b ca	 mov	 rcx, r10
  004fe	48 0b d6	 or	 rdx, rsi
  00501	48 d3 e7	 shl	 rdi, cl
  00504	48 89 50 d0	 mov	 QWORD PTR [rax-48], rdx
  00508	49 8b c9	 mov	 rcx, r9
  0050b	49 8b 70 c8	 mov	 rsi, QWORD PTR [r8-56]
  0050f	48 8b d6	 mov	 rdx, rsi
  00512	48 d3 ea	 shr	 rdx, cl

; 248  :                 work = temp << n_lshift_bit_count; temp = pp[-8]; work |= temp >> n_rshift_bit_count; op[-8] = work;

  00515	49 8b ca	 mov	 rcx, r10
  00518	48 0b d7	 or	 rdx, rdi
  0051b	48 d3 e6	 shl	 rsi, cl
  0051e	48 89 50 c8	 mov	 QWORD PTR [rax-56], rdx
  00522	49 8b c9	 mov	 rcx, r9
  00525	49 8b 78 c0	 mov	 rdi, QWORD PTR [r8-64]
  00529	48 8b d7	 mov	 rdx, rdi
  0052c	48 d3 ea	 shr	 rdx, cl

; 249  :                 work = temp << n_lshift_bit_count; temp = pp[-9]; work |= temp >> n_rshift_bit_count; op[-9] = work;

  0052f	49 8b ca	 mov	 rcx, r10
  00532	48 0b d6	 or	 rdx, rsi
  00535	48 d3 e7	 shl	 rdi, cl
  00538	48 89 50 c0	 mov	 QWORD PTR [rax-64], rdx
  0053c	49 8b c9	 mov	 rcx, r9
  0053f	49 8b 70 b8	 mov	 rsi, QWORD PTR [r8-72]
  00543	48 8b d6	 mov	 rdx, rsi
  00546	48 d3 ea	 shr	 rdx, cl

; 250  :                 work = temp << n_lshift_bit_count; temp = pp[-10]; work |= temp >> n_rshift_bit_count; op[-10] = work;

  00549	49 8b ca	 mov	 rcx, r10
  0054c	48 0b d7	 or	 rdx, rdi
  0054f	48 89 50 b8	 mov	 QWORD PTR [rax-72], rdx
  00553	49 8b 78 b0	 mov	 rdi, QWORD PTR [r8-80]
  00557	48 d3 e6	 shl	 rsi, cl
  0055a	48 8b d7	 mov	 rdx, rdi
  0055d	49 8b c9	 mov	 rcx, r9
  00560	48 d3 ea	 shr	 rdx, cl

; 251  :                 work = temp << n_lshift_bit_count; temp = pp[-11]; work |= temp >> n_rshift_bit_count; op[-11] = work;

  00563	49 8b ca	 mov	 rcx, r10
  00566	48 0b d6	 or	 rdx, rsi
  00569	48 d3 e7	 shl	 rdi, cl
  0056c	48 89 50 b0	 mov	 QWORD PTR [rax-80], rdx
  00570	49 8b c9	 mov	 rcx, r9
  00573	49 8b 70 a8	 mov	 rsi, QWORD PTR [r8-88]
  00577	48 8b d6	 mov	 rdx, rsi
  0057a	48 d3 ea	 shr	 rdx, cl

; 252  :                 work = temp << n_lshift_bit_count; temp = pp[-12]; work |= temp >> n_rshift_bit_count; op[-12] = work;

  0057d	49 8b ca	 mov	 rcx, r10
  00580	48 0b d7	 or	 rdx, rdi
  00583	48 d3 e6	 shl	 rsi, cl
  00586	48 89 50 a8	 mov	 QWORD PTR [rax-88], rdx
  0058a	49 8b c9	 mov	 rcx, r9
  0058d	49 8b 78 a0	 mov	 rdi, QWORD PTR [r8-96]
  00591	48 8b d7	 mov	 rdx, rdi
  00594	48 d3 ea	 shr	 rdx, cl

; 253  :                 work = temp << n_lshift_bit_count; temp = pp[-13]; work |= temp >> n_rshift_bit_count; op[-13] = work;

  00597	49 8b ca	 mov	 rcx, r10
  0059a	48 0b d6	 or	 rdx, rsi
  0059d	48 d3 e7	 shl	 rdi, cl
  005a0	48 89 50 a0	 mov	 QWORD PTR [rax-96], rdx
  005a4	49 8b c9	 mov	 rcx, r9
  005a7	49 8b 70 98	 mov	 rsi, QWORD PTR [r8-104]
  005ab	48 8b d6	 mov	 rdx, rsi
  005ae	48 d3 ea	 shr	 rdx, cl

; 254  :                 work = temp << n_lshift_bit_count; temp = pp[-14]; work |= temp >> n_rshift_bit_count; op[-14] = work;

  005b1	49 8b ca	 mov	 rcx, r10
  005b4	48 0b d7	 or	 rdx, rdi
  005b7	48 d3 e6	 shl	 rsi, cl
  005ba	48 89 50 98	 mov	 QWORD PTR [rax-104], rdx
  005be	49 8b c9	 mov	 rcx, r9
  005c1	49 8b 78 90	 mov	 rdi, QWORD PTR [r8-112]
  005c5	48 8b d7	 mov	 rdx, rdi
  005c8	48 d3 ea	 shr	 rdx, cl

; 255  :                 work = temp << n_lshift_bit_count; temp = pp[-15]; work |= temp >> n_rshift_bit_count; op[-15] = work;

  005cb	49 8b ca	 mov	 rcx, r10
  005ce	48 0b d6	 or	 rdx, rsi
  005d1	48 d3 e7	 shl	 rdi, cl
  005d4	48 89 50 90	 mov	 QWORD PTR [rax-112], rdx
  005d8	49 8b c9	 mov	 rcx, r9
  005db	49 8b 70 88	 mov	 rsi, QWORD PTR [r8-120]

; 256  :                 pp -= 16;

  005df	49 83 c0 80	 add	 r8, -128		; ffffffffffffff80H
  005e3	48 8b d6	 mov	 rdx, rsi
  005e6	48 d3 ea	 shr	 rdx, cl
  005e9	48 0b d7	 or	 rdx, rdi
  005ec	48 89 50 88	 mov	 QWORD PTR [rax-120], rdx

; 257  :                 op -= 16;

  005f0	48 83 c0 80	 add	 rax, -128		; ffffffffffffff80H
$LN8@LeftShift_:

; 258  :             }
; 259  : 
; 260  :             if (p_count & 0x8)

  005f4	41 f6 c3 08	 test	 r11b, 8
  005f8	0f 84 d6 00 00
	00		 je	 $LN9@LeftShift_

; 261  :             {
; 262  :                 work = temp << n_lshift_bit_count; temp = pp[-0]; work |= temp >> n_rshift_bit_count; op[-0] = work;

  005fe	49 8b 38	 mov	 rdi, QWORD PTR [r8]
  00601	49 8b ca	 mov	 rcx, r10
  00604	48 d3 e6	 shl	 rsi, cl
  00607	48 8b d7	 mov	 rdx, rdi
  0060a	49 8b c9	 mov	 rcx, r9
  0060d	48 d3 ea	 shr	 rdx, cl

; 263  :                 work = temp << n_lshift_bit_count; temp = pp[-1]; work |= temp >> n_rshift_bit_count; op[-1] = work;

  00610	49 8b ca	 mov	 rcx, r10
  00613	48 0b d6	 or	 rdx, rsi
  00616	48 d3 e7	 shl	 rdi, cl
  00619	48 89 10	 mov	 QWORD PTR [rax], rdx
  0061c	49 8b c9	 mov	 rcx, r9
  0061f	49 8b 70 f8	 mov	 rsi, QWORD PTR [r8-8]
  00623	48 8b d6	 mov	 rdx, rsi
  00626	48 d3 ea	 shr	 rdx, cl

; 264  :                 work = temp << n_lshift_bit_count; temp = pp[-2]; work |= temp >> n_rshift_bit_count; op[-2] = work;

  00629	49 8b ca	 mov	 rcx, r10
  0062c	48 0b d7	 or	 rdx, rdi
  0062f	48 d3 e6	 shl	 rsi, cl
  00632	48 89 50 f8	 mov	 QWORD PTR [rax-8], rdx
  00636	49 8b c9	 mov	 rcx, r9
  00639	49 8b 78 f0	 mov	 rdi, QWORD PTR [r8-16]
  0063d	48 8b d7	 mov	 rdx, rdi
  00640	48 d3 ea	 shr	 rdx, cl

; 265  :                 work = temp << n_lshift_bit_count; temp = pp[-3]; work |= temp >> n_rshift_bit_count; op[-3] = work;

  00643	49 8b ca	 mov	 rcx, r10
  00646	48 0b d6	 or	 rdx, rsi
  00649	48 d3 e7	 shl	 rdi, cl
  0064c	48 89 50 f0	 mov	 QWORD PTR [rax-16], rdx
  00650	49 8b c9	 mov	 rcx, r9
  00653	49 8b 70 e8	 mov	 rsi, QWORD PTR [r8-24]
  00657	48 8b d6	 mov	 rdx, rsi
  0065a	48 d3 ea	 shr	 rdx, cl

; 266  :                 work = temp << n_lshift_bit_count; temp = pp[-4]; work |= temp >> n_rshift_bit_count; op[-4] = work;

  0065d	49 8b ca	 mov	 rcx, r10
  00660	48 0b d7	 or	 rdx, rdi
  00663	48 d3 e6	 shl	 rsi, cl
  00666	48 89 50 e8	 mov	 QWORD PTR [rax-24], rdx
  0066a	49 8b c9	 mov	 rcx, r9
  0066d	49 8b 78 e0	 mov	 rdi, QWORD PTR [r8-32]
  00671	48 8b d7	 mov	 rdx, rdi
  00674	48 d3 ea	 shr	 rdx, cl

; 267  :                 work = temp << n_lshift_bit_count; temp = pp[-5]; work |= temp >> n_rshift_bit_count; op[-5] = work;

  00677	49 8b ca	 mov	 rcx, r10
  0067a	48 0b d6	 or	 rdx, rsi
  0067d	48 d3 e7	 shl	 rdi, cl
  00680	48 89 50 e0	 mov	 QWORD PTR [rax-32], rdx
  00684	49 8b c9	 mov	 rcx, r9
  00687	49 8b 70 d8	 mov	 rsi, QWORD PTR [r8-40]
  0068b	48 8b d6	 mov	 rdx, rsi
  0068e	48 d3 ea	 shr	 rdx, cl

; 268  :                 work = temp << n_lshift_bit_count; temp = pp[-6]; work |= temp >> n_rshift_bit_count; op[-6] = work;

  00691	49 8b ca	 mov	 rcx, r10
  00694	48 0b d7	 or	 rdx, rdi
  00697	48 d3 e6	 shl	 rsi, cl
  0069a	48 89 50 d8	 mov	 QWORD PTR [rax-40], rdx
  0069e	49 8b c9	 mov	 rcx, r9
  006a1	49 8b 78 d0	 mov	 rdi, QWORD PTR [r8-48]
  006a5	48 8b d7	 mov	 rdx, rdi
  006a8	48 d3 ea	 shr	 rdx, cl

; 269  :                 work = temp << n_lshift_bit_count; temp = pp[-7]; work |= temp >> n_rshift_bit_count; op[-7] = work;

  006ab	49 8b ca	 mov	 rcx, r10
  006ae	48 0b d6	 or	 rdx, rsi
  006b1	48 d3 e7	 shl	 rdi, cl
  006b4	48 89 50 d0	 mov	 QWORD PTR [rax-48], rdx
  006b8	49 8b c9	 mov	 rcx, r9
  006bb	49 8b 70 c8	 mov	 rsi, QWORD PTR [r8-56]

; 270  :                 pp -= 8;

  006bf	49 83 e8 40	 sub	 r8, 64			; 00000040H
  006c3	48 8b d6	 mov	 rdx, rsi
  006c6	48 d3 ea	 shr	 rdx, cl
  006c9	48 0b d7	 or	 rdx, rdi
  006cc	48 89 50 c8	 mov	 QWORD PTR [rax-56], rdx

; 271  :                 op -= 8;

  006d0	48 83 e8 40	 sub	 rax, 64			; 00000040H
$LN9@LeftShift_:

; 272  :             }
; 273  : 
; 274  :             if (p_count & 0x4)

  006d4	41 f6 c3 04	 test	 r11b, 4
  006d8	74 6e		 je	 SHORT $LN10@LeftShift_

; 275  :             {
; 276  :                 work = temp << n_lshift_bit_count; temp = pp[-0]; work |= temp >> n_rshift_bit_count; op[-0] = work;

  006da	49 8b 38	 mov	 rdi, QWORD PTR [r8]
  006dd	49 8b ca	 mov	 rcx, r10
  006e0	48 d3 e6	 shl	 rsi, cl
  006e3	48 8b d7	 mov	 rdx, rdi
  006e6	49 8b c9	 mov	 rcx, r9
  006e9	48 d3 ea	 shr	 rdx, cl

; 277  :                 work = temp << n_lshift_bit_count; temp = pp[-1]; work |= temp >> n_rshift_bit_count; op[-1] = work;

  006ec	49 8b ca	 mov	 rcx, r10
  006ef	48 0b d6	 or	 rdx, rsi
  006f2	48 d3 e7	 shl	 rdi, cl
  006f5	48 89 10	 mov	 QWORD PTR [rax], rdx
  006f8	49 8b c9	 mov	 rcx, r9
  006fb	49 8b 70 f8	 mov	 rsi, QWORD PTR [r8-8]
  006ff	48 8b d6	 mov	 rdx, rsi
  00702	48 d3 ea	 shr	 rdx, cl

; 278  :                 work = temp << n_lshift_bit_count; temp = pp[-2]; work |= temp >> n_rshift_bit_count; op[-2] = work;

  00705	49 8b ca	 mov	 rcx, r10
  00708	48 0b d7	 or	 rdx, rdi
  0070b	48 d3 e6	 shl	 rsi, cl
  0070e	48 89 50 f8	 mov	 QWORD PTR [rax-8], rdx
  00712	49 8b c9	 mov	 rcx, r9
  00715	49 8b 78 f0	 mov	 rdi, QWORD PTR [r8-16]
  00719	48 8b d7	 mov	 rdx, rdi
  0071c	48 d3 ea	 shr	 rdx, cl

; 279  :                 work = temp << n_lshift_bit_count; temp = pp[-3]; work |= temp >> n_rshift_bit_count; op[-3] = work;

  0071f	49 8b ca	 mov	 rcx, r10
  00722	48 0b d6	 or	 rdx, rsi
  00725	48 d3 e7	 shl	 rdi, cl
  00728	48 89 50 f0	 mov	 QWORD PTR [rax-16], rdx
  0072c	49 8b c9	 mov	 rcx, r9
  0072f	49 8b 70 e8	 mov	 rsi, QWORD PTR [r8-24]

; 280  :                 pp -= 4;

  00733	49 83 e8 20	 sub	 r8, 32			; 00000020H
  00737	48 8b d6	 mov	 rdx, rsi
  0073a	48 d3 ea	 shr	 rdx, cl
  0073d	48 0b d7	 or	 rdx, rdi
  00740	48 89 50 e8	 mov	 QWORD PTR [rax-24], rdx

; 281  :                 op -= 4;

  00744	48 83 e8 20	 sub	 rax, 32			; 00000020H
$LN10@LeftShift_:

; 282  :             }
; 283  : 
; 284  :             if (p_count & 0x2)

  00748	41 f6 c3 02	 test	 r11b, 2
  0074c	74 3a		 je	 SHORT $LN11@LeftShift_

; 285  :             {
; 286  :                 work = temp << n_lshift_bit_count; temp = pp[-0]; work |= temp >> n_rshift_bit_count; op[-0] = work;

  0074e	49 8b 38	 mov	 rdi, QWORD PTR [r8]
  00751	49 8b ca	 mov	 rcx, r10
  00754	48 d3 e6	 shl	 rsi, cl
  00757	48 8b d7	 mov	 rdx, rdi
  0075a	49 8b c9	 mov	 rcx, r9
  0075d	48 d3 ea	 shr	 rdx, cl

; 287  :                 work = temp << n_lshift_bit_count; temp = pp[-1]; work |= temp >> n_rshift_bit_count; op[-1] = work;

  00760	49 8b ca	 mov	 rcx, r10
  00763	48 0b d6	 or	 rdx, rsi
  00766	48 d3 e7	 shl	 rdi, cl
  00769	48 89 10	 mov	 QWORD PTR [rax], rdx
  0076c	49 8b c9	 mov	 rcx, r9
  0076f	49 8b 70 f8	 mov	 rsi, QWORD PTR [r8-8]

; 288  :                 pp -= 2;

  00773	49 83 e8 10	 sub	 r8, 16
  00777	48 8b d6	 mov	 rdx, rsi
  0077a	48 d3 ea	 shr	 rdx, cl
  0077d	48 0b d7	 or	 rdx, rdi
  00780	48 89 50 f8	 mov	 QWORD PTR [rax-8], rdx

; 289  :                 op -= 2;

  00784	48 83 e8 10	 sub	 rax, 16
$LN11@LeftShift_:

; 290  :             }
; 291  : 
; 292  :             if (p_count & 0x1)

  00788	41 f6 c3 01	 test	 r11b, 1
  0078c	74 1f		 je	 SHORT $LN12@LeftShift_

; 293  :             {
; 294  :                 work = temp << n_lshift_bit_count; temp = pp[-0]; work |= temp >> n_rshift_bit_count; op[-0] = work;

  0078e	49 8b ca	 mov	 rcx, r10
  00791	48 d3 e6	 shl	 rsi, cl
  00794	49 8b c9	 mov	 rcx, r9
  00797	48 8b fe	 mov	 rdi, rsi
  0079a	49 8b 30	 mov	 rsi, QWORD PTR [r8]
  0079d	48 8b d6	 mov	 rdx, rsi
  007a0	48 d3 ea	 shr	 rdx, cl
  007a3	48 0b d7	 or	 rdx, rdi
  007a6	48 89 10	 mov	 QWORD PTR [rax], rdx

; 295  :                 pp -= 1;
; 296  :                 op -= 1;

  007a9	48 83 e8 08	 sub	 rax, 8
$LN12@LeftShift_:

; 297  :             }
; 298  :             work = temp << n_lshift_bit_count;

  007ad	49 8b ca	 mov	 rcx, r10
  007b0	48 d3 e6	 shl	 rsi, cl

; 299  :             *op = work;

  007b3	48 89 30	 mov	 QWORD PTR [rax], rsi
$LN26@LeftShift_:

; 300  : 
; 301  :             if (padding_zero)
; 302  :                 _ZERO_MEMORY_UNIT(o, n_word_count);
; 303  :         }
; 304  :     }

  007b6	83 7c 24 30 00	 cmp	 DWORD PTR padding_zero$[rsp], 0
  007bb	74 0b		 je	 SHORT $LN13@LeftShift_
  007bd	48 8b cb	 mov	 rcx, rbx
  007c0	33 c0		 xor	 eax, eax
  007c2	49 8b fe	 mov	 rdi, r14
  007c5	f3 48 ab	 rep stosq
$LN13@LeftShift_:
  007c8	48 8b 5c 24 18	 mov	 rbx, QWORD PTR [rsp+24]
  007cd	48 8b 74 24 20	 mov	 rsi, QWORD PTR [rsp+32]
  007d2	48 8b 7c 24 28	 mov	 rdi, QWORD PTR [rsp+40]
  007d7	41 5e		 pop	 r14
  007d9	c3		 ret	 0
?LeftShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ENDP ; Palmtree::Math::Core::Internal::LeftShift_Imp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp
;	COMDAT ?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z
_TEXT	SEGMENT
p$ = 24
p_word_count$ = 32
n$ = 40
o$ = 48
padding_zero$ = 56
?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z PROC ; Palmtree::Math::Core::Internal::RightShift_Imp, COMDAT

; 37   :     {

$LN115:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	57		 push	 rdi
  00010	41 56		 push	 r14
  00012	4d 8b d0	 mov	 r10, r8
  00015	48 8b da	 mov	 rbx, rdx

; 38   :         __UNIT_TYPE* pp = p;
; 39   :         __UNIT_TYPE p_count = p_word_count;
; 40   :         __UNIT_TYPE* op = o;
; 41   :         // n_word_count ワード右に移動し、更に n_bit_count ビット右に移動する。
; 42   :         __UNIT_TYPE n_word_count = n / __UNIT_TYPE_BIT_COUNT;

  00018	49 8b ea	 mov	 rbp, r10
  0001b	4d 8b f1	 mov	 r14, r9
  0001e	48 c1 ed 06	 shr	 rbp, 6

; 43   :         __UNIT_TYPE n_rshift_bit_count = n % __UNIT_TYPE_BIT_COUNT;

  00022	41 83 e2 3f	 and	 r10d, 63		; 0000003fH
  00026	48 2b dd	 sub	 rbx, rbp
  00029	4d 8b c1	 mov	 r8, r9
  0002c	48 8d 04 e9	 lea	 rax, QWORD PTR [rcx+rbp*8]

; 44   :         if (n_rshift_bit_count == 0)

  00030	4d 85 d2	 test	 r10, r10
  00033	75 20		 jne	 SHORT $LN4@RightShift
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 67   :             __movsq(d, s, count);

  00035	49 8b f9	 mov	 rdi, r9
  00038	48 8b f0	 mov	 rsi, rax
  0003b	48 8b cb	 mov	 rcx, rbx
  0003e	f3 48 a5	 rep movsq
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_shift.cpp

; 48   :             if (padding_zero)

  00041	44 39 54 24 38	 cmp	 DWORD PTR padding_zero$[rsp], r10d
  00046	0f 84 7d 07 00
	00		 je	 $LN14@RightShift

; 49   :                 _ZERO_MEMORY_UNIT(op + p_count - n_word_count, n_word_count);

  0004c	49 8d 3c d9	 lea	 rdi, QWORD PTR [r9+rbx*8]

; 50   :         }
; 51   :         else

  00050	e9 6c 07 00 00	 jmp	 $LN113@RightShift
$LN4@RightShift:

; 52   :         {
; 53   :             pp += n_word_count;
; 54   :             __UNIT_TYPE n_lshift_bit_count = __UNIT_TYPE_BIT_COUNT - n_rshift_bit_count;
; 55   :             // p_count - n_word_count 回繰り返し
; 56   : 
; 57   :             __UNIT_TYPE temp = *pp++;

  00055	48 8b 30	 mov	 rsi, QWORD PTR [rax]

; 58   :             __UNIT_TYPE work;
; 59   :             __UNIT_TYPE t_count = p_count - n_word_count - 1;

  00058	4c 8d 5b ff	 lea	 r11, QWORD PTR [rbx-1]
  0005c	4c 89 7c 24 18	 mov	 QWORD PTR [rsp+24], r15
  00061	41 b9 40 00 00
	00		 mov	 r9d, 64			; 00000040H

; 60   : 
; 61   :             __UNIT_TYPE count = t_count >> 5;

  00067	4d 8b fb	 mov	 r15, r11
  0006a	4d 2b ca	 sub	 r9, r10
  0006d	49 c1 ef 05	 shr	 r15, 5
  00071	48 83 c0 08	 add	 rax, 8

; 62   :             while (count > 0)

  00075	4d 85 ff	 test	 r15, r15
  00078	0f 84 b7 03 00
	00		 je	 $LN3@RightShift
  0007e	66 90		 npad	 2
$LL2@RightShift:

; 63   :             {
; 64   :                 work = temp >> n_rshift_bit_count; temp = pp[0]; work |= temp << n_lshift_bit_count; op[0] = work;

  00080	48 8b 38	 mov	 rdi, QWORD PTR [rax]
  00083	49 8b ca	 mov	 rcx, r10
  00086	48 d3 ee	 shr	 rsi, cl
  00089	48 8b d7	 mov	 rdx, rdi
  0008c	49 8b c9	 mov	 rcx, r9
  0008f	48 d3 e2	 shl	 rdx, cl
  00092	49 8b ca	 mov	 rcx, r10
  00095	48 0b d6	 or	 rdx, rsi
  00098	48 d3 ef	 shr	 rdi, cl
  0009b	49 89 10	 mov	 QWORD PTR [r8], rdx
  0009e	49 8b c9	 mov	 rcx, r9
  000a1	48 8b 70 08	 mov	 rsi, QWORD PTR [rax+8]
  000a5	48 8b d6	 mov	 rdx, rsi
  000a8	48 d3 e2	 shl	 rdx, cl
  000ab	49 8b ca	 mov	 rcx, r10
  000ae	48 0b d7	 or	 rdx, rdi
  000b1	48 d3 ee	 shr	 rsi, cl
  000b4	49 89 50 08	 mov	 QWORD PTR [r8+8], rdx
  000b8	49 8b c9	 mov	 rcx, r9
  000bb	48 8b 78 10	 mov	 rdi, QWORD PTR [rax+16]
  000bf	48 8b d7	 mov	 rdx, rdi
  000c2	48 d3 e2	 shl	 rdx, cl
  000c5	49 8b ca	 mov	 rcx, r10
  000c8	48 0b d6	 or	 rdx, rsi
  000cb	48 d3 ef	 shr	 rdi, cl
  000ce	49 89 50 10	 mov	 QWORD PTR [r8+16], rdx
  000d2	49 8b c9	 mov	 rcx, r9
  000d5	48 8b 70 18	 mov	 rsi, QWORD PTR [rax+24]
  000d9	48 8b d6	 mov	 rdx, rsi
  000dc	48 d3 e2	 shl	 rdx, cl
  000df	49 8b ca	 mov	 rcx, r10
  000e2	48 0b d7	 or	 rdx, rdi
  000e5	48 d3 ee	 shr	 rsi, cl
  000e8	49 89 50 18	 mov	 QWORD PTR [r8+24], rdx
  000ec	49 8b c9	 mov	 rcx, r9
  000ef	48 8b 78 20	 mov	 rdi, QWORD PTR [rax+32]
  000f3	48 8b d7	 mov	 rdx, rdi
  000f6	48 d3 e2	 shl	 rdx, cl
  000f9	49 8b ca	 mov	 rcx, r10
  000fc	48 0b d6	 or	 rdx, rsi
  000ff	48 d3 ef	 shr	 rdi, cl
  00102	49 89 50 20	 mov	 QWORD PTR [r8+32], rdx
  00106	49 8b c9	 mov	 rcx, r9
  00109	48 8b 70 28	 mov	 rsi, QWORD PTR [rax+40]
  0010d	48 8b d6	 mov	 rdx, rsi
  00110	48 d3 e2	 shl	 rdx, cl
  00113	49 8b ca	 mov	 rcx, r10
  00116	48 0b d7	 or	 rdx, rdi
  00119	48 d3 ee	 shr	 rsi, cl
  0011c	49 89 50 28	 mov	 QWORD PTR [r8+40], rdx
  00120	49 8b c9	 mov	 rcx, r9
  00123	48 8b 78 30	 mov	 rdi, QWORD PTR [rax+48]
  00127	48 8b d7	 mov	 rdx, rdi
  0012a	48 d3 e2	 shl	 rdx, cl
  0012d	49 8b ca	 mov	 rcx, r10
  00130	48 0b d6	 or	 rdx, rsi
  00133	48 d3 ef	 shr	 rdi, cl
  00136	49 89 50 30	 mov	 QWORD PTR [r8+48], rdx
  0013a	49 8b c9	 mov	 rcx, r9
  0013d	48 8b 70 38	 mov	 rsi, QWORD PTR [rax+56]
  00141	48 8b d6	 mov	 rdx, rsi
  00144	48 d3 e2	 shl	 rdx, cl
  00147	49 8b ca	 mov	 rcx, r10
  0014a	48 0b d7	 or	 rdx, rdi
  0014d	48 d3 ee	 shr	 rsi, cl
  00150	49 89 50 38	 mov	 QWORD PTR [r8+56], rdx
  00154	49 8b c9	 mov	 rcx, r9
  00157	48 8b 78 40	 mov	 rdi, QWORD PTR [rax+64]
  0015b	48 8b d7	 mov	 rdx, rdi
  0015e	48 d3 e2	 shl	 rdx, cl
  00161	49 8b ca	 mov	 rcx, r10
  00164	48 0b d6	 or	 rdx, rsi
  00167	48 d3 ef	 shr	 rdi, cl
  0016a	49 89 50 40	 mov	 QWORD PTR [r8+64], rdx
  0016e	49 8b c9	 mov	 rcx, r9
  00171	48 8b 70 48	 mov	 rsi, QWORD PTR [rax+72]
  00175	48 8b d6	 mov	 rdx, rsi
  00178	48 d3 e2	 shl	 rdx, cl
  0017b	49 8b ca	 mov	 rcx, r10
  0017e	48 0b d7	 or	 rdx, rdi
  00181	49 89 50 48	 mov	 QWORD PTR [r8+72], rdx
  00185	48 8b 78 50	 mov	 rdi, QWORD PTR [rax+80]
  00189	48 d3 ee	 shr	 rsi, cl
  0018c	48 8b d7	 mov	 rdx, rdi
  0018f	49 8b c9	 mov	 rcx, r9
  00192	48 d3 e2	 shl	 rdx, cl
  00195	49 8b ca	 mov	 rcx, r10
  00198	48 0b d6	 or	 rdx, rsi
  0019b	48 d3 ef	 shr	 rdi, cl
  0019e	49 89 50 50	 mov	 QWORD PTR [r8+80], rdx
  001a2	49 8b c9	 mov	 rcx, r9
  001a5	48 8b 70 58	 mov	 rsi, QWORD PTR [rax+88]
  001a9	48 8b d6	 mov	 rdx, rsi
  001ac	48 d3 e2	 shl	 rdx, cl
  001af	49 8b ca	 mov	 rcx, r10
  001b2	48 0b d7	 or	 rdx, rdi
  001b5	48 d3 ee	 shr	 rsi, cl
  001b8	49 89 50 58	 mov	 QWORD PTR [r8+88], rdx
  001bc	49 8b c9	 mov	 rcx, r9
  001bf	48 8b 78 60	 mov	 rdi, QWORD PTR [rax+96]
  001c3	48 8b d7	 mov	 rdx, rdi
  001c6	48 d3 e2	 shl	 rdx, cl
  001c9	49 8b ca	 mov	 rcx, r10
  001cc	48 0b d6	 or	 rdx, rsi
  001cf	48 d3 ef	 shr	 rdi, cl
  001d2	49 89 50 60	 mov	 QWORD PTR [r8+96], rdx
  001d6	49 8b c9	 mov	 rcx, r9
  001d9	48 8b 70 68	 mov	 rsi, QWORD PTR [rax+104]
  001dd	48 8b d6	 mov	 rdx, rsi
  001e0	48 d3 e2	 shl	 rdx, cl
  001e3	49 8b ca	 mov	 rcx, r10
  001e6	48 0b d7	 or	 rdx, rdi
  001e9	48 d3 ee	 shr	 rsi, cl
  001ec	49 89 50 68	 mov	 QWORD PTR [r8+104], rdx
  001f0	49 8b c9	 mov	 rcx, r9
  001f3	48 8b 78 70	 mov	 rdi, QWORD PTR [rax+112]
  001f7	48 8b d7	 mov	 rdx, rdi
  001fa	48 d3 e2	 shl	 rdx, cl
  001fd	49 8b ca	 mov	 rcx, r10
  00200	48 0b d6	 or	 rdx, rsi
  00203	48 d3 ef	 shr	 rdi, cl
  00206	49 89 50 70	 mov	 QWORD PTR [r8+112], rdx
  0020a	49 8b c9	 mov	 rcx, r9
  0020d	48 8b 70 78	 mov	 rsi, QWORD PTR [rax+120]
  00211	48 8b d6	 mov	 rdx, rsi
  00214	48 d3 e2	 shl	 rdx, cl
  00217	49 8b ca	 mov	 rcx, r10
  0021a	48 0b d7	 or	 rdx, rdi
  0021d	48 d3 ee	 shr	 rsi, cl
  00220	49 89 50 78	 mov	 QWORD PTR [r8+120], rdx
  00224	49 8b c9	 mov	 rcx, r9
  00227	48 8b b8 80 00
	00 00		 mov	 rdi, QWORD PTR [rax+128]
  0022e	48 8b d7	 mov	 rdx, rdi
  00231	48 d3 e2	 shl	 rdx, cl
  00234	49 8b ca	 mov	 rcx, r10
  00237	48 0b d6	 or	 rdx, rsi
  0023a	48 d3 ef	 shr	 rdi, cl
  0023d	49 89 90 80 00
	00 00		 mov	 QWORD PTR [r8+128], rdx
  00244	49 8b c9	 mov	 rcx, r9
  00247	48 8b b0 88 00
	00 00		 mov	 rsi, QWORD PTR [rax+136]
  0024e	48 8b d6	 mov	 rdx, rsi
  00251	48 d3 e2	 shl	 rdx, cl
  00254	49 8b ca	 mov	 rcx, r10
  00257	48 0b d7	 or	 rdx, rdi
  0025a	48 d3 ee	 shr	 rsi, cl
  0025d	49 89 90 88 00
	00 00		 mov	 QWORD PTR [r8+136], rdx
  00264	49 8b c9	 mov	 rcx, r9
  00267	48 8b b8 90 00
	00 00		 mov	 rdi, QWORD PTR [rax+144]
  0026e	48 8b d7	 mov	 rdx, rdi
  00271	48 d3 e2	 shl	 rdx, cl
  00274	49 8b ca	 mov	 rcx, r10
  00277	48 0b d6	 or	 rdx, rsi
  0027a	48 d3 ef	 shr	 rdi, cl
  0027d	49 89 90 90 00
	00 00		 mov	 QWORD PTR [r8+144], rdx
  00284	49 8b c9	 mov	 rcx, r9
  00287	48 8b b0 98 00
	00 00		 mov	 rsi, QWORD PTR [rax+152]
  0028e	48 8b d6	 mov	 rdx, rsi
  00291	48 d3 e2	 shl	 rdx, cl
  00294	49 8b ca	 mov	 rcx, r10
  00297	48 0b d7	 or	 rdx, rdi
  0029a	49 89 90 98 00
	00 00		 mov	 QWORD PTR [r8+152], rdx
  002a1	48 d3 ee	 shr	 rsi, cl
  002a4	48 8b b8 a0 00
	00 00		 mov	 rdi, QWORD PTR [rax+160]
  002ab	49 8b c9	 mov	 rcx, r9
  002ae	48 8b d7	 mov	 rdx, rdi
  002b1	48 d3 e2	 shl	 rdx, cl
  002b4	49 8b ca	 mov	 rcx, r10
  002b7	48 0b d6	 or	 rdx, rsi
  002ba	48 d3 ef	 shr	 rdi, cl
  002bd	49 89 90 a0 00
	00 00		 mov	 QWORD PTR [r8+160], rdx
  002c4	49 8b c9	 mov	 rcx, r9
  002c7	48 8b b0 a8 00
	00 00		 mov	 rsi, QWORD PTR [rax+168]
  002ce	48 8b d6	 mov	 rdx, rsi
  002d1	48 d3 e2	 shl	 rdx, cl
  002d4	49 8b ca	 mov	 rcx, r10
  002d7	48 0b d7	 or	 rdx, rdi
  002da	48 d3 ee	 shr	 rsi, cl
  002dd	49 89 90 a8 00
	00 00		 mov	 QWORD PTR [r8+168], rdx
  002e4	49 8b c9	 mov	 rcx, r9
  002e7	48 8b b8 b0 00
	00 00		 mov	 rdi, QWORD PTR [rax+176]
  002ee	48 8b d7	 mov	 rdx, rdi
  002f1	48 d3 e2	 shl	 rdx, cl
  002f4	49 8b ca	 mov	 rcx, r10
  002f7	48 0b d6	 or	 rdx, rsi
  002fa	48 d3 ef	 shr	 rdi, cl
  002fd	49 89 90 b0 00
	00 00		 mov	 QWORD PTR [r8+176], rdx
  00304	49 8b c9	 mov	 rcx, r9
  00307	48 8b b0 b8 00
	00 00		 mov	 rsi, QWORD PTR [rax+184]
  0030e	48 8b d6	 mov	 rdx, rsi
  00311	48 d3 e2	 shl	 rdx, cl
  00314	49 8b ca	 mov	 rcx, r10
  00317	48 0b d7	 or	 rdx, rdi
  0031a	48 d3 ee	 shr	 rsi, cl
  0031d	49 89 90 b8 00
	00 00		 mov	 QWORD PTR [r8+184], rdx
  00324	49 8b c9	 mov	 rcx, r9
  00327	48 8b b8 c0 00
	00 00		 mov	 rdi, QWORD PTR [rax+192]
  0032e	48 8b d7	 mov	 rdx, rdi
  00331	48 d3 e2	 shl	 rdx, cl
  00334	49 8b ca	 mov	 rcx, r10
  00337	48 0b d6	 or	 rdx, rsi
  0033a	48 d3 ef	 shr	 rdi, cl
  0033d	49 89 90 c0 00
	00 00		 mov	 QWORD PTR [r8+192], rdx
  00344	49 8b c9	 mov	 rcx, r9
  00347	48 8b b0 c8 00
	00 00		 mov	 rsi, QWORD PTR [rax+200]
  0034e	48 8b d6	 mov	 rdx, rsi
  00351	48 d3 e2	 shl	 rdx, cl
  00354	49 8b ca	 mov	 rcx, r10
  00357	48 0b d7	 or	 rdx, rdi
  0035a	48 d3 ee	 shr	 rsi, cl
  0035d	49 89 90 c8 00
	00 00		 mov	 QWORD PTR [r8+200], rdx
  00364	49 8b c9	 mov	 rcx, r9
  00367	48 8b b8 d0 00
	00 00		 mov	 rdi, QWORD PTR [rax+208]
  0036e	48 8b d7	 mov	 rdx, rdi
  00371	48 d3 e2	 shl	 rdx, cl
  00374	49 8b ca	 mov	 rcx, r10
  00377	48 0b d6	 or	 rdx, rsi
  0037a	48 d3 ef	 shr	 rdi, cl
  0037d	49 89 90 d0 00
	00 00		 mov	 QWORD PTR [r8+208], rdx
  00384	49 8b c9	 mov	 rcx, r9
  00387	48 8b b0 d8 00
	00 00		 mov	 rsi, QWORD PTR [rax+216]
  0038e	48 8b d6	 mov	 rdx, rsi
  00391	48 d3 e2	 shl	 rdx, cl
  00394	49 8b ca	 mov	 rcx, r10
  00397	48 0b d7	 or	 rdx, rdi
  0039a	48 d3 ee	 shr	 rsi, cl
  0039d	49 89 90 d8 00
	00 00		 mov	 QWORD PTR [r8+216], rdx
  003a4	49 8b c9	 mov	 rcx, r9
  003a7	48 8b b8 e0 00
	00 00		 mov	 rdi, QWORD PTR [rax+224]
  003ae	48 8b d7	 mov	 rdx, rdi
  003b1	48 d3 e2	 shl	 rdx, cl
  003b4	49 8b ca	 mov	 rcx, r10
  003b7	48 0b d6	 or	 rdx, rsi
  003ba	48 d3 ef	 shr	 rdi, cl
  003bd	49 89 90 e0 00
	00 00		 mov	 QWORD PTR [r8+224], rdx
  003c4	49 8b c9	 mov	 rcx, r9
  003c7	48 8b b0 e8 00
	00 00		 mov	 rsi, QWORD PTR [rax+232]
  003ce	48 8b d6	 mov	 rdx, rsi
  003d1	48 d3 e2	 shl	 rdx, cl
  003d4	49 8b ca	 mov	 rcx, r10
  003d7	48 0b d7	 or	 rdx, rdi
  003da	49 89 90 e8 00
	00 00		 mov	 QWORD PTR [r8+232], rdx
  003e1	48 8b b8 f0 00
	00 00		 mov	 rdi, QWORD PTR [rax+240]
  003e8	48 d3 ee	 shr	 rsi, cl
  003eb	49 8b c9	 mov	 rcx, r9
  003ee	48 8b d7	 mov	 rdx, rdi
  003f1	48 d3 e2	 shl	 rdx, cl
  003f4	49 8b ca	 mov	 rcx, r10
  003f7	48 0b d6	 or	 rdx, rsi
  003fa	48 d3 ef	 shr	 rdi, cl
  003fd	49 89 90 f0 00
	00 00		 mov	 QWORD PTR [r8+240], rdx
  00404	49 8b c9	 mov	 rcx, r9
  00407	48 8b b0 f8 00
	00 00		 mov	 rsi, QWORD PTR [rax+248]

; 65   :                 work = temp >> n_rshift_bit_count; temp = pp[1]; work |= temp << n_lshift_bit_count; op[1] = work;
; 66   :                 work = temp >> n_rshift_bit_count; temp = pp[2]; work |= temp << n_lshift_bit_count; op[2] = work;
; 67   :                 work = temp >> n_rshift_bit_count; temp = pp[3]; work |= temp << n_lshift_bit_count; op[3] = work;
; 68   :                 work = temp >> n_rshift_bit_count; temp = pp[4]; work |= temp << n_lshift_bit_count; op[4] = work;
; 69   :                 work = temp >> n_rshift_bit_count; temp = pp[5]; work |= temp << n_lshift_bit_count; op[5] = work;
; 70   :                 work = temp >> n_rshift_bit_count; temp = pp[6]; work |= temp << n_lshift_bit_count; op[6] = work;
; 71   :                 work = temp >> n_rshift_bit_count; temp = pp[7]; work |= temp << n_lshift_bit_count; op[7] = work;
; 72   :                 work = temp >> n_rshift_bit_count; temp = pp[8]; work |= temp << n_lshift_bit_count; op[8] = work;
; 73   :                 work = temp >> n_rshift_bit_count; temp = pp[9]; work |= temp << n_lshift_bit_count; op[9] = work;
; 74   :                 work = temp >> n_rshift_bit_count; temp = pp[10]; work |= temp << n_lshift_bit_count; op[10] = work;
; 75   :                 work = temp >> n_rshift_bit_count; temp = pp[11]; work |= temp << n_lshift_bit_count; op[11] = work;
; 76   :                 work = temp >> n_rshift_bit_count; temp = pp[12]; work |= temp << n_lshift_bit_count; op[12] = work;
; 77   :                 work = temp >> n_rshift_bit_count; temp = pp[13]; work |= temp << n_lshift_bit_count; op[13] = work;
; 78   :                 work = temp >> n_rshift_bit_count; temp = pp[14]; work |= temp << n_lshift_bit_count; op[14] = work;
; 79   :                 work = temp >> n_rshift_bit_count; temp = pp[15]; work |= temp << n_lshift_bit_count; op[15] = work;
; 80   :                 work = temp >> n_rshift_bit_count; temp = pp[16]; work |= temp << n_lshift_bit_count; op[16] = work;
; 81   :                 work = temp >> n_rshift_bit_count; temp = pp[17]; work |= temp << n_lshift_bit_count; op[17] = work;
; 82   :                 work = temp >> n_rshift_bit_count; temp = pp[18]; work |= temp << n_lshift_bit_count; op[18] = work;
; 83   :                 work = temp >> n_rshift_bit_count; temp = pp[19]; work |= temp << n_lshift_bit_count; op[19] = work;
; 84   :                 work = temp >> n_rshift_bit_count; temp = pp[20]; work |= temp << n_lshift_bit_count; op[20] = work;
; 85   :                 work = temp >> n_rshift_bit_count; temp = pp[21]; work |= temp << n_lshift_bit_count; op[21] = work;
; 86   :                 work = temp >> n_rshift_bit_count; temp = pp[22]; work |= temp << n_lshift_bit_count; op[22] = work;
; 87   :                 work = temp >> n_rshift_bit_count; temp = pp[23]; work |= temp << n_lshift_bit_count; op[23] = work;
; 88   :                 work = temp >> n_rshift_bit_count; temp = pp[24]; work |= temp << n_lshift_bit_count; op[24] = work;
; 89   :                 work = temp >> n_rshift_bit_count; temp = pp[25]; work |= temp << n_lshift_bit_count; op[25] = work;
; 90   :                 work = temp >> n_rshift_bit_count; temp = pp[26]; work |= temp << n_lshift_bit_count; op[26] = work;
; 91   :                 work = temp >> n_rshift_bit_count; temp = pp[27]; work |= temp << n_lshift_bit_count; op[27] = work;
; 92   :                 work = temp >> n_rshift_bit_count; temp = pp[28]; work |= temp << n_lshift_bit_count; op[28] = work;
; 93   :                 work = temp >> n_rshift_bit_count; temp = pp[29]; work |= temp << n_lshift_bit_count; op[29] = work;
; 94   :                 work = temp >> n_rshift_bit_count; temp = pp[30]; work |= temp << n_lshift_bit_count; op[30] = work;
; 95   :                 work = temp >> n_rshift_bit_count; temp = pp[31]; work |= temp << n_lshift_bit_count; op[31] = work;
; 96   :                 --count;
; 97   :                 pp += 32;

  0040e	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  00414	48 8b d6	 mov	 rdx, rsi
  00417	48 d3 e2	 shl	 rdx, cl
  0041a	48 0b d7	 or	 rdx, rdi
  0041d	49 89 90 f8 00
	00 00		 mov	 QWORD PTR [r8+248], rdx

; 98   :                 op += 32;

  00424	49 81 c0 00 01
	00 00		 add	 r8, 256			; 00000100H
  0042b	49 83 ef 01	 sub	 r15, 1
  0042f	0f 85 4b fc ff
	ff		 jne	 $LL2@RightShift
$LN3@RightShift:
  00435	4c 8b 7c 24 18	 mov	 r15, QWORD PTR [rsp+24]

; 99   :             }
; 100  : 
; 101  :             if (t_count & 0x10)

  0043a	41 f6 c3 10	 test	 r11b, 16
  0043e	0f 84 a6 01 00
	00		 je	 $LN7@RightShift

; 102  :             {
; 103  :                 work = temp >> n_rshift_bit_count; temp = pp[0]; work |= temp << n_lshift_bit_count; op[0] = work;

  00444	48 8b 38	 mov	 rdi, QWORD PTR [rax]
  00447	49 8b ca	 mov	 rcx, r10
  0044a	48 d3 ee	 shr	 rsi, cl
  0044d	48 8b d7	 mov	 rdx, rdi
  00450	49 8b c9	 mov	 rcx, r9
  00453	48 d3 e2	 shl	 rdx, cl
  00456	49 8b ca	 mov	 rcx, r10
  00459	48 0b d6	 or	 rdx, rsi
  0045c	48 d3 ef	 shr	 rdi, cl
  0045f	49 89 10	 mov	 QWORD PTR [r8], rdx
  00462	49 8b c9	 mov	 rcx, r9
  00465	48 8b 70 08	 mov	 rsi, QWORD PTR [rax+8]
  00469	48 8b d6	 mov	 rdx, rsi
  0046c	48 d3 e2	 shl	 rdx, cl
  0046f	49 8b ca	 mov	 rcx, r10
  00472	48 0b d7	 or	 rdx, rdi
  00475	48 d3 ee	 shr	 rsi, cl
  00478	49 89 50 08	 mov	 QWORD PTR [r8+8], rdx
  0047c	49 8b c9	 mov	 rcx, r9
  0047f	48 8b 78 10	 mov	 rdi, QWORD PTR [rax+16]
  00483	48 8b d7	 mov	 rdx, rdi
  00486	48 d3 e2	 shl	 rdx, cl
  00489	49 8b ca	 mov	 rcx, r10
  0048c	48 0b d6	 or	 rdx, rsi
  0048f	48 d3 ef	 shr	 rdi, cl
  00492	49 89 50 10	 mov	 QWORD PTR [r8+16], rdx
  00496	49 8b c9	 mov	 rcx, r9
  00499	48 8b 70 18	 mov	 rsi, QWORD PTR [rax+24]
  0049d	48 8b d6	 mov	 rdx, rsi
  004a0	48 d3 e2	 shl	 rdx, cl
  004a3	49 8b ca	 mov	 rcx, r10
  004a6	48 0b d7	 or	 rdx, rdi
  004a9	48 d3 ee	 shr	 rsi, cl
  004ac	49 89 50 18	 mov	 QWORD PTR [r8+24], rdx
  004b0	49 8b c9	 mov	 rcx, r9
  004b3	48 8b 78 20	 mov	 rdi, QWORD PTR [rax+32]
  004b7	48 8b d7	 mov	 rdx, rdi
  004ba	48 d3 e2	 shl	 rdx, cl
  004bd	49 8b ca	 mov	 rcx, r10
  004c0	48 0b d6	 or	 rdx, rsi
  004c3	48 d3 ef	 shr	 rdi, cl
  004c6	49 89 50 20	 mov	 QWORD PTR [r8+32], rdx
  004ca	49 8b c9	 mov	 rcx, r9
  004cd	48 8b 70 28	 mov	 rsi, QWORD PTR [rax+40]
  004d1	48 8b d6	 mov	 rdx, rsi
  004d4	48 d3 e2	 shl	 rdx, cl
  004d7	49 8b ca	 mov	 rcx, r10
  004da	48 0b d7	 or	 rdx, rdi
  004dd	48 d3 ee	 shr	 rsi, cl
  004e0	49 89 50 28	 mov	 QWORD PTR [r8+40], rdx
  004e4	49 8b c9	 mov	 rcx, r9
  004e7	48 8b 78 30	 mov	 rdi, QWORD PTR [rax+48]
  004eb	48 8b d7	 mov	 rdx, rdi
  004ee	48 d3 e2	 shl	 rdx, cl
  004f1	49 8b ca	 mov	 rcx, r10
  004f4	48 0b d6	 or	 rdx, rsi
  004f7	48 d3 ef	 shr	 rdi, cl
  004fa	49 89 50 30	 mov	 QWORD PTR [r8+48], rdx
  004fe	49 8b c9	 mov	 rcx, r9
  00501	48 8b 70 38	 mov	 rsi, QWORD PTR [rax+56]
  00505	48 8b d6	 mov	 rdx, rsi
  00508	48 d3 e2	 shl	 rdx, cl
  0050b	49 8b ca	 mov	 rcx, r10
  0050e	48 0b d7	 or	 rdx, rdi
  00511	48 d3 ee	 shr	 rsi, cl
  00514	49 89 50 38	 mov	 QWORD PTR [r8+56], rdx
  00518	49 8b c9	 mov	 rcx, r9
  0051b	48 8b 78 40	 mov	 rdi, QWORD PTR [rax+64]
  0051f	48 8b d7	 mov	 rdx, rdi
  00522	48 d3 e2	 shl	 rdx, cl
  00525	49 8b ca	 mov	 rcx, r10
  00528	48 0b d6	 or	 rdx, rsi
  0052b	48 d3 ef	 shr	 rdi, cl
  0052e	49 89 50 40	 mov	 QWORD PTR [r8+64], rdx
  00532	49 8b c9	 mov	 rcx, r9
  00535	48 8b 70 48	 mov	 rsi, QWORD PTR [rax+72]
  00539	48 8b d6	 mov	 rdx, rsi
  0053c	48 d3 e2	 shl	 rdx, cl
  0053f	49 8b ca	 mov	 rcx, r10
  00542	48 0b d7	 or	 rdx, rdi
  00545	49 89 50 48	 mov	 QWORD PTR [r8+72], rdx
  00549	48 8b 78 50	 mov	 rdi, QWORD PTR [rax+80]
  0054d	48 d3 ee	 shr	 rsi, cl
  00550	48 8b d7	 mov	 rdx, rdi
  00553	49 8b c9	 mov	 rcx, r9
  00556	48 d3 e2	 shl	 rdx, cl
  00559	49 8b ca	 mov	 rcx, r10
  0055c	48 0b d6	 or	 rdx, rsi
  0055f	48 d3 ef	 shr	 rdi, cl
  00562	49 89 50 50	 mov	 QWORD PTR [r8+80], rdx
  00566	49 8b c9	 mov	 rcx, r9
  00569	48 8b 70 58	 mov	 rsi, QWORD PTR [rax+88]
  0056d	48 8b d6	 mov	 rdx, rsi
  00570	48 d3 e2	 shl	 rdx, cl
  00573	49 8b ca	 mov	 rcx, r10
  00576	48 0b d7	 or	 rdx, rdi
  00579	48 d3 ee	 shr	 rsi, cl
  0057c	49 89 50 58	 mov	 QWORD PTR [r8+88], rdx
  00580	49 8b c9	 mov	 rcx, r9
  00583	48 8b 78 60	 mov	 rdi, QWORD PTR [rax+96]
  00587	48 8b d7	 mov	 rdx, rdi
  0058a	48 d3 e2	 shl	 rdx, cl
  0058d	49 8b ca	 mov	 rcx, r10
  00590	48 0b d6	 or	 rdx, rsi
  00593	48 d3 ef	 shr	 rdi, cl
  00596	49 89 50 60	 mov	 QWORD PTR [r8+96], rdx
  0059a	49 8b c9	 mov	 rcx, r9
  0059d	48 8b 70 68	 mov	 rsi, QWORD PTR [rax+104]
  005a1	48 8b d6	 mov	 rdx, rsi
  005a4	48 d3 e2	 shl	 rdx, cl
  005a7	49 8b ca	 mov	 rcx, r10
  005aa	48 0b d7	 or	 rdx, rdi
  005ad	48 d3 ee	 shr	 rsi, cl
  005b0	49 89 50 68	 mov	 QWORD PTR [r8+104], rdx
  005b4	49 8b c9	 mov	 rcx, r9
  005b7	48 8b 78 70	 mov	 rdi, QWORD PTR [rax+112]
  005bb	48 8b d7	 mov	 rdx, rdi
  005be	48 d3 e2	 shl	 rdx, cl
  005c1	49 8b ca	 mov	 rcx, r10
  005c4	48 0b d6	 or	 rdx, rsi
  005c7	48 d3 ef	 shr	 rdi, cl
  005ca	49 89 50 70	 mov	 QWORD PTR [r8+112], rdx
  005ce	49 8b c9	 mov	 rcx, r9
  005d1	48 8b 70 78	 mov	 rsi, QWORD PTR [rax+120]

; 104  :                 work = temp >> n_rshift_bit_count; temp = pp[1]; work |= temp << n_lshift_bit_count; op[1] = work;
; 105  :                 work = temp >> n_rshift_bit_count; temp = pp[2]; work |= temp << n_lshift_bit_count; op[2] = work;
; 106  :                 work = temp >> n_rshift_bit_count; temp = pp[3]; work |= temp << n_lshift_bit_count; op[3] = work;
; 107  :                 work = temp >> n_rshift_bit_count; temp = pp[4]; work |= temp << n_lshift_bit_count; op[4] = work;
; 108  :                 work = temp >> n_rshift_bit_count; temp = pp[5]; work |= temp << n_lshift_bit_count; op[5] = work;
; 109  :                 work = temp >> n_rshift_bit_count; temp = pp[6]; work |= temp << n_lshift_bit_count; op[6] = work;
; 110  :                 work = temp >> n_rshift_bit_count; temp = pp[7]; work |= temp << n_lshift_bit_count; op[7] = work;
; 111  :                 work = temp >> n_rshift_bit_count; temp = pp[8]; work |= temp << n_lshift_bit_count; op[8] = work;
; 112  :                 work = temp >> n_rshift_bit_count; temp = pp[9]; work |= temp << n_lshift_bit_count; op[9] = work;
; 113  :                 work = temp >> n_rshift_bit_count; temp = pp[10]; work |= temp << n_lshift_bit_count; op[10] = work;
; 114  :                 work = temp >> n_rshift_bit_count; temp = pp[11]; work |= temp << n_lshift_bit_count; op[11] = work;
; 115  :                 work = temp >> n_rshift_bit_count; temp = pp[12]; work |= temp << n_lshift_bit_count; op[12] = work;
; 116  :                 work = temp >> n_rshift_bit_count; temp = pp[13]; work |= temp << n_lshift_bit_count; op[13] = work;
; 117  :                 work = temp >> n_rshift_bit_count; temp = pp[14]; work |= temp << n_lshift_bit_count; op[14] = work;
; 118  :                 work = temp >> n_rshift_bit_count; temp = pp[15]; work |= temp << n_lshift_bit_count; op[15] = work;
; 119  :                 pp += 16;

  005d5	48 83 e8 80	 sub	 rax, -128		; ffffffffffffff80H
  005d9	48 8b d6	 mov	 rdx, rsi
  005dc	48 d3 e2	 shl	 rdx, cl
  005df	48 0b d7	 or	 rdx, rdi
  005e2	49 89 50 78	 mov	 QWORD PTR [r8+120], rdx

; 120  :                 op += 16;

  005e6	49 83 e8 80	 sub	 r8, -128		; ffffffffffffff80H
$LN7@RightShift:

; 121  :             }
; 122  : 
; 123  :             if (t_count & 0x8)

  005ea	41 f6 c3 08	 test	 r11b, 8
  005ee	0f 84 d6 00 00
	00		 je	 $LN8@RightShift

; 124  :             {
; 125  :                 work = temp >> n_rshift_bit_count; temp = pp[0]; work |= temp << n_lshift_bit_count; op[0] = work;

  005f4	48 8b 38	 mov	 rdi, QWORD PTR [rax]
  005f7	49 8b ca	 mov	 rcx, r10
  005fa	48 d3 ee	 shr	 rsi, cl
  005fd	48 8b d7	 mov	 rdx, rdi
  00600	49 8b c9	 mov	 rcx, r9
  00603	48 d3 e2	 shl	 rdx, cl
  00606	49 8b ca	 mov	 rcx, r10
  00609	48 0b d6	 or	 rdx, rsi
  0060c	48 d3 ef	 shr	 rdi, cl
  0060f	49 89 10	 mov	 QWORD PTR [r8], rdx
  00612	49 8b c9	 mov	 rcx, r9
  00615	48 8b 70 08	 mov	 rsi, QWORD PTR [rax+8]
  00619	48 8b d6	 mov	 rdx, rsi
  0061c	48 d3 e2	 shl	 rdx, cl
  0061f	49 8b ca	 mov	 rcx, r10
  00622	48 0b d7	 or	 rdx, rdi
  00625	48 d3 ee	 shr	 rsi, cl
  00628	49 89 50 08	 mov	 QWORD PTR [r8+8], rdx
  0062c	49 8b c9	 mov	 rcx, r9
  0062f	48 8b 78 10	 mov	 rdi, QWORD PTR [rax+16]
  00633	48 8b d7	 mov	 rdx, rdi
  00636	48 d3 e2	 shl	 rdx, cl
  00639	49 8b ca	 mov	 rcx, r10
  0063c	48 0b d6	 or	 rdx, rsi
  0063f	48 d3 ef	 shr	 rdi, cl
  00642	49 89 50 10	 mov	 QWORD PTR [r8+16], rdx
  00646	49 8b c9	 mov	 rcx, r9
  00649	48 8b 70 18	 mov	 rsi, QWORD PTR [rax+24]
  0064d	48 8b d6	 mov	 rdx, rsi
  00650	48 d3 e2	 shl	 rdx, cl
  00653	49 8b ca	 mov	 rcx, r10
  00656	48 0b d7	 or	 rdx, rdi
  00659	48 d3 ee	 shr	 rsi, cl
  0065c	49 89 50 18	 mov	 QWORD PTR [r8+24], rdx
  00660	49 8b c9	 mov	 rcx, r9
  00663	48 8b 78 20	 mov	 rdi, QWORD PTR [rax+32]
  00667	48 8b d7	 mov	 rdx, rdi
  0066a	48 d3 e2	 shl	 rdx, cl
  0066d	49 8b ca	 mov	 rcx, r10
  00670	48 0b d6	 or	 rdx, rsi
  00673	48 d3 ef	 shr	 rdi, cl
  00676	49 89 50 20	 mov	 QWORD PTR [r8+32], rdx
  0067a	49 8b c9	 mov	 rcx, r9
  0067d	48 8b 70 28	 mov	 rsi, QWORD PTR [rax+40]
  00681	48 8b d6	 mov	 rdx, rsi
  00684	48 d3 e2	 shl	 rdx, cl
  00687	49 8b ca	 mov	 rcx, r10
  0068a	48 0b d7	 or	 rdx, rdi
  0068d	48 d3 ee	 shr	 rsi, cl
  00690	49 89 50 28	 mov	 QWORD PTR [r8+40], rdx
  00694	49 8b c9	 mov	 rcx, r9
  00697	48 8b 78 30	 mov	 rdi, QWORD PTR [rax+48]
  0069b	48 8b d7	 mov	 rdx, rdi
  0069e	48 d3 e2	 shl	 rdx, cl
  006a1	49 8b ca	 mov	 rcx, r10
  006a4	48 0b d6	 or	 rdx, rsi
  006a7	48 d3 ef	 shr	 rdi, cl
  006aa	49 89 50 30	 mov	 QWORD PTR [r8+48], rdx
  006ae	49 8b c9	 mov	 rcx, r9
  006b1	48 8b 70 38	 mov	 rsi, QWORD PTR [rax+56]

; 126  :                 work = temp >> n_rshift_bit_count; temp = pp[1]; work |= temp << n_lshift_bit_count; op[1] = work;
; 127  :                 work = temp >> n_rshift_bit_count; temp = pp[2]; work |= temp << n_lshift_bit_count; op[2] = work;
; 128  :                 work = temp >> n_rshift_bit_count; temp = pp[3]; work |= temp << n_lshift_bit_count; op[3] = work;
; 129  :                 work = temp >> n_rshift_bit_count; temp = pp[4]; work |= temp << n_lshift_bit_count; op[4] = work;
; 130  :                 work = temp >> n_rshift_bit_count; temp = pp[5]; work |= temp << n_lshift_bit_count; op[5] = work;
; 131  :                 work = temp >> n_rshift_bit_count; temp = pp[6]; work |= temp << n_lshift_bit_count; op[6] = work;
; 132  :                 work = temp >> n_rshift_bit_count; temp = pp[7]; work |= temp << n_lshift_bit_count; op[7] = work;
; 133  :                 pp += 8;

  006b5	48 83 c0 40	 add	 rax, 64			; 00000040H
  006b9	48 8b d6	 mov	 rdx, rsi
  006bc	48 d3 e2	 shl	 rdx, cl
  006bf	48 0b d7	 or	 rdx, rdi
  006c2	49 89 50 38	 mov	 QWORD PTR [r8+56], rdx

; 134  :                 op += 8;

  006c6	49 83 c0 40	 add	 r8, 64			; 00000040H
$LN8@RightShift:

; 135  :             }
; 136  : 
; 137  :             if (t_count & 0x4)

  006ca	41 f6 c3 04	 test	 r11b, 4
  006ce	74 6e		 je	 SHORT $LN9@RightShift

; 138  :             {
; 139  :                 work = temp >> n_rshift_bit_count; temp = pp[0]; work |= temp << n_lshift_bit_count; op[0] = work;

  006d0	48 8b 38	 mov	 rdi, QWORD PTR [rax]
  006d3	49 8b ca	 mov	 rcx, r10
  006d6	48 d3 ee	 shr	 rsi, cl
  006d9	48 8b d7	 mov	 rdx, rdi
  006dc	49 8b c9	 mov	 rcx, r9
  006df	48 d3 e2	 shl	 rdx, cl
  006e2	49 8b ca	 mov	 rcx, r10
  006e5	48 0b d6	 or	 rdx, rsi
  006e8	48 d3 ef	 shr	 rdi, cl
  006eb	49 89 10	 mov	 QWORD PTR [r8], rdx
  006ee	49 8b c9	 mov	 rcx, r9
  006f1	48 8b 70 08	 mov	 rsi, QWORD PTR [rax+8]
  006f5	48 8b d6	 mov	 rdx, rsi
  006f8	48 d3 e2	 shl	 rdx, cl
  006fb	49 8b ca	 mov	 rcx, r10
  006fe	48 0b d7	 or	 rdx, rdi
  00701	48 d3 ee	 shr	 rsi, cl
  00704	49 89 50 08	 mov	 QWORD PTR [r8+8], rdx
  00708	49 8b c9	 mov	 rcx, r9
  0070b	48 8b 78 10	 mov	 rdi, QWORD PTR [rax+16]
  0070f	48 8b d7	 mov	 rdx, rdi
  00712	48 d3 e2	 shl	 rdx, cl
  00715	49 8b ca	 mov	 rcx, r10
  00718	48 0b d6	 or	 rdx, rsi
  0071b	48 d3 ef	 shr	 rdi, cl
  0071e	49 89 50 10	 mov	 QWORD PTR [r8+16], rdx
  00722	49 8b c9	 mov	 rcx, r9
  00725	48 8b 70 18	 mov	 rsi, QWORD PTR [rax+24]

; 140  :                 work = temp >> n_rshift_bit_count; temp = pp[1]; work |= temp << n_lshift_bit_count; op[1] = work;
; 141  :                 work = temp >> n_rshift_bit_count; temp = pp[2]; work |= temp << n_lshift_bit_count; op[2] = work;
; 142  :                 work = temp >> n_rshift_bit_count; temp = pp[3]; work |= temp << n_lshift_bit_count; op[3] = work;
; 143  :                 pp += 4;

  00729	48 83 c0 20	 add	 rax, 32			; 00000020H
  0072d	48 8b d6	 mov	 rdx, rsi
  00730	48 d3 e2	 shl	 rdx, cl
  00733	48 0b d7	 or	 rdx, rdi
  00736	49 89 50 18	 mov	 QWORD PTR [r8+24], rdx

; 144  :                 op += 4;

  0073a	49 83 c0 20	 add	 r8, 32			; 00000020H
$LN9@RightShift:

; 145  :             }
; 146  : 
; 147  :             if (t_count & 0x2)

  0073e	41 f6 c3 02	 test	 r11b, 2
  00742	74 3a		 je	 SHORT $LN10@RightShift

; 148  :             {
; 149  :                 work = temp >> n_rshift_bit_count; temp = pp[0]; work |= temp << n_lshift_bit_count; op[0] = work;

  00744	48 8b 38	 mov	 rdi, QWORD PTR [rax]
  00747	49 8b ca	 mov	 rcx, r10
  0074a	48 d3 ee	 shr	 rsi, cl
  0074d	48 8b d7	 mov	 rdx, rdi
  00750	49 8b c9	 mov	 rcx, r9
  00753	48 d3 e2	 shl	 rdx, cl
  00756	49 8b ca	 mov	 rcx, r10
  00759	48 0b d6	 or	 rdx, rsi
  0075c	48 d3 ef	 shr	 rdi, cl
  0075f	49 89 10	 mov	 QWORD PTR [r8], rdx
  00762	49 8b c9	 mov	 rcx, r9
  00765	48 8b 70 08	 mov	 rsi, QWORD PTR [rax+8]

; 150  :                 work = temp >> n_rshift_bit_count; temp = pp[1]; work |= temp << n_lshift_bit_count; op[1] = work;
; 151  :                 pp += 2;

  00769	48 83 c0 10	 add	 rax, 16
  0076d	48 8b d6	 mov	 rdx, rsi
  00770	48 d3 e2	 shl	 rdx, cl
  00773	48 0b d7	 or	 rdx, rdi
  00776	49 89 50 08	 mov	 QWORD PTR [r8+8], rdx

; 152  :                 op += 2;

  0077a	49 83 c0 10	 add	 r8, 16
$LN10@RightShift:

; 153  :             }
; 154  : 
; 155  :             if (t_count & 0x1)

  0077e	41 f6 c3 01	 test	 r11b, 1
  00782	74 1f		 je	 SHORT $LN11@RightShift

; 156  :             {
; 157  :                 work = temp >> n_rshift_bit_count; temp = pp[0]; work |= temp << n_lshift_bit_count; op[0] = work;

  00784	49 8b ca	 mov	 rcx, r10
  00787	48 d3 ee	 shr	 rsi, cl
  0078a	49 8b c9	 mov	 rcx, r9
  0078d	48 8b d6	 mov	 rdx, rsi
  00790	48 8b 30	 mov	 rsi, QWORD PTR [rax]
  00793	48 8b c6	 mov	 rax, rsi
  00796	48 d3 e0	 shl	 rax, cl
  00799	48 0b c2	 or	 rax, rdx
  0079c	49 89 00	 mov	 QWORD PTR [r8], rax

; 158  :                 pp += 1;
; 159  :                 op += 1;

  0079f	49 83 c0 08	 add	 r8, 8
$LN11@RightShift:

; 160  :             }
; 161  : 
; 162  :             work = temp >> n_rshift_bit_count;
; 163  :             if (work != 0 || padding_zero)

  007a3	8b 44 24 38	 mov	 eax, DWORD PTR padding_zero$[rsp]
  007a7	49 8b ca	 mov	 rcx, r10
  007aa	48 d3 ee	 shr	 rsi, cl
  007ad	48 85 f6	 test	 rsi, rsi
  007b0	75 04		 jne	 SHORT $LN13@RightShift
  007b2	85 c0		 test	 eax, eax
  007b4	74 13		 je	 SHORT $LN14@RightShift
$LN13@RightShift:

; 164  :                 *op = work;

  007b6	49 89 30	 mov	 QWORD PTR [r8], rsi

; 165  : 
; 166  :             if (padding_zero)

  007b9	85 c0		 test	 eax, eax
  007bb	74 0c		 je	 SHORT $LN14@RightShift

; 167  :                 _ZERO_MEMORY_UNIT(o + p_word_count - n_word_count, n_word_count);

  007bd	49 8d 3c de	 lea	 rdi, QWORD PTR [r14+rbx*8]
$LN113@RightShift:

; 168  :         }
; 169  :     }

  007c1	48 8b cd	 mov	 rcx, rbp
  007c4	33 c0		 xor	 eax, eax
  007c6	f3 48 ab	 rep stosq
$LN14@RightShift:
  007c9	48 8b 5c 24 20	 mov	 rbx, QWORD PTR [rsp+32]
  007ce	48 8b 6c 24 28	 mov	 rbp, QWORD PTR [rsp+40]
  007d3	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
  007d8	41 5e		 pop	 r14
  007da	5f		 pop	 rdi
  007db	c3		 ret	 0
?RightShift_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K10H@Z ENDP ; Palmtree::Math::Core::Internal::RightShift_Imp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 295  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT

; 295  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 296  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 286  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	c7 41 18 00 ff
	ff ff		 mov	 DWORD PTR [rcx+24], -256 ; ffffffffffffff00H

; 57   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 58   :             _data = data;

  0003a	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8

; 286  :         {

  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax

; 287  :         }

  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 124  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT

; 124  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 125  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 120  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 120  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 121  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 115  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	c7 41 18 fe ff
	ff ff		 mov	 DWORD PTR [rcx+24], -2

; 57   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 58   :             _data = data;

  0003a	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8

; 115  :         {

  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax

; 116  :         }

  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
$LN12:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 70   :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00031	48 83 c1 08	 add	 rcx, 8
  00035	e8 00 00 00 00	 call	 __std_exception_destroy
  0003a	90		 npad	 1
  0003b	f6 c3 01	 test	 bl, 1
  0003e	74 0e		 je	 SHORT $LN9@scalar
  00040	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00045	48 8b cf	 mov	 rcx, rdi
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1
$LN9@scalar:
  0004e	48 8b c7	 mov	 rax, rdi
  00051	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT

; 70   :         {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00026	48 83 c1 08	 add	 rcx, 8
  0002a	e8 00 00 00 00	 call	 __std_exception_destroy
  0002f	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 71   :         }

  00030	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00034	c3		 ret	 0
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 62   :         Exception(const Exception& p) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 67   :         }

  00045	48 8b c1	 mov	 rax, rcx
  00048	48 83 c4 18	 add	 rsp, 24
  0004c	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 57   :             _message = message;

  00032	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 58   :             _data = data;

  00036	4c 89 49 28	 mov	 QWORD PTR [rcx+40], r9

; 59   :         }

  0003a	48 8b c1	 mov	 rax, rcx
  0003d	48 83 c4 18	 add	 rsp, 24
  00041	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	8b da		 mov	 ebx, edx
  00016	48 8b f9	 mov	 rdi, rcx

; 85   :     {

  00019	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00020	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00023	48 83 c1 08	 add	 rcx, 8
  00027	e8 00 00 00 00	 call	 __std_exception_destroy
  0002c	90		 npad	 1
  0002d	f6 c3 01	 test	 bl, 1
  00030	74 0e		 je	 SHORT $LN6@scalar
  00032	ba 18 00 00 00	 mov	 edx, 24
  00037	48 8b cf	 mov	 rcx, rdi
  0003a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0003f	90		 npad	 1
$LN6@scalar:
  00040	48 8b c7	 mov	 rax, rdi
  00043	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0000b	48 85 d2	 test	 rdx, rdx
  0000e	48 0f 45 c2	 cmovne	 rax, rdx

; 92   :     }

  00012	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN5:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 __std_exception_destroy
  00020	90		 npad	 1

; 87   :     }

  00021	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00025	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0exception@std@@QEAA@XZ PROC				; std::exception::exception, COMDAT

; 50   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	33 c0		 xor	 eax, eax
  0000c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00010	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 51   :     }

  00014	48 8b c1	 mov	 rax, rcx
  00017	c3		 ret	 0
??0exception@std@@QEAA@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
