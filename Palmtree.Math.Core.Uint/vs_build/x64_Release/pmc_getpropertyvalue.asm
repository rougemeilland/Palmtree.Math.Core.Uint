; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	Initialize_GetPropertyValue
PUBLIC	PMC_GetPropertyValue_X_I
EXTRN	CheckNumber:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$PMC_GetPropertyValue_X_I DD imagerel $LN15
	DD	imagerel $LN15+209
	DD	imagerel $unwind$PMC_GetPropertyValue_X_I
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PMC_GetPropertyValue_X_I DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_getpropertyvalue.c
;	COMDAT PMC_GetPropertyValue_X_I
_TEXT	SEGMENT
x$ = 48
function_code$ = 56
o$ = 64
PMC_GetPropertyValue_X_I PROC				; COMDAT

; 31   : {

$LN15:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, r8
	mov	ebx, edx
	mov	rdi, rcx

; 32   :     if (x == NULL)

	test	rcx, rcx
	je	$LN13@PMC_GetPro

; 33   :         return (PMC_STATUS_ARGUMENT_ERROR);
; 34   :     if (o == NULL)

	test	r8, r8
	je	$LN13@PMC_GetPro

; 35   :         return (PMC_STATUS_ARGUMENT_ERROR);
; 36   :     PMC_STATUS_CODE result;
; 37   :     NUMBER_HEADER* nx = (NUMBER_HEADER*)x;
; 38   :     if ((result = CheckNumber(nx)) != PMC_STATUS_OK)

	call	CheckNumber
	test	eax, eax
	jne	$LN1@PMC_GetPro

; 39   :         return (result);
; 40   :     switch (function_code)

	sub	ebx, 1
	je	SHORT $LN7@PMC_GetPro
	sub	ebx, 1
	je	SHORT $LN8@PMC_GetPro
	sub	ebx, 1
	je	SHORT $LN9@PMC_GetPro
	cmp	ebx, 1
	jne	SHORT $LN13@PMC_GetPro

; 51   :     case PMC_PROPERTY_IS_ZERO:
; 52   :         *o = nx->IS_ZERO;

	mov	eax, DWORD PTR [rdi+40]
	shr	eax, 1
	and	eax, ebx
	mov	DWORD PTR [rsi], eax

; 53   :         return (PMC_STATUS_OK);

	xor	eax, eax

; 54   :     default:
; 55   :         return (PMC_STATUS_ARGUMENT_ERROR);
; 56   :     }
; 57   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN9@PMC_GetPro:

; 48   :     case PMC_PROPERTY_IS_POWER_OF_TWO:
; 49   :         *o = nx->IS_POWER_OF_TWO;

	mov	eax, DWORD PTR [rdi+40]
	shr	eax, 4
	and	eax, 1
	mov	DWORD PTR [rsi], eax

; 50   :         return (PMC_STATUS_OK);

	xor	eax, eax

; 54   :     default:
; 55   :         return (PMC_STATUS_ARGUMENT_ERROR);
; 56   :     }
; 57   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN8@PMC_GetPro:

; 45   :     case PMC_PROPERTY_IS_ONE:
; 46   :         *o = nx->IS_ONE;

	mov	eax, DWORD PTR [rdi+40]
	shr	eax, 2
	and	eax, 1
	mov	DWORD PTR [rsi], eax

; 47   :         return (PMC_STATUS_OK);

	xor	eax, eax

; 54   :     default:
; 55   :         return (PMC_STATUS_ARGUMENT_ERROR);
; 56   :     }
; 57   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@PMC_GetPro:

; 41   :     {
; 42   :     case PMC_PROPERTY_IS_EVEN:
; 43   :         *o = nx->IS_EVEN;

	mov	eax, DWORD PTR [rdi+40]
	shr	eax, 3
	and	eax, 1
	mov	DWORD PTR [rsi], eax

; 44   :         return (PMC_STATUS_OK);

	xor	eax, eax

; 54   :     default:
; 55   :         return (PMC_STATUS_ARGUMENT_ERROR);
; 56   :     }
; 57   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@PMC_GetPro:
	mov	eax, -1
$LN1@PMC_GetPro:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
PMC_GetPropertyValue_X_I ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_getpropertyvalue.c
;	COMDAT Initialize_GetPropertyValue
_TEXT	SEGMENT
feature$ = 8
Initialize_GetPropertyValue PROC			; COMDAT

; 61   :     return (PMC_STATUS_OK);

	xor	eax, eax

; 62   : }

	ret	0
Initialize_GetPropertyValue ENDP
_TEXT	ENDS
END
