; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ; Palmtree::Math::Core::Internal::Multiply_X_X_Imp
PUBLIC	?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
PUBLIC	?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Multiply
PUBLIC	?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
PUBLIC	?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
PUBLIC	?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
PUBLIC	?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
PUBLIC	?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
PUBLIC	??_C@_13JAOPNPKD@?$AAv@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_13ICFKHAEN@?$AAu@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::DuplicateNumber
EXTRN	?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::From_I_Imp
EXTRN	?From_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::From_L_Imp
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A:BYTE ; Palmtree::Math::Core::Internal::number_zero
EXTRN	?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A:BYTE ; Palmtree::Math::Core::Internal::statistics_info
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
_BSS	SEGMENT
?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA DQ 01H DUP (?) ; Palmtree::Math::Core::Internal::fp_Multiply_X_1W
?fp_Multiply_X_2W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K110@ZEA DQ 01H DUP (?) ; Palmtree::Math::Core::Internal::fp_Multiply_X_2W
?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA DQ 01H DUP (?) ; Palmtree::Math::Core::Internal::fp_Multiply_X_X
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+38
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+78
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel $LN8
	DD	imagerel $LN8+66
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN8
	DD	imagerel $LN8+77
	DD	imagerel $unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+53
	DD	imagerel $unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+92
	DD	imagerel $unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel $LN11
	DD	imagerel $LN11+87
	DD	imagerel $unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+102
	DD	imagerel $unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel $LN20
	DD	imagerel $LN20+256
	DD	imagerel $unwind$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD imagerel $LN10
	DD	imagerel $LN10+167
	DD	imagerel $unwind$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD imagerel $LN10
	DD	imagerel $LN10+169
	DD	imagerel $unwind$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD imagerel $LN10
	DD	imagerel $LN10+164
	DD	imagerel $unwind$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD imagerel $LN10
	DD	imagerel $LN10+166
	DD	imagerel $unwind$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD imagerel $LN25
	DD	imagerel $LN25+397
	DD	imagerel $unwind$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD imagerel ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
	DD	imagerel ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z+2977
	DD	imagerel $unwind$?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD imagerel ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
	DD	imagerel ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z+3186
	DD	imagerel $unwind$?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z DD imagerel ?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
	DD	imagerel ?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z+86
	DD	imagerel $unwind$?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z DD imagerel ?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
	DD	imagerel ?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z+86
	DD	imagerel $unwind$?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD imagerel ?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
	DD	imagerel ?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z+135
	DD	imagerel $unwind$?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD imagerel ?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
	DD	imagerel ?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z+135
	DD	imagerel $unwind$?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+262
	DD	imagerel $unwind$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+232
	DD	imagerel $unwind$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 01H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD imagerel ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EN@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 01H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	imagerel ??_R3Exception@Internal@Core@Math@Palmtree@@8
	DD	imagerel ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_13ICFKHAEN@?$AAu@
CONST	SEGMENT
??_C@_13ICFKHAEN@?$AAu@ DB 'u', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13JAOPNPKD@?$AAv@
CONST	SEGMENT
??_C@_13JAOPNPKD@?$AAv@ DB 'v', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	imagerel _CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
	DD	imagerel _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	ENDS
;	COMDAT _TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT _CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48
xdata$x	SEGMENT
_CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z48 DD 00H
	DD	imagerel ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DQ FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DQ	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DQ	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DQ FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DQ	FLAT:??_EException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+116
	DD	00H
	DD	imagerel ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z+203
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z DD 061911H
	DD	0f6419H
	DD	0e3414H
	DD	07002b206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+135
	DD	02H
	DD	imagerel ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z+233
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z DD 061911H
	DD	0d6419H
	DD	0c3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD 091d01H
	DD	084641dH
	DD	082341dH
	DD	07e011dH
	DD	0700ce00eH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z DD 091f01H
	DD	083741fH
	DD	082641fH
	DD	080341fH
	DD	07e011fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD imagerel ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+75
	DD	00H
	DD	imagerel ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+155
	DD	01H
	DD	imagerel ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+242
	DD	00H
	DD	imagerel ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z+279
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z DD 071b11H
	DD	015641bH
	DD	0143417H
	DD	012010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD imagerel ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z+53
	DD	00H
	DD	imagerel ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z DD 041a11H
	DD	012341aH
	DD	07002f209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD imagerel ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z+52
	DD	00H
	DD	imagerel ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z+92
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z DD 041a11H
	DD	012341aH
	DD	07002f209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD imagerel ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z+56
	DD	00H
	DD	imagerel ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z+97
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z DD 041a11H
	DD	012341aH
	DD	07002f209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD imagerel ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z+55
	DD	00H
	DD	imagerel ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z+95
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z DD 041a11H
	DD	012341aH
	DD	07002f209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD imagerel ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	0ffffffffH
	DD	imagerel ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+130
	DD	00H
	DD	imagerel ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z+227
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z DD 061911H
	DD	0d6419H
	DD	0c3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+37
	DD	00H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+62
	DD	01H
	DD	imagerel ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+72
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	01H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+37
	DD	00H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+62
	DD	01H
	DD	imagerel ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z+72
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD imagerel ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z DD 041819H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD imagerel ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z+69
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	0ffffffffH
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+37
	DD	00H
	DD	imagerel ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z+58
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
	DD	00H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z DD 011111H
	DD	02209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gexception@std@@UEAAPEAXI@Z DD imagerel ??_Gexception@std@@UEAAPEAXI@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_Gexception@std@@UEAAPEAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??_Gexception@std@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_Gexception@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DD imagerel ??1exception@std@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z
_TEXT	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
v$ = 120
?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp, COMDAT

; 679  :     {

  00000	40 57		 push	 rdi
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 70	 mov	 QWORD PTR [rsp+112], rbx
  00014	48 89 74 24 78	 mov	 QWORD PTR [rsp+120], rsi
  00019	48 8b fa	 mov	 rdi, rdx
  0001c	48 8b f1	 mov	 rsi, rcx

; 680  :         if (u->IS_ZERO)

  0001f	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00022	a8 01		 test	 al, 1
  00024	74 17		 je	 SHORT $LN2@PMC_Multip
$LN14@PMC_Multip:

; 738  : 
; 739  :             }
; 740  :         }
; 741  :     }

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0002d	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  00032	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  00037	48 83 c4 60	 add	 rsp, 96			; 00000060H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
$LN2@PMC_Multip:

; 681  :         {
; 682  :             // u が 0 である場合
; 683  : 
; 684  :             // v の値にかかわらず 0 を返す。
; 685  :             return (&number_zero);
; 686  :         }
; 687  :         else if (u->IS_ONE)

  0003d	a8 02		 test	 al, 2
  0003f	74 1d		 je	 SHORT $LN4@PMC_Multip

; 688  :         {
; 689  :             // u が 1 である場合
; 690  :             if (v->IS_ZERO)

  00041	f6 42 08 01	 test	 BYTE PTR [rdx+8], 1
  00045	75 df		 jne	 SHORT $LN14@PMC_Multip

; 691  :             {
; 692  :                 // v が 0 である場合
; 693  : 
; 694  :                 //  0  を返す。
; 695  :                 return (&number_zero);
; 696  :             }
; 697  :             else
; 698  :             {
; 699  :                 // v が 0 ではない場合
; 700  : 
; 701  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 702  :                 return (DuplicateNumber(v));

  00047	48 8b cf	 mov	 rcx, rdi
$LN15@PMC_Multip:

; 738  : 
; 739  :             }
; 740  :         }
; 741  :     }

  0004a	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  0004f	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  00054	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00058	5f		 pop	 rdi
  00059	e9 00 00 00 00	 jmp	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
$LN4@PMC_Multip:

; 703  :             }
; 704  :         }
; 705  :         else
; 706  :         {
; 707  :             // u が 0 と 1 のどちらでもない場合
; 708  : 
; 709  :             if (v->IS_ZERO)

  0005e	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  00061	a8 01		 test	 al, 1
  00063	75 c1		 jne	 SHORT $LN14@PMC_Multip

; 710  :             {
; 711  :                 // v が 0 である場合
; 712  : 
; 713  :                 //  0  を返す。
; 714  :                 return (&number_zero);
; 715  :             }
; 716  :             else if (v->IS_ONE)

  00065	a8 02		 test	 al, 2
  00067	75 e1		 jne	 SHORT $LN15@PMC_Multip

; 717  :             {
; 718  :                 // v が 1 である場合
; 719  : 
; 720  :                 // 乗算結果は u に等しいため、u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 721  :                 return (DuplicateNumber(u));
; 722  :             }
; 723  :             else
; 724  :             {
; 725  :                 // u と v がともに 0 、1 のどちらでもない場合
; 726  : 
; 727  :                 // u と v の積を計算する
; 728  :                 ResourceHolderUINT root;

  00069	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  0006e	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00073	90		 npad	 1

; 729  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 730  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  00074	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]

; 731  :                 __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  00078	48 03 56 20	 add	 rdx, QWORD PTR [rsi+32]

; 732  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0007c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  00081	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  00086	48 8b d8	 mov	 rbx, rax

; 733  :                 (*fp_Multiply_X_X)(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, w->BLOCK);

  00089	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0008d	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00092	4c 8b 4f 18	 mov	 r9, QWORD PTR [rdi+24]
  00096	4c 8b 47 40	 mov	 r8, QWORD PTR [rdi+64]
  0009a	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  0009e	48 8b 4e 40	 mov	 rcx, QWORD PTR [rsi+64]
  000a2	ff 15 00 00 00
	00		 call	 QWORD PTR ?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA

; 734  :                 root.CheckNumber(w);

  000a8	48 8b d3	 mov	 rdx, rbx
  000ab	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  000b0	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 735  :                 CommitNumber(w);

  000b5	48 8b cb	 mov	 rcx, rbx
  000b8	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 736  :                 root.UnlinkNumber(w);

  000bd	48 8b d3	 mov	 rdx, rbx
  000c0	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  000c5	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  000ca	90		 npad	 1

; 737  :                 return (w);

  000cb	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$2[rsp]
  000d0	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000d5	48 8b c3	 mov	 rax, rbx

; 738  : 
; 739  :             }
; 740  :         }
; 741  :     }

  000d8	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  000dd	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  000e2	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000e6	5f		 pop	 rdi
  000e7	c3		 ret	 0
?PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
v$ = 120
?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
root$2 = 56
u$ = 112
v$ = 120
?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z
_TEXT	SEGMENT
$T1 = 32
root$2 = 40
u$ = 96
v$ = 104
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp, COMDAT

; 537  :     {

  00000	40 57		 push	 rdi
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 60	 mov	 QWORD PTR [rsp+96], rbx
  00014	48 89 74 24 68	 mov	 QWORD PTR [rsp+104], rsi
  00019	48 8b fa	 mov	 rdi, rdx
  0001c	48 8b f1	 mov	 rsi, rcx

; 538  :         if (u->IS_ZERO)

  0001f	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00022	a8 01		 test	 al, 1
  00024	74 17		 je	 SHORT $LN2@PMC_Multip
$LN31@PMC_Multip:

; 633  :                 }
; 634  :             }
; 635  :         }
; 636  :     }

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0002d	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  00032	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  00037	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
$LN2@PMC_Multip:

; 539  :         {
; 540  :             // u が 0 である場合
; 541  : 
; 542  :             // v の値にかかわらず 0 を返す。
; 543  :             return (&number_zero);
; 544  :         }
; 545  :         else if (u->IS_ONE)

  0003d	a8 02		 test	 al, 2
  0003f	74 1c		 je	 SHORT $LN4@PMC_Multip

; 546  :         {
; 547  :             // u が 1 である場合
; 548  :             if (v == 0)

  00041	48 85 ff	 test	 rdi, rdi
  00044	74 e0		 je	 SHORT $LN31@PMC_Multip

; 549  :             {
; 550  :                 // v が 0 である場合
; 551  : 
; 552  :                 //  0  を返す。
; 553  :                 return (&number_zero);
; 554  :             }
; 555  :             else
; 556  :             {
; 557  :                 // v が 0 ではない場合
; 558  : 
; 559  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 560  :                 return (From_L_Imp(v));

  00046	48 8b cf	 mov	 rcx, rdi

; 633  :                 }
; 634  :             }
; 635  :         }
; 636  :     }

  00049	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  0004e	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  00053	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00057	5f		 pop	 rdi

; 549  :             {
; 550  :                 // v が 0 である場合
; 551  : 
; 552  :                 //  0  を返す。
; 553  :                 return (&number_zero);
; 554  :             }
; 555  :             else
; 556  :             {
; 557  :                 // v が 0 ではない場合
; 558  : 
; 559  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 560  :                 return (From_L_Imp(v));

  00058	e9 00 00 00 00	 jmp	 ?From_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@_K@Z ; Palmtree::Math::Core::Internal::From_L_Imp
$LN4@PMC_Multip:

; 561  :             }
; 562  :         }
; 563  :         else
; 564  :         {
; 565  :             // u が 0 と 1 のどちらでもない場合
; 566  : 
; 567  :             if (v == 0)

  0005d	48 85 ff	 test	 rdi, rdi
  00060	74 c4		 je	 SHORT $LN31@PMC_Multip

; 568  :             {
; 569  :                 // v が 0 である場合
; 570  : 
; 571  :                 //  0  を返す。
; 572  :                 return (&number_zero);
; 573  :             }
; 574  :             else if (v == 1)

  00062	48 83 ff 01	 cmp	 rdi, 1
  00066	75 14		 jne	 SHORT $LN10@PMC_Multip

; 633  :                 }
; 634  :             }
; 635  :         }
; 636  :     }

  00068	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  0006d	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  00072	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00076	5f		 pop	 rdi

; 575  :             {
; 576  :                 // v が 1 である場合
; 577  : 
; 578  :                 // 乗算結果は u に等しいため、u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 579  :                 return (DuplicateNumber(u));

  00077	e9 00 00 00 00	 jmp	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
$LN10@PMC_Multip:

; 580  :             }
; 581  :             else
; 582  :             {
; 583  :                 // u と v がともに 0 、1 のどちらでもない場合
; 584  : 
; 585  :                 // u と v の積を計算する
; 586  :                 if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)
; 587  :                 {
; 588  :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 589  : 
; 590  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 591  :                     _UINT32_T v_hi;
; 592  :                     _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);
; 593  :                     if (v_hi == 0)
; 594  :                     {
; 595  :                         // v の値が 32bit で表現可能な場合
; 596  :                         ResourceHolderUINT root;
; 597  :                         __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);
; 598  :                         __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;
; 599  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 600  :                         (*fp_Multiply_X_1W)(u->BLOCK, u->UNIT_WORD_COUNT, v_lo, w->BLOCK);
; 601  :                         root.CheckNumber(w);
; 602  :                         CommitNumber(w);
; 603  :                         root.UnlinkNumber(w);
; 604  :                         return (w);
; 605  :                     }
; 606  :                     else
; 607  :                     {
; 608  :                         // v の値が 32bit では表現できない場合
; 609  :                         ResourceHolderUINT root;
; 610  :                         __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);
; 611  :                         __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;
; 612  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 613  :                         (*fp_Multiply_X_2W)(u->BLOCK, u->UNIT_WORD_COUNT, v_hi, v_lo, w->BLOCK);
; 614  :                         root.CheckNumber(w);
; 615  :                         CommitNumber(w);
; 616  :                         root.UnlinkNumber(w);
; 617  :                         return (w);
; 618  :                     }
; 619  :                 }
; 620  :                 else
; 621  :                 {
; 622  :                     // _UINT64_T が 1 ワードで表現できる場合
; 623  :                     ResourceHolderUINT root;

  0007c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  00081	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00086	90		 npad	 1

; 624  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00087	48 8b 56 20	 mov	 rdx, QWORD PTR [rsi+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 469  :             _BitScanReverse64(&pos, x);

  0008b	48 0f bd c7	 bsr	 rax, rdi

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  0008f	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00094	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 625  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);

  00096	48 63 c1	 movsxd	 rax, ecx
  00099	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0009e	48 2b c8	 sub	 rcx, rax

; 626  :                     __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  000a1	48 03 d1	 add	 rdx, rcx

; 627  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  000a9	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000ae	48 8b d8	 mov	 rbx, rax

; 628  :                     (*fp_Multiply_X_1W)(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK);

  000b1	4c 8b 48 40	 mov	 r9, QWORD PTR [rax+64]
  000b5	4c 8b c7	 mov	 r8, rdi
  000b8	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  000bc	48 8b 4e 40	 mov	 rcx, QWORD PTR [rsi+64]
  000c0	ff 15 00 00 00
	00		 call	 QWORD PTR ?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA

; 629  :                     root.CheckNumber(w);

  000c6	48 8b d3	 mov	 rdx, rbx
  000c9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  000ce	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 630  :                     CommitNumber(w);

  000d3	48 8b cb	 mov	 rcx, rbx
  000d6	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 631  :                     root.UnlinkNumber(w);

  000db	48 8b d3	 mov	 rdx, rbx
  000de	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  000e3	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  000e8	90		 npad	 1

; 632  :                     return (w);

  000e9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  000ee	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000f3	48 8b c3	 mov	 rax, rbx

; 633  :                 }
; 634  :             }
; 635  :         }
; 636  :     }

  000f6	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  000fb	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  00100	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00104	5f		 pop	 rdi
  00105	c3		 ret	 0
?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$2 = 40
u$ = 96
v$ = 104
?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$2
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$2 = 40
u$ = 96
v$ = 104
?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$2
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$2@?0??PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
_TEXT	SEGMENT
u_buf$ = 48
u_count$ = 56
v_buf$ = 64
v_count$ = 72
w_buf$ = 80
?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MULX_ADCX, COMDAT

; 408  :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 56		 push	 r14
  00016	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 409  :         // x のワード長が y のワード長以上であるようにする
; 410  :         if (u_count < v_count)
; 411  :         {
; 412  :             __UNIT_TYPE* t_buf = u_buf;
; 413  :             u_buf = v_buf;
; 414  :             v_buf = t_buf;
; 415  :             __UNIT_TYPE t_count = u_count;
; 416  :             u_count = v_count;
; 417  :             v_count = t_count;
; 418  :         }
; 419  :         __UNIT_TYPE* up = u_buf;

  0001a	4c 8b 74 24 50	 mov	 r14, QWORD PTR w_buf$[rsp]
  0001f	49 3b d1	 cmp	 rdx, r9
  00022	48 8b d9	 mov	 rbx, rcx
  00025	49 8b f0	 mov	 rsi, r8
  00028	49 0f 43 d8	 cmovae	 rbx, r8
  0002c	48 0f 43 f1	 cmovae	 rsi, rcx
  00030	49 8b e9	 mov	 rbp, r9
  00033	48 8b fa	 mov	 rdi, rdx
  00036	48 0f 43 ea	 cmovae	 rbp, rdx
  0003a	4c 2b f3	 sub	 r14, rbx
  0003d	49 3b d1	 cmp	 rdx, r9
  00040	49 0f 43 f9	 cmovae	 rdi, r9
  00044	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL4@Multiply_X:

; 420  :         __UNIT_TYPE* vp = v_buf;
; 421  :         __UNIT_TYPE* wp = w_buf;
; 422  : 
; 423  :         do
; 424  :         {
; 425  :             Multiply_WORD_using_MULX_ADCX(up, u_count, *vp, wp);

  00050	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  00053	4d 8d 0c 1e	 lea	 r9, QWORD PTR [r14+rbx]
  00057	48 8b d5	 mov	 rdx, rbp
  0005a	48 8b ce	 mov	 rcx, rsi
  0005d	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX

; 426  :             ++vp;

  00062	48 8d 5b 08	 lea	 rbx, QWORD PTR [rbx+8]

; 427  :             ++wp;
; 428  :             --v_count;

  00066	48 83 ef 01	 sub	 rdi, 1

; 429  :         } while (v_count != 0);

  0006a	75 e4		 jne	 SHORT $LL4@Multiply_X

; 430  :     }

  0006c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00071	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00076	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  0007b	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  00080	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00084	41 5e		 pop	 r14
  00086	c3		 ret	 0
?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MULX_ADCX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
_TEXT	SEGMENT
u_buf$ = 48
u_count$ = 56
v_buf$ = 64
v_count$ = 72
w_buf$ = 80
?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MUL_ADC, COMDAT

; 383  :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 56		 push	 r14
  00016	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 384  :         // x のワード長が y のワード長以上であるようにする
; 385  :         if (u_count < v_count)
; 386  :         {
; 387  :             __UNIT_TYPE* t_buf = u_buf;
; 388  :             u_buf = v_buf;
; 389  :             v_buf = t_buf;
; 390  :             __UNIT_TYPE t_count = u_count;
; 391  :             u_count = v_count;
; 392  :             v_count = t_count;
; 393  :         }
; 394  :         __UNIT_TYPE* up = u_buf;

  0001a	4c 8b 74 24 50	 mov	 r14, QWORD PTR w_buf$[rsp]
  0001f	49 3b d1	 cmp	 rdx, r9
  00022	48 8b d9	 mov	 rbx, rcx
  00025	49 8b f0	 mov	 rsi, r8
  00028	49 0f 43 d8	 cmovae	 rbx, r8
  0002c	48 0f 43 f1	 cmovae	 rsi, rcx
  00030	49 8b e9	 mov	 rbp, r9
  00033	48 8b fa	 mov	 rdi, rdx
  00036	48 0f 43 ea	 cmovae	 rbp, rdx
  0003a	4c 2b f3	 sub	 r14, rbx
  0003d	49 3b d1	 cmp	 rdx, r9
  00040	49 0f 43 f9	 cmovae	 rdi, r9
  00044	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL4@Multiply_X:

; 395  :         __UNIT_TYPE* vp = v_buf;
; 396  :         __UNIT_TYPE* wp = w_buf;
; 397  : 
; 398  :         do
; 399  :         {
; 400  :             Multiply_WORD_using_MUL_ADC(up, u_count, *vp, wp);

  00050	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  00053	4d 8d 0c 1e	 lea	 r9, QWORD PTR [r14+rbx]
  00057	48 8b d5	 mov	 rdx, rbp
  0005a	48 8b ce	 mov	 rcx, rsi
  0005d	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC

; 401  :             ++vp;

  00062	48 8d 5b 08	 lea	 rbx, QWORD PTR [rbx+8]

; 402  :             ++wp;
; 403  :             --v_count;

  00066	48 83 ef 01	 sub	 rdi, 1

; 404  :         } while (v_count != 0);

  0006a	75 e4		 jne	 SHORT $LL4@Multiply_X

; 405  :     }

  0006c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00071	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00076	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  0007b	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  00080	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00084	41 5e		 pop	 r14
  00086	c3		 ret	 0
?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MUL_ADC
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
_TEXT	SEGMENT
u_buf$ = 48
u_count$ = 56
v_hi$ = 64
v_lo$ = 72
w_buf$ = 80
?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MULX_ADCX, COMDAT

; 377  :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 378  :         Multiply_WORD_using_MULX_ADCX(u_buf, u_count, v_lo, &w_buf[0]);

  00014	48 8b 5c 24 50	 mov	 rbx, QWORD PTR w_buf$[rsp]
  00019	49 8b c1	 mov	 rax, r9
  0001c	49 8b f8	 mov	 rdi, r8
  0001f	4c 8b cb	 mov	 r9, rbx
  00022	4c 8b c0	 mov	 r8, rax
  00025	48 8b f2	 mov	 rsi, rdx
  00028	48 8b e9	 mov	 rbp, rcx
  0002b	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX

; 379  :         Multiply_WORD_using_MULX_ADCX(u_buf, u_count, v_hi, &w_buf[1]);

  00030	4c 8d 4b 08	 lea	 r9, QWORD PTR [rbx+8]
  00034	4c 8b c7	 mov	 r8, rdi
  00037	48 8b d6	 mov	 rdx, rsi
  0003a	48 8b cd	 mov	 rcx, rbp

; 380  :     }

  0003d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00042	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00047	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  0004c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00050	5f		 pop	 rdi

; 379  :         Multiply_WORD_using_MULX_ADCX(u_buf, u_count, v_hi, &w_buf[1]);

  00051	e9 00 00 00 00	 jmp	 ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX
?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MULX_ADCX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z
_TEXT	SEGMENT
u_buf$ = 48
u_count$ = 56
v_hi$ = 64
v_lo$ = 72
w_buf$ = 80
?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MUL_ADC, COMDAT

; 371  :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 372  :         Multiply_WORD_using_MUL_ADC(u_buf, u_count, v_lo, &w_buf[0]);

  00014	48 8b 5c 24 50	 mov	 rbx, QWORD PTR w_buf$[rsp]
  00019	49 8b c1	 mov	 rax, r9
  0001c	49 8b f8	 mov	 rdi, r8
  0001f	4c 8b cb	 mov	 r9, rbx
  00022	4c 8b c0	 mov	 r8, rax
  00025	48 8b f2	 mov	 rsi, rdx
  00028	48 8b e9	 mov	 rbp, rcx
  0002b	e8 00 00 00 00	 call	 ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC

; 373  :         Multiply_WORD_using_MUL_ADC(u_buf, u_count, v_hi, &w_buf[1]);

  00030	4c 8d 4b 08	 lea	 r9, QWORD PTR [rbx+8]
  00034	4c 8b c7	 mov	 r8, rdi
  00037	48 8b d6	 mov	 rdx, rsi
  0003a	48 8b cd	 mov	 rcx, rbp

; 374  :     }

  0003d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00042	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00047	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  0004c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00050	5f		 pop	 rdi

; 373  :         Multiply_WORD_using_MUL_ADC(u_buf, u_count, v_hi, &w_buf[1]);

  00051	e9 00 00 00 00	 jmp	 ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC
?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MUL_ADC
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
_TEXT	SEGMENT
u_buf$ = 8
u_count$ = 16
v$ = 24
w_buf$ = 32
?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MULX_ADCX, COMDAT

; 367  :         Multiply_WORD_using_MULX_ADCX(u_buf, u_count, v, w_buf);

  00000	e9 00 00 00 00	 jmp	 ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX
?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MULX_ADCX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
_TEXT	SEGMENT
u_buf$ = 8
u_count$ = 16
v$ = 24
w_buf$ = 32
?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MUL_ADC, COMDAT

; 362  :         Multiply_WORD_using_MUL_ADC(u_buf, u_count, v, w_buf);

  00000	e9 00 00 00 00	 jmp	 ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC
?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MUL_ADC
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
_TEXT	SEGMENT
t_hi$1 = 0
t_lo$2 = 8
t_hi$3 = 16
t_lo$4 = 24
t_hi$5 = 32
t_lo$6 = 40
t_hi$7 = 48
t_lo$8 = 56
t_hi$9 = 64
t_lo$10 = 72
t_hi$11 = 80
t_lo$12 = 88
t_hi$13 = 96
t_lo$14 = 104
t_hi$15 = 112
t_lo$16 = 120
t_hi$17 = 128
t_lo$18 = 136
t_hi$19 = 144
t_lo$20 = 152
t_hi$21 = 160
t_lo$22 = 168
t_hi$23 = 176
t_lo$24 = 184
t_hi$25 = 192
t_lo$26 = 200
t_hi$27 = 208
t_lo$28 = 216
t_hi$29 = 224
t_lo$30 = 232
t_hi$31 = 240
t_lo$32 = 248
t_hi$33 = 256
t_lo$34 = 264
t_hi$35 = 272
t_lo$36 = 280
t_hi$37 = 288
t_lo$38 = 296
t_hi$39 = 304
t_lo$40 = 312
t_hi$41 = 320
t_lo$42 = 328
t_hi$43 = 336
t_lo$44 = 344
t_hi$45 = 352
t_lo$46 = 360
t_hi$47 = 368
t_lo$48 = 376
t_hi$49 = 384
t_lo$50 = 392
t_hi$51 = 400
t_lo$52 = 408
t_hi$53 = 416
t_lo$54 = 424
t_hi$55 = 432
t_lo$56 = 440
t_hi$57 = 448
t_lo$58 = 456
t_hi$59 = 464
t_lo$60 = 472
t_hi$61 = 480
t_lo$62 = 488
t_hi$63 = 496
t_lo$64 = 504
t_hi$65 = 512
t_lo$66 = 520
t_hi$67 = 528
t_lo$68 = 536
t_hi$69 = 544
t_lo$70 = 552
t_hi$71 = 560
t_lo$72 = 568
t_hi$73 = 576
t_lo$74 = 584
t_hi$75 = 592
t_lo$76 = 600
t_hi$77 = 608
t_lo$78 = 616
t_hi$79 = 624
t_lo$80 = 632
t_hi$81 = 640
t_lo$82 = 648
t_hi$83 = 656
t_lo$84 = 664
t_hi$85 = 672
t_lo$86 = 680
t_hi$87 = 688
t_lo$88 = 696
t_hi$89 = 704
t_lo$90 = 712
t_hi$91 = 720
t_lo$92 = 728
t_hi$93 = 736
t_lo$94 = 744
t_hi$95 = 752
t_lo$96 = 760
t_hi$97 = 768
t_lo$98 = 776
t_hi$99 = 784
t_lo$100 = 792
t_hi$101 = 800
t_lo$102 = 808
t_hi$103 = 816
t_lo$104 = 824
t_hi$105 = 832
t_lo$106 = 840
t_hi$107 = 848
t_lo$108 = 856
t_hi$109 = 864
t_lo$110 = 872
t_hi$111 = 880
t_lo$112 = 888
t_hi$113 = 896
t_lo$114 = 904
t_hi$115 = 912
t_lo$116 = 920
t_hi$117 = 928
t_lo$118 = 936
t_hi$119 = 944
t_lo$120 = 952
t_hi$121 = 960
t_lo$122 = 968
t_hi$123 = 976
t_lo$124 = 984
t_hi$125 = 992
up$ = 1040
t_lo$126 = 1048
u_count$ = 1048
v$ = 1056
wp$ = 1064
?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z PROC ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX, COMDAT

; 215  :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	41 56		 push	 r14
  0000e	48 8d ac 24 10
	fd ff ff	 lea	 rbp, QWORD PTR [rsp-752]
  00016	48 81 ec f0 03
	00 00		 sub	 rsp, 1008		; 000003f0H

; 216  :         __UNIT_TYPE k = 0;

  0001d	45 33 f6	 xor	 r14d, r14d

; 217  :         __UNIT_TYPE count = u_count >> 5;

  00020	48 8b f2	 mov	 rsi, rdx
  00023	48 c1 ee 05	 shr	 rsi, 5
  00027	49 8b d8	 mov	 rbx, r8
  0002a	48 8b fa	 mov	 rdi, rdx
  0002d	4c 8b d9	 mov	 r11, rcx
  00030	45 8b d6	 mov	 r10d, r14d

; 219  :         while (count != 0)

  00033	48 85 f6	 test	 rsi, rsi
  00036	0f 84 f8 05 00
	00		 je	 $LN3@Multiply_W
  0003c	0f 1f 40 00	 npad	 4
$LL2@Multiply_W:

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00040	49 8b 03	 mov	 rax, QWORD PTR [r11]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00043	48 8b d3	 mov	 rdx, rbx
  00046	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0004b	49 03 09	 add	 rcx, QWORD PTR [r9]
  0004e	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00054	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00057	49 89 09	 mov	 QWORD PTR [r9], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0005a	49 8b 43 08	 mov	 rax, QWORD PTR [r11+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0005e	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00064	48 89 8d 18 03
	00 00		 mov	 QWORD PTR t_lo$126[rbp-256], rcx
  0006b	4c 89 04 24	 mov	 QWORD PTR t_hi$1[rsp], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  0006f	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00074	49 03 49 08	 add	 rcx, QWORD PTR [r9+8]
  00078	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0007e	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00081	49 89 49 08	 mov	 QWORD PTR [r9+8], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00085	49 8b 43 10	 mov	 rax, QWORD PTR [r11+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00089	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0008f	48 89 4c 24 08	 mov	 QWORD PTR t_lo$2[rsp], rcx
  00094	4c 89 54 24 10	 mov	 QWORD PTR t_hi$3[rsp], r10

; 233  :             return (_mulx_u64(u, v, w_hi));

  00099	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0009e	49 03 49 10	 add	 rcx, QWORD PTR [r9+16]
  000a2	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  000a8	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  000ab	49 89 49 10	 mov	 QWORD PTR [r9+16], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  000af	49 8b 43 18	 mov	 rax, QWORD PTR [r11+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000b3	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  000b9	48 89 4c 24 18	 mov	 QWORD PTR t_lo$4[rsp], rcx
  000be	4c 89 44 24 20	 mov	 QWORD PTR t_hi$5[rsp], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  000c3	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000c8	49 03 49 18	 add	 rcx, QWORD PTR [r9+24]
  000cc	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  000d2	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  000d5	49 89 49 18	 mov	 QWORD PTR [r9+24], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  000d9	49 8b 43 20	 mov	 rax, QWORD PTR [r11+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000dd	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  000e3	48 89 4c 24 28	 mov	 QWORD PTR t_lo$6[rsp], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  000e8	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  000ed	49 03 49 20	 add	 rcx, QWORD PTR [r9+32]
  000f1	4c 89 54 24 30	 mov	 QWORD PTR t_hi$7[rsp], r10
  000f6	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  000fc	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  000ff	49 89 49 20	 mov	 QWORD PTR [r9+32], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00103	49 8b 43 28	 mov	 rax, QWORD PTR [r11+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00107	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  0010d	48 89 4c 24 38	 mov	 QWORD PTR t_lo$8[rsp], rcx
  00112	4c 89 44 24 40	 mov	 QWORD PTR t_hi$9[rsp], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  00117	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0011c	49 03 49 28	 add	 rcx, QWORD PTR [r9+40]
  00120	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00126	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00129	49 89 49 28	 mov	 QWORD PTR [r9+40], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0012d	49 8b 43 30	 mov	 rax, QWORD PTR [r11+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00131	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00137	48 89 4c 24 48	 mov	 QWORD PTR t_lo$10[rsp], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  0013c	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00141	49 03 49 30	 add	 rcx, QWORD PTR [r9+48]
  00145	4c 89 54 24 50	 mov	 QWORD PTR t_hi$11[rsp], r10
  0014a	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00150	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00153	49 89 49 30	 mov	 QWORD PTR [r9+48], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00157	49 8b 43 38	 mov	 rax, QWORD PTR [r11+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0015b	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00161	48 89 4c 24 58	 mov	 QWORD PTR t_lo$12[rsp], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00166	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0016b	49 03 49 38	 add	 rcx, QWORD PTR [r9+56]
  0016f	4c 89 44 24 60	 mov	 QWORD PTR t_hi$13[rsp], r8
  00174	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0017a	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0017d	49 89 49 38	 mov	 QWORD PTR [r9+56], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00181	49 8b 43 40	 mov	 rax, QWORD PTR [r11+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00185	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0018b	48 89 4c 24 68	 mov	 QWORD PTR t_lo$14[rsp], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00190	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00195	49 03 49 40	 add	 rcx, QWORD PTR [r9+64]
  00199	4c 89 54 24 70	 mov	 QWORD PTR t_hi$15[rsp], r10
  0019e	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  001a4	49 03 ca	 add	 rcx, r10
  001a7	48 89 4c 24 78	 mov	 QWORD PTR t_lo$16[rsp], rcx
  001ac	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  001b2	4c 89 45 80	 mov	 QWORD PTR t_hi$17[rbp-256], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  001b6	49 89 49 40	 mov	 QWORD PTR [r9+64], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  001ba	49 8b 43 48	 mov	 rax, QWORD PTR [r11+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  001be	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001c3	49 03 49 48	 add	 rcx, QWORD PTR [r9+72]
  001c7	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  001cd	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  001d0	49 89 49 48	 mov	 QWORD PTR [r9+72], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  001d4	49 8b 43 50	 mov	 rax, QWORD PTR [r11+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001d8	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  001de	48 89 4d 88	 mov	 QWORD PTR t_lo$18[rbp-256], rcx
  001e2	4c 89 55 90	 mov	 QWORD PTR t_hi$19[rbp-256], r10

; 233  :             return (_mulx_u64(u, v, w_hi));

  001e6	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  001eb	49 03 49 50	 add	 rcx, QWORD PTR [r9+80]
  001ef	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  001f5	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  001f8	49 89 49 50	 mov	 QWORD PTR [r9+80], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  001fc	49 8b 43 58	 mov	 rax, QWORD PTR [r11+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00200	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00206	48 89 4d 98	 mov	 QWORD PTR t_lo$20[rbp-256], rcx
  0020a	4c 89 45 a0	 mov	 QWORD PTR t_hi$21[rbp-256], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  0020e	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00213	49 03 49 58	 add	 rcx, QWORD PTR [r9+88]
  00217	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0021d	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00220	49 89 49 58	 mov	 QWORD PTR [r9+88], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00224	49 8b 43 60	 mov	 rax, QWORD PTR [r11+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00228	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0022e	48 89 4d a8	 mov	 QWORD PTR t_lo$22[rbp-256], rcx
  00232	4c 89 55 b0	 mov	 QWORD PTR t_hi$23[rbp-256], r10

; 233  :             return (_mulx_u64(u, v, w_hi));

  00236	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0023b	49 03 49 60	 add	 rcx, QWORD PTR [r9+96]
  0023f	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00245	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00248	49 89 49 60	 mov	 QWORD PTR [r9+96], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0024c	49 8b 43 68	 mov	 rax, QWORD PTR [r11+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00250	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00256	48 89 4d b8	 mov	 QWORD PTR t_lo$24[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  0025a	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0025f	49 03 49 68	 add	 rcx, QWORD PTR [r9+104]
  00263	4c 89 45 c0	 mov	 QWORD PTR t_hi$25[rbp-256], r8
  00267	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0026d	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00270	49 89 49 68	 mov	 QWORD PTR [r9+104], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00274	49 8b 43 70	 mov	 rax, QWORD PTR [r11+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00278	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0027e	48 89 4d c8	 mov	 QWORD PTR t_lo$26[rbp-256], rcx
  00282	4c 89 55 d0	 mov	 QWORD PTR t_hi$27[rbp-256], r10

; 233  :             return (_mulx_u64(u, v, w_hi));

  00286	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0028b	49 03 49 70	 add	 rcx, QWORD PTR [r9+112]
  0028f	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00295	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00298	49 89 49 70	 mov	 QWORD PTR [r9+112], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0029c	49 8b 43 78	 mov	 rax, QWORD PTR [r11+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002a0	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  002a6	48 89 4d d8	 mov	 QWORD PTR t_lo$28[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  002aa	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002af	49 03 49 78	 add	 rcx, QWORD PTR [r9+120]
  002b3	4c 89 45 e0	 mov	 QWORD PTR t_hi$29[rbp-256], r8
  002b7	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  002bd	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  002c0	49 89 49 78	 mov	 QWORD PTR [r9+120], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  002c4	49 8b 83 80 00
	00 00		 mov	 rax, QWORD PTR [r11+128]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002cb	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  002d1	48 89 4d e8	 mov	 QWORD PTR t_lo$30[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  002d5	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002da	49 03 89 80 00
	00 00		 add	 rcx, QWORD PTR [r9+128]
  002e1	4c 89 55 f0	 mov	 QWORD PTR t_hi$31[rbp-256], r10
  002e5	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  002eb	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  002ee	49 89 89 80 00
	00 00		 mov	 QWORD PTR [r9+128], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  002f5	49 8b 83 88 00
	00 00		 mov	 rax, QWORD PTR [r11+136]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  002fc	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00302	48 89 4d f8	 mov	 QWORD PTR t_lo$32[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00306	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0030b	49 03 89 88 00
	00 00		 add	 rcx, QWORD PTR [r9+136]
  00312	4c 89 45 00	 mov	 QWORD PTR t_hi$33[rbp-256], r8
  00316	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0031c	49 03 c8	 add	 rcx, r8
  0031f	48 89 4d 08	 mov	 QWORD PTR t_lo$34[rbp-256], rcx
  00323	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00329	4c 89 55 10	 mov	 QWORD PTR t_hi$35[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0032d	49 89 89 88 00
	00 00		 mov	 QWORD PTR [r9+136], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00334	49 8b 83 90 00
	00 00		 mov	 rax, QWORD PTR [r11+144]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  0033b	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00340	49 03 89 90 00
	00 00		 add	 rcx, QWORD PTR [r9+144]
  00347	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  0034d	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00350	49 89 89 90 00
	00 00		 mov	 QWORD PTR [r9+144], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00357	49 8b 83 98 00
	00 00		 mov	 rax, QWORD PTR [r11+152]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0035e	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00364	48 89 4d 18	 mov	 QWORD PTR t_lo$36[rbp-256], rcx
  00368	4c 89 45 20	 mov	 QWORD PTR t_hi$37[rbp-256], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  0036c	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00371	49 03 89 98 00
	00 00		 add	 rcx, QWORD PTR [r9+152]
  00378	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0037e	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00381	49 89 89 98 00
	00 00		 mov	 QWORD PTR [r9+152], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00388	49 8b 83 a0 00
	00 00		 mov	 rax, QWORD PTR [r11+160]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0038f	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00395	48 89 4d 28	 mov	 QWORD PTR t_lo$38[rbp-256], rcx
  00399	4c 89 55 30	 mov	 QWORD PTR t_hi$39[rbp-256], r10

; 233  :             return (_mulx_u64(u, v, w_hi));

  0039d	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  003a2	49 03 89 a0 00
	00 00		 add	 rcx, QWORD PTR [r9+160]
  003a9	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  003af	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  003b2	49 89 89 a0 00
	00 00		 mov	 QWORD PTR [r9+160], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  003b9	49 8b 83 a8 00
	00 00		 mov	 rax, QWORD PTR [r11+168]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  003c0	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  003c6	48 89 4d 38	 mov	 QWORD PTR t_lo$40[rbp-256], rcx
  003ca	4c 89 45 40	 mov	 QWORD PTR t_hi$41[rbp-256], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  003ce	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  003d3	49 03 89 a8 00
	00 00		 add	 rcx, QWORD PTR [r9+168]
  003da	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  003e0	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  003e3	49 89 89 a8 00
	00 00		 mov	 QWORD PTR [r9+168], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  003ea	49 8b 83 b0 00
	00 00		 mov	 rax, QWORD PTR [r11+176]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  003f1	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  003f7	48 89 4d 48	 mov	 QWORD PTR t_lo$42[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  003fb	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00400	49 03 89 b0 00
	00 00		 add	 rcx, QWORD PTR [r9+176]
  00407	4c 89 55 50	 mov	 QWORD PTR t_hi$43[rbp-256], r10
  0040b	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00411	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00414	49 89 89 b0 00
	00 00		 mov	 QWORD PTR [r9+176], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0041b	49 8b 83 b8 00
	00 00		 mov	 rax, QWORD PTR [r11+184]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00422	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00428	48 89 4d 58	 mov	 QWORD PTR t_lo$44[rbp-256], rcx
  0042c	4c 89 45 60	 mov	 QWORD PTR t_hi$45[rbp-256], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  00430	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00435	49 03 89 b8 00
	00 00		 add	 rcx, QWORD PTR [r9+184]
  0043c	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00442	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00445	49 89 89 b8 00
	00 00		 mov	 QWORD PTR [r9+184], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0044c	49 8b 83 c0 00
	00 00		 mov	 rax, QWORD PTR [r11+192]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00453	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00459	48 89 4d 68	 mov	 QWORD PTR t_lo$46[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  0045d	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00462	49 03 89 c0 00
	00 00		 add	 rcx, QWORD PTR [r9+192]
  00469	4c 89 55 70	 mov	 QWORD PTR t_hi$47[rbp-256], r10
  0046d	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00473	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00476	49 89 89 c0 00
	00 00		 mov	 QWORD PTR [r9+192], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0047d	49 8b 83 c8 00
	00 00		 mov	 rax, QWORD PTR [r11+200]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00484	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  0048a	48 89 4d 78	 mov	 QWORD PTR t_lo$48[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  0048e	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00493	49 03 89 c8 00
	00 00		 add	 rcx, QWORD PTR [r9+200]
  0049a	4c 89 85 80 00
	00 00		 mov	 QWORD PTR t_hi$49[rbp-256], r8
  004a1	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  004a7	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  004aa	49 89 89 c8 00
	00 00		 mov	 QWORD PTR [r9+200], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  004b1	49 8b 83 d0 00
	00 00		 mov	 rax, QWORD PTR [r11+208]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  004b8	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  004be	48 89 8d 88 00
	00 00		 mov	 QWORD PTR t_lo$50[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  004c5	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  004ca	49 03 89 d0 00
	00 00		 add	 rcx, QWORD PTR [r9+208]
  004d1	4c 89 95 90 00
	00 00		 mov	 QWORD PTR t_hi$51[rbp-256], r10
  004d8	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  004de	49 03 ca	 add	 rcx, r10
  004e1	48 89 8d 98 00
	00 00		 mov	 QWORD PTR t_lo$52[rbp-256], rcx
  004e8	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  004ee	4c 89 85 a0 00
	00 00		 mov	 QWORD PTR t_hi$53[rbp-256], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  004f5	49 89 89 d0 00
	00 00		 mov	 QWORD PTR [r9+208], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  004fc	49 8b 83 d8 00
	00 00		 mov	 rax, QWORD PTR [r11+216]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00503	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00508	49 03 89 d8 00
	00 00		 add	 rcx, QWORD PTR [r9+216]
  0050f	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00515	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00518	49 89 89 d8 00
	00 00		 mov	 QWORD PTR [r9+216], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0051f	49 8b 83 e0 00
	00 00		 mov	 rax, QWORD PTR [r11+224]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00526	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0052c	48 89 8d a8 00
	00 00		 mov	 QWORD PTR t_lo$54[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00533	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00538	49 03 89 e0 00
	00 00		 add	 rcx, QWORD PTR [r9+224]
  0053f	4c 89 95 b0 00
	00 00		 mov	 QWORD PTR t_hi$55[rbp-256], r10
  00546	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  0054c	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0054f	49 89 89 e0 00
	00 00		 mov	 QWORD PTR [r9+224], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00556	49 8b 83 e8 00
	00 00		 mov	 rax, QWORD PTR [r11+232]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0055d	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00563	48 89 8d b8 00
	00 00		 mov	 QWORD PTR t_lo$56[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  0056a	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0056f	49 03 89 e8 00
	00 00		 add	 rcx, QWORD PTR [r9+232]
  00576	4c 89 85 c0 00
	00 00		 mov	 QWORD PTR t_hi$57[rbp-256], r8
  0057d	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00583	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00586	49 89 89 e8 00
	00 00		 mov	 QWORD PTR [r9+232], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0058d	49 8b 83 f0 00
	00 00		 mov	 rax, QWORD PTR [r11+240]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00594	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0059a	48 89 8d c8 00
	00 00		 mov	 QWORD PTR t_lo$58[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  005a1	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  005a6	49 03 89 f0 00
	00 00		 add	 rcx, QWORD PTR [r9+240]
  005ad	4c 89 95 d0 00
	00 00		 mov	 QWORD PTR t_hi$59[rbp-256], r10
  005b4	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  005ba	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  005bd	49 89 89 f0 00
	00 00		 mov	 QWORD PTR [r9+240], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  005c4	49 8b 83 f8 00
	00 00		 mov	 rax, QWORD PTR [r11+248]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  005cb	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  005d1	48 89 8d d8 00
	00 00		 mov	 QWORD PTR t_lo$60[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  005d8	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  005dd	49 03 89 f8 00
	00 00		 add	 rcx, QWORD PTR [r9+248]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  005e4	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  005e9	4c 89 85 e0 00
	00 00		 mov	 QWORD PTR t_hi$61[rbp-256], r8
  005f0	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  005f6	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  005f9	49 89 89 f8 00
	00 00		 mov	 QWORD PTR [r9+248], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00600	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 253  :             up += 32;

  00606	49 81 c3 00 01
	00 00		 add	 r11, 256		; 00000100H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0060d	48 89 8d e8 00
	00 00		 mov	 QWORD PTR t_lo$62[rbp-256], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 254  :             wp += 32;

  00614	49 81 c1 00 01
	00 00		 add	 r9, 256			; 00000100H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0061b	4c 89 95 f0 00
	00 00		 mov	 QWORD PTR t_hi$63[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00622	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 219  :         while (count != 0)

  0062a	48 83 ee 01	 sub	 rsi, 1
  0062e	0f 85 0c fa ff
	ff		 jne	 $LL2@Multiply_W
$LN3@Multiply_W:

; 255  :             --count;
; 256  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 257  :             if (sizeof(k) == sizeof(_UINT32_T))
; 258  :                 AddToMULTI32Counter(32);
; 259  :             else
; 260  :                 AddToMULTI64Counter(32);
; 261  : #endif
; 262  :         }
; 263  : 
; 264  :         if (u_count & 0x10)

  00634	40 f6 c7 10	 test	 dil, 16
  00638	0f 84 f5 02 00
	00		 je	 $LN8@Multiply_W

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0063e	49 8b 03	 mov	 rax, QWORD PTR [r11]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00641	48 8b d3	 mov	 rdx, rbx
  00644	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00649	49 03 09	 add	 rcx, QWORD PTR [r9]
  0064c	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00652	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00655	49 89 09	 mov	 QWORD PTR [r9], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00658	49 8b 43 08	 mov	 rax, QWORD PTR [r11+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0065c	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00662	48 89 8d f8 00
	00 00		 mov	 QWORD PTR t_lo$64[rbp-256], rcx
  00669	4c 89 85 00 01
	00 00		 mov	 QWORD PTR t_hi$65[rbp-256], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  00670	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00675	49 03 49 08	 add	 rcx, QWORD PTR [r9+8]
  00679	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0067f	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00682	49 89 49 08	 mov	 QWORD PTR [r9+8], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00686	49 8b 43 10	 mov	 rax, QWORD PTR [r11+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0068a	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00690	48 89 8d 08 01
	00 00		 mov	 QWORD PTR t_lo$66[rbp-256], rcx
  00697	4c 89 95 10 01
	00 00		 mov	 QWORD PTR t_hi$67[rbp-256], r10

; 233  :             return (_mulx_u64(u, v, w_hi));

  0069e	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  006a3	49 03 49 10	 add	 rcx, QWORD PTR [r9+16]
  006a7	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  006ad	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  006b0	49 89 49 10	 mov	 QWORD PTR [r9+16], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  006b4	49 8b 43 18	 mov	 rax, QWORD PTR [r11+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  006b8	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  006be	48 89 8d 18 01
	00 00		 mov	 QWORD PTR t_lo$68[rbp-256], rcx
  006c5	4c 89 85 20 01
	00 00		 mov	 QWORD PTR t_hi$69[rbp-256], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  006cc	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  006d1	49 03 49 18	 add	 rcx, QWORD PTR [r9+24]
  006d5	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  006db	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  006de	49 89 49 18	 mov	 QWORD PTR [r9+24], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  006e2	49 8b 43 20	 mov	 rax, QWORD PTR [r11+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  006e6	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  006ec	48 89 8d 28 01
	00 00		 mov	 QWORD PTR t_lo$70[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  006f3	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  006f8	49 03 49 20	 add	 rcx, QWORD PTR [r9+32]
  006fc	4c 89 95 30 01
	00 00		 mov	 QWORD PTR t_hi$71[rbp-256], r10
  00703	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00709	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0070c	49 89 49 20	 mov	 QWORD PTR [r9+32], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00710	49 8b 43 28	 mov	 rax, QWORD PTR [r11+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00714	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  0071a	48 89 8d 38 01
	00 00		 mov	 QWORD PTR t_lo$72[rbp-256], rcx
  00721	4c 89 85 40 01
	00 00		 mov	 QWORD PTR t_hi$73[rbp-256], r8

; 233  :             return (_mulx_u64(u, v, w_hi));

  00728	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0072d	49 03 49 28	 add	 rcx, QWORD PTR [r9+40]
  00731	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00737	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0073a	49 89 49 28	 mov	 QWORD PTR [r9+40], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0073e	49 8b 43 30	 mov	 rax, QWORD PTR [r11+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00742	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00748	48 89 8d 48 01
	00 00		 mov	 QWORD PTR t_lo$74[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  0074f	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00754	49 03 49 30	 add	 rcx, QWORD PTR [r9+48]
  00758	4c 89 95 50 01
	00 00		 mov	 QWORD PTR t_hi$75[rbp-256], r10
  0075f	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00765	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00768	49 89 49 30	 mov	 QWORD PTR [r9+48], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0076c	49 8b 43 38	 mov	 rax, QWORD PTR [r11+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00770	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00776	48 89 8d 58 01
	00 00		 mov	 QWORD PTR t_lo$76[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  0077d	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00782	49 03 49 38	 add	 rcx, QWORD PTR [r9+56]
  00786	4c 89 85 60 01
	00 00		 mov	 QWORD PTR t_hi$77[rbp-256], r8
  0078d	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00793	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00796	49 89 49 38	 mov	 QWORD PTR [r9+56], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0079a	49 8b 43 40	 mov	 rax, QWORD PTR [r11+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0079e	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  007a4	48 89 8d 68 01
	00 00		 mov	 QWORD PTR t_lo$78[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  007ab	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  007b0	49 03 49 40	 add	 rcx, QWORD PTR [r9+64]
  007b4	4c 89 95 70 01
	00 00		 mov	 QWORD PTR t_hi$79[rbp-256], r10
  007bb	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  007c1	49 03 ca	 add	 rcx, r10
  007c4	48 89 8d 78 01
	00 00		 mov	 QWORD PTR t_lo$80[rbp-256], rcx
  007cb	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  007d1	4c 89 85 80 01
	00 00		 mov	 QWORD PTR t_hi$81[rbp-256], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  007d8	49 89 49 40	 mov	 QWORD PTR [r9+64], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  007dc	49 8b 43 48	 mov	 rax, QWORD PTR [r11+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  007e0	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  007e5	49 03 49 48	 add	 rcx, QWORD PTR [r9+72]
  007e9	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  007ef	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  007f2	49 89 49 48	 mov	 QWORD PTR [r9+72], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  007f6	49 8b 43 50	 mov	 rax, QWORD PTR [r11+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  007fa	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00800	48 89 8d 88 01
	00 00		 mov	 QWORD PTR t_lo$82[rbp-256], rcx
  00807	4c 89 95 90 01
	00 00		 mov	 QWORD PTR t_hi$83[rbp-256], r10

; 233  :             return (_mulx_u64(u, v, w_hi));

  0080e	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00813	49 03 49 50	 add	 rcx, QWORD PTR [r9+80]
  00817	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  0081d	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00820	49 89 49 50	 mov	 QWORD PTR [r9+80], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00824	49 8b 43 58	 mov	 rax, QWORD PTR [r11+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00828	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  0082e	48 89 8d 98 01
	00 00		 mov	 QWORD PTR t_lo$84[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00835	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0083a	49 03 49 58	 add	 rcx, QWORD PTR [r9+88]
  0083e	4c 89 85 a0 01
	00 00		 mov	 QWORD PTR t_hi$85[rbp-256], r8
  00845	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0084b	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0084e	49 89 49 58	 mov	 QWORD PTR [r9+88], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00852	49 8b 43 60	 mov	 rax, QWORD PTR [r11+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00856	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0085c	48 89 8d a8 01
	00 00		 mov	 QWORD PTR t_lo$86[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00863	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00868	49 03 49 60	 add	 rcx, QWORD PTR [r9+96]
  0086c	4c 89 95 b0 01
	00 00		 mov	 QWORD PTR t_hi$87[rbp-256], r10
  00873	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00879	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0087c	49 89 49 60	 mov	 QWORD PTR [r9+96], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00880	49 8b 43 68	 mov	 rax, QWORD PTR [r11+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00884	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  0088a	48 89 8d b8 01
	00 00		 mov	 QWORD PTR t_lo$88[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00891	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00896	49 03 49 68	 add	 rcx, QWORD PTR [r9+104]
  0089a	4c 89 85 c0 01
	00 00		 mov	 QWORD PTR t_hi$89[rbp-256], r8
  008a1	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  008a7	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  008aa	49 89 49 68	 mov	 QWORD PTR [r9+104], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  008ae	49 8b 43 70	 mov	 rax, QWORD PTR [r11+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008b2	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  008b8	48 89 8d c8 01
	00 00		 mov	 QWORD PTR t_lo$90[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  008bf	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008c4	49 03 49 70	 add	 rcx, QWORD PTR [r9+112]
  008c8	4c 89 95 d0 01
	00 00		 mov	 QWORD PTR t_hi$91[rbp-256], r10
  008cf	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  008d5	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  008d8	49 89 49 70	 mov	 QWORD PTR [r9+112], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  008dc	49 8b 43 78	 mov	 rax, QWORD PTR [r11+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008e0	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  008e6	48 89 8d d8 01
	00 00		 mov	 QWORD PTR t_lo$92[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  008ed	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008f2	49 03 49 78	 add	 rcx, QWORD PTR [r9+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  008f6	b8 10 00 00 00	 mov	 eax, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  008fb	4c 89 85 e0 01
	00 00		 mov	 QWORD PTR t_hi$93[rbp-256], r8
  00902	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00908	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0090b	49 89 49 78	 mov	 QWORD PTR [r9+120], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0090f	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 282  :             up += 16;

  00915	49 83 eb 80	 sub	 r11, -128		; ffffffffffffff80H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00919	48 89 8d e8 01
	00 00		 mov	 QWORD PTR t_lo$94[rbp-256], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 283  :             wp += 16;

  00920	49 83 e9 80	 sub	 r9, -128		; ffffffffffffff80H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00924	4c 89 95 f0 01
	00 00		 mov	 QWORD PTR t_hi$95[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  0092b	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN8@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 292  :         if (u_count & 0x8)

  00933	40 f6 c7 08	 test	 dil, 8
  00937	0f 84 85 01 00
	00		 je	 $LN11@Multiply_W

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  0093d	49 8b 03	 mov	 rax, QWORD PTR [r11]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00940	48 8b d3	 mov	 rdx, rbx
  00943	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00948	49 03 09	 add	 rcx, QWORD PTR [r9]
  0094b	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00951	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00954	49 89 09	 mov	 QWORD PTR [r9], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00957	49 8b 43 08	 mov	 rax, QWORD PTR [r11+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0095b	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00961	48 89 8d f8 01
	00 00		 mov	 QWORD PTR t_lo$96[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00968	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0096d	49 03 49 08	 add	 rcx, QWORD PTR [r9+8]
  00971	4c 89 85 00 02
	00 00		 mov	 QWORD PTR t_hi$97[rbp-256], r8
  00978	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0097e	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00981	49 89 49 08	 mov	 QWORD PTR [r9+8], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00985	49 8b 43 10	 mov	 rax, QWORD PTR [r11+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00989	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  0098f	48 89 8d 08 02
	00 00		 mov	 QWORD PTR t_lo$98[rbp-256], rcx
  00996	4c 89 95 10 02
	00 00		 mov	 QWORD PTR t_hi$99[rbp-256], r10

; 233  :             return (_mulx_u64(u, v, w_hi));

  0099d	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  009a2	49 03 49 10	 add	 rcx, QWORD PTR [r9+16]
  009a6	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  009ac	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  009af	49 89 49 10	 mov	 QWORD PTR [r9+16], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  009b3	49 8b 43 18	 mov	 rax, QWORD PTR [r11+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  009b7	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  009bd	48 89 8d 18 02
	00 00		 mov	 QWORD PTR t_lo$100[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  009c4	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  009c9	49 03 49 18	 add	 rcx, QWORD PTR [r9+24]
  009cd	4c 89 85 20 02
	00 00		 mov	 QWORD PTR t_hi$101[rbp-256], r8
  009d4	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  009da	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  009dd	49 89 49 18	 mov	 QWORD PTR [r9+24], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  009e1	49 8b 43 20	 mov	 rax, QWORD PTR [r11+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  009e5	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  009eb	48 89 8d 28 02
	00 00		 mov	 QWORD PTR t_lo$102[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  009f2	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  009f7	49 03 49 20	 add	 rcx, QWORD PTR [r9+32]
  009fb	4c 89 95 30 02
	00 00		 mov	 QWORD PTR t_hi$103[rbp-256], r10
  00a02	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00a08	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00a0b	49 89 49 20	 mov	 QWORD PTR [r9+32], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00a0f	49 8b 43 28	 mov	 rax, QWORD PTR [r11+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a13	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00a19	48 89 8d 38 02
	00 00		 mov	 QWORD PTR t_lo$104[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00a20	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a25	49 03 49 28	 add	 rcx, QWORD PTR [r9+40]
  00a29	4c 89 85 40 02
	00 00		 mov	 QWORD PTR t_hi$105[rbp-256], r8
  00a30	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00a36	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00a39	49 89 49 28	 mov	 QWORD PTR [r9+40], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00a3d	49 8b 43 30	 mov	 rax, QWORD PTR [r11+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a41	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00a47	48 89 8d 48 02
	00 00		 mov	 QWORD PTR t_lo$106[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00a4e	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a53	49 03 49 30	 add	 rcx, QWORD PTR [r9+48]
  00a57	4c 89 95 50 02
	00 00		 mov	 QWORD PTR t_hi$107[rbp-256], r10
  00a5e	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00a64	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00a67	49 89 49 30	 mov	 QWORD PTR [r9+48], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00a6b	49 8b 43 38	 mov	 rax, QWORD PTR [r11+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a6f	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00a75	48 89 8d 58 02
	00 00		 mov	 QWORD PTR t_lo$108[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00a7c	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a81	49 03 49 38	 add	 rcx, QWORD PTR [r9+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00a85	b8 08 00 00 00	 mov	 eax, 8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a8a	4c 89 85 60 02
	00 00		 mov	 QWORD PTR t_hi$109[rbp-256], r8
  00a91	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00a97	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00a9a	49 89 49 38	 mov	 QWORD PTR [r9+56], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00a9e	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 302  :             up += 8;

  00aa4	49 83 c3 40	 add	 r11, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00aa8	48 89 8d 68 02
	00 00		 mov	 QWORD PTR t_lo$110[rbp-256], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 303  :             wp += 8;

  00aaf	49 83 c1 40	 add	 r9, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00ab3	4c 89 95 70 02
	00 00		 mov	 QWORD PTR t_hi$111[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00aba	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN11@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 312  :         if (u_count & 0x4)

  00ac2	40 f6 c7 04	 test	 dil, 4
  00ac6	0f 84 cd 00 00
	00		 je	 $LN14@Multiply_W

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00acc	49 8b 03	 mov	 rax, QWORD PTR [r11]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00acf	48 8b d3	 mov	 rdx, rbx
  00ad2	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00ad7	49 03 09	 add	 rcx, QWORD PTR [r9]
  00ada	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00ae0	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00ae3	49 89 09	 mov	 QWORD PTR [r9], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00ae6	49 8b 43 08	 mov	 rax, QWORD PTR [r11+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00aea	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00af0	48 89 8d 78 02
	00 00		 mov	 QWORD PTR t_lo$112[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00af7	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00afc	49 03 49 08	 add	 rcx, QWORD PTR [r9+8]
  00b00	4c 89 85 80 02
	00 00		 mov	 QWORD PTR t_hi$113[rbp-256], r8
  00b07	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00b0d	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00b10	49 89 49 08	 mov	 QWORD PTR [r9+8], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00b14	49 8b 43 10	 mov	 rax, QWORD PTR [r11+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b18	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00b1e	48 89 8d 88 02
	00 00		 mov	 QWORD PTR t_lo$114[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00b25	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b2a	49 03 49 10	 add	 rcx, QWORD PTR [r9+16]
  00b2e	4c 89 95 90 02
	00 00		 mov	 QWORD PTR t_hi$115[rbp-256], r10
  00b35	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00b3b	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00b3e	49 89 49 10	 mov	 QWORD PTR [r9+16], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00b42	49 8b 43 18	 mov	 rax, QWORD PTR [r11+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b46	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00b4c	48 89 8d 98 02
	00 00		 mov	 QWORD PTR t_lo$116[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00b53	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b58	49 03 49 18	 add	 rcx, QWORD PTR [r9+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00b5c	b8 04 00 00 00	 mov	 eax, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b61	4c 89 85 a0 02
	00 00		 mov	 QWORD PTR t_hi$117[rbp-256], r8
  00b68	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00b6e	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00b71	49 89 49 18	 mov	 QWORD PTR [r9+24], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b75	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 318  :             up += 4;

  00b7b	49 83 c3 20	 add	 r11, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b7f	48 89 8d a8 02
	00 00		 mov	 QWORD PTR t_lo$118[rbp-256], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 319  :             wp += 4;

  00b86	49 83 c1 20	 add	 r9, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00b8a	4c 89 95 b0 02
	00 00		 mov	 QWORD PTR t_hi$119[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00b91	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN14@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 328  :         if (u_count & 0x2)

  00b99	40 f6 c7 02	 test	 dil, 2
  00b9d	74 71		 je	 SHORT $LN17@Multiply_W

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00b9f	49 8b 03	 mov	 rax, QWORD PTR [r11]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00ba2	48 8b d3	 mov	 rdx, rbx
  00ba5	c4 62 f3 f6 c0	 mulx	 r8, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00baa	49 03 09	 add	 rcx, QWORD PTR [r9]
  00bad	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00bb3	49 03 ca	 add	 rcx, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00bb6	49 89 09	 mov	 QWORD PTR [r9], rcx

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00bb9	49 8b 43 08	 mov	 rax, QWORD PTR [r11+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00bbd	66 4d 0f 38 f6
	c6		 adcx	 r8, r14
  00bc3	48 89 8d b8 02
	00 00		 mov	 QWORD PTR t_lo$120[rbp-256], rcx

; 233  :             return (_mulx_u64(u, v, w_hi));

  00bca	c4 62 f3 f6 d0	 mulx	 r10, rcx, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00bcf	49 03 49 08	 add	 rcx, QWORD PTR [r9+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00bd3	b8 02 00 00 00	 mov	 eax, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00bd8	4c 89 85 c0 02
	00 00		 mov	 QWORD PTR t_hi$121[rbp-256], r8
  00bdf	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00be5	49 03 c8	 add	 rcx, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00be8	49 89 49 08	 mov	 QWORD PTR [r9+8], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00bec	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 332  :             up += 2;

  00bf2	49 83 c3 10	 add	 r11, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00bf6	48 89 8d c8 02
	00 00		 mov	 QWORD PTR t_lo$122[rbp-256], rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 333  :             wp += 2;

  00bfd	49 83 c1 10	 add	 r9, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c01	4c 89 95 d0 02
	00 00		 mov	 QWORD PTR t_hi$123[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00c08	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN17@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 342  :         if (u_count & 0x1)

  00c10	40 f6 c7 01	 test	 dil, 1
  00c14	74 3c		 je	 SHORT $LN20@Multiply_W

; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00c16	49 8b 03	 mov	 rax, QWORD PTR [r11]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00c19	48 8b d3	 mov	 rdx, rbx
  00c1c	c4 e2 bb f6 c8	 mulx	 rcx, r8, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c21	4d 03 01	 add	 r8, QWORD PTR [r9]
  00c24	66 49 0f 38 f6
	ce		 adcx	 rcx, r14
  00c2a	4d 03 c2	 add	 r8, r10
  00c2d	4c 8b d1	 mov	 r10, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  00c30	4d 89 01	 mov	 QWORD PTR [r9], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c33	66 4d 0f 38 f6
	d6		 adcx	 r10, r14
  00c39	4c 89 95 e0 02
	00 00		 mov	 QWORD PTR t_hi$125[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 346  :             wp += 1;

  00c40	49 83 c1 08	 add	 r9, 8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00c44	4c 89 85 d8 02
	00 00		 mov	 QWORD PTR t_lo$124[rbp-256], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 337  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI64);

  00c4b	f0 ff 05 00 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A
$LN20@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 355  :         if (k != 0)

  00c52	4d 85 d2	 test	 r10, r10
  00c55	74 03		 je	 SHORT $LN21@Multiply_W

; 356  :             *wp = k;

  00c57	4d 89 11	 mov	 QWORD PTR [r9], r10
$LN21@Multiply_W:

; 357  :     }

  00c5a	4c 8d 9c 24 f0
	03 00 00	 lea	 r11, QWORD PTR [rsp+1008]
  00c62	49 8b 5b 20	 mov	 rbx, QWORD PTR [r11+32]
  00c66	49 8b 73 30	 mov	 rsi, QWORD PTR [r11+48]
  00c6a	49 8b e3	 mov	 rsp, r11
  00c6d	41 5e		 pop	 r14
  00c6f	5f		 pop	 rdi
  00c70	5d		 pop	 rbp
  00c71	c3		 ret	 0
?Multiply_WORD_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MULX_ADCX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z
_TEXT	SEGMENT
t_hi$1 = 0
t_lo$2 = 8
t_hi$3 = 16
t_lo$4 = 24
t_hi$5 = 32
t_lo$6 = 40
t_hi$7 = 48
t_lo$8 = 56
t_hi$9 = 64
t_lo$10 = 72
t_hi$11 = 80
t_lo$12 = 88
t_hi$13 = 96
t_lo$14 = 104
t_hi$15 = 112
t_lo$16 = 120
t_hi$17 = 128
t_lo$18 = 136
t_hi$19 = 144
t_lo$20 = 152
t_hi$21 = 160
t_lo$22 = 168
t_hi$23 = 176
t_lo$24 = 184
t_hi$25 = 192
t_lo$26 = 200
t_hi$27 = 208
t_lo$28 = 216
t_hi$29 = 224
t_lo$30 = 232
t_hi$31 = 240
t_lo$32 = 248
t_hi$33 = 256
t_lo$34 = 264
t_hi$35 = 272
t_lo$36 = 280
t_hi$37 = 288
t_lo$38 = 296
t_hi$39 = 304
t_lo$40 = 312
t_hi$41 = 320
t_lo$42 = 328
t_hi$43 = 336
t_lo$44 = 344
t_hi$45 = 352
t_lo$46 = 360
t_hi$47 = 368
t_lo$48 = 376
t_hi$49 = 384
t_lo$50 = 392
t_hi$51 = 400
t_lo$52 = 408
t_hi$53 = 416
t_lo$54 = 424
t_hi$55 = 432
t_lo$56 = 440
t_hi$57 = 448
t_lo$58 = 456
t_hi$59 = 464
t_lo$60 = 472
t_hi$61 = 480
t_lo$62 = 488
t_hi$63 = 496
t_lo$64 = 504
t_hi$65 = 512
t_lo$66 = 520
t_hi$67 = 528
t_lo$68 = 536
t_hi$69 = 544
t_lo$70 = 552
t_hi$71 = 560
t_lo$72 = 568
t_hi$73 = 576
t_lo$74 = 584
t_hi$75 = 592
t_lo$76 = 600
t_hi$77 = 608
t_lo$78 = 616
t_hi$79 = 624
t_lo$80 = 632
t_hi$81 = 640
t_lo$82 = 648
t_hi$83 = 656
t_lo$84 = 664
t_hi$85 = 672
t_lo$86 = 680
t_hi$87 = 688
t_lo$88 = 696
t_hi$89 = 704
t_lo$90 = 712
t_hi$91 = 720
t_lo$92 = 728
t_hi$93 = 736
t_lo$94 = 744
t_hi$95 = 752
t_lo$96 = 760
t_hi$97 = 768
t_lo$98 = 776
t_hi$99 = 784
t_lo$100 = 792
t_hi$101 = 800
t_lo$102 = 808
t_hi$103 = 816
t_lo$104 = 824
t_hi$105 = 832
t_lo$106 = 840
t_hi$107 = 848
t_lo$108 = 856
t_hi$109 = 864
t_lo$110 = 872
t_hi$111 = 880
t_lo$112 = 888
t_hi$113 = 896
t_lo$114 = 904
t_hi$115 = 912
t_lo$116 = 920
t_hi$117 = 928
t_lo$118 = 936
t_hi$119 = 944
t_lo$120 = 952
t_hi$121 = 960
t_lo$122 = 968
t_hi$123 = 976
t_lo$124 = 984
t_hi$125 = 992
up$ = 1024
t_lo$126 = 1032
u_count$ = 1032
v$ = 1040
wp$ = 1048
?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z PROC ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC, COMDAT

; 70   :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	55		 push	 rbp
  00010	48 8d ac 24 10
	fd ff ff	 lea	 rbp, QWORD PTR [rsp-752]
  00018	48 81 ec f0 03
	00 00		 sub	 rsp, 1008		; 000003f0H

; 71   :         __UNIT_TYPE k = 0;
; 72   :         __UNIT_TYPE count = u_count >> 5;

  0001f	48 8b f2	 mov	 rsi, rdx
  00022	45 33 d2	 xor	 r10d, r10d
  00025	48 c1 ee 05	 shr	 rsi, 5
  00029	49 8b d8	 mov	 rbx, r8
  0002c	48 8b fa	 mov	 rdi, rdx
  0002f	4c 8b d9	 mov	 r11, rcx

; 74   :         while (count != 0)

  00032	48 85 f6	 test	 rsi, rsi
  00035	0f 84 96 05 00
	00		 je	 $LN3@Multiply_W
  0003b	0f 1f 44 00 00	 npad	 5
$LL2@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00040	48 8b c3	 mov	 rax, rbx
  00043	49 f7 23	 mul	 QWORD PTR [r11]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00046	49 03 01	 add	 rax, QWORD PTR [r9]

; 221  :             return (_umul128(u, v, w_hi));

  00049	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0004c	48 83 d1 00	 adc	 rcx, 0
  00050	49 03 c2	 add	 rax, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00053	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00056	48 83 d1 00	 adc	 rcx, 0
  0005a	48 89 85 08 03
	00 00		 mov	 QWORD PTR t_lo$126[rbp-256], rax
  00061	48 89 0c 24	 mov	 QWORD PTR t_hi$1[rsp], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00065	48 8b c3	 mov	 rax, rbx
  00068	49 f7 63 08	 mul	 QWORD PTR [r11+8]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0006c	49 03 41 08	 add	 rax, QWORD PTR [r9+8]

; 221  :             return (_umul128(u, v, w_hi));

  00070	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00073	49 83 d0 00	 adc	 r8, 0
  00077	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0007a	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0007e	49 83 d0 00	 adc	 r8, 0
  00082	48 89 44 24 08	 mov	 QWORD PTR t_lo$2[rsp], rax
  00087	4c 89 44 24 10	 mov	 QWORD PTR t_hi$3[rsp], r8

; 221  :             return (_umul128(u, v, w_hi));

  0008c	48 8b c3	 mov	 rax, rbx
  0008f	49 f7 63 10	 mul	 QWORD PTR [r11+16]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00093	49 03 41 10	 add	 rax, QWORD PTR [r9+16]

; 221  :             return (_umul128(u, v, w_hi));

  00097	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0009a	48 83 d1 00	 adc	 rcx, 0
  0009e	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  000a1	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000a5	48 83 d1 00	 adc	 rcx, 0
  000a9	48 89 44 24 18	 mov	 QWORD PTR t_lo$4[rsp], rax
  000ae	48 89 4c 24 20	 mov	 QWORD PTR t_hi$5[rsp], rcx

; 221  :             return (_umul128(u, v, w_hi));

  000b3	48 8b c3	 mov	 rax, rbx
  000b6	49 f7 63 18	 mul	 QWORD PTR [r11+24]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000ba	49 03 41 18	 add	 rax, QWORD PTR [r9+24]

; 221  :             return (_umul128(u, v, w_hi));

  000be	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000c1	49 83 d0 00	 adc	 r8, 0
  000c5	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  000c8	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000cc	49 83 d0 00	 adc	 r8, 0
  000d0	48 89 44 24 28	 mov	 QWORD PTR t_lo$6[rsp], rax
  000d5	4c 89 44 24 30	 mov	 QWORD PTR t_hi$7[rsp], r8

; 221  :             return (_umul128(u, v, w_hi));

  000da	48 8b c3	 mov	 rax, rbx
  000dd	49 f7 63 20	 mul	 QWORD PTR [r11+32]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000e1	49 03 41 20	 add	 rax, QWORD PTR [r9+32]

; 221  :             return (_umul128(u, v, w_hi));

  000e5	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000e8	48 83 d1 00	 adc	 rcx, 0
  000ec	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  000ef	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  000f3	48 83 d1 00	 adc	 rcx, 0
  000f7	48 89 44 24 38	 mov	 QWORD PTR t_lo$8[rsp], rax
  000fc	48 89 4c 24 40	 mov	 QWORD PTR t_hi$9[rsp], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00101	48 8b c3	 mov	 rax, rbx
  00104	49 f7 63 28	 mul	 QWORD PTR [r11+40]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00108	49 03 41 28	 add	 rax, QWORD PTR [r9+40]

; 221  :             return (_umul128(u, v, w_hi));

  0010c	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0010f	49 83 d0 00	 adc	 r8, 0
  00113	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00116	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0011a	49 83 d0 00	 adc	 r8, 0
  0011e	48 89 44 24 48	 mov	 QWORD PTR t_lo$10[rsp], rax
  00123	4c 89 44 24 50	 mov	 QWORD PTR t_hi$11[rsp], r8

; 221  :             return (_umul128(u, v, w_hi));

  00128	48 8b c3	 mov	 rax, rbx
  0012b	49 f7 63 30	 mul	 QWORD PTR [r11+48]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0012f	49 03 41 30	 add	 rax, QWORD PTR [r9+48]

; 221  :             return (_umul128(u, v, w_hi));

  00133	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00136	48 83 d1 00	 adc	 rcx, 0
  0013a	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0013d	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00141	48 83 d1 00	 adc	 rcx, 0
  00145	48 89 44 24 58	 mov	 QWORD PTR t_lo$12[rsp], rax

; 221  :             return (_umul128(u, v, w_hi));

  0014a	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0014d	48 89 4c 24 60	 mov	 QWORD PTR t_hi$13[rsp], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00152	49 f7 63 38	 mul	 QWORD PTR [r11+56]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00156	49 03 41 38	 add	 rax, QWORD PTR [r9+56]

; 221  :             return (_umul128(u, v, w_hi));

  0015a	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0015d	49 83 d0 00	 adc	 r8, 0
  00161	48 03 c1	 add	 rax, rcx
  00164	48 89 44 24 68	 mov	 QWORD PTR t_lo$14[rsp], rax
  00169	49 83 d0 00	 adc	 r8, 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0016d	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00171	4c 89 44 24 70	 mov	 QWORD PTR t_hi$15[rsp], r8

; 221  :             return (_umul128(u, v, w_hi));

  00176	48 8b c3	 mov	 rax, rbx
  00179	49 f7 63 40	 mul	 QWORD PTR [r11+64]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0017d	49 03 41 40	 add	 rax, QWORD PTR [r9+64]

; 221  :             return (_umul128(u, v, w_hi));

  00181	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00184	48 83 d1 00	 adc	 rcx, 0
  00188	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0018b	49 89 41 40	 mov	 QWORD PTR [r9+64], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0018f	48 83 d1 00	 adc	 rcx, 0
  00193	48 89 44 24 78	 mov	 QWORD PTR t_lo$16[rsp], rax
  00198	48 89 4d 80	 mov	 QWORD PTR t_hi$17[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  0019c	48 8b c3	 mov	 rax, rbx
  0019f	49 f7 63 48	 mul	 QWORD PTR [r11+72]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001a3	49 03 41 48	 add	 rax, QWORD PTR [r9+72]

; 221  :             return (_umul128(u, v, w_hi));

  001a7	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001aa	49 83 d0 00	 adc	 r8, 0
  001ae	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  001b1	49 89 41 48	 mov	 QWORD PTR [r9+72], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001b5	49 83 d0 00	 adc	 r8, 0
  001b9	48 89 45 88	 mov	 QWORD PTR t_lo$18[rbp-256], rax
  001bd	4c 89 45 90	 mov	 QWORD PTR t_hi$19[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  001c1	48 8b c3	 mov	 rax, rbx
  001c4	49 f7 63 50	 mul	 QWORD PTR [r11+80]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001c8	49 03 41 50	 add	 rax, QWORD PTR [r9+80]

; 221  :             return (_umul128(u, v, w_hi));

  001cc	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001cf	48 83 d1 00	 adc	 rcx, 0
  001d3	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  001d6	49 89 41 50	 mov	 QWORD PTR [r9+80], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001da	48 83 d1 00	 adc	 rcx, 0
  001de	48 89 45 98	 mov	 QWORD PTR t_lo$20[rbp-256], rax
  001e2	48 89 4d a0	 mov	 QWORD PTR t_hi$21[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  001e6	48 8b c3	 mov	 rax, rbx
  001e9	49 f7 63 58	 mul	 QWORD PTR [r11+88]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001ed	49 03 41 58	 add	 rax, QWORD PTR [r9+88]

; 221  :             return (_umul128(u, v, w_hi));

  001f1	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001f4	49 83 d0 00	 adc	 r8, 0
  001f8	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  001fb	49 89 41 58	 mov	 QWORD PTR [r9+88], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  001ff	49 83 d0 00	 adc	 r8, 0
  00203	48 89 45 a8	 mov	 QWORD PTR t_lo$22[rbp-256], rax
  00207	4c 89 45 b0	 mov	 QWORD PTR t_hi$23[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  0020b	48 8b c3	 mov	 rax, rbx
  0020e	49 f7 63 60	 mul	 QWORD PTR [r11+96]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00212	49 03 41 60	 add	 rax, QWORD PTR [r9+96]

; 221  :             return (_umul128(u, v, w_hi));

  00216	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00219	48 83 d1 00	 adc	 rcx, 0
  0021d	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00220	49 89 41 60	 mov	 QWORD PTR [r9+96], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00224	48 83 d1 00	 adc	 rcx, 0
  00228	48 89 45 b8	 mov	 QWORD PTR t_lo$24[rbp-256], rax
  0022c	48 89 4d c0	 mov	 QWORD PTR t_hi$25[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00230	48 8b c3	 mov	 rax, rbx
  00233	49 f7 63 68	 mul	 QWORD PTR [r11+104]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00237	49 03 41 68	 add	 rax, QWORD PTR [r9+104]

; 221  :             return (_umul128(u, v, w_hi));

  0023b	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0023e	49 83 d0 00	 adc	 r8, 0
  00242	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00245	49 89 41 68	 mov	 QWORD PTR [r9+104], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00249	49 83 d0 00	 adc	 r8, 0
  0024d	48 89 45 c8	 mov	 QWORD PTR t_lo$26[rbp-256], rax
  00251	4c 89 45 d0	 mov	 QWORD PTR t_hi$27[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00255	48 8b c3	 mov	 rax, rbx
  00258	49 f7 63 70	 mul	 QWORD PTR [r11+112]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0025c	49 03 41 70	 add	 rax, QWORD PTR [r9+112]

; 221  :             return (_umul128(u, v, w_hi));

  00260	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00263	48 83 d1 00	 adc	 rcx, 0
  00267	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0026a	49 89 41 70	 mov	 QWORD PTR [r9+112], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0026e	48 83 d1 00	 adc	 rcx, 0
  00272	48 89 45 d8	 mov	 QWORD PTR t_lo$28[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  00276	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00279	48 89 4d e0	 mov	 QWORD PTR t_hi$29[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  0027d	49 f7 63 78	 mul	 QWORD PTR [r11+120]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00281	49 03 41 78	 add	 rax, QWORD PTR [r9+120]

; 221  :             return (_umul128(u, v, w_hi));

  00285	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00288	49 83 d0 00	 adc	 r8, 0
  0028c	48 03 c1	 add	 rax, rcx
  0028f	48 89 45 e8	 mov	 QWORD PTR t_lo$30[rbp-256], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00293	49 89 41 78	 mov	 QWORD PTR [r9+120], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00297	49 83 d0 00	 adc	 r8, 0

; 221  :             return (_umul128(u, v, w_hi));

  0029b	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0029e	4c 89 45 f0	 mov	 QWORD PTR t_hi$31[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  002a2	49 f7 a3 80 00
	00 00		 mul	 QWORD PTR [r11+128]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002a9	49 03 81 80 00
	00 00		 add	 rax, QWORD PTR [r9+128]

; 221  :             return (_umul128(u, v, w_hi));

  002b0	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002b3	48 83 d1 00	 adc	 rcx, 0
  002b7	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  002ba	49 89 81 80 00
	00 00		 mov	 QWORD PTR [r9+128], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002c1	48 83 d1 00	 adc	 rcx, 0
  002c5	48 89 45 f8	 mov	 QWORD PTR t_lo$32[rbp-256], rax
  002c9	48 89 4d 00	 mov	 QWORD PTR t_hi$33[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  002cd	48 8b c3	 mov	 rax, rbx
  002d0	49 f7 a3 88 00
	00 00		 mul	 QWORD PTR [r11+136]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002d7	49 03 81 88 00
	00 00		 add	 rax, QWORD PTR [r9+136]

; 221  :             return (_umul128(u, v, w_hi));

  002de	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002e1	49 83 d0 00	 adc	 r8, 0
  002e5	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  002e8	49 89 81 88 00
	00 00		 mov	 QWORD PTR [r9+136], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  002ef	49 83 d0 00	 adc	 r8, 0
  002f3	48 89 45 08	 mov	 QWORD PTR t_lo$34[rbp-256], rax
  002f7	4c 89 45 10	 mov	 QWORD PTR t_hi$35[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  002fb	48 8b c3	 mov	 rax, rbx
  002fe	49 f7 a3 90 00
	00 00		 mul	 QWORD PTR [r11+144]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00305	49 03 81 90 00
	00 00		 add	 rax, QWORD PTR [r9+144]

; 221  :             return (_umul128(u, v, w_hi));

  0030c	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0030f	48 83 d1 00	 adc	 rcx, 0
  00313	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00316	49 89 81 90 00
	00 00		 mov	 QWORD PTR [r9+144], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0031d	48 83 d1 00	 adc	 rcx, 0
  00321	48 89 45 18	 mov	 QWORD PTR t_lo$36[rbp-256], rax
  00325	48 89 4d 20	 mov	 QWORD PTR t_hi$37[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00329	48 8b c3	 mov	 rax, rbx
  0032c	49 f7 a3 98 00
	00 00		 mul	 QWORD PTR [r11+152]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00333	49 03 81 98 00
	00 00		 add	 rax, QWORD PTR [r9+152]

; 221  :             return (_umul128(u, v, w_hi));

  0033a	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0033d	49 83 d0 00	 adc	 r8, 0
  00341	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00344	49 89 81 98 00
	00 00		 mov	 QWORD PTR [r9+152], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0034b	49 83 d0 00	 adc	 r8, 0
  0034f	48 89 45 28	 mov	 QWORD PTR t_lo$38[rbp-256], rax
  00353	4c 89 45 30	 mov	 QWORD PTR t_hi$39[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00357	48 8b c3	 mov	 rax, rbx
  0035a	49 f7 a3 a0 00
	00 00		 mul	 QWORD PTR [r11+160]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00361	49 03 81 a0 00
	00 00		 add	 rax, QWORD PTR [r9+160]

; 221  :             return (_umul128(u, v, w_hi));

  00368	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0036b	48 83 d1 00	 adc	 rcx, 0
  0036f	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00372	49 89 81 a0 00
	00 00		 mov	 QWORD PTR [r9+160], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00379	48 83 d1 00	 adc	 rcx, 0
  0037d	48 89 45 38	 mov	 QWORD PTR t_lo$40[rbp-256], rax
  00381	48 89 4d 40	 mov	 QWORD PTR t_hi$41[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00385	48 8b c3	 mov	 rax, rbx
  00388	49 f7 a3 a8 00
	00 00		 mul	 QWORD PTR [r11+168]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0038f	49 03 81 a8 00
	00 00		 add	 rax, QWORD PTR [r9+168]

; 221  :             return (_umul128(u, v, w_hi));

  00396	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00399	49 83 d0 00	 adc	 r8, 0
  0039d	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  003a0	49 89 81 a8 00
	00 00		 mov	 QWORD PTR [r9+168], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003a7	49 83 d0 00	 adc	 r8, 0
  003ab	48 89 45 48	 mov	 QWORD PTR t_lo$42[rbp-256], rax
  003af	4c 89 45 50	 mov	 QWORD PTR t_hi$43[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  003b3	48 8b c3	 mov	 rax, rbx
  003b6	49 f7 a3 b0 00
	00 00		 mul	 QWORD PTR [r11+176]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003bd	49 03 81 b0 00
	00 00		 add	 rax, QWORD PTR [r9+176]

; 221  :             return (_umul128(u, v, w_hi));

  003c4	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003c7	48 83 d1 00	 adc	 rcx, 0
  003cb	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  003ce	49 89 81 b0 00
	00 00		 mov	 QWORD PTR [r9+176], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003d5	48 83 d1 00	 adc	 rcx, 0
  003d9	48 89 45 58	 mov	 QWORD PTR t_lo$44[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  003dd	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003e0	48 89 4d 60	 mov	 QWORD PTR t_hi$45[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  003e4	49 f7 a3 b8 00
	00 00		 mul	 QWORD PTR [r11+184]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003eb	49 03 81 b8 00
	00 00		 add	 rax, QWORD PTR [r9+184]

; 221  :             return (_umul128(u, v, w_hi));

  003f2	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  003f5	49 83 d0 00	 adc	 r8, 0
  003f9	48 03 c1	 add	 rax, rcx
  003fc	48 89 45 68	 mov	 QWORD PTR t_lo$46[rbp-256], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00400	49 89 81 b8 00
	00 00		 mov	 QWORD PTR [r9+184], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00407	49 83 d0 00	 adc	 r8, 0

; 221  :             return (_umul128(u, v, w_hi));

  0040b	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0040e	4c 89 45 70	 mov	 QWORD PTR t_hi$47[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00412	49 f7 a3 c0 00
	00 00		 mul	 QWORD PTR [r11+192]
  00419	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0041c	49 03 81 c0 00
	00 00		 add	 rax, QWORD PTR [r9+192]
  00423	48 83 d1 00	 adc	 rcx, 0
  00427	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0042a	49 89 81 c0 00
	00 00		 mov	 QWORD PTR [r9+192], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00431	48 83 d1 00	 adc	 rcx, 0
  00435	48 89 45 78	 mov	 QWORD PTR t_lo$48[rbp-256], rax
  00439	48 89 8d 80 00
	00 00		 mov	 QWORD PTR t_hi$49[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00440	48 8b c3	 mov	 rax, rbx
  00443	49 f7 a3 c8 00
	00 00		 mul	 QWORD PTR [r11+200]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0044a	49 03 81 c8 00
	00 00		 add	 rax, QWORD PTR [r9+200]

; 221  :             return (_umul128(u, v, w_hi));

  00451	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00454	49 83 d0 00	 adc	 r8, 0
  00458	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0045b	49 89 81 c8 00
	00 00		 mov	 QWORD PTR [r9+200], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00462	49 83 d0 00	 adc	 r8, 0
  00466	48 89 85 88 00
	00 00		 mov	 QWORD PTR t_lo$50[rbp-256], rax
  0046d	4c 89 85 90 00
	00 00		 mov	 QWORD PTR t_hi$51[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00474	48 8b c3	 mov	 rax, rbx
  00477	49 f7 a3 d0 00
	00 00		 mul	 QWORD PTR [r11+208]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0047e	49 03 81 d0 00
	00 00		 add	 rax, QWORD PTR [r9+208]

; 221  :             return (_umul128(u, v, w_hi));

  00485	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00488	48 83 d1 00	 adc	 rcx, 0
  0048c	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0048f	49 89 81 d0 00
	00 00		 mov	 QWORD PTR [r9+208], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00496	48 83 d1 00	 adc	 rcx, 0
  0049a	48 89 85 98 00
	00 00		 mov	 QWORD PTR t_lo$52[rbp-256], rax
  004a1	48 89 8d a0 00
	00 00		 mov	 QWORD PTR t_hi$53[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  004a8	48 8b c3	 mov	 rax, rbx
  004ab	49 f7 a3 d8 00
	00 00		 mul	 QWORD PTR [r11+216]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004b2	49 03 81 d8 00
	00 00		 add	 rax, QWORD PTR [r9+216]

; 221  :             return (_umul128(u, v, w_hi));

  004b9	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004bc	49 83 d0 00	 adc	 r8, 0
  004c0	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  004c3	49 89 81 d8 00
	00 00		 mov	 QWORD PTR [r9+216], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004ca	49 83 d0 00	 adc	 r8, 0
  004ce	48 89 85 a8 00
	00 00		 mov	 QWORD PTR t_lo$54[rbp-256], rax
  004d5	4c 89 85 b0 00
	00 00		 mov	 QWORD PTR t_hi$55[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  004dc	48 8b c3	 mov	 rax, rbx
  004df	49 f7 a3 e0 00
	00 00		 mul	 QWORD PTR [r11+224]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004e6	49 03 81 e0 00
	00 00		 add	 rax, QWORD PTR [r9+224]

; 221  :             return (_umul128(u, v, w_hi));

  004ed	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004f0	48 83 d1 00	 adc	 rcx, 0
  004f4	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  004f7	49 89 81 e0 00
	00 00		 mov	 QWORD PTR [r9+224], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  004fe	48 83 d1 00	 adc	 rcx, 0
  00502	48 89 85 b8 00
	00 00		 mov	 QWORD PTR t_lo$56[rbp-256], rax
  00509	48 89 8d c0 00
	00 00		 mov	 QWORD PTR t_hi$57[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00510	48 8b c3	 mov	 rax, rbx
  00513	49 f7 a3 e8 00
	00 00		 mul	 QWORD PTR [r11+232]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0051a	49 03 81 e8 00
	00 00		 add	 rax, QWORD PTR [r9+232]

; 221  :             return (_umul128(u, v, w_hi));

  00521	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00524	49 83 d0 00	 adc	 r8, 0
  00528	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0052b	49 89 81 e8 00
	00 00		 mov	 QWORD PTR [r9+232], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00532	49 83 d0 00	 adc	 r8, 0
  00536	48 89 85 c8 00
	00 00		 mov	 QWORD PTR t_lo$58[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  0053d	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00540	4c 89 85 d0 00
	00 00		 mov	 QWORD PTR t_hi$59[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00547	49 f7 a3 f0 00
	00 00		 mul	 QWORD PTR [r11+240]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0054e	49 03 81 f0 00
	00 00		 add	 rax, QWORD PTR [r9+240]

; 221  :             return (_umul128(u, v, w_hi));

  00555	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00558	48 83 d1 00	 adc	 rcx, 0
  0055c	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0055f	49 89 81 f0 00
	00 00		 mov	 QWORD PTR [r9+240], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00566	48 83 d1 00	 adc	 rcx, 0
  0056a	48 89 85 d8 00
	00 00		 mov	 QWORD PTR t_lo$60[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  00571	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00574	48 89 8d e0 00
	00 00		 mov	 QWORD PTR t_hi$61[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  0057b	49 f7 a3 f8 00
	00 00		 mul	 QWORD PTR [r11+248]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00582	49 03 81 f8 00
	00 00		 add	 rax, QWORD PTR [r9+248]

; 221  :             return (_umul128(u, v, w_hi));

  00589	4c 8b d2	 mov	 r10, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0058c	49 83 d2 00	 adc	 r10, 0
  00590	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00593	49 89 81 f8 00
	00 00		 mov	 QWORD PTR [r9+248], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0059a	49 83 d2 00	 adc	 r10, 0
  0059e	48 89 85 e8 00
	00 00		 mov	 QWORD PTR t_lo$62[rbp-256], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 108  :             up += 32;

  005a5	49 81 c3 00 01
	00 00		 add	 r11, 256		; 00000100H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  005ac	4c 89 95 f0 00
	00 00		 mov	 QWORD PTR t_hi$63[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 109  :             wp += 32;

  005b3	49 81 c1 00 01
	00 00		 add	 r9, 256			; 00000100H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  005ba	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  005bf	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 74   :         while (count != 0)

  005c7	48 83 ee 01	 sub	 rsi, 1
  005cb	0f 85 6f fa ff
	ff		 jne	 $LL2@Multiply_W
$LN3@Multiply_W:

; 110  :             --count;
; 111  : #ifdef ENABLED_PERFORMANCE_COUNTER
; 112  :             if (sizeof(k) == sizeof(_UINT32_T))
; 113  :                 AddToMULTI32Counter(32);
; 114  :             else
; 115  :                 AddToMULTI64Counter(32);
; 116  : #endif
; 117  :         }
; 118  : 
; 119  :         if (u_count & 0x10)

  005d1	40 f6 c7 10	 test	 dil, 16
  005d5	0f 84 c2 02 00
	00		 je	 $LN8@Multiply_W
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  005db	48 8b c3	 mov	 rax, rbx
  005de	49 f7 23	 mul	 QWORD PTR [r11]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  005e1	49 03 01	 add	 rax, QWORD PTR [r9]

; 221  :             return (_umul128(u, v, w_hi));

  005e4	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  005e7	48 83 d1 00	 adc	 rcx, 0
  005eb	49 03 c2	 add	 rax, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  005ee	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  005f1	48 83 d1 00	 adc	 rcx, 0
  005f5	48 89 85 f8 00
	00 00		 mov	 QWORD PTR t_lo$64[rbp-256], rax
  005fc	48 89 8d 00 01
	00 00		 mov	 QWORD PTR t_hi$65[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00603	48 8b c3	 mov	 rax, rbx
  00606	49 f7 63 08	 mul	 QWORD PTR [r11+8]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0060a	49 03 41 08	 add	 rax, QWORD PTR [r9+8]

; 221  :             return (_umul128(u, v, w_hi));

  0060e	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00611	49 83 d0 00	 adc	 r8, 0
  00615	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00618	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0061c	49 83 d0 00	 adc	 r8, 0
  00620	48 89 85 08 01
	00 00		 mov	 QWORD PTR t_lo$66[rbp-256], rax
  00627	4c 89 85 10 01
	00 00		 mov	 QWORD PTR t_hi$67[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  0062e	48 8b c3	 mov	 rax, rbx
  00631	49 f7 63 10	 mul	 QWORD PTR [r11+16]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00635	49 03 41 10	 add	 rax, QWORD PTR [r9+16]

; 221  :             return (_umul128(u, v, w_hi));

  00639	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0063c	48 83 d1 00	 adc	 rcx, 0
  00640	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00643	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00647	48 83 d1 00	 adc	 rcx, 0
  0064b	48 89 85 18 01
	00 00		 mov	 QWORD PTR t_lo$68[rbp-256], rax
  00652	48 89 8d 20 01
	00 00		 mov	 QWORD PTR t_hi$69[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00659	48 8b c3	 mov	 rax, rbx
  0065c	49 f7 63 18	 mul	 QWORD PTR [r11+24]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00660	49 03 41 18	 add	 rax, QWORD PTR [r9+24]

; 221  :             return (_umul128(u, v, w_hi));

  00664	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00667	49 83 d0 00	 adc	 r8, 0
  0066b	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0066e	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00672	49 83 d0 00	 adc	 r8, 0
  00676	48 89 85 28 01
	00 00		 mov	 QWORD PTR t_lo$70[rbp-256], rax
  0067d	4c 89 85 30 01
	00 00		 mov	 QWORD PTR t_hi$71[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00684	48 8b c3	 mov	 rax, rbx
  00687	49 f7 63 20	 mul	 QWORD PTR [r11+32]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0068b	49 03 41 20	 add	 rax, QWORD PTR [r9+32]

; 221  :             return (_umul128(u, v, w_hi));

  0068f	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00692	48 83 d1 00	 adc	 rcx, 0
  00696	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00699	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0069d	48 83 d1 00	 adc	 rcx, 0
  006a1	48 89 85 38 01
	00 00		 mov	 QWORD PTR t_lo$72[rbp-256], rax
  006a8	48 89 8d 40 01
	00 00		 mov	 QWORD PTR t_hi$73[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  006af	48 8b c3	 mov	 rax, rbx
  006b2	49 f7 63 28	 mul	 QWORD PTR [r11+40]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  006b6	49 03 41 28	 add	 rax, QWORD PTR [r9+40]

; 221  :             return (_umul128(u, v, w_hi));

  006ba	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  006bd	49 83 d0 00	 adc	 r8, 0
  006c1	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  006c4	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  006c8	49 83 d0 00	 adc	 r8, 0
  006cc	48 89 85 48 01
	00 00		 mov	 QWORD PTR t_lo$74[rbp-256], rax
  006d3	4c 89 85 50 01
	00 00		 mov	 QWORD PTR t_hi$75[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  006da	48 8b c3	 mov	 rax, rbx
  006dd	49 f7 63 30	 mul	 QWORD PTR [r11+48]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  006e1	49 03 41 30	 add	 rax, QWORD PTR [r9+48]

; 221  :             return (_umul128(u, v, w_hi));

  006e5	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  006e8	48 83 d1 00	 adc	 rcx, 0
  006ec	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  006ef	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  006f3	48 83 d1 00	 adc	 rcx, 0
  006f7	48 89 85 58 01
	00 00		 mov	 QWORD PTR t_lo$76[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  006fe	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00701	48 89 8d 60 01
	00 00		 mov	 QWORD PTR t_hi$77[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00708	49 f7 63 38	 mul	 QWORD PTR [r11+56]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0070c	49 03 41 38	 add	 rax, QWORD PTR [r9+56]

; 221  :             return (_umul128(u, v, w_hi));

  00710	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00713	49 83 d0 00	 adc	 r8, 0
  00717	48 03 c1	 add	 rax, rcx
  0071a	48 89 85 68 01
	00 00		 mov	 QWORD PTR t_lo$78[rbp-256], rax
  00721	49 83 d0 00	 adc	 r8, 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00725	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00729	4c 89 85 70 01
	00 00		 mov	 QWORD PTR t_hi$79[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00730	48 8b c3	 mov	 rax, rbx
  00733	49 f7 63 40	 mul	 QWORD PTR [r11+64]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00737	49 03 41 40	 add	 rax, QWORD PTR [r9+64]

; 221  :             return (_umul128(u, v, w_hi));

  0073b	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0073e	48 83 d1 00	 adc	 rcx, 0
  00742	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00745	49 89 41 40	 mov	 QWORD PTR [r9+64], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00749	48 83 d1 00	 adc	 rcx, 0
  0074d	48 89 85 78 01
	00 00		 mov	 QWORD PTR t_lo$80[rbp-256], rax
  00754	48 89 8d 80 01
	00 00		 mov	 QWORD PTR t_hi$81[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  0075b	48 8b c3	 mov	 rax, rbx
  0075e	49 f7 63 48	 mul	 QWORD PTR [r11+72]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00762	49 03 41 48	 add	 rax, QWORD PTR [r9+72]

; 221  :             return (_umul128(u, v, w_hi));

  00766	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00769	49 83 d0 00	 adc	 r8, 0
  0076d	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00770	49 89 41 48	 mov	 QWORD PTR [r9+72], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00774	49 83 d0 00	 adc	 r8, 0
  00778	48 89 85 88 01
	00 00		 mov	 QWORD PTR t_lo$82[rbp-256], rax
  0077f	4c 89 85 90 01
	00 00		 mov	 QWORD PTR t_hi$83[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00786	48 8b c3	 mov	 rax, rbx
  00789	49 f7 63 50	 mul	 QWORD PTR [r11+80]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0078d	49 03 41 50	 add	 rax, QWORD PTR [r9+80]

; 221  :             return (_umul128(u, v, w_hi));

  00791	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00794	48 83 d1 00	 adc	 rcx, 0
  00798	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0079b	49 89 41 50	 mov	 QWORD PTR [r9+80], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0079f	48 83 d1 00	 adc	 rcx, 0
  007a3	48 89 85 98 01
	00 00		 mov	 QWORD PTR t_lo$84[rbp-256], rax
  007aa	48 89 8d a0 01
	00 00		 mov	 QWORD PTR t_hi$85[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  007b1	48 8b c3	 mov	 rax, rbx
  007b4	49 f7 63 58	 mul	 QWORD PTR [r11+88]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007b8	49 03 41 58	 add	 rax, QWORD PTR [r9+88]

; 221  :             return (_umul128(u, v, w_hi));

  007bc	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007bf	49 83 d0 00	 adc	 r8, 0
  007c3	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  007c6	49 89 41 58	 mov	 QWORD PTR [r9+88], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007ca	49 83 d0 00	 adc	 r8, 0
  007ce	48 89 85 a8 01
	00 00		 mov	 QWORD PTR t_lo$86[rbp-256], rax
  007d5	4c 89 85 b0 01
	00 00		 mov	 QWORD PTR t_hi$87[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  007dc	48 8b c3	 mov	 rax, rbx
  007df	49 f7 63 60	 mul	 QWORD PTR [r11+96]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007e3	49 03 41 60	 add	 rax, QWORD PTR [r9+96]

; 221  :             return (_umul128(u, v, w_hi));

  007e7	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007ea	48 83 d1 00	 adc	 rcx, 0
  007ee	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  007f1	49 89 41 60	 mov	 QWORD PTR [r9+96], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  007f5	48 83 d1 00	 adc	 rcx, 0
  007f9	48 89 85 b8 01
	00 00		 mov	 QWORD PTR t_lo$88[rbp-256], rax
  00800	48 89 8d c0 01
	00 00		 mov	 QWORD PTR t_hi$89[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00807	48 8b c3	 mov	 rax, rbx
  0080a	49 f7 63 68	 mul	 QWORD PTR [r11+104]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0080e	49 03 41 68	 add	 rax, QWORD PTR [r9+104]

; 221  :             return (_umul128(u, v, w_hi));

  00812	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00815	49 83 d0 00	 adc	 r8, 0
  00819	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0081c	49 89 41 68	 mov	 QWORD PTR [r9+104], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00820	49 83 d0 00	 adc	 r8, 0
  00824	48 89 85 c8 01
	00 00		 mov	 QWORD PTR t_lo$90[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  0082b	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0082e	4c 89 85 d0 01
	00 00		 mov	 QWORD PTR t_hi$91[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00835	49 f7 63 70	 mul	 QWORD PTR [r11+112]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00839	49 03 41 70	 add	 rax, QWORD PTR [r9+112]

; 221  :             return (_umul128(u, v, w_hi));

  0083d	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00840	48 83 d1 00	 adc	 rcx, 0
  00844	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00847	49 89 41 70	 mov	 QWORD PTR [r9+112], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0084b	48 83 d1 00	 adc	 rcx, 0
  0084f	48 89 85 d8 01
	00 00		 mov	 QWORD PTR t_lo$92[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  00856	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00859	48 89 8d e0 01
	00 00		 mov	 QWORD PTR t_hi$93[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00860	49 f7 63 78	 mul	 QWORD PTR [r11+120]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00864	49 03 41 78	 add	 rax, QWORD PTR [r9+120]

; 221  :             return (_umul128(u, v, w_hi));

  00868	4c 8b d2	 mov	 r10, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0086b	49 83 d2 00	 adc	 r10, 0
  0086f	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00872	49 89 41 78	 mov	 QWORD PTR [r9+120], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00876	49 83 d2 00	 adc	 r10, 0
  0087a	48 89 85 e8 01
	00 00		 mov	 QWORD PTR t_lo$94[rbp-256], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 137  :             up += 16;

  00881	49 83 eb 80	 sub	 r11, -128		; ffffffffffffff80H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00885	4c 89 95 f0 01
	00 00		 mov	 QWORD PTR t_hi$95[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 138  :             wp += 16;

  0088c	49 83 e9 80	 sub	 r9, -128		; ffffffffffffff80H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00890	b8 10 00 00 00	 mov	 eax, 16
  00895	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN8@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 147  :         if (u_count & 0x8)

  0089d	40 f6 c7 08	 test	 dil, 8
  008a1	0f 84 6a 01 00
	00		 je	 $LN11@Multiply_W
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  008a7	48 8b c3	 mov	 rax, rbx
  008aa	49 f7 23	 mul	 QWORD PTR [r11]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008ad	49 03 01	 add	 rax, QWORD PTR [r9]

; 221  :             return (_umul128(u, v, w_hi));

  008b0	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008b3	48 83 d1 00	 adc	 rcx, 0
  008b7	49 03 c2	 add	 rax, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  008ba	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008bd	48 83 d1 00	 adc	 rcx, 0
  008c1	48 89 85 f8 01
	00 00		 mov	 QWORD PTR t_lo$96[rbp-256], rax
  008c8	48 89 8d 00 02
	00 00		 mov	 QWORD PTR t_hi$97[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  008cf	48 8b c3	 mov	 rax, rbx
  008d2	49 f7 63 08	 mul	 QWORD PTR [r11+8]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008d6	49 03 41 08	 add	 rax, QWORD PTR [r9+8]

; 221  :             return (_umul128(u, v, w_hi));

  008da	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008dd	49 83 d0 00	 adc	 r8, 0
  008e1	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  008e4	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  008e8	49 83 d0 00	 adc	 r8, 0
  008ec	48 89 85 08 02
	00 00		 mov	 QWORD PTR t_lo$98[rbp-256], rax
  008f3	4c 89 85 10 02
	00 00		 mov	 QWORD PTR t_hi$99[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  008fa	48 8b c3	 mov	 rax, rbx
  008fd	49 f7 63 10	 mul	 QWORD PTR [r11+16]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00901	49 03 41 10	 add	 rax, QWORD PTR [r9+16]

; 221  :             return (_umul128(u, v, w_hi));

  00905	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00908	48 83 d1 00	 adc	 rcx, 0
  0090c	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0090f	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00913	48 83 d1 00	 adc	 rcx, 0
  00917	48 89 85 18 02
	00 00		 mov	 QWORD PTR t_lo$100[rbp-256], rax
  0091e	48 89 8d 20 02
	00 00		 mov	 QWORD PTR t_hi$101[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00925	48 8b c3	 mov	 rax, rbx
  00928	49 f7 63 18	 mul	 QWORD PTR [r11+24]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0092c	49 03 41 18	 add	 rax, QWORD PTR [r9+24]

; 221  :             return (_umul128(u, v, w_hi));

  00930	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00933	49 83 d0 00	 adc	 r8, 0
  00937	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  0093a	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0093e	49 83 d0 00	 adc	 r8, 0
  00942	48 89 85 28 02
	00 00		 mov	 QWORD PTR t_lo$102[rbp-256], rax
  00949	4c 89 85 30 02
	00 00		 mov	 QWORD PTR t_hi$103[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00950	48 8b c3	 mov	 rax, rbx
  00953	49 f7 63 20	 mul	 QWORD PTR [r11+32]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00957	49 03 41 20	 add	 rax, QWORD PTR [r9+32]

; 221  :             return (_umul128(u, v, w_hi));

  0095b	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  0095e	48 83 d1 00	 adc	 rcx, 0
  00962	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00965	49 89 41 20	 mov	 QWORD PTR [r9+32], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00969	48 83 d1 00	 adc	 rcx, 0
  0096d	48 89 85 38 02
	00 00		 mov	 QWORD PTR t_lo$104[rbp-256], rax
  00974	48 89 8d 40 02
	00 00		 mov	 QWORD PTR t_hi$105[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  0097b	48 8b c3	 mov	 rax, rbx
  0097e	49 f7 63 28	 mul	 QWORD PTR [r11+40]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00982	49 03 41 28	 add	 rax, QWORD PTR [r9+40]

; 221  :             return (_umul128(u, v, w_hi));

  00986	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00989	49 83 d0 00	 adc	 r8, 0
  0098d	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00990	49 89 41 28	 mov	 QWORD PTR [r9+40], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00994	49 83 d0 00	 adc	 r8, 0
  00998	48 89 85 48 02
	00 00		 mov	 QWORD PTR t_lo$106[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  0099f	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009a2	4c 89 85 50 02
	00 00		 mov	 QWORD PTR t_hi$107[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  009a9	49 f7 63 30	 mul	 QWORD PTR [r11+48]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009ad	49 03 41 30	 add	 rax, QWORD PTR [r9+48]

; 221  :             return (_umul128(u, v, w_hi));

  009b1	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009b4	48 83 d1 00	 adc	 rcx, 0
  009b8	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  009bb	49 89 41 30	 mov	 QWORD PTR [r9+48], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009bf	48 83 d1 00	 adc	 rcx, 0
  009c3	48 89 85 58 02
	00 00		 mov	 QWORD PTR t_lo$108[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  009ca	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009cd	48 89 8d 60 02
	00 00		 mov	 QWORD PTR t_hi$109[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  009d4	49 f7 63 38	 mul	 QWORD PTR [r11+56]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009d8	49 03 41 38	 add	 rax, QWORD PTR [r9+56]

; 221  :             return (_umul128(u, v, w_hi));

  009dc	4c 8b d2	 mov	 r10, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009df	49 83 d2 00	 adc	 r10, 0
  009e3	48 03 c1	 add	 rax, rcx
  009e6	48 89 85 68 02
	00 00		 mov	 QWORD PTR t_lo$110[rbp-256], rax
  009ed	49 83 d2 00	 adc	 r10, 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  009f1	49 89 41 38	 mov	 QWORD PTR [r9+56], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  009f5	4c 89 95 70 02
	00 00		 mov	 QWORD PTR t_hi$111[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 157  :             up += 8;

  009fc	49 83 c3 40	 add	 r11, 64			; 00000040H

; 158  :             wp += 8;

  00a00	49 83 c1 40	 add	 r9, 64			; 00000040H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00a04	b8 08 00 00 00	 mov	 eax, 8
  00a09	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN11@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 167  :         if (u_count & 0x4)

  00a11	40 f6 c7 04	 test	 dil, 4
  00a15	0f 84 be 00 00
	00		 je	 $LN14@Multiply_W
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00a1b	48 8b c3	 mov	 rax, rbx
  00a1e	49 f7 23	 mul	 QWORD PTR [r11]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a21	49 03 01	 add	 rax, QWORD PTR [r9]

; 221  :             return (_umul128(u, v, w_hi));

  00a24	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a27	48 83 d1 00	 adc	 rcx, 0
  00a2b	49 03 c2	 add	 rax, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00a2e	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a31	48 83 d1 00	 adc	 rcx, 0
  00a35	48 89 85 78 02
	00 00		 mov	 QWORD PTR t_lo$112[rbp-256], rax
  00a3c	48 89 8d 80 02
	00 00		 mov	 QWORD PTR t_hi$113[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00a43	48 8b c3	 mov	 rax, rbx
  00a46	49 f7 63 08	 mul	 QWORD PTR [r11+8]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a4a	49 03 41 08	 add	 rax, QWORD PTR [r9+8]

; 221  :             return (_umul128(u, v, w_hi));

  00a4e	4c 8b c2	 mov	 r8, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a51	49 83 d0 00	 adc	 r8, 0
  00a55	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00a58	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a5c	49 83 d0 00	 adc	 r8, 0
  00a60	48 89 85 88 02
	00 00		 mov	 QWORD PTR t_lo$114[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  00a67	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a6a	4c 89 85 90 02
	00 00		 mov	 QWORD PTR t_hi$115[rbp-256], r8

; 221  :             return (_umul128(u, v, w_hi));

  00a71	49 f7 63 10	 mul	 QWORD PTR [r11+16]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a75	49 03 41 10	 add	 rax, QWORD PTR [r9+16]

; 221  :             return (_umul128(u, v, w_hi));

  00a79	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a7c	48 83 d1 00	 adc	 rcx, 0
  00a80	49 03 c0	 add	 rax, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00a83	49 89 41 10	 mov	 QWORD PTR [r9+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a87	48 83 d1 00	 adc	 rcx, 0
  00a8b	48 89 85 98 02
	00 00		 mov	 QWORD PTR t_lo$116[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  00a92	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00a95	48 89 8d a0 02
	00 00		 mov	 QWORD PTR t_hi$117[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00a9c	49 f7 63 18	 mul	 QWORD PTR [r11+24]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00aa0	49 03 41 18	 add	 rax, QWORD PTR [r9+24]

; 221  :             return (_umul128(u, v, w_hi));

  00aa4	4c 8b d2	 mov	 r10, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00aa7	49 83 d2 00	 adc	 r10, 0
  00aab	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00aae	49 89 41 18	 mov	 QWORD PTR [r9+24], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00ab2	49 83 d2 00	 adc	 r10, 0
  00ab6	48 89 85 a8 02
	00 00		 mov	 QWORD PTR t_lo$118[rbp-256], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 173  :             up += 4;

  00abd	49 83 c3 20	 add	 r11, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00ac1	4c 89 95 b0 02
	00 00		 mov	 QWORD PTR t_hi$119[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 174  :             wp += 4;

  00ac8	49 83 c1 20	 add	 r9, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00acc	b8 04 00 00 00	 mov	 eax, 4
  00ad1	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN14@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 183  :         if (u_count & 0x2)

  00ad9	40 f6 c7 02	 test	 dil, 2
  00add	74 68		 je	 SHORT $LN17@Multiply_W
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00adf	48 8b c3	 mov	 rax, rbx
  00ae2	49 f7 23	 mul	 QWORD PTR [r11]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00ae5	49 03 01	 add	 rax, QWORD PTR [r9]

; 221  :             return (_umul128(u, v, w_hi));

  00ae8	48 8b ca	 mov	 rcx, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00aeb	48 83 d1 00	 adc	 rcx, 0
  00aef	49 03 c2	 add	 rax, r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00af2	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00af5	48 83 d1 00	 adc	 rcx, 0
  00af9	48 89 85 b8 02
	00 00		 mov	 QWORD PTR t_lo$120[rbp-256], rax

; 221  :             return (_umul128(u, v, w_hi));

  00b00	48 8b c3	 mov	 rax, rbx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b03	48 89 8d c0 02
	00 00		 mov	 QWORD PTR t_hi$121[rbp-256], rcx

; 221  :             return (_umul128(u, v, w_hi));

  00b0a	49 f7 63 08	 mul	 QWORD PTR [r11+8]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b0e	49 03 41 08	 add	 rax, QWORD PTR [r9+8]

; 221  :             return (_umul128(u, v, w_hi));

  00b12	4c 8b d2	 mov	 r10, rdx

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b15	49 83 d2 00	 adc	 r10, 0
  00b19	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00b1c	49 89 41 08	 mov	 QWORD PTR [r9+8], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b20	49 83 d2 00	 adc	 r10, 0
  00b24	48 89 85 c8 02
	00 00		 mov	 QWORD PTR t_lo$122[rbp-256], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 187  :             up += 2;

  00b2b	49 83 c3 10	 add	 r11, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b2f	4c 89 95 d0 02
	00 00		 mov	 QWORD PTR t_hi$123[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 188  :             wp += 2;

  00b36	49 83 c1 10	 add	 r9, 16
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00b3a	b8 02 00 00 00	 mov	 eax, 2
  00b3f	f0 0f c1 05 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, eax
$LN17@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 197  :         if (u_count & 0x1)

  00b47	40 f6 c7 01	 test	 dil, 1
  00b4b	74 33		 je	 SHORT $LN20@Multiply_W
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00b4d	48 8b c3	 mov	 rax, rbx
  00b50	49 f7 23	 mul	 QWORD PTR [r11]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b53	49 03 01	 add	 rax, QWORD PTR [r9]
  00b56	48 83 d2 00	 adc	 rdx, 0
  00b5a	49 03 c2	 add	 rax, r10
  00b5d	4c 8b d2	 mov	 r10, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00b60	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00b63	49 83 d2 00	 adc	 r10, 0
  00b67	48 89 85 d8 02
	00 00		 mov	 QWORD PTR t_lo$124[rbp-256], rax
  00b6e	4c 89 95 e0 02
	00 00		 mov	 QWORD PTR t_hi$125[rbp-256], r10
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 201  :             wp += 1;

  00b75	49 83 c1 08	 add	 r9, 8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h

; 337  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI64);

  00b79	f0 ff 05 00 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A
$LN20@Multiply_W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 210  :         if (k != 0)

  00b80	4d 85 d2	 test	 r10, r10
  00b83	74 03		 je	 SHORT $LN21@Multiply_W

; 211  :             *wp = k;

  00b85	4d 89 11	 mov	 QWORD PTR [r9], r10
$LN21@Multiply_W:

; 212  :     }

  00b88	4c 8d 9c 24 f0
	03 00 00	 lea	 r11, QWORD PTR [rsp+1008]
  00b90	49 8b 5b 10	 mov	 rbx, QWORD PTR [r11+16]
  00b94	49 8b 73 20	 mov	 rsi, QWORD PTR [r11+32]
  00b98	49 8b 7b 28	 mov	 rdi, QWORD PTR [r11+40]
  00b9c	49 8b e3	 mov	 rsp, r11
  00b9f	5d		 pop	 rbp
  00ba0	c3		 ret	 0
?Multiply_WORD_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_WORD_using_MUL_ADC
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z
_TEXT	SEGMENT
k$ = 8
up$ = 16
v$ = 24
wp$ = 32
?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z PROC ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT, COMDAT

; 59   :         __UNIT_TYPE t_hi;
; 60   :         __UNIT_TYPE t_lo;
; 61   :         t_lo = _MULTIPLYX_UNIT(*up, v, &t_hi);

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 233  :             return (_mulx_u64(u, v, w_hi));

  00003	49 8b d0	 mov	 rdx, r8
  00006	c4 e2 bb f6 c0	 mulx	 rax, r8, rax

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0000b	4d 03 01	 add	 r8, QWORD PTR [r9]
  0000e	ba 00 00 00 00	 mov	 edx, 0
  00013	66 48 0f 38 f6
	c2		 adcx	 rax, rdx
  00019	4c 03 c1	 add	 r8, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 64   :         *wp = t_lo;

  0001c	4d 89 01	 mov	 QWORD PTR [r9], r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 191  :             return (_addcarryx_u64(carry, u, v, w));

  0001f	66 48 0f 38 f6
	c2		 adcx	 rax, rdx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 67   :     }

  00025	c3		 ret	 0
?_MULTIPLYX_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ENDP ; Palmtree::Math::Core::Internal::_MULTIPLYX_DIGIT_UNIT
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z
_TEXT	SEGMENT
k$ = 8
up$ = 16
v$ = 24
wp$ = 32
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z PROC ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT, COMDAT
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 221  :             return (_umul128(u, v, w_hi));

  00000	49 8b c0	 mov	 rax, r8
  00003	48 f7 22	 mul	 QWORD PTR [rdx]

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00006	49 03 01	 add	 rax, QWORD PTR [r9]
  00009	48 83 d2 00	 adc	 rdx, 0
  0000d	48 03 c1	 add	 rax, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 52   :         *wp = t_lo;

  00010	49 89 01	 mov	 QWORD PTR [r9], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 180  :             return (_addcarry_u64(carry, u, v, w));

  00013	48 83 d2 00	 adc	 rdx, 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 54   :         return (k);

  00017	48 8b c2	 mov	 rax, rdx

; 55   :     }

  0001a	c3		 ret	 0
?_MULTIPLY_DIGIT_UNIT@Internal@Core@Math@Palmtree@@YA_K_KPEA_K01@Z ENDP ; Palmtree::Math::Core::Internal::_MULTIPLY_DIGIT_UNIT
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_UNIT
_TEXT	SEGMENT
x$ = 8
_LZCNT_ALT_UNIT PROC					; COMDAT

; 455  :             if (x == 0)

  00000	48 85 c9	 test	 rcx, rcx
  00003	75 06		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  00005	b8 40 00 00 00	 mov	 eax, 64			; 00000040H

; 480  :         }

  0000a	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);
; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);

  0000b	48 0f bd c9	 bsr	 rcx, rcx

; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  0000f	b8 3f 00 00 00	 mov	 eax, 63			; 0000003fH
  00014	2b c1		 sub	 eax, ecx

; 480  :         }

  00016	c3		 ret	 0
_LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _LZCNT_ALT_32
_TEXT	SEGMENT
x$ = 8
_LZCNT_ALT_32 PROC					; COMDAT

; 422  :             if (x == 0)

  00000	85 c9		 test	 ecx, ecx
  00002	75 06		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  00004	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 433  :         }

  00009	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  0000a	0f bd c9	 bsr	 ecx, ecx

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  0000d	b8 1f 00 00 00	 mov	 eax, 31
  00012	2b c1		 sub	 eax, ecx

; 433  :         }

  00014	c3		 ret	 0
_LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _MULTIPLYX_UNIT
_TEXT	SEGMENT
u$ = 8
v$ = 16
w_hi$ = 24
_MULTIPLYX_UNIT PROC					; COMDAT

; 229  : #ifdef _MSC_VER
; 230  : #ifdef _M_IX86
; 231  :             return (_FROMDWORDTOWORD((_UINT64_T)u * v, w_hi));
; 232  : #elif defined(_M_X64)
; 233  :             return (_mulx_u64(u, v, w_hi));

  00000	c4 e2 fb f6 c9	 mulx	 rcx, rax, rcx
  00005	49 89 08	 mov	 QWORD PTR [r8], rcx

; 234  : #else
; 235  : #error unknown platform
; 236  : #endif
; 237  : #elif defined(__GNUC__)
; 238  : #ifdef _M_IX86
; 239  :             _UINT32_T w_lo;
; 240  :             __asm__("mulxl %3, %0, %1" : "=r"(w_lo), "=r"(*w_hi), "+d"(u) : "rm"(v));
; 241  :             return (w_lo);
; 242  : #elif defined(_M_X64)
; 243  :             _UINT64_T w_lo;
; 244  :             __asm__("mulxq %3, %0, %1" : "=r"(w_lo), "=r"(*w_hi), "+d"(u) : "rm"(v));
; 245  :             return (w_lo);
; 246  : #else
; 247  : #error unknown platform
; 248  : #endif
; 249  : #else
; 250  : #error unknown compiler
; 251  : #endif
; 252  :         }

  00008	c3		 ret	 0
_MULTIPLYX_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _MULTIPLY_UNIT
_TEXT	SEGMENT
u$ = 8
v$ = 16
w_hi$ = 24
_MULTIPLY_UNIT PROC					; COMDAT

; 210  : #ifdef _M_IX86
; 211  : #ifdef _MSC_VER
; 212  :             return (_FROMDWORDTOWORD((_UINT64_T)u * v, w_hi));
; 213  : #elif defined(__GNUC__)
; 214  :             _UINT32_T w_lo;
; 215  :             __asm__("mull %3": "=a"(w_lo), "=d"(*w_hi) : "0"(u), "rm"(v));
; 216  :             return (w_lo);
; 217  : #else
; 218  : #error unknown compiler
; 219  : #endif
; 220  : #elif defined(_M_X64)
; 221  :             return (_umul128(u, v, w_hi));

  00000	48 8b c2	 mov	 rax, rdx
  00003	48 f7 e1	 mul	 rcx
  00006	49 89 10	 mov	 QWORD PTR [r8], rdx

; 222  : #else
; 223  : #error unknown platform
; 224  : #endif
; 225  :         }

  00009	c3		 ret	 0
_MULTIPLY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ADDX_UNIT
_TEXT	SEGMENT
carry$ = 8
u$ = 16
v$ = 24
w$ = 32
_ADDX_UNIT PROC						; COMDAT

; 188  : #ifdef _M_IX86
; 189  :             return (_addcarryx_u32(carry, u, v, w));
; 190  : #elif defined(_M_X64)
; 191  :             return (_addcarryx_u64(carry, u, v, w));

  00000	80 c1 ff	 add	 cl, -1
  00003	66 49 0f 38 f6
	d0		 adcx	 rdx, r8
  00009	49 89 11	 mov	 QWORD PTR [r9], rdx
  0000c	0f 92 c0	 setb	 al

; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  :         }

  0000f	c3		 ret	 0
_ADDX_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ADD_UNIT
_TEXT	SEGMENT
carry$ = 8
u$ = 16
v$ = 24
w$ = 32
_ADD_UNIT PROC						; COMDAT

; 177  : #ifdef _M_IX86
; 178  :             return (_addcarry_u32(carry, u, v, w));
; 179  : #elif defined(_M_X64)
; 180  :             return (_addcarry_u64(carry, u, v, w));

  00000	80 c1 ff	 add	 cl, -1
  00003	49 13 d0	 adc	 rdx, r8
  00006	49 89 11	 mov	 QWORD PTR [r9], rdx
  00009	0f 92 c0	 setb	 al

; 181  : #else
; 182  : #error unknown platform
; 183  : #endif
; 184  :         }

  0000c	c3		 ret	 0
_ADD_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _FROMDWORDTOWORD
_TEXT	SEGMENT
value$ = 8
result_high$ = 16
_FROMDWORDTOWORD PROC					; COMDAT

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00000	48 8b c1	 mov	 rax, rcx
  00003	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  00007	89 02		 mov	 DWORD PTR [rdx], eax

; 147  :             return ((_UINT32_T)value);

  00009	8b c1		 mov	 eax, ecx

; 148  :         }

  0000b	c3		 ret	 0
_FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 8
?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToMULTI64Counter, COMDAT

; 360  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI64, value);

  00000	f0 0f c1 0d 00
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A, ecx

; 361  :     }

  00008	c3		 ret	 0
?AddToMULTI64Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToMULTI64Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z
_TEXT	SEGMENT
value$ = 8
?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z PROC ; Palmtree::Math::Core::Internal::AddToMULTI32Counter, COMDAT

; 354  :         _InterlockedExchangeAdd(&statistics_info.COUNT_MULTI32, value);

  00000	f0 0f c1 0d 04
	00 00 00	 lock xadd DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+4, ecx

; 355  :     }

  00008	c3		 ret	 0
?AddToMULTI32Counter@Internal@Core@Math@Palmtree@@YAXH@Z ENDP ; Palmtree::Math::Core::Internal::AddToMULTI32Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementMULTI64Counter, COMDAT

; 337  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI64);

  00000	f0 ff 05 00 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A

; 338  :     }

  00007	c3		 ret	 0
?IncrementMULTI64Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementMULTI64Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_uint_internal.h
;	COMDAT ?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::IncrementMULTI32Counter, COMDAT

; 331  :         _InterlockedIncrement(&statistics_info.COUNT_MULTI32);

  00000	f0 ff 05 04 00
	00 00		 lock inc DWORD PTR ?statistics_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_STATISTICS_INFO@1234@A+4

; 332  :     }

  00007	c3		 ret	 0
?IncrementMULTI32Counter@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::IncrementMULTI32Counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z
_TEXT	SEGMENT
root$1 = 56
$T2 = 56
$T3 = 56
root$ = 104
u$ = 160
v$ = 168
?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X, COMDAT

; 744  :     {

$LN25:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000b	48 c7 40 98 fe
	ff ff ff	 mov	 QWORD PTR [rax-104], -2
  00013	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00017	48 89 70 10	 mov	 QWORD PTR [rax+16], rsi
  0001b	48 8b fa	 mov	 rdi, rdx
  0001e	48 8b f1	 mov	 rsi, rcx

; 745  :         if (u == nullptr)

  00021	48 85 c9	 test	 rcx, rcx
  00024	0f 84 39 01 00
	00		 je	 $LN22@PMC_Multip

; 747  :         if (v == nullptr)

  0002a	48 85 d2	 test	 rdx, rdx
  0002d	0f 84 06 01 00
	00		 je	 $LN23@PMC_Multip

; 749  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 750  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;
; 751  :         CheckNumber(nu);

  00033	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 752  :         CheckNumber(nv);

  00038	48 8b cf	 mov	 rcx, rdi
  0003b	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 753  :         ResourceHolderUINT root;

  00040	48 8d 4c 24 68	 lea	 rcx, QWORD PTR root$[rsp]
  00045	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0004a	90		 npad	 1

; 680  :         if (u->IS_ZERO)

  0004b	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  0004e	a8 01		 test	 al, 1
  00050	74 0c		 je	 SHORT $LN7@PMC_Multip
$LN20@PMC_Multip:

; 754  :         NUMBER_HEADER* w = PMC_Multiply_X_X_Imp(nu, nv);
; 755  :         root.HookNumber(w);

  00052	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00059	e9 9e 00 00 00	 jmp	 $LN16@PMC_Multip
$LN7@PMC_Multip:

; 687  :         else if (u->IS_ONE)

  0005e	a8 02		 test	 al, 2
  00060	74 16		 je	 SHORT $LN9@PMC_Multip

; 688  :         {
; 689  :             // u が 1 である場合
; 690  :             if (v->IS_ZERO)

  00062	f6 47 08 01	 test	 BYTE PTR [rdi+8], 1
  00066	75 ea		 jne	 SHORT $LN20@PMC_Multip

; 691  :             {
; 692  :                 // v が 0 である場合
; 693  : 
; 694  :                 //  0  を返す。
; 695  :                 return (&number_zero);
; 696  :             }
; 697  :             else
; 698  :             {
; 699  :                 // v が 0 ではない場合
; 700  : 
; 701  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 702  :                 return (DuplicateNumber(v));

  00068	48 8b cf	 mov	 rcx, rdi
  0006b	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00070	48 8b d8	 mov	 rbx, rax
  00073	e9 84 00 00 00	 jmp	 $LN16@PMC_Multip
$LN9@PMC_Multip:

; 703  :             }
; 704  :         }
; 705  :         else
; 706  :         {
; 707  :             // u が 0 と 1 のどちらでもない場合
; 708  : 
; 709  :             if (v->IS_ZERO)

  00078	8b 47 08	 mov	 eax, DWORD PTR [rdi+8]
  0007b	a8 01		 test	 al, 1
  0007d	75 d3		 jne	 SHORT $LN20@PMC_Multip

; 710  :             {
; 711  :                 // v が 0 である場合
; 712  : 
; 713  :                 //  0  を返す。
; 714  :                 return (&number_zero);
; 715  :             }
; 716  :             else if (v->IS_ONE)

  0007f	a8 02		 test	 al, 2
  00081	74 0d		 je	 SHORT $LN15@PMC_Multip

; 717  :             {
; 718  :                 // v が 1 である場合
; 719  : 
; 720  :                 // 乗算結果は u に等しいため、u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 721  :                 return (DuplicateNumber(u));

  00083	48 8b ce	 mov	 rcx, rsi
  00086	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0008b	48 8b d8	 mov	 rbx, rax
  0008e	eb 6c		 jmp	 SHORT $LN16@PMC_Multip
$LN15@PMC_Multip:

; 722  :             }
; 723  :             else
; 724  :             {
; 725  :                 // u と v がともに 0 、1 のどちらでもない場合
; 726  : 
; 727  :                 // u と v の積を計算する
; 728  :                 ResourceHolderUINT root;

  00090	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  00095	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0009a	90		 npad	 1

; 729  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 730  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  0009b	48 8b 57 20	 mov	 rdx, QWORD PTR [rdi+32]

; 731  :                 __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  0009f	48 03 56 20	 add	 rdx, QWORD PTR [rsi+32]

; 732  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000a8	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000ad	48 8b d8	 mov	 rbx, rax

; 733  :                 (*fp_Multiply_X_X)(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, w->BLOCK);

  000b0	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  000b4	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000b9	4c 8b 4f 18	 mov	 r9, QWORD PTR [rdi+24]
  000bd	4c 8b 47 40	 mov	 r8, QWORD PTR [rdi+64]
  000c1	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  000c5	48 8b 4e 40	 mov	 rcx, QWORD PTR [rsi+64]
  000c9	ff 15 00 00 00
	00		 call	 QWORD PTR ?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA

; 734  :                 root.CheckNumber(w);

  000cf	48 8b d3	 mov	 rdx, rbx
  000d2	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000d7	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 735  :                 CommitNumber(w);

  000dc	48 8b cb	 mov	 rcx, rbx
  000df	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 736  :                 root.UnlinkNumber(w);

  000e4	48 8b d3	 mov	 rdx, rbx
  000e7	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000ec	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  000f1	90		 npad	 1

; 737  :                 return (w);

  000f2	48 8d 4c 24 38	 lea	 rcx, QWORD PTR root$1[rsp]
  000f7	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN16@PMC_Multip:

; 754  :         NUMBER_HEADER* w = PMC_Multiply_X_X_Imp(nu, nv);
; 755  :         root.HookNumber(w);

  000fc	48 8b d3	 mov	 rdx, rbx
  000ff	48 8d 4c 24 68	 lea	 rcx, QWORD PTR root$[rsp]
  00104	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 756  : #ifdef _DEBUG
; 757  :         CheckNumber(w);
; 758  : #endif
; 759  :         root.UnlinkNumber(w);

  00109	48 8b d3	 mov	 rdx, rbx
  0010c	48 8d 4c 24 68	 lea	 rcx, QWORD PTR root$[rsp]
  00111	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  00116	90		 npad	 1

; 760  :         return ((PMC_HANDLE_UINT)w);

  00117	48 8d 4c 24 68	 lea	 rcx, QWORD PTR root$[rsp]
  0011c	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00121	48 8b c3	 mov	 rax, rbx

; 761  :     }

  00124	4c 8d 9c 24 90
	00 00 00	 lea	 r11, QWORD PTR [rsp+144]
  0012c	49 8b 5b 10	 mov	 rbx, QWORD PTR [r11+16]
  00130	49 8b 73 18	 mov	 rsi, QWORD PTR [r11+24]
  00134	49 8b e3	 mov	 rsp, r11
  00137	5f		 pop	 rdi
  00138	c3		 ret	 0
$LN23@PMC_Multip:

; 748  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00139	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  00140	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00147	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T2[rsp]
  0014c	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00151	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00158	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T2[rsp]
  0015d	e8 00 00 00 00	 call	 _CxxThrowException
  00162	cc		 int	 3
$LN22@PMC_Multip:

; 746  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00163	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  0016a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00171	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T3[rsp]
  00176	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0017b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00182	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T3[rsp]
  00187	e8 00 00 00 00	 call	 _CxxThrowException
  0018c	cc		 int	 3
$LN19@PMC_Multip:
?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
$T2 = 56
$T3 = 56
root$ = 104
u$ = 160
v$ = 168
?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
$T2 = 56
$T3 = 56
root$ = 104
u$ = 160
v$ = 168
?dtor$1@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$1
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$1@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
$T2 = 56
$T3 = 56
root$ = 104
u$ = 160
v$ = 168
?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
root$1 = 56
$T2 = 56
$T3 = 56
root$ = 104
u$ = 160
v$ = 168
?dtor$1@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$1
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR root$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$1@?0??PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_X'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z
_TEXT	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L, COMDAT

; 659  :     {

$LN10:
  00000	40 57		 push	 rdi
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rbx
  0001a	48 8b fa	 mov	 rdi, rdx
  0001d	48 8b d9	 mov	 rbx, rcx

; 660  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)
; 661  :         {
; 662  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 663  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_multiply.cpp;PMC_Multiply_X_L;1");
; 664  :         }
; 665  :         if (u == nullptr)

  00020	48 85 c9	 test	 rcx, rcx
  00023	74 57		 je	 SHORT $LN8@PMC_Multip

; 667  :         CheckNumber((NUMBER_HEADER*)u);

  00025	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 668  :         ResourceHolderUINT root;

  0002a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0002f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00034	90		 npad	 1

; 669  :         NUMBER_HEADER* w = PMC_Multiply_X_L_Imp((NUMBER_HEADER*)u, v);

  00035	48 8b d7	 mov	 rdx, rdi
  00038	48 8b cb	 mov	 rcx, rbx
  0003b	e8 00 00 00 00	 call	 ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
  00040	48 8b d8	 mov	 rbx, rax

; 670  :         root.HookNumber(w);

  00043	48 8b d0	 mov	 rdx, rax
  00046	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0004b	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 671  : #ifdef _DEBUG
; 672  :         CheckNumber(w);
; 673  : #endif
; 674  :         root.UnlinkNumber(w);

  00050	48 8b d3	 mov	 rdx, rbx
  00053	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00058	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0005d	90		 npad	 1

; 675  :         return ((PMC_HANDLE_UINT)w);

  0005e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00063	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00068	48 8b c3	 mov	 rax, rbx

; 676  :     }

  0006b	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR [rsp+144]
  00073	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
$LN8@PMC_Multip:

; 666  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0007c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00083	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0008a	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  0008f	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00094	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0009b	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000a0	e8 00 00 00 00	 call	 _CxxThrowException
  000a5	cc		 int	 3
$LN6@PMC_Multip:
?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@_K@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_L'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z
_TEXT	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I, COMDAT

; 517  :     {

$LN10:
  00000	40 57		 push	 rdi
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rbx
  0001a	8b fa		 mov	 edi, edx
  0001c	48 8b d9	 mov	 rbx, rcx

; 518  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)
; 519  :         {
; 520  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 521  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_multiply.cpp;PMC_Multiply_I_X;1");
; 522  :         }
; 523  :         if (u == nullptr)

  0001f	48 85 c9	 test	 rcx, rcx
  00022	74 56		 je	 SHORT $LN8@PMC_Multip

; 525  :         CheckNumber((NUMBER_HEADER*)u);

  00024	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 526  :         ResourceHolderUINT root;

  00029	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0002e	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00033	90		 npad	 1

; 527  :         NUMBER_HEADER* w = PMC_Multiply_X_I_Imp((NUMBER_HEADER*)u, v);

  00034	8b d7		 mov	 edx, edi
  00036	48 8b cb	 mov	 rcx, rbx
  00039	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  0003e	48 8b d8	 mov	 rbx, rax

; 528  :         root.HookNumber(w);

  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00049	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 529  : #ifdef _DEBUG
; 530  :         CheckNumber(w);
; 531  : #endif
; 532  :         root.UnlinkNumber(w);

  0004e	48 8b d3	 mov	 rdx, rbx
  00051	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00056	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0005b	90		 npad	 1

; 533  :         return ((PMC_HANDLE_UINT)w);

  0005c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00061	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00066	48 8b c3	 mov	 rax, rbx

; 534  :     }

  00069	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR [rsp+144]
  00071	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00078	5f		 pop	 rdi
  00079	c3		 ret	 0
$LN8@PMC_Multip:

; 524  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0007a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13ICFKHAEN@?$AAu@
  00081	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00088	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  0008d	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00092	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00099	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  0009e	e8 00 00 00 00	 call	 _CxxThrowException
  000a3	cc		 int	 3
$LN6@PMC_Multip:
?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z
_TEXT	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X, COMDAT

; 639  :     {

$LN10:
  00000	40 57		 push	 rdi
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rbx
  0001a	48 8b da	 mov	 rbx, rdx
  0001d	48 8b f9	 mov	 rdi, rcx

; 640  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)
; 641  :         {
; 642  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 643  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_multiply.cpp;PMC_Multiply_L_X;1");
; 644  :         }
; 645  :         if (v == nullptr)

  00020	48 85 d2	 test	 rdx, rdx
  00023	74 5a		 je	 SHORT $LN8@PMC_Multip

; 647  :         CheckNumber((NUMBER_HEADER*)v);

  00025	48 8b ca	 mov	 rcx, rdx
  00028	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 648  :         ResourceHolderUINT root;

  0002d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00032	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00037	90		 npad	 1

; 649  :         NUMBER_HEADER* w = PMC_Multiply_X_L_Imp((NUMBER_HEADER*)v, u);

  00038	48 8b d7	 mov	 rdx, rdi
  0003b	48 8b cb	 mov	 rcx, rbx
  0003e	e8 00 00 00 00	 call	 ?PMC_Multiply_X_L_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L_Imp
  00043	48 8b d8	 mov	 rbx, rax

; 650  :         root.HookNumber(w);

  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0004e	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 651  : #ifdef _DEBUG
; 652  :         CheckNumber(w);
; 653  : #endif
; 654  :         root.UnlinkNumber(w);

  00053	48 8b d3	 mov	 rdx, rbx
  00056	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0005b	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  00060	90		 npad	 1

; 655  :         return ((PMC_HANDLE_UINT)w);

  00061	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00066	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0006b	48 8b c3	 mov	 rax, rbx

; 656  :     }

  0006e	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR [rsp+144]
  00076	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
$LN8@PMC_Multip:

; 646  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0008d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  00092	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00097	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0009e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000a3	e8 00 00 00 00	 call	 _CxxThrowException
  000a8	cc		 int	 3
$LN6@PMC_Multip:
?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_L_X'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_L_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_L_X'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@_KPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_L_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z
_TEXT	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X, COMDAT

; 497  :     {

$LN10:
  00000	40 57		 push	 rdi
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rbx
  0001a	48 8b da	 mov	 rbx, rdx
  0001d	8b f9		 mov	 edi, ecx

; 498  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)
; 499  :         {
; 500  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 501  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_multiply.cpp;PMC_Multiply_I_X;1");
; 502  :         }
; 503  :         if (v == nullptr)

  0001f	48 85 d2	 test	 rdx, rdx
  00022	74 59		 je	 SHORT $LN8@PMC_Multip

; 505  :         CheckNumber((NUMBER_HEADER*)v);

  00024	48 8b ca	 mov	 rcx, rdx
  00027	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 506  :         ResourceHolderUINT root;

  0002c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00031	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00036	90		 npad	 1

; 507  :         NUMBER_HEADER* w = PMC_Multiply_X_I_Imp((NUMBER_HEADER*)v, u);

  00037	8b d7		 mov	 edx, edi
  00039	48 8b cb	 mov	 rcx, rbx
  0003c	e8 00 00 00 00	 call	 ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
  00041	48 8b d8	 mov	 rbx, rax

; 508  :         root.HookNumber(w);

  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  0004c	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 509  : #ifdef _DEBUG
; 510  :         CheckNumber(w);
; 511  : #endif
; 512  :         root.UnlinkNumber(w);

  00051	48 8b d3	 mov	 rdx, rbx
  00054	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00059	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  0005e	90		 npad	 1

; 513  :         return ((PMC_HANDLE_UINT)w);

  0005f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$[rsp]
  00064	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00069	48 8b c3	 mov	 rax, rbx

; 514  :     }

  0006c	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR [rsp+144]
  00074	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0007b	5f		 pop	 rdi
  0007c	c3		 ret	 0
$LN8@PMC_Multip:

; 504  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0007d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_13JAOPNPKD@?$AAv@
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0008b	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  00090	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00095	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0009c	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000a1	e8 00 00 00 00	 call	 _CxxThrowException
  000a6	cc		 int	 3
$LN6@PMC_Multip:
?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_I_X'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_I_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$ = 40
$T2 = 72
u$ = 144
v$ = 152
?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_I_X'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YAPEAU__tag_PMC_HANDLE_UINT@1234@IPEAU51234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_I_X'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 8
?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Multiply, COMDAT

; 764  :     {

  00000	8b 11		 mov	 edx, DWORD PTR [rcx]

; 765  :         if (feature->PROCESSOR_FEATURE_ADX && feature->PROCESSOR_FEATURE_BMI2)
; 766  :         {
; 767  :             fp_Multiply_X_1W = Multiply_X_1W_using_MULX_ADCX;
; 768  :             fp_Multiply_X_2W = Multiply_X_2W_using_MULX_ADCX;
; 769  :             fp_Multiply_X_X = Multiply_X_X_using_MULX_ADCX;
; 770  :         }
; 771  :         else
; 772  :         {
; 773  :             fp_Multiply_X_1W = Multiply_X_1W_using_MUL_ADC;
; 774  :             fp_Multiply_X_2W = Multiply_X_2W_using_MUL_ADC;
; 775  :             fp_Multiply_X_X = Multiply_X_X_using_MUL_ADC;
; 776  :         }
; 777  :         return (PMC_STATUS_OK);

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_1W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MULX_ADCX
  00009	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?Multiply_X_1W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K10@Z ; Palmtree::Math::Core::Internal::Multiply_X_1W_using_MUL_ADC
  00010	83 e2 0a	 and	 edx, 10
  00013	83 fa 0a	 cmp	 edx, 10
  00016	48 0f 45 c1	 cmovne	 rax, rcx
  0001a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?Multiply_X_2W_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MUL_ADC
  00021	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA, rax
  00028	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_2W_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K110@Z ; Palmtree::Math::Core::Internal::Multiply_X_2W_using_MULX_ADCX
  0002f	48 0f 45 c1	 cmovne	 rax, rcx
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?Multiply_X_X_using_MUL_ADC@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MUL_ADC
  0003a	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_2W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K110@ZEA, rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Multiply_X_X_using_MULX_ADCX@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ; Palmtree::Math::Core::Internal::Multiply_X_X_using_MULX_ADCX
  00048	48 0f 45 c1	 cmovne	 rax, rcx
  0004c	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA, rax
  00053	33 c0		 xor	 eax, eax

; 778  :     }

  00055	c3		 ret	 0
?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Multiply
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z
_TEXT	SEGMENT
$T1 = 32
root$2 = 40
u$ = 96
v$ = 104
?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp, COMDAT

; 433  :     {

$LN20:
  00000	40 57		 push	 rdi
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 60	 mov	 QWORD PTR [rsp+96], rbx
  00014	48 89 74 24 68	 mov	 QWORD PTR [rsp+104], rsi
  00019	8b fa		 mov	 edi, edx
  0001b	48 8b f1	 mov	 rsi, rcx

; 434  :         if (u->IS_ZERO)

  0001e	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00021	a8 01		 test	 al, 1
  00023	74 17		 je	 SHORT $LN2@PMC_Multip
$LN17@PMC_Multip:

; 492  :             }
; 493  :         }
; 494  :     }

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0002c	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  00031	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  00036	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
$LN2@PMC_Multip:

; 435  :         {
; 436  :             // u が 0 である場合
; 437  : 
; 438  :             // v の値にかかわらず 0 を返す。
; 439  :             return (&number_zero);
; 440  :         }
; 441  :         else if (u->IS_ONE)

  0003c	a8 02		 test	 al, 2
  0003e	74 1a		 je	 SHORT $LN4@PMC_Multip

; 442  :         {
; 443  :             // u が 1 である場合
; 444  :             if (v == 0)

  00040	85 d2		 test	 edx, edx
  00042	74 e1		 je	 SHORT $LN17@PMC_Multip

; 445  :             {
; 446  :                 // v が 0 である場合
; 447  : 
; 448  :                 //  0  を返す。
; 449  :                 return (&number_zero);
; 450  :             }
; 451  :             else
; 452  :             {
; 453  :                 // y が 0 ではない場合
; 454  : 
; 455  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 456  :                 return (From_I_Imp(v));

  00044	8b cf		 mov	 ecx, edi

; 492  :             }
; 493  :         }
; 494  :     }

  00046	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  0004b	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  00050	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00054	5f		 pop	 rdi

; 445  :             {
; 446  :                 // v が 0 である場合
; 447  : 
; 448  :                 //  0  を返す。
; 449  :                 return (&number_zero);
; 450  :             }
; 451  :             else
; 452  :             {
; 453  :                 // y が 0 ではない場合
; 454  : 
; 455  :                 // 乗算結果は v に等しいため、v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 456  :                 return (From_I_Imp(v));

  00055	e9 00 00 00 00	 jmp	 ?From_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::From_I_Imp
$LN4@PMC_Multip:

; 457  :             }
; 458  :         }
; 459  :         else
; 460  :         {
; 461  :             // u が 0 と 1 のどちらでもない場合
; 462  : 
; 463  :             if (v == 0)

  0005a	85 d2		 test	 edx, edx
  0005c	74 c7		 je	 SHORT $LN17@PMC_Multip

; 464  :             {
; 465  :                 // v が 0 である場合
; 466  : 
; 467  :                 //  0  を返す。
; 468  :                 return (&number_zero);
; 469  :             }
; 470  :             else if (v == 1)

  0005e	83 ff 01	 cmp	 edi, 1
  00061	75 14		 jne	 SHORT $LN10@PMC_Multip

; 492  :             }
; 493  :         }
; 494  :     }

  00063	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  00068	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  0006d	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00071	5f		 pop	 rdi

; 471  :             {
; 472  :                 // v が 1 である場合
; 473  : 
; 474  :                 // 乗算結果は u に等しいため、u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 475  :                 return (DuplicateNumber(u));

  00072	e9 00 00 00 00	 jmp	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
$LN10@PMC_Multip:

; 476  :             }
; 477  :             else
; 478  :             {
; 479  :                 // u と v がともに 0 、1 のどちらでもない場合
; 480  : 
; 481  :                 // u と v の積を計算する
; 482  :                 ResourceHolderUINT root;

  00077	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  0007c	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00081	90		 npad	 1

; 483  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00082	48 8b 56 20	 mov	 rdx, QWORD PTR [rsi+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 426  :             _BitScanReverse(&pos, x);

  00086	0f bd c7	 bsr	 eax, edi

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00089	b9 1f 00 00 00	 mov	 ecx, 31
  0008e	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp

; 484  :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  00090	48 63 c1	 movsxd	 rax, ecx
  00093	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00098	48 2b c8	 sub	 rcx, rax

; 485  :                 __UNIT_TYPE w_bit_count = u_bit_count + v_bit_count;

  0009b	48 03 d1	 add	 rdx, rcx

; 486  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0009e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  000a3	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAPEAU__tag_NUMBER_HEADER@2345@_K@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000a8	48 8b d8	 mov	 rbx, rax

; 487  :                 (*fp_Multiply_X_1W)(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK);

  000ab	4c 8b c7	 mov	 r8, rdi
  000ae	4c 8b 48 40	 mov	 r9, QWORD PTR [rax+64]
  000b2	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  000b6	48 8b 4e 40	 mov	 rcx, QWORD PTR [rsi+64]
  000ba	ff 15 00 00 00
	00		 call	 QWORD PTR ?fp_Multiply_X_1W@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K10@ZEA

; 488  :                 root.CheckNumber(w);

  000c0	48 8b d3	 mov	 rdx, rbx
  000c3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  000c8	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 489  :                 CommitNumber(w);

  000cd	48 8b cb	 mov	 rcx, rbx
  000d0	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPEAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 490  :                 root.UnlinkNumber(w);

  000d5	48 8b d3	 mov	 rdx, rbx
  000d8	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  000dd	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QEAAXPEAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  000e2	90		 npad	 1

; 491  :                 return (w);

  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR root$2[rsp]
  000e8	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000ed	48 8b c3	 mov	 rax, rbx

; 492  :             }
; 493  :         }
; 494  :     }

  000f0	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  000f5	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  000fa	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000fe	5f		 pop	 rdi
  000ff	c3		 ret	 0
?PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$2 = 40
u$ = 96
v$ = 104
?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
root$2 = 40
u$ = 96
v$ = 104
?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA PROC ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR root$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
?dtor$0@?0??PMC_Multiply_X_I_Imp@Internal@Core@Math@Palmtree@@YAPEAU__tag_NUMBER_HEADER@1234@PEAU51234@I@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::PMC_Multiply_X_I_Imp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_multiply.cpp
;	COMDAT ?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z
_TEXT	SEGMENT
u$ = 8
u_count$ = 16
v$ = 24
v_count$ = 32
w$ = 40
?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z PROC ; Palmtree::Math::Core::Internal::Multiply_X_X_Imp, COMDAT

; 42   :         (*fp_Multiply_X_X)(u, u_count, v, v_count, w);

  00000	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR ?fp_Multiply_X_X@Internal@Core@Math@Palmtree@@3P6AXPEA_K_K010@ZEA
?Multiply_X_X_Imp@Internal@Core@Math@Palmtree@@YAXPEA_K_K010@Z ENDP ; Palmtree::Math::Core::Internal::Multiply_X_X_Imp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 295  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GInternalErrorException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT

; 295  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 296  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1InternalErrorException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT

; 286  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	c7 41 18 00 ff
	ff ff		 mov	 DWORD PTR [rcx+24], -256 ; ffffffffffffff00H

; 57   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 58   :             _data = data;

  0003a	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8

; 286  :         {

  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax

; 287  :         }

  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
??0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
data$ = 48
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0InternalErrorException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 124  :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  0003b	48 83 c1 08	 add	 rcx, 8
  0003f	e8 00 00 00 00	 call	 __std_exception_destroy
  00044	90		 npad	 1
  00045	f6 c3 01	 test	 bl, 1
  00048	74 0e		 je	 SHORT $LN12@scalar
  0004a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00057	90		 npad	 1
$LN12@scalar:
  00058	48 8b c7	 mov	 rax, rdi
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_GArgumentNullException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT

; 124  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 70   :         {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00030	48 83 c1 08	 add	 rcx, 8
  00034	e8 00 00 00 00	 call	 __std_exception_destroy
  00039	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 125  :         }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1ArgumentNullException@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 120  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 120  :         {

  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 121  :         }

  0004f	48 8b c1	 mov	 rax, rcx
  00052	48 83 c4 18	 add	 rsp, 24
  00056	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT

; 115  :         {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	c7 41 18 fe ff
	ff ff		 mov	 DWORD PTR [rcx+24], -2

; 57   :             _message = message;

  00036	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx

; 58   :             _data = data;

  0003a	4c 89 41 28	 mov	 QWORD PTR [rcx+40], r8

; 115  :         {

  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax

; 116  :         }

  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
message$ = 40
param_name$ = 48
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
?dtor$0@?0???0ArgumentNullException@Internal@Core@Math@Palmtree@@QEAA@PEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
$LN12:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	8b da		 mov	 ebx, edx
  0001a	48 8b f9	 mov	 rdi, rcx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 70   :         {

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00024	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0002e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00031	48 83 c1 08	 add	 rcx, 8
  00035	e8 00 00 00 00	 call	 __std_exception_destroy
  0003a	90		 npad	 1
  0003b	f6 c3 01	 test	 bl, 1
  0003e	74 0e		 je	 SHORT $LN9@scalar
  00040	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00045	48 8b cf	 mov	 rcx, rdi
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1
$LN9@scalar:
  0004e	48 8b c7	 mov	 rax, rdi
  00051	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_GException@Internal@Core@Math@Palmtree@@UEAAPEAXI@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT

; 70   :         {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 85   :     {

  0001c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00026	48 83 c1 08	 add	 rcx, 8
  0002a	e8 00 00 00 00	 call	 __std_exception_destroy
  0002f	90		 npad	 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 71   :         }

  00030	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00034	c3		 ret	 0
??1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1Exception@Internal@Core@Math@Palmtree@@UEAA@XZ@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::~Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 62   :         Exception(const Exception& p) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :         {
; 64   :             _code = p._code;

  0002f	8b 42 18	 mov	 eax, DWORD PTR [rdx+24]
  00032	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 65   :             _message = p._message;

  00035	48 8b 42 20	 mov	 rax, QWORD PTR [rdx+32]
  00039	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 66   :             _data = p._data;

  0003d	48 8b 42 28	 mov	 rax, QWORD PTR [rdx+40]
  00041	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 67   :         }

  00045	48 8b c1	 mov	 rax, rcx
  00048	48 83 c4 18	 add	 rsp, 24
  0004c	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
p$ = 40
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@QEAA@AEBV01234@@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 c7 04 24 fe
	ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 49   :         : _Data()

  0001b	33 c0		 xor	 eax, eax
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00021	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00025	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 55   :         {
; 56   :             _code = code;

  0002f	89 51 18	 mov	 DWORD PTR [rcx+24], edx

; 57   :             _message = message;

  00032	4c 89 41 20	 mov	 QWORD PTR [rcx+32], r8

; 58   :             _data = data;

  00036	4c 89 49 28	 mov	 QWORD PTR [rcx+40], r9

; 59   :         }

  0003a	48 8b c1	 mov	 rax, rcx
  0003d	48 83 c4 18	 add	 rsp, 24
  00041	c3		 ret	 0
??0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 0
this$ = 32
code$ = 40
message$ = 48
data$ = 56
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA PROC ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
  00000	48 8b 8a 20 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0Exception@Internal@Core@Math@Palmtree@@IEAA@HPEB_W0@Z@4HA ENDP ; `Palmtree::Math::Core::Internal::Exception::Exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__flags$ = 72
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	8b da		 mov	 ebx, edx
  00016	48 8b f9	 mov	 rdi, rcx

; 85   :     {

  00019	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00020	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00023	48 83 c1 08	 add	 rcx, 8
  00027	e8 00 00 00 00	 call	 __std_exception_destroy
  0002c	90		 npad	 1
  0002d	f6 c3 01	 test	 bl, 1
  00030	74 0e		 je	 SHORT $LN6@scalar
  00032	ba 18 00 00 00	 mov	 edx, 24
  00037	48 8b cf	 mov	 rcx, rdi
  0003a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0003f	90		 npad	 1
$LN6@scalar:
  00040	48 8b c7	 mov	 rax, rdi
  00043	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0000b	48 85 d2	 test	 rdx, rdx
  0000e	48 0f 45 c2	 cmovne	 rax, rdx

; 92   :     }

  00012	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 85   :     {

$LN5:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax

; 86   :         __std_exception_destroy(&_Data);

  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 __std_exception_destroy
  00020	90		 npad	 1

; 87   :     }

  00021	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00025	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0exception@std@@QEAA@XZ PROC				; std::exception::exception, COMDAT

; 50   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	33 c0		 xor	 eax, eax
  0000c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00010	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 51   :     }

  00014	48 8b c1	 mov	 rax, rcx
  00017	c3		 ret	 0
??0exception@std@@QEAA@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
