; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::GetCPUInfo
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD imagerel $LN23
	DD	imagerel $LN23+162
	DD	imagerel $unwind$?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ZERO_MEMORY_BYTE DD imagerel _ZERO_MEMORY_BYTE
	DD	imagerel _ZERO_MEMORY_BYTE+21
	DD	imagerel $unwind$_ZERO_MEMORY_BYTE
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z DD imagerel ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z
	DD	imagerel ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z+36
	DD	imagerel $unwind$?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z DD imagerel ?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z
	DD	imagerel ?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z+37
	DD	imagerel $unwind$?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ZERO_MEMORY_BYTE DD 020501H
	DD	017405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z DD 040a01H
	DD	04340aH
	DD	07006120aH
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp
;	COMDAT ?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z
_TEXT	SEGMENT
op$ = 8
subop$ = 16
reg_eax$ = 24
reg_ebx$ = 32
reg_ecx$ = 40
reg_edx$ = 48
?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z PROC ; Palmtree::Math::Core::Internal::cpuidex, COMDAT

; 46   :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx

; 47   :         _INT32_T regbuf[4];
; 48   :         __cpuidex(regbuf, op, subop);

  00005	8b c1		 mov	 eax, ecx
  00007	8b ca		 mov	 ecx, edx
  00009	0f a2		 cpuid

; 49   :         *reg_eax = regbuf[0];

  0000b	41 89 00	 mov	 DWORD PTR [r8], eax

; 50   :         *reg_ebx = regbuf[1];
; 51   :         *reg_ecx = regbuf[2];

  0000e	48 8b 44 24 28	 mov	 rax, QWORD PTR reg_ecx$[rsp]
  00013	41 89 19	 mov	 DWORD PTR [r9], ebx

; 52   :         *reg_edx = regbuf[3];
; 53   :     }

  00016	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  0001b	89 08		 mov	 DWORD PTR [rax], ecx
  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR reg_edx$[rsp]
  00022	89 10		 mov	 DWORD PTR [rax], edx
  00024	c3		 ret	 0
?cpuidex@Internal@Core@Math@Palmtree@@YAXIIPEAI000@Z ENDP ; Palmtree::Math::Core::Internal::cpuidex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp
;	COMDAT ?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z
_TEXT	SEGMENT
op$ = 8
reg_eax$ = 16
reg_ebx$ = 24
reg_ecx$ = 32
reg_edx$ = 40
?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z PROC	; Palmtree::Math::Core::Internal::cpuid, COMDAT

; 36   :     {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx

; 37   :         _INT32_T regbuf[4];
; 38   :         __cpuid(regbuf, op);

  00005	8b c1		 mov	 eax, ecx
  00007	4c 8b d2	 mov	 r10, rdx
  0000a	33 c9		 xor	 ecx, ecx
  0000c	0f a2		 cpuid

; 39   :         *reg_eax = regbuf[0];

  0000e	41 89 02	 mov	 DWORD PTR [r10], eax

; 40   :         *reg_ebx = regbuf[1];
; 41   :         *reg_ecx = regbuf[2];
; 42   :         *reg_edx = regbuf[3];

  00011	48 8b 44 24 28	 mov	 rax, QWORD PTR reg_edx$[rsp]
  00016	41 89 18	 mov	 DWORD PTR [r8], ebx

; 43   :     }

  00019	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  0001e	41 89 09	 mov	 DWORD PTR [r9], ecx
  00021	89 10		 mov	 DWORD PTR [rax], edx
  00023	c3		 ret	 0
?cpuid@Internal@Core@Math@Palmtree@@YAXIPEAI000@Z ENDP	; Palmtree::Math::Core::Internal::cpuid
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT _ZERO_MEMORY_BYTE
_TEXT	SEGMENT
d$ = 8
count$ = 16
_ZERO_MEMORY_BYTE PROC					; COMDAT

; 74   :         {

  00000	48 89 7c 24 08	 mov	 QWORD PTR [rsp+8], rdi

; 75   :             __stosb((unsigned char*)d, 0, count);

  00005	48 8b f9	 mov	 rdi, rcx
  00008	33 c0		 xor	 eax, eax
  0000a	48 8b ca	 mov	 rcx, rdx
  0000d	f3 aa		 rep stosb

; 76   :         }

  0000f	48 8b 7c 24 08	 mov	 rdi, QWORD PTR [rsp+8]
  00014	c3		 ret	 0
_ZERO_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp
;	COMDAT ?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
feature$ = 32
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::GetCPUInfo, COMDAT

; 56   :     {

$LN23:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	4c 8b c1	 mov	 r8, rcx

; 38   :         __cpuid(regbuf, op);

  0000d	33 c0		 xor	 eax, eax
  0000f	33 c9		 xor	 ecx, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 75   :             __stosb((unsigned char*)d, 0, count);

  00011	49 8b f8	 mov	 rdi, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp

; 38   :         __cpuid(regbuf, op);

  00014	0f a2		 cpuid
  00016	44 8b c8	 mov	 r9d, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 75   :             __stosb((unsigned char*)d, 0, count);

  00019	b9 04 00 00 00	 mov	 ecx, 4
  0001e	33 c0		 xor	 eax, eax
  00020	f3 aa		 rep stosb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\cpuid.cpp

; 67   :         if (max_function_no >= 1)

  00022	41 83 f9 01	 cmp	 r9d, 1
  00026	72 16		 jb	 SHORT $LN20@GetCPUInfo

; 68   :         {
; 69   :             cpuid(1, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 70   :             feature->PROCESSOR_FEATURE_POPCNT = (reg_ecx >> 23) & 1;

  00028	41 83 20 fe	 and	 DWORD PTR [r8], -2	; fffffffeH

; 38   :         __cpuid(regbuf, op);

  0002c	33 c9		 xor	 ecx, ecx
  0002e	b8 01 00 00 00	 mov	 eax, 1
  00033	0f a2		 cpuid

; 68   :         {
; 69   :             cpuid(1, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 70   :             feature->PROCESSOR_FEATURE_POPCNT = (reg_ecx >> 23) & 1;

  00035	c1 e9 17	 shr	 ecx, 23
  00038	83 e1 01	 and	 ecx, 1
  0003b	41 09 08	 or	 DWORD PTR [r8], ecx
$LN20@GetCPUInfo:

; 71   :         }
; 72   :         if (max_function_no >= 7)

  0003e	41 83 f9 07	 cmp	 r9d, 7
  00042	72 2e		 jb	 SHORT $LN21@GetCPUInfo

; 73   :         {
; 74   :             cpuidex(7, 0, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 75   :             max_subleaf_no = reg_eax;
; 76   :             feature->PROCESSOR_FEATURE_BMI1 = (reg_ebx >> 3) & 1;
; 77   :             feature->PROCESSOR_FEATURE_ADX = (reg_ebx >> 8) & 1;
; 78   :             feature->PROCESSOR_FEATURE_BMI2 = (reg_ebx >> 19) & 1;

  00044	41 83 20 f1	 and	 DWORD PTR [r8], -15	; fffffff1H

; 48   :         __cpuidex(regbuf, op, subop);

  00048	33 c9		 xor	 ecx, ecx
  0004a	b8 07 00 00 00	 mov	 eax, 7
  0004f	0f a2		 cpuid

; 73   :         {
; 74   :             cpuidex(7, 0, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 75   :             max_subleaf_no = reg_eax;
; 76   :             feature->PROCESSOR_FEATURE_BMI1 = (reg_ebx >> 3) & 1;
; 77   :             feature->PROCESSOR_FEATURE_ADX = (reg_ebx >> 8) & 1;
; 78   :             feature->PROCESSOR_FEATURE_BMI2 = (reg_ebx >> 19) & 1;

  00051	8b cb		 mov	 ecx, ebx
  00053	8b c3		 mov	 eax, ebx
  00055	c1 e9 09	 shr	 ecx, 9
  00058	25 00 01 00 00	 and	 eax, 256		; 00000100H
  0005d	81 e1 00 04 00
	00		 and	 ecx, 1024		; 00000400H
  00063	83 e3 08	 and	 ebx, 8
  00066	0b c8		 or	 ecx, eax
  00068	c1 e9 06	 shr	 ecx, 6
  0006b	0b cb		 or	 ecx, ebx
  0006d	d1 e9		 shr	 ecx, 1
  0006f	41 09 08	 or	 DWORD PTR [r8], ecx
$LN21@GetCPUInfo:

; 38   :         __cpuid(regbuf, op);

  00072	33 c9		 xor	 ecx, ecx
  00074	b8 00 00 00 80	 mov	 eax, -2147483648	; ffffffff80000000H
  00079	0f a2		 cpuid

; 79   :         }
; 80   :         cpuid(0x80000000, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 81   :         max_ex_function_no = reg_eax;
; 82   :         if (max_ex_function_no >= 0x80000001)

  0007b	3d 01 00 00 80	 cmp	 eax, -2147483647	; 80000001H
  00080	72 15		 jb	 SHORT $LN4@GetCPUInfo

; 83   :         {
; 84   :             cpuid(0x80000001, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 85   :             feature->PROCESSOR_FEATURE_ABM = (reg_ecx >> 5) & 1;

  00082	41 83 20 ef	 and	 DWORD PTR [r8], -17	; ffffffefH

; 38   :         __cpuid(regbuf, op);

  00086	33 c9		 xor	 ecx, ecx
  00088	b8 01 00 00 80	 mov	 eax, -2147483647	; ffffffff80000001H
  0008d	0f a2		 cpuid

; 83   :         {
; 84   :             cpuid(0x80000001, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 85   :             feature->PROCESSOR_FEATURE_ABM = (reg_ecx >> 5) & 1;

  0008f	d1 e9		 shr	 ecx, 1
  00091	83 e1 10	 and	 ecx, 16
  00094	41 09 08	 or	 DWORD PTR [r8], ecx
$LN4@GetCPUInfo:

; 86   :         }
; 87   :     }

  00097	48 8b 5c 24 20	 mov	 rbx, QWORD PTR [rsp+32]
  0009c	48 83 c4 10	 add	 rsp, 16
  000a0	5f		 pop	 rdi
  000a1	c3		 ret	 0
?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPEAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::GetCPUInfo
_TEXT	ENDS
END
