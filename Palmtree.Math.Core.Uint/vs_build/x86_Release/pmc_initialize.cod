; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\pmc_initialize.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?configuration_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_CONFIGURATION_INFO@1234@A ; Palmtree::Math::Core::Internal::configuration_info
_BSS	SEGMENT
?configuration_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_CONFIGURATION_INFO@1234@A DB 01H DUP (?) ; Palmtree::Math::Core::Internal::configuration_info
_BSS	ENDS
PUBLIC	_PMC_UINT_Initialize@4
PUBLIC	?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YGHPB_WPA_WHPAH@Z ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
PUBLIC	??_C@_1BC@IAEPHGOI@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR@ ; `string'
PUBLIC	??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@		; `string'
PUBLIC	??_C@_1BC@CNHMMALG@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM@ ; `string'
PUBLIC	??_C@_17NIABIIAO@?$AAx?$AA8?$AA6@		; `string'
EXTRN	__imp__lstrcmpW@8:PROC
EXTRN	__imp__lstrcpyW@8:PROC
EXTRN	?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::GetCPUInfo
EXTRN	?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Memory
EXTRN	?Initialize_From@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_From
EXTRN	?Initialize_To@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_To
EXTRN	?Initialize_Add@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Add
EXTRN	?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Subtruct
EXTRN	?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Multiply
EXTRN	?Initialize_DivRem@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_DivRem
EXTRN	?Initialize_Shift@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Shift
EXTRN	?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_BitwiseAnd
EXTRN	?Initialize_BitwiseOr@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_BitwiseOr
EXTRN	?Initialize_ExclusiveOr@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_ExclusiveOr
EXTRN	?Initialize_Compare@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Compare
EXTRN	?Initialize_Equals@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Equals
EXTRN	?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_ToString
EXTRN	?Initialize_Parse@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Parse
EXTRN	?Initialize_GreatestCommonDivisor@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_GreatestCommonDivisor
EXTRN	?Initialize_Pow@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_Pow
EXTRN	?Initialize_ModPow@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:PROC ; Palmtree::Math::Core::Internal::Initialize_ModPow
EXTRN	?PMC_GetStatisticsInfo@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_STATISTICS_INFO@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GetStatisticsInfo
EXTRN	?PMC_From_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_From_I
EXTRN	?PMC_From_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_From_L
EXTRN	?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Dispose
EXTRN	?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I
EXTRN	?PMC_FromByteArray@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PBEI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_FromByteArray
EXTRN	?PMC_ToByteArray@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@PAEI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ToByteArray
EXTRN	?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Clone_X
EXTRN	?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ:PROC ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize
EXTRN	?PMC_To_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_To_X_I
EXTRN	?PMC_To_X_L@Internal@Core@Math@Palmtree@@YG_KPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_To_X_L
EXTRN	?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo
EXTRN	?PMC_ToString@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@PB_WPBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PA_WI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ToString
EXTRN	?PMC_TryParse@Internal@Core@Math@Palmtree@@YGHPB_WHPBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PAPAU__tag_PMC_HANDLE_UINT@1234@PAI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_TryParse
EXTRN	?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_I_X
EXTRN	?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_L_X
EXTRN	?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_I
EXTRN	?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_L
EXTRN	?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_X
EXTRN	?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
EXTRN	?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
EXTRN	?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
EXTRN	?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
EXTRN	?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
EXTRN	?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X
EXTRN	?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X
EXTRN	?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I
EXTRN	?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L
EXTRN	?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X
EXTRN	?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@PAI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_I_X
EXTRN	?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@PA_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_L_X
EXTRN	?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@IPAPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I
EXTRN	?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YG_KPAU__tag_PMC_HANDLE_UINT@1234@_KPAPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L
EXTRN	?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0PAPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X
EXTRN	?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@H@Z:PROC ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I
EXTRN	?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@H@Z:PROC ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I
EXTRN	?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_I_X
EXTRN	?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X
EXTRN	?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_I
EXTRN	?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YG_KPAU__tag_PMC_HANDLE_UINT@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L
EXTRN	?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X
EXTRN	?PMC_BitwiseOr_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_I_X
EXTRN	?PMC_BitwiseOr_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_L_X
EXTRN	?PMC_BitwiseOr_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_I
EXTRN	?PMC_BitwiseOr_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_L
EXTRN	?PMC_BitwiseOr_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_X
EXTRN	?PMC_ExclusiveOr_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_I_X
EXTRN	?PMC_ExclusiveOr_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_L_X
EXTRN	?PMC_ExclusiveOr_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_I
EXTRN	?PMC_ExclusiveOr_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_L
EXTRN	?PMC_ExclusiveOr_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_X
EXTRN	?PMC_Compare_I_X@Internal@Core@Math@Palmtree@@YGHIPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_I_X
EXTRN	?PMC_Compare_L_X@Internal@Core@Math@Palmtree@@YGH_KPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_L_X
EXTRN	?PMC_Compare_X_I@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_I
EXTRN	?PMC_Compare_X_L@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_L
EXTRN	?PMC_Compare_X_X@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Compare_X_X
EXTRN	?PMC_Equals_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_I_X
EXTRN	?PMC_Equals_L_X@Internal@Core@Math@Palmtree@@YGI_KPAU__tag_PMC_HANDLE_UINT@1234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_L_X
EXTRN	?PMC_Equals_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_I
EXTRN	?PMC_Equals_X_L@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_L
EXTRN	?PMC_Equals_X_X@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Equals_X_X
EXTRN	?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_I_X
EXTRN	?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_L_X
EXTRN	?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I
EXTRN	?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L
EXTRN	?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:PROC ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X
EXTRN	?PMC_Pow_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Pow_X_I
EXTRN	?PMC_Pow_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:PROC ; Palmtree::Math::Core::Internal::PMC_Pow_X_L
EXTRN	?PMC_ModPow_X_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@00@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ModPow_X_X_X
EXTRN	?PMC_FromByteArrayForSINT@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAEIPAD@Z:PROC ; Palmtree::Math::Core::Internal::PMC_FromByteArrayForSINT
EXTRN	?PMC_ToByteArrayForSINT@Internal@Core@Math@Palmtree@@YGIDPAU__tag_PMC_HANDLE_UINT@1234@PAEI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_ToByteArrayForSINT
EXTRN	?PMC_TryParseForSINT@Internal@Core@Math@Palmtree@@YGHPB_WHPBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PADPAPAU__tag_PMC_HANDLE_UINT@1234@PAI@Z:PROC ; Palmtree::Math::Core::Internal::PMC_TryParseForSINT
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
	ALIGN	4

?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A DB 0128H DUP (?) ; Palmtree::Math::Core::Internal::entry_points
?initialized@Internal@Core@Math@Palmtree@@3DA DB 01H DUP (?) ; Palmtree::Math::Core::Internal::initialized
_BSS	ENDS
;	COMDAT ??_C@_17NIABIIAO@?$AAx?$AA8?$AA6@
CONST	SEGMENT
??_C@_17NIABIIAO@?$AAx?$AA8?$AA6@ DB 'x', 00H, '8', 00H, '6', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@CNHMMALG@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM@
CONST	SEGMENT
??_C@_1BC@CNHMMALG@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM@ DB 'P', 00H, 'L'
	DB	00H, 'A', 00H, 'T', 00H, 'F', 00H, 'O', 00H, 'R', 00H, 'M', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@
CONST	SEGMENT
??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@ DB 'M', 00H, 'S', 00H, 'C', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@IAEPHGOI@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR@
CONST	SEGMENT
??_C@_1BC@IAEPHGOI@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR@ DB 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, 'R', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
;	COMDAT ?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ
_TEXT	SEGMENT
_nh$ = -44						; size = 44
?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ PROC	; Palmtree::Math::Core::Internal::SelfCheck, COMDAT

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 75   :             __stosb((unsigned char*)d, 0, count);

  00006	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0000b	32 c0		 xor	 al, al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp

; 90   :     {

  0000d	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 75   :             __stosb((unsigned char*)d, 0, count);

  0000e	8d 7d d4	 lea	 edi, DWORD PTR _nh$[ebp]
  00011	f3 aa		 rep stosb
  00013	8d 7d d4	 lea	 edi, DWORD PTR _nh$[ebp]
  00016	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001b	f3 aa		 rep stosb
  0001d	8d 7d d4	 lea	 edi, DWORD PTR _nh$[ebp]
  00020	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00025	f3 aa		 rep stosb
  00027	8d 7d d4	 lea	 edi, DWORD PTR _nh$[ebp]
  0002a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0002f	f3 aa		 rep stosb
  00031	8d 7d d4	 lea	 edi, DWORD PTR _nh$[ebp]
  00034	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00039	f3 aa		 rep stosb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp

; 119  :         return(TRUE);

  0003b	b8 01 00 00 00	 mov	 eax, 1
  00040	5f		 pop	 edi

; 120  :     }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SelfCheck@Internal@Core@Math@Palmtree@@YAHXZ ENDP	; Palmtree::Math::Core::Internal::SelfCheck
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __ZERO_MEMORY_BYTE
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_BYTE PROC					; COMDAT

; 74   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 75   :             __stosb((unsigned char*)d, 0, count);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00006	32 c0		 xor	 al, al
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000c	f3 aa		 rep stosb
  0000e	5f		 pop	 edi

; 76   :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
__ZERO_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
;	COMDAT ?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YGHPB_WPA_WHPAH@Z
_TEXT	SEGMENT
_value$1 = -12						; size = 8
_value$2 = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_key$ = 8						; size = 4
_value_buffer$ = 12					; size = 4
_value_buffer_size$ = 16				; size = 4
_count$ = 20						; size = 4
?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YGHPB_WPA_WHPAH@Z PROC ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings, COMDAT

; 44   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _key$[ebp]
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _value_buffer$[ebp]
  00018	57		 push	 edi
  00019	8b 7d 14	 mov	 edi, DWORD PTR _count$[ebp]

; 45   :         if (lstrcmpW(key, L"COMPILER") == 0)

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@IAEPHGOI@?$AAC?$AAO?$AAM?$AAP?$AAI?$AAL?$AAE?$AAR@
  00021	53		 push	 ebx
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpW@8
  00028	85 c0		 test	 eax, eax
  0002a	75 40		 jne	 SHORT $LN2@PMC_GetCon

; 46   :         {
; 47   : #ifdef _MSC_VER
; 48   :             const wchar_t value[] = L"MSC";

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@
  00031	89 45 f4	 mov	 DWORD PTR _value$2[ebp], eax
  00034	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_17CLPOHKCA@?$AAM?$AAS?$AAC@+4
  00039	89 45 f8	 mov	 DWORD PTR _value$2[ebp+4], eax

; 49   : #elif defined(__GNUC__)
; 50   :             const wchar_t value[] = L"GNUC";
; 51   : #else
; 52   : #error unknwon compiler
; 53   : #endif
; 54   :             if (value_buffer != nullptr)

  0003c	85 f6		 test	 esi, esi
  0003e	74 11		 je	 SHORT $LN8@PMC_GetCon

; 55   :             {
; 56   :                 if (value_buffer_size < countof(value))

  00040	83 7d 10 04	 cmp	 DWORD PTR _value_buffer_size$[ebp], 4
  00044	72 50		 jb	 SHORT $LN11@PMC_GetCon
$LN9@PMC_GetCon:

; 75   :                     return (PMC_STATUS_INSUFFICIENT_BUFFER);
; 76   :                 lstrcpyW(value_buffer, value);
; 77   :             }
; 78   :             *count = countof(value);

  00046	8d 45 f4	 lea	 eax, DWORD PTR _value$1[ebp]
  00049	50		 push	 eax
  0004a	56		 push	 esi
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpyW@8
$LN8@PMC_GetCon:
  00051	c7 07 04 00 00
	00		 mov	 DWORD PTR [edi], 4

; 79   :             return (PMC_STATUS_OK);

  00057	33 c0		 xor	 eax, eax
  00059	5f		 pop	 edi

; 80   :         }
; 81   :         else
; 82   :         {
; 83   :             *count = -1;
; 84   :             return (PMC_STATUS_ARGUMENT_ERROR);
; 85   :         }
; 86   :     }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005f	33 cd		 xor	 ecx, ebp
  00061	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 10 00	 ret	 16			; 00000010H
$LN2@PMC_GetCon:

; 57   :                     return (PMC_STATUS_INSUFFICIENT_BUFFER);
; 58   :                 lstrcpyW(value_buffer, value);
; 59   :             }
; 60   :             *count = countof(value);
; 61   :             return (PMC_STATUS_OK);
; 62   :         }
; 63   :         else if (lstrcmpW(key, L"PLATFORM") == 0)

  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@CNHMMALG@?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM@
  00071	53		 push	 ebx
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpW@8
  00078	85 c0		 test	 eax, eax
  0007a	75 32		 jne	 SHORT $LN6@PMC_GetCon

; 64   :         {
; 65   : #ifdef _M_IX86
; 66   :             const wchar_t value[] = L"x86";

  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_17NIABIIAO@?$AAx?$AA8?$AA6@
  00081	89 45 f4	 mov	 DWORD PTR _value$1[ebp], eax
  00084	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_17NIABIIAO@?$AAx?$AA8?$AA6@+4
  00089	89 45 f8	 mov	 DWORD PTR _value$1[ebp+4], eax

; 67   : #elif defined(_M_X64)
; 68   :             const wchar_t value[] = L"x64";
; 69   : #else
; 70   : #error unknwon compiler
; 71   : #endif
; 72   :             if (value_buffer != nullptr)

  0008c	85 f6		 test	 esi, esi
  0008e	74 c1		 je	 SHORT $LN8@PMC_GetCon

; 73   :             {
; 74   :                 if (value_buffer_size < countof(value))

  00090	83 7d 10 04	 cmp	 DWORD PTR _value_buffer_size$[ebp], 4
  00094	73 b0		 jae	 SHORT $LN9@PMC_GetCon
$LN11@PMC_GetCon:
  00096	5f		 pop	 edi

; 80   :         }
; 81   :         else
; 82   :         {
; 83   :             *count = -1;
; 84   :             return (PMC_STATUS_ARGUMENT_ERROR);
; 85   :         }
; 86   :     }

  00097	5e		 pop	 esi
  00098	b8 f8 ff ff ff	 mov	 eax, -8			; fffffff8H
  0009d	5b		 pop	 ebx
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	33 cd		 xor	 ecx, ebp
  000a3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 10 00	 ret	 16			; 00000010H
$LN6@PMC_GetCon:
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b1	83 c8 ff	 or	 eax, -1
  000b4	c7 07 ff ff ff
	ff		 mov	 DWORD PTR [edi], -1
  000ba	33 cd		 xor	 ecx, ebp
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 10 00	 ret	 16			; 00000010H
?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YGHPB_WPA_WHPAH@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp
;	COMDAT _PMC_UINT_Initialize@4
_TEXT	SEGMENT
_nh$1 = -48						; size = 44
_feature$2 = -4						; size = 4
_config$ = 8						; size = 4
_PMC_UINT_Initialize@4 PROC				; COMDAT

; 123  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H

; 124  :         if (!initialized)

  00006	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?initialized@Internal@Core@Math@Palmtree@@3DA, 0
  0000d	0f 85 a8 04 00
	00		 jne	 $LN2@PMC_UINT_I
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 75   :             __stosb((unsigned char*)d, 0, count);

  00013	57		 push	 edi
  00014	32 c0		 xor	 al, al
  00016	8d 7d d0	 lea	 edi, DWORD PTR _nh$1[ebp]
  00019	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001e	f3 aa		 rep stosb
  00020	8d 7d d0	 lea	 edi, DWORD PTR _nh$1[ebp]
  00023	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00028	f3 aa		 rep stosb
  0002a	8d 7d d0	 lea	 edi, DWORD PTR _nh$1[ebp]
  0002d	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00032	f3 aa		 rep stosb
  00034	8d 7d d0	 lea	 edi, DWORD PTR _nh$1[ebp]
  00037	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0003c	f3 aa		 rep stosb
  0003e	8d 7d d0	 lea	 edi, DWORD PTR _nh$1[ebp]
  00041	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00046	f3 aa		 rep stosb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_initialize.cpp

; 130  :             GetCPUInfo(&feature);

  00048	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?GetCPUInfo@Internal@Core@Math@Palmtree@@YAXPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::GetCPUInfo

; 131  :             configuration_info = *config;

  00051	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00054	8a 00		 mov	 al, BYTE PTR [eax]
  00056	a2 00 00 00 00	 mov	 BYTE PTR ?configuration_info@Internal@Core@Math@Palmtree@@3U__tag_PMC_CONFIGURATION_INFO@1234@A, al ; Palmtree::Math::Core::Internal::configuration_info

; 132  :             if (Initialize_Memory(&feature) != PMC_STATUS_OK)

  0005b	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Memory
  00064	83 c4 08	 add	 esp, 8
  00067	5f		 pop	 edi
  00068	85 c0		 test	 eax, eax
  0006a	0f 85 56 04 00
	00		 jne	 $LN40@PMC_UINT_I

; 133  :                 return (nullptr);
; 134  :             if (Initialize_From(&feature) != PMC_STATUS_OK)

  00070	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?Initialize_From@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_From
  00079	83 c4 04	 add	 esp, 4
  0007c	85 c0		 test	 eax, eax
  0007e	0f 85 42 04 00
	00		 jne	 $LN40@PMC_UINT_I

; 135  :                 return (nullptr);
; 136  :             if (Initialize_To(&feature) != PMC_STATUS_OK)

  00084	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?Initialize_To@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_To
  0008d	83 c4 04	 add	 esp, 4
  00090	85 c0		 test	 eax, eax
  00092	0f 85 2e 04 00
	00		 jne	 $LN40@PMC_UINT_I

; 137  :                 return (nullptr);
; 138  :             if (Initialize_Add(&feature) != PMC_STATUS_OK)

  00098	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?Initialize_Add@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Add
  000a1	83 c4 04	 add	 esp, 4
  000a4	85 c0		 test	 eax, eax
  000a6	0f 85 1a 04 00
	00		 jne	 $LN40@PMC_UINT_I

; 139  :                 return (nullptr);
; 140  :             if (Initialize_Subtruct(&feature) != PMC_STATUS_OK)

  000ac	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Subtruct
  000b5	83 c4 04	 add	 esp, 4
  000b8	85 c0		 test	 eax, eax
  000ba	0f 85 06 04 00
	00		 jne	 $LN40@PMC_UINT_I

; 141  :                 return (nullptr);
; 142  :             if (Initialize_Multiply(&feature) != PMC_STATUS_OK)

  000c0	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?Initialize_Multiply@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Multiply
  000c9	83 c4 04	 add	 esp, 4
  000cc	85 c0		 test	 eax, eax
  000ce	0f 85 f2 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 143  :                 return (nullptr);
; 144  :             if (Initialize_DivRem(&feature) != PMC_STATUS_OK)

  000d4	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?Initialize_DivRem@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_DivRem
  000dd	83 c4 04	 add	 esp, 4
  000e0	85 c0		 test	 eax, eax
  000e2	0f 85 de 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 145  :                 return (nullptr);
; 146  :             if (Initialize_Shift(&feature) != PMC_STATUS_OK)

  000e8	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 ?Initialize_Shift@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Shift
  000f1	83 c4 04	 add	 esp, 4
  000f4	85 c0		 test	 eax, eax
  000f6	0f 85 ca 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 147  :                 return (nullptr);
; 148  :             if (Initialize_BitwiseAnd(&feature) != PMC_STATUS_OK)

  000fc	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 ?Initialize_BitwiseAnd@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_BitwiseAnd
  00105	83 c4 04	 add	 esp, 4
  00108	85 c0		 test	 eax, eax
  0010a	0f 85 b6 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 149  :                 return (nullptr);
; 150  :             if (Initialize_BitwiseOr(&feature) != PMC_STATUS_OK)

  00110	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?Initialize_BitwiseOr@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_BitwiseOr
  00119	83 c4 04	 add	 esp, 4
  0011c	85 c0		 test	 eax, eax
  0011e	0f 85 a2 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 151  :                 return (nullptr);
; 152  :             if (Initialize_ExclusiveOr(&feature) != PMC_STATUS_OK)

  00124	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  00127	50		 push	 eax
  00128	e8 00 00 00 00	 call	 ?Initialize_ExclusiveOr@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_ExclusiveOr
  0012d	83 c4 04	 add	 esp, 4
  00130	85 c0		 test	 eax, eax
  00132	0f 85 8e 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 153  :                 return (nullptr);
; 154  :             if (Initialize_Compare(&feature) != PMC_STATUS_OK)

  00138	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?Initialize_Compare@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Compare
  00141	83 c4 04	 add	 esp, 4
  00144	85 c0		 test	 eax, eax
  00146	0f 85 7a 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 155  :                 return (nullptr);
; 156  :             if (Initialize_Equals(&feature) != PMC_STATUS_OK)

  0014c	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  0014f	50		 push	 eax
  00150	e8 00 00 00 00	 call	 ?Initialize_Equals@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Equals
  00155	83 c4 04	 add	 esp, 4
  00158	85 c0		 test	 eax, eax
  0015a	0f 85 66 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 157  :                 return (nullptr);
; 158  :             if (Initialize_ToString(&feature) != PMC_STATUS_OK)

  00160	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ?Initialize_ToString@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_ToString
  00169	83 c4 04	 add	 esp, 4
  0016c	85 c0		 test	 eax, eax
  0016e	0f 85 52 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 159  :                 return (nullptr);
; 160  :             if (Initialize_Parse(&feature) != PMC_STATUS_OK)

  00174	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?Initialize_Parse@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Parse
  0017d	83 c4 04	 add	 esp, 4
  00180	85 c0		 test	 eax, eax
  00182	0f 85 3e 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 161  :                 return (nullptr);
; 162  :             if (Initialize_GreatestCommonDivisor(&feature) != PMC_STATUS_OK)

  00188	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  0018b	50		 push	 eax
  0018c	e8 00 00 00 00	 call	 ?Initialize_GreatestCommonDivisor@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_GreatestCommonDivisor
  00191	83 c4 04	 add	 esp, 4
  00194	85 c0		 test	 eax, eax
  00196	0f 85 2a 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 163  :                 return (nullptr);
; 164  :             if (Initialize_Pow(&feature) != PMC_STATUS_OK)

  0019c	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  0019f	50		 push	 eax
  001a0	e8 00 00 00 00	 call	 ?Initialize_Pow@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Pow
  001a5	83 c4 04	 add	 esp, 4
  001a8	85 c0		 test	 eax, eax
  001aa	0f 85 16 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 165  :                 return (nullptr);
; 166  :             if (Initialize_ModPow(&feature) != PMC_STATUS_OK)

  001b0	8d 45 fc	 lea	 eax, DWORD PTR _feature$2[ebp]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?Initialize_ModPow@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_ModPow
  001b9	83 c4 04	 add	 esp, 4
  001bc	85 c0		 test	 eax, eax
  001be	0f 85 02 03 00
	00		 jne	 $LN40@PMC_UINT_I

; 168  : 
; 169  :             entry_points.PROCESSOR_FEATURE_POPCNT = feature.PROCESSOR_FEATURE_POPCNT;
; 170  :             entry_points.PROCESSOR_FEATURE_ADX = feature.PROCESSOR_FEATURE_ADX;
; 171  :             entry_points.PROCESSOR_FEATURE_BMI1 = feature.PROCESSOR_FEATURE_BMI1;
; 172  :             entry_points.PROCESSOR_FEATURE_BMI2 = feature.PROCESSOR_FEATURE_BMI2;
; 173  :             entry_points.PROCESSOR_FEATURE_ABM = feature.PROCESSOR_FEATURE_ABM;

  001c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A
  001ca	8b c1		 mov	 eax, ecx
  001cc	33 45 fc	 xor	 eax, DWORD PTR _feature$2[ebp]
  001cf	83 e0 1f	 and	 eax, 31			; 0000001fH

; 174  :             entry_points.GetConfigurationSettings = PMC_GetConfigurationSettings;

  001d2	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+4, OFFSET ?PMC_GetConfigurationSettings@Internal@Core@Math@Palmtree@@YGHPB_WPA_WHPAH@Z ; Palmtree::Math::Core::Internal::PMC_GetConfigurationSettings
  001dc	33 c8		 xor	 ecx, eax

; 175  :             entry_points.GetStatisticsInfo = PMC_GetStatisticsInfo;

  001de	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+8, OFFSET ?PMC_GetStatisticsInfo@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_STATISTICS_INFO@1234@@Z ; Palmtree::Math::Core::Internal::PMC_GetStatisticsInfo
  001e8	89 0d 00 00 00
	00		 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A, ecx

; 176  :             entry_points.From_I = PMC_From_I;

  001ee	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+12, OFFSET ?PMC_From_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_From_I

; 177  :             entry_points.From_L = PMC_From_L;

  001f8	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+16, OFFSET ?PMC_From_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_From_L

; 178  :             entry_points.Dispose = PMC_Dispose;

  00202	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+20, OFFSET ?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Dispose

; 179  :             entry_points.To_X_I = PMC_To_X_I;

  0020c	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+44, OFFSET ?PMC_To_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_To_X_I

; 180  :             entry_points.To_X_L = PMC_To_X_L;

  00216	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+48, OFFSET ?PMC_To_X_L@Internal@Core@Math@Palmtree@@YG_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_To_X_L

; 181  :             entry_points.FromByteArray = PMC_FromByteArray;

  00220	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+28, OFFSET ?PMC_FromByteArray@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PBEI@Z ; Palmtree::Math::Core::Internal::PMC_FromByteArray

; 182  :             entry_points.ToByteArray = PMC_ToByteArray;

  0022a	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+32, OFFSET ?PMC_ToByteArray@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@PAEI@Z ; Palmtree::Math::Core::Internal::PMC_ToByteArray

; 183  :             entry_points.InitializeNumberFormatInfo = PMC_InitializeNumberFormatInfo;

  00234	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+52, OFFSET ?PMC_InitializeNumberFormatInfo@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_NUMBER_FORMAT_INFO@1234@@Z ; Palmtree::Math::Core::Internal::PMC_InitializeNumberFormatInfo

; 184  :             entry_points.ToString = PMC_ToString;

  0023e	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+56, OFFSET ?PMC_ToString@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@PB_WPBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PA_WI@Z ; Palmtree::Math::Core::Internal::PMC_ToString

; 185  :             entry_points.TryParse = PMC_TryParse;

  00248	c7 05 3c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+60, OFFSET ?PMC_TryParse@Internal@Core@Math@Palmtree@@YGHPB_WHPBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PAPAU__tag_PMC_HANDLE_UINT@1234@PAI@Z ; Palmtree::Math::Core::Internal::PMC_TryParse

; 186  :             entry_points.Add_I_X = PMC_Add_I_X;

  00252	c7 05 40 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+64, OFFSET ?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Add_I_X

; 187  :             entry_points.Add_L_X = PMC_Add_L_X;

  0025c	c7 05 44 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+68, OFFSET ?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Add_L_X

; 188  :             entry_points.Add_X_I = PMC_Add_X_I;

  00266	c7 05 48 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+72, OFFSET ?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_I

; 189  :             entry_points.Add_X_L = PMC_Add_X_L;

  00270	c7 05 4c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+76, OFFSET ?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_L

; 190  :             entry_points.Add_X_X = PMC_Add_X_X;

  0027a	c7 05 50 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+80, OFFSET ?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_X

; 191  :             entry_points.Subtruct_I_X = PMC_Subtruct_I_X;

  00284	c7 05 54 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+84, OFFSET ?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X

; 192  :             entry_points.Subtruct_L_X = PMC_Subtruct_L_X;

  0028e	c7 05 58 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+88, OFFSET ?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X

; 193  :             entry_points.Subtruct_X_I = PMC_Subtruct_X_I;

  00298	c7 05 5c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+92, OFFSET ?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I

; 194  :             entry_points.Subtruct_X_L = PMC_Subtruct_X_L;

  002a2	c7 05 60 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+96, OFFSET ?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L

; 195  :             entry_points.Subtruct_X_X = PMC_Subtruct_X_X;

  002ac	c7 05 64 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+100, OFFSET ?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X

; 196  :             entry_points.Multiply_I_X = PMC_Multiply_I_X;

  002b6	c7 05 68 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+104, OFFSET ?PMC_Multiply_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_I_X

; 197  :             entry_points.Multiply_L_X = PMC_Multiply_L_X;

  002c0	c7 05 6c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+108, OFFSET ?PMC_Multiply_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_L_X

; 198  :             entry_points.Multiply_X_I = PMC_Multiply_X_I;

  002ca	c7 05 70 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+112, OFFSET ?PMC_Multiply_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_I

; 199  :             entry_points.Multiply_X_L = PMC_Multiply_X_L;

  002d4	c7 05 74 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+116, OFFSET ?PMC_Multiply_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_L

; 200  :             entry_points.Multiply_X_X = PMC_Multiply_X_X;

  002de	c7 05 78 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+120, OFFSET ?PMC_Multiply_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Multiply_X_X

; 201  :             entry_points.DivRem_I_X = PMC_DivRem_I_X;

  002e8	c7 05 7c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+124, OFFSET ?PMC_DivRem_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@PAI@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_I_X

; 202  :             entry_points.DivRem_L_X = PMC_DivRem_L_X;

  002f2	c7 05 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+128, OFFSET ?PMC_DivRem_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@PA_K@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_L_X

; 203  :             entry_points.DivRem_X_I = PMC_DivRem_X_I;

  002fc	c7 05 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+132, OFFSET ?PMC_DivRem_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@IPAPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_I

; 204  :             entry_points.DivRem_X_L = PMC_DivRem_X_L;

  00306	c7 05 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+136, OFFSET ?PMC_DivRem_X_L@Internal@Core@Math@Palmtree@@YG_KPAU__tag_PMC_HANDLE_UINT@1234@_KPAPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_L

; 205  :             entry_points.DivRem_X_X = PMC_DivRem_X_X;

  00310	c7 05 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+140, OFFSET ?PMC_DivRem_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0PAPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_DivRem_X_X

; 206  :             entry_points.RightShift_X_I = PMC_RightShift_X_I;

  0031a	c7 05 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+148, OFFSET ?PMC_RightShift_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@H@Z ; Palmtree::Math::Core::Internal::PMC_RightShift_X_I

; 207  :             entry_points.LeftShift_X_I = PMC_LeftShift_X_I;

  00324	c7 05 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+144, OFFSET ?PMC_LeftShift_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@H@Z ; Palmtree::Math::Core::Internal::PMC_LeftShift_X_I

; 208  :             entry_points.BitwiseAnd_I_X = PMC_BitwiseAnd_I_X;

  0032e	c7 05 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+152, OFFSET ?PMC_BitwiseAnd_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_I_X

; 209  :             entry_points.BitwiseAnd_L_X = PMC_BitwiseAnd_L_X;

  00338	c7 05 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+156, OFFSET ?PMC_BitwiseAnd_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_L_X

; 210  :             entry_points.BitwiseAnd_X_I = PMC_BitwiseAnd_X_I;

  00342	c7 05 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+160, OFFSET ?PMC_BitwiseAnd_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_I

; 211  :             entry_points.BitwiseAnd_X_L = PMC_BitwiseAnd_X_L;

  0034c	c7 05 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+164, OFFSET ?PMC_BitwiseAnd_X_L@Internal@Core@Math@Palmtree@@YG_KPAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_L

; 212  :             entry_points.BitwiseAnd_X_X = PMC_BitwiseAnd_X_X;

  00356	c7 05 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+168, OFFSET ?PMC_BitwiseAnd_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseAnd_X_X

; 213  :             entry_points.BitwiseOr_I_X = PMC_BitwiseOr_I_X;

  00360	c7 05 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+172, OFFSET ?PMC_BitwiseOr_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_I_X

; 214  :             entry_points.BitwiseOr_L_X = PMC_BitwiseOr_L_X;

  0036a	c7 05 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+176, OFFSET ?PMC_BitwiseOr_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_L_X

; 215  :             entry_points.BitwiseOr_X_I = PMC_BitwiseOr_X_I;

  00374	c7 05 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+180, OFFSET ?PMC_BitwiseOr_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_I

; 216  :             entry_points.BitwiseOr_X_L = PMC_BitwiseOr_X_L;

  0037e	c7 05 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+184, OFFSET ?PMC_BitwiseOr_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_L

; 217  :             entry_points.BitwiseOr_X_X = PMC_BitwiseOr_X_X;

  00388	c7 05 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+188, OFFSET ?PMC_BitwiseOr_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_BitwiseOr_X_X

; 218  :             entry_points.ExclusiveOr_I_X = PMC_ExclusiveOr_I_X;

  00392	c7 05 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+192, OFFSET ?PMC_ExclusiveOr_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_I_X

; 219  :             entry_points.ExclusiveOr_L_X = PMC_ExclusiveOr_L_X;

  0039c	c7 05 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+196, OFFSET ?PMC_ExclusiveOr_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_L_X

; 220  :             entry_points.ExclusiveOr_X_I = PMC_ExclusiveOr_X_I;

  003a6	c7 05 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+200, OFFSET ?PMC_ExclusiveOr_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_I

; 221  :             entry_points.ExclusiveOr_X_L = PMC_ExclusiveOr_X_L;

  003b0	c7 05 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+204, OFFSET ?PMC_ExclusiveOr_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_L

; 222  :             entry_points.ExclusiveOr_X_X = PMC_ExclusiveOr_X_X;

  003ba	c7 05 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+208, OFFSET ?PMC_ExclusiveOr_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_ExclusiveOr_X_X

; 223  :             entry_points.Compare_I_X = PMC_Compare_I_X;

  003c4	c7 05 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+212, OFFSET ?PMC_Compare_I_X@Internal@Core@Math@Palmtree@@YGHIPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Compare_I_X

; 224  :             entry_points.Compare_L_X = PMC_Compare_L_X;

  003ce	c7 05 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+216, OFFSET ?PMC_Compare_L_X@Internal@Core@Math@Palmtree@@YGH_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Compare_L_X

; 225  :             entry_points.Compare_X_I = PMC_Compare_X_I;

  003d8	c7 05 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+220, OFFSET ?PMC_Compare_X_I@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_I

; 226  :             entry_points.Compare_X_L = PMC_Compare_X_L;

  003e2	c7 05 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+224, OFFSET ?PMC_Compare_X_L@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_L

; 227  :             entry_points.Compare_X_X = PMC_Compare_X_X;

  003ec	c7 05 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+228, OFFSET ?PMC_Compare_X_X@Internal@Core@Math@Palmtree@@YGHPAU__tag_PMC_HANDLE_UINT@1234@0@Z ; Palmtree::Math::Core::Internal::PMC_Compare_X_X

; 228  :             entry_points.Equals_I_X = PMC_Equals_I_X;

  003f6	c7 05 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+232, OFFSET ?PMC_Equals_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Equals_I_X

; 229  :             entry_points.Equals_L_X = PMC_Equals_L_X;

  00400	c7 05 ec 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+236, OFFSET ?PMC_Equals_L_X@Internal@Core@Math@Palmtree@@YGI_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Equals_L_X

; 230  :             entry_points.Equals_X_I = PMC_Equals_X_I;

  0040a	c7 05 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+240, OFFSET ?PMC_Equals_X_I@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@I@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_I

; 231  :             entry_points.Equals_X_L = PMC_Equals_X_L;

  00414	c7 05 f4 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+244, OFFSET ?PMC_Equals_X_L@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_L

; 232  :             entry_points.Equals_X_X = PMC_Equals_X_X;

  0041e	c7 05 f8 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+248, OFFSET ?PMC_Equals_X_X@Internal@Core@Math@Palmtree@@YGIPAU__tag_PMC_HANDLE_UINT@1234@0@Z ; Palmtree::Math::Core::Internal::PMC_Equals_X_X

; 233  :             entry_points.GreatestCommonDivisor_I_X = PMC_GreatestCommonDivisor_I_X;

  00428	c7 05 fc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+252, OFFSET ?PMC_GreatestCommonDivisor_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_I_X

; 234  :             entry_points.GreatestCommonDivisor_L_X = PMC_GreatestCommonDivisor_L_X;

  00432	c7 05 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+256, OFFSET ?PMC_GreatestCommonDivisor_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_L_X

; 235  :             entry_points.GreatestCommonDivisor_X_I = PMC_GreatestCommonDivisor_X_I;

  0043c	c7 05 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+260, OFFSET ?PMC_GreatestCommonDivisor_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_I

; 236  :             entry_points.GreatestCommonDivisor_X_L = PMC_GreatestCommonDivisor_X_L;

  00446	c7 05 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+264, OFFSET ?PMC_GreatestCommonDivisor_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_L

; 237  :             entry_points.GreatestCommonDivisor_X_X = PMC_GreatestCommonDivisor_X_X;

  00450	c7 05 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+268, OFFSET ?PMC_GreatestCommonDivisor_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_GreatestCommonDivisor_X_X

; 238  :             entry_points.Pow_X_I = PMC_Pow_X_I;

  0045a	c7 05 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+272, OFFSET ?PMC_Pow_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Pow_X_I

; 239  :             entry_points.Pow_X_L = PMC_Pow_X_L;

  00464	c7 05 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+276, OFFSET ?PMC_Pow_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Pow_X_L

; 240  :             entry_points.ModPow_X_X_X = PMC_ModPow_X_X_X;

  0046e	c7 05 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+280, OFFSET ?PMC_ModPow_X_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@00@Z ; Palmtree::Math::Core::Internal::PMC_ModPow_X_X_X

; 241  :             entry_points.GetConstantValue_I = PMC_GetConstantValue_I;

  00478	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+24, OFFSET ?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I

; 242  :             entry_points.Clone_X = PMC_Clone_X;

  00482	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+36, OFFSET ?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Clone_X

; 243  :             entry_points.GetAllocatedMemorySize = PMC_GetAllocatedMemorySize;

  0048c	c7 05 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+40, OFFSET ?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize

; 244  : 
; 245  :             entry_points.FromByteArrayForSINT = PMC_FromByteArrayForSINT;

  00496	c7 05 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+284, OFFSET ?PMC_FromByteArrayForSINT@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAEIPAD@Z ; Palmtree::Math::Core::Internal::PMC_FromByteArrayForSINT

; 246  :             entry_points.ToByteArrayForSINT = PMC_ToByteArrayForSINT;

  004a0	c7 05 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+288, OFFSET ?PMC_ToByteArrayForSINT@Internal@Core@Math@Palmtree@@YGIDPAU__tag_PMC_HANDLE_UINT@1234@PAEI@Z ; Palmtree::Math::Core::Internal::PMC_ToByteArrayForSINT

; 247  :             entry_points.TryParseForSINT = PMC_TryParseForSINT;

  004aa	c7 05 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A+292, OFFSET ?PMC_TryParseForSINT@Internal@Core@Math@Palmtree@@YGHPB_WHPBU__tag_PMC_NUMBER_FORMAT_INFO@1234@PADPAPAU__tag_PMC_HANDLE_UINT@1234@PAI@Z ; Palmtree::Math::Core::Internal::PMC_TryParseForSINT

; 248  : 
; 249  :             initialized = 1;

  004b4	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?initialized@Internal@Core@Math@Palmtree@@3DA, 1
$LN2@PMC_UINT_I:

; 250  :         }
; 251  : 
; 252  :         return (&entry_points);

  004bb	b8 00 00 00 00	 mov	 eax, OFFSET ?entry_points@Internal@Core@Math@Palmtree@@3U__tag_PMC_UINT_ENTRY_POINTS@1234@A

; 253  :     }

  004c0	8b e5		 mov	 esp, ebp
  004c2	5d		 pop	 ebp
  004c3	c2 04 00	 ret	 4
$LN40@PMC_UINT_I:

; 167  :                 return (nullptr);

  004c6	33 c0		 xor	 eax, eax

; 253  :     }

  004c8	8b e5		 mov	 esp, ebp
  004ca	5d		 pop	 ebp
  004cb	c2 04 00	 ret	 4
_PMC_UINT_Initialize@4 ENDP
_TEXT	ENDS
END
