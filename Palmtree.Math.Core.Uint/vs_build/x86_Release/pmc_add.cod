; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\pmc_add.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_X_Imp
PUBLIC	?Initialize_Add@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Add
PUBLIC	?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Add_I_X
PUBLIC	?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Add_L_X
PUBLIC	?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_I
PUBLIC	?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_L
PUBLIC	?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_X
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_1CM@CADFJOJJ@?$AAp?$AAc?$AAm?$AA_?$AAa?$AAd?$AAd?$AA?4?$AAc?$AAp?$AAp?$AA?$DL?$AAD?$AAo?$AAC@ ; `string'
PUBLIC	??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ ; `string'
PUBLIC	__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_13JAOPNPKD@?$AAv@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_13ICFKHAEN@?$AAu@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::DuplicateNumber
EXTRN	?From_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z:PROC ; Palmtree::Math::Core::Internal::From_I_Imp
EXTRN	?From_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@_K@Z:PROC ; Palmtree::Math::Core::Internal::From_L_Imp
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A:BYTE ; Palmtree::Math::Core::Internal::number_zero
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?fp_Add_Imp@Internal@Core@Math@Palmtree@@3P6AXPAII0I0I@ZA DD 01H DUP (?) ; Palmtree::Math::Core::Internal::fp_Add_Imp
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_13ICFKHAEN@?$AAu@
CONST	SEGMENT
??_C@_13ICFKHAEN@?$AAu@ DB 'u', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13JAOPNPKD@?$AAv@
CONST	SEGMENT
??_C@_13JAOPNPKD@?$AAv@ DB 'v', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
CONST	SEGMENT
??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ DB 085H
	DB	'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv', 01fH, 'u'
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@CADFJOJJ@?$AAp?$AAc?$AAm?$AA_?$AAa?$AAd?$AAd?$AA?4?$AAc?$AAp?$AAp?$AA?$DL?$AAD?$AAo?$AAC@
CONST	SEGMENT
??_C@_1CM@CADFJOJJ@?$AAp?$AAc?$AAm?$AA_?$AAa?$AAd?$AAd?$AA?4?$AAc?$AAp?$AAp?$AA?$DL?$AAD?$AAo?$AAC@ DB 'p'
	DB	00H, 'c', 00H, 'm', 00H, '_', 00H, 'a', 00H, 'd', 00H, 'd', 00H
	DB	'.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, ';', 00H, 'D', 00H, 'o'
	DB	00H, 'C', 00H, 'a', 00H, 'r', 00H, 'r', 00H, 'y', 00H, ';', 00H
	DB	'1', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT __CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DD	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DD	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DD	FLAT:??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$1
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z$0
__ehfuncinfo$?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$1
__ehfuncinfo$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z$0
__ehfuncinfo$?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z$0
__ehfuncinfo$?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z$0
__ehfuncinfo$?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z$0
__ehfuncinfo$?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z$0
__ehfuncinfo$?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_Gexception@std@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1exception@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
_TEXT	SEGMENT
_root$2 = -44						; size = 16
_root$3 = -44						; size = 16
_w$1$ = -28						; size = 4
_w_count$1$ = -24					; size = 4
_u_count$1$ = -20					; size = 4
_up$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_w_buf$1$ = 8						; size = 4
_u_bit_count$1$ = 8					; size = 4
_c$4 = 8						; size = 1
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_L_Imp, COMDAT

; 390  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 391  :         if (u->IS_ZERO)

  00028	8b 7d 08	 mov	 edi, DWORD PTR _u$[ebp]
  0002b	f6 47 04 01	 test	 BYTE PTR [edi+4], 1
  0002f	74 3f		 je	 SHORT $LN2@PMC_Add_X_

; 392  :         {
; 393  :             // u が 0 である場合
; 394  : 
; 395  :             if (v == 0)

  00031	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00034	8b c1		 mov	 eax, ecx
  00036	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp+4]
  00039	0b c2		 or	 eax, edx
  0003b	75 17		 jne	 SHORT $LN4@PMC_Add_X_

; 396  :             {
; 397  :                 // v が 0 である場合
; 398  : 
; 399  :                 // u と v がともに 0 であるので、加算結果の 0 を呼び出し元に返す。
; 400  :                 return (&number_zero);

  0003d	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 456  :                         root.CheckNumber(w);
; 457  :                         CommitNumber(w);
; 458  :                         root.UnlinkNumber(w);
; 459  :                         return (w);
; 460  :                     }
; 461  :                 }
; 462  :                 else
; 463  :                 {
; 464  :                     // _UINT64_T が 1 ワードで表現できる場合
; 465  : 
; 466  :                     ResourceHolderUINT root;
; 467  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 468  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);
; 469  :                     __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;
; 470  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 471  :                     Add_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);
; 472  :                     root.CheckNumber(w);
; 473  :                     CommitNumber(w);
; 474  :                     root.UnlinkNumber(w);
; 475  :                     return (w);
; 476  :                 }
; 477  :             }
; 478  :         }
; 479  :     }

  00042	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00045	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004c	59		 pop	 ecx
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
$LN4@PMC_Add_X_:

; 401  :             }
; 402  :             else
; 403  :             {
; 404  :                 // v が 0 ではない場合
; 405  : 
; 406  :                 // 加算結果となる v の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 407  :                 return (From_L_Imp(v));

  00054	52		 push	 edx
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ?From_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@_K@Z ; Palmtree::Math::Core::Internal::From_L_Imp
  0005b	83 c4 08	 add	 esp, 8

; 456  :                         root.CheckNumber(w);
; 457  :                         CommitNumber(w);
; 458  :                         root.UnlinkNumber(w);
; 459  :                         return (w);
; 460  :                     }
; 461  :                 }
; 462  :                 else
; 463  :                 {
; 464  :                     // _UINT64_T が 1 ワードで表現できる場合
; 465  : 
; 466  :                     ResourceHolderUINT root;
; 467  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 468  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);
; 469  :                     __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;
; 470  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 471  :                     Add_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);
; 472  :                     root.CheckNumber(w);
; 473  :                     CommitNumber(w);
; 474  :                     root.UnlinkNumber(w);
; 475  :                     return (w);
; 476  :                 }
; 477  :             }
; 478  :         }
; 479  :     }

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
$LN2@PMC_Add_X_:

; 408  :             }
; 409  :         }
; 410  :         else
; 411  :         {
; 412  :             // u が 0 ではない場合
; 413  : 
; 414  :             if (v == 0)

  00070	8b 5d 0c	 mov	 ebx, DWORD PTR _v$[ebp]
  00073	8b c3		 mov	 eax, ebx
  00075	8b 75 10	 mov	 esi, DWORD PTR _v$[ebp+4]
  00078	0b c6		 or	 eax, esi
  0007a	75 1b		 jne	 SHORT $LN6@PMC_Add_X_

; 415  :             {
; 416  :                 // v が 0 である場合
; 417  : 
; 418  :                 // 加算結果となる u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 419  :                 return (DuplicateNumber(u));

  0007c	57		 push	 edi
  0007d	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00082	83 c4 04	 add	 esp, 4

; 456  :                         root.CheckNumber(w);
; 457  :                         CommitNumber(w);
; 458  :                         root.UnlinkNumber(w);
; 459  :                         return (w);
; 460  :                     }
; 461  :                 }
; 462  :                 else
; 463  :                 {
; 464  :                     // _UINT64_T が 1 ワードで表現できる場合
; 465  : 
; 466  :                     ResourceHolderUINT root;
; 467  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 468  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);
; 469  :                     __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;
; 470  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 471  :                     Add_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);
; 472  :                     root.CheckNumber(w);
; 473  :                     CommitNumber(w);
; 474  :                     root.UnlinkNumber(w);
; 475  :                     return (w);
; 476  :                 }
; 477  :             }
; 478  :         }
; 479  :     }

  00085	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008f	59		 pop	 ecx
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
$LN6@PMC_Add_X_:

; 420  :             }
; 421  :             else
; 422  :             {
; 423  :                 // u と v がともに 0 ではない場合
; 424  : 
; 425  :                 // u と v の和を計算する
; 426  :                 if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)
; 427  :                 {
; 428  :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 429  : 
; 430  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00097	8b 47 14	 mov	 eax, DWORD PTR [edi+20]

; 431  :                     _UINT32_T v_hi;
; 432  :                     _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);
; 433  :                     if (v_hi == 0)

  0009a	8d 4d d4	 lea	 ecx, DWORD PTR _root$3[ebp]
  0009d	89 45 08	 mov	 DWORD PTR _u_bit_count$1$[ebp], eax
  000a0	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000a5	85 f6		 test	 esi, esi
  000a7	75 47		 jne	 SHORT $LN10@PMC_Add_X_

; 434  :                     {
; 435  :                         // y の値が 32bit で表現可能な場合
; 436  : 
; 437  :                         ResourceHolderUINT root;

  000a9	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 422  :             if (x == 0)

  000ac	85 db		 test	 ebx, ebx
  000ae	75 05		 jne	 SHORT $LN19@PMC_Add_X_

; 423  :                 return (sizeof(x) * 8);

  000b0	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  000b3	eb 0a		 jmp	 SHORT $LN18@PMC_Add_X_
$LN19@PMC_Add_X_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  000b5	0f bd c3	 bsr	 eax, ebx

; 432  :             return (sizeof(x) * 8 - 1 - pos);

  000b8	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  000bd	2b c8		 sub	 ecx, eax
$LN18@PMC_Add_X_:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 438  :                         __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);

  000bf	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  000c4	2b c1		 sub	 eax, ecx

; 440  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000c6	8d 4d d4	 lea	 ecx, DWORD PTR _root$3[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 167  :             return (x >= y ? x : y);

  000c9	39 45 08	 cmp	 DWORD PTR _u_bit_count$1$[ebp], eax
  000cc	0f 43 45 08	 cmovae	 eax, DWORD PTR _u_bit_count$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 439  :                         __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;

  000d0	40		 inc	 eax

; 440  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000d7	8b f0		 mov	 esi, eax

; 441  :                         Add_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v_lo, w->BLOCK, w->BLOCK_COUNT);

  000d9	ff 76 20	 push	 DWORD PTR [esi+32]
  000dc	ff 76 24	 push	 DWORD PTR [esi+36]
  000df	53		 push	 ebx
  000e0	ff 77 10	 push	 DWORD PTR [edi+16]
  000e3	ff 77 24	 push	 DWORD PTR [edi+36]
  000e6	e8 00 00 00 00	 call	 ?Add_X_1W@Internal@Core@Math@Palmtree@@YAXPAIII0I@Z ; Palmtree::Math::Core::Internal::Add_X_1W

; 442  :                         root.CheckNumber(w);
; 443  :                         CommitNumber(w);
; 444  :                         root.UnlinkNumber(w);
; 445  :                         return (w);

  000eb	e9 b4 00 00 00	 jmp	 $LN51@PMC_Add_X_
$LN10@PMC_Add_X_:

; 446  :                     }
; 447  :                     else
; 448  :                     {
; 449  :                         // y の値が 32bit では表現できない場合
; 450  : 
; 451  :                         ResourceHolderUINT root;

  000f0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 432  :             return (sizeof(x) * 8 - 1 - pos);

  000f7	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  000fc	0f bd c6	 bsr	 eax, esi
  000ff	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 452  :                         __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);

  00101	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00106	2b c1		 sub	 eax, ecx

; 454  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00108	8d 4d d4	 lea	 ecx, DWORD PTR _root$2[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 167  :             return (x >= y ? x : y);

  0010b	39 45 08	 cmp	 DWORD PTR _u_bit_count$1$[ebp], eax
  0010e	0f 43 45 08	 cmovae	 eax, DWORD PTR _u_bit_count$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 453  :                         __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;

  00112	40		 inc	 eax

; 454  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber

; 105  :         __UNIT_TYPE* up = u_buf;

  00119	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]

; 454  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0011c	8b f0		 mov	 esi, eax
  0011e	89 75 e4	 mov	 DWORD PTR _w$1$[ebp], esi

; 455  :                         Add_X_2W(u->BLOCK, u->UNIT_WORD_COUNT, v_hi, v_lo, w->BLOCK, w->BLOCK_COUNT);

  00121	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00124	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  00127	89 45 e8	 mov	 DWORD PTR _w_count$1$[ebp], eax
  0012a	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0012d	89 55 08	 mov	 DWORD PTR _w_buf$1$[ebp], edx
  00130	89 45 ec	 mov	 DWORD PTR _u_count$1$[ebp], eax

; 109  :         if (u_count < 2)

  00133	83 f8 02	 cmp	 eax, 2
  00136	73 21		 jae	 SHORT $LN29@PMC_Add_X_

; 110  :         {
; 111  :             // x が 1 ワードしかなかった場合
; 112  : 
; 113  :             // 最下位ワードの加算を行う
; 114  :             c = _ADD_UNIT(0, up[0], v_lo, &wp[0]);

  00138	8b 09		 mov	 ecx, DWORD PTR [ecx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0013a	b8 00 00 00 00	 mov	 eax, 0
  0013f	03 cb		 add	 ecx, ebx
  00141	89 0a		 mov	 DWORD PTR [edx], ecx
  00143	13 45 10	 adc	 eax, DWORD PTR _v$[ebp+4]
  00146	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00149	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 120  :             if (c)

  0014c	84 c9		 test	 cl, cl
  0014e	74 57		 je	 SHORT $LN30@PMC_Add_X_

; 121  :                 wp[2] = 1;

  00150	c7 42 08 01 00
	00 00		 mov	 DWORD PTR [edx+8], 1

; 122  : 
; 123  :             // 正常復帰する。
; 124  :             return;

  00157	eb 4e		 jmp	 SHORT $LN30@PMC_Add_X_
$LN29@PMC_Add_X_:

; 131  :             c = _ADD_UNIT(0, *up++, v_lo, wp++);

  00159	8b 01		 mov	 eax, DWORD PTR [ecx]
  0015b	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  0015e	83 c1 04	 add	 ecx, 4

; 134  :             c = _ADD_UNIT(c, *up++, v_hi, wp++);

  00161	8b f7		 mov	 esi, edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00163	03 c3		 add	 eax, ebx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 131  :             c = _ADD_UNIT(0, *up++, v_lo, wp++);

  00165	89 4d f0	 mov	 DWORD PTR _up$1$[ebp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00168	8b 4d 08	 mov	 ecx, DWORD PTR _w_buf$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 134  :             c = _ADD_UNIT(c, *up++, v_hi, wp++);

  0016b	8b 5d f0	 mov	 ebx, DWORD PTR _up$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0016e	0f 92 c2	 setb	 dl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 134  :             c = _ADD_UNIT(c, *up++, v_hi, wp++);

  00171	83 c7 04	 add	 edi, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00174	89 01		 mov	 DWORD PTR [ecx], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 134  :             c = _ADD_UNIT(c, *up++, v_hi, wp++);

  00176	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00178	83 c3 04	 add	 ebx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0017b	80 c2 ff	 add	 dl, 255			; 000000ffH
  0017e	13 4d 10	 adc	 ecx, DWORD PTR _v$[ebp+4]
  00181	89 0e		 mov	 DWORD PTR [esi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 136  :             w_count -= 2;

  00183	8b 4d e8	 mov	 ecx, DWORD PTR _w_count$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00186	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 134  :             c = _ADD_UNIT(c, *up++, v_hi, wp++);

  00189	88 45 08	 mov	 BYTE PTR _c$4[ebp], al

; 136  :             w_count -= 2;

  0018c	83 e9 02	 sub	 ecx, 2
  0018f	8b 45 ec	 mov	 eax, DWORD PTR _u_count$1$[ebp]

; 137  : 
; 138  :             // 残りの桁の繰り上がりを計算し、復帰する。
; 139  :             DoCarry(c, up, u_count, wp, w_count);

  00192	51		 push	 ecx
  00193	57		 push	 edi
  00194	83 e8 02	 sub	 eax, 2
  00197	50		 push	 eax
  00198	53		 push	 ebx
  00199	ff 75 08	 push	 DWORD PTR _c$4[ebp]
  0019c	e8 00 00 00 00	 call	 ?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoCarry
  001a1	8b 75 e4	 mov	 esi, DWORD PTR _w$1$[ebp]
$LN51@PMC_Add_X_:

; 456  :                         root.CheckNumber(w);
; 457  :                         CommitNumber(w);
; 458  :                         root.UnlinkNumber(w);
; 459  :                         return (w);
; 460  :                     }
; 461  :                 }
; 462  :                 else
; 463  :                 {
; 464  :                     // _UINT64_T が 1 ワードで表現できる場合
; 465  : 
; 466  :                     ResourceHolderUINT root;
; 467  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 468  :                     __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);
; 469  :                     __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;
; 470  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 471  :                     Add_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);
; 472  :                     root.CheckNumber(w);
; 473  :                     CommitNumber(w);
; 474  :                     root.UnlinkNumber(w);
; 475  :                     return (w);
; 476  :                 }
; 477  :             }
; 478  :         }
; 479  :     }

  001a4	83 c4 14	 add	 esp, 20			; 00000014H
$LN30@PMC_Add_X_:
  001a7	56		 push	 esi
  001a8	8d 4d d4	 lea	 ecx, DWORD PTR _root$2[ebp]
  001ab	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
  001b0	56		 push	 esi
  001b1	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  001b6	83 c4 04	 add	 esp, 4
  001b9	8d 4d d4	 lea	 ecx, DWORD PTR _root$2[ebp]
  001bc	56		 push	 esi
  001bd	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
  001c2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001c9	8d 4d d4	 lea	 ecx, DWORD PTR _root$2[ebp]
  001cc	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  001d1	8b c6		 mov	 eax, esi
  001d3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001d6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001dd	59		 pop	 ecx
  001de	5f		 pop	 edi
  001df	5e		 pop	 esi
  001e0	5b		 pop	 ebx
  001e1	8b e5		 mov	 esp, ebp
  001e3	5d		 pop	 ebp
  001e4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _root$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$1:
  00008	8d 4d d4	 lea	 ecx, DWORD PTR _root$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Add_X_L_Imp
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
_TEXT	SEGMENT
_root$2 = -36						; size = 16
_nw$1$ = -20						; size = 4
_c$3 = -16						; size = 1
__$EHRec$ = -12						; size = 12
_u_ptr$1$ = 8						; size = 4
_nu$ = 8						; size = 4
_v$ = 12						; size = 4
?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_I_Imp, COMDAT

; 299  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 300  :         if (nu->IS_ZERO)

  00028	8b 5d 08	 mov	 ebx, DWORD PTR _nu$[ebp]
  0002b	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  0002f	74 39		 je	 SHORT $LN2@PMC_Add_X_

; 301  :         {
; 302  :             // x が 0 である場合
; 303  : 
; 304  :             if (v == 0)

  00031	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00034	85 c0		 test	 eax, eax
  00036	75 17		 jne	 SHORT $LN4@PMC_Add_X_

; 305  :             {
; 306  :                 // y が 0 である場合
; 307  : 
; 308  :                 // x と y がともに 0 であるので、加算結果の 0 を呼び出し元に返す。
; 309  :                 return (&number_zero);

  00038	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 345  :             }
; 346  :         }
; 347  :     }

  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
$LN4@PMC_Add_X_:

; 310  :             }
; 311  :             else
; 312  :             {
; 313  :                 // y が 0 ではない場合
; 314  : 
; 315  :                 // 加算結果となる y の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 316  :                 return (From_I_Imp(v));

  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?From_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::From_I_Imp
  00055	83 c4 04	 add	 esp, 4

; 345  :             }
; 346  :         }
; 347  :     }

  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
$LN2@PMC_Add_X_:

; 317  :             }
; 318  :         }
; 319  :         else
; 320  :         {
; 321  :             // x が 0 ではない場合
; 322  : 
; 323  :             if (v == 0)

  0006a	8b 75 0c	 mov	 esi, DWORD PTR _v$[ebp]
  0006d	85 f6		 test	 esi, esi
  0006f	75 1b		 jne	 SHORT $LN6@PMC_Add_X_

; 324  :             {
; 325  :                 // y が 0 である場合
; 326  : 
; 327  :                 // 加算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 328  :                 return (DuplicateNumber(nu));

  00071	53		 push	 ebx
  00072	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00077	83 c4 04	 add	 esp, 4

; 345  :             }
; 346  :         }
; 347  :     }

  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00084	59		 pop	 ecx
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
$LN6@PMC_Add_X_:

; 329  :             }
; 330  :             else
; 331  :             {
; 332  :                 // x と y がともに 0 ではない場合
; 333  : 
; 334  :                 // x と y の和を計算する
; 335  :                 ResourceHolderUINT root;

  0008c	8d 4d dc	 lea	 ecx, DWORD PTR _root$2[ebp]
  0008f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00094	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 432  :             return (sizeof(x) * 8 - 1 - pos);

  0009b	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  000a0	0f bd c6	 bsr	 eax, esi
  000a3	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 337  :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  000a5	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  000aa	2b c1		 sub	 eax, ecx

; 339  :                 NUMBER_HEADER* nw = root.AllocateNumber(w_bit_count);

  000ac	8d 4d dc	 lea	 ecx, DWORD PTR _root$2[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 167  :             return (x >= y ? x : y);

  000af	39 43 14	 cmp	 DWORD PTR [ebx+20], eax
  000b2	0f 43 43 14	 cmovae	 eax, DWORD PTR [ebx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 338  :                 __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;

  000b6	40		 inc	 eax

; 339  :                 NUMBER_HEADER* nw = root.AllocateNumber(w_bit_count);

  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber

; 340  :                 Add_X_1W(nu->BLOCK, nu->UNIT_WORD_COUNT, v, nw->BLOCK, nw->BLOCK_COUNT);

  000bd	8b 5b 10	 mov	 ebx, DWORD PTR [ebx+16]
  000c0	89 45 ec	 mov	 DWORD PTR _nw$1$[ebp], eax
  000c3	8b 78 24	 mov	 edi, DWORD PTR [eax+36]

; 95   :         c = _ADD_UNIT(0, *u_ptr++, v, w_ptr++);

  000c6	8b d7		 mov	 edx, edi

; 340  :                 Add_X_1W(nu->BLOCK, nu->UNIT_WORD_COUNT, v, nw->BLOCK, nw->BLOCK_COUNT);

  000c8	8b 70 20	 mov	 esi, DWORD PTR [eax+32]

; 95   :         c = _ADD_UNIT(0, *u_ptr++, v, w_ptr++);

  000cb	83 c7 04	 add	 edi, 4

; 340  :                 Add_X_1W(nu->BLOCK, nu->UNIT_WORD_COUNT, v, nw->BLOCK, nw->BLOCK_COUNT);

  000ce	8b 45 08	 mov	 eax, DWORD PTR _nu$[ebp]
  000d1	8b 40 24	 mov	 eax, DWORD PTR [eax+36]

; 95   :         c = _ADD_UNIT(0, *u_ptr++, v, w_ptr++);

  000d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d6	83 c0 04	 add	 eax, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000d9	03 4d 0c	 add	 ecx, DWORD PTR _v$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 95   :         c = _ADD_UNIT(0, *u_ptr++, v, w_ptr++);

  000dc	89 45 08	 mov	 DWORD PTR _u_ptr$1$[ebp], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000df	0f 92 c0	 setb	 al
  000e2	89 0a		 mov	 DWORD PTR [edx], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 97   :         --w_count;

  000e4	4e		 dec	 esi
  000e5	88 45 f0	 mov	 BYTE PTR _c$3[ebp], al

; 98   : 
; 99   :         // 残りの桁の繰上りを行い復帰する。
; 100  :         DoCarry(c, u_ptr, u_count, w_ptr, w_count);

  000e8	56		 push	 esi
  000e9	57		 push	 edi
  000ea	4b		 dec	 ebx
  000eb	53		 push	 ebx
  000ec	ff 75 08	 push	 DWORD PTR _u_ptr$1$[ebp]
  000ef	ff 75 f0	 push	 DWORD PTR _c$3[ebp]
  000f2	e8 00 00 00 00	 call	 ?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoCarry

; 341  :                 root.CheckNumber(nw);

  000f7	8b 75 ec	 mov	 esi, DWORD PTR _nw$1$[ebp]
  000fa	8d 4d dc	 lea	 ecx, DWORD PTR _root$2[ebp]

; 100  :         DoCarry(c, u_ptr, u_count, w_ptr, w_count);

  000fd	83 c4 14	 add	 esp, 20			; 00000014H

; 341  :                 root.CheckNumber(nw);

  00100	56		 push	 esi
  00101	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 342  :                 CommitNumber(nw);

  00106	56		 push	 esi
  00107	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  0010c	83 c4 04	 add	 esp, 4

; 343  :                 root.UnlinkNumber(nw);

  0010f	8d 4d dc	 lea	 ecx, DWORD PTR _root$2[ebp]
  00112	56		 push	 esi
  00113	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 344  :                 return (nw);

  00118	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0011f	8d 4d dc	 lea	 ecx, DWORD PTR _root$2[ebp]
  00122	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00127	8b c6		 mov	 eax, esi

; 345  :             }
; 346  :         }
; 347  :     }

  00129	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0012c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00133	59		 pop	 ecx
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _root$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Add_X_I_Imp
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?Add_Imp_using_ADCX@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z
_TEXT	SEGMENT
tv5377 = -4						; size = 4
tv5381 = 8						; size = 4
_u_buf$ = 8						; size = 4
_c$ = 12						; size = 1
_u_count$ = 12						; size = 4
_count$1$ = 16						; size = 4
_v_buf$ = 16						; size = 4
tv5384 = 20						; size = 4
_v_count$ = 20						; size = 4
_c$1$ = 23						; size = 1
_w_buf$ = 24						; size = 4
_w_count$ = 28						; size = 4
?Add_Imp_using_ADCX@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z PROC ; Palmtree::Math::Core::Internal::Add_Imp_using_ADCX, COMDAT

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 55 14	 mov	 edx, DWORD PTR _v_count$[ebp]
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _u_count$[ebp]

; 223  :         // x のワード長が y のワード長以上であるようにする
; 224  :         if (u_count < v_count)
; 225  :         {
; 226  :             __UNIT_TYPE* t_buf = u_buf;
; 227  :             u_buf = v_buf;
; 228  :             v_buf = t_buf;
; 229  :             __UNIT_TYPE t_count = u_count;
; 230  :             u_count = v_count;
; 231  :             v_count = t_count;
; 232  :         }
; 233  :         __UNIT_TYPE* up = u_buf;

  0000a	3b ca		 cmp	 ecx, edx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _u_buf$[ebp]
  0000f	53		 push	 ebx
  00010	56		 push	 esi
  00011	8b 75 10	 mov	 esi, DWORD PTR _v_buf$[ebp]
  00014	8b d8		 mov	 ebx, eax
  00016	57		 push	 edi
  00017	8b f9		 mov	 edi, ecx
  00019	0f 43 de	 cmovae	 ebx, esi
  0001c	0f 43 fa	 cmovae	 edi, edx
  0001f	0f 43 f0	 cmovae	 esi, eax
  00022	89 7d 08	 mov	 DWORD PTR tv5381[ebp], edi
  00025	8b fa		 mov	 edi, edx

; 234  :         __UNIT_TYPE* vp = v_buf;
; 235  :         __UNIT_TYPE* wp = w_buf;
; 236  :         char c = 0;
; 237  : 
; 238  :         // まず 32 ワードずつ加算をする。
; 239  :         __UNIT_TYPE count = v_count >> 5;

  00027	8b 55 08	 mov	 edx, DWORD PTR tv5381[ebp]
  0002a	0f 43 f9	 cmovae	 edi, ecx
  0002d	8b c2		 mov	 eax, edx
  0002f	89 7d fc	 mov	 DWORD PTR tv5377[ebp], edi
  00032	8b 7d 18	 mov	 edi, DWORD PTR _w_buf$[ebp]
  00035	32 c9		 xor	 cl, cl
  00037	c1 e8 05	 shr	 eax, 5
  0003a	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl
  0003d	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl
  00040	89 45 10	 mov	 DWORD PTR _count$1$[ebp], eax

; 240  :         while (count != 0)

  00043	85 c0		 test	 eax, eax
  00045	0f 84 ac 01 00
	00		 je	 $LN3@Add_Imp_us

; 223  :         // x のワード長が y のワード長以上であるようにする
; 224  :         if (u_count < v_count)
; 225  :         {
; 226  :             __UNIT_TYPE* t_buf = u_buf;
; 227  :             u_buf = v_buf;
; 228  :             v_buf = t_buf;
; 229  :             __UNIT_TYPE t_count = u_count;
; 230  :             u_count = v_count;
; 231  :             v_count = t_count;
; 232  :         }
; 233  :         __UNIT_TYPE* up = u_buf;

  0004b	8b 55 10	 mov	 edx, DWORD PTR _count$1$[ebp]
  0004e	8b c3		 mov	 eax, ebx
  00050	2b c7		 sub	 eax, edi
  00052	89 45 14	 mov	 DWORD PTR tv5384[ebp], eax
$LL2@Add_Imp_us:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 296  :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00055	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00057	80 c1 ff	 add	 cl, 255			; 000000ffH
  0005a	8b 4d 14	 mov	 ecx, DWORD PTR tv5384[ebp]
  0005d	66 0f 38 f6 03	 adcx	 eax, DWORD PTR [ebx]
  00062	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 297  :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  00064	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00067	66 0f 38 f6 44
	39 04		 adcx	 eax, DWORD PTR [ecx+edi+4]
  0006e	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 298  :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  00071	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00074	66 0f 38 f6 43
	08		 adcx	 eax, DWORD PTR [ebx+8]
  0007a	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 299  :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  0007d	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00080	66 0f 38 f6 43
	0c		 adcx	 eax, DWORD PTR [ebx+12]
  00086	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 300  :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  00089	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0008c	66 0f 38 f6 43
	10		 adcx	 eax, DWORD PTR [ebx+16]
  00092	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 301  :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  00095	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00098	66 0f 38 f6 43
	14		 adcx	 eax, DWORD PTR [ebx+20]
  0009e	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 302  :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  000a1	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000a4	66 0f 38 f6 43
	18		 adcx	 eax, DWORD PTR [ebx+24]
  000aa	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 303  :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  000ad	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000b0	66 0f 38 f6 43
	1c		 adcx	 eax, DWORD PTR [ebx+28]
  000b6	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 304  :     c = _ADDX_UNIT(c, xp[8], yp[8], &zp[8]);

  000b9	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000bc	66 0f 38 f6 43
	20		 adcx	 eax, DWORD PTR [ebx+32]
  000c2	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 305  :     c = _ADDX_UNIT(c, xp[9], yp[9], &zp[9]);

  000c5	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000c8	66 0f 38 f6 43
	24		 adcx	 eax, DWORD PTR [ebx+36]
  000ce	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 306  :     c = _ADDX_UNIT(c, xp[10], yp[10], &zp[10]);

  000d1	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000d4	66 0f 38 f6 43
	28		 adcx	 eax, DWORD PTR [ebx+40]
  000da	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 307  :     c = _ADDX_UNIT(c, xp[11], yp[11], &zp[11]);

  000dd	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000e0	66 0f 38 f6 43
	2c		 adcx	 eax, DWORD PTR [ebx+44]
  000e6	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 308  :     c = _ADDX_UNIT(c, xp[12], yp[12], &zp[12]);

  000e9	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000ec	66 0f 38 f6 43
	30		 adcx	 eax, DWORD PTR [ebx+48]
  000f2	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 309  :     c = _ADDX_UNIT(c, xp[13], yp[13], &zp[13]);

  000f5	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000f8	66 0f 38 f6 43
	34		 adcx	 eax, DWORD PTR [ebx+52]
  000fe	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 310  :     c = _ADDX_UNIT(c, xp[14], yp[14], &zp[14]);

  00101	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00104	66 0f 38 f6 43
	38		 adcx	 eax, DWORD PTR [ebx+56]
  0010a	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 311  :     c = _ADDX_UNIT(c, xp[15], yp[15], &zp[15]);

  0010d	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00110	66 0f 38 f6 43
	3c		 adcx	 eax, DWORD PTR [ebx+60]
  00116	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 312  :     c = _ADDX_UNIT(c, xp[16], yp[16], &zp[16]);

  00119	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0011c	66 0f 38 f6 43
	40		 adcx	 eax, DWORD PTR [ebx+64]
  00122	89 47 40	 mov	 DWORD PTR [edi+64], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 313  :     c = _ADDX_UNIT(c, xp[17], yp[17], &zp[17]);

  00125	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00128	66 0f 38 f6 43
	44		 adcx	 eax, DWORD PTR [ebx+68]
  0012e	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 314  :     c = _ADDX_UNIT(c, xp[18], yp[18], &zp[18]);

  00131	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00134	66 0f 38 f6 43
	48		 adcx	 eax, DWORD PTR [ebx+72]
  0013a	89 47 48	 mov	 DWORD PTR [edi+72], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 315  :     c = _ADDX_UNIT(c, xp[19], yp[19], &zp[19]);

  0013d	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00140	66 0f 38 f6 43
	4c		 adcx	 eax, DWORD PTR [ebx+76]
  00146	89 47 4c	 mov	 DWORD PTR [edi+76], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 316  :     c = _ADDX_UNIT(c, xp[20], yp[20], &zp[20]);

  00149	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0014c	66 0f 38 f6 43
	50		 adcx	 eax, DWORD PTR [ebx+80]
  00152	89 47 50	 mov	 DWORD PTR [edi+80], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 317  :     c = _ADDX_UNIT(c, xp[21], yp[21], &zp[21]);

  00155	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00158	66 0f 38 f6 43
	54		 adcx	 eax, DWORD PTR [ebx+84]
  0015e	89 47 54	 mov	 DWORD PTR [edi+84], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 318  :     c = _ADDX_UNIT(c, xp[22], yp[22], &zp[22]);

  00161	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00164	66 0f 38 f6 43
	58		 adcx	 eax, DWORD PTR [ebx+88]
  0016a	89 47 58	 mov	 DWORD PTR [edi+88], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 319  :     c = _ADDX_UNIT(c, xp[23], yp[23], &zp[23]);

  0016d	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00170	66 0f 38 f6 43
	5c		 adcx	 eax, DWORD PTR [ebx+92]
  00176	89 47 5c	 mov	 DWORD PTR [edi+92], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 320  :     c = _ADDX_UNIT(c, xp[24], yp[24], &zp[24]);

  00179	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0017c	66 0f 38 f6 43
	60		 adcx	 eax, DWORD PTR [ebx+96]
  00182	89 47 60	 mov	 DWORD PTR [edi+96], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 321  :     c = _ADDX_UNIT(c, xp[25], yp[25], &zp[25]);

  00185	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00188	66 0f 38 f6 43
	64		 adcx	 eax, DWORD PTR [ebx+100]
  0018e	89 47 64	 mov	 DWORD PTR [edi+100], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 322  :     c = _ADDX_UNIT(c, xp[26], yp[26], &zp[26]);

  00191	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00194	66 0f 38 f6 43
	68		 adcx	 eax, DWORD PTR [ebx+104]
  0019a	89 47 68	 mov	 DWORD PTR [edi+104], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 323  :     c = _ADDX_UNIT(c, xp[27], yp[27], &zp[27]);

  0019d	8b 46 6c	 mov	 eax, DWORD PTR [esi+108]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  001a0	66 0f 38 f6 43
	6c		 adcx	 eax, DWORD PTR [ebx+108]
  001a6	89 47 6c	 mov	 DWORD PTR [edi+108], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 324  :     c = _ADDX_UNIT(c, xp[28], yp[28], &zp[28]);

  001a9	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  001ac	66 0f 38 f6 43
	70		 adcx	 eax, DWORD PTR [ebx+112]
  001b2	89 47 70	 mov	 DWORD PTR [edi+112], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 325  :     c = _ADDX_UNIT(c, xp[29], yp[29], &zp[29]);

  001b5	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  001b8	66 0f 38 f6 43
	74		 adcx	 eax, DWORD PTR [ebx+116]
  001be	89 47 74	 mov	 DWORD PTR [edi+116], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 326  :     c = _ADDX_UNIT(c, xp[30], yp[30], &zp[30]);

  001c1	8b 46 78	 mov	 eax, DWORD PTR [esi+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  001c4	66 0f 38 f6 43
	78		 adcx	 eax, DWORD PTR [ebx+120]
  001ca	89 47 78	 mov	 DWORD PTR [edi+120], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 327  :     c = _ADDX_UNIT(c, xp[31], yp[31], &zp[31]);

  001cd	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  001d0	66 0f 38 f6 43
	7c		 adcx	 eax, DWORD PTR [ebx+124]
  001d6	89 47 7c	 mov	 DWORD PTR [edi+124], eax
  001d9	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 243  :             up += 32;

  001dc	83 ee 80	 sub	 esi, -128		; ffffff80H

; 244  :             vp += 32;

  001df	83 eb 80	 sub	 ebx, -128		; ffffff80H
  001e2	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl

; 245  :             wp += 32;

  001e5	83 ef 80	 sub	 edi, -128		; ffffff80H

; 246  :             --count;

  001e8	83 ea 01	 sub	 edx, 1
  001eb	0f 85 64 fe ff
	ff		 jne	 $LL2@Add_Imp_us
  001f1	8b 55 08	 mov	 edx, DWORD PTR tv5381[ebp]
  001f4	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl
$LN3@Add_Imp_us:

; 247  :         }
; 248  :         // この時点で未処理の桁は 32 ワード未満のはず
; 249  : 
; 250  :         // 未処理の桁が 16 ワード以上あるなら 16 ワード加算を行う。
; 251  :         if (v_count & 0x10)

  001f7	f6 c2 10	 test	 dl, 16			; 00000010H
  001fa	74 22		 je	 SHORT $LN5@Add_Imp_us

; 252  :         {
; 253  :             c = _ADD_16WORDS_ADCX(c, up, vp, wp);

  001fc	57		 push	 edi
  001fd	53		 push	 ebx
  001fe	56		 push	 esi
  001ff	ff 75 0c	 push	 DWORD PTR _c$[ebp]
  00202	e8 00 00 00 00	 call	 __ADD_16WORDS_ADCX
  00207	8b 55 08	 mov	 edx, DWORD PTR tv5381[ebp]
  0020a	8a c8		 mov	 cl, al
  0020c	83 c4 10	 add	 esp, 16			; 00000010H
  0020f	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl

; 254  :             up += 16;

  00212	83 c6 40	 add	 esi, 64			; 00000040H
  00215	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl

; 255  :             vp += 16;

  00218	83 c3 40	 add	 ebx, 64			; 00000040H

; 256  :             wp += 16;

  0021b	83 c7 40	 add	 edi, 64			; 00000040H
$LN5@Add_Imp_us:

; 257  :         }
; 258  :         // この時点で未処理の桁は 16 ワード未満のはず
; 259  : 
; 260  :         // 未処理の桁が 8 ワード以上あるなら 8 ワード加算を行う。
; 261  :         if (v_count & 0x8)

  0021e	f6 c2 08	 test	 dl, 8
  00221	74 72		 je	 SHORT $LN6@Add_Imp_us
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1704 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00223	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00225	80 c1 ff	 add	 cl, 255			; 000000ffH
  00228	66 0f 38 f6 03	 adcx	 eax, DWORD PTR [ebx]
  0022d	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1705 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0022f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00232	66 0f 38 f6 43
	04		 adcx	 eax, DWORD PTR [ebx+4]
  00238	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1706 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  0023b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0023e	66 0f 38 f6 43
	08		 adcx	 eax, DWORD PTR [ebx+8]
  00244	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1707 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  00247	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0024a	66 0f 38 f6 43
	0c		 adcx	 eax, DWORD PTR [ebx+12]
  00250	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1708 :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  00253	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00256	66 0f 38 f6 43
	10		 adcx	 eax, DWORD PTR [ebx+16]
  0025c	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1709 :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  0025f	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00262	66 0f 38 f6 43
	14		 adcx	 eax, DWORD PTR [ebx+20]
  00268	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1710 :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  0026b	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0026e	66 0f 38 f6 43
	18		 adcx	 eax, DWORD PTR [ebx+24]
  00274	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1711 :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  00277	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0027a	66 0f 38 f6 43
	1c		 adcx	 eax, DWORD PTR [ebx+28]
  00280	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  00283	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 264  :             up += 8;

  00286	83 c6 20	 add	 esi, 32			; 00000020H

; 265  :             vp += 8;

  00289	83 c3 20	 add	 ebx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0028c	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 263  :             c = _ADD_8WORDS_ADCX(c, up, vp, wp);

  0028f	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl

; 266  :             wp += 8;

  00292	83 c7 20	 add	 edi, 32			; 00000020H
$LN6@Add_Imp_us:

; 267  :         }
; 268  :         // この時点で未処理の桁は 8 ワード未満のはず
; 269  : 
; 270  :         // 未処理の桁が 4 ワード以上あるなら 4 ワード加算を行う。
; 271  :         if (v_count & 0x4)

  00295	f6 c2 04	 test	 dl, 4
  00298	74 42		 je	 SHORT $LN7@Add_Imp_us
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2016 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  0029a	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0029c	80 c1 ff	 add	 cl, 255			; 000000ffH
  0029f	66 0f 38 f6 03	 adcx	 eax, DWORD PTR [ebx]
  002a4	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2017 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  002a6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  002a9	66 0f 38 f6 43
	04		 adcx	 eax, DWORD PTR [ebx+4]
  002af	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2018 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  002b2	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  002b5	66 0f 38 f6 43
	08		 adcx	 eax, DWORD PTR [ebx+8]
  002bb	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2019 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  002be	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  002c1	66 0f 38 f6 43
	0c		 adcx	 eax, DWORD PTR [ebx+12]
  002c7	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  002ca	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 274  :             up += 4;

  002cd	83 c6 10	 add	 esi, 16			; 00000010H

; 275  :             vp += 4;

  002d0	83 c3 10	 add	 ebx, 16			; 00000010H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  002d3	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 273  :             c = _ADD_4WORDS_ADCX(c, up, vp, wp);

  002d6	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl

; 276  :             wp += 4;

  002d9	83 c7 10	 add	 edi, 16			; 00000010H
$LN7@Add_Imp_us:

; 277  :         }
; 278  :         // この時点で未処理の桁は 4 ワード未満のはず
; 279  : 
; 280  :         // 未処理の桁が 2 ワード以上あるなら 2 ワード加算を行う。
; 281  :         if (v_count & 0x2)

  002dc	f6 c2 02	 test	 dl, 2
  002df	74 2d		 je	 SHORT $LN117@Add_Imp_us
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2230 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  002e1	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  002e3	80 c1 ff	 add	 cl, 255			; 000000ffH
  002e6	66 0f 38 f6 03	 adcx	 eax, DWORD PTR [ebx]
  002eb	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2231 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  002ed	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  002f0	66 0f 38 f6 43
	04		 adcx	 eax, DWORD PTR [ebx+4]
  002f6	89 47 04	 mov	 DWORD PTR [edi+4], eax
  002f9	0f 92 45 17	 setb	 BYTE PTR _c$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 284  :             up += 2;

  002fd	83 c6 08	 add	 esi, 8
  00300	8a 45 17	 mov	 al, BYTE PTR _c$1$[ebp]

; 285  :             vp += 2;

  00303	83 c3 08	 add	 ebx, 8
  00306	88 45 0c	 mov	 BYTE PTR _c$[ebp], al

; 286  :             wp += 2;

  00309	83 c7 08	 add	 edi, 8
  0030c	eb 03		 jmp	 SHORT $LN8@Add_Imp_us
$LN117@Add_Imp_us:

; 277  :         }
; 278  :         // この時点で未処理の桁は 4 ワード未満のはず
; 279  : 
; 280  :         // 未処理の桁が 2 ワード以上あるなら 2 ワード加算を行う。
; 281  :         if (v_count & 0x2)

  0030e	8a 45 17	 mov	 al, BYTE PTR _c$1$[ebp]
$LN8@Add_Imp_us:

; 287  :         }
; 288  :         // この時点で未処理の桁は 2 ワード未満のはず
; 289  : 
; 290  :         // 未処理の桁が 1 ワード以上あるなら 1 ワード加算を行う。
; 291  :         if (v_count & 0x1)

  00311	f6 c2 01	 test	 dl, 1
  00314	74 1c		 je	 SHORT $LN9@Add_Imp_us

; 292  :             c = _ADDX_UNIT(c, *up++, *vp++, wp++);

  00316	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00318	8b d7		 mov	 edx, edi
  0031a	83 c7 04	 add	 edi, 4
  0031d	83 c6 04	 add	 esi, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00320	04 ff		 add	 al, 255			; 000000ffH
  00322	66 0f 38 f6 0b	 adcx	 ecx, DWORD PTR [ebx]
  00327	89 0a		 mov	 DWORD PTR [edx], ecx
  00329	8b 55 08	 mov	 edx, DWORD PTR tv5381[ebp]
  0032c	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 292  :             c = _ADDX_UNIT(c, *up++, *vp++, wp++);

  0032f	88 45 0c	 mov	 BYTE PTR _c$[ebp], al
$LN9@Add_Imp_us:

; 293  : 
; 294  :         // 残りの桁の繰り上がりを計算し、復帰する。
; 295  :         DoCarry(c, up, u_count - v_count, wp, w_count - v_count);

  00332	8b 45 1c	 mov	 eax, DWORD PTR _w_count$[ebp]
  00335	2b c2		 sub	 eax, edx
  00337	50		 push	 eax
  00338	8b 45 fc	 mov	 eax, DWORD PTR tv5377[ebp]
  0033b	57		 push	 edi
  0033c	2b c2		 sub	 eax, edx
  0033e	50		 push	 eax
  0033f	56		 push	 esi
  00340	ff 75 0c	 push	 DWORD PTR _c$[ebp]
  00343	e8 00 00 00 00	 call	 ?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoCarry
  00348	83 c4 14	 add	 esp, 20			; 00000014H
  0034b	5f		 pop	 edi
  0034c	5e		 pop	 esi
  0034d	5b		 pop	 ebx

; 296  :     }

  0034e	8b e5		 mov	 esp, ebp
  00350	5d		 pop	 ebp
  00351	c3		 ret	 0
?Add_Imp_using_ADCX@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ENDP ; Palmtree::Math::Core::Internal::Add_Imp_using_ADCX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?Add_Imp_using_ADC@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z
_TEXT	SEGMENT
tv5377 = -4						; size = 4
tv5381 = 8						; size = 4
_u_buf$ = 8						; size = 4
_c$ = 12						; size = 1
_u_count$ = 12						; size = 4
_count$1$ = 16						; size = 4
_v_buf$ = 16						; size = 4
tv5384 = 20						; size = 4
_v_count$ = 20						; size = 4
_c$1$ = 23						; size = 1
_w_buf$ = 24						; size = 4
_w_count$ = 28						; size = 4
?Add_Imp_using_ADC@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z PROC ; Palmtree::Math::Core::Internal::Add_Imp_using_ADC, COMDAT

; 145  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 55 14	 mov	 edx, DWORD PTR _v_count$[ebp]
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _u_count$[ebp]

; 146  :         // x のワード長が y のワード長以上であるようにする
; 147  :         if (u_count < v_count)
; 148  :         {
; 149  :             __UNIT_TYPE* t_buf = u_buf;
; 150  :             u_buf = v_buf;
; 151  :             v_buf = t_buf;
; 152  :             __UNIT_TYPE t_count = u_count;
; 153  :             u_count = v_count;
; 154  :             v_count = t_count;
; 155  :         }
; 156  :         __UNIT_TYPE* up = u_buf;

  0000a	3b ca		 cmp	 ecx, edx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _u_buf$[ebp]
  0000f	53		 push	 ebx
  00010	56		 push	 esi
  00011	8b 75 10	 mov	 esi, DWORD PTR _v_buf$[ebp]
  00014	8b d8		 mov	 ebx, eax
  00016	57		 push	 edi
  00017	8b f9		 mov	 edi, ecx
  00019	0f 43 de	 cmovae	 ebx, esi
  0001c	0f 43 fa	 cmovae	 edi, edx
  0001f	0f 43 f0	 cmovae	 esi, eax
  00022	89 7d 08	 mov	 DWORD PTR tv5381[ebp], edi
  00025	8b fa		 mov	 edi, edx

; 157  :         __UNIT_TYPE* vp = v_buf;
; 158  :         __UNIT_TYPE* wp = w_buf;
; 159  :         char c = 0;
; 160  : 
; 161  :         // まず 32 ワードずつ加算をする。
; 162  :         __UNIT_TYPE count = v_count >> 5;

  00027	8b 55 08	 mov	 edx, DWORD PTR tv5381[ebp]
  0002a	0f 43 f9	 cmovae	 edi, ecx
  0002d	8b c2		 mov	 eax, edx
  0002f	89 7d fc	 mov	 DWORD PTR tv5377[ebp], edi
  00032	8b 7d 18	 mov	 edi, DWORD PTR _w_buf$[ebp]
  00035	32 c9		 xor	 cl, cl
  00037	c1 e8 05	 shr	 eax, 5
  0003a	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl
  0003d	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl
  00040	89 45 10	 mov	 DWORD PTR _count$1$[ebp], eax

; 163  :         while (count != 0)

  00043	85 c0		 test	 eax, eax
  00045	0f 84 4c 01 00
	00		 je	 $LN3@Add_Imp_us

; 146  :         // x のワード長が y のワード長以上であるようにする
; 147  :         if (u_count < v_count)
; 148  :         {
; 149  :             __UNIT_TYPE* t_buf = u_buf;
; 150  :             u_buf = v_buf;
; 151  :             v_buf = t_buf;
; 152  :             __UNIT_TYPE t_count = u_count;
; 153  :             u_count = v_count;
; 154  :             v_count = t_count;
; 155  :         }
; 156  :         __UNIT_TYPE* up = u_buf;

  0004b	8b 55 10	 mov	 edx, DWORD PTR _count$1$[ebp]
  0004e	8b c3		 mov	 eax, ebx
  00050	2b c7		 sub	 eax, edi
  00052	89 45 14	 mov	 DWORD PTR tv5384[ebp], eax
$LL2@Add_Imp_us:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 43   :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00055	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00057	80 c1 ff	 add	 cl, 255			; 000000ffH
  0005a	8b 4d 14	 mov	 ecx, DWORD PTR tv5384[ebp]
  0005d	13 03		 adc	 eax, DWORD PTR [ebx]
  0005f	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 44   :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00061	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00064	13 44 39 04	 adc	 eax, DWORD PTR [ecx+edi+4]
  00068	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 45   :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  0006b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0006e	13 43 08	 adc	 eax, DWORD PTR [ebx+8]
  00071	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 46   :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  00074	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00077	13 43 0c	 adc	 eax, DWORD PTR [ebx+12]
  0007a	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 47   :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  0007d	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00080	13 43 10	 adc	 eax, DWORD PTR [ebx+16]
  00083	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 48   :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  00086	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00089	13 43 14	 adc	 eax, DWORD PTR [ebx+20]
  0008c	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 49   :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  0008f	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00092	13 43 18	 adc	 eax, DWORD PTR [ebx+24]
  00095	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 50   :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  00098	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0009b	13 43 1c	 adc	 eax, DWORD PTR [ebx+28]
  0009e	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 51   :     c = _ADD_UNIT(c, xp[8], yp[8], &zp[8]);

  000a1	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000a4	13 43 20	 adc	 eax, DWORD PTR [ebx+32]
  000a7	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 52   :     c = _ADD_UNIT(c, xp[9], yp[9], &zp[9]);

  000aa	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000ad	13 43 24	 adc	 eax, DWORD PTR [ebx+36]
  000b0	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 53   :     c = _ADD_UNIT(c, xp[10], yp[10], &zp[10]);

  000b3	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000b6	13 43 28	 adc	 eax, DWORD PTR [ebx+40]
  000b9	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 54   :     c = _ADD_UNIT(c, xp[11], yp[11], &zp[11]);

  000bc	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000bf	13 43 2c	 adc	 eax, DWORD PTR [ebx+44]
  000c2	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 55   :     c = _ADD_UNIT(c, xp[12], yp[12], &zp[12]);

  000c5	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000c8	13 43 30	 adc	 eax, DWORD PTR [ebx+48]
  000cb	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 56   :     c = _ADD_UNIT(c, xp[13], yp[13], &zp[13]);

  000ce	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000d1	13 43 34	 adc	 eax, DWORD PTR [ebx+52]
  000d4	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 57   :     c = _ADD_UNIT(c, xp[14], yp[14], &zp[14]);

  000d7	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000da	13 43 38	 adc	 eax, DWORD PTR [ebx+56]
  000dd	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 58   :     c = _ADD_UNIT(c, xp[15], yp[15], &zp[15]);

  000e0	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000e3	13 43 3c	 adc	 eax, DWORD PTR [ebx+60]
  000e6	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 59   :     c = _ADD_UNIT(c, xp[16], yp[16], &zp[16]);

  000e9	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000ec	13 43 40	 adc	 eax, DWORD PTR [ebx+64]
  000ef	89 47 40	 mov	 DWORD PTR [edi+64], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 60   :     c = _ADD_UNIT(c, xp[17], yp[17], &zp[17]);

  000f2	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000f5	13 43 44	 adc	 eax, DWORD PTR [ebx+68]
  000f8	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 61   :     c = _ADD_UNIT(c, xp[18], yp[18], &zp[18]);

  000fb	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000fe	13 43 48	 adc	 eax, DWORD PTR [ebx+72]
  00101	89 47 48	 mov	 DWORD PTR [edi+72], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 62   :     c = _ADD_UNIT(c, xp[19], yp[19], &zp[19]);

  00104	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00107	13 43 4c	 adc	 eax, DWORD PTR [ebx+76]
  0010a	89 47 4c	 mov	 DWORD PTR [edi+76], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 63   :     c = _ADD_UNIT(c, xp[20], yp[20], &zp[20]);

  0010d	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00110	13 43 50	 adc	 eax, DWORD PTR [ebx+80]
  00113	89 47 50	 mov	 DWORD PTR [edi+80], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 64   :     c = _ADD_UNIT(c, xp[21], yp[21], &zp[21]);

  00116	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00119	13 43 54	 adc	 eax, DWORD PTR [ebx+84]
  0011c	89 47 54	 mov	 DWORD PTR [edi+84], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 65   :     c = _ADD_UNIT(c, xp[22], yp[22], &zp[22]);

  0011f	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00122	13 43 58	 adc	 eax, DWORD PTR [ebx+88]
  00125	89 47 58	 mov	 DWORD PTR [edi+88], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 66   :     c = _ADD_UNIT(c, xp[23], yp[23], &zp[23]);

  00128	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0012b	13 43 5c	 adc	 eax, DWORD PTR [ebx+92]
  0012e	89 47 5c	 mov	 DWORD PTR [edi+92], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 67   :     c = _ADD_UNIT(c, xp[24], yp[24], &zp[24]);

  00131	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00134	13 43 60	 adc	 eax, DWORD PTR [ebx+96]
  00137	89 47 60	 mov	 DWORD PTR [edi+96], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 68   :     c = _ADD_UNIT(c, xp[25], yp[25], &zp[25]);

  0013a	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0013d	13 43 64	 adc	 eax, DWORD PTR [ebx+100]
  00140	89 47 64	 mov	 DWORD PTR [edi+100], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 69   :     c = _ADD_UNIT(c, xp[26], yp[26], &zp[26]);

  00143	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00146	13 43 68	 adc	 eax, DWORD PTR [ebx+104]
  00149	89 47 68	 mov	 DWORD PTR [edi+104], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 70   :     c = _ADD_UNIT(c, xp[27], yp[27], &zp[27]);

  0014c	8b 46 6c	 mov	 eax, DWORD PTR [esi+108]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0014f	13 43 6c	 adc	 eax, DWORD PTR [ebx+108]
  00152	89 47 6c	 mov	 DWORD PTR [edi+108], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 71   :     c = _ADD_UNIT(c, xp[28], yp[28], &zp[28]);

  00155	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00158	13 43 70	 adc	 eax, DWORD PTR [ebx+112]
  0015b	89 47 70	 mov	 DWORD PTR [edi+112], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 72   :     c = _ADD_UNIT(c, xp[29], yp[29], &zp[29]);

  0015e	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00161	13 43 74	 adc	 eax, DWORD PTR [ebx+116]
  00164	89 47 74	 mov	 DWORD PTR [edi+116], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 73   :     c = _ADD_UNIT(c, xp[30], yp[30], &zp[30]);

  00167	8b 46 78	 mov	 eax, DWORD PTR [esi+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0016a	13 43 78	 adc	 eax, DWORD PTR [ebx+120]
  0016d	89 47 78	 mov	 DWORD PTR [edi+120], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 74   :     c = _ADD_UNIT(c, xp[31], yp[31], &zp[31]);

  00170	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00173	13 43 7c	 adc	 eax, DWORD PTR [ebx+124]
  00176	89 47 7c	 mov	 DWORD PTR [edi+124], eax
  00179	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 166  :             up += 32;

  0017c	83 ee 80	 sub	 esi, -128		; ffffff80H

; 167  :             vp += 32;

  0017f	83 eb 80	 sub	 ebx, -128		; ffffff80H
  00182	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl

; 168  :             wp += 32;

  00185	83 ef 80	 sub	 edi, -128		; ffffff80H

; 169  :             --count;

  00188	83 ea 01	 sub	 edx, 1
  0018b	0f 85 c4 fe ff
	ff		 jne	 $LL2@Add_Imp_us
  00191	8b 55 08	 mov	 edx, DWORD PTR tv5381[ebp]
  00194	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl
$LN3@Add_Imp_us:

; 170  :         }
; 171  :         // この時点で未処理の桁は 32 ワード未満のはず
; 172  : 
; 173  :         // 未処理の桁が 16 ワード以上あるなら 16 ワード加算を行う。
; 174  :         if (v_count & 0x10)

  00197	f6 c2 10	 test	 dl, 16			; 00000010H
  0019a	74 22		 je	 SHORT $LN5@Add_Imp_us

; 175  :         {
; 176  :             c = _ADD_16WORDS_ADC(c, up, vp, wp);

  0019c	57		 push	 edi
  0019d	53		 push	 ebx
  0019e	56		 push	 esi
  0019f	ff 75 0c	 push	 DWORD PTR _c$[ebp]
  001a2	e8 00 00 00 00	 call	 __ADD_16WORDS_ADC
  001a7	8b 55 08	 mov	 edx, DWORD PTR tv5381[ebp]
  001aa	8a c8		 mov	 cl, al
  001ac	83 c4 10	 add	 esp, 16			; 00000010H
  001af	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl

; 177  :             up += 16;

  001b2	83 c6 40	 add	 esi, 64			; 00000040H
  001b5	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl

; 178  :             vp += 16;

  001b8	83 c3 40	 add	 ebx, 64			; 00000040H

; 179  :             wp += 16;

  001bb	83 c7 40	 add	 edi, 64			; 00000040H
$LN5@Add_Imp_us:

; 180  :         }
; 181  :         // この時点で未処理の桁は 16 ワード未満のはず
; 182  : 
; 183  :         // 未処理の桁が 8 ワード以上あるなら 8 ワード加算を行う。
; 184  :         if (v_count & 0x8)

  001be	f6 c2 08	 test	 dl, 8
  001c1	74 5a		 je	 SHORT $LN6@Add_Imp_us
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1619 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  001c3	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  001c5	80 c1 ff	 add	 cl, 255			; 000000ffH
  001c8	13 03		 adc	 eax, DWORD PTR [ebx]
  001ca	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1620 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  001cc	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  001cf	13 43 04	 adc	 eax, DWORD PTR [ebx+4]
  001d2	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1621 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  001d5	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  001d8	13 43 08	 adc	 eax, DWORD PTR [ebx+8]
  001db	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1622 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  001de	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  001e1	13 43 0c	 adc	 eax, DWORD PTR [ebx+12]
  001e4	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1623 :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  001e7	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  001ea	13 43 10	 adc	 eax, DWORD PTR [ebx+16]
  001ed	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1624 :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  001f0	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  001f3	13 43 14	 adc	 eax, DWORD PTR [ebx+20]
  001f6	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1625 :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  001f9	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  001fc	13 43 18	 adc	 eax, DWORD PTR [ebx+24]
  001ff	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1626 :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  00202	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00205	13 43 1c	 adc	 eax, DWORD PTR [ebx+28]
  00208	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  0020b	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 187  :             up += 8;

  0020e	83 c6 20	 add	 esi, 32			; 00000020H

; 188  :             vp += 8;

  00211	83 c3 20	 add	 ebx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00214	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 186  :             c = _ADD_8WORDS_ADC(c, up, vp, wp);

  00217	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl

; 189  :             wp += 8;

  0021a	83 c7 20	 add	 edi, 32			; 00000020H
$LN6@Add_Imp_us:

; 190  :         }
; 191  :         // この時点で未処理の桁は 8 ワード未満のはず
; 192  : 
; 193  :         // 未処理の桁が 4 ワード以上あるなら 4 ワード加算を行う。
; 194  :         if (v_count & 0x4)

  0021d	f6 c2 04	 test	 dl, 4
  00220	74 36		 je	 SHORT $LN7@Add_Imp_us
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1959 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00222	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00224	80 c1 ff	 add	 cl, 255			; 000000ffH
  00227	13 03		 adc	 eax, DWORD PTR [ebx]
  00229	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1960 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  0022b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0022e	13 43 04	 adc	 eax, DWORD PTR [ebx+4]
  00231	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1961 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00234	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00237	13 43 08	 adc	 eax, DWORD PTR [ebx+8]
  0023a	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1962 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  0023d	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00240	13 43 0c	 adc	 eax, DWORD PTR [ebx+12]
  00243	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00246	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 197  :             up += 4;

  00249	83 c6 10	 add	 esi, 16			; 00000010H

; 198  :             vp += 4;

  0024c	83 c3 10	 add	 ebx, 16			; 00000010H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0024f	88 4d 17	 mov	 BYTE PTR _c$1$[ebp], cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 196  :             c = _ADD_4WORDS_ADC(c, up, vp, wp);

  00252	88 4d 0c	 mov	 BYTE PTR _c$[ebp], cl

; 199  :             wp += 4;

  00255	83 c7 10	 add	 edi, 16			; 00000010H
$LN7@Add_Imp_us:

; 200  :         }
; 201  :         // この時点で未処理の桁は 4 ワード未満のはず
; 202  : 
; 203  :         // 未処理の桁が 2 ワード以上あるなら 2 ワード加算を行う。
; 204  :         if (v_count & 0x2)

  00258	f6 c2 02	 test	 dl, 2
  0025b	74 27		 je	 SHORT $LN117@Add_Imp_us
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2187 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0025d	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0025f	80 c1 ff	 add	 cl, 255			; 000000ffH
  00262	13 03		 adc	 eax, DWORD PTR [ebx]
  00264	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2188 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00266	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00269	13 43 04	 adc	 eax, DWORD PTR [ebx+4]
  0026c	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0026f	0f 92 45 17	 setb	 BYTE PTR _c$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 207  :             up += 2;

  00273	83 c6 08	 add	 esi, 8
  00276	8a 45 17	 mov	 al, BYTE PTR _c$1$[ebp]

; 208  :             vp += 2;

  00279	83 c3 08	 add	 ebx, 8
  0027c	88 45 0c	 mov	 BYTE PTR _c$[ebp], al

; 209  :             wp += 2;

  0027f	83 c7 08	 add	 edi, 8
  00282	eb 03		 jmp	 SHORT $LN8@Add_Imp_us
$LN117@Add_Imp_us:

; 200  :         }
; 201  :         // この時点で未処理の桁は 4 ワード未満のはず
; 202  : 
; 203  :         // 未処理の桁が 2 ワード以上あるなら 2 ワード加算を行う。
; 204  :         if (v_count & 0x2)

  00284	8a 45 17	 mov	 al, BYTE PTR _c$1$[ebp]
$LN8@Add_Imp_us:

; 210  :         }
; 211  :         // この時点で未処理の桁は 2 ワード未満のはず
; 212  : 
; 213  :         // 未処理の桁が 1 ワード以上あるなら 1 ワード加算を行う。
; 214  :         if (v_count & 0x1)

  00287	f6 c2 01	 test	 dl, 1
  0028a	74 19		 je	 SHORT $LN9@Add_Imp_us

; 215  :             c = _ADD_UNIT(c, *up++, *vp++, wp++);

  0028c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0028e	8b d7		 mov	 edx, edi
  00290	83 c7 04	 add	 edi, 4
  00293	83 c6 04	 add	 esi, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00296	04 ff		 add	 al, 255			; 000000ffH
  00298	13 0b		 adc	 ecx, DWORD PTR [ebx]
  0029a	89 0a		 mov	 DWORD PTR [edx], ecx
  0029c	8b 55 08	 mov	 edx, DWORD PTR tv5381[ebp]
  0029f	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 215  :             c = _ADD_UNIT(c, *up++, *vp++, wp++);

  002a2	88 45 0c	 mov	 BYTE PTR _c$[ebp], al
$LN9@Add_Imp_us:

; 216  : 
; 217  :         // 残りの桁の繰り上がりを計算し、復帰する。
; 218  :         DoCarry(c, up, u_count - v_count, wp, w_count - v_count);

  002a5	8b 45 1c	 mov	 eax, DWORD PTR _w_count$[ebp]
  002a8	2b c2		 sub	 eax, edx
  002aa	50		 push	 eax
  002ab	8b 45 fc	 mov	 eax, DWORD PTR tv5377[ebp]
  002ae	57		 push	 edi
  002af	2b c2		 sub	 eax, edx
  002b1	50		 push	 eax
  002b2	56		 push	 esi
  002b3	ff 75 0c	 push	 DWORD PTR _c$[ebp]
  002b6	e8 00 00 00 00	 call	 ?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoCarry
  002bb	83 c4 14	 add	 esp, 20			; 00000014H
  002be	5f		 pop	 edi
  002bf	5e		 pop	 esi
  002c0	5b		 pop	 ebx

; 219  :     }

  002c1	8b e5		 mov	 esp, ebp
  002c3	5d		 pop	 ebp
  002c4	c3		 ret	 0
?Add_Imp_using_ADC@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ENDP ; Palmtree::Math::Core::Internal::Add_Imp_using_ADC
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?Add_X_2W@Internal@Core@Math@Palmtree@@YAXPAIIII0I@Z
_TEXT	SEGMENT
_u_buf$ = 8						; size = 4
_u_count$ = 12						; size = 4
_v_hi$ = 16						; size = 4
_v_lo$ = 20						; size = 4
_c$ = 24						; size = 1
_w_buf$ = 24						; size = 4
_w_count$ = 28						; size = 4
?Add_X_2W@Internal@Core@Math@Palmtree@@YAXPAIIII0I@Z PROC ; Palmtree::Math::Core::Internal::Add_X_2W, COMDAT

; 104  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  :         __UNIT_TYPE* up = u_buf;
; 106  :         __UNIT_TYPE* wp = w_buf;

  00003	8b 55 18	 mov	 edx, DWORD PTR _w_buf$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _u_buf$[ebp]
  0000a	57		 push	 edi

; 107  :         char c;
; 108  : 
; 109  :         if (u_count < 2)

  0000b	8b 7d 0c	 mov	 edi, DWORD PTR _u_count$[ebp]
  0000e	8b 06		 mov	 eax, DWORD PTR [esi]
  00010	83 ff 02	 cmp	 edi, 2
  00013	73 22		 jae	 SHORT $LN2@Add_X_2W
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00015	03 45 14	 add	 eax, DWORD PTR _v_lo$[ebp]
  00018	89 02		 mov	 DWORD PTR [edx], eax
  0001a	b8 00 00 00 00	 mov	 eax, 0
  0001f	13 45 10	 adc	 eax, DWORD PTR _v_hi$[ebp]
  00022	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00025	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 120  :             if (c)

  00028	84 c9		 test	 cl, cl
  0002a	74 3d		 je	 SHORT $LN3@Add_X_2W

; 121  :                 wp[2] = 1;

  0002c	5f		 pop	 edi
  0002d	c7 42 08 01 00
	00 00		 mov	 DWORD PTR [edx+8], 1

; 140  :         }
; 141  :     }

  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
$LN2@Add_X_2W:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00037	03 45 14	 add	 eax, DWORD PTR _v_lo$[ebp]
  0003a	89 02		 mov	 DWORD PTR [edx], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 134  :             c = _ADD_UNIT(c, *up++, v_hi, wp++);

  0003c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0003f	13 4d 10	 adc	 ecx, DWORD PTR _v_hi$[ebp]
  00042	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00045	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 134  :             c = _ADD_UNIT(c, *up++, v_hi, wp++);

  00048	88 45 18	 mov	 BYTE PTR _c$[ebp], al

; 135  :             u_count -= 2;
; 136  :             w_count -= 2;

  0004b	8b 45 1c	 mov	 eax, DWORD PTR _w_count$[ebp]
  0004e	83 c0 fe	 add	 eax, -2			; fffffffeH

; 137  : 
; 138  :             // 残りの桁の繰り上がりを計算し、復帰する。
; 139  :             DoCarry(c, up, u_count, wp, w_count);

  00051	50		 push	 eax
  00052	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  00055	50		 push	 eax
  00056	8d 47 fe	 lea	 eax, DWORD PTR [edi-2]
  00059	50		 push	 eax
  0005a	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0005d	50		 push	 eax
  0005e	ff 75 18	 push	 DWORD PTR _c$[ebp]
  00061	e8 00 00 00 00	 call	 ?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoCarry
  00066	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@Add_X_2W:

; 140  :         }
; 141  :     }

  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?Add_X_2W@Internal@Core@Math@Palmtree@@YAXPAIIII0I@Z ENDP ; Palmtree::Math::Core::Internal::Add_X_2W
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?Add_X_1W@Internal@Core@Math@Palmtree@@YAXPAIII0I@Z
_TEXT	SEGMENT
_c$ = 8							; size = 1
_u_ptr$ = 8						; size = 4
_u_count$ = 12						; size = 4
_v$ = 16						; size = 4
_w_ptr$ = 20						; size = 4
_w_count$ = 24						; size = 4
?Add_X_1W@Internal@Core@Math@Palmtree@@YAXPAIII0I@Z PROC ; Palmtree::Math::Core::Internal::Add_X_1W, COMDAT

; 91   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00003	8b 55 14	 mov	 edx, DWORD PTR _w_ptr$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 91   :     {

  00006	56		 push	 esi

; 95   :         c = _ADD_UNIT(0, *u_ptr++, v, w_ptr++);

  00007	8b 75 08	 mov	 esi, DWORD PTR _u_ptr$[ebp]
  0000a	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0000c	03 4d 10	 add	 ecx, DWORD PTR _v$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 95   :         c = _ADD_UNIT(0, *u_ptr++, v, w_ptr++);

  00014	88 45 08	 mov	 BYTE PTR _c$[ebp], al

; 96   :         --u_count;
; 97   :         --w_count;

  00017	8b 45 18	 mov	 eax, DWORD PTR _w_count$[ebp]
  0001a	48		 dec	 eax

; 98   : 
; 99   :         // 残りの桁の繰上りを行い復帰する。
; 100  :         DoCarry(c, u_ptr, u_count, w_ptr, w_count);

  0001b	50		 push	 eax
  0001c	8d 42 04	 lea	 eax, DWORD PTR [edx+4]
  0001f	50		 push	 eax
  00020	8b 45 0c	 mov	 eax, DWORD PTR _u_count$[ebp]
  00023	48		 dec	 eax
  00024	50		 push	 eax
  00025	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00028	50		 push	 eax
  00029	ff 75 08	 push	 DWORD PTR _c$[ebp]
  0002c	e8 00 00 00 00	 call	 ?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoCarry
  00031	83 c4 14	 add	 esp, 20			; 00000014H
  00034	5e		 pop	 esi

; 101  :     }

  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?Add_X_1W@Internal@Core@Math@Palmtree@@YAXPAIII0I@Z ENDP ; Palmtree::Math::Core::Internal::Add_X_1W
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_c$ = 8							; size = 1
_u_ptr$ = 12						; size = 4
_w_count$1$ = 16					; size = 4
_u_count$ = 16						; size = 4
_w_ptr$ = 20						; size = 4
_w_count$ = 24						; size = 4
?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z PROC	; Palmtree::Math::Core::Internal::DoCarry, COMDAT

; 39   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx

; 40   :         // 繰り上がりを続く限り行う
; 41   :         for (;;)
; 42   :         {
; 43   :             if (u_count <= 0)

  00007	8a 5d 08	 mov	 bl, BYTE PTR _c$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 10	 mov	 esi, DWORD PTR _u_count$[ebp]
  0000e	57		 push	 edi
  0000f	85 f6		 test	 esi, esi
  00011	74 52		 je	 SHORT $LN24@DoCarry
  00013	8b 45 18	 mov	 eax, DWORD PTR _w_count$[ebp]
  00016	8b 7d 0c	 mov	 edi, DWORD PTR _u_ptr$[ebp]
  00019	89 45 10	 mov	 DWORD PTR _w_count$1$[ebp], eax
  0001c	8b 45 14	 mov	 eax, DWORD PTR _w_ptr$[ebp]
  0001f	90		 npad	 1
$LL2@DoCarry:

; 58   :                 }
; 59   : 
; 60   :                 // u の最上位に達してしまった場合はいずれにしろループを中断して正常復帰する。
; 61   : 
; 62   :                 return;
; 63   :             }
; 64   :             else if (c)

  00020	84 db		 test	 bl, bl
  00022	74 23		 je	 SHORT $LN17@DoCarry

; 65   :             {
; 66   :                 // u の最上位に達しておらず、かつキャリーが立っている場合
; 67   : 
; 68   :                 // 繰り上がりを継続する
; 69   :                 c = _ADD_UNIT(c, *u_ptr++, 0, w_ptr++);

  00024	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00026	8b d0		 mov	 edx, eax
  00028	83 c0 04	 add	 eax, 4
  0002b	83 c7 04	 add	 edi, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0002e	80 c3 ff	 add	 bl, 255			; 000000ffH
  00031	83 d1 00	 adc	 ecx, 0
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 71   :                 --w_count;

  00036	8b 4d 10	 mov	 ecx, DWORD PTR _w_count$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00039	0f 92 c3	 setb	 bl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 71   :                 --w_count;

  0003c	49		 dec	 ecx
  0003d	89 4d 10	 mov	 DWORD PTR _w_count$1$[ebp], ecx
  00040	83 ee 01	 sub	 esi, 1
  00043	75 db		 jne	 SHORT $LL2@DoCarry

; 40   :         // 繰り上がりを続く限り行う
; 41   :         for (;;)
; 42   :         {
; 43   :             if (u_count <= 0)

  00045	eb 24		 jmp	 SHORT $LN18@DoCarry
$LN17@DoCarry:

; 72   :             }
; 73   :             else
; 74   :             {
; 75   :                 // u の最上位に達しておらず、かつキャリーが立っていない場合
; 76   : 
; 77   :                 // 繰り上がりを中断し、u の残りのデータをzにそのまま複写し、正常復帰する。
; 78   :                 while (u_count > 0)

  00047	85 f6		 test	 esi, esi
  00049	74 2e		 je	 SHORT $LN6@DoCarry
  0004b	2b f8		 sub	 edi, eax
  0004d	0f 1f 00	 npad	 3
$LL5@DoCarry:

; 79   :                 {
; 80   :                     *w_ptr++ = *u_ptr++;

  00050	8b 0c 07	 mov	 ecx, DWORD PTR [edi+eax]
  00053	8d 40 04	 lea	 eax, DWORD PTR [eax+4]
  00056	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 81   :                     --u_count;

  00059	83 ee 01	 sub	 esi, 1
  0005c	75 f2		 jne	 SHORT $LL5@DoCarry

; 82   :                     --w_count;
; 83   :                 }
; 84   :                 return;
; 85   :             }
; 86   :         }
; 87   :     }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
$LN24@DoCarry:

; 40   :         // 繰り上がりを続く限り行う
; 41   :         for (;;)
; 42   :         {
; 43   :             if (u_count <= 0)

  00065	8b 4d 18	 mov	 ecx, DWORD PTR _w_count$[ebp]
  00068	8b 45 14	 mov	 eax, DWORD PTR _w_ptr$[ebp]
$LN18@DoCarry:

; 44   :             {
; 45   :                 // u の最上位まで達してしまった場合
; 46   : 
; 47   :                 if (c)

  0006b	84 db		 test	 bl, bl
  0006d	74 0a		 je	 SHORT $LN6@DoCarry

; 48   :                 {
; 49   :                     // かつそれでも繰り上がりを行う必要がある場合
; 50   :                     if (w_count <= 0)

  0006f	85 c9		 test	 ecx, ecx
  00071	74 0d		 je	 SHORT $LN27@DoCarry

; 56   :                     }
; 57   :                     *w_ptr = 1;

  00073	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$LN6@DoCarry:
  00079	5f		 pop	 edi

; 82   :                     --w_count;
; 83   :                 }
; 84   :                 return;
; 85   :             }
; 86   :         }
; 87   :     }

  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN27@DoCarry:

; 51   :                     {
; 52   :                         // しかし w がもう終端に達してしまった場合
; 53   : 
; 54   :                         // w のバッファはこの余裕を見込んでいるのでこのルートには到達しないはず。
; 55   :                         throw InternalErrorException(L"内部エラーが発生しました。", L"pcm_add.cpp;DoCarry;1");

  00080	68 00 00 00 00	 push	 OFFSET ??_C@_1CM@CADFJOJJ@?$AAp?$AAc?$AAm?$AA_?$AAa?$AAd?$AAd?$AA?4?$AAc?$AAp?$AAp?$AA?$DL?$AAD?$AAo?$AAC@
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  0008a	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0008d	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00092	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  00097	8d 45 e8	 lea	 eax, DWORD PTR $T1[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN25@DoCarry:
  000a0	cc		 int	 3
?DoCarry@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ENDP	; Palmtree::Math::Core::Internal::DoCarry
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_2WORDS_ADCX
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_2WORDS_ADCX PROC					; COMDAT

; 2228 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2230 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2228 : {

  00009	56		 push	 esi

; 2230 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  0000a	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0000d	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2230 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	66 0f 38 f6 0e	 adcx	 ecx, DWORD PTR [esi]
  0001a	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2231 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0001c	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0001f	66 0f 38 f6 4e
	04		 adcx	 ecx, DWORD PTR [esi+4]
  00025	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2267 :     return (c);

  00028	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00029	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2267 :     return (c);

  0002c	5e		 pop	 esi

; 2268 : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
__ADD_2WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_2WORDS_ADC
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_2WORDS_ADC PROC					; COMDAT

; 2185 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2187 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2185 : {

  00009	56		 push	 esi

; 2187 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0000a	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0000d	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2187 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	13 0e		 adc	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2188 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0001c	13 4e 04	 adc	 ecx, DWORD PTR [esi+4]
  0001f	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2224 :     return (c);

  00022	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00023	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2224 :     return (c);

  00026	5e		 pop	 esi

; 2225 : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
__ADD_2WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_4WORDS_ADCX
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_4WORDS_ADCX PROC					; COMDAT

; 2014 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2016 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2014 : {

  00009	56		 push	 esi

; 2016 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  0000a	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0000d	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2016 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	66 0f 38 f6 0e	 adcx	 ecx, DWORD PTR [esi]
  0001a	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2017 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0001c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0001f	66 0f 38 f6 46
	04		 adcx	 eax, DWORD PTR [esi+4]
  00025	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2018 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  00028	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0002b	66 0f 38 f6 46
	08		 adcx	 eax, DWORD PTR [esi+8]
  00031	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2019 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  00034	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00037	66 0f 38 f6 4e
	0c		 adcx	 ecx, DWORD PTR [esi+12]
  0003d	89 4f 0c	 mov	 DWORD PTR [edi+12], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2067 :     return (c);

  00040	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00041	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2067 :     return (c);

  00044	5e		 pop	 esi

; 2068 : }

  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
__ADD_4WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_4WORDS_ADC
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_4WORDS_ADC PROC					; COMDAT

; 1957 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1959 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1957 : {

  00009	56		 push	 esi

; 1959 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0000a	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0000d	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1959 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	13 0e		 adc	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1960 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0001c	13 46 04	 adc	 eax, DWORD PTR [esi+4]
  0001f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1961 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00025	13 46 08	 adc	 eax, DWORD PTR [esi+8]
  00028	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1962 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  0002b	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0002e	13 4e 0c	 adc	 ecx, DWORD PTR [esi+12]
  00031	89 4f 0c	 mov	 DWORD PTR [edi+12], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2010 :     return (c);

  00034	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00035	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2010 :     return (c);

  00038	5e		 pop	 esi

; 2011 : }

  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
__ADD_4WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_8WORDS_ADCX
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_8WORDS_ADCX PROC					; COMDAT

; 1702 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1703 : #ifdef _MSC_VER
; 1704 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1702 : {

  0000b	56		 push	 esi

; 1703 : #ifdef _MSC_VER
; 1704 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	66 0f 38 f6 0e	 adcx	 ecx, DWORD PTR [esi]
  0001a	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1705 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0001c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0001f	66 0f 38 f6 46
	04		 adcx	 eax, DWORD PTR [esi+4]
  00025	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1706 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  00028	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0002b	66 0f 38 f6 46
	08		 adcx	 eax, DWORD PTR [esi+8]
  00031	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1707 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  00034	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00037	66 0f 38 f6 46
	0c		 adcx	 eax, DWORD PTR [esi+12]
  0003d	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1708 :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  00040	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00043	66 0f 38 f6 46
	10		 adcx	 eax, DWORD PTR [esi+16]
  00049	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1709 :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  0004c	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0004f	66 0f 38 f6 46
	14		 adcx	 eax, DWORD PTR [esi+20]
  00055	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1710 :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  00058	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0005b	66 0f 38 f6 46
	18		 adcx	 eax, DWORD PTR [esi+24]
  00061	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1711 :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  00064	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00067	66 0f 38 f6 4e
	1c		 adcx	 ecx, DWORD PTR [esi+28]
  0006d	89 4f 1c	 mov	 DWORD PTR [edi+28], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1783 :     return (c);

  00070	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00071	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1783 :     return (c);

  00074	5e		 pop	 esi

; 1784 : }

  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
__ADD_8WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_8WORDS_ADC
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_8WORDS_ADC PROC					; COMDAT

; 1617 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1618 : #ifdef _MSC_VER
; 1619 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1617 : {

  0000b	56		 push	 esi

; 1618 : #ifdef _MSC_VER
; 1619 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	13 0e		 adc	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1620 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0001c	13 46 04	 adc	 eax, DWORD PTR [esi+4]
  0001f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1621 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00025	13 46 08	 adc	 eax, DWORD PTR [esi+8]
  00028	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1622 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  0002b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0002e	13 46 0c	 adc	 eax, DWORD PTR [esi+12]
  00031	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1623 :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  00034	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00037	13 46 10	 adc	 eax, DWORD PTR [esi+16]
  0003a	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1624 :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  0003d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00040	13 46 14	 adc	 eax, DWORD PTR [esi+20]
  00043	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1625 :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00049	13 46 18	 adc	 eax, DWORD PTR [esi+24]
  0004c	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1626 :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  0004f	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00052	13 4e 1c	 adc	 ecx, DWORD PTR [esi+28]
  00055	89 4f 1c	 mov	 DWORD PTR [edi+28], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1698 :     return (c);

  00058	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00059	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1698 :     return (c);

  0005c	5e		 pop	 esi

; 1699 : }

  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
__ADD_8WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_16WORDS_ADCX
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_16WORDS_ADCX PROC					; COMDAT

; 1194 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1195 : #ifdef _MSC_VER
; 1196 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1194 : {

  0000b	56		 push	 esi

; 1195 : #ifdef _MSC_VER
; 1196 :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	66 0f 38 f6 0e	 adcx	 ecx, DWORD PTR [esi]
  0001a	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1197 :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0001c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0001f	66 0f 38 f6 46
	04		 adcx	 eax, DWORD PTR [esi+4]
  00025	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1198 :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  00028	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0002b	66 0f 38 f6 46
	08		 adcx	 eax, DWORD PTR [esi+8]
  00031	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1199 :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  00034	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00037	66 0f 38 f6 46
	0c		 adcx	 eax, DWORD PTR [esi+12]
  0003d	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1200 :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  00040	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00043	66 0f 38 f6 46
	10		 adcx	 eax, DWORD PTR [esi+16]
  00049	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1201 :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  0004c	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0004f	66 0f 38 f6 46
	14		 adcx	 eax, DWORD PTR [esi+20]
  00055	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1202 :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  00058	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0005b	66 0f 38 f6 46
	18		 adcx	 eax, DWORD PTR [esi+24]
  00061	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1203 :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  00064	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00067	66 0f 38 f6 46
	1c		 adcx	 eax, DWORD PTR [esi+28]
  0006d	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1204 :     c = _ADDX_UNIT(c, xp[8], yp[8], &zp[8]);

  00070	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00073	66 0f 38 f6 46
	20		 adcx	 eax, DWORD PTR [esi+32]
  00079	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1205 :     c = _ADDX_UNIT(c, xp[9], yp[9], &zp[9]);

  0007c	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0007f	66 0f 38 f6 46
	24		 adcx	 eax, DWORD PTR [esi+36]
  00085	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1206 :     c = _ADDX_UNIT(c, xp[10], yp[10], &zp[10]);

  00088	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0008b	66 0f 38 f6 46
	28		 adcx	 eax, DWORD PTR [esi+40]
  00091	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1207 :     c = _ADDX_UNIT(c, xp[11], yp[11], &zp[11]);

  00094	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00097	66 0f 38 f6 46
	2c		 adcx	 eax, DWORD PTR [esi+44]
  0009d	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1208 :     c = _ADDX_UNIT(c, xp[12], yp[12], &zp[12]);

  000a0	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000a3	66 0f 38 f6 46
	30		 adcx	 eax, DWORD PTR [esi+48]
  000a9	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1209 :     c = _ADDX_UNIT(c, xp[13], yp[13], &zp[13]);

  000ac	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000af	66 0f 38 f6 46
	34		 adcx	 eax, DWORD PTR [esi+52]
  000b5	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1210 :     c = _ADDX_UNIT(c, xp[14], yp[14], &zp[14]);

  000b8	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000bb	66 0f 38 f6 46
	38		 adcx	 eax, DWORD PTR [esi+56]
  000c1	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1211 :     c = _ADDX_UNIT(c, xp[15], yp[15], &zp[15]);

  000c4	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000c7	66 0f 38 f6 4e
	3c		 adcx	 ecx, DWORD PTR [esi+60]
  000cd	89 4f 3c	 mov	 DWORD PTR [edi+60], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1331 :     return (c);

  000d0	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000d1	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1331 :     return (c);

  000d4	5e		 pop	 esi

; 1332 : }

  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
__ADD_16WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_16WORDS_ADC
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_16WORDS_ADC PROC					; COMDAT

; 1053 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1054 : #ifdef _MSC_VER
; 1055 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1053 : {

  0000b	56		 push	 esi

; 1054 : #ifdef _MSC_VER
; 1055 :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	13 0e		 adc	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1056 :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0001c	13 46 04	 adc	 eax, DWORD PTR [esi+4]
  0001f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1057 :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00025	13 46 08	 adc	 eax, DWORD PTR [esi+8]
  00028	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1058 :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  0002b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0002e	13 46 0c	 adc	 eax, DWORD PTR [esi+12]
  00031	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1059 :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  00034	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00037	13 46 10	 adc	 eax, DWORD PTR [esi+16]
  0003a	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1060 :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  0003d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00040	13 46 14	 adc	 eax, DWORD PTR [esi+20]
  00043	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1061 :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00049	13 46 18	 adc	 eax, DWORD PTR [esi+24]
  0004c	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1062 :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  0004f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00052	13 46 1c	 adc	 eax, DWORD PTR [esi+28]
  00055	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1063 :     c = _ADD_UNIT(c, xp[8], yp[8], &zp[8]);

  00058	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0005b	13 46 20	 adc	 eax, DWORD PTR [esi+32]
  0005e	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1064 :     c = _ADD_UNIT(c, xp[9], yp[9], &zp[9]);

  00061	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00064	13 46 24	 adc	 eax, DWORD PTR [esi+36]
  00067	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1065 :     c = _ADD_UNIT(c, xp[10], yp[10], &zp[10]);

  0006a	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0006d	13 46 28	 adc	 eax, DWORD PTR [esi+40]
  00070	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1066 :     c = _ADD_UNIT(c, xp[11], yp[11], &zp[11]);

  00073	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00076	13 46 2c	 adc	 eax, DWORD PTR [esi+44]
  00079	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1067 :     c = _ADD_UNIT(c, xp[12], yp[12], &zp[12]);

  0007c	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0007f	13 46 30	 adc	 eax, DWORD PTR [esi+48]
  00082	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1068 :     c = _ADD_UNIT(c, xp[13], yp[13], &zp[13]);

  00085	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00088	13 46 34	 adc	 eax, DWORD PTR [esi+52]
  0008b	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1069 :     c = _ADD_UNIT(c, xp[14], yp[14], &zp[14]);

  0008e	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00091	13 46 38	 adc	 eax, DWORD PTR [esi+56]
  00094	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1070 :     c = _ADD_UNIT(c, xp[15], yp[15], &zp[15]);

  00097	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0009a	13 4e 3c	 adc	 ecx, DWORD PTR [esi+60]
  0009d	89 4f 3c	 mov	 DWORD PTR [edi+60], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1190 :     return (c);

  000a0	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000a1	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1190 :     return (c);

  000a4	5e		 pop	 esi

; 1191 : }

  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
__ADD_16WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_32WORDS_ADCX
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_32WORDS_ADCX PROC					; COMDAT

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 295  : #ifdef _MSC_VER
; 296  :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 294  : {

  0000b	56		 push	 esi

; 295  : #ifdef _MSC_VER
; 296  :     c = _ADDX_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	66 0f 38 f6 0e	 adcx	 ecx, DWORD PTR [esi]
  0001a	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 297  :     c = _ADDX_UNIT(c, xp[1], yp[1], &zp[1]);

  0001c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0001f	66 0f 38 f6 46
	04		 adcx	 eax, DWORD PTR [esi+4]
  00025	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 298  :     c = _ADDX_UNIT(c, xp[2], yp[2], &zp[2]);

  00028	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0002b	66 0f 38 f6 46
	08		 adcx	 eax, DWORD PTR [esi+8]
  00031	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 299  :     c = _ADDX_UNIT(c, xp[3], yp[3], &zp[3]);

  00034	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00037	66 0f 38 f6 46
	0c		 adcx	 eax, DWORD PTR [esi+12]
  0003d	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 300  :     c = _ADDX_UNIT(c, xp[4], yp[4], &zp[4]);

  00040	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00043	66 0f 38 f6 46
	10		 adcx	 eax, DWORD PTR [esi+16]
  00049	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 301  :     c = _ADDX_UNIT(c, xp[5], yp[5], &zp[5]);

  0004c	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0004f	66 0f 38 f6 46
	14		 adcx	 eax, DWORD PTR [esi+20]
  00055	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 302  :     c = _ADDX_UNIT(c, xp[6], yp[6], &zp[6]);

  00058	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0005b	66 0f 38 f6 46
	18		 adcx	 eax, DWORD PTR [esi+24]
  00061	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 303  :     c = _ADDX_UNIT(c, xp[7], yp[7], &zp[7]);

  00064	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00067	66 0f 38 f6 46
	1c		 adcx	 eax, DWORD PTR [esi+28]
  0006d	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 304  :     c = _ADDX_UNIT(c, xp[8], yp[8], &zp[8]);

  00070	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00073	66 0f 38 f6 46
	20		 adcx	 eax, DWORD PTR [esi+32]
  00079	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 305  :     c = _ADDX_UNIT(c, xp[9], yp[9], &zp[9]);

  0007c	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0007f	66 0f 38 f6 46
	24		 adcx	 eax, DWORD PTR [esi+36]
  00085	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 306  :     c = _ADDX_UNIT(c, xp[10], yp[10], &zp[10]);

  00088	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0008b	66 0f 38 f6 46
	28		 adcx	 eax, DWORD PTR [esi+40]
  00091	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 307  :     c = _ADDX_UNIT(c, xp[11], yp[11], &zp[11]);

  00094	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00097	66 0f 38 f6 46
	2c		 adcx	 eax, DWORD PTR [esi+44]
  0009d	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 308  :     c = _ADDX_UNIT(c, xp[12], yp[12], &zp[12]);

  000a0	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000a3	66 0f 38 f6 46
	30		 adcx	 eax, DWORD PTR [esi+48]
  000a9	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 309  :     c = _ADDX_UNIT(c, xp[13], yp[13], &zp[13]);

  000ac	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000af	66 0f 38 f6 46
	34		 adcx	 eax, DWORD PTR [esi+52]
  000b5	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 310  :     c = _ADDX_UNIT(c, xp[14], yp[14], &zp[14]);

  000b8	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000bb	66 0f 38 f6 46
	38		 adcx	 eax, DWORD PTR [esi+56]
  000c1	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 311  :     c = _ADDX_UNIT(c, xp[15], yp[15], &zp[15]);

  000c4	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000c7	66 0f 38 f6 46
	3c		 adcx	 eax, DWORD PTR [esi+60]
  000cd	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 312  :     c = _ADDX_UNIT(c, xp[16], yp[16], &zp[16]);

  000d0	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000d3	66 0f 38 f6 46
	40		 adcx	 eax, DWORD PTR [esi+64]
  000d9	89 47 40	 mov	 DWORD PTR [edi+64], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 313  :     c = _ADDX_UNIT(c, xp[17], yp[17], &zp[17]);

  000dc	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000df	66 0f 38 f6 46
	44		 adcx	 eax, DWORD PTR [esi+68]
  000e5	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 314  :     c = _ADDX_UNIT(c, xp[18], yp[18], &zp[18]);

  000e8	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000eb	66 0f 38 f6 46
	48		 adcx	 eax, DWORD PTR [esi+72]
  000f1	89 47 48	 mov	 DWORD PTR [edi+72], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 315  :     c = _ADDX_UNIT(c, xp[19], yp[19], &zp[19]);

  000f4	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  000f7	66 0f 38 f6 46
	4c		 adcx	 eax, DWORD PTR [esi+76]
  000fd	89 47 4c	 mov	 DWORD PTR [edi+76], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 316  :     c = _ADDX_UNIT(c, xp[20], yp[20], &zp[20]);

  00100	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00103	66 0f 38 f6 46
	50		 adcx	 eax, DWORD PTR [esi+80]
  00109	89 47 50	 mov	 DWORD PTR [edi+80], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 317  :     c = _ADDX_UNIT(c, xp[21], yp[21], &zp[21]);

  0010c	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0010f	66 0f 38 f6 46
	54		 adcx	 eax, DWORD PTR [esi+84]
  00115	89 47 54	 mov	 DWORD PTR [edi+84], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 318  :     c = _ADDX_UNIT(c, xp[22], yp[22], &zp[22]);

  00118	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0011b	66 0f 38 f6 46
	58		 adcx	 eax, DWORD PTR [esi+88]
  00121	89 47 58	 mov	 DWORD PTR [edi+88], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 319  :     c = _ADDX_UNIT(c, xp[23], yp[23], &zp[23]);

  00124	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00127	66 0f 38 f6 46
	5c		 adcx	 eax, DWORD PTR [esi+92]
  0012d	89 47 5c	 mov	 DWORD PTR [edi+92], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 320  :     c = _ADDX_UNIT(c, xp[24], yp[24], &zp[24]);

  00130	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00133	66 0f 38 f6 46
	60		 adcx	 eax, DWORD PTR [esi+96]
  00139	89 47 60	 mov	 DWORD PTR [edi+96], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 321  :     c = _ADDX_UNIT(c, xp[25], yp[25], &zp[25]);

  0013c	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0013f	66 0f 38 f6 46
	64		 adcx	 eax, DWORD PTR [esi+100]
  00145	89 47 64	 mov	 DWORD PTR [edi+100], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 322  :     c = _ADDX_UNIT(c, xp[26], yp[26], &zp[26]);

  00148	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0014b	66 0f 38 f6 46
	68		 adcx	 eax, DWORD PTR [esi+104]
  00151	89 47 68	 mov	 DWORD PTR [edi+104], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 323  :     c = _ADDX_UNIT(c, xp[27], yp[27], &zp[27]);

  00154	8b 42 6c	 mov	 eax, DWORD PTR [edx+108]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00157	66 0f 38 f6 46
	6c		 adcx	 eax, DWORD PTR [esi+108]
  0015d	89 47 6c	 mov	 DWORD PTR [edi+108], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 324  :     c = _ADDX_UNIT(c, xp[28], yp[28], &zp[28]);

  00160	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00163	66 0f 38 f6 46
	70		 adcx	 eax, DWORD PTR [esi+112]
  00169	89 47 70	 mov	 DWORD PTR [edi+112], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 325  :     c = _ADDX_UNIT(c, xp[29], yp[29], &zp[29]);

  0016c	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0016f	66 0f 38 f6 46
	74		 adcx	 eax, DWORD PTR [esi+116]
  00175	89 47 74	 mov	 DWORD PTR [edi+116], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 326  :     c = _ADDX_UNIT(c, xp[30], yp[30], &zp[30]);

  00178	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  0017b	66 0f 38 f6 46
	78		 adcx	 eax, DWORD PTR [esi+120]
  00181	89 47 78	 mov	 DWORD PTR [edi+120], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 327  :     c = _ADDX_UNIT(c, xp[31], yp[31], &zp[31]);

  00184	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00187	66 0f 38 f6 4e
	7c		 adcx	 ecx, DWORD PTR [esi+124]
  0018d	89 4f 7c	 mov	 DWORD PTR [edi+124], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 543  :     return (c);

  00190	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00191	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 543  :     return (c);

  00194	5e		 pop	 esi

; 544  : }

  00195	5d		 pop	 ebp
  00196	c3		 ret	 0
__ADD_32WORDS_ADCX ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __ADD_32WORDS_ADC
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__ADD_32WORDS_ADC PROC					; COMDAT

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 42   : #ifdef _MSC_VER
; 43   :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 41   : {

  0000b	56		 push	 esi

; 42   : #ifdef _MSC_VER
; 43   :     c = _ADD_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	13 0e		 adc	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 44   :     c = _ADD_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0001c	13 46 04	 adc	 eax, DWORD PTR [esi+4]
  0001f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 45   :     c = _ADD_UNIT(c, xp[2], yp[2], &zp[2]);

  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00025	13 46 08	 adc	 eax, DWORD PTR [esi+8]
  00028	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 46   :     c = _ADD_UNIT(c, xp[3], yp[3], &zp[3]);

  0002b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0002e	13 46 0c	 adc	 eax, DWORD PTR [esi+12]
  00031	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 47   :     c = _ADD_UNIT(c, xp[4], yp[4], &zp[4]);

  00034	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00037	13 46 10	 adc	 eax, DWORD PTR [esi+16]
  0003a	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 48   :     c = _ADD_UNIT(c, xp[5], yp[5], &zp[5]);

  0003d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00040	13 46 14	 adc	 eax, DWORD PTR [esi+20]
  00043	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 49   :     c = _ADD_UNIT(c, xp[6], yp[6], &zp[6]);

  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00049	13 46 18	 adc	 eax, DWORD PTR [esi+24]
  0004c	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 50   :     c = _ADD_UNIT(c, xp[7], yp[7], &zp[7]);

  0004f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00052	13 46 1c	 adc	 eax, DWORD PTR [esi+28]
  00055	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 51   :     c = _ADD_UNIT(c, xp[8], yp[8], &zp[8]);

  00058	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0005b	13 46 20	 adc	 eax, DWORD PTR [esi+32]
  0005e	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 52   :     c = _ADD_UNIT(c, xp[9], yp[9], &zp[9]);

  00061	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00064	13 46 24	 adc	 eax, DWORD PTR [esi+36]
  00067	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 53   :     c = _ADD_UNIT(c, xp[10], yp[10], &zp[10]);

  0006a	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0006d	13 46 28	 adc	 eax, DWORD PTR [esi+40]
  00070	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 54   :     c = _ADD_UNIT(c, xp[11], yp[11], &zp[11]);

  00073	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00076	13 46 2c	 adc	 eax, DWORD PTR [esi+44]
  00079	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 55   :     c = _ADD_UNIT(c, xp[12], yp[12], &zp[12]);

  0007c	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0007f	13 46 30	 adc	 eax, DWORD PTR [esi+48]
  00082	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 56   :     c = _ADD_UNIT(c, xp[13], yp[13], &zp[13]);

  00085	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00088	13 46 34	 adc	 eax, DWORD PTR [esi+52]
  0008b	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 57   :     c = _ADD_UNIT(c, xp[14], yp[14], &zp[14]);

  0008e	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00091	13 46 38	 adc	 eax, DWORD PTR [esi+56]
  00094	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 58   :     c = _ADD_UNIT(c, xp[15], yp[15], &zp[15]);

  00097	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0009a	13 46 3c	 adc	 eax, DWORD PTR [esi+60]
  0009d	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 59   :     c = _ADD_UNIT(c, xp[16], yp[16], &zp[16]);

  000a0	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000a3	13 46 40	 adc	 eax, DWORD PTR [esi+64]
  000a6	89 47 40	 mov	 DWORD PTR [edi+64], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 60   :     c = _ADD_UNIT(c, xp[17], yp[17], &zp[17]);

  000a9	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000ac	13 46 44	 adc	 eax, DWORD PTR [esi+68]
  000af	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 61   :     c = _ADD_UNIT(c, xp[18], yp[18], &zp[18]);

  000b2	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000b5	13 46 48	 adc	 eax, DWORD PTR [esi+72]
  000b8	89 47 48	 mov	 DWORD PTR [edi+72], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 62   :     c = _ADD_UNIT(c, xp[19], yp[19], &zp[19]);

  000bb	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000be	13 46 4c	 adc	 eax, DWORD PTR [esi+76]
  000c1	89 47 4c	 mov	 DWORD PTR [edi+76], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 63   :     c = _ADD_UNIT(c, xp[20], yp[20], &zp[20]);

  000c4	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000c7	13 46 50	 adc	 eax, DWORD PTR [esi+80]
  000ca	89 47 50	 mov	 DWORD PTR [edi+80], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 64   :     c = _ADD_UNIT(c, xp[21], yp[21], &zp[21]);

  000cd	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000d0	13 46 54	 adc	 eax, DWORD PTR [esi+84]
  000d3	89 47 54	 mov	 DWORD PTR [edi+84], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 65   :     c = _ADD_UNIT(c, xp[22], yp[22], &zp[22]);

  000d6	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000d9	13 46 58	 adc	 eax, DWORD PTR [esi+88]
  000dc	89 47 58	 mov	 DWORD PTR [edi+88], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 66   :     c = _ADD_UNIT(c, xp[23], yp[23], &zp[23]);

  000df	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000e2	13 46 5c	 adc	 eax, DWORD PTR [esi+92]
  000e5	89 47 5c	 mov	 DWORD PTR [edi+92], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 67   :     c = _ADD_UNIT(c, xp[24], yp[24], &zp[24]);

  000e8	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000eb	13 46 60	 adc	 eax, DWORD PTR [esi+96]
  000ee	89 47 60	 mov	 DWORD PTR [edi+96], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 68   :     c = _ADD_UNIT(c, xp[25], yp[25], &zp[25]);

  000f1	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000f4	13 46 64	 adc	 eax, DWORD PTR [esi+100]
  000f7	89 47 64	 mov	 DWORD PTR [edi+100], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 69   :     c = _ADD_UNIT(c, xp[26], yp[26], &zp[26]);

  000fa	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  000fd	13 46 68	 adc	 eax, DWORD PTR [esi+104]
  00100	89 47 68	 mov	 DWORD PTR [edi+104], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 70   :     c = _ADD_UNIT(c, xp[27], yp[27], &zp[27]);

  00103	8b 42 6c	 mov	 eax, DWORD PTR [edx+108]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00106	13 46 6c	 adc	 eax, DWORD PTR [esi+108]
  00109	89 47 6c	 mov	 DWORD PTR [edi+108], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 71   :     c = _ADD_UNIT(c, xp[28], yp[28], &zp[28]);

  0010c	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0010f	13 46 70	 adc	 eax, DWORD PTR [esi+112]
  00112	89 47 70	 mov	 DWORD PTR [edi+112], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 72   :     c = _ADD_UNIT(c, xp[29], yp[29], &zp[29]);

  00115	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00118	13 46 74	 adc	 eax, DWORD PTR [esi+116]
  0011b	89 47 74	 mov	 DWORD PTR [edi+116], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 73   :     c = _ADD_UNIT(c, xp[30], yp[30], &zp[30]);

  0011e	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00121	13 46 78	 adc	 eax, DWORD PTR [esi+120]
  00124	89 47 78	 mov	 DWORD PTR [edi+120], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 74   :     c = _ADD_UNIT(c, xp[31], yp[31], &zp[31]);

  00127	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  0012a	13 4e 7c	 adc	 ecx, DWORD PTR [esi+124]
  0012d	89 4f 7c	 mov	 DWORD PTR [edi+124], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 290  :     return (c);

  00130	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 178  :             return (_addcarry_u32(carry, u, v, w));

  00131	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 290  :     return (c);

  00134	5e		 pop	 esi

; 291  : }

  00135	5d		 pop	 ebp
  00136	c3		 ret	 0
__ADD_32WORDS_ADC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __LZCNT_ALT_UNIT
_TEXT	SEGMENT
_x$ = 8							; size = 4
__LZCNT_ALT_UNIT PROC					; COMDAT

; 454  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 455  :             if (x == 0)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  0000a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 480  :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);

  00011	0f bd c8	 bsr	 ecx, eax

; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);
; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00014	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00019	2b c1		 sub	 eax, ecx

; 480  :         }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
__LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __LZCNT_ALT_32
_TEXT	SEGMENT
_x$ = 8							; size = 4
__LZCNT_ALT_32 PROC					; COMDAT

; 421  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 422  :             if (x == 0)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  0000a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 433  :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  00011	0f bd c8	 bsr	 ecx, eax

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00014	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00019	2b c1		 sub	 eax, ecx

; 433  :         }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
__LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __ADDX_UNIT
_TEXT	SEGMENT
_carry$ = 8						; size = 1
_u$ = 12						; size = 4
_v$ = 16						; size = 4
_w$ = 20						; size = 4
__ADDX_UNIT PROC					; COMDAT

; 187  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 188  : #ifdef _M_IX86
; 189  :             return (_addcarryx_u32(carry, u, v, w));

  00003	8a 45 08	 mov	 al, BYTE PTR _carry$[ebp]
  00006	8b 55 14	 mov	 edx, DWORD PTR _w$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _u$[ebp]
  0000e	66 0f 38 f6 4d
	10		 adcx	 ecx, DWORD PTR _v$[ebp]
  00014	0f 92 c0	 setb	 al
  00017	89 0a		 mov	 DWORD PTR [edx], ecx

; 190  : #elif defined(_M_X64)
; 191  :             return (_addcarryx_u64(carry, u, v, w));
; 192  : #else
; 193  : #error unknown platform
; 194  : #endif
; 195  :         }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
__ADDX_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __ADD_UNIT
_TEXT	SEGMENT
_carry$ = 8						; size = 1
_u$ = 12						; size = 4
_v$ = 16						; size = 4
_w$ = 20						; size = 4
__ADD_UNIT PROC						; COMDAT

; 176  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 177  : #ifdef _M_IX86
; 178  :             return (_addcarry_u32(carry, u, v, w));

  00003	8a 45 08	 mov	 al, BYTE PTR _carry$[ebp]
  00006	8b 55 14	 mov	 edx, DWORD PTR _w$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _u$[ebp]
  0000e	13 4d 10	 adc	 ecx, DWORD PTR _v$[ebp]
  00011	0f 92 c0	 setb	 al
  00014	89 0a		 mov	 DWORD PTR [edx], ecx

; 179  : #elif defined(_M_X64)
; 180  :             return (_addcarry_u64(carry, u, v, w));
; 181  : #else
; 182  : #error unknown platform
; 183  : #endif
; 184  :         }

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
__ADD_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __MAXIMUM_UNIT
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
__MAXIMUM_UNIT PROC					; COMDAT

; 166  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 167  :             return (x >= y ? x : y);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00006	39 45 08	 cmp	 DWORD PTR _x$[ebp], eax
  00009	0f 43 45 08	 cmovae	 eax, DWORD PTR _x$[ebp]

; 168  :         }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
__MAXIMUM_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __FROMDWORDTOWORD
_TEXT	SEGMENT
_value$ = 8						; size = 8
_result_high$ = 16					; size = 4
__FROMDWORDTOWORD PROC					; COMDAT

; 145  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00003	8b 45 10	 mov	 eax, DWORD PTR _result_high$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _value$[ebp+4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 147  :             return ((_UINT32_T)value);

  0000b	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 148  :         }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
__FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
_TEXT	SEGMENT
_root$ = -52						; size = 16
$T2 = -36						; size = 24
_root$3 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_X, COMDAT

; 551  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 552  :         if (u == nullptr)

  00028	8b 5d 08	 mov	 ebx, DWORD PTR _u$[ebp]
  0002b	85 db		 test	 ebx, ebx
  0002d	0f 84 00 01 00
	00		 je	 $LN21@PMC_Add_X_

; 554  :         if (v == nullptr)

  00033	8b 7d 0c	 mov	 edi, DWORD PTR _v$[ebp]
  00036	85 ff		 test	 edi, edi
  00038	75 0a		 jne	 SHORT $LN3@PMC_Add_X_

; 555  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_13JAOPNPKD@?$AAv@
  0003f	e9 f4 00 00 00	 jmp	 $LN19@PMC_Add_X_
$LN3@PMC_Add_X_:

; 556  :         CheckNumber((NUMBER_HEADER*)u);

  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 557  :         CheckNumber((NUMBER_HEADER*)v);

  0004a	57		 push	 edi
  0004b	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00050	83 c4 08	 add	 esp, 8

; 558  :         ResourceHolderUINT root;

  00053	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00056	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 523  :         if (u->IS_ZERO)

  00062	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  00066	74 1d		 je	 SHORT $LN7@PMC_Add_X_

; 524  :         {
; 525  :             if (v->IS_ZERO)

  00068	f6 47 04 01	 test	 BYTE PTR [edi+4], 1
  0006c	74 0a		 je	 SHORT $LN9@PMC_Add_X_

; 526  :                 return (&number_zero);

  0006e	be 00 00 00 00	 mov	 esi, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00073	e9 84 00 00 00	 jmp	 $LN12@PMC_Add_X_
$LN9@PMC_Add_X_:

; 527  :             else
; 528  :                 return (DuplicateNumber(v));

  00078	57		 push	 edi
  00079	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0007e	83 c4 04	 add	 esp, 4
  00081	8b f0		 mov	 esi, eax
  00083	eb 77		 jmp	 SHORT $LN12@PMC_Add_X_
$LN7@PMC_Add_X_:

; 529  :         }
; 530  :         else
; 531  :         {
; 532  :             if (v->IS_ZERO)

  00085	f6 47 04 01	 test	 BYTE PTR [edi+4], 1
  00089	74 0d		 je	 SHORT $LN11@PMC_Add_X_

; 533  :                 return (DuplicateNumber(u));

  0008b	53		 push	 ebx
  0008c	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00091	83 c4 04	 add	 esp, 4
  00094	8b f0		 mov	 esi, eax
  00096	eb 64		 jmp	 SHORT $LN12@PMC_Add_X_
$LN11@PMC_Add_X_:

; 534  :             else
; 535  :             {
; 536  :                 ResourceHolderUINT root;

  00098	8d 4d e4	 lea	 ecx, DWORD PTR _root$3[ebp]
  0009b	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000a0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 537  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 538  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  000a4	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 167  :             return (x >= y ? x : y);

  000a7	39 4b 14	 cmp	 DWORD PTR [ebx+20], ecx
  000aa	0f 43 4b 14	 cmovae	 ecx, DWORD PTR [ebx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 539  :                 __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;

  000ae	41		 inc	 ecx

; 540  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000af	51		 push	 ecx
  000b0	8d 4d e4	 lea	 ecx, DWORD PTR _root$3[ebp]
  000b3	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000b8	8b f0		 mov	 esi, eax

; 541  :                 (*fp_Add_Imp)(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, w->BLOCK, w->BLOCK_COUNT);

  000ba	ff 76 20	 push	 DWORD PTR [esi+32]
  000bd	ff 76 24	 push	 DWORD PTR [esi+36]
  000c0	ff 77 10	 push	 DWORD PTR [edi+16]
  000c3	ff 77 24	 push	 DWORD PTR [edi+36]
  000c6	ff 73 10	 push	 DWORD PTR [ebx+16]
  000c9	ff 73 24	 push	 DWORD PTR [ebx+36]
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR ?fp_Add_Imp@Internal@Core@Math@Palmtree@@3P6AXPAII0I0I@ZA
  000d2	83 c4 18	 add	 esp, 24			; 00000018H

; 542  :                 root.CheckNumber(w);

  000d5	8d 4d e4	 lea	 ecx, DWORD PTR _root$3[ebp]
  000d8	56		 push	 esi
  000d9	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 543  :                 CommitNumber(w);

  000de	56		 push	 esi
  000df	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000e4	83 c4 04	 add	 esp, 4

; 544  :                 root.UnlinkNumber(w);

  000e7	8d 4d e4	 lea	 ecx, DWORD PTR _root$3[ebp]
  000ea	56		 push	 esi
  000eb	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 545  :                 return (w);

  000f0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000f4	8d 4d e4	 lea	 ecx, DWORD PTR _root$3[ebp]
  000f7	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN12@PMC_Add_X_:

; 559  :         NUMBER_HEADER* w = PMC_Add_X_X_Imp((NUMBER_HEADER*)u, (NUMBER_HEADER*)v);
; 560  :         root.HookNumber(w);

  000fc	56		 push	 esi
  000fd	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00100	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 561  : #ifdef _DEBUG
; 562  :         CheckNumber(w);
; 563  : #endif
; 564  :         root.UnlinkNumber(w);

  00105	56		 push	 esi
  00106	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00109	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 565  :         return ((PMC_HANDLE_UINT)w);

  0010e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00115	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00118	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0011d	8b c6		 mov	 eax, esi

; 566  :     }

  0011f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00122	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00129	59		 pop	 ecx
  0012a	5f		 pop	 edi
  0012b	5e		 pop	 esi
  0012c	5b		 pop	 ebx
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 08 00	 ret	 8
$LN21@PMC_Add_X_:

; 553  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00133	68 00 00 00 00	 push	 OFFSET ??_C@_13ICFKHAEN@?$AAu@
$LN19@PMC_Add_X_:

; 566  :     }

  00138	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0013d	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00140	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00145	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0014a	8d 45 dc	 lea	 eax, DWORD PTR $T2[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN18@PMC_Add_X_:
  00153	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$1:
  00008	8d 4d e4	 lea	 ecx, DWORD PTR _root$3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Add_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Add_X_X
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
_TEXT	SEGMENT
$T2 = -52						; size = 24
_root$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_L, COMDAT

; 502  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 503  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)
; 504  :         {
; 505  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 506  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_add.cpp;PMC_Add_X_L;1");
; 507  :         }
; 508  :         if (u == nullptr)

  00026	8b 75 08	 mov	 esi, DWORD PTR _u$[ebp]
  00029	85 f6		 test	 esi, esi
  0002b	74 5e		 je	 SHORT $LN9@PMC_Add_X_

; 510  :         CheckNumber((NUMBER_HEADER*)u);

  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00033	83 c4 04	 add	 esp, 4

; 511  :         ResourceHolderUINT root;

  00036	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00039	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 512  :         NUMBER_HEADER* w = PMC_Add_X_L_Imp((NUMBER_HEADER*)u, v);

  00045	ff 75 10	 push	 DWORD PTR _v$[ebp+4]
  00048	ff 75 0c	 push	 DWORD PTR _v$[ebp]
  0004b	56		 push	 esi
  0004c	e8 00 00 00 00	 call	 ?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_L_Imp
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 513  :         root.HookNumber(w);

  00054	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00057	8b f0		 mov	 esi, eax
  00059	56		 push	 esi
  0005a	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 514  : #ifdef _DEBUG
; 515  :         CheckNumber((NUMBER_HEADER*)w);
; 516  : #endif
; 517  :         root.UnlinkNumber(w);

  0005f	56		 push	 esi
  00060	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00063	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 518  :         return ((PMC_HANDLE_UINT)w);

  00068	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006f	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00072	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00077	8b c6		 mov	 eax, esi

; 519  :     }

  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5e		 pop	 esi
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
$LN9@PMC_Add_X_:

; 509  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_13ICFKHAEN@?$AAu@
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00095	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00098	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009d	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a2	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@PMC_Add_X_:
  000ab	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Add_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Add_X_L
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
_TEXT	SEGMENT
$T2 = -52						; size = 24
_root$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_I, COMDAT

; 370  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 371  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)
; 372  :         {
; 373  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 374  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_add.cpp;PMC_Add_X_I;1");
; 375  :         }
; 376  :         if (u == nullptr)

  00026	8b 75 08	 mov	 esi, DWORD PTR _u$[ebp]
  00029	85 f6		 test	 esi, esi
  0002b	74 5b		 je	 SHORT $LN9@PMC_Add_X_

; 378  :         CheckNumber((NUMBER_HEADER*)u);

  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00033	83 c4 04	 add	 esp, 4

; 379  :         ResourceHolderUINT root;

  00036	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00039	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 380  :         NUMBER_HEADER* nw = PMC_Add_X_I_Imp((NUMBER_HEADER*)u, v);

  00045	ff 75 0c	 push	 DWORD PTR _v$[ebp]
  00048	56		 push	 esi
  00049	e8 00 00 00 00	 call	 ?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_I_Imp
  0004e	83 c4 08	 add	 esp, 8

; 381  :         root.HookNumber(nw);

  00051	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00054	8b f0		 mov	 esi, eax
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 382  : #ifdef _DEBUG
; 383  :         CheckNumber(nw);
; 384  : #endif
; 385  :         root.UnlinkNumber(nw);

  0005c	56		 push	 esi
  0005d	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00060	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 386  :         return ((PMC_HANDLE_UINT)nw);

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  0006f	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00074	8b c6		 mov	 eax, esi

; 387  :     }

  00076	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00080	59		 pop	 ecx
  00081	5e		 pop	 esi
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
$LN9@PMC_Add_X_:

; 377  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  00088	68 00 00 00 00	 push	 OFFSET ??_C@_13ICFKHAEN@?$AAu@
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00092	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00095	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009a	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0009f	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@PMC_Add_X_:
  000a8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Add_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Add_X_I
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z
_TEXT	SEGMENT
$T2 = -52						; size = 24
_root$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 8
_v$ = 16						; size = 4
?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Add_L_X, COMDAT

; 482  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 483  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)
; 484  :         {
; 485  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 486  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_add.cpp;PMC_Add_L_X;1");
; 487  :         }
; 488  :         if (v == nullptr)

  00026	8b 75 10	 mov	 esi, DWORD PTR _v$[ebp]
  00029	85 f6		 test	 esi, esi
  0002b	74 5e		 je	 SHORT $LN9@PMC_Add_L_

; 490  :         CheckNumber((NUMBER_HEADER*)v);

  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00033	83 c4 04	 add	 esp, 4

; 491  :         ResourceHolderUINT root;

  00036	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00039	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 492  :         NUMBER_HEADER* w = PMC_Add_X_L_Imp((NUMBER_HEADER*)v, u);

  00045	ff 75 0c	 push	 DWORD PTR _u$[ebp+4]
  00048	ff 75 08	 push	 DWORD PTR _u$[ebp]
  0004b	56		 push	 esi
  0004c	e8 00 00 00 00	 call	 ?PMC_Add_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_L_Imp
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 493  :         root.HookNumber(w);

  00054	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00057	8b f0		 mov	 esi, eax
  00059	56		 push	 esi
  0005a	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 494  : #ifdef _DEBUG
; 495  :         CheckNumber((NUMBER_HEADER*)w);
; 496  : #endif
; 497  :         root.UnlinkNumber(w);

  0005f	56		 push	 esi
  00060	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00063	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 498  :         return ((PMC_HANDLE_UINT)w);

  00068	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006f	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00072	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00077	8b c6		 mov	 eax, esi

; 499  :     }

  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5e		 pop	 esi
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
$LN9@PMC_Add_L_:

; 489  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_13JAOPNPKD@?$AAv@
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00095	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00098	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009d	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a2	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@PMC_Add_L_:
  000ab	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Add_L_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@_KPAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Add_L_X
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z
_TEXT	SEGMENT
$T2 = -52						; size = 24
_root$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Add_I_X, COMDAT

; 350  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 351  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)
; 352  :         {
; 353  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 354  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_add.cpp;PMC_Add_I_X;1");
; 355  :         }
; 356  :         if (v == nullptr)

  00026	8b 75 0c	 mov	 esi, DWORD PTR _v$[ebp]
  00029	85 f6		 test	 esi, esi
  0002b	74 5b		 je	 SHORT $LN9@PMC_Add_I_

; 358  :         CheckNumber((NUMBER_HEADER*)v);

  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00033	83 c4 04	 add	 esp, 4

; 359  :         ResourceHolderUINT root;

  00036	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00039	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 360  :         NUMBER_HEADER* nw =  PMC_Add_X_I_Imp((NUMBER_HEADER*)v, u);

  00045	ff 75 08	 push	 DWORD PTR _u$[ebp]
  00048	56		 push	 esi
  00049	e8 00 00 00 00	 call	 ?PMC_Add_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Add_X_I_Imp
  0004e	83 c4 08	 add	 esp, 8

; 361  :         root.HookNumber(nw);

  00051	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00054	8b f0		 mov	 esi, eax
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 362  : #ifdef _DEBUG
; 363  :         CheckNumber(nw);
; 364  : #endif
; 365  :         root.UnlinkNumber(nw);

  0005c	56		 push	 esi
  0005d	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00060	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 366  :         return ((PMC_HANDLE_UINT)nw);

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  0006f	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00074	8b c6		 mov	 eax, esi

; 367  :     }

  00076	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00080	59		 pop	 ecx
  00081	5e		 pop	 esi
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
$LN9@PMC_Add_I_:

; 357  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00088	68 00 00 00 00	 push	 OFFSET ??_C@_13JAOPNPKD@?$AAv@
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00092	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00095	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009a	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  0009f	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@PMC_Add_I_:
  000a8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Add_I_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@IPAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Add_I_X
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?Initialize_Add@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
_feature$ = 8						; size = 4
?Initialize_Add@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Add, COMDAT

; 569  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 570  :         fp_Add_Imp = feature->PROCESSOR_FEATURE_ADX ? Add_Imp_using_ADCX : Add_Imp_using_ADC;

  00003	8b 45 08	 mov	 eax, DWORD PTR _feature$[ebp]
  00006	b9 00 00 00 00	 mov	 ecx, OFFSET ?Add_Imp_using_ADCX@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ; Palmtree::Math::Core::Internal::Add_Imp_using_ADCX
  0000b	f6 00 02	 test	 BYTE PTR [eax], 2
  0000e	b8 00 00 00 00	 mov	 eax, OFFSET ?Add_Imp_using_ADC@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ; Palmtree::Math::Core::Internal::Add_Imp_using_ADC
  00013	0f 45 c1	 cmovne	 eax, ecx
  00016	a3 00 00 00 00	 mov	 DWORD PTR ?fp_Add_Imp@Internal@Core@Math@Palmtree@@3P6AXPAII0I0I@ZA, eax

; 571  :         return (PMC_STATUS_OK);

  0001b	33 c0		 xor	 eax, eax

; 572  :     }

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?Initialize_Add@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Add
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp
;	COMDAT ?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
_TEXT	SEGMENT
_root$2 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Add_X_X_Imp, COMDAT

; 522  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 523  :         if (u->IS_ZERO)

  00028	8b 7d 08	 mov	 edi, DWORD PTR _u$[ebp]
  0002b	f6 47 04 01	 test	 BYTE PTR [edi+4], 1
  0002f	74 3b		 je	 SHORT $LN2@PMC_Add_X_

; 524  :         {
; 525  :             if (v->IS_ZERO)

  00031	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00034	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  00038	74 17		 je	 SHORT $LN4@PMC_Add_X_

; 526  :                 return (&number_zero);

  0003a	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 546  :             }
; 547  :         }
; 548  :     }

  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN4@PMC_Add_X_:

; 527  :             else
; 528  :                 return (DuplicateNumber(v));

  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00057	83 c4 04	 add	 esp, 4

; 546  :             }
; 547  :         }
; 548  :     }

  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
$LN2@PMC_Add_X_:

; 529  :         }
; 530  :         else
; 531  :         {
; 532  :             if (v->IS_ZERO)

  0006c	8b 5d 0c	 mov	 ebx, DWORD PTR _v$[ebp]
  0006f	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  00073	74 1b		 je	 SHORT $LN6@PMC_Add_X_

; 533  :                 return (DuplicateNumber(u));

  00075	57		 push	 edi
  00076	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0007b	83 c4 04	 add	 esp, 4

; 546  :             }
; 547  :         }
; 548  :     }

  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
$LN6@PMC_Add_X_:

; 534  :             else
; 535  :             {
; 536  :                 ResourceHolderUINT root;

  00090	8d 4d e4	 lea	 ecx, DWORD PTR _root$2[ebp]
  00093	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00098	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 537  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;
; 538  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;

  0009f	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 167  :             return (x >= y ? x : y);

  000a2	39 4f 14	 cmp	 DWORD PTR [edi+20], ecx
  000a5	0f 43 4f 14	 cmovae	 ecx, DWORD PTR [edi+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_add.cpp

; 539  :                 __UNIT_TYPE w_bit_count = _MAXIMUM_UNIT(u_bit_count, v_bit_count) + 1;

  000a9	41		 inc	 ecx

; 540  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000aa	51		 push	 ecx
  000ab	8d 4d e4	 lea	 ecx, DWORD PTR _root$2[ebp]
  000ae	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000b3	8b f0		 mov	 esi, eax

; 541  :                 (*fp_Add_Imp)(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, w->BLOCK, w->BLOCK_COUNT);

  000b5	ff 76 20	 push	 DWORD PTR [esi+32]
  000b8	ff 76 24	 push	 DWORD PTR [esi+36]
  000bb	ff 73 10	 push	 DWORD PTR [ebx+16]
  000be	ff 73 24	 push	 DWORD PTR [ebx+36]
  000c1	ff 77 10	 push	 DWORD PTR [edi+16]
  000c4	ff 77 24	 push	 DWORD PTR [edi+36]
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR ?fp_Add_Imp@Internal@Core@Math@Palmtree@@3P6AXPAII0I0I@ZA
  000cd	83 c4 18	 add	 esp, 24			; 00000018H

; 542  :                 root.CheckNumber(w);

  000d0	8d 4d e4	 lea	 ecx, DWORD PTR _root$2[ebp]
  000d3	56		 push	 esi
  000d4	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 543  :                 CommitNumber(w);

  000d9	56		 push	 esi
  000da	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000df	83 c4 04	 add	 esp, 4

; 544  :                 root.UnlinkNumber(w);

  000e2	8d 4d e4	 lea	 ecx, DWORD PTR _root$2[ebp]
  000e5	56		 push	 esi
  000e6	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 545  :                 return (w);

  000eb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f2	8d 4d e4	 lea	 ecx, DWORD PTR _root$2[ebp]
  000f5	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000fa	8b c6		 mov	 eax, esi

; 546  :             }
; 547  :         }
; 548  :     }

  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00106	59		 pop	 ecx
  00107	5f		 pop	 edi
  00108	5e		 pop	 esi
  00109	5b		 pop	 ebx
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _root$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Add_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Add_X_X_Imp
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 295  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 296  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT
; _this$ = ecx

; 295  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 296  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 296  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 291  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)
; 248  :         {
; 249  :         }
; 250  : 
; 251  :         NotEnoughMemoryException(const NotEnoughMemoryException& p) noexcept(true)
; 252  :             : Exception(p)
; 253  :         {
; 254  :         }
; 255  : 
; 256  :         virtual ~NotEnoughMemoryException() noexcept(true)
; 257  :         {
; 258  :         }
; 259  :     };
; 260  : 
; 261  :     class NotSupportedException
; 262  :         : public Exception
; 263  :     {
; 264  :     public:
; 265  :         NotSupportedException(const wchar_t* message) noexcept(true)
; 266  :             : Exception(PMC_STATUS_NOT_SUPPORTED, message)
; 267  :         {
; 268  :         }
; 269  : 
; 270  :         NotSupportedException(const NotSupportedException& p) noexcept(true)
; 271  :             : Exception(p)
; 272  :         {
; 273  :         }
; 274  : 
; 275  :         virtual ~NotSupportedException() noexcept(true)
; 276  :         {
; 277  :         }
; 278  :     };
; 279  : 
; 280  :     class InternalErrorException
; 281  :         : public Exception
; 282  :     {
; 283  :     public:
; 284  :         InternalErrorException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)
; 286  :         {
; 287  :         }
; 288  : 
; 289  :         InternalErrorException(const InternalErrorException& p) noexcept(true)
; 290  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 291  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 292  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 286  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	c7 41 0c 00 ff
	ff ff		 mov	 DWORD PTR [ecx+12], -256 ; ffffff00H
  00051	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)
; 248  :         {
; 249  :         }
; 250  : 
; 251  :         NotEnoughMemoryException(const NotEnoughMemoryException& p) noexcept(true)
; 252  :             : Exception(p)
; 253  :         {
; 254  :         }
; 255  : 
; 256  :         virtual ~NotEnoughMemoryException() noexcept(true)
; 257  :         {
; 258  :         }
; 259  :     };
; 260  : 
; 261  :     class NotSupportedException
; 262  :         : public Exception
; 263  :     {
; 264  :     public:
; 265  :         NotSupportedException(const wchar_t* message) noexcept(true)
; 266  :             : Exception(PMC_STATUS_NOT_SUPPORTED, message)
; 267  :         {
; 268  :         }
; 269  : 
; 270  :         NotSupportedException(const NotSupportedException& p) noexcept(true)
; 271  :             : Exception(p)
; 272  :         {
; 273  :         }
; 274  : 
; 275  :         virtual ~NotSupportedException() noexcept(true)
; 276  :         {
; 277  :         }
; 278  :     };
; 279  : 
; 280  :     class InternalErrorException
; 281  :         : public Exception
; 282  :     {
; 283  :     public:
; 284  :         InternalErrorException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 286  :         {

  0005b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 287  :         }

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b c1		 mov	 eax, ecx
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 124  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 125  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT
; _this$ = ecx

; 124  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 125  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 125  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 120  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 120  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 121  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_param_name$ = 12					; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 115  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _param_name$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	c7 41 0c fe ff
	ff ff		 mov	 DWORD PTR [ecx+12], -2	; fffffffeH
  00051	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 115  :         {

  0005b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 116  :         }

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b c1		 mov	 eax, ecx
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 70   :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00036	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00039	50		 push	 eax
  0003a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00040	e8 00 00 00 00	 call	 ___std_exception_destroy
  00045	83 c4 04	 add	 esp, 4
  00048	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004c	74 0b		 je	 SHORT $LN9@scalar
  0004e	6a 18		 push	 24			; 00000018H
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00056	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00059	8b c6		 mov	 eax, esi
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5e		 pop	 esi
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT
; _this$ = ecx

; 70   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00033	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00036	50		 push	 eax
  00037	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 71   :         }

  00045	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00048	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004f	59		 pop	 ecx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 62   :         Exception(const Exception& p) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }

  00058	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005f	8b c2		 mov	 eax, edx
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
_data$ = 16						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _code$[ebp]
  0003e	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 57   :             _message = message;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  00044	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00047	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  0004a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00050	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b c1		 mov	 eax, ecx
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_Gexception@std@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 86   :         __std_exception_destroy(&_Data);

  00025	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ___std_exception_destroy
  00034	83 c4 04	 add	 esp, 4
  00037	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0003b	74 0b		 je	 SHORT $LN6@scalar
  0003d	6a 0c		 push	 12			; 0000000cH
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00045	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00048	8b c6		 mov	 eax, esi
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_Gexception@std@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_Gexception@std@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 92   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 85   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1exception@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 86   :         __std_exception_destroy(&_Data);

  00022	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00025	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ___std_exception_destroy
  00031	83 c4 04	 add	 esp, 4

; 87   :     }

  00034	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00037	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003e	59		 pop	 ecx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1exception@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1exception@std@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@XZ
_TEXT	SEGMENT
??0exception@std@@QAE@XZ PROC				; std::exception::exception, COMDAT
; _this$ = ecx

; 50   :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 51   :     }

  0000e	8b c1		 mov	 eax, ecx
  00010	c3		 ret	 0
??0exception@std@@QAE@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
