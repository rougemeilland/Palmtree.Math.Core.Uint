; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\pmc_subtruct.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
PUBLIC	??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
PUBLIC	??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::OverflowException::~OverflowException
PUBLIC	??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::OverflowException::`scalar deleting destructor'
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ; Palmtree::Math::Core::Internal::Subtruct_Imp
PUBLIC	?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Subtruct
PUBLIC	?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
PUBLIC	?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
PUBLIC	?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
PUBLIC	?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
PUBLIC	?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7OverflowException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::OverflowException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	__TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVOverflowException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::OverflowException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@ ; `string'
PUBLIC	__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_13JAOPNPKD@?$AAv@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_13ICFKHAEN@?$AAu@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Complete Object Locator'
PUBLIC	??_R3OverflowException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OverflowException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@OverflowException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_EOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::OverflowException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CommitNumber
EXTRN	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z:PROC ; Palmtree::Math::Core::Internal::CheckNumber
EXTRN	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z:PROC ; Palmtree::Math::Core::Internal::DuplicateNumber
EXTRN	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
EXTRN	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
EXTRN	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
EXTRN	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
EXTRN	?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
EXTRN	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
EXTRN	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A:BYTE ; Palmtree::Math::Core::Internal::number_zero
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OverflowException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2OverflowException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@OverflowException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3OverflowException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::OverflowException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3OverflowException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_13ICFKHAEN@?$AAu@
CONST	SEGMENT
??_C@_13ICFKHAEN@?$AAu@ DB 'u', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13JAOPNPKD@?$AAv@
CONST	SEGMENT
??_C@_13JAOPNPKD@?$AAv@ DB 'v', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
CONST	SEGMENT
??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@ DB 01bH
	DB	'n', 097H, '{k0', 088H, '0', 08aH, '0', 0aaH, '0', 0fcH, '0', 0d0H
	DB	'0', 0fcH, '0', 0d5H, '0', 0edH, '0', 0fcH, '0L0zv', 01fH, 'uW'
	DB	'0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::OverflowException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVOverflowException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVOverflowException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVOverflowException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVOverflowException@Internal@Core@Math@Palmtree@@@8??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVOverflowException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVOverflowException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DD	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7OverflowException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7OverflowException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4OverflowException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::OverflowException::`vftable'
	DD	FLAT:??_EOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DD	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DD	FLAT:??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z$0
__ehfuncinfo$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$1
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z$0
__ehfuncinfo$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$1
__ehfuncinfo$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z$0
__ehfuncinfo$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z$1
__ehfuncinfo$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0
__ehfuncinfo$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_Gexception@std@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1exception@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
_TEXT	SEGMENT
$T2 = -60						; size = 24
$T3 = -36						; size = 24
_root$4 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp, COMDAT

; 652  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 653  :         if (u->IS_ZERO)

  00028	8b 7d 08	 mov	 edi, DWORD PTR _u$[ebp]
  0002b	f6 47 04 01	 test	 BYTE PTR [edi+4], 1
  0002f	74 24		 je	 SHORT $LN2@PMC_Subtru

; 654  :         {
; 655  :             if (v->IS_ZERO)

  00031	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00034	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  00038	0f 84 d1 00 00
	00		 je	 $LN4@PMC_Subtru

; 656  :             {
; 657  :                 // y が 0 である場合
; 658  : 
; 659  :                 // x と y がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 660  :                 return (&number_zero);

  0003e	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 708  :             }
; 709  :         }
; 710  :     }

  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
$LN2@PMC_Subtru:

; 668  :             }
; 669  :         }
; 670  :         else
; 671  :         {
; 672  :             // x が 0 ではない場合
; 673  : 
; 674  :             if (v->IS_ZERO)

  00055	8b 5d 0c	 mov	 ebx, DWORD PTR _v$[ebp]
  00058	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  0005c	74 1b		 je	 SHORT $LN6@PMC_Subtru

; 675  :             {
; 676  :                 // y が 0 である場合
; 677  : 
; 678  :                 // 演算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 679  :                 return (DuplicateNumber(u));

  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00064	83 c4 04	 add	 esp, 4

; 708  :             }
; 709  :         }
; 710  :     }

  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN6@PMC_Subtru:

; 680  :             }
; 681  :             else
; 682  :             {
; 683  :                 // x と y がともに 0 ではない場合
; 684  : 
; 685  :                 // x と y の差を計算する
; 686  :                 ResourceHolderUINT root;

  00079	8d 4d e4	 lea	 ecx, DWORD PTR _root$4[ebp]
  0007c	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00081	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 687  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00088	8b 47 14	 mov	 eax, DWORD PTR [edi+20]

; 688  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;
; 689  :                 if (u_bit_count < v_bit_count)

  0008b	3b 43 14	 cmp	 eax, DWORD PTR [ebx+20]
  0008e	0f 82 96 00 00
	00		 jb	 $LN16@PMC_Subtru

; 693  :                 }
; 694  :                 __UNIT_TYPE w_bit_count = u_bit_count;
; 695  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  00094	50		 push	 eax
  00095	8d 4d e4	 lea	 ecx, DWORD PTR _root$4[ebp]
  00098	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  0009d	8b f0		 mov	 esi, eax

; 696  :                 Subtruct_Imp(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, w->BLOCK, w->BLOCK_COUNT);

  0009f	ff 76 20	 push	 DWORD PTR [esi+32]
  000a2	ff 76 24	 push	 DWORD PTR [esi+36]
  000a5	ff 73 10	 push	 DWORD PTR [ebx+16]
  000a8	ff 73 24	 push	 DWORD PTR [ebx+36]
  000ab	ff 77 10	 push	 DWORD PTR [edi+16]
  000ae	ff 77 24	 push	 DWORD PTR [edi+36]
  000b1	e8 00 00 00 00	 call	 ?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ; Palmtree::Math::Core::Internal::Subtruct_Imp
  000b6	83 c4 18	 add	 esp, 24			; 00000018H

; 697  :                 root.CheckNumber(w);

  000b9	8d 4d e4	 lea	 ecx, DWORD PTR _root$4[ebp]
  000bc	56		 push	 esi
  000bd	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 698  :                 CommitNumber(w);

  000c2	56		 push	 esi
  000c3	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 699  :                 CommitNumber(w);

  000c8	56		 push	 esi
  000c9	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000ce	83 c4 08	 add	 esp, 8

; 700  :                 if (w->IS_ZERO)

  000d1	8d 4d e4	 lea	 ecx, DWORD PTR _root$4[ebp]
  000d4	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  000d8	56		 push	 esi
  000d9	74 0c		 je	 SHORT $LN9@PMC_Subtru

; 701  :                 {
; 702  :                     root.DeallocateNumber(w);

  000db	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 703  :                     w = &number_zero;

  000e0	be 00 00 00 00	 mov	 esi, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 704  :                 }
; 705  :                 else

  000e5	eb 05		 jmp	 SHORT $LN10@PMC_Subtru
$LN9@PMC_Subtru:

; 706  :                     root.UnlinkNumber(w);

  000e7	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN10@PMC_Subtru:

; 707  :                 return (w);

  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d e4	 lea	 ecx, DWORD PTR _root$4[ebp]
  000f6	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000fb	8b c6		 mov	 eax, esi

; 708  :             }
; 709  :         }
; 710  :     }

  000fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00100	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00107	59		 pop	 ecx
  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c3		 ret	 0
$LN4@PMC_Subtru:

; 661  :             }
; 662  :             else
; 663  :             {
; 664  :                 // y が 0 ではない場合
; 665  : 
; 666  :                 // 演算結果は負となってしまうのでエラーを返す。
; 667  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  0010f	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00114	8d 4d dc	 lea	 ecx, DWORD PTR $T3[ebp]
  00117	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  0011c	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00121	8d 45 dc	 lea	 eax, DWORD PTR $T3[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN16@PMC_Subtru:

; 690  :                 {
; 691  :                     // 演算結果は負となってしまうのでエラーを返す。
; 692  :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");

  0012a	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0012f	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00132	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00137	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0013c	8d 45 c4	 lea	 eax, DWORD PTR $T2[ebp]
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN14@PMC_Subtru:
  00145	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _root$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Subtruct_X_X_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X_Imp
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
_TEXT	SEGMENT
$T2 = -72						; size = 24
$T3 = -48						; size = 24
_root$4 = -40						; size = 16
_root$5 = -40						; size = 16
_c$6 = -24						; size = 1
_w_count$1$ = -20					; size = 4
_u_count$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_up$1$ = 8						; size = 4
_wp$1$ = 8						; size = 4
_u_bit_count$1$ = 8					; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp, COMDAT

; 506  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 507  :         if (u->IS_ZERO)

  00028	8b 5d 08	 mov	 ebx, DWORD PTR _u$[ebp]
  0002b	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  0002f	74 23		 je	 SHORT $LN2@PMC_Subtru

; 508  :         {
; 509  :             // u が 0 である場合
; 510  : 
; 511  :             if (v == 0)

  00031	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00034	0b 45 10	 or	 eax, DWORD PTR _v$[ebp+4]
  00037	0f 85 e6 01 00
	00		 jne	 $LN4@PMC_Subtru

; 512  :             {
; 513  :                 // v が 0 である場合
; 514  : 
; 515  :                 // u と v がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 516  :                 return (&number_zero);

  0003d	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 599  :                     }
; 600  :                 }
; 601  :                 else
; 602  :                 {
; 603  :                     // _UINT64_T が 1 ワードで表現できる場合
; 604  :                     ResourceHolderUINT root;
; 605  :                     __UNIT_TYPE x_bit_count = u->UNIT_BIT_COUNT;
; 606  :                     __UNIT_TYPE y_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);
; 607  :                     if (x_bit_count < y_bit_count)
; 608  :                     {
; 609  :                         // 演算結果は負となってしまうのでエラーを返す。
; 610  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 611  :                     }
; 612  :                     __UNIT_TYPE w_bit_count = x_bit_count;
; 613  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 614  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);
; 615  :                     root.CheckNumber(w);
; 616  :                     CommitNumber(w);
; 617  :                     if (w->IS_ZERO)
; 618  :                     {
; 619  :                         root.DeallocateNumber(w);
; 620  :                         w = &number_zero;
; 621  :                     }
; 622  :                     else
; 623  :                         root.UnlinkNumber(w);
; 624  :                     return (w);
; 625  :                 }
; 626  :             }
; 627  :         }
; 628  :     }

  00042	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00045	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004c	59		 pop	 ecx
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
$LN2@PMC_Subtru:

; 517  :             }
; 518  :             else
; 519  :             {
; 520  :                 // v が 0 ではない場合
; 521  : 
; 522  :                 // 演算結果は負となってしまうのでエラーを返す。
; 523  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 524  :             }
; 525  :         }
; 526  :         else
; 527  :         {
; 528  :             // u が 0 ではない場合
; 529  : 
; 530  :             if (v == 0)

  00054	8b 75 0c	 mov	 esi, DWORD PTR _v$[ebp]
  00057	8b c6		 mov	 eax, esi
  00059	8b 7d 10	 mov	 edi, DWORD PTR _v$[ebp+4]
  0005c	0b c7		 or	 eax, edi
  0005e	75 1b		 jne	 SHORT $LN6@PMC_Subtru

; 531  :             {
; 532  :                 // v が 0 である場合
; 533  : 
; 534  :                 // 演算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 535  :                 return (DuplicateNumber(u));

  00060	53		 push	 ebx
  00061	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00066	83 c4 04	 add	 esp, 4

; 599  :                     }
; 600  :                 }
; 601  :                 else
; 602  :                 {
; 603  :                     // _UINT64_T が 1 ワードで表現できる場合
; 604  :                     ResourceHolderUINT root;
; 605  :                     __UNIT_TYPE x_bit_count = u->UNIT_BIT_COUNT;
; 606  :                     __UNIT_TYPE y_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);
; 607  :                     if (x_bit_count < y_bit_count)
; 608  :                     {
; 609  :                         // 演算結果は負となってしまうのでエラーを返す。
; 610  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 611  :                     }
; 612  :                     __UNIT_TYPE w_bit_count = x_bit_count;
; 613  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 614  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);
; 615  :                     root.CheckNumber(w);
; 616  :                     CommitNumber(w);
; 617  :                     if (w->IS_ZERO)
; 618  :                     {
; 619  :                         root.DeallocateNumber(w);
; 620  :                         w = &number_zero;
; 621  :                     }
; 622  :                     else
; 623  :                         root.UnlinkNumber(w);
; 624  :                     return (w);
; 625  :                 }
; 626  :             }
; 627  :         }
; 628  :     }

  00069	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00073	59		 pop	 ecx
  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
$LN6@PMC_Subtru:

; 536  :             }
; 537  :             else
; 538  :             {
; 539  :                 // u と v がともに 0 ではない場合
; 540  : 
; 541  :                 // u と v の差を計算する
; 542  :                 if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)
; 543  :                 {
; 544  :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 545  : 
; 546  :                     __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  0007b	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0007e	89 55 08	 mov	 DWORD PTR _u_bit_count$1$[ebp], edx

; 547  :                     _UINT32_T v_hi;
; 548  :                     _UINT32_T v_lo = _FROMDWORDTOWORD(v, &v_hi);
; 549  :                     if (v_hi == 0)

  00081	85 ff		 test	 edi, edi
  00083	0f 85 a6 00 00
	00		 jne	 $LN10@PMC_Subtru
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 422  :             if (x == 0)

  00089	85 f6		 test	 esi, esi
  0008b	75 05		 jne	 SHORT $LN29@PMC_Subtru

; 423  :                 return (sizeof(x) * 8);

  0008d	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  00090	eb 0a		 jmp	 SHORT $LN28@PMC_Subtru
$LN29@PMC_Subtru:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  00092	0f bd c6	 bsr	 eax, esi

; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00095	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  0009a	2b c8		 sub	 ecx, eax
$LN28@PMC_Subtru:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 552  :                         __UNIT_TYPE v_bit_count = sizeof(v_lo) * 8 - _LZCNT_ALT_32(v_lo);

  0009c	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  000a1	2b c1		 sub	 eax, ecx

; 553  :                         if (u_bit_count < v_bit_count)

  000a3	3b d0		 cmp	 edx, eax
  000a5	0f 82 78 01 00
	00		 jb	 $LN4@PMC_Subtru

; 554  :                         {
; 555  :                             // 演算結果は負となってしまうのでエラーを返す。
; 556  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 557  :                         }
; 558  :                         else
; 559  :                         {
; 560  :                             ResourceHolderUINT root;

  000ab	8d 4d d8	 lea	 ecx, DWORD PTR _root$5[ebp]
  000ae	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 561  :                             __UNIT_TYPE w_bit_count = u_bit_count;
; 562  :                             NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000ba	8b 4d 08	 mov	 ecx, DWORD PTR _u_bit_count$1$[ebp]
  000bd	51		 push	 ecx
  000be	8d 4d d8	 lea	 ecx, DWORD PTR _root$5[ebp]
  000c1	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000c6	8b f0		 mov	 esi, eax

; 563  :                             Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v_lo, w->BLOCK, w->BLOCK_COUNT);

  000c8	ff 76 20	 push	 DWORD PTR [esi+32]
  000cb	ff 76 24	 push	 DWORD PTR [esi+36]
  000ce	ff 75 0c	 push	 DWORD PTR _v$[ebp]
  000d1	ff 73 10	 push	 DWORD PTR [ebx+16]
  000d4	ff 73 24	 push	 DWORD PTR [ebx+36]
  000d7	e8 00 00 00 00	 call	 ?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPAIII0I@Z ; Palmtree::Math::Core::Internal::Subtruct_X_1W
  000dc	83 c4 14	 add	 esp, 20			; 00000014H

; 564  :                             root.CheckNumber(w);

  000df	8d 4d d8	 lea	 ecx, DWORD PTR _root$5[ebp]
  000e2	56		 push	 esi
  000e3	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 565  :                             CommitNumber(w);

  000e8	56		 push	 esi
  000e9	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000ee	83 c4 04	 add	 esp, 4

; 566  :                             if (w->IS_ZERO)

  000f1	8d 4d d8	 lea	 ecx, DWORD PTR _root$5[ebp]
  000f4	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  000f8	56		 push	 esi
  000f9	74 0c		 je	 SHORT $LN14@PMC_Subtru

; 567  :                             {
; 568  :                                 root.DeallocateNumber(w);

  000fb	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 569  :                                 w = &number_zero;

  00100	be 00 00 00 00	 mov	 esi, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 570  :                             }
; 571  :                             else

  00105	eb 05		 jmp	 SHORT $LN15@PMC_Subtru
$LN14@PMC_Subtru:

; 572  :                                 root.UnlinkNumber(w);

  00107	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN15@PMC_Subtru:

; 573  :                             return (w);

  0010c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00113	8d 4d d8	 lea	 ecx, DWORD PTR _root$5[ebp]
  00116	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0011b	8b c6		 mov	 eax, esi

; 599  :                     }
; 600  :                 }
; 601  :                 else
; 602  :                 {
; 603  :                     // _UINT64_T が 1 ワードで表現できる場合
; 604  :                     ResourceHolderUINT root;
; 605  :                     __UNIT_TYPE x_bit_count = u->UNIT_BIT_COUNT;
; 606  :                     __UNIT_TYPE y_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);
; 607  :                     if (x_bit_count < y_bit_count)
; 608  :                     {
; 609  :                         // 演算結果は負となってしまうのでエラーを返す。
; 610  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 611  :                     }
; 612  :                     __UNIT_TYPE w_bit_count = x_bit_count;
; 613  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 614  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);
; 615  :                     root.CheckNumber(w);
; 616  :                     CommitNumber(w);
; 617  :                     if (w->IS_ZERO)
; 618  :                     {
; 619  :                         root.DeallocateNumber(w);
; 620  :                         w = &number_zero;
; 621  :                     }
; 622  :                     else
; 623  :                         root.UnlinkNumber(w);
; 624  :                     return (w);
; 625  :                 }
; 626  :             }
; 627  :         }
; 628  :     }

  0011d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00120	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00127	59		 pop	 ecx
  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c3		 ret	 0
$LN10@PMC_Subtru:

; 574  :                         }
; 575  :                     }
; 576  :                     else
; 577  :                     {
; 578  :                         // y の値が 32bit では表現できない場合
; 579  :                         ResourceHolderUINT root;

  0012f	8d 4d d8	 lea	 ecx, DWORD PTR _root$4[ebp]
  00132	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00137	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 432  :             return (sizeof(x) * 8 - 1 - pos);

  0013e	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  00143	0f bd c7	 bsr	 eax, edi
  00146	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 580  :                         __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v_hi);

  00148	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0014d	2b c1		 sub	 eax, ecx

; 581  :                         if (u_bit_count < v_bit_count)

  0014f	8b 4d 08	 mov	 ecx, DWORD PTR _u_bit_count$1$[ebp]
  00152	3b c8		 cmp	 ecx, eax
  00154	0f 82 e4 00 00
	00		 jb	 $LN48@PMC_Subtru

; 582  :                         {
; 583  :                             // 演算結果は負となってしまうのでエラーを返す。
; 584  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 585  :                         }
; 586  :                         __UNIT_TYPE w_bit_count = u_bit_count;
; 587  :                         NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0015a	51		 push	 ecx
  0015b	8d 4d d8	 lea	 ecx, DWORD PTR _root$4[ebp]
  0015e	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber

; 588  :                         Subtruct_X_2W(u->BLOCK, u->UNIT_WORD_COUNT, v_hi, v_lo, w->BLOCK, w->BLOCK_COUNT);

  00163	8b 53 24	 mov	 edx, DWORD PTR [ebx+36]
  00166	8b f8		 mov	 edi, eax
  00168	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  0016b	89 45 ec	 mov	 DWORD PTR _w_count$1$[ebp], eax
  0016e	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  00171	89 45 08	 mov	 DWORD PTR _wp$1$[ebp], eax
  00174	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00177	89 45 f0	 mov	 DWORD PTR _u_count$1$[ebp], eax

; 97   :         if (u_count < 2)

  0017a	83 f8 02	 cmp	 eax, 2
  0017d	0f 82 bb 00 00
	00		 jb	 $LN48@PMC_Subtru

; 109  :             char c = _SUBTRUCT_UNIT(0, *up++, v_lo, wp++);

  00183	8b 5d 08	 mov	 ebx, DWORD PTR _wp$1$[ebp]
  00186	8b cb		 mov	 ecx, ebx
  00188	8b 02		 mov	 eax, DWORD PTR [edx]
  0018a	83 c2 04	 add	 edx, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0018d	2b c6		 sub	 eax, esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 109  :             char c = _SUBTRUCT_UNIT(0, *up++, v_lo, wp++);

  0018f	89 55 08	 mov	 DWORD PTR _up$1$[ebp], edx

; 112  :             c = _SUBTRUCT_UNIT(c, *up++, v_hi, wp++);

  00192	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00195	89 01		 mov	 DWORD PTR [ecx], eax
  00197	0f 92 c2	 setb	 dl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 112  :             c = _SUBTRUCT_UNIT(c, *up++, v_hi, wp++);

  0019a	8b 45 08	 mov	 eax, DWORD PTR _up$1$[ebp]
  0019d	83 c3 08	 add	 ebx, 8
  001a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a2	83 c0 04	 add	 eax, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001a5	80 c2 ff	 add	 dl, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 112  :             c = _SUBTRUCT_UNIT(c, *up++, v_hi, wp++);

  001a8	89 45 08	 mov	 DWORD PTR _up$1$[ebp], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001ab	1b 4d 10	 sbb	 ecx, DWORD PTR _v$[ebp+4]
  001ae	89 0e		 mov	 DWORD PTR [esi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 114  :             w_count -= 2;

  001b0	8b 4d ec	 mov	 ecx, DWORD PTR _w_count$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001b3	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 112  :             c = _SUBTRUCT_UNIT(c, *up++, v_hi, wp++);

  001b6	88 45 e8	 mov	 BYTE PTR _c$6[ebp], al

; 114  :             w_count -= 2;

  001b9	83 e9 02	 sub	 ecx, 2
  001bc	8b 45 f0	 mov	 eax, DWORD PTR _u_count$1$[ebp]

; 115  : 
; 116  :             // 残りの桁の繰り上がりを計算し、復帰する。
; 117  :             DoBorrow(c, up, u_count, wp, w_count);

  001bf	51		 push	 ecx
  001c0	53		 push	 ebx
  001c1	83 e8 02	 sub	 eax, 2
  001c4	50		 push	 eax
  001c5	ff 75 08	 push	 DWORD PTR _up$1$[ebp]
  001c8	ff 75 e8	 push	 DWORD PTR _c$6[ebp]
  001cb	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoBorrow
  001d0	83 c4 14	 add	 esp, 20			; 00000014H

; 589  :                         root.CheckNumber(w);

  001d3	8d 4d d8	 lea	 ecx, DWORD PTR _root$4[ebp]
  001d6	57		 push	 edi
  001d7	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 590  :                         CommitNumber(w);

  001dc	57		 push	 edi
  001dd	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  001e2	83 c4 04	 add	 esp, 4

; 591  :                         if (w->IS_ZERO)

  001e5	8d 4d d8	 lea	 ecx, DWORD PTR _root$4[ebp]
  001e8	f6 47 04 01	 test	 BYTE PTR [edi+4], 1
  001ec	57		 push	 edi
  001ed	74 0c		 je	 SHORT $LN17@PMC_Subtru

; 592  :                         {
; 593  :                             root.DeallocateNumber(w);

  001ef	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 594  :                             w = &number_zero;

  001f4	bf 00 00 00 00	 mov	 edi, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 595  :                         }
; 596  :                         else

  001f9	eb 05		 jmp	 SHORT $LN18@PMC_Subtru
$LN17@PMC_Subtru:

; 597  :                             root.UnlinkNumber(w);

  001fb	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN18@PMC_Subtru:

; 598  :                         return (w);

  00200	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00207	8d 4d d8	 lea	 ecx, DWORD PTR _root$4[ebp]
  0020a	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  0020f	8b c7		 mov	 eax, edi

; 599  :                     }
; 600  :                 }
; 601  :                 else
; 602  :                 {
; 603  :                     // _UINT64_T が 1 ワードで表現できる場合
; 604  :                     ResourceHolderUINT root;
; 605  :                     __UNIT_TYPE x_bit_count = u->UNIT_BIT_COUNT;
; 606  :                     __UNIT_TYPE y_bit_count = sizeof(v) * 8 - _LZCNT_ALT_UNIT((__UNIT_TYPE)v);
; 607  :                     if (x_bit_count < y_bit_count)
; 608  :                     {
; 609  :                         // 演算結果は負となってしまうのでエラーを返す。
; 610  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 611  :                     }
; 612  :                     __UNIT_TYPE w_bit_count = x_bit_count;
; 613  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);
; 614  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, (__UNIT_TYPE)v, w->BLOCK, w->BLOCK_COUNT);
; 615  :                     root.CheckNumber(w);
; 616  :                     CommitNumber(w);
; 617  :                     if (w->IS_ZERO)
; 618  :                     {
; 619  :                         root.DeallocateNumber(w);
; 620  :                         w = &number_zero;
; 621  :                     }
; 622  :                     else
; 623  :                         root.UnlinkNumber(w);
; 624  :                     return (w);
; 625  :                 }
; 626  :             }
; 627  :         }
; 628  :     }

  00211	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00214	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0021b	59		 pop	 ecx
  0021c	5f		 pop	 edi
  0021d	5e		 pop	 esi
  0021e	5b		 pop	 ebx
  0021f	8b e5		 mov	 esp, ebp
  00221	5d		 pop	 ebp
  00222	c3		 ret	 0
$LN4@PMC_Subtru:
  00223	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00228	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  0022b	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00230	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00235	8d 45 d0	 lea	 eax, DWORD PTR $T3[ebp]
  00238	50		 push	 eax
  00239	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN48@PMC_Subtru:
  0023e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00243	8d 4d b8	 lea	 ecx, DWORD PTR $T2[ebp]
  00246	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  0024b	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00250	8d 45 b8	 lea	 eax, DWORD PTR $T2[ebp]
  00253	50		 push	 eax
  00254	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN47@PMC_Subtru:
  00259	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _root$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR _root$4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
_TEXT	SEGMENT
$T2 = -44						; size = 24
_root$3 = -36						; size = 16
_w$1$ = -20						; size = 4
_c$4 = -16						; size = 1
__$EHRec$ = -12						; size = 12
_up$1$ = 8						; size = 4
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp, COMDAT

; 259  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 260  :         if (u->IS_ZERO)

  00028	8b 5d 08	 mov	 ebx, DWORD PTR _u$[ebp]
  0002b	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  0002f	74 21		 je	 SHORT $LN2@PMC_Subtru

; 261  :         {
; 262  :             // u が 0 である場合
; 263  : 
; 264  :             if (v == 0)

  00031	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00035	0f 85 fd 00 00
	00		 jne	 $LN4@PMC_Subtru

; 265  :             {
; 266  :                 // v が 0 である場合
; 267  : 
; 268  :                 // u と v がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 269  :                 return (&number_zero);

  0003b	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 318  :                 }
; 319  :             }
; 320  :         }
; 321  :     }

  00040	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00043	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004a	59		 pop	 ecx
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN2@PMC_Subtru:

; 270  :             }
; 271  :             else
; 272  :             {
; 273  :                 // v が 0 ではない場合
; 274  : 
; 275  :                 // 演算結果は負となってしまうのでエラーを返す。
; 276  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 277  :             }
; 278  :         }
; 279  :         else
; 280  :         {
; 281  :             // u が 0 ではない場合
; 282  : 
; 283  :             if (v == 0)

  00052	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00055	85 c0		 test	 eax, eax
  00057	75 1b		 jne	 SHORT $LN6@PMC_Subtru

; 284  :             {
; 285  :                 // v が 0 である場合
; 286  : 
; 287  :                 // 演算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 288  :                 return (DuplicateNumber(u));

  00059	53		 push	 ebx
  0005a	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0005f	83 c4 04	 add	 esp, 4

; 318  :                 }
; 319  :             }
; 320  :         }
; 321  :     }

  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
$LN6@PMC_Subtru:

; 289  :             }
; 290  :             else
; 291  :             {
; 292  :                 // u と v がともに 0 ではない場合
; 293  : 
; 294  :                 // u と v の差を計算する
; 295  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  00074	8b 73 14	 mov	 esi, DWORD PTR [ebx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00077	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  0007c	0f bd c0	 bsr	 eax, eax
  0007f	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 296  :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  00081	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00086	2b c1		 sub	 eax, ecx

; 297  :                 if (u_bit_count < v_bit_count)

  00088	3b f0		 cmp	 esi, eax
  0008a	0f 82 a8 00 00
	00		 jb	 $LN4@PMC_Subtru

; 298  :                 {
; 299  :                     // 演算結果は負となってしまうのでエラーを返す。
; 300  :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 301  :                 }
; 302  :                 else
; 303  :                 {
; 304  :                     ResourceHolderUINT root;

  00090	8d 4d dc	 lea	 ecx, DWORD PTR _root$3[ebp]
  00093	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00098	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 305  :                     __UNIT_TYPE w_bit_count = u_bit_count;
; 306  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  0009f	8d 4d dc	 lea	 ecx, DWORD PTR _root$3[ebp]
  000a2	56		 push	 esi
  000a3	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber

; 307  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK, w->BLOCK_COUNT);

  000a8	8b 5b 10	 mov	 ebx, DWORD PTR [ebx+16]
  000ab	89 45 ec	 mov	 DWORD PTR _w$1$[ebp], eax
  000ae	8b 78 24	 mov	 edi, DWORD PTR [eax+36]

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  000b1	8b d7		 mov	 edx, edi

; 307  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK, w->BLOCK_COUNT);

  000b3	8b 70 20	 mov	 esi, DWORD PTR [eax+32]

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  000b6	83 c7 04	 add	 edi, 4

; 307  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK, w->BLOCK_COUNT);

  000b9	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000bc	8b 40 24	 mov	 eax, DWORD PTR [eax+36]

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  000bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c1	83 c0 04	 add	 eax, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000c4	2b 4d 0c	 sub	 ecx, DWORD PTR _v$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  000c7	89 45 08	 mov	 DWORD PTR _up$1$[ebp], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000ca	0f 92 c0	 setb	 al
  000cd	89 0a		 mov	 DWORD PTR [edx], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 88   :         --w_count;

  000cf	4e		 dec	 esi
  000d0	88 45 f0	 mov	 BYTE PTR _c$4[ebp], al

; 89   : 
; 90   :         // 残りの桁の繰上りを行い復帰する。
; 91   :         DoBorrow(c, up, u_count, wp, w_count);

  000d3	56		 push	 esi
  000d4	57		 push	 edi
  000d5	4b		 dec	 ebx
  000d6	53		 push	 ebx
  000d7	ff 75 08	 push	 DWORD PTR _up$1$[ebp]
  000da	ff 75 f0	 push	 DWORD PTR _c$4[ebp]
  000dd	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoBorrow

; 308  :                     root.CheckNumber(w);

  000e2	8b 5d ec	 mov	 ebx, DWORD PTR _w$1$[ebp]
  000e5	8d 4d dc	 lea	 ecx, DWORD PTR _root$3[ebp]

; 91   :         DoBorrow(c, up, u_count, wp, w_count);

  000e8	83 c4 14	 add	 esp, 20			; 00000014H

; 308  :                     root.CheckNumber(w);

  000eb	53		 push	 ebx
  000ec	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 309  :                     CommitNumber(w);

  000f1	53		 push	 ebx
  000f2	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000f7	83 c4 04	 add	 esp, 4

; 310  :                     if (w->IS_ZERO)

  000fa	8d 4d dc	 lea	 ecx, DWORD PTR _root$3[ebp]
  000fd	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  00101	53		 push	 ebx
  00102	74 0c		 je	 SHORT $LN10@PMC_Subtru

; 311  :                     {
; 312  :                         root.DeallocateNumber(w);

  00104	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 313  :                         w = &number_zero;

  00109	bb 00 00 00 00	 mov	 ebx, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 314  :                     }
; 315  :                     else

  0010e	eb 05		 jmp	 SHORT $LN11@PMC_Subtru
$LN10@PMC_Subtru:

; 316  :                         root.UnlinkNumber(w);

  00110	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN11@PMC_Subtru:

; 317  :                     return (w);

  00115	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0011c	8d 4d dc	 lea	 ecx, DWORD PTR _root$3[ebp]
  0011f	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00124	8b c3		 mov	 eax, ebx

; 318  :                 }
; 319  :             }
; 320  :         }
; 321  :     }

  00126	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00129	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00130	59		 pop	 ecx
  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
$LN4@PMC_Subtru:
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0013d	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp]
  00140	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00145	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0014a	8d 45 d4	 lea	 eax, DWORD PTR $T2[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN22@PMC_Subtru:
  00153	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _root$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Subtruct_X_I_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I_Imp
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPAIIII0I@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_up$ = 8						; size = 4
_c$2 = 12						; size = 1
_u_count$ = 12						; size = 4
_v_hi$ = 16						; size = 4
_v_lo$ = 20						; size = 4
_wp$ = 24						; size = 4
_w_count$ = 28						; size = 4
?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPAIIII0I@Z PROC ; Palmtree::Math::Core::Internal::Subtruct_X_2W, COMDAT

; 96   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 97   :         if (u_count < 2)

  00008	8b 7d 0c	 mov	 edi, DWORD PTR _u_count$[ebp]
  0000b	83 ff 02	 cmp	 edi, 2
  0000e	72 42		 jb	 SHORT $LN11@Subtruct_X

; 103  :         }
; 104  :         else
; 105  :         {
; 106  :             // x が 2 ワード以上あった場合
; 107  : 
; 108  :             // 最下位のワードの減算をする
; 109  :             char c = _SUBTRUCT_UNIT(0, *up++, v_lo, wp++);

  00010	8b 75 08	 mov	 esi, DWORD PTR _up$[ebp]
  00013	8b 55 18	 mov	 edx, DWORD PTR _wp$[ebp]
  00016	8b ca		 mov	 ecx, edx
  00018	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0001a	2b 45 14	 sub	 eax, DWORD PTR _v_lo$[ebp]
  0001d	89 01		 mov	 DWORD PTR [ecx], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 112  :             c = _SUBTRUCT_UNIT(c, *up++, v_hi, wp++);

  0001f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00022	1b 4d 10	 sbb	 ecx, DWORD PTR _v_hi$[ebp]
  00025	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00028	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 112  :             c = _SUBTRUCT_UNIT(c, *up++, v_hi, wp++);

  0002b	88 45 0c	 mov	 BYTE PTR _c$2[ebp], al

; 113  :             u_count -= 2;
; 114  :             w_count -= 2;

  0002e	8b 45 1c	 mov	 eax, DWORD PTR _w_count$[ebp]
  00031	83 c0 fe	 add	 eax, -2			; fffffffeH

; 115  : 
; 116  :             // 残りの桁の繰り上がりを計算し、復帰する。
; 117  :             DoBorrow(c, up, u_count, wp, w_count);

  00034	50		 push	 eax
  00035	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  00038	50		 push	 eax
  00039	8d 47 fe	 lea	 eax, DWORD PTR [edi-2]
  0003c	50		 push	 eax
  0003d	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00040	50		 push	 eax
  00041	ff 75 0c	 push	 DWORD PTR _c$2[ebp]
  00044	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoBorrow
  00049	83 c4 14	 add	 esp, 20			; 00000014H
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi

; 118  :         }
; 119  :     }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN11@Subtruct_X:

; 98   :         {
; 99   :             // u が 1 ワードしかなかった場合
; 100  : 
; 101  :             // 明らかに演算結果が負になるのでエラーを通知する。
; 102  :             throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00057	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0005a	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  0005f	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00064	8d 45 e8	 lea	 eax, DWORD PTR $T1[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN9@Subtruct_X:
  0006d	cc		 int	 3
?Subtruct_X_2W@Internal@Core@Math@Palmtree@@YAXPAIIII0I@Z ENDP ; Palmtree::Math::Core::Internal::Subtruct_X_2W
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPAIII0I@Z
_TEXT	SEGMENT
_c$ = 8							; size = 1
_up$ = 8						; size = 4
_u_count$ = 12						; size = 4
_v$ = 16						; size = 4
_wp$ = 20						; size = 4
_w_count$ = 24						; size = 4
?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPAIII0I@Z PROC ; Palmtree::Math::Core::Internal::Subtruct_X_1W, COMDAT

; 84   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00003	8b 55 14	 mov	 edx, DWORD PTR _wp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 84   :     {

  00006	56		 push	 esi

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  00007	8b 75 08	 mov	 esi, DWORD PTR _up$[ebp]
  0000a	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0000c	2b 4d 10	 sub	 ecx, DWORD PTR _v$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  00014	88 45 08	 mov	 BYTE PTR _c$[ebp], al

; 87   :         --u_count;
; 88   :         --w_count;

  00017	8b 45 18	 mov	 eax, DWORD PTR _w_count$[ebp]
  0001a	48		 dec	 eax

; 89   : 
; 90   :         // 残りの桁の繰上りを行い復帰する。
; 91   :         DoBorrow(c, up, u_count, wp, w_count);

  0001b	50		 push	 eax
  0001c	8d 42 04	 lea	 eax, DWORD PTR [edx+4]
  0001f	50		 push	 eax
  00020	8b 45 0c	 mov	 eax, DWORD PTR _u_count$[ebp]
  00023	48		 dec	 eax
  00024	50		 push	 eax
  00025	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00028	50		 push	 eax
  00029	ff 75 08	 push	 DWORD PTR _c$[ebp]
  0002c	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoBorrow
  00031	83 c4 14	 add	 esp, 20			; 00000014H
  00034	5e		 pop	 esi

; 92   :     }

  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?Subtruct_X_1W@Internal@Core@Math@Palmtree@@YAXPAIII0I@Z ENDP ; Palmtree::Math::Core::Internal::Subtruct_X_1W
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_c$ = 8							; size = 1
_up$ = 12						; size = 4
_u_count$ = 16						; size = 4
_wp$ = 20						; size = 4
_w_count$ = 24						; size = 4
?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z PROC ; Palmtree::Math::Core::Internal::DoBorrow, COMDAT

; 38   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx

; 39   :         // 桁借りを続く限り行う
; 40   :         for (;;)
; 41   :         {
; 42   :             if (u_count <= 0)

  00007	8a 5d 08	 mov	 bl, BYTE PTR _c$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 10	 mov	 esi, DWORD PTR _u_count$[ebp]
  0000e	57		 push	 edi
  0000f	85 f6		 test	 esi, esi
  00011	74 2b		 je	 SHORT $LN17@DoBorrow
  00013	8b 45 14	 mov	 eax, DWORD PTR _wp$[ebp]
  00016	8b 7d 0c	 mov	 edi, DWORD PTR _up$[ebp]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@DoBorrow:

; 52   :                 }
; 53   : 
; 54   :                 // xの最上位に達してしまった場合はいずれにしろループを中断して正常復帰する。
; 55   : 
; 56   :                 return;
; 57   :             }
; 58   :             else if (c)

  00020	84 db		 test	 bl, bl
  00022	74 20		 je	 SHORT $LN16@DoBorrow

; 59   :             {
; 60   :                 // xの最上位に達しておらず、かつボローが立っている場合
; 61   : 
; 62   :                 // 桁借りを継続する
; 63   :                 c = _SUBTRUCT_UNIT(c, *up++, 0, wp++);

  00024	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00026	8b d0		 mov	 edx, eax
  00028	83 c0 04	 add	 eax, 4
  0002b	83 c7 04	 add	 edi, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0002e	80 c3 ff	 add	 bl, 255			; 000000ffH
  00031	83 d9 00	 sbb	 ecx, 0
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	0f 92 c3	 setb	 bl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 64   :                 --u_count;

  00039	83 ee 01	 sub	 esi, 1
  0003c	75 e2		 jne	 SHORT $LL2@DoBorrow
$LN17@DoBorrow:

; 43   :             {
; 44   :                 // x の最上位まで達してしまった場合
; 45   : 
; 46   :                 if (c)

  0003e	84 db		 test	 bl, bl
  00040	75 23		 jne	 SHORT $LN26@DoBorrow
  00042	eb 1a		 jmp	 SHORT $LN6@DoBorrow
$LN16@DoBorrow:

; 65   :                 --w_count;
; 66   :             }
; 67   :             else
; 68   :             {
; 69   :                 // xの最上位に達しておらず、かつボローが立っていない場合
; 70   : 
; 71   :                 // 桁借りを中断し、xの残りのデータをzにそのまま複写し、正常復帰する。
; 72   :                 while (u_count > 0)

  00044	85 f6		 test	 esi, esi
  00046	74 16		 je	 SHORT $LN6@DoBorrow
  00048	2b f8		 sub	 edi, eax
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL5@DoBorrow:

; 73   :                 {
; 74   :                     *wp++ = *up++;

  00050	8b 0c 07	 mov	 ecx, DWORD PTR [edi+eax]
  00053	8d 40 04	 lea	 eax, DWORD PTR [eax+4]
  00056	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 75   :                     --u_count;

  00059	83 ee 01	 sub	 esi, 1
  0005c	75 f2		 jne	 SHORT $LL5@DoBorrow
$LN6@DoBorrow:
  0005e	5f		 pop	 edi

; 76   :                     --w_count;
; 77   :                 }
; 78   :                 return;
; 79   :             }
; 80   :         }
; 81   :     }

  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
$LN26@DoBorrow:

; 47   :                 {
; 48   :                     // かつそれでも桁借りを行う必要がある場合
; 49   : 
; 50   :                     // 減算結果が負になってしまったので呼び出し元に通知する。
; 51   :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0006a	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0006d	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00072	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00077	8d 45 e8	 lea	 eax, DWORD PTR $T1[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN24@DoBorrow:
  00080	cc		 int	 3
?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ENDP ; Palmtree::Math::Core::Internal::DoBorrow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __SUBTRUCT_2WORDS_SBB
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__SUBTRUCT_2WORDS_SBB PROC				; COMDAT

; 2314 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2316 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2314 : {

  00009	56		 push	 esi

; 2316 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  0000a	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0000d	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2316 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	1b 0e		 sbb	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2317 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0001c	1b 4e 04	 sbb	 ecx, DWORD PTR [esi+4]
  0001f	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2353 :     return (c);

  00022	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00023	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2353 :     return (c);

  00026	5e		 pop	 esi

; 2354 : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
__SUBTRUCT_2WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __SUBTRUCT_4WORDS_SBB
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__SUBTRUCT_4WORDS_SBB PROC				; COMDAT

; 2128 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2130 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2128 : {

  00009	56		 push	 esi

; 2130 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  0000a	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0000d	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2130 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	1b 0e		 sbb	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2131 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0001c	1b 46 04	 sbb	 eax, DWORD PTR [esi+4]
  0001f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2132 :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00025	1b 46 08	 sbb	 eax, DWORD PTR [esi+8]
  00028	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2133 :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0002b	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0002e	1b 4e 0c	 sbb	 ecx, DWORD PTR [esi+12]
  00031	89 4f 0c	 mov	 DWORD PTR [edi+12], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2181 :     return (c);

  00034	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00035	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2181 :     return (c);

  00038	5e		 pop	 esi

; 2182 : }

  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
__SUBTRUCT_4WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __SUBTRUCT_8WORDS_SBB
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__SUBTRUCT_8WORDS_SBB PROC				; COMDAT

; 1872 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1873 : #ifdef _MSC_VER
; 1874 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1872 : {

  0000b	56		 push	 esi

; 1873 : #ifdef _MSC_VER
; 1874 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	1b 0e		 sbb	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1875 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0001c	1b 46 04	 sbb	 eax, DWORD PTR [esi+4]
  0001f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1876 :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00025	1b 46 08	 sbb	 eax, DWORD PTR [esi+8]
  00028	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1877 :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0002b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0002e	1b 46 0c	 sbb	 eax, DWORD PTR [esi+12]
  00031	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1878 :     c = _SUBTRUCT_UNIT(c, xp[4], yp[4], &zp[4]);

  00034	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00037	1b 46 10	 sbb	 eax, DWORD PTR [esi+16]
  0003a	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1879 :     c = _SUBTRUCT_UNIT(c, xp[5], yp[5], &zp[5]);

  0003d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00040	1b 46 14	 sbb	 eax, DWORD PTR [esi+20]
  00043	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1880 :     c = _SUBTRUCT_UNIT(c, xp[6], yp[6], &zp[6]);

  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00049	1b 46 18	 sbb	 eax, DWORD PTR [esi+24]
  0004c	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1881 :     c = _SUBTRUCT_UNIT(c, xp[7], yp[7], &zp[7]);

  0004f	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00052	1b 4e 1c	 sbb	 ecx, DWORD PTR [esi+28]
  00055	89 4f 1c	 mov	 DWORD PTR [edi+28], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1953 :     return (c);

  00058	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00059	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1953 :     return (c);

  0005c	5e		 pop	 esi

; 1954 : }

  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
__SUBTRUCT_8WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __SUBTRUCT_16WORDS_SBB
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__SUBTRUCT_16WORDS_SBB PROC				; COMDAT

; 1476 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1477 : #ifdef _MSC_VER
; 1478 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1476 : {

  0000b	56		 push	 esi

; 1477 : #ifdef _MSC_VER
; 1478 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	1b 0e		 sbb	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1479 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0001c	1b 46 04	 sbb	 eax, DWORD PTR [esi+4]
  0001f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1480 :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00025	1b 46 08	 sbb	 eax, DWORD PTR [esi+8]
  00028	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1481 :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0002b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0002e	1b 46 0c	 sbb	 eax, DWORD PTR [esi+12]
  00031	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1482 :     c = _SUBTRUCT_UNIT(c, xp[4], yp[4], &zp[4]);

  00034	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00037	1b 46 10	 sbb	 eax, DWORD PTR [esi+16]
  0003a	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1483 :     c = _SUBTRUCT_UNIT(c, xp[5], yp[5], &zp[5]);

  0003d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00040	1b 46 14	 sbb	 eax, DWORD PTR [esi+20]
  00043	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1484 :     c = _SUBTRUCT_UNIT(c, xp[6], yp[6], &zp[6]);

  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00049	1b 46 18	 sbb	 eax, DWORD PTR [esi+24]
  0004c	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1485 :     c = _SUBTRUCT_UNIT(c, xp[7], yp[7], &zp[7]);

  0004f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00052	1b 46 1c	 sbb	 eax, DWORD PTR [esi+28]
  00055	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1486 :     c = _SUBTRUCT_UNIT(c, xp[8], yp[8], &zp[8]);

  00058	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0005b	1b 46 20	 sbb	 eax, DWORD PTR [esi+32]
  0005e	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1487 :     c = _SUBTRUCT_UNIT(c, xp[9], yp[9], &zp[9]);

  00061	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00064	1b 46 24	 sbb	 eax, DWORD PTR [esi+36]
  00067	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1488 :     c = _SUBTRUCT_UNIT(c, xp[10], yp[10], &zp[10]);

  0006a	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0006d	1b 46 28	 sbb	 eax, DWORD PTR [esi+40]
  00070	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1489 :     c = _SUBTRUCT_UNIT(c, xp[11], yp[11], &zp[11]);

  00073	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00076	1b 46 2c	 sbb	 eax, DWORD PTR [esi+44]
  00079	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1490 :     c = _SUBTRUCT_UNIT(c, xp[12], yp[12], &zp[12]);

  0007c	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0007f	1b 46 30	 sbb	 eax, DWORD PTR [esi+48]
  00082	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1491 :     c = _SUBTRUCT_UNIT(c, xp[13], yp[13], &zp[13]);

  00085	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00088	1b 46 34	 sbb	 eax, DWORD PTR [esi+52]
  0008b	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1492 :     c = _SUBTRUCT_UNIT(c, xp[14], yp[14], &zp[14]);

  0008e	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00091	1b 46 38	 sbb	 eax, DWORD PTR [esi+56]
  00094	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1493 :     c = _SUBTRUCT_UNIT(c, xp[15], yp[15], &zp[15]);

  00097	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0009a	1b 4e 3c	 sbb	 ecx, DWORD PTR [esi+60]
  0009d	89 4f 3c	 mov	 DWORD PTR [edi+60], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1613 :     return (c);

  000a0	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000a1	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1613 :     return (c);

  000a4	5e		 pop	 esi

; 1614 : }

  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
__SUBTRUCT_16WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
;	COMDAT __SUBTRUCT_32WORDS_SBB
_TEXT	SEGMENT
_c$ = 8							; size = 1
_xp$ = 12						; size = 4
_yp$ = 16						; size = 4
_zp$ = 20						; size = 4
__SUBTRUCT_32WORDS_SBB PROC				; COMDAT

; 800  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 801  : #ifdef _MSC_VER
; 802  :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _xp$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00006	8a 45 08	 mov	 al, BYTE PTR _c$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 800  : {

  0000b	56		 push	 esi

; 801  : #ifdef _MSC_VER
; 802  :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  0000c	8b 75 10	 mov	 esi, DWORD PTR _yp$[ebp]
  0000f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00011	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00012	8b 7d 14	 mov	 edi, DWORD PTR _zp$[ebp]
  00015	1b 0e		 sbb	 ecx, DWORD PTR [esi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 803  :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0001c	1b 46 04	 sbb	 eax, DWORD PTR [esi+4]
  0001f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 804  :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00025	1b 46 08	 sbb	 eax, DWORD PTR [esi+8]
  00028	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 805  :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0002b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0002e	1b 46 0c	 sbb	 eax, DWORD PTR [esi+12]
  00031	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 806  :     c = _SUBTRUCT_UNIT(c, xp[4], yp[4], &zp[4]);

  00034	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00037	1b 46 10	 sbb	 eax, DWORD PTR [esi+16]
  0003a	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 807  :     c = _SUBTRUCT_UNIT(c, xp[5], yp[5], &zp[5]);

  0003d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00040	1b 46 14	 sbb	 eax, DWORD PTR [esi+20]
  00043	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 808  :     c = _SUBTRUCT_UNIT(c, xp[6], yp[6], &zp[6]);

  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00049	1b 46 18	 sbb	 eax, DWORD PTR [esi+24]
  0004c	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 809  :     c = _SUBTRUCT_UNIT(c, xp[7], yp[7], &zp[7]);

  0004f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00052	1b 46 1c	 sbb	 eax, DWORD PTR [esi+28]
  00055	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 810  :     c = _SUBTRUCT_UNIT(c, xp[8], yp[8], &zp[8]);

  00058	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0005b	1b 46 20	 sbb	 eax, DWORD PTR [esi+32]
  0005e	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 811  :     c = _SUBTRUCT_UNIT(c, xp[9], yp[9], &zp[9]);

  00061	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00064	1b 46 24	 sbb	 eax, DWORD PTR [esi+36]
  00067	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 812  :     c = _SUBTRUCT_UNIT(c, xp[10], yp[10], &zp[10]);

  0006a	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0006d	1b 46 28	 sbb	 eax, DWORD PTR [esi+40]
  00070	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 813  :     c = _SUBTRUCT_UNIT(c, xp[11], yp[11], &zp[11]);

  00073	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00076	1b 46 2c	 sbb	 eax, DWORD PTR [esi+44]
  00079	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 814  :     c = _SUBTRUCT_UNIT(c, xp[12], yp[12], &zp[12]);

  0007c	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0007f	1b 46 30	 sbb	 eax, DWORD PTR [esi+48]
  00082	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 815  :     c = _SUBTRUCT_UNIT(c, xp[13], yp[13], &zp[13]);

  00085	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00088	1b 46 34	 sbb	 eax, DWORD PTR [esi+52]
  0008b	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 816  :     c = _SUBTRUCT_UNIT(c, xp[14], yp[14], &zp[14]);

  0008e	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00091	1b 46 38	 sbb	 eax, DWORD PTR [esi+56]
  00094	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 817  :     c = _SUBTRUCT_UNIT(c, xp[15], yp[15], &zp[15]);

  00097	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0009a	1b 46 3c	 sbb	 eax, DWORD PTR [esi+60]
  0009d	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 818  :     c = _SUBTRUCT_UNIT(c, xp[16], yp[16], &zp[16]);

  000a0	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000a3	1b 46 40	 sbb	 eax, DWORD PTR [esi+64]
  000a6	89 47 40	 mov	 DWORD PTR [edi+64], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 819  :     c = _SUBTRUCT_UNIT(c, xp[17], yp[17], &zp[17]);

  000a9	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000ac	1b 46 44	 sbb	 eax, DWORD PTR [esi+68]
  000af	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 820  :     c = _SUBTRUCT_UNIT(c, xp[18], yp[18], &zp[18]);

  000b2	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000b5	1b 46 48	 sbb	 eax, DWORD PTR [esi+72]
  000b8	89 47 48	 mov	 DWORD PTR [edi+72], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 821  :     c = _SUBTRUCT_UNIT(c, xp[19], yp[19], &zp[19]);

  000bb	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000be	1b 46 4c	 sbb	 eax, DWORD PTR [esi+76]
  000c1	89 47 4c	 mov	 DWORD PTR [edi+76], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 822  :     c = _SUBTRUCT_UNIT(c, xp[20], yp[20], &zp[20]);

  000c4	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000c7	1b 46 50	 sbb	 eax, DWORD PTR [esi+80]
  000ca	89 47 50	 mov	 DWORD PTR [edi+80], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 823  :     c = _SUBTRUCT_UNIT(c, xp[21], yp[21], &zp[21]);

  000cd	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000d0	1b 46 54	 sbb	 eax, DWORD PTR [esi+84]
  000d3	89 47 54	 mov	 DWORD PTR [edi+84], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 824  :     c = _SUBTRUCT_UNIT(c, xp[22], yp[22], &zp[22]);

  000d6	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000d9	1b 46 58	 sbb	 eax, DWORD PTR [esi+88]
  000dc	89 47 58	 mov	 DWORD PTR [edi+88], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 825  :     c = _SUBTRUCT_UNIT(c, xp[23], yp[23], &zp[23]);

  000df	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000e2	1b 46 5c	 sbb	 eax, DWORD PTR [esi+92]
  000e5	89 47 5c	 mov	 DWORD PTR [edi+92], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 826  :     c = _SUBTRUCT_UNIT(c, xp[24], yp[24], &zp[24]);

  000e8	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000eb	1b 46 60	 sbb	 eax, DWORD PTR [esi+96]
  000ee	89 47 60	 mov	 DWORD PTR [edi+96], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 827  :     c = _SUBTRUCT_UNIT(c, xp[25], yp[25], &zp[25]);

  000f1	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000f4	1b 46 64	 sbb	 eax, DWORD PTR [esi+100]
  000f7	89 47 64	 mov	 DWORD PTR [edi+100], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 828  :     c = _SUBTRUCT_UNIT(c, xp[26], yp[26], &zp[26]);

  000fa	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000fd	1b 46 68	 sbb	 eax, DWORD PTR [esi+104]
  00100	89 47 68	 mov	 DWORD PTR [edi+104], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 829  :     c = _SUBTRUCT_UNIT(c, xp[27], yp[27], &zp[27]);

  00103	8b 42 6c	 mov	 eax, DWORD PTR [edx+108]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00106	1b 46 6c	 sbb	 eax, DWORD PTR [esi+108]
  00109	89 47 6c	 mov	 DWORD PTR [edi+108], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 830  :     c = _SUBTRUCT_UNIT(c, xp[28], yp[28], &zp[28]);

  0010c	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0010f	1b 46 70	 sbb	 eax, DWORD PTR [esi+112]
  00112	89 47 70	 mov	 DWORD PTR [edi+112], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 831  :     c = _SUBTRUCT_UNIT(c, xp[29], yp[29], &zp[29]);

  00115	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00118	1b 46 74	 sbb	 eax, DWORD PTR [esi+116]
  0011b	89 47 74	 mov	 DWORD PTR [edi+116], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 832  :     c = _SUBTRUCT_UNIT(c, xp[30], yp[30], &zp[30]);

  0011e	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00121	1b 46 78	 sbb	 eax, DWORD PTR [esi+120]
  00124	89 47 78	 mov	 DWORD PTR [edi+120], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 833  :     c = _SUBTRUCT_UNIT(c, xp[31], yp[31], &zp[31]);

  00127	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0012a	1b 4e 7c	 sbb	 ecx, DWORD PTR [esi+124]
  0012d	89 4f 7c	 mov	 DWORD PTR [edi+124], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1049 :     return (c);

  00130	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00131	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1049 :     return (c);

  00134	5e		 pop	 esi

; 1050 : }

  00135	5d		 pop	 ebp
  00136	c3		 ret	 0
__SUBTRUCT_32WORDS_SBB ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __LZCNT_ALT_UNIT
_TEXT	SEGMENT
_x$ = 8							; size = 4
__LZCNT_ALT_UNIT PROC					; COMDAT

; 454  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 455  :             if (x == 0)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  0000a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 480  :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);

  00011	0f bd c8	 bsr	 ecx, eax

; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);
; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00014	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00019	2b c1		 sub	 eax, ecx

; 480  :         }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
__LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __LZCNT_ALT_32
_TEXT	SEGMENT
_x$ = 8							; size = 4
__LZCNT_ALT_32 PROC					; COMDAT

; 421  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 422  :             if (x == 0)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 423  :                 return (sizeof(x) * 8);

  0000a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 433  :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 424  :             DWORD pos;
; 425  : #ifdef _MSC_VER
; 426  :             _BitScanReverse(&pos, x);

  00011	0f bd c8	 bsr	 ecx, eax

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00014	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00019	2b c1		 sub	 eax, ecx

; 433  :         }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
__LZCNT_ALT_32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __SUBTRUCT_UNIT
_TEXT	SEGMENT
_borrow$ = 8						; size = 1
_u$ = 12						; size = 4
_v$ = 16						; size = 4
_w$ = 20						; size = 4
__SUBTRUCT_UNIT PROC					; COMDAT

; 198  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 199  : #ifdef _M_IX86
; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00003	8a 45 08	 mov	 al, BYTE PTR _borrow$[ebp]
  00006	8b 55 14	 mov	 edx, DWORD PTR _w$[ebp]
  00009	04 ff		 add	 al, 255			; 000000ffH
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _u$[ebp]
  0000e	1b 4d 10	 sbb	 ecx, DWORD PTR _v$[ebp]
  00011	0f 92 c0	 setb	 al
  00014	89 0a		 mov	 DWORD PTR [edx], ecx

; 201  : #elif defined(_M_X64)
; 202  :             return (_subborrow_u64(borrow, u, v, w));
; 203  : #else
; 204  : #error unknown platform
; 205  : #endif
; 206  :         }

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
__SUBTRUCT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __FROMDWORDTOWORD
_TEXT	SEGMENT
_value$ = 8						; size = 8
_result_high$ = 16					; size = 4
__FROMDWORDTOWORD PROC					; COMDAT

; 145  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 146  :             *result_high = (_UINT32_T)(value >> 32);

  00003	8b 45 10	 mov	 eax, DWORD PTR _result_high$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _value$[ebp+4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 147  :             return ((_UINT32_T)value);

  0000b	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 148  :         }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
__FROMDWORDTOWORD ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __FROMWORDTODWORD
_TEXT	SEGMENT
_value_high$ = 8					; size = 4
_value_low$ = 12					; size = 4
__FROMWORDTODWORD PROC					; COMDAT

; 140  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  00003	8b 55 08	 mov	 edx, DWORD PTR _value_high$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	0b 45 0c	 or	 eax, DWORD PTR _value_low$[ebp]

; 142  :         }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
__FROMWORDTODWORD ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
_TEXT	SEGMENT
$T2 = -76						; size = 24
_root$ = -52						; size = 16
$T3 = -36						; size = 24
$T4 = -36						; size = 24
_root$5 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X, COMDAT

; 713  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 714  :         if (u == nullptr)

  00028	8b 5d 08	 mov	 ebx, DWORD PTR _u$[ebp]
  0002b	85 db		 test	 ebx, ebx
  0002d	0f 84 3b 01 00
	00		 je	 $LN25@PMC_Subtru

; 716  :         if (v == nullptr)

  00033	8b 7d 0c	 mov	 edi, DWORD PTR _v$[ebp]
  00036	85 ff		 test	 edi, edi
  00038	75 0a		 jne	 SHORT $LN3@PMC_Subtru

; 717  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_13JAOPNPKD@?$AAv@
  0003f	e9 2f 01 00 00	 jmp	 $LN21@PMC_Subtru
$LN3@PMC_Subtru:

; 718  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 719  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;
; 720  :         CheckNumber(nu);

  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber

; 721  :         CheckNumber(nv);

  0004a	57		 push	 edi
  0004b	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00050	83 c4 08	 add	 esp, 8

; 722  :         ResourceHolderUINT root;

  00053	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00056	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 653  :         if (u->IS_ZERO)

  00062	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  00066	74 27		 je	 SHORT $LN7@PMC_Subtru

; 654  :         {
; 655  :             if (v->IS_ZERO)

  00068	f6 47 04 01	 test	 BYTE PTR [edi+4], 1
  0006c	74 0a		 je	 SHORT $LN9@PMC_Subtru

; 656  :             {
; 657  :                 // y が 0 である場合
; 658  : 
; 659  :                 // x と y がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 660  :                 return (&number_zero);

  0006e	be 00 00 00 00	 mov	 esi, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00073	e9 bf 00 00 00	 jmp	 $LN12@PMC_Subtru
$LN9@PMC_Subtru:

; 661  :             }
; 662  :             else
; 663  :             {
; 664  :                 // y が 0 ではない場合
; 665  : 
; 666  :                 // 演算結果は負となってしまうのでエラーを返す。
; 667  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");

  00078	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  0007d	8d 4d dc	 lea	 ecx, DWORD PTR $T3[ebp]
  00080	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  00085	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0008a	e9 f6 00 00 00	 jmp	 $LN22@PMC_Subtru
$LN7@PMC_Subtru:

; 668  :             }
; 669  :         }
; 670  :         else
; 671  :         {
; 672  :             // x が 0 ではない場合
; 673  : 
; 674  :             if (v->IS_ZERO)

  0008f	f6 47 04 01	 test	 BYTE PTR [edi+4], 1
  00093	74 10		 je	 SHORT $LN11@PMC_Subtru

; 675  :             {
; 676  :                 // y が 0 である場合
; 677  : 
; 678  :                 // 演算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 679  :                 return (DuplicateNumber(u));

  00095	53		 push	 ebx
  00096	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  0009b	83 c4 04	 add	 esp, 4
  0009e	8b f0		 mov	 esi, eax
  000a0	e9 92 00 00 00	 jmp	 $LN12@PMC_Subtru
$LN11@PMC_Subtru:

; 680  :             }
; 681  :             else
; 682  :             {
; 683  :                 // x と y がともに 0 ではない場合
; 684  : 
; 685  :                 // x と y の差を計算する
; 686  :                 ResourceHolderUINT root;

  000a5	8d 4d e4	 lea	 ecx, DWORD PTR _root$5[ebp]
  000a8	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000ad	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 687  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  000b1	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]

; 688  :                 __UNIT_TYPE v_bit_count = v->UNIT_BIT_COUNT;
; 689  :                 if (u_bit_count < v_bit_count)

  000b4	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  000b7	73 1a		 jae	 SHORT $LN13@PMC_Subtru

; 690  :                 {
; 691  :                     // 演算結果は負となってしまうのでエラーを返す。
; 692  :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");

  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  000be	8d 4d b4	 lea	 ecx, DWORD PTR $T2[ebp]
  000c1	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  000c6	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  000cb	8d 45 b4	 lea	 eax, DWORD PTR $T2[ebp]
  000ce	e9 b5 00 00 00	 jmp	 $LN23@PMC_Subtru
$LN13@PMC_Subtru:

; 693  :                 }
; 694  :                 __UNIT_TYPE w_bit_count = u_bit_count;
; 695  :                 NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000d3	50		 push	 eax
  000d4	8d 4d e4	 lea	 ecx, DWORD PTR _root$5[ebp]
  000d7	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
  000dc	8b f0		 mov	 esi, eax

; 696  :                 Subtruct_Imp(u->BLOCK, u->UNIT_WORD_COUNT, v->BLOCK, v->UNIT_WORD_COUNT, w->BLOCK, w->BLOCK_COUNT);

  000de	ff 76 20	 push	 DWORD PTR [esi+32]
  000e1	ff 76 24	 push	 DWORD PTR [esi+36]
  000e4	ff 77 10	 push	 DWORD PTR [edi+16]
  000e7	ff 77 24	 push	 DWORD PTR [edi+36]
  000ea	ff 73 10	 push	 DWORD PTR [ebx+16]
  000ed	ff 73 24	 push	 DWORD PTR [ebx+36]
  000f0	e8 00 00 00 00	 call	 ?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ; Palmtree::Math::Core::Internal::Subtruct_Imp
  000f5	83 c4 18	 add	 esp, 24			; 00000018H

; 697  :                 root.CheckNumber(w);

  000f8	8d 4d e4	 lea	 ecx, DWORD PTR _root$5[ebp]
  000fb	56		 push	 esi
  000fc	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 698  :                 CommitNumber(w);

  00101	56		 push	 esi
  00102	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber

; 699  :                 CommitNumber(w);

  00107	56		 push	 esi
  00108	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  0010d	83 c4 08	 add	 esp, 8

; 700  :                 if (w->IS_ZERO)

  00110	8d 4d e4	 lea	 ecx, DWORD PTR _root$5[ebp]
  00113	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  00117	56		 push	 esi
  00118	74 0c		 je	 SHORT $LN14@PMC_Subtru

; 701  :                 {
; 702  :                     root.DeallocateNumber(w);

  0011a	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 703  :                     w = &number_zero;

  0011f	be 00 00 00 00	 mov	 esi, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 704  :                 }
; 705  :                 else

  00124	eb 05		 jmp	 SHORT $LN15@PMC_Subtru
$LN14@PMC_Subtru:

; 706  :                     root.UnlinkNumber(w);

  00126	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN15@PMC_Subtru:

; 707  :                 return (w);

  0012b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0012f	8d 4d e4	 lea	 ecx, DWORD PTR _root$5[ebp]
  00132	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN12@PMC_Subtru:

; 723  :         NUMBER_HEADER* w = PMC_Subtruct_X_X_Imp(nu, nv);
; 724  :         root.HookNumber(w);

  00137	56		 push	 esi
  00138	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  0013b	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 725  : #ifdef _DEBUG
; 726  :         CheckNumber(w);
; 727  : #endif
; 728  :         root.UnlinkNumber(w);

  00140	56		 push	 esi
  00141	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00144	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 729  :         return ((PMC_HANDLE_UINT)w);

  00149	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00150	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00153	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00158	8b c6		 mov	 eax, esi

; 730  :     }

  0015a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0015d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00164	59		 pop	 ecx
  00165	5f		 pop	 edi
  00166	5e		 pop	 esi
  00167	5b		 pop	 ebx
  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c2 08 00	 ret	 8
$LN25@PMC_Subtru:

; 715  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0016e	68 00 00 00 00	 push	 OFFSET ??_C@_13ICFKHAEN@?$AAu@
$LN21@PMC_Subtru:

; 730  :     }

  00173	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00178	8d 4d dc	 lea	 ecx, DWORD PTR $T4[ebp]
  0017b	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00180	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
$LN22@PMC_Subtru:
  00185	8d 45 dc	 lea	 eax, DWORD PTR $T4[ebp]
$LN23@PMC_Subtru:
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN20@PMC_Subtru:
  0018e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z$1:
  00008	8d 4d e4	 lea	 ecx, DWORD PTR _root$5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Subtruct_X_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@0@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_X
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
_TEXT	SEGMENT
$T2 = -52						; size = 24
_root$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 8
?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L, COMDAT

; 631  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 632  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(v) * 8)
; 633  :         {
; 634  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 635  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_subtruct.cpp;PMC_Subtruct_X_L;1");
; 636  :         }
; 637  :         if (u == nullptr)

  00026	8b 75 08	 mov	 esi, DWORD PTR _u$[ebp]
  00029	85 f6		 test	 esi, esi
  0002b	74 5e		 je	 SHORT $LN9@PMC_Subtru

; 639  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 640  :         CheckNumber(nu);

  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00033	83 c4 04	 add	 esp, 4

; 641  :         ResourceHolderUINT root;

  00036	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00039	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 642  :         NUMBER_HEADER* w = PMC_Subtruct_X_L_Imp(nu, v);

  00045	ff 75 10	 push	 DWORD PTR _v$[ebp+4]
  00048	ff 75 0c	 push	 DWORD PTR _v$[ebp]
  0004b	56		 push	 esi
  0004c	e8 00 00 00 00	 call	 ?PMC_Subtruct_X_L_Imp@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@_K@Z ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L_Imp
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 643  :         root.HookNumber(w);

  00054	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00057	8b f0		 mov	 esi, eax
  00059	56		 push	 esi
  0005a	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 644  : #ifdef _DEBUG
; 645  :         CheckNumber(w);
; 646  : #endif
; 647  :         root.UnlinkNumber(w);

  0005f	56		 push	 esi
  00060	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00063	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 648  :         return ((PMC_HANDLE_UINT)w);

  00068	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006f	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00072	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00077	8b c6		 mov	 eax, esi

; 649  :     }

  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5e		 pop	 esi
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
$LN9@PMC_Subtru:

; 638  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_13JAOPNPKD@?$AAv@
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00095	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00098	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0009d	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000a2	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@PMC_Subtru:
  000ab	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Subtruct_X_L@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@_K@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_L
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
_TEXT	SEGMENT
_root$ = -56						; size = 16
$T2 = -40						; size = 24
$T3 = -40						; size = 24
_root$4 = -32						; size = 16
_w$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_up$1$ = 8						; size = 4
_u$ = 8							; size = 4
_c$5 = 12						; size = 1
_v$ = 12						; size = 4
?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I, COMDAT

; 324  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 325  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(v) * 8)
; 326  :         {
; 327  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 328  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_subtruct.cpp;PMC_Subtruct_X_I;1");
; 329  :         }
; 330  :         if (u == nullptr)

  00028	8b 5d 08	 mov	 ebx, DWORD PTR _u$[ebp]
  0002b	85 db		 test	 ebx, ebx
  0002d	0f 84 2a 01 00
	00		 je	 $LN30@PMC_Subtru

; 332  :         NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 333  :         CheckNumber(nu);

  00033	53		 push	 ebx
  00034	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00039	83 c4 04	 add	 esp, 4

; 334  :         ResourceHolderUINT root;

  0003c	8d 4d c8	 lea	 ecx, DWORD PTR _root$[ebp]
  0003f	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 260  :         if (u->IS_ZERO)

  0004b	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  0004f	74 14		 je	 SHORT $LN7@PMC_Subtru

; 261  :         {
; 262  :             // u が 0 である場合
; 263  : 
; 264  :             if (v == 0)

  00051	83 7d 0c 00	 cmp	 DWORD PTR _v$[ebp], 0
  00055	0f 85 22 01 00
	00		 jne	 $LN9@PMC_Subtru

; 265  :             {
; 266  :                 // v が 0 である場合
; 267  : 
; 268  :                 // u と v がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 269  :                 return (&number_zero);

  0005b	bb 00 00 00 00	 mov	 ebx, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  00060	e9 c1 00 00 00	 jmp	 $LN14@PMC_Subtru
$LN7@PMC_Subtru:

; 270  :             }
; 271  :             else
; 272  :             {
; 273  :                 // v が 0 ではない場合
; 274  : 
; 275  :                 // 演算結果は負となってしまうのでエラーを返す。
; 276  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 277  :             }
; 278  :         }
; 279  :         else
; 280  :         {
; 281  :             // u が 0 ではない場合
; 282  : 
; 283  :             if (v == 0)

  00065	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00068	85 c0		 test	 eax, eax
  0006a	75 10		 jne	 SHORT $LN11@PMC_Subtru

; 284  :             {
; 285  :                 // v が 0 である場合
; 286  : 
; 287  :                 // 演算結果となる x の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 288  :                 return (DuplicateNumber(u));

  0006c	53		 push	 ebx
  0006d	e8 00 00 00 00	 call	 ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
  00072	83 c4 04	 add	 esp, 4
  00075	8b d8		 mov	 ebx, eax
  00077	e9 aa 00 00 00	 jmp	 $LN14@PMC_Subtru
$LN11@PMC_Subtru:

; 289  :             }
; 290  :             else
; 291  :             {
; 292  :                 // u と v がともに 0 ではない場合
; 293  : 
; 294  :                 // u と v の差を計算する
; 295  :                 __UNIT_TYPE u_bit_count = u->UNIT_BIT_COUNT;

  0007c	8b 73 14	 mov	 esi, DWORD PTR [ebx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 432  :             return (sizeof(x) * 8 - 1 - pos);

  0007f	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  00084	0f bd c0	 bsr	 eax, eax
  00087	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 296  :                 __UNIT_TYPE v_bit_count = sizeof(v) * 8 - _LZCNT_ALT_32(v);

  00089	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0008e	2b c1		 sub	 eax, ecx

; 297  :                 if (u_bit_count < v_bit_count)

  00090	3b f0		 cmp	 esi, eax
  00092	0f 82 e5 00 00
	00		 jb	 $LN9@PMC_Subtru

; 298  :                 {
; 299  :                     // 演算結果は負となってしまうのでエラーを返す。
; 300  :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 301  :                 }
; 302  :                 else
; 303  :                 {
; 304  :                     ResourceHolderUINT root;

  00098	8d 4d e0	 lea	 ecx, DWORD PTR _root$4[ebp]
  0009b	e8 00 00 00 00	 call	 ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
  000a0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 305  :                     __UNIT_TYPE w_bit_count = u_bit_count;
; 306  :                     NUMBER_HEADER* w = root.AllocateNumber(w_bit_count);

  000a4	8d 4d e0	 lea	 ecx, DWORD PTR _root$4[ebp]
  000a7	56		 push	 esi
  000a8	e8 00 00 00 00	 call	 ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber

; 307  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK, w->BLOCK_COUNT);

  000ad	8b 5b 10	 mov	 ebx, DWORD PTR [ebx+16]
  000b0	89 45 f0	 mov	 DWORD PTR _w$1$[ebp], eax
  000b3	8b 78 24	 mov	 edi, DWORD PTR [eax+36]

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  000b6	8b d7		 mov	 edx, edi

; 307  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK, w->BLOCK_COUNT);

  000b8	8b 70 20	 mov	 esi, DWORD PTR [eax+32]

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  000bb	83 c7 04	 add	 edi, 4

; 307  :                     Subtruct_X_1W(u->BLOCK, u->UNIT_WORD_COUNT, v, w->BLOCK, w->BLOCK_COUNT);

  000be	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  000c1	8b 40 24	 mov	 eax, DWORD PTR [eax+36]

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	83 c0 04	 add	 eax, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000c9	2b 4d 0c	 sub	 ecx, DWORD PTR _v$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 86   :         char c = _SUBTRUCT_UNIT(0, *up++, v, wp++);

  000cc	89 45 08	 mov	 DWORD PTR _up$1$[ebp], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000cf	0f 92 c0	 setb	 al
  000d2	89 0a		 mov	 DWORD PTR [edx], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 88   :         --w_count;

  000d4	4e		 dec	 esi
  000d5	88 45 0c	 mov	 BYTE PTR _c$5[ebp], al

; 89   : 
; 90   :         // 残りの桁の繰上りを行い復帰する。
; 91   :         DoBorrow(c, up, u_count, wp, w_count);

  000d8	56		 push	 esi
  000d9	57		 push	 edi
  000da	4b		 dec	 ebx
  000db	53		 push	 ebx
  000dc	ff 75 08	 push	 DWORD PTR _up$1$[ebp]
  000df	ff 75 0c	 push	 DWORD PTR _c$5[ebp]
  000e2	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoBorrow

; 308  :                     root.CheckNumber(w);

  000e7	8b 5d f0	 mov	 ebx, DWORD PTR _w$1$[ebp]
  000ea	8d 4d e0	 lea	 ecx, DWORD PTR _root$4[ebp]

; 91   :         DoBorrow(c, up, u_count, wp, w_count);

  000ed	83 c4 14	 add	 esp, 20			; 00000014H

; 308  :                     root.CheckNumber(w);

  000f0	53		 push	 ebx
  000f1	e8 00 00 00 00	 call	 ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber

; 309  :                     CommitNumber(w);

  000f6	53		 push	 ebx
  000f7	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000fc	83 c4 04	 add	 esp, 4

; 310  :                     if (w->IS_ZERO)

  000ff	8d 4d e0	 lea	 ecx, DWORD PTR _root$4[ebp]
  00102	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  00106	53		 push	 ebx
  00107	74 0c		 je	 SHORT $LN15@PMC_Subtru

; 311  :                     {
; 312  :                         root.DeallocateNumber(w);

  00109	e8 00 00 00 00	 call	 ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber

; 313  :                         w = &number_zero;

  0010e	bb 00 00 00 00	 mov	 ebx, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 314  :                     }
; 315  :                     else

  00113	eb 05		 jmp	 SHORT $LN16@PMC_Subtru
$LN15@PMC_Subtru:

; 316  :                         root.UnlinkNumber(w);

  00115	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
$LN16@PMC_Subtru:

; 317  :                     return (w);

  0011a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0011e	8d 4d e0	 lea	 ecx, DWORD PTR _root$4[ebp]
  00121	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
$LN14@PMC_Subtru:

; 335  :         NUMBER_HEADER* w = PMC_Subtruct_X_I_Imp(nu, v);
; 336  :         root.HookNumber(w);

  00126	53		 push	 ebx
  00127	8d 4d c8	 lea	 ecx, DWORD PTR _root$[ebp]
  0012a	e8 00 00 00 00	 call	 ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber

; 337  : #ifdef _DEBUG
; 338  :         CheckNumber(w);
; 339  : #endif
; 340  :         root.UnlinkNumber(w);

  0012f	53		 push	 ebx
  00130	8d 4d c8	 lea	 ecx, DWORD PTR _root$[ebp]
  00133	e8 00 00 00 00	 call	 ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber

; 341  :         return ((PMC_HANDLE_UINT)w);

  00138	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0013f	8d 4d c8	 lea	 ecx, DWORD PTR _root$[ebp]
  00142	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  00147	8b c3		 mov	 eax, ebx

; 342  :     }

  00149	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00153	59		 pop	 ecx
  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	5b		 pop	 ebx
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c2 08 00	 ret	 8
$LN30@PMC_Subtru:

; 331  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"u");

  0015d	68 00 00 00 00	 push	 OFFSET ??_C@_13ICFKHAEN@?$AAu@
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  00167	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0016a	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  0016f	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00174	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN9@PMC_Subtru:

; 342  :     }

  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00182	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00185	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  0018a	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  0018f	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00192	50		 push	 eax
  00193	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN28@PMC_Subtru:
  00198	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z$0:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR _root$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR _root$4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__ehhandler$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Subtruct_X_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@I@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_X_I
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
$T2 = -24						; size = 24
_u$ = 8							; size = 8
_v$ = 16						; size = 4
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X, COMDAT

; 345  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi

; 346  :         if (__UNIT_TYPE_BIT_COUNT * 2 < sizeof(u) * 8)
; 347  :         {
; 348  :             // _UINT64_T が 2 ワードで表現しきれない処理系には対応しない
; 349  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_subtruct.cpp;PMC_Subtruct_L_X;1");
; 350  :         }
; 351  :         if (v == nullptr)

  00007	8b 75 10	 mov	 esi, DWORD PTR _v$[ebp]
  0000a	57		 push	 edi
  0000b	85 f6		 test	 esi, esi
  0000d	0f 84 ac 00 00
	00		 je	 $LN46@PMC_Subtru

; 353  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;
; 354  :         CheckNumber(nv);

  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00019	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001c	83 c4 04	 add	 esp, 4

; 355  :         if (u == 0)

  0001f	8b 7d 08	 mov	 edi, DWORD PTR _u$[ebp]
  00022	83 e1 01	 and	 ecx, 1
  00025	8b 55 0c	 mov	 edx, DWORD PTR _u$[ebp+4]
  00028	8b c7		 mov	 eax, edi
  0002a	0b c2		 or	 eax, edx
  0002c	75 12		 jne	 SHORT $LN4@PMC_Subtru

; 356  :         {
; 357  :             // u が 0 である場合
; 358  : 
; 359  :             if (nv->IS_ZERO)

  0002e	85 c9		 test	 ecx, ecx
  00030	0f 84 a9 00 00
	00		 je	 $LN6@PMC_Subtru

; 360  :             {
; 361  :                 // v が 0 である場合
; 362  : 
; 363  :                 // x と y がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 364  :                 return (0);

  00036	5f		 pop	 edi
  00037	33 d2		 xor	 edx, edx

; 503  :     }

  00039	5e		 pop	 esi
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 0c 00	 ret	 12			; 0000000cH
$LN4@PMC_Subtru:

; 365  :             }
; 366  :             else
; 367  :             {
; 368  :                 // v が 0 ではない場合
; 369  : 
; 370  :                 // 演算結果は負となってしまうのでエラーを返す。
; 371  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 372  :             }
; 373  :         }
; 374  :         else
; 375  :         {
; 376  :             // u が 0 ではない場合
; 377  : 
; 378  :             if (nv->IS_ZERO)

  00040	85 c9		 test	 ecx, ecx
  00042	74 0a		 je	 SHORT $LN8@PMC_Subtru

; 379  :             {
; 380  :                 // v が 0 である場合
; 381  : 
; 382  :                 // 演算結果となる u の値を持つ NUMBER_HEADER 構造体を獲得し、呼び出し元へ返す。
; 383  :                 return (u);

  00044	8b c7		 mov	 eax, edi
  00046	5f		 pop	 edi

; 503  :     }

  00047	5e		 pop	 esi
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 0c 00	 ret	 12			; 0000000cH
$LN8@PMC_Subtru:

; 384  :             }
; 385  :             else
; 386  :             {
; 387  :                 // u と v がともに 0 ではない場合
; 388  : 
; 389  :                 // u と v の差を計算する
; 390  :                 if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)
; 391  :                 {
; 392  :                     // _UINT64_T が 1 ワードで表現しきれない場合
; 393  : 
; 394  :                     _UINT32_T u_hi;
; 395  :                     _UINT32_T u_lo = _FROMDWORDTOWORD(u, &u_hi);
; 396  :                     if (u_hi == 0)

  0004e	85 d2		 test	 edx, edx
  00050	75 2b		 jne	 SHORT $LN12@PMC_Subtru

; 397  :                     {
; 398  :                         // u の値が 32bit で表現可能な場合
; 399  :                         __UNIT_TYPE u_bit_count = sizeof(u_lo) * 8 - _LZCNT_ALT_32(u_lo);

  00052	57		 push	 edi
  00053	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  00058	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0005d	83 c4 04	 add	 esp, 4
  00060	2b c8		 sub	 ecx, eax

; 400  :                         __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;
; 401  :                         if (u_bit_count < v_bit_count)

  00062	3b 4e 14	 cmp	 ecx, DWORD PTR [esi+20]
  00065	72 78		 jb	 SHORT $LN6@PMC_Subtru

; 402  :                         {
; 403  :                             // 明らかに u < v である場合
; 404  : 
; 405  :                             // 演算結果は負となってしまうのでエラーを返す。
; 406  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 407  :                         }
; 408  :                         else
; 409  :                         {
; 410  :                             // u のビット長が v のビット長以上である場合
; 411  : 
; 412  :                             // u が32bit 整数で表現できるので v も 32bit 整数で表現できる
; 413  : 
; 414  :                             __UNIT_TYPE temp_w;
; 415  :                             char borrow = _SUBTRUCT_UNIT(0, u_lo, nv->BLOCK[0], &temp_w);

  00067	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0006a	2b 38		 sub	 edi, DWORD PTR [eax]
  0006c	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 416  :                             if (borrow)

  0006f	84 c0		 test	 al, al
  00071	75 6c		 jne	 SHORT $LN6@PMC_Subtru

; 417  :                             {
; 418  :                                 // ボローが発生した場合は演算結果が負なのでエラーとする
; 419  :                                 throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 420  :                             }
; 421  :                             else
; 422  :                                 return (temp_w);

  00073	8b c7		 mov	 eax, edi
  00075	5f		 pop	 edi

; 503  :     }

  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 0c 00	 ret	 12			; 0000000cH
$LN12@PMC_Subtru:

; 423  :                         }
; 424  :                     }
; 425  :                     else
; 426  :                     {
; 427  :                         // u の値が 32bit では表現できない場合
; 428  :                         __UNIT_TYPE u_bit_count = sizeof(u) * 8 - _LZCNT_ALT_32(u_hi);

  0007d	52		 push	 edx
  0007e	e8 00 00 00 00	 call	 __LZCNT_ALT_32
  00083	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00088	83 c4 04	 add	 esp, 4
  0008b	2b c8		 sub	 ecx, eax

; 429  :                         __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;
; 430  :                         if (u_bit_count < v_bit_count)

  0008d	3b 4e 14	 cmp	 ecx, DWORD PTR [esi+20]
  00090	72 4d		 jb	 SHORT $LN6@PMC_Subtru

; 431  :                         {
; 432  :                             // 明らかに u < v である場合
; 433  : 
; 434  :                             // 演算結果は負となってしまうのでエラーを返す。
; 435  :                             throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 436  :                         }
; 437  :                         else
; 438  :                         {
; 439  :                             // u のビット長が v のビット長以上である場合
; 440  : 
; 441  :                             // この時点では u は 33 ～ 64bit 整数であり、v は 1 ～ 64bit整数である
; 442  : 
; 443  :                             __UNIT_TYPE temp_w_hi;
; 444  :                             __UNIT_TYPE temp_w_lo;
; 445  :                             char borrow;
; 446  :                             borrow = _SUBTRUCT_UNIT(0, u_lo, nv->BLOCK[0], &temp_w_lo);

  00092	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00095	2b 39		 sub	 edi, DWORD PTR [ecx]
  00097	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 447  :                             if (nv->UNIT_WORD_COUNT <= 1)

  0009a	83 7e 10 01	 cmp	 DWORD PTR [esi+16], 1
  0009e	77 07		 ja	 SHORT $LN20@PMC_Subtru
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000a0	04 ff		 add	 al, 255			; 000000ffH
  000a2	83 da 00	 sbb	 edx, 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 452  :                             else

  000a5	eb 05		 jmp	 SHORT $LN44@PMC_Subtru
$LN20@PMC_Subtru:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000a7	04 ff		 add	 al, 255			; 000000ffH
  000a9	1b 51 04	 sbb	 edx, DWORD PTR [ecx+4]
$LN44@PMC_Subtru:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 457  :                             if (borrow)

  000ac	0f 92 c0	 setb	 al
  000af	84 c0		 test	 al, al
  000b1	75 2c		 jne	 SHORT $LN6@PMC_Subtru
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 141  :             return (((_UINT64_T)value_high << 32) | value_low);

  000b3	33 c0		 xor	 eax, eax
  000b5	0b c7		 or	 eax, edi
  000b7	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 503  :     }

  000b8	5e		 pop	 esi
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 0c 00	 ret	 12			; 0000000cH
$LN46@PMC_Subtru:

; 352  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_13JAOPNPKD@?$AAv@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  000c9	8d 4d e8	 lea	 ecx, DWORD PTR $T2[ebp]
  000cc	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  000d1	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  000d6	8d 45 e8	 lea	 eax, DWORD PTR $T2[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@PMC_Subtru:

; 503  :     }

  000df	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  000e4	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  000e7	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  000ec	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  000f1	8d 45 e8	 lea	 eax, DWORD PTR $T1[ebp]
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@PMC_Subtru:
  000fa	cc		 int	 3
?PMC_Subtruct_L_X@Internal@Core@Math@Palmtree@@YG_K_KPAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_L_X
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
$T2 = -24						; size = 24
_u$ = 8							; size = 4
_v$ = 12						; size = 4
?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X, COMDAT

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi

; 188  :         if (__UNIT_TYPE_BIT_COUNT < sizeof(u) * 8)
; 189  :         {
; 190  :             // _UINT32_T が 1 ワードで表現しきれない処理系には対応しない
; 191  :             throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_subtruct.cpp;PMC_Subtruct_I_X;1");
; 192  :         }
; 193  :         if (v == nullptr)

  00007	8b 75 0c	 mov	 esi, DWORD PTR _v$[ebp]
  0000a	85 f6		 test	 esi, esi
  0000c	74 52		 je	 SHORT $LN21@PMC_Subtru

; 195  :         NUMBER_HEADER* nv = (NUMBER_HEADER*)v;
; 196  :         CheckNumber(nv);

  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00017	83 c4 04	 add	 esp, 4

; 197  :         if (u == 0)

  0001a	8b 55 08	 mov	 edx, DWORD PTR _u$[ebp]
  0001d	83 e0 01	 and	 eax, 1
  00020	85 d2		 test	 edx, edx
  00022	75 0d		 jne	 SHORT $LN4@PMC_Subtru

; 198  :         {
; 199  :             // u が 0 である場合
; 200  : 
; 201  :             if (nv->IS_ZERO)

  00024	85 c0		 test	 eax, eax
  00026	74 58		 je	 SHORT $LN6@PMC_Subtru

; 202  :             {
; 203  :                 // v が 0 である場合
; 204  : 
; 205  :                 // u と v がともに 0 であるので、演算結果の 0 を呼び出し元に返す。
; 206  :                 return (0);

  00028	33 c0		 xor	 eax, eax
  0002a	5e		 pop	 esi

; 248  :                     {
; 249  :                         // ボローが発生した場合は演算結果が負なのでエラーとする
; 250  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 251  :                     }
; 252  :                     return ((_UINT32_T)temp_w);
; 253  :                 }
; 254  :             }
; 255  :         }
; 256  :     }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
$LN4@PMC_Subtru:

; 207  :             }
; 208  :             else
; 209  :             {
; 210  :                 // v が 0 ではない場合
; 211  : 
; 212  :                 // 演算結果は負となってしまうのでエラーを返す。
; 213  :                 throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 214  :             }
; 215  :         }
; 216  :         else
; 217  :         {
; 218  :             // u が 0 ではない場合
; 219  : 
; 220  :             if (nv->IS_ZERO)

  00031	85 c0		 test	 eax, eax
  00033	75 22		 jne	 SHORT $LN12@PMC_Subtru
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 426  :             _BitScanReverse(&pos, x);

  00035	0f bd c2	 bsr	 eax, edx

; 427  : #elif defined(__GNUC__)
; 428  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 429  : #else
; 430  : #error unknown compiler
; 431  : #endif
; 432  :             return (sizeof(x) * 8 - 1 - pos);

  00038	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  0003d	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 232  :                 __UNIT_TYPE u_bit_count = sizeof(u) * 8 - _LZCNT_ALT_32(u);

  0003f	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00044	2b c1		 sub	 eax, ecx

; 233  :                 __UNIT_TYPE v_bit_count = nv->UNIT_BIT_COUNT;
; 234  :                 if (u_bit_count < v_bit_count)

  00046	3b 46 14	 cmp	 eax, DWORD PTR [esi+20]
  00049	72 35		 jb	 SHORT $LN6@PMC_Subtru

; 235  :                 {
; 236  :                     // 明らかに u < v である場合
; 237  :                     // 演算結果は負となってしまうのでエラーを返す。
; 238  :                     throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 239  :                 }
; 240  :                 else
; 241  :                 {
; 242  :                     // u のビット長が v のビット長以上である場合
; 243  : 
; 244  :                     // u が 32bit 整数なので、v も32bit 整数で表現できる
; 245  :                     __UNIT_TYPE temp_w;
; 246  :                     char borrow = _SUBTRUCT_UNIT(0, u, nv->BLOCK[0], &temp_w);

  0004b	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0004e	2b 10		 sub	 edx, DWORD PTR [eax]
  00050	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 247  :                     if (borrow)

  00053	84 c0		 test	 al, al
  00055	75 29		 jne	 SHORT $LN6@PMC_Subtru
$LN12@PMC_Subtru:

; 248  :                     {
; 249  :                         // ボローが発生した場合は演算結果が負なのでエラーとする
; 250  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 251  :                     }
; 252  :                     return ((_UINT32_T)temp_w);
; 253  :                 }
; 254  :             }
; 255  :         }
; 256  :     }

  00057	8b c2		 mov	 eax, edx
  00059	5e		 pop	 esi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
$LN21@PMC_Subtru:

; 194  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"v");

  00060	68 00 00 00 00	 push	 OFFSET ??_C@_13JAOPNPKD@?$AAv@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  0006a	8d 4d e8	 lea	 ecx, DWORD PTR $T2[ebp]
  0006d	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  00072	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  00077	8d 45 e8	 lea	 eax, DWORD PTR $T2[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@PMC_Subtru:

; 248  :                     {
; 249  :                         // ボローが発生した場合は演算結果が負なのでエラーとする
; 250  :                         throw OverflowException(L"減算によりオーバーフローが発生しました。");
; 251  :                     }
; 252  :                     return ((_UINT32_T)temp_w);
; 253  :                 }
; 254  :             }
; 255  :         }
; 256  :     }

  00080	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EKOAHHOC@?$AA?$BL?$PP?$JH?$AAk?$PP?$II?$PP?$IK?$PP?$KK?$PP?$PM?$PP?P?$PP?$PM?$PP?U?$PP?m?$PP?$PM?$AAL?$AAz?$AA?$BP@
  00085	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  00088	e8 00 00 00 00	 call	 ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
  0008d	68 00 00 00 00	 push	 OFFSET __TI2?AVOverflowException@Internal@Core@Math@Palmtree@@
  00092	8d 45 e8	 lea	 eax, DWORD PTR $T1[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN19@PMC_Subtru:
  0009b	cc		 int	 3
?PMC_Subtruct_I_X@Internal@Core@Math@Palmtree@@YGIIPAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Subtruct_I_X
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
_feature$ = 8						; size = 4
?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Subtruct, COMDAT

; 734  :         return (PMC_STATUS_OK);

  00000	33 c0		 xor	 eax, eax

; 735  :     }

  00002	c3		 ret	 0
?Initialize_Subtruct@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Subtruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp
;	COMDAT ?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z
_TEXT	SEGMENT
_c$ = -5						; size = 1
_c$1$ = -1						; size = 1
_up$ = 8						; size = 4
_u_count$ = 12						; size = 4
_vp$ = 16						; size = 4
_v_count$ = 20						; size = 4
_wp$ = 24						; size = 4
_w_count$ = 28						; size = 4
?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z PROC ; Palmtree::Math::Core::Internal::Subtruct_Imp, COMDAT

; 123  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 124  :         char c = 0;
; 125  : 
; 126  :         // まず 32 ワードずつ減算をする。
; 127  :         __UNIT_TYPE count = v_count >> 5;

  00006	8b 55 14	 mov	 edx, DWORD PTR _v_count$[ebp]
  00009	32 c9		 xor	 cl, cl
  0000b	53		 push	 ebx

; 128  :         while (count != 0)

  0000c	8b 5d 10	 mov	 ebx, DWORD PTR _vp$[ebp]
  0000f	8b c2		 mov	 eax, edx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _up$[ebp]
  00015	c1 e8 05	 shr	 eax, 5
  00018	88 4d ff	 mov	 BYTE PTR _c$1$[ebp], cl
  0001b	88 4d fb	 mov	 BYTE PTR _c$[ebp], cl
  0001e	57		 push	 edi
  0001f	8b 7d 18	 mov	 edi, DWORD PTR _wp$[ebp]
  00022	85 c0		 test	 eax, eax
  00024	0f 84 44 01 00
	00		 je	 $LN3@Subtruct_I
  0002a	8b d0		 mov	 edx, eax
  0002c	0f 1f 40 00	 npad	 4
$LL2@Subtruct_I:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 802  :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00030	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00032	80 c1 ff	 add	 cl, 255			; 000000ffH
  00035	1b 03		 sbb	 eax, DWORD PTR [ebx]
  00037	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 803  :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00039	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0003c	1b 43 04	 sbb	 eax, DWORD PTR [ebx+4]
  0003f	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 804  :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  00042	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00045	1b 43 08	 sbb	 eax, DWORD PTR [ebx+8]
  00048	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 805  :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  0004b	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0004e	1b 43 0c	 sbb	 eax, DWORD PTR [ebx+12]
  00051	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 806  :     c = _SUBTRUCT_UNIT(c, xp[4], yp[4], &zp[4]);

  00054	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00057	1b 43 10	 sbb	 eax, DWORD PTR [ebx+16]
  0005a	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 807  :     c = _SUBTRUCT_UNIT(c, xp[5], yp[5], &zp[5]);

  0005d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00060	1b 43 14	 sbb	 eax, DWORD PTR [ebx+20]
  00063	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 808  :     c = _SUBTRUCT_UNIT(c, xp[6], yp[6], &zp[6]);

  00066	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00069	1b 43 18	 sbb	 eax, DWORD PTR [ebx+24]
  0006c	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 809  :     c = _SUBTRUCT_UNIT(c, xp[7], yp[7], &zp[7]);

  0006f	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00072	1b 43 1c	 sbb	 eax, DWORD PTR [ebx+28]
  00075	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 810  :     c = _SUBTRUCT_UNIT(c, xp[8], yp[8], &zp[8]);

  00078	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0007b	1b 43 20	 sbb	 eax, DWORD PTR [ebx+32]
  0007e	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 811  :     c = _SUBTRUCT_UNIT(c, xp[9], yp[9], &zp[9]);

  00081	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00084	1b 43 24	 sbb	 eax, DWORD PTR [ebx+36]
  00087	89 47 24	 mov	 DWORD PTR [edi+36], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 812  :     c = _SUBTRUCT_UNIT(c, xp[10], yp[10], &zp[10]);

  0008a	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0008d	1b 43 28	 sbb	 eax, DWORD PTR [ebx+40]
  00090	89 47 28	 mov	 DWORD PTR [edi+40], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 813  :     c = _SUBTRUCT_UNIT(c, xp[11], yp[11], &zp[11]);

  00093	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00096	1b 43 2c	 sbb	 eax, DWORD PTR [ebx+44]
  00099	89 47 2c	 mov	 DWORD PTR [edi+44], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 814  :     c = _SUBTRUCT_UNIT(c, xp[12], yp[12], &zp[12]);

  0009c	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0009f	1b 43 30	 sbb	 eax, DWORD PTR [ebx+48]
  000a2	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 815  :     c = _SUBTRUCT_UNIT(c, xp[13], yp[13], &zp[13]);

  000a5	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000a8	1b 43 34	 sbb	 eax, DWORD PTR [ebx+52]
  000ab	89 47 34	 mov	 DWORD PTR [edi+52], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 816  :     c = _SUBTRUCT_UNIT(c, xp[14], yp[14], &zp[14]);

  000ae	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000b1	1b 43 38	 sbb	 eax, DWORD PTR [ebx+56]
  000b4	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 817  :     c = _SUBTRUCT_UNIT(c, xp[15], yp[15], &zp[15]);

  000b7	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000ba	1b 43 3c	 sbb	 eax, DWORD PTR [ebx+60]
  000bd	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 818  :     c = _SUBTRUCT_UNIT(c, xp[16], yp[16], &zp[16]);

  000c0	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000c3	1b 43 40	 sbb	 eax, DWORD PTR [ebx+64]
  000c6	89 47 40	 mov	 DWORD PTR [edi+64], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 819  :     c = _SUBTRUCT_UNIT(c, xp[17], yp[17], &zp[17]);

  000c9	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000cc	1b 43 44	 sbb	 eax, DWORD PTR [ebx+68]
  000cf	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 820  :     c = _SUBTRUCT_UNIT(c, xp[18], yp[18], &zp[18]);

  000d2	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000d5	1b 43 48	 sbb	 eax, DWORD PTR [ebx+72]
  000d8	89 47 48	 mov	 DWORD PTR [edi+72], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 821  :     c = _SUBTRUCT_UNIT(c, xp[19], yp[19], &zp[19]);

  000db	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000de	1b 43 4c	 sbb	 eax, DWORD PTR [ebx+76]
  000e1	89 47 4c	 mov	 DWORD PTR [edi+76], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 822  :     c = _SUBTRUCT_UNIT(c, xp[20], yp[20], &zp[20]);

  000e4	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000e7	1b 43 50	 sbb	 eax, DWORD PTR [ebx+80]
  000ea	89 47 50	 mov	 DWORD PTR [edi+80], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 823  :     c = _SUBTRUCT_UNIT(c, xp[21], yp[21], &zp[21]);

  000ed	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000f0	1b 43 54	 sbb	 eax, DWORD PTR [ebx+84]
  000f3	89 47 54	 mov	 DWORD PTR [edi+84], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 824  :     c = _SUBTRUCT_UNIT(c, xp[22], yp[22], &zp[22]);

  000f6	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  000f9	1b 43 58	 sbb	 eax, DWORD PTR [ebx+88]
  000fc	89 47 58	 mov	 DWORD PTR [edi+88], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 825  :     c = _SUBTRUCT_UNIT(c, xp[23], yp[23], &zp[23]);

  000ff	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00102	1b 43 5c	 sbb	 eax, DWORD PTR [ebx+92]
  00105	89 47 5c	 mov	 DWORD PTR [edi+92], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 826  :     c = _SUBTRUCT_UNIT(c, xp[24], yp[24], &zp[24]);

  00108	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0010b	1b 43 60	 sbb	 eax, DWORD PTR [ebx+96]
  0010e	89 47 60	 mov	 DWORD PTR [edi+96], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 827  :     c = _SUBTRUCT_UNIT(c, xp[25], yp[25], &zp[25]);

  00111	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00114	1b 43 64	 sbb	 eax, DWORD PTR [ebx+100]
  00117	89 47 64	 mov	 DWORD PTR [edi+100], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 828  :     c = _SUBTRUCT_UNIT(c, xp[26], yp[26], &zp[26]);

  0011a	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0011d	1b 43 68	 sbb	 eax, DWORD PTR [ebx+104]
  00120	89 47 68	 mov	 DWORD PTR [edi+104], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 829  :     c = _SUBTRUCT_UNIT(c, xp[27], yp[27], &zp[27]);

  00123	8b 46 6c	 mov	 eax, DWORD PTR [esi+108]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00126	1b 43 6c	 sbb	 eax, DWORD PTR [ebx+108]
  00129	89 47 6c	 mov	 DWORD PTR [edi+108], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 830  :     c = _SUBTRUCT_UNIT(c, xp[28], yp[28], &zp[28]);

  0012c	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0012f	1b 43 70	 sbb	 eax, DWORD PTR [ebx+112]
  00132	89 47 70	 mov	 DWORD PTR [edi+112], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 831  :     c = _SUBTRUCT_UNIT(c, xp[29], yp[29], &zp[29]);

  00135	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00138	1b 43 74	 sbb	 eax, DWORD PTR [ebx+116]
  0013b	89 47 74	 mov	 DWORD PTR [edi+116], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 832  :     c = _SUBTRUCT_UNIT(c, xp[30], yp[30], &zp[30]);

  0013e	8b 46 78	 mov	 eax, DWORD PTR [esi+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00141	1b 43 78	 sbb	 eax, DWORD PTR [ebx+120]
  00144	89 47 78	 mov	 DWORD PTR [edi+120], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 833  :     c = _SUBTRUCT_UNIT(c, xp[31], yp[31], &zp[31]);

  00147	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0014a	1b 43 7c	 sbb	 eax, DWORD PTR [ebx+124]
  0014d	89 47 7c	 mov	 DWORD PTR [edi+124], eax
  00150	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 131  :             up += 32;

  00153	83 ee 80	 sub	 esi, -128		; ffffff80H

; 132  :             vp += 32;

  00156	83 eb 80	 sub	 ebx, -128		; ffffff80H
  00159	88 4d fb	 mov	 BYTE PTR _c$[ebp], cl

; 133  :             wp += 32;

  0015c	83 ef 80	 sub	 edi, -128		; ffffff80H

; 134  :             --count;

  0015f	83 ea 01	 sub	 edx, 1
  00162	0f 85 c8 fe ff
	ff		 jne	 $LL2@Subtruct_I

; 128  :         while (count != 0)

  00168	8b 55 14	 mov	 edx, DWORD PTR _v_count$[ebp]
  0016b	88 4d ff	 mov	 BYTE PTR _c$1$[ebp], cl
$LN3@Subtruct_I:

; 135  :         }
; 136  :         // この時点で未処理の桁は 32 ワード未満のはず
; 137  : 
; 138  :         // 未処理の桁が 16 ワード以上あるなら 16 ワード減算を行う。
; 139  :         if (v_count & 0x10)

  0016e	f6 c2 10	 test	 dl, 16			; 00000010H
  00171	74 22		 je	 SHORT $LN4@Subtruct_I

; 140  :         {
; 141  :             c = _SUBTRUCT_16WORDS_SBB(c, up, vp, wp);

  00173	57		 push	 edi
  00174	53		 push	 ebx
  00175	56		 push	 esi
  00176	ff 75 fb	 push	 DWORD PTR _c$[ebp]
  00179	e8 00 00 00 00	 call	 __SUBTRUCT_16WORDS_SBB

; 142  :             up += 16;
; 143  :             vp += 16;
; 144  :             wp += 16;

  0017e	8b 55 14	 mov	 edx, DWORD PTR _v_count$[ebp]
  00181	8a c8		 mov	 cl, al
  00183	83 c4 10	 add	 esp, 16			; 00000010H
  00186	88 4d ff	 mov	 BYTE PTR _c$1$[ebp], cl
  00189	83 c6 40	 add	 esi, 64			; 00000040H
  0018c	88 4d fb	 mov	 BYTE PTR _c$[ebp], cl
  0018f	83 c3 40	 add	 ebx, 64			; 00000040H
  00192	83 c7 40	 add	 edi, 64			; 00000040H
$LN4@Subtruct_I:

; 145  :         }
; 146  :         // この時点で未処理の桁は 16 ワード未満のはず
; 147  : 
; 148  :         // 未処理の桁が 8 ワード以上あるなら 8 ワード減算を行う。
; 149  :         if (v_count & 0x8)

  00195	f6 c2 08	 test	 dl, 8
  00198	74 5a		 je	 SHORT $LN5@Subtruct_I
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1874 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  0019a	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0019c	80 c1 ff	 add	 cl, 255			; 000000ffH
  0019f	1b 03		 sbb	 eax, DWORD PTR [ebx]
  001a1	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1875 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  001a3	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001a6	1b 43 04	 sbb	 eax, DWORD PTR [ebx+4]
  001a9	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1876 :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  001ac	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001af	1b 43 08	 sbb	 eax, DWORD PTR [ebx+8]
  001b2	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1877 :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  001b5	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001b8	1b 43 0c	 sbb	 eax, DWORD PTR [ebx+12]
  001bb	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1878 :     c = _SUBTRUCT_UNIT(c, xp[4], yp[4], &zp[4]);

  001be	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001c1	1b 43 10	 sbb	 eax, DWORD PTR [ebx+16]
  001c4	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1879 :     c = _SUBTRUCT_UNIT(c, xp[5], yp[5], &zp[5]);

  001c7	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001ca	1b 43 14	 sbb	 eax, DWORD PTR [ebx+20]
  001cd	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1880 :     c = _SUBTRUCT_UNIT(c, xp[6], yp[6], &zp[6]);

  001d0	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001d3	1b 43 18	 sbb	 eax, DWORD PTR [ebx+24]
  001d6	89 47 18	 mov	 DWORD PTR [edi+24], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 1881 :     c = _SUBTRUCT_UNIT(c, xp[7], yp[7], &zp[7]);

  001d9	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001dc	1b 43 1c	 sbb	 eax, DWORD PTR [ebx+28]
  001df	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  001e2	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 152  :             up += 8;

  001e5	83 c6 20	 add	 esi, 32			; 00000020H

; 153  :             vp += 8;

  001e8	83 c3 20	 add	 ebx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001eb	88 4d ff	 mov	 BYTE PTR _c$1$[ebp], cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 151  :             c = _SUBTRUCT_8WORDS_SBB(c, up, vp, wp);

  001ee	88 4d fb	 mov	 BYTE PTR _c$[ebp], cl

; 154  :             wp += 8;

  001f1	83 c7 20	 add	 edi, 32			; 00000020H
$LN5@Subtruct_I:

; 155  :         }
; 156  :         // この時点で未処理の桁は 8 ワード未満のはず
; 157  : 
; 158  :         // 未処理の桁が 4 ワード以上あるなら 4 ワード減算を行う。
; 159  :         if (v_count & 0x4)

  001f4	f6 c2 04	 test	 dl, 4
  001f7	74 36		 je	 SHORT $LN6@Subtruct_I
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2130 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  001f9	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  001fb	80 c1 ff	 add	 cl, 255			; 000000ffH
  001fe	1b 03		 sbb	 eax, DWORD PTR [ebx]
  00200	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2131 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  00202	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00205	1b 43 04	 sbb	 eax, DWORD PTR [ebx+4]
  00208	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2132 :     c = _SUBTRUCT_UNIT(c, xp[2], yp[2], &zp[2]);

  0020b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0020e	1b 43 08	 sbb	 eax, DWORD PTR [ebx+8]
  00211	89 47 08	 mov	 DWORD PTR [edi+8], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2133 :     c = _SUBTRUCT_UNIT(c, xp[3], yp[3], &zp[3]);

  00214	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00217	1b 43 0c	 sbb	 eax, DWORD PTR [ebx+12]
  0021a	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  0021d	0f 92 c1	 setb	 cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 162  :             up += 4;

  00220	83 c6 10	 add	 esi, 16			; 00000010H

; 163  :             vp += 4;

  00223	83 c3 10	 add	 ebx, 16			; 00000010H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00226	88 4d ff	 mov	 BYTE PTR _c$1$[ebp], cl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 161  :             c = _SUBTRUCT_4WORDS_SBB(c, up, vp, wp);

  00229	88 4d fb	 mov	 BYTE PTR _c$[ebp], cl

; 164  :             wp += 4;

  0022c	83 c7 10	 add	 edi, 16			; 00000010H
$LN6@Subtruct_I:

; 165  :         }
; 166  :         // この時点で未処理の桁は 4 ワード未満のはず
; 167  : 
; 168  :         // 未処理の桁が 2 ワード以上あるなら 2 ワード減算を行う。
; 169  :         if (v_count & 0x2)

  0022f	f6 c2 02	 test	 dl, 2
  00232	74 27		 je	 SHORT $LN117@Subtruct_I
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2316 :     c = _SUBTRUCT_UNIT(c, xp[0], yp[0], &zp[0]);

  00234	8b 06		 mov	 eax, DWORD PTR [esi]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00236	80 c1 ff	 add	 cl, 255			; 000000ffH
  00239	1b 03		 sbb	 eax, DWORD PTR [ebx]
  0023b	89 07		 mov	 DWORD PTR [edi], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\autogenerated_inline_func.h

; 2317 :     c = _SUBTRUCT_UNIT(c, xp[1], yp[1], &zp[1]);

  0023d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00240	1b 43 04	 sbb	 eax, DWORD PTR [ebx+4]
  00243	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00246	0f 92 45 ff	 setb	 BYTE PTR _c$1$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 172  :             up += 2;

  0024a	83 c6 08	 add	 esi, 8
  0024d	8a 45 ff	 mov	 al, BYTE PTR _c$1$[ebp]

; 173  :             vp += 2;

  00250	83 c3 08	 add	 ebx, 8
  00253	88 45 fb	 mov	 BYTE PTR _c$[ebp], al

; 174  :             wp += 2;

  00256	83 c7 08	 add	 edi, 8
  00259	eb 03		 jmp	 SHORT $LN7@Subtruct_I
$LN117@Subtruct_I:

; 165  :         }
; 166  :         // この時点で未処理の桁は 4 ワード未満のはず
; 167  : 
; 168  :         // 未処理の桁が 2 ワード以上あるなら 2 ワード減算を行う。
; 169  :         if (v_count & 0x2)

  0025b	8a 45 ff	 mov	 al, BYTE PTR _c$1$[ebp]
$LN7@Subtruct_I:

; 175  :         }
; 176  :         // この時点で未処理の桁は 2 ワード未満のはず
; 177  : 
; 178  :         // 未処理の桁が 1 ワード以上あるなら 1 ワード減算を行う。
; 179  :         if (v_count & 1)

  0025e	f6 c2 01	 test	 dl, 1
  00261	74 19		 je	 SHORT $LN8@Subtruct_I

; 180  :             c = _SUBTRUCT_UNIT(c, *up++, *vp++, wp++);

  00263	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00265	8b d7		 mov	 edx, edi
  00267	83 c7 04	 add	 edi, 4
  0026a	83 c6 04	 add	 esi, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  0026d	04 ff		 add	 al, 255			; 000000ffH
  0026f	1b 0b		 sbb	 ecx, DWORD PTR [ebx]
  00271	89 0a		 mov	 DWORD PTR [edx], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 180  :             c = _SUBTRUCT_UNIT(c, *up++, *vp++, wp++);

  00273	8b 55 14	 mov	 edx, DWORD PTR _v_count$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 200  :             return (_subborrow_u32(borrow, u, v, w));

  00276	0f 92 c0	 setb	 al
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_subtruct.cpp

; 180  :             c = _SUBTRUCT_UNIT(c, *up++, *vp++, wp++);

  00279	88 45 fb	 mov	 BYTE PTR _c$[ebp], al
$LN8@Subtruct_I:

; 181  : 
; 182  :         // 残りの桁の繰り上がりを計算し、復帰する。
; 183  :         DoBorrow(c, up, u_count - v_count, wp, w_count - v_count);

  0027c	8b 45 1c	 mov	 eax, DWORD PTR _w_count$[ebp]
  0027f	2b c2		 sub	 eax, edx
  00281	50		 push	 eax
  00282	8b 45 0c	 mov	 eax, DWORD PTR _u_count$[ebp]
  00285	57		 push	 edi
  00286	2b c2		 sub	 eax, edx
  00288	50		 push	 eax
  00289	56		 push	 esi
  0028a	ff 75 fb	 push	 DWORD PTR _c$[ebp]
  0028d	e8 00 00 00 00	 call	 ?DoBorrow@Internal@Core@Math@Palmtree@@YAXDPAII0I@Z ; Palmtree::Math::Core::Internal::DoBorrow
  00292	83 c4 14	 add	 esp, 20			; 00000014H
  00295	5f		 pop	 edi
  00296	5e		 pop	 esi
  00297	5b		 pop	 ebx

; 184  :     }

  00298	8b e5		 mov	 esp, ebp
  0029a	5d		 pop	 ebp
  0029b	c3		 ret	 0
?Subtruct_Imp@Internal@Core@Math@Palmtree@@YAXPAII0I0I@Z ENDP ; Palmtree::Math::Core::Internal::Subtruct_Imp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 295  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 296  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT
; _this$ = ecx

; 295  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 296  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 296  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 286  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	c7 41 0c 00 ff
	ff ff		 mov	 DWORD PTR [ecx+12], -256 ; ffffff00H
  00051	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)
; 248  :         {
; 249  :         }
; 250  : 
; 251  :         NotEnoughMemoryException(const NotEnoughMemoryException& p) noexcept(true)
; 252  :             : Exception(p)
; 253  :         {
; 254  :         }
; 255  : 
; 256  :         virtual ~NotEnoughMemoryException() noexcept(true)
; 257  :         {
; 258  :         }
; 259  :     };
; 260  : 
; 261  :     class NotSupportedException
; 262  :         : public Exception
; 263  :     {
; 264  :     public:
; 265  :         NotSupportedException(const wchar_t* message) noexcept(true)
; 266  :             : Exception(PMC_STATUS_NOT_SUPPORTED, message)
; 267  :         {
; 268  :         }
; 269  : 
; 270  :         NotSupportedException(const NotSupportedException& p) noexcept(true)
; 271  :             : Exception(p)
; 272  :         {
; 273  :         }
; 274  : 
; 275  :         virtual ~NotSupportedException() noexcept(true)
; 276  :         {
; 277  :         }
; 278  :     };
; 279  : 
; 280  :     class InternalErrorException
; 281  :         : public Exception
; 282  :     {
; 283  :     public:
; 284  :         InternalErrorException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 286  :         {

  0005b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 287  :         }

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b c1		 mov	 eax, ecx
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::OverflowException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 162  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7OverflowException@Internal@Core@Math@Palmtree@@6B@

; 163  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GOverflowException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::OverflowException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::OverflowException::~OverflowException, COMDAT
; _this$ = ecx

; 162  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7OverflowException@Internal@Core@Math@Palmtree@@6B@

; 163  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 163  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1OverflowException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::OverflowException::~OverflowException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::OverflowException::OverflowException, COMDAT
; _this$ = ecx

; 158  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 158  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7OverflowException@Internal@Core@Math@Palmtree@@6B@

; 159  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0OverflowException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z PROC ; Palmtree::Math::Core::Internal::OverflowException::OverflowException, COMDAT
; _this$ = ecx

; 153  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 48   :         {
; 49   :             _code = code;
; 50   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00044	c7 41 0c fc ff
	ff ff		 mov	 DWORD PTR [ecx+12], -4	; fffffffcH
  0004b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 51   :             _data = nullptr;

  0004e	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 52   :         }
; 53   : 
; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)
; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;
; 58   :             _data = data;
; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)

  00055	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 153  :         {

  0005c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7OverflowException@Internal@Core@Math@Palmtree@@6B@

; 154  :         }

  00062	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00069	8b c1		 mov	 eax, ecx
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0OverflowException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ENDP ; Palmtree::Math::Core::Internal::OverflowException::OverflowException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 124  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 125  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT
; _this$ = ecx

; 124  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 125  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 125  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 120  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 120  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 121  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_param_name$ = 12					; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 115  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _param_name$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	c7 41 0c fe ff
	ff ff		 mov	 DWORD PTR [ecx+12], -2	; fffffffeH
  00051	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 115  :         {

  0005b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 116  :         }

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b c1		 mov	 eax, ecx
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 70   :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00036	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00039	50		 push	 eax
  0003a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00040	e8 00 00 00 00	 call	 ___std_exception_destroy
  00045	83 c4 04	 add	 esp, 4
  00048	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004c	74 0b		 je	 SHORT $LN9@scalar
  0004e	6a 18		 push	 24			; 00000018H
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00056	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00059	8b c6		 mov	 eax, esi
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5e		 pop	 esi
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT
; _this$ = ecx

; 70   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00033	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00036	50		 push	 eax
  00037	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 71   :         }

  00045	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00048	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004f	59		 pop	 ecx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 62   :         Exception(const Exception& p) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }

  00058	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005f	8b c2		 mov	 eax, edx
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
_data$ = 16						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _code$[ebp]
  0003e	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 57   :             _message = message;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  00044	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00047	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  0004a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00050	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b c1		 mov	 eax, ecx
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 48   :         {
; 49   :             _code = code;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _code$[ebp]
  0003e	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 50   :             _message = message;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 51   :             _data = nullptr;

  0004d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 52   :         }

  00054	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005b	8b c1		 mov	 eax, ecx
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_Gexception@std@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 86   :         __std_exception_destroy(&_Data);

  00025	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ___std_exception_destroy
  00034	83 c4 04	 add	 esp, 4
  00037	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0003b	74 0b		 je	 SHORT $LN6@scalar
  0003d	6a 0c		 push	 12			; 0000000cH
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00045	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00048	8b c6		 mov	 eax, esi
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_Gexception@std@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_Gexception@std@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 92   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 85   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1exception@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 86   :         __std_exception_destroy(&_Data);

  00022	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00025	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ___std_exception_destroy
  00031	83 c4 04	 add	 esp, 4

; 87   :     }

  00034	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00037	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003e	59		 pop	 ecx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1exception@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1exception@std@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@XZ
_TEXT	SEGMENT
??0exception@std@@QAE@XZ PROC				; std::exception::exception, COMDAT
; _this$ = ecx

; 50   :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 51   :     }

  0000e	8b c1		 mov	 eax, ecx
  00010	c3		 ret	 0
??0exception@std@@QAE@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
