; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Uint\Palmtree.Math.Core.Uint\pmc_memory.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA	; Palmtree::Math::Core::Internal::hLocalHeap
PUBLIC	?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
PUBLIC	?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
PUBLIC	?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
_BSS	SEGMENT
?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA DD 01H DUP (?) ; Palmtree::Math::Core::Internal::hLocalHeap
?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?) ; Palmtree::Math::Core::Internal::mcs
?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A DB 02cH DUP (?) ; Palmtree::Math::Core::Internal::number_zero
?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A DB 02cH DUP (?) ; Palmtree::Math::Core::Internal::number_one
_BSS	ENDS
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::Exception::Exception
PUBLIC	??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
PUBLIC	??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
PUBLIC	??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
PUBLIC	??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
PUBLIC	??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentException::~ArgumentException
PUBLIC	??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentException::`scalar deleting destructor'
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
PUBLIC	??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
PUBLIC	??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
PUBLIC	??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
PUBLIC	??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
PUBLIC	??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::~NotEnoughMemoryException
PUBLIC	??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`scalar deleting destructor'
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
PUBLIC	??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
PUBLIC	??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
PUBLIC	??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
PUBLIC	??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
PUBLIC	??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::BadBufferException::~BadBufferException
PUBLIC	??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::BadBufferException::`scalar deleting destructor'
PUBLIC	?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ ; Palmtree::Math::Core::Internal::AllocateHeapArea
PUBLIC	?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ ; Palmtree::Math::Core::Internal::DeallocateHeapArea
PUBLIC	?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
PUBLIC	?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
PUBLIC	?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::DuplicateNumber
PUBLIC	?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ; Palmtree::Math::Core::Internal::Initialize_Memory
PUBLIC	?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z ; Palmtree::Math::Core::Internal::PMC_Dispose
PUBLIC	?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I
PUBLIC	?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z ; Palmtree::Math::Core::Internal::PMC_Clone_X
PUBLIC	?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize
PUBLIC	??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ	; Palmtree::Math::Core::Internal::Lock::Lock
PUBLIC	??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ	; Palmtree::Math::Core::Internal::Lock::~Lock
PUBLIC	??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
PUBLIC	?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Clear
PUBLIC	?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Check
PUBLIC	??_G__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`scalar deleting destructor'
PUBLIC	??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
PUBLIC	?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::EqualsBufferAddress
PUBLIC	?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::Destruct
PUBLIC	??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`scalar deleting destructor'
PUBLIC	??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
PUBLIC	??_GResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolder::`scalar deleting destructor'
PUBLIC	??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::__GenericChainBufferTag
PUBLIC	??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::~__GenericChainBufferTag
PUBLIC	?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::EqualsBufferAddress
PUBLIC	?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::Destruct
PUBLIC	??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`scalar deleting destructor'
PUBLIC	??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::____UNIT_TYPE_Array_ChainBufferTag
PUBLIC	??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::~____UNIT_TYPE_Array_ChainBufferTag
PUBLIC	?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::EqualsBufferAddress
PUBLIC	?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Clear
PUBLIC	?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Check
PUBLIC	?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Destruct
PUBLIC	??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::__StringChainBufferTag
PUBLIC	??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::~__StringChainBufferTag
PUBLIC	?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::EqualsBufferAddress
PUBLIC	?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Clear
PUBLIC	?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Check
PUBLIC	?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Destruct
PUBLIC	??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::__DynamicNumberChainBufferTag
PUBLIC	??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::~__DynamicNumberChainBufferTag
PUBLIC	?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::EqualsBufferAddress
PUBLIC	?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Check
PUBLIC	?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Destruct
PUBLIC	??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::__NumberHandleHookingChainBufferTag
PUBLIC	??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::~__NumberHandleHookingChainBufferTag
PUBLIC	?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::EqualsBufferAddress
PUBLIC	?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Check
PUBLIC	?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Destruct
PUBLIC	??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`scalar deleting destructor'
PUBLIC	??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::__StaticNumberChainBufferTag
PUBLIC	??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::~__StaticNumberChainBufferTag
PUBLIC	?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::EqualsBufferAddress
PUBLIC	?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Check
PUBLIC	?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Destruct
PUBLIC	??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`scalar deleting destructor'
PUBLIC	??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
PUBLIC	??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
PUBLIC	?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBytes
PUBLIC	?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBytes
PUBLIC	?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBytes
PUBLIC	?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
PUBLIC	?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock
PUBLIC	?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
PUBLIC	?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
PUBLIC	?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBlock
PUBLIC	?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
PUBLIC	?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearString
PUBLIC	?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
PUBLIC	?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckString
PUBLIC	?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkString
PUBLIC	?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
PUBLIC	?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
PUBLIC	?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
PUBLIC	?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
PUBLIC	?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
PUBLIC	?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber
PUBLIC	?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DetatchStaticNumber
PUBLIC	?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber
PUBLIC	??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`scalar deleting destructor'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`vftable'
PUBLIC	??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentException::`vftable'
PUBLIC	??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
PUBLIC	??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`vftable'
PUBLIC	??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
PUBLIC	??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::BadBufferException::`vftable'
PUBLIC	??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`vftable'
PUBLIC	??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`vftable'
PUBLIC	??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::`vftable'
PUBLIC	__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_1IM@LGDAALAB@?$AAp?$AAm?$AAc?$AA_?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAh?$AAo?$AAl@ ; `string'
PUBLIC	??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ ; `string'
PUBLIC	??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`vftable'
PUBLIC	??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`vftable'
PUBLIC	??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`vftable'
PUBLIC	??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`vftable'
PUBLIC	??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`vftable'
PUBLIC	??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`vftable'
PUBLIC	??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`vftable'
PUBLIC	__TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_1CE@PIPAACFA@?$PP?R?$PP?$PM?$PP?W?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAL?$AA?$AN?$PP?$LD?$AAW?$AAf?$AAD?$AA?$HO@ ; `string'
PUBLIC	__TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVBadBufferException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::BadBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z28
PUBLIC	??_C@_1EC@LJDADMNE@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@ ; `string'
PUBLIC	??_C@_1EC@KLIFJDDK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1DK@CHNNDIJP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	__TI2?AVArgumentException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_1BO@CNNKDNIF@?$AA?$BF?$AAp?$AAt?$AAy?$AAp?$AAe?$AAL?$AA?$CK?$PP?e?$AAn?$AA$?$AAg?$AAY?$AA?$AC@ ; `string'
PUBLIC	__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
PUBLIC	??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
PUBLIC	??_C@_13HADAKIJA@?$AAx@				; `string'
PUBLIC	??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ ; `string'
PUBLIC	??_C@_1GC@NKBJLGGD@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1GA@CKNLMDDM@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1GC@OHMCPHEJ@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1GC@BDIILODP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1GE@JOBLOAGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1HC@IJKAGPMK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1FA@MMJFBJGB@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ ; `string'
PUBLIC	??_C@_1FA@NOCALGIP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_C@_1FA@GGJMNBOK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Exception@Internal@Core@Math@Palmtree@@6B@	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Internal@Core@Math@Palmtree@@8	; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4ArgumentException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
PUBLIC	??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Complete Object Locator'
PUBLIC	??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
PUBLIC	??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BadBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3BadBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BadBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BadBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder `RTTI Type Descriptor'
PUBLIC	??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag `RTTI Type Descriptor'
PUBLIC	??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT `RTTI Type Descriptor'
PUBLIC	??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EN@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Descriptor at (0,-1,0,77)'
PUBLIC	??_R4__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag `RTTI Type Descriptor'
PUBLIC	??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__HeapCreate@12:PROC
EXTRN	__imp__HeapDestroy@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__HeapLock@4:PROC
EXTRN	__imp__HeapUnlock@4:PROC
EXTRN	__imp__HeapWalk@8:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::Exception::`vector deleting destructor'
EXTRN	??_EArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentException::`vector deleting destructor'
EXTRN	??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`vector deleting destructor'
EXTRN	??_ENotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`vector deleting destructor'
EXTRN	??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`vector deleting destructor'
EXTRN	??_EBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::BadBufferException::`vector deleting destructor'
EXTRN	??_E__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`vector deleting destructor'
EXTRN	??_E__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`vector deleting destructor'
EXTRN	??_EResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolder::`vector deleting destructor'
EXTRN	??_E__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`vector deleting destructor'
EXTRN	??_E____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`vector deleting destructor'
EXTRN	??_E__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`vector deleting destructor'
EXTRN	??_E__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`vector deleting destructor'
EXTRN	??_E__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`vector deleting destructor'
EXTRN	??_E__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`vector deleting destructor'
EXTRN	??_EResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Inte'
	DB	'rnal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__NumberHandleHookingChainBufferTag@ResourceHolderUI'
	DB	'NT@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Int'
	DB	'ernal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__StringChainBufferTag@ResourceHolderUINT@Internal@C'
	DB	'ore@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUIN'
	DB	'T@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@'
	DB	'Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVResourceHolderUINT@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ResourceHolderUINT@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree'
	DB	'@@', 00H
data$r	ENDS
;	COMDAT ??_R4__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@P'
	DB	'almtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ResourceHolder@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ResourceHolder@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVResourceHolder@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT ??_R4ResourceHolder@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ResourceHolder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVResourceHolder@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ResourceHolder@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BadBufferException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2BadBufferException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@BadBufferException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3BadBufferException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4BadBufferException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4BadBufferException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::BadBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3BadBufferException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@InternalErrorException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::InternalErrorException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3InternalErrorException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3NotEnoughMemoryException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentNullException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentNullException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentNullException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ArgumentException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2ArgumentException@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@ArgumentException@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3ArgumentException@Internal@Core@Math@Palmtree@@8 DD 00H ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4ArgumentException@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4ArgumentException@Internal@Core@Math@Palmtree@@6B@ DD 00H ; Palmtree::Math::Core::Internal::ArgumentException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3ArgumentException@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EN@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EN@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,77)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R2Exception@Internal@Core@Math@Palmtree@@8 DD FLAT:??_R1A@?0A@EA@Exception@Internal@Core@Math@Palmtree@@8 ; Palmtree::Math::Core::Internal::Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EN@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	SEGMENT
??_R3Exception@Internal@Core@Math@Palmtree@@8 DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@Internal@Core@Math@Palmtree@@6B@
rdata$r	SEGMENT
??_R4Exception@Internal@Core@Math@Palmtree@@6B@ DD 00H	; Palmtree::Math::Core::Internal::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	FLAT:??_R3Exception@Internal@Core@Math@Palmtree@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1FA@GGJMNBOK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1FA@GGJMNBOK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'A', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ';', 00H, '3', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@NOCALGIP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1FA@NOCALGIP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'A', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ';', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
CONST	SEGMENT
??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@ DB 085H
	DB	'Q', 0e8H, 090H, 0a8H, '0', 0e9H, '0', 0fcH, '0L0zv', 01fH, 'u'
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@MMJFBJGB@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1FA@MMJFBJGB@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'A', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ';', 00H, '1', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@IJKAGPMK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1HC@IJKAGPMK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i', 00H, 'n'
	DB	00H, 'k', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'k', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e'
	DB	00H, 'r', 00H, ';', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@JOBLOAGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1GE@JOBLOAGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i', 00H, 'n'
	DB	00H, 'k', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H
	DB	'r', 00H, ';', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@BDIILODP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1GC@BDIILODP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	':', 00H, ':', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 'r'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@OHMCPHEJ@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1GC@OHMCPHEJ@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i', 00H, 'n'
	DB	00H, 'k', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@CKNLMDDM@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1GA@CKNLMDDM@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	':', 00H, ':', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 'r'
	DB	00H, 'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ';', 00H
	DB	'1', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@NKBJLGGD@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1GC@NKBJLGGD@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'l', 00H, 'i', 00H, 'n'
	DB	00H, 'k', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	';', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
CONST	SEGMENT
??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@ DB 015H
	DB	'_pek0n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, 'L0', 0eH, 'NH0', 089H, '0', 08cH, '0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13HADAKIJA@?$AAx@
CONST	SEGMENT
??_C@_13HADAKIJA@?$AAx@ DB 'x', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentNullException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentNullException@Internal@Core@Math@Palmtree@@@8??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1BO@CNNKDNIF@?$AA?$BF?$AAp?$AAt?$AAy?$AAp?$AAe?$AAL?$AA?$CK?$PP?e?$AAn?$AA$?$AAg?$AAY?$AA?$AC@
CONST	SEGMENT
??_C@_1BO@CNNKDNIF@?$AA?$BF?$AAp?$AAt?$AAy?$AAp?$AAe?$AAL?$AA?$CK?$PP?e?$AAn?$AA$?$AAg?$AAY?$AA?$AC@ DB 015H
	DB	'_pet', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L0*g', 0e5H, 'wn0$'
	DB	'Pg0Y0', 02H, '0', 00H, 00H			; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::ArgumentException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArgumentException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVArgumentException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVArgumentException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVArgumentException@Internal@Core@Math@Palmtree@@@8??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVArgumentException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVArgumentException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVArgumentException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1DK@CHNNDIJP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1DK@CHNNDIJP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H
	DB	'N', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H, 'r', 00H, ';'
	DB	00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@KLIFJDDK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1EC@KLIFJDDK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H
	DB	'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'L', 00H, 'i'
	DB	00H, 'g', 00H, 'h', 00H, 't', 00H, ';', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
CONST	SEGMENT
??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@ DB 0e1H
	DB	'0', 0e2H, '0', 0eaH, '0', 018H, 098H, 0dfH, 'Wn0', 0dH, 'Nte', 08H
	DB	'T', 092H, '0', 01cH, 'i', 0faH, 'QW0~0W0_0', 02H, '0', 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@LJDADMNE@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
CONST	SEGMENT
??_C@_1EC@LJDADMNE@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, ';', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H
	DB	'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'L', 00H, 'i'
	DB	00H, 'g', 00H, 'h', 00H, 't', 00H, ';', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z28
xdata$x	SEGMENT
__CT??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z28 DD 00H
	DD	FLAT:??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::BadBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBadBufferException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVBadBufferException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVBadBufferException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVBadBufferException@Internal@Core@Math@Palmtree@@@8??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z28
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVBadBufferException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_C@_1CE@PIPAACFA@?$PP?R?$PP?$PM?$PP?W?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAL?$AA?$AN?$PP?$LD?$AAW?$AAf?$AAD?$AA?$HO@
CONST	SEGMENT
??_C@_1CE@PIPAACFA@?$PP?R?$PP?$PM?$PP?W?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAL?$AA?$AN?$PP?$LD?$AAW?$AAf?$AAD?$AA?$HO@ DB 0d2H
	DB	'0', 0fcH, '0', 0d7H, '0', 0e1H, '0', 0e2H, '0', 0eaH, '0', 018H
	DB	098H, 0dfH, 'WL0', 0dH, 'N', 0b3H, 08dH, 'W0f0D0~0Y0', 02H, '0'
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree'
	DB	'@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@@8??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`vftable'
	DD	FLAT:??_EResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`vftable'
	DD	FLAT:??_E__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`vftable'
	DD	FLAT:??_E__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`vftable'
	DD	FLAT:??_E__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`vftable'
	DD	FLAT:??_E__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`vftable'
	DD	FLAT:??_E____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`vftable'
	DD	FLAT:??_E__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
CONST	SEGMENT
??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@ DB 088H
	DB	'N', 01fH, 'gW0f0D0j0D0', 0b3H, '0', 0fcH, '0', 0c9H, '0k00RT', 090H
	DB	'W0~0W0_0', 02H, '0', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@LGDAALAB@?$AAp?$AAm?$AAc?$AA_?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAh?$AAo?$AAl@
CONST	SEGMENT
??_C@_1IM@LGDAALAB@?$AAp?$AAm?$AAc?$AA_?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAh?$AAo?$AAl@ DB 'p'
	DB	00H, 'm', 00H, 'c', 00H, '_', 00H, 'r', 00H, 'e', 00H, 's', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'h', 00H, 'o'
	DB	00H, 'l', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'h', 00H
	DB	';', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, ':', 00H, ':', 00H, '_', 00H, '_', 00H, 'R'
	DB	00H, 'o', 00H, 'o', 00H, 't', 00H, 'T', 00H, 'a', 00H, 'g', 00H
	DB	':', 00H, ':', 00H, 'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, 's', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 's', 00H, ';', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@Internal@Core@Math@Palmtree@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	SEGMENT
__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24 DD 00H
	DD	FLAT:??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	FLAT:??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8
data$r	SEGMENT
??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8 DD FLAT:??_7type_info@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInternalErrorException@Internal@Core@Math@Palmtree@@'
	DB	00H
data$r	ENDS
;	COMDAT __CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 02H
	DD	FLAT:__CT??_R0?AVInternalErrorException@Internal@Core@Math@Palmtree@@@8??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
	DD	FLAT:__CT??_R0?AVException@Internal@Core@Math@Palmtree@@@8??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z24
xdata$x	ENDS
;	COMDAT __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	SEGMENT
__TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@ DD 00H
	DD	FLAT:??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
xdata$x	ENDS
;	COMDAT ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::`vftable'
	DD	FLAT:??_EResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`vftable'
	DD	FLAT:??_E__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`vftable'
	DD	FLAT:??_E__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4BadBufferException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::BadBufferException::`vftable'
	DD	FLAT:??_EBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4InternalErrorException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::InternalErrorException::`vftable'
	DD	FLAT:??_EInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`vftable'
	DD	FLAT:??_ENotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentNullException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentNullException::`vftable'
	DD	FLAT:??_EArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4ArgumentException@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::ArgumentException::`vftable'
	DD	FLAT:??_EArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@Internal@Core@Math@Palmtree@@6B@
CONST	SEGMENT
??_7Exception@Internal@Core@Math@Palmtree@@6B@ DD FLAT:??_R4Exception@Internal@Core@Math@Palmtree@@6B@ ; Palmtree::Math::Core::Internal::Exception::`vftable'
	DD	FLAT:??_EException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$0
	DD	03H
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$8
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__ehfuncinfo$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__ehfuncinfo$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$2
__ehfuncinfo$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__ehfuncinfo$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
__ehfuncinfo$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$2
__ehfuncinfo$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$2
__ehfuncinfo$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0
__ehfuncinfo$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0
__ehfuncinfo$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0
__ehfuncinfo$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$2
__ehfuncinfo$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0
__ehfuncinfo$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0
__ehfuncinfo$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0
__ehfuncinfo$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$2
__ehfuncinfo$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z$0
__ehfuncinfo$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z$0
__ehfuncinfo$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$2
__ehfuncinfo$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ$0
__ehfuncinfo$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0
__ehfuncinfo$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0
__ehfuncinfo$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0
__ehfuncinfo$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z$0
__ehfuncinfo$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z$0
__ehfuncinfo$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z$0
__ehfuncinfo$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$2
__ehfuncinfo$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ$0
__ehfuncinfo$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ$0
__ehfuncinfo$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$0
	DD	03H
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$8
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$8 DD 09H
	DD	FLAT:??_R0?AVException@Internal@Core@Math@Palmtree@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$0
__tryblocktable$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z DD 04H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$8
__ehfuncinfo$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$2
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$6
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0
__ehfuncinfo$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0
__ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1
__ehfuncinfo$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ$1
__ehfuncinfo$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0
__ehfuncinfo$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0
__ehfuncinfo$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0
__ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z$0
__ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_Gexception@std@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1exception@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	04H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?GetAllocatedMemorySize_Imp@Internal@Core@Math@Palmtree@@YAHPA_K@Z
_TEXT	SEGMENT
_Entry$ = -28						; size = 28
_size$ = 8						; size = 4
?GetAllocatedMemorySize_Imp@Internal@Core@Math@Palmtree@@YAHPA_K@Z PROC ; Palmtree::Math::Core::Internal::GetAllocatedMemorySize_Imp, COMDAT

; 980  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi

; 981  :         *size = 0;

  00007	8b 75 08	 mov	 esi, DWORD PTR _size$[ebp]

; 982  :         DWORD LastError;
; 983  :         PROCESS_HEAP_ENTRY Entry;
; 984  :         Entry.lpData = NULL;
; 985  :         while (HeapWalk(hLocalHeap, &Entry))

  0000a	8d 45 e4	 lea	 eax, DWORD PTR _Entry$[ebp]
  0000d	57		 push	 edi
  0000e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__HeapWalk@8
  00014	50		 push	 eax
  00015	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0001b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00022	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00028	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _Entry$[ebp], 0
  0002f	ff d7		 call	 edi
  00031	85 c0		 test	 eax, eax
  00033	74 1f		 je	 SHORT $LN3@GetAllocat
$LL2@GetAllocat:

; 986  :         {
; 987  :             BOOL is_allocated = FALSE;
; 988  :             if ((Entry.wFlags & PROCESS_HEAP_ENTRY_BUSY) != 0)

  00035	f6 45 ee 04	 test	 BYTE PTR _Entry$[ebp+10], 4
  00039	74 09		 je	 SHORT $LN12@GetAllocat

; 989  :             {
; 990  :                 //_tprintf(TEXT("Allocated block"));
; 991  :                 is_allocated = TRUE;
; 992  : 
; 993  :                 if ((Entry.wFlags & PROCESS_HEAP_ENTRY_MOVEABLE) != 0)
; 994  :                 {
; 995  :                     //_tprintf(TEXT(", movable with HANDLE %#p"), Entry.Block.hMem);
; 996  :                 }
; 997  : 
; 998  :                 if ((Entry.wFlags & PROCESS_HEAP_ENTRY_DDESHARE) != 0)
; 999  :                 {
; 1000 :                     //_tprintf(TEXT(", DDESHARE"));
; 1001 :                 }
; 1002 :             }
; 1003 :             else if ((Entry.wFlags & PROCESS_HEAP_REGION) != 0)
; 1004 :             {
; 1005 :                 //_tprintf(TEXT("Region\n  %d bytes committed\n") \
; 1006 :                 //    TEXT("  %d bytes uncommitted\n  First block address: %#p\n") \
; 1007 :                 //    TEXT("  Last block address: %#p\n"),
; 1008 :                 //    Entry.Region.dwCommittedSize,
; 1009 :                 //    Entry.Region.dwUnCommittedSize,
; 1010 :                 //    Entry.Region.lpFirstBlock,
; 1011 :                 //    Entry.Region.lpLastBlock);
; 1012 :             }
; 1013 :             else if ((Entry.wFlags & PROCESS_HEAP_UNCOMMITTED_RANGE) != 0)
; 1014 :             {
; 1015 :                 //_tprintf(TEXT("Uncommitted range\n"));
; 1016 :             }
; 1017 :             else
; 1018 :             {
; 1019 :                 //_tprintf(TEXT("Block\n"));
; 1020 :             }
; 1021 : 
; 1022 :             //_tprintf(TEXT("  Data portion begins at: %#p\n  Size: %d bytes\n") \
; 1023 :             //    TEXT("  Overhead: %d bytes\n  Region index: %d\n\n"),
; 1024 :             //    Entry.lpData,
; 1025 :             //    Entry.cbData,
; 1026 :             //    Entry.cbOverhead,
; 1027 :             //    Entry.iRegionIndex);
; 1028 :             if (is_allocated)
; 1029 :                 *size += Entry.cbData;

  0003b	8b 45 e8	 mov	 eax, DWORD PTR _Entry$[ebp+4]
  0003e	01 06		 add	 DWORD PTR [esi], eax
  00040	83 56 04 00	 adc	 DWORD PTR [esi+4], 0
$LN12@GetAllocat:

; 982  :         DWORD LastError;
; 983  :         PROCESS_HEAP_ENTRY Entry;
; 984  :         Entry.lpData = NULL;
; 985  :         while (HeapWalk(hLocalHeap, &Entry))

  00044	8d 45 e4	 lea	 eax, DWORD PTR _Entry$[ebp]
  00047	50		 push	 eax
  00048	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0004e	ff d7		 call	 edi
  00050	85 c0		 test	 eax, eax
  00052	75 e1		 jne	 SHORT $LL2@GetAllocat
$LN3@GetAllocat:

; 1030 :         }
; 1031 :         LastError = GetLastError();

  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 1032 :         if (LastError != ERROR_NO_MORE_ITEMS)

  0005a	33 c9		 xor	 ecx, ecx
  0005c	3d 03 01 00 00	 cmp	 eax, 259		; 00000103H
  00061	5f		 pop	 edi
  00062	0f 94 c1	 sete	 cl
  00065	8b c1		 mov	 eax, ecx
  00067	5e		 pop	 esi

; 1033 :         {
; 1034 :             //_tprintf(TEXT("HeapWalk failed with LastError %d.\n"), LastError);
; 1035 :             return (FALSE);
; 1036 :         }
; 1037 :         return (TRUE);
; 1038 :     }

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?GetAllocatedMemorySize_Imp@Internal@Core@Math@Palmtree@@YAHPA_K@Z ENDP ; Palmtree::Math::Core::Internal::GetAllocatedMemorySize_Imp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?GetTrailingZeroBitCount@Internal@Core@Math@Palmtree@@YAIPAII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_word_count$ = 12					; size = 4
?GetTrailingZeroBitCount@Internal@Core@Math@Palmtree@@YAIPAII@Z PROC ; Palmtree::Math::Core::Internal::GetTrailingZeroBitCount, COMDAT

; 460  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 461  :         __UNIT_TYPE bit_count = 0;
; 462  :         while (word_count > 0)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _word_count$[ebp]
  00006	33 d2		 xor	 edx, edx
  00008	56		 push	 esi
  00009	85 c0		 test	 eax, eax
  0000b	74 14		 je	 SHORT $LN3@GetTrailin
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
$LL2@GetTrailin:

; 463  :         {
; 464  :             --word_count;
; 465  :             if (*p != 0)

  00010	8b 31		 mov	 esi, DWORD PTR [ecx]
  00012	48		 dec	 eax
  00013	85 f6		 test	 esi, esi
  00015	75 0f		 jne	 SHORT $LN10@GetTrailin

; 467  :             bit_count += __UNIT_TYPE_BIT_COUNT;

  00017	83 c2 20	 add	 edx, 32			; 00000020H

; 468  :             ++p;

  0001a	83 c1 04	 add	 ecx, 4
  0001d	85 c0		 test	 eax, eax
  0001f	75 ef		 jne	 SHORT $LL2@GetTrailin
$LN3@GetTrailin:

; 469  :         }
; 470  :         // このルートには到達しないはず
; 471  :         return (0);

  00021	33 c0		 xor	 eax, eax
  00023	5e		 pop	 esi

; 472  :     }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
$LN10@GetTrailin:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 511  :             _BitScanForward(&pos, x);

  00026	0f bc c6	 bsf	 eax, esi
  00029	5e		 pop	 esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 466  :                 return (bit_count + _TZCNT_ALT_UNIT(*p));

  0002a	03 c2		 add	 eax, edx

; 472  :     }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?GetTrailingZeroBitCount@Internal@Core@Math@Palmtree@@YAIPAII@Z ENDP ; Palmtree::Math::Core::Internal::GetTrailingZeroBitCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?GetEffectiveBitLength@Internal@Core@Math@Palmtree@@YAIPAII0@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_word_count$ = 12					; size = 4
_effective_word_count$ = 16				; size = 4
?GetEffectiveBitLength@Internal@Core@Math@Palmtree@@YAIPAII0@Z PROC ; Palmtree::Math::Core::Internal::GetEffectiveBitLength, COMDAT

; 438  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 439  :         if (p == nullptr)

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 18		 je	 SHORT $LN3@GetEffecti

; 440  :         {
; 441  :             *effective_word_count = 0;
; 442  :             return (0);
; 443  :         }
; 444  :         p += word_count;

  0000a	8b 55 0c	 mov	 edx, DWORD PTR _word_count$[ebp]
  0000d	8d 0c 90	 lea	 ecx, DWORD PTR [eax+edx*4]

; 445  :         while (word_count != 0)

  00010	85 d2		 test	 edx, edx
  00012	74 0e		 je	 SHORT $LN3@GetEffecti
$LL2@GetEffecti:

; 446  :         {
; 447  :             --p;
; 448  :             if (*p != 0)

  00014	83 79 fc 00	 cmp	 DWORD PTR [ecx-4], 0
  00018	8d 49 fc	 lea	 ecx, DWORD PTR [ecx-4]
  0001b	75 12		 jne	 SHORT $LN11@GetEffecti

; 452  :             }
; 453  :             --word_count;

  0001d	83 ea 01	 sub	 edx, 1
  00020	75 f2		 jne	 SHORT $LL2@GetEffecti
$LN3@GetEffecti:

; 454  :         }
; 455  :         *effective_word_count = 0;

  00022	8b 45 10	 mov	 eax, DWORD PTR _effective_word_count$[ebp]
  00025	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 456  :         return (0);

  0002b	33 c0		 xor	 eax, eax

; 457  :     }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
$LN11@GetEffecti:

; 449  :             {
; 450  :                 *effective_word_count = word_count;

  0002f	8b 45 10	 mov	 eax, DWORD PTR _effective_word_count$[ebp]
  00032	89 10		 mov	 DWORD PTR [eax], edx

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  00034	8b 01		 mov	 eax, DWORD PTR [ecx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 455  :             if (x == 0)

  00036	85 c0		 test	 eax, eax
  00038	75 0e		 jne	 SHORT $LN8@GetEffecti

; 456  :                 return (sizeof(x) * 8);

  0003a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  0003f	c1 e2 05	 shl	 edx, 5
  00042	2b d0		 sub	 edx, eax
  00044	8b c2		 mov	 eax, edx

; 457  :     }

  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN8@GetEffecti:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 460  :             _BitScanReverse(&pos, x);

  00048	0f bd c8	 bsr	 ecx, eax

; 479  :             return (sizeof(x) * 8 - 1 - pos);

  0004b	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  00050	c1 e2 05	 shl	 edx, 5
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00053	2b c1		 sub	 eax, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  00055	2b d0		 sub	 edx, eax
  00057	8b c2		 mov	 eax, edx

; 457  :     }

  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?GetEffectiveBitLength@Internal@Core@Math@Palmtree@@YAIPAII0@Z ENDP ; Palmtree::Math::Core::Internal::GetEffectiveBitLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::DeallocateNumber, COMDAT

; 423  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 424  :         if (p != nullptr && !p->IS_STATIC)

  00004	8b 75 08	 mov	 esi, DWORD PTR _p$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	0f 84 96 00 00
	00		 je	 $LN2@Deallocate
  0000f	f6 46 1c 01	 test	 BYTE PTR [esi+28], 1
  00013	0f 85 8c 00 00
	00		 jne	 $LN2@Deallocate

; 386  :         if (p->BLOCK != nullptr)

  00019	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  0001c	85 d2		 test	 edx, edx
  0001e	74 2a		 je	 SHORT $LN7@Deallocate

; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  00020	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00023	83 c2 fc	 add	 edx, -4			; fffffffcH
  00026	57		 push	 edi

; 222  :         HeapFree(hLocalHeap, 0, p);

  00027	52		 push	 edx

; 391  :             p->BLOCK = nullptr;

  00028	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  0002f	83 c1 02	 add	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00032	8b fa		 mov	 edi, edx
  00034	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00039	6a 00		 push	 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  0003b	f3 ab		 rep stosd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  0003d	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  00049	5f		 pop	 edi
$LN7@Deallocate:

; 425  :         {
; 426  :             CleanUpNumber(p);
; 427  :             FillNumberHeader(p);
; 428  :             HeapFree(hLocalHeap, 0, p);

  0004a	56		 push	 esi
  0004b	6a 00		 push	 0

; 322  :                 __p[0] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0004d	c7 06 cc cc cc
	cc		 mov	 DWORD PTR [esi], -858993460 ; ccccccccH

; 323  :                 __p[1] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00053	c7 46 04 cc cc
	cc cc		 mov	 DWORD PTR [esi+4], -858993460 ; ccccccccH

; 324  :                 __p[2] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0005a	c7 46 08 cc cc
	cc cc		 mov	 DWORD PTR [esi+8], -858993460 ; ccccccccH

; 325  :                 __p[3] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00061	c7 46 0c cc cc
	cc cc		 mov	 DWORD PTR [esi+12], -858993460 ; ccccccccH

; 326  :                 __p[4] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00068	c7 46 10 cc cc
	cc cc		 mov	 DWORD PTR [esi+16], -858993460 ; ccccccccH

; 327  :                 __p[5] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0006f	c7 46 14 cc cc
	cc cc		 mov	 DWORD PTR [esi+20], -858993460 ; ccccccccH

; 328  :                 __p[6] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00076	c7 46 18 cc cc
	cc cc		 mov	 DWORD PTR [esi+24], -858993460 ; ccccccccH

; 329  :                 __p[7] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0007d	c7 46 1c cc cc
	cc cc		 mov	 DWORD PTR [esi+28], -858993460 ; ccccccccH

; 330  :                 __p[8] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00084	c7 46 20 cc cc
	cc cc		 mov	 DWORD PTR [esi+32], -858993460 ; ccccccccH

; 331  :                 __p[9] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0008b	c7 46 24 cc cc
	cc cc		 mov	 DWORD PTR [esi+36], -858993460 ; ccccccccH

; 332  :                 __p[10] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00092	c7 46 28 cc cc
	cc cc		 mov	 DWORD PTR [esi+40], -858993460 ; ccccccccH

; 425  :         {
; 426  :             CleanUpNumber(p);
; 427  :             FillNumberHeader(p);
; 428  :             HeapFree(hLocalHeap, 0, p);

  00099	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
$LN2@Deallocate:
  000a5	5e		 pop	 esi

; 429  : #ifdef _LOG_MEMORY
; 430  :             {
; 431  :                 wprintf(L"0x%08lx: delete header 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)p);
; 432  :             }
; 433  : #endif
; 434  :         }
; 435  :     }

  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::DeallocateNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DetatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?DetatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::DetatchNumber, COMDAT

; 417  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 418  :         if (p != nullptr && p->IS_STATIC)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 37		 je	 SHORT $LN7@DetatchNum
  0000a	f6 41 1c 01	 test	 BYTE PTR [ecx+28], 1
  0000e	74 31		 je	 SHORT $LN7@DetatchNum

; 386  :         if (p->BLOCK != nullptr)

  00010	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00013	85 d2		 test	 edx, edx
  00015	74 2a		 je	 SHORT $LN7@DetatchNum

; 212  :         __UNIT_TYPE* p = buffer - 1;

  00017	57		 push	 edi

; 391  :             p->BLOCK = nullptr;

  00018	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 212  :         __UNIT_TYPE* p = buffer - 1;

  0001f	83 c2 fc	 add	 edx, -4			; fffffffcH

; 213  : #ifdef _DEBUG
; 214  :         if (*p != buffer_words)
; 215  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;1");
; 216  :         if (p[buffer_words+1] != check_code)
; 217  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;2");
; 218  : #endif
; 219  :         // 使用済みのバッファを既定のデータで塗りつぶす。
; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  00022	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00025	8b fa		 mov	 edi, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00027	52		 push	 edx
  00028	83 c1 02	 add	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00030	6a 00		 push	 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00032	f3 ab		 rep stosd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00034	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  00040	5f		 pop	 edi
$LN7@DetatchNum:

; 419  :             CleanUpNumber(p);
; 420  :     }

  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?DetatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::DetatchNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z
_TEXT	SEGMENT
_lock_obj$2 = -62					; size = 1
_lock_obj$3 = -61					; size = 1
$T4 = -60						; size = 28
$T5 = -56						; size = 24
_root$ = -32						; size = 16
$T6 = -16						; size = 4
_this$7 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bit_count$ = 8						; size = 4
?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z PROC ; Palmtree::Math::Core::Internal::AllocateNumber, COMDAT

; 407  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 136  :         ResourceHolder()

  00027	8d 45 e4	 lea	 eax, DWORD PTR _root$[ebp+4]
  0002a	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
  00031	89 45 f0	 mov	 DWORD PTR _this$7[ebp], eax

; 57   :             __ChainBufferTag()

  00034	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _root$[ebp+4], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0003b	89 45 e8	 mov	 DWORD PTR _root$[ebp+8], eax

; 60   :                 _prev = this;

  0003e	89 45 ec	 mov	 DWORD PTR _root$[ebp+12], eax

; 114  :             __RootTag()

  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _root$[ebp+4], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 751  :     {

  0004f	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00056	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 408  :         ResourceHolderUINT root;

  0005d	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 586  :         EnterCriticalSection(&mcs);

  00064	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__EnterCriticalSection@4
  0006a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0006f	ff d6		 call	 esi

; 760  :         Lock lock_obj;

  00071	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 761  :         void* buffer = HeapAlloc(hLocalHeap, HEAP_ZERO_MEMORY, size);

  00075	6a 2c		 push	 44			; 0000002cH
  00077	6a 08		 push	 8
  00079	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12
  00085	8b f8		 mov	 edi, eax

; 762  :         if (buffer == nullptr)

  00087	85 ff		 test	 edi, edi
  00089	0f 84 fc 00 00
	00		 je	 $LN69@AllocateNu

; 764  : #ifdef _LOG_MEMORY
; 765  :         {
; 766  :             wprintf(L"0x%08lx: new header 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)buffer);
; 767  :         }
; 768  :         #endif
; 769  :         __ChainBufferTag* tag = new __GenericChainBufferTag(buffer);

  0008f	6a 10		 push	 16			; 00000010H
  00091	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00096	8b c8		 mov	 ecx, eax
  00098	83 c4 04	 add	 esp, 4
  0009b	89 4d f0	 mov	 DWORD PTR $T6[ebp], ecx
  0009e	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000a2	85 c9		 test	 ecx, ecx
  000a4	74 1f		 je	 SHORT $LN18@AllocateNu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  000a6	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  000ac	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  000af	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 595  :     {

  000b2	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  000b6	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 596  :         _buffer = buffer;

  000bc	89 79 0c	 mov	 DWORD PTR [ecx+12], edi

; 597  :     }

  000bf	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 769  :         __ChainBufferTag* tag = new __GenericChainBufferTag(buffer);

  000c3	eb 02		 jmp	 SHORT $LN19@AllocateNu
$LN18@AllocateNu:
  000c5	33 c9		 xor	 ecx, ecx
$LN19@AllocateNu:
  000c7	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 71   :                 tag->_prev = this;

  000cb	8d 55 e4	 lea	 edx, DWORD PTR _root$[ebp+4]
  000ce	8b 45 e8	 mov	 eax, DWORD PTR _root$[ebp+8]
  000d1	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  000d4	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 72   :                 tag->_next->_prev = tag;

  000d7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 73   :                 tag->_prev->_next = tag;

  000da	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000dd	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 771  :         return (buffer);

  000e0	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 591  :         LeaveCriticalSection(&mcs);

  000e4	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 409  :         NUMBER_HEADER* p = (NUMBER_HEADER*)root.AllocateBytes(sizeof(NUMBER_HEADER));
; 410  :         InitializeNumber(p, bit_count);

  000ef	ff 75 08	 push	 DWORD PTR _bit_count$[ebp]
  000f2	57		 push	 edi
  000f3	e8 00 00 00 00	 call	 ?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::InitializeNumber

; 411  :         p->IS_STATIC = false;

  000f8	83 67 1c fe	 and	 DWORD PTR [edi+28], -2	; fffffffeH
  000fc	83 c4 08	 add	 esp, 8

; 586  :         EnterCriticalSection(&mcs);

  000ff	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00104	ff d6		 call	 esi

; 788  :         Lock lock_obj;

  00106	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0010a	8d 45 e4	 lea	 eax, DWORD PTR _root$[ebp+4]
  0010d	8b 75 e8	 mov	 esi, DWORD PTR _root$[ebp+8]
  00110	3b f0		 cmp	 esi, eax

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00112	0f 84 8e 00 00
	00		 je	 $LN65@AllocateNu
$LL45@AllocateNu:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00118	8b 06		 mov	 eax, DWORD PTR [esi]
  0011a	8b ce		 mov	 ecx, esi
  0011c	57		 push	 edi
  0011d	ff 50 04	 call	 DWORD PTR [eax+4]
  00120	85 c0		 test	 eax, eax
  00122	75 0c		 jne	 SHORT $LN37@AllocateNu

; 89   :                 return (_next);

  00124	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00127	8d 45 e4	 lea	 eax, DWORD PTR _root$[ebp+4]
  0012a	3b f0		 cmp	 esi, eax
  0012c	74 78		 je	 SHORT $LN65@AllocateNu
  0012e	eb e8		 jmp	 SHORT $LL45@AllocateNu
$LN37@AllocateNu:

; 78   :                 if (_next != this)

  00130	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00133	3b ce		 cmp	 ecx, esi
  00135	74 15		 je	 SHORT $LN53@AllocateNu

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00137	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0013a	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  0013d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00140	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00143	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00146	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00149	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN53@AllocateNu:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 793  :     }

  0014c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 591  :         LeaveCriticalSection(&mcs);

  00150	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00155	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 412  :         root.UnlinkBytes((void*)p);
; 413  :         return (p);

  0015b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 755  :     {

  00162	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 756  :     }

  00169	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00170	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00173	e8 00 00 00 00	 call	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder

; 412  :         root.UnlinkBytes((void*)p);
; 413  :         return (p);

  00178	8b c7		 mov	 eax, edi

; 414  :     }

  0017a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0017d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00184	59		 pop	 ecx
  00185	5f		 pop	 edi
  00186	5e		 pop	 esi
  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
$LN69@AllocateNu:

; 763  :             throw NotEnoughMemoryException(L"ヒープメモリ領域が不足しています。");

  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@PIPAACFA@?$PP?R?$PP?$PM?$PP?W?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAL?$AA?$AN?$PP?$LD?$AAW?$AAf?$AAD?$AA?$HO@
  00190	8d 4d c8	 lea	 ecx, DWORD PTR $T5[ebp]
  00193	e8 00 00 00 00	 call	 ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
  00198	68 00 00 00 00	 push	 OFFSET __TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
  0019d	8d 45 c8	 lea	 eax, DWORD PTR $T5[ebp]
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN65@AllocateNu:

; 791  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkBytes;1");

  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@NKBJLGGD@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  001ab	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  001b0	8d 4d c4	 lea	 ecx, DWORD PTR $T4[ebp]
  001b3	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  001b8	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  001bd	8d 45 c4	 lea	 eax, DWORD PTR $T4[ebp]
  001c0	50		 push	 eax
  001c1	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN67@AllocateNu:
  001c6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$3:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$2:
  00008	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp+4]
  0000b	e9 00 00 00 00	 jmp	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$1:
  00010	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$0:
  00018	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$4:
  00020	8d 4d c3	 lea	 ecx, DWORD PTR _lock_obj$3[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$5:
  00028	6a 10		 push	 16			; 00000010H
  0002a	8b 45 f0	 mov	 eax, DWORD PTR $T6[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00033	83 c4 08	 add	 esp, 8
  00036	c3		 ret	 0
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$6:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR $T6[ebp]
  0003a	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$7:
  0003f	8d 4d c2	 lea	 ecx, DWORD PTR _lock_obj$2[ebp]
  00042	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z$8:
  00047	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  0004a	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__ehhandler$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z:
  0004f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00053	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00056	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00059	33 c8		 xor	 ecx, eax
  0005b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00060	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z
  00065	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::AllocateNumber
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AttatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_bit_count$ = 12					; size = 4
?AttatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z PROC ; Palmtree::Math::Core::Internal::AttatchNumber, COMDAT

; 401  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 402  :         InitializeNumber(p, bit_count);

  00004	ff 75 0c	 push	 DWORD PTR _bit_count$[ebp]
  00007	8b 75 08	 mov	 esi, DWORD PTR _p$[ebp]
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 ?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::InitializeNumber
  00010	83 c4 08	 add	 esp, 8

; 403  :         p->IS_STATIC = true;

  00013	83 4e 1c 01	 or	 DWORD PTR [esi+28], 1
  00017	5e		 pop	 esi

; 404  :     }

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?AttatchNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::AttatchNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?CleanUpNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?CleanUpNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::CleanUpNumber, COMDAT

; 385  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 386  :         if (p->BLOCK != nullptr)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00006	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00009	85 d2		 test	 edx, edx
  0000b	74 2a		 je	 SHORT $LN4@CleanUpNum

; 212  :         __UNIT_TYPE* p = buffer - 1;

  0000d	57		 push	 edi

; 387  :         {
; 388  :             __UNIT_TYPE* block = p->BLOCK;
; 389  :             __UNIT_TYPE block_count = p->BLOCK_COUNT;
; 390  :             __UNIT_TYPE block_check_code = p->BLOCK_CHECK_CODE;
; 391  :             p->BLOCK = nullptr;

  0000e	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 212  :         __UNIT_TYPE* p = buffer - 1;

  00015	83 c2 fc	 add	 edx, -4			; fffffffcH

; 213  : #ifdef _DEBUG
; 214  :         if (*p != buffer_words)
; 215  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;1");
; 216  :         if (p[buffer_words+1] != check_code)
; 217  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;2");
; 218  : #endif
; 219  :         // 使用済みのバッファを既定のデータで塗りつぶす。
; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  00018	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  0001b	8b fa		 mov	 edi, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  0001d	52		 push	 edx
  0001e	83 c1 02	 add	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00026	6a 00		 push	 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00028	f3 ab		 rep stosd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  0002a	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  00036	5f		 pop	 edi
$LN4@CleanUpNum:

; 392  : #ifdef _LOG_MEMORY
; 393  :             {
; 394  :                 wprintf(L"0x%08lx: unlink 0x%016llx->0x%016llx\n", GetCurrentThreadId(), (unsigned long long)p, (unsigned long long)(block - 1));
; 395  :             }
; 396  : #endif
; 397  :             DeallocateBlock(block, block_count, block_check_code);        }
; 398  :     }

  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?CleanUpNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::CleanUpNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z
_TEXT	SEGMENT
_check_code$1 = -4					; size = 4
_p$ = 8							; size = 4
_word_count$2 = 12					; size = 4
_bit_count$ = 12					; size = 4
?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z PROC ; Palmtree::Math::Core::Internal::InitializeNumber, COMDAT

; 350  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b 75 08	 mov	 esi, DWORD PTR _p$[ebp]
  00008	57		 push	 edi

; 351  :         if (bit_count > 0)

  00009	8b 7d 0c	 mov	 edi, DWORD PTR _bit_count$[ebp]
  0000c	85 ff		 test	 edi, edi
  0000e	74 1f		 je	 SHORT $LN2@Initialize

; 352  :         {
; 353  :             __UNIT_TYPE word_count;
; 354  :             __UNIT_TYPE check_code;
; 355  :             __UNIT_TYPE* block = AllocateBlock(bit_count, &word_count, &check_code);

  00010	8d 45 fc	 lea	 eax, DWORD PTR _check_code$1[ebp]
  00013	50		 push	 eax
  00014	8d 45 0c	 lea	 eax, DWORD PTR _word_count$2[ebp]
  00017	50		 push	 eax
  00018	57		 push	 edi
  00019	e8 00 00 00 00	 call	 ?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z ; Palmtree::Math::Core::Internal::AllocateBlock

; 356  :             ClearNumberHeader(p);
; 357  :             p->SIGNATURE1 = PMC_SIGNATURE;
; 358  :             p->SIGNATURE2 = PMC_UINT_SIGNATURE;
; 359  :             p->UNIT_BIT_COUNT = bit_count;
; 360  :             p->BLOCK_COUNT = word_count;

  0001e	8b 4d 0c	 mov	 ecx, DWORD PTR _word_count$2[ebp]
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	89 4e 20	 mov	 DWORD PTR [esi+32], ecx

; 361  :             p->BLOCK = block;
; 362  :             p->BLOCK_CHECK_CODE = check_code;

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _check_code$1[ebp]
  0002a	89 4e 28	 mov	 DWORD PTR [esi+40], ecx

; 363  :             p->IS_COMMITTED = false;
; 364  : #ifdef _LOG_MEMORY
; 365  :             {
; 366  :                 wprintf(L"0x%08lx: link 0x%016llx->0x%016llx\n", GetCurrentThreadId(), (unsigned long long)p, (unsigned long long)(block - 1));
; 367  :             }
; 368  : #endif
; 369  :         }
; 370  :         else

  0002d	eb 12		 jmp	 SHORT $LN3@Initialize
$LN2@Initialize:

; 371  :         {
; 372  :             // bit_count に 0 が与えられるのは、数値が 0 の場合。
; 373  :             ClearNumberHeader(p);
; 374  :             p->SIGNATURE1 = PMC_SIGNATURE;
; 375  :             p->SIGNATURE2 = PMC_UINT_SIGNATURE;
; 376  :             p->UNIT_BIT_COUNT = 0;
; 377  :             p->BLOCK_COUNT = 0;
; 378  :             p->BLOCK = nullptr;
; 379  :             p->BLOCK_CHECK_CODE = 0;
; 380  :             p->IS_COMMITTED = false;

  0002f	33 c0		 xor	 eax, eax
  00031	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  00038	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  0003f	33 ff		 xor	 edi, edi
$LN3@Initialize:

; 381  :         }
; 382  :     }

  00041	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00047	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0004e	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00055	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  0005c	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  00063	c7 46 08 70 4d
	63 49		 mov	 DWORD PTR [esi+8], 1231244656 ; 49634d70H
  0006a	c7 46 0c 55 69
	6e 54		 mov	 DWORD PTR [esi+12], 1416522069 ; 546e6955H
  00071	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  00074	5f		 pop	 edi
  00075	89 46 24	 mov	 DWORD PTR [esi+36], eax
  00078	5e		 pop	 esi
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ENDP ; Palmtree::Math::Core::Internal::InitializeNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?FillNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?FillNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::FillNumberHeader, COMDAT

; 300  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 301  : #ifdef _M_X64
; 302  :         if (sizeof(*p) == sizeof(_UINT64_T) * 10)
; 303  :         {
; 304  :             _UINT64_T* __p = (_UINT64_T*)p;
; 305  :             __p[0] = DEFAULT_MEMORY_DATA;
; 306  :             __p[1] = DEFAULT_MEMORY_DATA;
; 307  :             __p[2] = DEFAULT_MEMORY_DATA;
; 308  :             __p[3] = DEFAULT_MEMORY_DATA;
; 309  :             __p[4] = DEFAULT_MEMORY_DATA;
; 310  :             __p[5] = DEFAULT_MEMORY_DATA;
; 311  :             __p[6] = DEFAULT_MEMORY_DATA;
; 312  :             __p[7] = DEFAULT_MEMORY_DATA;
; 313  :             __p[8] = DEFAULT_MEMORY_DATA;
; 314  :             __p[9] = DEFAULT_MEMORY_DATA;
; 315  :         }
; 316  :         else
; 317  :         {
; 318  : #endif
; 319  :             if (sizeof(*p) == sizeof(_UINT32_T) * 11)
; 320  :             {
; 321  :                 _UINT32_T* __p = (_UINT32_T*)p;
; 322  :                 __p[0] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	c7 00 cc cc cc
	cc		 mov	 DWORD PTR [eax], -858993460 ; ccccccccH

; 323  :                 __p[1] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0000c	c7 40 04 cc cc
	cc cc		 mov	 DWORD PTR [eax+4], -858993460 ; ccccccccH

; 324  :                 __p[2] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00013	c7 40 08 cc cc
	cc cc		 mov	 DWORD PTR [eax+8], -858993460 ; ccccccccH

; 325  :                 __p[3] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0001a	c7 40 0c cc cc
	cc cc		 mov	 DWORD PTR [eax+12], -858993460 ; ccccccccH

; 326  :                 __p[4] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00021	c7 40 10 cc cc
	cc cc		 mov	 DWORD PTR [eax+16], -858993460 ; ccccccccH

; 327  :                 __p[5] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00028	c7 40 14 cc cc
	cc cc		 mov	 DWORD PTR [eax+20], -858993460 ; ccccccccH

; 328  :                 __p[6] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0002f	c7 40 18 cc cc
	cc cc		 mov	 DWORD PTR [eax+24], -858993460 ; ccccccccH

; 329  :                 __p[7] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00036	c7 40 1c cc cc
	cc cc		 mov	 DWORD PTR [eax+28], -858993460 ; ccccccccH

; 330  :                 __p[8] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0003d	c7 40 20 cc cc
	cc cc		 mov	 DWORD PTR [eax+32], -858993460 ; ccccccccH

; 331  :                 __p[9] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  00044	c7 40 24 cc cc
	cc cc		 mov	 DWORD PTR [eax+36], -858993460 ; ccccccccH

; 332  :                 __p[10] = (_UINT32_T)DEFAULT_MEMORY_DATA;

  0004b	c7 40 28 cc cc
	cc cc		 mov	 DWORD PTR [eax+40], -858993460 ; ccccccccH

; 333  :             }
; 334  : #ifdef _M_X64
; 335  :             else if (sizeof(*p) % sizeof(_UINT64_T) == 0)
; 336  :                 _FILL_MEMORY_64((_UINT64_T*)p, DEFAULT_MEMORY_DATA, sizeof(*p) / sizeof(_UINT64_T));
; 337  : #endif
; 338  :             else if (sizeof(*p) % sizeof(_UINT32_T) == 0)
; 339  :                 _FILL_MEMORY_32((_UINT32_T*)p, (_UINT32_T)DEFAULT_MEMORY_DATA, sizeof(*p) / sizeof(_UINT32_T));
; 340  :             else if (sizeof(*p) % sizeof(_UINT16_T) == 0)
; 341  :                 _FILL_MEMORY_16((_UINT16_T*)p, (_UINT16_T)DEFAULT_MEMORY_DATA, sizeof(*p) / sizeof(_UINT16_T));
; 342  :             else
; 343  :                 _FILL_MEMORY_BYTE(p, (unsigned char)DEFAULT_MEMORY_DATA, sizeof(*p));
; 344  : #ifdef _M_X64
; 345  :         }
; 346  : #endif
; 347  :     }

  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?FillNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::FillNumberHeader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?ClearNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?ClearNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::ClearNumberHeader, COMDAT

; 250  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 251  : #ifdef _M_X64
; 252  :         if (sizeof(*p) == sizeof(_UINT64_T) * 10)
; 253  :         {
; 254  :             _UINT64_T* __p = (_UINT64_T*)p;
; 255  :             __p[0] = 0;
; 256  :             __p[1] = 0;
; 257  :             __p[2] = 0;
; 258  :             __p[3] = 0;
; 259  :             __p[4] = 0;
; 260  :             __p[5] = 0;
; 261  :             __p[6] = 0;
; 262  :             __p[7] = 0;
; 263  :             __p[8] = 0;
; 264  :             __p[9] = 0;
; 265  :         }
; 266  :         else
; 267  :         {
; 268  : #endif
; 269  :             if (sizeof(*p) == sizeof(_UINT32_T) * 11)
; 270  :             {
; 271  :                 _UINT32_T* __p = (_UINT32_T*)p;
; 272  :                 __p[0] = 0;

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 273  :                 __p[1] = 0;

  0000c	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 274  :                 __p[2] = 0;

  00013	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 275  :                 __p[3] = 0;

  0001a	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 276  :                 __p[4] = 0;

  00021	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 277  :                 __p[5] = 0;

  00028	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 278  :                 __p[6] = 0;

  0002f	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 279  :                 __p[7] = 0;

  00036	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 280  :                 __p[8] = 0;

  0003d	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 281  :                 __p[9] = 0;

  00044	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0

; 282  :                 __p[10] = 0;

  0004b	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0

; 283  :             }
; 284  : #ifdef _M_X64
; 285  :             else if (sizeof(*p) % sizeof(_UINT64_T) == 0)
; 286  :                 _ZERO_MEMORY_64((_UINT64_T*)p, sizeof(*p) / sizeof(_UINT64_T));
; 287  : #endif
; 288  :             else if (sizeof(*p) % sizeof(_UINT32_T) == 0)
; 289  :                 _ZERO_MEMORY_32((_UINT32_T*)p, sizeof(*p) / sizeof(_UINT32_T));
; 290  :             else if (sizeof(*p) % sizeof(_UINT16_T) == 0)
; 291  :                 _ZERO_MEMORY_16((_UINT16_T*)p, sizeof(*p) / sizeof(_UINT16_T));
; 292  :             else
; 293  :                 _ZERO_MEMORY_BYTE(p, sizeof(*p));
; 294  : #ifdef _M_X64
; 295  :         }
; 296  : #endif
; 297  :     }

  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?ClearNumberHeader@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::ClearNumberHeader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z
_TEXT	SEGMENT
$T1 = -28						; size = 28
_buffer$ = 8						; size = 4
_count$ = 12						; size = 4
_code$ = 16						; size = 4
?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z PROC ; Palmtree::Math::Core::Internal::CheckBlock, COMDAT

; 232  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 233  : //#ifdef _DEBUG
; 234  :         if (buffer == nullptr)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	85 c9		 test	 ecx, ecx
  0000b	74 17		 je	 SHORT $LN4@CheckBlock

; 235  :             return;
; 236  :         --buffer;
; 237  :         __UNIT_TYPE words = buffer[0];

  0000d	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]

; 238  :         if (words != count)

  00010	3b 55 0c	 cmp	 edx, DWORD PTR _count$[ebp]
  00013	75 13		 jne	 SHORT $LN9@CheckBlock

; 240  :         __UNIT_TYPE code_actual = buffer[words + 1];
; 241  :         __UNIT_TYPE code_desired = code;
; 242  :         if (code_desired != code_actual)

  00015	8b 45 10	 mov	 eax, DWORD PTR _code$[ebp]
  00018	3b 04 91	 cmp	 eax, DWORD PTR [ecx+edx*4]
  0001b	74 07		 je	 SHORT $LN4@CheckBlock

; 243  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckBlockLight;2");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@KLIFJDDK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00022	eb 09		 jmp	 SHORT $LN7@CheckBlock
$LN4@CheckBlock:

; 244  : //#else
; 245  : //        return;
; 246  : //#endif
; 247  :     }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
$LN9@CheckBlock:

; 239  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckBlockLight;1");

  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@LJDADMNE@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
$LN7@CheckBlock:

; 244  : //#else
; 245  : //        return;
; 246  : //#endif
; 247  :     }

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  00032	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00035	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0003a	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0003f	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@CheckBlock:
  00048	cc		 int	 3
?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ENDP ; Palmtree::Math::Core::Internal::CheckBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DeallocateBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_buffer_words$ = 12					; size = 4
_check_code$ = 16					; size = 4
?DeallocateBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z PROC ; Palmtree::Math::Core::Internal::DeallocateBlock, COMDAT

; 209  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 210  :         if (buffer == nullptr)

  00003	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 23		 je	 SHORT $LN1@Deallocate

; 211  :             return;
; 212  :         __UNIT_TYPE* p = buffer - 1;
; 213  : #ifdef _DEBUG
; 214  :         if (*p != buffer_words)
; 215  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;1");
; 216  :         if (p[buffer_words+1] != check_code)
; 217  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;2");
; 218  : #endif
; 219  :         // 使用済みのバッファを既定のデータで塗りつぶす。
; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _buffer_words$[ebp]
  0000d	83 c2 fc	 add	 edx, -4			; fffffffcH
  00010	57		 push	 edi

; 222  :         HeapFree(hLocalHeap, 0, p);

  00011	52		 push	 edx
  00012	83 c1 02	 add	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00015	8b fa		 mov	 edi, edx
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  0001c	6a 00		 push	 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  0001e	f3 ab		 rep stosd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00020	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  0002c	5f		 pop	 edi
$LN1@Deallocate:

; 223  : #ifdef _LOG_MEMORY
; 224  :         {
; 225  :             wprintf(L"0x%08lx: delete block 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)p);
; 226  :         }
; 227  : #endif
; 228  :     }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?DeallocateBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ENDP ; Palmtree::Math::Core::Internal::DeallocateBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_bits$ = 8						; size = 4
_allocated_block_words$ = 12				; size = 4
_code$ = 16						; size = 4
?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z PROC ; Palmtree::Math::Core::Internal::AllocateBlock, COMDAT

; 163  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 157  :             return ((u + v - 1) / v);

  00007	8b 75 08	 mov	 esi, DWORD PTR _bits$[ebp]
  0000a	8d 76 1f	 lea	 esi, DWORD PTR [esi+31]
  0000d	c1 ee 05	 shr	 esi, 5
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 170  :         __UNIT_TYPE bytes = words2 * __UNIT_TYPE_BYTE_COUNT;

  00010	8d 04 b5 08 00
	00 00		 lea	 eax, DWORD PTR [esi*4+8]

; 171  :         __UNIT_TYPE* buffer = (__UNIT_TYPE*)HeapAlloc(hLocalHeap, HEAP_ZERO_MEMORY, bytes);

  00017	50		 push	 eax
  00018	6a 08		 push	 8
  0001a	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12
  00026	8b c8		 mov	 ecx, eax

; 172  :         if (buffer == nullptr)

  00028	85 c9		 test	 ecx, ecx
  0002a	74 20		 je	 SHORT $LN8@AllocateBl

; 174  : #ifdef _LOG_MEMORY
; 175  :         {
; 176  :             wprintf(L"0x%08lx: new block 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)buffer);
; 177  :         }
; 178  : #endif
; 179  :         buffer[0] = words1;
; 180  :         *allocated_block_words = words1;

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _allocated_block_words$[ebp]
  0002f	89 31		 mov	 DWORD PTR [ecx], esi
  00031	89 30		 mov	 DWORD PTR [eax], esi

; 181  : #ifdef _DEBUG
; 182  :         // 乱数もどきを生成する。
; 183  : #ifdef _M_IX86
; 184  :         __UNIT_TYPE r = GetTickCount();
; 185  : #elif defined(_M_X64)
; 186  : #ifdef _MSC_VER
; 187  :         __UNIT_TYPE r = GetTickCount64();
; 188  : #elif defined(__GNUC__)
; 189  :         _UINT32_T temp = GetTickCount();
; 190  :         __UNIT_TYPE r = _FROMWORDTODWORD(temp, temp);
; 191  : #else
; 192  : #error unknown compiler
; 193  : #endif
; 194  : #else
; 195  : #error unknown platform
; 196  : #endif
; 197  :         __UNIT_TYPE check_code = CHECK_CODE_INIT | r;
; 198  : #else
; 199  :         __UNIT_TYPE check_code = 0;
; 200  : #endif
; 201  :         buffer[words1 + 1] = check_code;
; 202  :         *code = check_code;

  00033	8b 45 10	 mov	 eax, DWORD PTR _code$[ebp]
  00036	c7 44 b1 04 00
	00 00 00	 mov	 DWORD PTR [ecx+esi*4+4], 0

; 203  :         return (&buffer[1]);

  0003e	5e		 pop	 esi
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00045	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 204  :     }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
$LN8@AllocateBl:

; 173  :             throw NotEnoughMemoryException(L"ヒープメモリ領域が不足しています。");

  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@PIPAACFA@?$PP?R?$PP?$PM?$PP?W?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAL?$AA?$AN?$PP?$LD?$AAW?$AAf?$AAD?$AA?$HO@
  00051	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
  00059	68 00 00 00 00	 push	 OFFSET __TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
  0005e	8d 45 e8	 lea	 eax, DWORD PTR $T1[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@AllocateBl:
  00067	cc		 int	 3
?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z ENDP ; Palmtree::Math::Core::Internal::AllocateBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_words$ = 12						; size = 4
?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z PROC ; Palmtree::Math::Core::Internal::CalculateHashCode, COMDAT

; 59   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 60   :         __UNIT_TYPE code = CHECK_CODE_INIT;
; 61   : 
; 62   :         __UNIT_TYPE count = words >> 5;
; 63   :         while (count != 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00006	b8 84 84 84 84	 mov	 eax, -2071690108	; 84848484H
  0000b	53		 push	 ebx
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _words$[ebp]
  0000f	8b d3		 mov	 edx, ebx
  00011	c1 ea 05	 shr	 edx, 5
  00014	85 d2		 test	 edx, edx
  00016	0f 84 cf 00 00
	00		 je	 $LN3@CalculateH
  0001c	0f 1f 40 00	 npad	 4
$LL2@CalculateH:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00020	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 65   :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  00023	33 01		 xor	 eax, DWORD PTR [ecx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00025	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 66   :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  00028	33 41 04	 xor	 eax, DWORD PTR [ecx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0002b	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 67   :             code = _ROTATE_L_UNIT(code, 3) ^ p[2];

  0002e	33 41 08	 xor	 eax, DWORD PTR [ecx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00031	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 68   :             code = _ROTATE_L_UNIT(code, 3) ^ p[3];

  00034	33 41 0c	 xor	 eax, DWORD PTR [ecx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00037	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 69   :             code = _ROTATE_L_UNIT(code, 3) ^ p[4];

  0003a	33 41 10	 xor	 eax, DWORD PTR [ecx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0003d	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 70   :             code = _ROTATE_L_UNIT(code, 3) ^ p[5];

  00040	33 41 14	 xor	 eax, DWORD PTR [ecx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00043	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 71   :             code = _ROTATE_L_UNIT(code, 3) ^ p[6];

  00046	33 41 18	 xor	 eax, DWORD PTR [ecx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00049	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 72   :             code = _ROTATE_L_UNIT(code, 3) ^ p[7];

  0004c	33 41 1c	 xor	 eax, DWORD PTR [ecx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0004f	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 73   :             code = _ROTATE_L_UNIT(code, 3) ^ p[8];

  00052	33 41 20	 xor	 eax, DWORD PTR [ecx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00055	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 74   :             code = _ROTATE_L_UNIT(code, 3) ^ p[9];

  00058	33 41 24	 xor	 eax, DWORD PTR [ecx+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0005b	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 75   :             code = _ROTATE_L_UNIT(code, 3) ^ p[10];

  0005e	33 41 28	 xor	 eax, DWORD PTR [ecx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00061	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 76   :             code = _ROTATE_L_UNIT(code, 3) ^ p[11];

  00064	33 41 2c	 xor	 eax, DWORD PTR [ecx+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00067	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 77   :             code = _ROTATE_L_UNIT(code, 3) ^ p[12];

  0006a	33 41 30	 xor	 eax, DWORD PTR [ecx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0006d	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 78   :             code = _ROTATE_L_UNIT(code, 3) ^ p[13];

  00070	33 41 34	 xor	 eax, DWORD PTR [ecx+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00073	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 79   :             code = _ROTATE_L_UNIT(code, 3) ^ p[14];

  00076	33 41 38	 xor	 eax, DWORD PTR [ecx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00079	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 80   :             code = _ROTATE_L_UNIT(code, 3) ^ p[15];

  0007c	33 41 3c	 xor	 eax, DWORD PTR [ecx+60]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0007f	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 81   :             code = _ROTATE_L_UNIT(code, 3) ^ p[16];

  00082	33 41 40	 xor	 eax, DWORD PTR [ecx+64]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00085	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 82   :             code = _ROTATE_L_UNIT(code, 3) ^ p[17];

  00088	33 41 44	 xor	 eax, DWORD PTR [ecx+68]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0008b	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 83   :             code = _ROTATE_L_UNIT(code, 3) ^ p[18];

  0008e	33 41 48	 xor	 eax, DWORD PTR [ecx+72]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00091	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 84   :             code = _ROTATE_L_UNIT(code, 3) ^ p[19];

  00094	33 41 4c	 xor	 eax, DWORD PTR [ecx+76]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00097	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 85   :             code = _ROTATE_L_UNIT(code, 3) ^ p[20];

  0009a	33 41 50	 xor	 eax, DWORD PTR [ecx+80]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0009d	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 86   :             code = _ROTATE_L_UNIT(code, 3) ^ p[21];

  000a0	33 41 54	 xor	 eax, DWORD PTR [ecx+84]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000a3	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 87   :             code = _ROTATE_L_UNIT(code, 3) ^ p[22];

  000a6	33 41 58	 xor	 eax, DWORD PTR [ecx+88]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000a9	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 88   :             code = _ROTATE_L_UNIT(code, 3) ^ p[23];

  000ac	33 41 5c	 xor	 eax, DWORD PTR [ecx+92]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000af	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 89   :             code = _ROTATE_L_UNIT(code, 3) ^ p[24];

  000b2	33 41 60	 xor	 eax, DWORD PTR [ecx+96]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000b5	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 90   :             code = _ROTATE_L_UNIT(code, 3) ^ p[25];

  000b8	33 41 64	 xor	 eax, DWORD PTR [ecx+100]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000bb	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 91   :             code = _ROTATE_L_UNIT(code, 3) ^ p[26];

  000be	33 41 68	 xor	 eax, DWORD PTR [ecx+104]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000c1	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 92   :             code = _ROTATE_L_UNIT(code, 3) ^ p[27];

  000c4	33 41 6c	 xor	 eax, DWORD PTR [ecx+108]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000c7	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 93   :             code = _ROTATE_L_UNIT(code, 3) ^ p[28];

  000ca	33 41 70	 xor	 eax, DWORD PTR [ecx+112]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000cd	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 94   :             code = _ROTATE_L_UNIT(code, 3) ^ p[29];

  000d0	33 41 74	 xor	 eax, DWORD PTR [ecx+116]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000d3	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 95   :             code = _ROTATE_L_UNIT(code, 3) ^ p[30];

  000d6	33 41 78	 xor	 eax, DWORD PTR [ecx+120]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000d9	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 96   :             code = _ROTATE_L_UNIT(code, 3) ^ p[31];

  000dc	33 41 7c	 xor	 eax, DWORD PTR [ecx+124]

; 97   :             p += 32;

  000df	83 e9 80	 sub	 ecx, -128		; ffffff80H

; 98   :             --count;

  000e2	83 ea 01	 sub	 edx, 1
  000e5	0f 85 35 ff ff
	ff		 jne	 $LL2@CalculateH
$LN3@CalculateH:

; 99   :         }
; 100  : 
; 101  :         if (words & 0x10)

  000eb	f6 c3 10	 test	 bl, 16			; 00000010H
  000ee	74 62		 je	 SHORT $LN4@CalculateH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000f0	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 103  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  000f3	33 01		 xor	 eax, DWORD PTR [ecx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000f5	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 104  :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  000f8	33 41 04	 xor	 eax, DWORD PTR [ecx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  000fb	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 105  :             code = _ROTATE_L_UNIT(code, 3) ^ p[2];

  000fe	33 41 08	 xor	 eax, DWORD PTR [ecx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00101	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 106  :             code = _ROTATE_L_UNIT(code, 3) ^ p[3];

  00104	33 41 0c	 xor	 eax, DWORD PTR [ecx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00107	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 107  :             code = _ROTATE_L_UNIT(code, 3) ^ p[4];

  0010a	33 41 10	 xor	 eax, DWORD PTR [ecx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0010d	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 108  :             code = _ROTATE_L_UNIT(code, 3) ^ p[5];

  00110	33 41 14	 xor	 eax, DWORD PTR [ecx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00113	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 109  :             code = _ROTATE_L_UNIT(code, 3) ^ p[6];

  00116	33 41 18	 xor	 eax, DWORD PTR [ecx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00119	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 110  :             code = _ROTATE_L_UNIT(code, 3) ^ p[7];

  0011c	33 41 1c	 xor	 eax, DWORD PTR [ecx+28]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0011f	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 111  :             code = _ROTATE_L_UNIT(code, 3) ^ p[8];

  00122	33 41 20	 xor	 eax, DWORD PTR [ecx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00125	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 112  :             code = _ROTATE_L_UNIT(code, 3) ^ p[9];

  00128	33 41 24	 xor	 eax, DWORD PTR [ecx+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0012b	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 113  :             code = _ROTATE_L_UNIT(code, 3) ^ p[10];

  0012e	33 41 28	 xor	 eax, DWORD PTR [ecx+40]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00131	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 114  :             code = _ROTATE_L_UNIT(code, 3) ^ p[11];

  00134	33 41 2c	 xor	 eax, DWORD PTR [ecx+44]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00137	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 115  :             code = _ROTATE_L_UNIT(code, 3) ^ p[12];

  0013a	33 41 30	 xor	 eax, DWORD PTR [ecx+48]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0013d	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 116  :             code = _ROTATE_L_UNIT(code, 3) ^ p[13];

  00140	33 41 34	 xor	 eax, DWORD PTR [ecx+52]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00143	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 117  :             code = _ROTATE_L_UNIT(code, 3) ^ p[14];

  00146	33 41 38	 xor	 eax, DWORD PTR [ecx+56]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00149	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 118  :             code = _ROTATE_L_UNIT(code, 3) ^ p[15];

  0014c	33 41 3c	 xor	 eax, DWORD PTR [ecx+60]

; 119  :             p += 16;

  0014f	83 c1 40	 add	 ecx, 64			; 00000040H
$LN4@CalculateH:

; 120  :         }
; 121  : 
; 122  :         if (words & 0x8)

  00152	f6 c3 08	 test	 bl, 8
  00155	74 32		 je	 SHORT $LN5@CalculateH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00157	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 124  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  0015a	33 01		 xor	 eax, DWORD PTR [ecx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0015c	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 125  :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  0015f	33 41 04	 xor	 eax, DWORD PTR [ecx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00162	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 126  :             code = _ROTATE_L_UNIT(code, 3) ^ p[2];

  00165	33 41 08	 xor	 eax, DWORD PTR [ecx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00168	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 127  :             code = _ROTATE_L_UNIT(code, 3) ^ p[3];

  0016b	33 41 0c	 xor	 eax, DWORD PTR [ecx+12]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0016e	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 128  :             code = _ROTATE_L_UNIT(code, 3) ^ p[4];

  00171	33 41 10	 xor	 eax, DWORD PTR [ecx+16]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00174	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 129  :             code = _ROTATE_L_UNIT(code, 3) ^ p[5];

  00177	33 41 14	 xor	 eax, DWORD PTR [ecx+20]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0017a	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 130  :             code = _ROTATE_L_UNIT(code, 3) ^ p[6];

  0017d	33 41 18	 xor	 eax, DWORD PTR [ecx+24]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00180	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 131  :             code = _ROTATE_L_UNIT(code, 3) ^ p[7];

  00183	33 41 1c	 xor	 eax, DWORD PTR [ecx+28]

; 132  :             p += 8;

  00186	83 c1 20	 add	 ecx, 32			; 00000020H
$LN5@CalculateH:

; 133  :         }
; 134  : 
; 135  :         if (words & 0x4)

  00189	f6 c3 04	 test	 bl, 4
  0018c	74 1a		 je	 SHORT $LN6@CalculateH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0018e	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 137  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  00191	33 01		 xor	 eax, DWORD PTR [ecx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00193	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 138  :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  00196	33 41 04	 xor	 eax, DWORD PTR [ecx+4]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  00199	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 139  :             code = _ROTATE_L_UNIT(code, 3) ^ p[2];

  0019c	33 41 08	 xor	 eax, DWORD PTR [ecx+8]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  0019f	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 140  :             code = _ROTATE_L_UNIT(code, 3) ^ p[3];

  001a2	33 41 0c	 xor	 eax, DWORD PTR [ecx+12]

; 141  :             p += 4;

  001a5	83 c1 10	 add	 ecx, 16			; 00000010H
$LN6@CalculateH:

; 142  :         }
; 143  : 
; 144  :         if (words & 0x2)

  001a8	f6 c3 02	 test	 bl, 2
  001ab	74 0e		 je	 SHORT $LN7@CalculateH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  001ad	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 146  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  001b0	33 01		 xor	 eax, DWORD PTR [ecx]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  001b2	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 147  :             code = _ROTATE_L_UNIT(code, 3) ^ p[1];

  001b5	33 41 04	 xor	 eax, DWORD PTR [ecx+4]

; 148  :             p += 2;

  001b8	83 c1 08	 add	 ecx, 8
$LN7@CalculateH:

; 149  :         }
; 150  : 
; 151  :         if (words & 0x1)

  001bb	f6 c3 01	 test	 bl, 1
  001be	5b		 pop	 ebx
  001bf	74 05		 je	 SHORT $LN8@CalculateH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 331  :             return (_rotl(x, count));

  001c1	c1 c0 03	 rol	 eax, 3
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 152  :             code = _ROTATE_L_UNIT(code, 3) ^ p[0];

  001c4	33 01		 xor	 eax, DWORD PTR [ecx]
$LN8@CalculateH:

; 153  : 
; 154  :         return (code);
; 155  :     }

  001c6	5d		 pop	 ebp
  001c7	c3		 ret	 0
?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z ENDP ; Palmtree::Math::Core::Internal::CalculateHashCode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __TZCNT_ALT_UNIT
_TEXT	SEGMENT
_x$ = 8							; size = 4
__TZCNT_ALT_UNIT PROC					; COMDAT

; 505  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 506  :             if (x == 0)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 07		 jne	 SHORT $LN2@TZCNT_ALT_

; 507  :                 return (sizeof(x) * 8);

  0000a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 512  : #elif defined(__GNUC__)
; 513  :             __asm__("bsfl %1, %0" : "=r"(pos) : "rm"(x));
; 514  : #else
; 515  : #error unknown compiler
; 516  : #endif
; 517  : #elif defined(_M_X64)
; 518  : #ifdef _MSC_VER
; 519  :             DWORD pos;
; 520  :             _BitScanForward64(&pos, x);
; 521  : #elif defined(__GNUC__)
; 522  :             _UINT64_T pos;
; 523  :             __asm__("bsfq %1, %0" : "=r"(pos) : "rm"(x));
; 524  : #else
; 525  : #error unknown compiler
; 526  : #endif
; 527  : #else
; 528  : #error unknown platform
; 529  : #endif
; 530  :             return (pos);
; 531  :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN2@TZCNT_ALT_:

; 508  : #ifdef _M_IX86
; 509  :             DWORD pos;
; 510  : #ifdef _MSC_VER
; 511  :             _BitScanForward(&pos, x);

  00011	0f bc c0	 bsf	 eax, eax

; 512  : #elif defined(__GNUC__)
; 513  :             __asm__("bsfl %1, %0" : "=r"(pos) : "rm"(x));
; 514  : #else
; 515  : #error unknown compiler
; 516  : #endif
; 517  : #elif defined(_M_X64)
; 518  : #ifdef _MSC_VER
; 519  :             DWORD pos;
; 520  :             _BitScanForward64(&pos, x);
; 521  : #elif defined(__GNUC__)
; 522  :             _UINT64_T pos;
; 523  :             __asm__("bsfq %1, %0" : "=r"(pos) : "rm"(x));
; 524  : #else
; 525  : #error unknown compiler
; 526  : #endif
; 527  : #else
; 528  : #error unknown platform
; 529  : #endif
; 530  :             return (pos);
; 531  :         }

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__TZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __LZCNT_ALT_UNIT
_TEXT	SEGMENT
_x$ = 8							; size = 4
__LZCNT_ALT_UNIT PROC					; COMDAT

; 454  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 455  :             if (x == 0)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 07		 jne	 SHORT $LN2@LZCNT_ALT_

; 456  :                 return (sizeof(x) * 8);

  0000a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 480  :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN2@LZCNT_ALT_:

; 457  : #ifdef _M_IX86
; 458  :             DWORD pos;
; 459  : #ifdef _MSC_VER
; 460  :             _BitScanReverse(&pos, x);

  00011	0f bd c8	 bsr	 ecx, eax

; 461  : #elif defined(__GNUC__)
; 462  :             __asm__("bsrl %1, %0" : "=r"(pos) : "rm"(x));
; 463  : #else
; 464  : #error unknown compiler
; 465  : #endif
; 466  : #elif defined(_M_X64)
; 467  : #ifdef _MSC_VER
; 468  :             DWORD pos;
; 469  :             _BitScanReverse64(&pos, x);
; 470  : #elif defined(__GNUC__)
; 471  :             _UINT64_T pos;
; 472  :             __asm__("bsrq %1, %0" : "=r"(pos) : "rm"(x));
; 473  : #else
; 474  : #error unknown compiler
; 475  : #endif
; 476  : #else
; 477  : #error unknown platform
; 478  : #endif
; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00014	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00019	2b c1		 sub	 eax, ecx

; 480  :         }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
__LZCNT_ALT_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __ROTATE_L_UNIT
_TEXT	SEGMENT
_x$ = 8							; size = 4
_count$ = 12						; size = 4
__ROTATE_L_UNIT PROC					; COMDAT

; 329  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 330  : #ifdef _M_IX86
; 331  :             return (_rotl(x, count));

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00009	d3 c0		 rol	 eax, cl

; 332  : #elif defined(_M_X64)
; 333  :             return (_rotl64(x, count));
; 334  : #else
; 335  : #error unknown platform
; 336  : #endif
; 337  :         }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
__ROTATE_L_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __DIVIDE_CEILING_UNIT
_TEXT	SEGMENT
_u$ = 8							; size = 4
_v$ = 12						; size = 4
__DIVIDE_CEILING_UNIT PROC				; COMDAT

; 156  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 157  :             return ((u + v - 1) / v);

  00003	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00006	33 d2		 xor	 edx, edx
  00008	48		 dec	 eax
  00009	03 45 0c	 add	 eax, DWORD PTR _v$[ebp]
  0000c	f7 75 0c	 div	 DWORD PTR _v$[ebp]

; 158  :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
__DIVIDE_CEILING_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __FILL_MEMORY_UNIT
_TEXT	SEGMENT
_d$ = 8							; size = 4
_x$ = 12						; size = 4
_count$ = 16						; size = 4
__FILL_MEMORY_UNIT PROC					; COMDAT

; 129  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 130  : #ifdef _M_IX86
; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000d	f3 ab		 rep stosd
  0000f	5f		 pop	 edi

; 132  : #elif defined(_M_X64)
; 133  :             __stosq(d, x, count);
; 134  : #else
; 135  : #error unknown platform
; 136  : #endif
; 137  :         }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
__FILL_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __FILL_MEMORY_32
_TEXT	SEGMENT
_d$ = 8							; size = 4
_x$ = 12						; size = 4
_count$ = 16						; size = 4
__FILL_MEMORY_32 PROC					; COMDAT

; 117  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 118  :             __stosd((unsigned long*)d, x, count);

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000d	f3 ab		 rep stosd
  0000f	5f		 pop	 edi

; 119  :         }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
__FILL_MEMORY_32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __FILL_MEMORY_16
_TEXT	SEGMENT
_d$ = 8							; size = 4
_x$ = 12						; size = 2
_count$ = 16						; size = 4
__FILL_MEMORY_16 PROC					; COMDAT

; 112  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 113  :             __stosw((_UINT16_T*)d, x, count);

  00003	66 8b 45 0c	 mov	 ax, WORD PTR _x$[ebp]
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000e	66 f3 ab	 rep stosw
  00011	5f		 pop	 edi

; 114  :         }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
__FILL_MEMORY_16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __FILL_MEMORY_BYTE
_TEXT	SEGMENT
_d$ = 8							; size = 4
_x$ = 12						; size = 1
_count$ = 16						; size = 4
__FILL_MEMORY_BYTE PROC					; COMDAT

; 107  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 108  :             __stosb((unsigned char*)d, x, count);

  00003	8a 45 0c	 mov	 al, BYTE PTR _x$[ebp]
  00006	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000d	f3 aa		 rep stosb
  0000f	5f		 pop	 edi

; 109  :         }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
__FILL_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __ZERO_MEMORY_UNIT
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_UNIT PROC					; COMDAT

; 96   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 97   : #ifdef _M_IX86
; 98   :             __stosd((unsigned long*)d, 0, (unsigned long)count);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000c	f3 ab		 rep stosd
  0000e	5f		 pop	 edi

; 99   : #elif defined(_M_X64)
; 100  :             __stosq(d, 0, count);
; 101  : #else
; 102  : #error unknown platform
; 103  : #endif
; 104  :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
__ZERO_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __ZERO_MEMORY_32
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_32 PROC					; COMDAT

; 84   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 85   :             __stosd((unsigned long*)d, 0, count);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000c	f3 ab		 rep stosd
  0000e	5f		 pop	 edi

; 86   :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
__ZERO_MEMORY_32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __ZERO_MEMORY_16
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_16 PROC					; COMDAT

; 79   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 80   :             __stosw(d, 0, count);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000c	66 f3 ab	 rep stosw
  0000f	5f		 pop	 edi

; 81   :         }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
__ZERO_MEMORY_16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __ZERO_MEMORY_BYTE
_TEXT	SEGMENT
_d$ = 8							; size = 4
_count$ = 12						; size = 4
__ZERO_MEMORY_BYTE PROC					; COMDAT

; 74   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 75   :             __stosb((unsigned char*)d, 0, count);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _count$[ebp]
  00006	32 c0		 xor	 al, al
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000c	f3 aa		 rep stosb
  0000e	5f		 pop	 edi

; 76   :         }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
__ZERO_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
;	COMDAT __COPY_MEMORY_UNIT
_TEXT	SEGMENT
_d$ = 8							; size = 4
_s$ = 12						; size = 4
_count$ = 16						; size = 4
__COPY_MEMORY_UNIT PROC					; COMDAT

; 63   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 64   : #ifdef _M_IX86
; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  00006	56		 push	 esi
  00007	8b 75 0c	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  0000e	f3 a5		 rep movsd
  00010	5f		 pop	 edi
  00011	5e		 pop	 esi

; 66   : #elif defined(_M_X64)
; 67   :             __movsq(d, s, count);
; 68   : #else
; 69   : #error unknown platform
; 70   : #endif
; 71   :         }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
__COPY_MEMORY_UNIT ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 755  :     {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 756  :     }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00036	e8 00 00 00 00	 call	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
  0003b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0003f	74 0b		 je	 SHORT $LN7@scalar
  00041	6a 10		 push	 16			; 00000010H
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00049	83 c4 08	 add	 esp, 8
$LN7@scalar:
  0004c	8b c6		 mov	 eax, esi
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	5e		 pop	 esi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__ehhandler$??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_lock_obj$ = -41					; size = 1
$T2 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber, COMDAT
; _this$ = ecx

; 968  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  0002a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 969  :         Lock lock_obj;

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003c	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003f	83 c7 04	 add	 edi, 4
  00042	3b f7		 cmp	 esi, edi
  00044	74 61		 je	 SHORT $LN27@UnlinkStat
  00046	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@UnlinkStat:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8b ce		 mov	 ecx, esi
  00054	53		 push	 ebx
  00055	ff 50 04	 call	 DWORD PTR [eax+4]
  00058	85 c0		 test	 eax, eax
  0005a	75 09		 jne	 SHORT $LN2@UnlinkStat

; 89   :                 return (_next);

  0005c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0005f	3b f7		 cmp	 esi, edi
  00061	74 44		 je	 SHORT $LN27@UnlinkStat
  00063	eb eb		 jmp	 SHORT $LL10@UnlinkStat
$LN2@UnlinkStat:

; 78   :                 if (_next != this)

  00065	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00068	3b ce		 cmp	 ecx, esi
  0006a	74 15		 je	 SHORT $LN18@UnlinkStat

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  0006c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0006f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00072	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00075	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00078	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  0007b	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  0007e	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN18@UnlinkStat:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 974  :     }

  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  00088	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 974  :     }

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN27@UnlinkStat:

; 970  :         __ChainBufferTag* tag = FindTag(buffer);
; 971  :         if (tag == nullptr)
; 972  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkStatickNumber;1");

  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_1HC@IJKAGPMK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  000b1	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  000b4	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  000b9	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  000be	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN29@UnlinkStat:
  000c7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d d7	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_lock_obj$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DetatchStaticNumber, COMDAT
; _this$ = ecx

; 956  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00028	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 957  :         Lock lock_obj;

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003a	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003d	83 c7 04	 add	 edi, 4
  00040	3b f7		 cmp	 esi, edi
  00042	74 43		 je	 SHORT $LN4@DetatchSta
  00044	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
$LL12@DetatchSta:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00047	8b 06		 mov	 eax, DWORD PTR [esi]
  00049	8b ce		 mov	 ecx, esi
  0004b	53		 push	 ebx
  0004c	ff 50 04	 call	 DWORD PTR [eax+4]
  0004f	85 c0		 test	 eax, eax
  00051	75 09		 jne	 SHORT $LN9@DetatchSta

; 89   :                 return (_next);

  00053	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00056	3b f7		 cmp	 esi, edi
  00058	75 ed		 jne	 SHORT $LL12@DetatchSta

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  0005a	eb 2b		 jmp	 SHORT $LN4@DetatchSta
$LN9@DetatchSta:

; 78   :                 if (_next != this)

  0005c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005f	3b ce		 cmp	 ecx, esi
  00061	74 15		 je	 SHORT $LN20@DetatchSta

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00063	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00066	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00069	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0006c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00072	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00075	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN20@DetatchSta:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 962  :             tag->Destruct();

  00078	8b 06		 mov	 eax, DWORD PTR [esi]
  0007a	8b ce		 mov	 ecx, esi
  0007c	ff 50 10	 call	 DWORD PTR [eax+16]

; 963  :             delete tag;

  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	6a 01		 push	 1
  00085	ff 10		 call	 DWORD PTR [eax]
$LN4@DetatchSta:

; 964  :         }
; 965  :     }

  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  0008e	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 964  :         }
; 965  :     }

  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d f3	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DetatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DetatchStaticNumber
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z
_TEXT	SEGMENT
_lock_obj$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
$T2 = 12						; size = 4
_bit_count$ = 12					; size = 4
?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber, COMDAT
; _this$ = ecx

; 948  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00027	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 949  :         Lock lock_obj;

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 402  :         InitializeNumber(p, bit_count);

  00039	ff 75 0c	 push	 DWORD PTR _bit_count$[ebp]
  0003c	8b 75 08	 mov	 esi, DWORD PTR _p$[ebp]
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ?InitializeNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::InitializeNumber

; 403  :         p->IS_STATIC = true;

  00045	83 4e 1c 01	 or	 DWORD PTR [esi+28], 1

; 950  :         Palmtree::Math::Core::Internal::AttatchNumber(p, bit_count);
; 951  :         __ChainBufferTag* tag = new __StaticNumberChainBufferTag(p);

  00049	6a 10		 push	 16			; 00000010H
  0004b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00050	8b d0		 mov	 edx, eax
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	89 55 0c	 mov	 DWORD PTR $T2[ebp], edx
  00058	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005c	85 d2		 test	 edx, edx
  0005e	74 1f		 je	 SHORT $LN3@AttatchSta
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00060	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  00066	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 60   :                 _prev = this;

  00069	89 52 08	 mov	 DWORD PTR [edx+8], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 728  :     {

  0006c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00070	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 729  :         _buffer = buffer;

  00076	89 72 0c	 mov	 DWORD PTR [edx+12], esi

; 730  :     }

  00079	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 950  :         Palmtree::Math::Core::Internal::AttatchNumber(p, bit_count);
; 951  :         __ChainBufferTag* tag = new __StaticNumberChainBufferTag(p);

  0007d	eb 02		 jmp	 SHORT $LN4@AttatchSta
$LN3@AttatchSta:
  0007f	33 d2		 xor	 edx, edx
$LN4@AttatchSta:
  00081	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 156  :             _root_tag.Link(tag);

  00085	8d 47 04	 lea	 eax, DWORD PTR [edi+4]

; 70   :                 tag->_next = _next;

  00088	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 71   :                 tag->_prev = this;

  0008b	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0008e	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 72   :                 tag->_next->_prev = tag;

  00091	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 73   :                 tag->_prev->_next = tag;

  00094	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00097	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 953  :     }

  0009a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  000a1	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 953  :     }

  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$0:
  00000	8d 4d f3	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$1:
  00008	6a 10		 push	 16			; 00000010H
  0000a	8b 45 0c	 mov	 eax, DWORD PTR $T2[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__unwindfunclet$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z$2:
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR $T2[ebp]
  0001a	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_lock_obj$ = -41					; size = 1
$T2 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber, COMDAT
; _this$ = ecx

; 939  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  0002a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 940  :         Lock lock_obj;

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003c	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003f	83 c7 04	 add	 edi, 4
  00042	3b f7		 cmp	 esi, edi
  00044	74 61		 je	 SHORT $LN27@UnlinkNumb
  00046	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@UnlinkNumb:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8b ce		 mov	 ecx, esi
  00054	53		 push	 ebx
  00055	ff 50 04	 call	 DWORD PTR [eax+4]
  00058	85 c0		 test	 eax, eax
  0005a	75 09		 jne	 SHORT $LN2@UnlinkNumb

; 89   :                 return (_next);

  0005c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0005f	3b f7		 cmp	 esi, edi
  00061	74 44		 je	 SHORT $LN27@UnlinkNumb
  00063	eb eb		 jmp	 SHORT $LL10@UnlinkNumb
$LN2@UnlinkNumb:

; 78   :                 if (_next != this)

  00065	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00068	3b ce		 cmp	 ecx, esi
  0006a	74 15		 je	 SHORT $LN18@UnlinkNumb

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  0006c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0006f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00072	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00075	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00078	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  0007b	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  0007e	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN18@UnlinkNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 945  :     }

  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  00088	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 945  :     }

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN27@UnlinkNumb:

; 941  :         __ChainBufferTag* tag = FindTag(buffer);
; 942  :         if (tag == nullptr)
; 943  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkNumber;1");

  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@JOBLOAGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  000b1	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  000b4	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  000b9	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  000be	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN29@UnlinkNumb:
  000c7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d d7	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkNumber
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber, COMDAT
; _this$ = ecx

; 929  : #ifdef _DEBUG
; 930  :         Lock lock_obj;
; 931  :         __ChainBufferTag* tag = FindTag(buffer);
; 932  :         if (tag == nullptr)
; 933  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::CheckNumber;1");
; 934  :         tag->Check();
; 935  : #endif
; 936  :     }

  00000	c2 04 00	 ret	 4
?CheckNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_lock_obj$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber, COMDAT
; _this$ = ecx

; 916  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00028	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 917  :         Lock lock_obj;

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003a	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003d	83 c7 04	 add	 edi, 4
  00040	3b f7		 cmp	 esi, edi
  00042	74 43		 je	 SHORT $LN4@Deallocate
  00044	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
$LL12@Deallocate:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00047	8b 06		 mov	 eax, DWORD PTR [esi]
  00049	8b ce		 mov	 ecx, esi
  0004b	53		 push	 ebx
  0004c	ff 50 04	 call	 DWORD PTR [eax+4]
  0004f	85 c0		 test	 eax, eax
  00051	75 09		 jne	 SHORT $LN9@Deallocate

; 89   :                 return (_next);

  00053	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00056	3b f7		 cmp	 esi, edi
  00058	75 ed		 jne	 SHORT $LL12@Deallocate

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  0005a	eb 2b		 jmp	 SHORT $LN4@Deallocate
$LN9@Deallocate:

; 78   :                 if (_next != this)

  0005c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005f	3b ce		 cmp	 ecx, esi
  00061	74 15		 je	 SHORT $LN20@Deallocate

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00063	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00066	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00069	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0006c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00072	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00075	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN20@Deallocate:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 922  :             tag->Destruct();

  00078	8b 06		 mov	 eax, DWORD PTR [esi]
  0007a	8b ce		 mov	 ecx, esi
  0007c	ff 50 10	 call	 DWORD PTR [eax+16]

; 923  :             delete tag;

  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	6a 01		 push	 1
  00085	ff 10		 call	 DWORD PTR [eax]
$LN4@Deallocate:

; 924  :         }
; 925  :     }

  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  0008e	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 924  :         }
; 925  :     }

  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d f3	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateNumber
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_lock_obj$ = -17					; size = 1
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber, COMDAT
; _this$ = ecx

; 909  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00028	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 910  :         Lock lock_obj;

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 911  :         __ChainBufferTag* tag = new __NumberHandleHookingChainBufferTag(buffer);

  0003a	6a 10		 push	 16			; 00000010H
  0003c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00041	8b d0		 mov	 edx, eax
  00043	83 c4 04	 add	 esp, 4
  00046	89 55 f0	 mov	 DWORD PTR $T2[ebp], edx
  00049	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004d	85 d2		 test	 edx, edx
  0004f	74 22		 je	 SHORT $LN3@HookNumber
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00051	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  00057	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 60   :                 _prev = this;

  0005a	89 52 08	 mov	 DWORD PTR [edx+8], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 705  :     {

  0005d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 706  :         _buffer = buffer;

  00061	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00064	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  0006a	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 707  :     }

  0006d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 911  :         __ChainBufferTag* tag = new __NumberHandleHookingChainBufferTag(buffer);

  00071	eb 02		 jmp	 SHORT $LN4@HookNumber
$LN3@HookNumber:
  00073	33 d2		 xor	 edx, edx
$LN4@HookNumber:
  00075	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 156  :             _root_tag.Link(tag);

  00079	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 70   :                 tag->_next = _next;

  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 71   :                 tag->_prev = this;

  0007f	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00082	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 72   :                 tag->_next->_prev = tag;

  00085	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 73   :                 tag->_prev->_next = tag;

  00088	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0008b	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 913  :     }

  0008e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  00095	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 913  :     }

  000a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000aa	59		 pop	 ecx
  000ab	5e		 pop	 esi
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8d 4d ef	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$1:
  00008	6a 10		 push	 16			; 00000010H
  0000a	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__unwindfunclet$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR $T2[ebp]
  0001a	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?HookNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::HookNumber
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z
_TEXT	SEGMENT
_lock_obj$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_bit_count$ = 8						; size = 4
?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber, COMDAT
; _this$ = ecx

; 900  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00027	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 901  :         Lock lock_obj;

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 902  :         NUMBER_HEADER* buffer = Palmtree::Math::Core::Internal::AllocateNumber(bit_count);

  00039	ff 75 08	 push	 DWORD PTR _bit_count$[ebp]
  0003c	e8 00 00 00 00	 call	 ?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::AllocateNumber

; 903  :         __ChainBufferTag* tag = new __DynamicNumberChainBufferTag(buffer);

  00041	6a 10		 push	 16			; 00000010H
  00043	8b f0		 mov	 esi, eax
  00045	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0004a	8b d0		 mov	 edx, eax
  0004c	83 c4 08	 add	 esp, 8
  0004f	89 55 08	 mov	 DWORD PTR $T2[ebp], edx
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00056	85 d2		 test	 edx, edx
  00058	74 1f		 je	 SHORT $LN3@AllocateNu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  0005a	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  00060	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 60   :                 _prev = this;

  00063	89 52 08	 mov	 DWORD PTR [edx+8], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 681  :     {

  00066	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006a	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 682  :         _buffer = buffer;

  00070	89 72 0c	 mov	 DWORD PTR [edx+12], esi

; 683  :     }

  00073	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 903  :         __ChainBufferTag* tag = new __DynamicNumberChainBufferTag(buffer);

  00077	eb 02		 jmp	 SHORT $LN4@AllocateNu
$LN3@AllocateNu:
  00079	33 d2		 xor	 edx, edx
$LN4@AllocateNu:
  0007b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 156  :             _root_tag.Link(tag);

  0007f	8d 47 04	 lea	 eax, DWORD PTR [edi+4]

; 70   :                 tag->_next = _next;

  00082	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 71   :                 tag->_prev = this;

  00085	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00088	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 72   :                 tag->_next->_prev = tag;

  0008b	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 73   :                 tag->_prev->_next = tag;

  0008e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00091	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 905  :         return (buffer);

  00094	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  0009b	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 905  :         return (buffer);

  000a6	8b c6		 mov	 eax, esi

; 906  :     }

  000a8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b2	59		 pop	 ecx
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$0:
  00000	8d 4d f3	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$1:
  00008	6a 10		 push	 16			; 00000010H
  0000a	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__unwindfunclet$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z$2:
  00017	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  0001a	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAU__tag_NUMBER_HEADER@2345@I@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateNumber
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
_TEXT	SEGMENT
_lock_obj$ = -41					; size = 1
$T2 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkString, COMDAT
; _this$ = ecx

; 891  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  0002a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 892  :         Lock lock_obj;

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003c	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003f	83 c7 04	 add	 edi, 4
  00042	3b f7		 cmp	 esi, edi
  00044	74 61		 je	 SHORT $LN27@UnlinkStri
  00046	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@UnlinkStri:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8b ce		 mov	 ecx, esi
  00054	53		 push	 ebx
  00055	ff 50 04	 call	 DWORD PTR [eax+4]
  00058	85 c0		 test	 eax, eax
  0005a	75 09		 jne	 SHORT $LN2@UnlinkStri

; 89   :                 return (_next);

  0005c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0005f	3b f7		 cmp	 esi, edi
  00061	74 44		 je	 SHORT $LN27@UnlinkStri
  00063	eb eb		 jmp	 SHORT $LL10@UnlinkStri
$LN2@UnlinkStri:

; 78   :                 if (_next != this)

  00065	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00068	3b ce		 cmp	 ecx, esi
  0006a	74 15		 je	 SHORT $LN18@UnlinkStri

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  0006c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0006f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00072	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00075	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00078	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  0007b	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  0007e	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN18@UnlinkStri:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 897  :     }

  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  00088	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 897  :     }

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN27@UnlinkStri:

; 893  :         __ChainBufferTag* tag = FindTag(buffer);
; 894  :         if (tag == nullptr)
; 895  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkBlock;1");

  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@OHMCPHEJ@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  000b1	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  000b4	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  000b9	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  000be	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN29@UnlinkStri:
  000c7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0:
  00000	8d 4d d7	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkString
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckString, COMDAT
; _this$ = ecx

; 881  : #ifdef _DEBUG
; 882  :         Lock lock_obj;
; 883  :         __ChainBufferTag* tag = FindTag(buffer);
; 884  :         if (tag == nullptr)
; 885  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::CheckString;1");
; 886  :         tag->Check();
; 887  : #endif
; 888  :     }

  00000	c2 04 00	 ret	 4
?CheckString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
_TEXT	SEGMENT
_lock_obj$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString, COMDAT
; _this$ = ecx

; 868  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00028	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 869  :         Lock lock_obj;

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003a	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003d	83 c7 04	 add	 edi, 4
  00040	3b f7		 cmp	 esi, edi
  00042	74 43		 je	 SHORT $LN4@Deallocate
  00044	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
$LL12@Deallocate:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00047	8b 06		 mov	 eax, DWORD PTR [esi]
  00049	8b ce		 mov	 ecx, esi
  0004b	53		 push	 ebx
  0004c	ff 50 04	 call	 DWORD PTR [eax+4]
  0004f	85 c0		 test	 eax, eax
  00051	75 09		 jne	 SHORT $LN9@Deallocate

; 89   :                 return (_next);

  00053	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00056	3b f7		 cmp	 esi, edi
  00058	75 ed		 jne	 SHORT $LL12@Deallocate

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  0005a	eb 2b		 jmp	 SHORT $LN4@Deallocate
$LN9@Deallocate:

; 78   :                 if (_next != this)

  0005c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005f	3b ce		 cmp	 ecx, esi
  00061	74 15		 je	 SHORT $LN20@Deallocate

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00063	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00066	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00069	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0006c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00072	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00075	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN20@Deallocate:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 874  :             tag->Destruct();

  00078	8b 06		 mov	 eax, DWORD PTR [esi]
  0007a	8b ce		 mov	 ecx, esi
  0007c	ff 50 10	 call	 DWORD PTR [eax+16]

; 875  :             delete tag;

  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	6a 01		 push	 1
  00085	ff 10		 call	 DWORD PTR [eax]
$LN4@Deallocate:

; 876  :         }
; 877  :     }

  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  0008e	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 876  :         }
; 877  :     }

  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0:
  00000	8d 4d f3	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateString
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
_TEXT	SEGMENT
_lock_obj$ = -41					; size = 1
$T2 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearString, COMDAT
; _this$ = ecx

; 859  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  0002a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 860  :         Lock lock_obj;

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003c	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003f	83 c7 04	 add	 edi, 4
  00042	3b f7		 cmp	 esi, edi
  00044	74 4c		 je	 SHORT $LN24@ClearStrin
  00046	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@ClearStrin:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8b ce		 mov	 ecx, esi
  00054	53		 push	 ebx
  00055	ff 50 04	 call	 DWORD PTR [eax+4]
  00058	85 c0		 test	 eax, eax
  0005a	75 09		 jne	 SHORT $LN2@ClearStrin

; 89   :                 return (_next);

  0005c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0005f	3b f7		 cmp	 esi, edi
  00061	74 2f		 je	 SHORT $LN24@ClearStrin
  00063	eb eb		 jmp	 SHORT $LL10@ClearStrin
$LN2@ClearStrin:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 864  :         tag->Clear();

  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8b ce		 mov	 ecx, esi
  00069	ff 50 08	 call	 DWORD PTR [eax+8]

; 865  :     }

  0006c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  00073	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 865  :     }

  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
$LN24@ClearStrin:

; 861  :         __ChainBufferTag* tag = FindTag(buffer);
; 862  :         if (tag == nullptr)
; 863  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::ClearString;1");

  00092	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@BDIILODP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  0009c	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0009f	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  000a4	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  000a9	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN26@ClearStrin:
  000b2	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z$0:
  00000	8d 4d d7	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ClearString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPA_W@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearString
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z
_TEXT	SEGMENT
_lock_obj$ = -21					; size = 1
_check_code$ = -20					; size = 4
_word_count$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_count$ = 8						; size = 4
?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString, COMDAT
; _this$ = ecx

; 848  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00029	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 849  :         Lock lock_obj;

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 850  :         __UNIT_TYPE word_count;
; 851  :         __UNIT_TYPE check_code;
; 852  :         __UNIT_TYPE* buffer = Palmtree::Math::Core::Internal::AllocateBlock(count * __UNIT_TYPE_BIT_COUNT, &word_count, &check_code);

  0003b	8d 45 ec	 lea	 eax, DWORD PTR _check_code$[ebp]
  0003e	50		 push	 eax
  0003f	8d 45 f0	 lea	 eax, DWORD PTR _word_count$[ebp]
  00042	50		 push	 eax
  00043	8b 45 08	 mov	 eax, DWORD PTR _count$[ebp]
  00046	c1 e0 05	 shl	 eax, 5
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z ; Palmtree::Math::Core::Internal::AllocateBlock

; 853  :         __ChainBufferTag* tag = new ____UNIT_TYPE_Array_ChainBufferTag(buffer, word_count, check_code);

  0004f	6a 18		 push	 24			; 00000018H
  00051	8b f0		 mov	 esi, eax
  00053	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00058	8b d0		 mov	 edx, eax
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	89 55 08	 mov	 DWORD PTR $T2[ebp], edx
  00060	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00064	85 d2		 test	 edx, edx
  00066	74 2b		 je	 SHORT $LN3@AllocateSt
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00068	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0006e	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 60   :                 _prev = this;

  00071	89 52 08	 mov	 DWORD PTR [edx+8], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 619  :     {

  00074	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 620  :         _buffer = buffer;
; 621  :         _word_count = word_count;

  00078	8b 45 f0	 mov	 eax, DWORD PTR _word_count$[ebp]
  0007b	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 622  :         _check_code = check_code;

  0007e	8b 45 ec	 mov	 eax, DWORD PTR _check_code$[ebp]
  00081	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00087	89 72 0c	 mov	 DWORD PTR [edx+12], esi
  0008a	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 623  :     }

  0008d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 853  :         __ChainBufferTag* tag = new ____UNIT_TYPE_Array_ChainBufferTag(buffer, word_count, check_code);

  00091	eb 02		 jmp	 SHORT $LN4@AllocateSt
$LN3@AllocateSt:
  00093	33 d2		 xor	 edx, edx
$LN4@AllocateSt:
  00095	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 156  :             _root_tag.Link(tag);

  00099	8d 47 04	 lea	 eax, DWORD PTR [edi+4]

; 70   :                 tag->_next = _next;

  0009c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 71   :                 tag->_prev = this;

  0009f	89 42 08	 mov	 DWORD PTR [edx+8], eax
  000a2	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 72   :                 tag->_next->_prev = tag;

  000a5	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 73   :                 tag->_prev->_next = tag;

  000a8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000ab	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 855  :         return ((wchar_t*)buffer);

  000ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  000b5	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 855  :         return ((wchar_t*)buffer);

  000c0	8b c6		 mov	 eax, esi

; 856  :     }

  000c2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cc	59		 pop	 ecx
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$1:
  00008	6a 18		 push	 24			; 00000018H
  0000a	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__unwindfunclet$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z$2:
  00017	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  0001a	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateString@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPA_WI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateString
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
_TEXT	SEGMENT
_lock_obj$ = -41					; size = 1
$T2 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBlock, COMDAT
; _this$ = ecx

; 839  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  0002a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 840  :         Lock lock_obj;

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003c	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003f	83 c7 04	 add	 edi, 4
  00042	3b f7		 cmp	 esi, edi
  00044	74 61		 je	 SHORT $LN27@UnlinkBloc
  00046	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@UnlinkBloc:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8b ce		 mov	 ecx, esi
  00054	53		 push	 ebx
  00055	ff 50 04	 call	 DWORD PTR [eax+4]
  00058	85 c0		 test	 eax, eax
  0005a	75 09		 jne	 SHORT $LN2@UnlinkBloc

; 89   :                 return (_next);

  0005c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0005f	3b f7		 cmp	 esi, edi
  00061	74 44		 je	 SHORT $LN27@UnlinkBloc
  00063	eb eb		 jmp	 SHORT $LL10@UnlinkBloc
$LN2@UnlinkBloc:

; 78   :                 if (_next != this)

  00065	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00068	3b ce		 cmp	 ecx, esi
  0006a	74 15		 je	 SHORT $LN18@UnlinkBloc

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  0006c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0006f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00072	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00075	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00078	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  0007b	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  0007e	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN18@UnlinkBloc:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 845  :     }

  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  00088	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 845  :     }

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN27@UnlinkBloc:

; 841  :         __ChainBufferTag* tag = FindTag(buffer);
; 842  :         if (tag == nullptr)
; 843  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkBlock;1");

  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@OHMCPHEJ@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  000b1	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  000b4	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  000b9	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  000be	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN29@UnlinkBloc:
  000c7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0:
  00000	8d 4d d7	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBlock
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock, COMDAT
; _this$ = ecx

; 829  : #ifdef _DEBUG
; 830  :         Lock lock_obj;
; 831  :         __ChainBufferTag* tag = FindTag(buffer);
; 832  :         if (tag == nullptr)
; 833  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::CheckBlock;1");
; 834  :         tag->Check();
; 835  : #endif
; 836  :     }

  00000	c2 04 00	 ret	 4
?CheckBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::CheckBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
_TEXT	SEGMENT
_lock_obj$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock, COMDAT
; _this$ = ecx

; 816  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00028	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 817  :         Lock lock_obj;

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003a	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003d	83 c7 04	 add	 edi, 4
  00040	3b f7		 cmp	 esi, edi
  00042	74 43		 je	 SHORT $LN4@Deallocate
  00044	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
$LL12@Deallocate:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00047	8b 06		 mov	 eax, DWORD PTR [esi]
  00049	8b ce		 mov	 ecx, esi
  0004b	53		 push	 ebx
  0004c	ff 50 04	 call	 DWORD PTR [eax+4]
  0004f	85 c0		 test	 eax, eax
  00051	75 09		 jne	 SHORT $LN9@Deallocate

; 89   :                 return (_next);

  00053	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00056	3b f7		 cmp	 esi, edi
  00058	75 ed		 jne	 SHORT $LL12@Deallocate

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  0005a	eb 2b		 jmp	 SHORT $LN4@Deallocate
$LN9@Deallocate:

; 78   :                 if (_next != this)

  0005c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005f	3b ce		 cmp	 ecx, esi
  00061	74 15		 je	 SHORT $LN20@Deallocate

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00063	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00066	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00069	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0006c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00072	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00075	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN20@Deallocate:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 822  :             tag->Destruct();

  00078	8b 06		 mov	 eax, DWORD PTR [esi]
  0007a	8b ce		 mov	 ecx, esi
  0007c	ff 50 10	 call	 DWORD PTR [eax+16]

; 823  :             delete tag;

  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	6a 01		 push	 1
  00085	ff 10		 call	 DWORD PTR [eax]
$LN4@Deallocate:

; 824  :         }
; 825  :     }

  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  0008e	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 824  :         }
; 825  :     }

  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0:
  00000	8d 4d f3	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBlock
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
_TEXT	SEGMENT
_lock_obj$ = -41					; size = 1
$T2 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock, COMDAT
; _this$ = ecx

; 807  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  0002a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 808  :         Lock lock_obj;

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003c	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003f	83 c7 04	 add	 edi, 4
  00042	3b f7		 cmp	 esi, edi
  00044	74 4c		 je	 SHORT $LN24@ClearBlock
  00046	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@ClearBlock:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8b ce		 mov	 ecx, esi
  00054	53		 push	 ebx
  00055	ff 50 04	 call	 DWORD PTR [eax+4]
  00058	85 c0		 test	 eax, eax
  0005a	75 09		 jne	 SHORT $LN2@ClearBlock

; 89   :                 return (_next);

  0005c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0005f	3b f7		 cmp	 esi, edi
  00061	74 2f		 je	 SHORT $LN24@ClearBlock
  00063	eb eb		 jmp	 SHORT $LL10@ClearBlock
$LN2@ClearBlock:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 812  :         tag->Clear();

  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8b ce		 mov	 ecx, esi
  00069	ff 50 08	 call	 DWORD PTR [eax+8]

; 813  :     }

  0006c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  00073	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 813  :     }

  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
$LN24@ClearBlock:

; 809  :         __ChainBufferTag* tag = FindTag(buffer);
; 810  :         if (tag == nullptr)
; 811  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::ClearBlock;1");

  00092	68 00 00 00 00	 push	 OFFSET ??_C@_1GA@CKNLMDDM@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  0009c	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0009f	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  000a4	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  000a9	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN26@ClearBlock:
  000b2	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z$0:
  00000	8d 4d d7	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ClearBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ClearBlock
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z
_TEXT	SEGMENT
_lock_obj$ = -21					; size = 1
_check_code$ = -20					; size = 4
_word_count$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_bit_count$ = 8						; size = 4
?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock, COMDAT
; _this$ = ecx

; 796  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00029	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 797  :         Lock lock_obj;

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 798  :         __UNIT_TYPE word_count;
; 799  :         __UNIT_TYPE check_code;
; 800  :         __UNIT_TYPE* buffer = Palmtree::Math::Core::Internal::AllocateBlock(bit_count, &word_count, &check_code);

  0003b	8d 45 ec	 lea	 eax, DWORD PTR _check_code$[ebp]
  0003e	50		 push	 eax
  0003f	8d 45 f0	 lea	 eax, DWORD PTR _word_count$[ebp]
  00042	50		 push	 eax
  00043	ff 75 08	 push	 DWORD PTR _bit_count$[ebp]
  00046	e8 00 00 00 00	 call	 ?AllocateBlock@Internal@Core@Math@Palmtree@@YAPAIIPAI0@Z ; Palmtree::Math::Core::Internal::AllocateBlock

; 801  :         __ChainBufferTag* tag = new ____UNIT_TYPE_Array_ChainBufferTag(buffer, word_count, check_code);

  0004b	6a 18		 push	 24			; 00000018H
  0004d	8b f0		 mov	 esi, eax
  0004f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00054	8b d0		 mov	 edx, eax
  00056	83 c4 10	 add	 esp, 16			; 00000010H
  00059	89 55 08	 mov	 DWORD PTR $T2[ebp], edx
  0005c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00060	85 d2		 test	 edx, edx
  00062	74 2b		 je	 SHORT $LN3@AllocateBl
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00064	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0006a	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 60   :                 _prev = this;

  0006d	89 52 08	 mov	 DWORD PTR [edx+8], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 619  :     {

  00070	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 620  :         _buffer = buffer;
; 621  :         _word_count = word_count;

  00074	8b 45 f0	 mov	 eax, DWORD PTR _word_count$[ebp]
  00077	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 622  :         _check_code = check_code;

  0007a	8b 45 ec	 mov	 eax, DWORD PTR _check_code$[ebp]
  0007d	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00083	89 72 0c	 mov	 DWORD PTR [edx+12], esi
  00086	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 623  :     }

  00089	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 801  :         __ChainBufferTag* tag = new ____UNIT_TYPE_Array_ChainBufferTag(buffer, word_count, check_code);

  0008d	eb 02		 jmp	 SHORT $LN4@AllocateBl
$LN3@AllocateBl:
  0008f	33 d2		 xor	 edx, edx
$LN4@AllocateBl:
  00091	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 156  :             _root_tag.Link(tag);

  00095	8d 47 04	 lea	 eax, DWORD PTR [edi+4]

; 70   :                 tag->_next = _next;

  00098	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 71   :                 tag->_prev = this;

  0009b	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0009e	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 72   :                 tag->_next->_prev = tag;

  000a1	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 73   :                 tag->_prev->_next = tag;

  000a4	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000a7	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 803  :         return (buffer);

  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  000b1	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 803  :         return (buffer);

  000bc	8b c6		 mov	 eax, esi

; 804  :     }

  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c8	59		 pop	 ecx
  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$0:
  00000	8d 4d eb	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$1:
  00008	6a 18		 push	 24			; 00000018H
  0000a	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__unwindfunclet$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z$2:
  00017	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  0001a	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateBlock@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAII@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBlock
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
_TEXT	SEGMENT
_lock_obj$ = -41					; size = 1
$T2 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBytes, COMDAT
; _this$ = ecx

; 787  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  0002a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 788  :         Lock lock_obj;

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003c	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003f	83 c7 04	 add	 edi, 4
  00042	3b f7		 cmp	 esi, edi
  00044	74 61		 je	 SHORT $LN27@UnlinkByte
  00046	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@UnlinkByte:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8b ce		 mov	 ecx, esi
  00054	53		 push	 ebx
  00055	ff 50 04	 call	 DWORD PTR [eax+4]
  00058	85 c0		 test	 eax, eax
  0005a	75 09		 jne	 SHORT $LN2@UnlinkByte

; 89   :                 return (_next);

  0005c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0005f	3b f7		 cmp	 esi, edi
  00061	74 44		 je	 SHORT $LN27@UnlinkByte
  00063	eb eb		 jmp	 SHORT $LL10@UnlinkByte
$LN2@UnlinkByte:

; 78   :                 if (_next != this)

  00065	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00068	3b ce		 cmp	 ecx, esi
  0006a	74 15		 je	 SHORT $LN18@UnlinkByte

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  0006c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0006f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00072	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00075	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00078	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  0007b	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  0007e	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN18@UnlinkByte:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 793  :     }

  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  00088	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 793  :     }

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN27@UnlinkByte:

; 789  :         __ChainBufferTag* tag = FindTag(buffer);
; 790  :         if (tag == nullptr)
; 791  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkBytes;1");

  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@NKBJLGGD@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  000b1	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  000b4	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  000b9	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  000be	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN29@UnlinkByte:
  000c7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z$0:
  00000	8d 4d d7	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnlinkBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkBytes
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
_TEXT	SEGMENT
_lock_obj$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBytes, COMDAT
; _this$ = ecx

; 775  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00028	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 776  :         Lock lock_obj;

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0003a	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0003d	83 c7 04	 add	 edi, 4
  00040	3b f7		 cmp	 esi, edi
  00042	74 43		 je	 SHORT $LN4@Deallocate
  00044	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
$LL12@Deallocate:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00047	8b 06		 mov	 eax, DWORD PTR [esi]
  00049	8b ce		 mov	 ecx, esi
  0004b	53		 push	 ebx
  0004c	ff 50 04	 call	 DWORD PTR [eax+4]
  0004f	85 c0		 test	 eax, eax
  00051	75 09		 jne	 SHORT $LN9@Deallocate

; 89   :                 return (_next);

  00053	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00056	3b f7		 cmp	 esi, edi
  00058	75 ed		 jne	 SHORT $LL12@Deallocate

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  0005a	eb 2b		 jmp	 SHORT $LN4@Deallocate
$LN9@Deallocate:

; 78   :                 if (_next != this)

  0005c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005f	3b ce		 cmp	 ecx, esi
  00061	74 15		 je	 SHORT $LN20@Deallocate

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00063	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00066	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00069	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0006c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00072	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00075	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN20@Deallocate:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 781  :             tag->Destruct();

  00078	8b 06		 mov	 eax, DWORD PTR [esi]
  0007a	8b ce		 mov	 ecx, esi
  0007c	ff 50 10	 call	 DWORD PTR [eax+16]

; 782  :             delete tag;

  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	6a 01		 push	 1
  00085	ff 10		 call	 DWORD PTR [eax]
$LN4@Deallocate:

; 783  :         }
; 784  :     }

  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  0008e	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 783  :         }
; 784  :     }

  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z$0:
  00000	8d 4d f3	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__ehhandler$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::DeallocateBytes
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z
_TEXT	SEGMENT
_lock_obj$ = -37					; size = 1
$T2 = -36						; size = 24
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 4
_size$ = 8						; size = 4
?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBytes, COMDAT
; _this$ = ecx

; 759  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx

; 586  :         EnterCriticalSection(&mcs);

  00029	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 760  :         Lock lock_obj;

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 761  :         void* buffer = HeapAlloc(hLocalHeap, HEAP_ZERO_MEMORY, size);

  0003b	ff 75 08	 push	 DWORD PTR _size$[ebp]
  0003e	6a 08		 push	 8
  00040	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12
  0004c	8b f0		 mov	 esi, eax

; 762  :         if (buffer == nullptr)

  0004e	85 f6		 test	 esi, esi
  00050	74 78		 je	 SHORT $LN24@AllocateBy

; 764  : #ifdef _LOG_MEMORY
; 765  :         {
; 766  :             wprintf(L"0x%08lx: new header 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)buffer);
; 767  :         }
; 768  :         #endif
; 769  :         __ChainBufferTag* tag = new __GenericChainBufferTag(buffer);

  00052	6a 10		 push	 16			; 00000010H
  00054	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00059	8b d0		 mov	 edx, eax
  0005b	83 c4 04	 add	 esp, 4
  0005e	89 55 08	 mov	 DWORD PTR $T3[ebp], edx
  00061	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00065	85 d2		 test	 edx, edx
  00067	74 1f		 je	 SHORT $LN4@AllocateBy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00069	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0006f	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 60   :                 _prev = this;

  00072	89 52 08	 mov	 DWORD PTR [edx+8], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 595  :     {

  00075	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00079	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 596  :         _buffer = buffer;

  0007f	89 72 0c	 mov	 DWORD PTR [edx+12], esi

; 597  :     }

  00082	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 764  : #ifdef _LOG_MEMORY
; 765  :         {
; 766  :             wprintf(L"0x%08lx: new header 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)buffer);
; 767  :         }
; 768  :         #endif
; 769  :         __ChainBufferTag* tag = new __GenericChainBufferTag(buffer);

  00086	eb 02		 jmp	 SHORT $LN5@AllocateBy
$LN4@AllocateBy:
  00088	33 d2		 xor	 edx, edx
$LN5@AllocateBy:
  0008a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 156  :             _root_tag.Link(tag);

  0008e	8d 47 04	 lea	 eax, DWORD PTR [edi+4]

; 70   :                 tag->_next = _next;

  00091	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 71   :                 tag->_prev = this;

  00094	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00097	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 72   :                 tag->_next->_prev = tag;

  0009a	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 73   :                 tag->_prev->_next = tag;

  0009d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000a0	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 771  :         return (buffer);

  000a3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 591  :         LeaveCriticalSection(&mcs);

  000aa	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 771  :         return (buffer);

  000b5	8b c6		 mov	 eax, esi

; 772  :     }

  000b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c1	59		 pop	 ecx
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 04 00	 ret	 4
$LN24@AllocateBy:

; 763  :             throw NotEnoughMemoryException(L"ヒープメモリ領域が不足しています。");

  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@PIPAACFA@?$PP?R?$PP?$PM?$PP?W?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAL?$AA?$AN?$PP?$LD?$AAW?$AAf?$AAD?$AA?$HO@
  000cf	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  000d2	e8 00 00 00 00	 call	 ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
  000d7	68 00 00 00 00	 push	 OFFSET __TI2?AVNotEnoughMemoryException@Internal@Core@Math@Palmtree@@
  000dc	8d 45 dc	 lea	 eax, DWORD PTR $T2[ebp]
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN22@AllocateBy:
  000e5	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$0:
  00000	8d 4d db	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$1:
  00008	6a 10		 push	 16			; 00000010H
  0000a	8b 45 08	 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__unwindfunclet$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z$2:
  00017	8b 4d 08	 mov	 ecx, DWORD PTR $T3[ebp]
  0001a	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z:
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateBytes@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AllocateBytes
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT, COMDAT
; _this$ = ecx

; 755  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 756  :     }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00033	e8 00 00 00 00	 call	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
  00038	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00042	59		 pop	 ecx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__ehhandler$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT, COMDAT
; _this$ = ecx

; 751  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 136  :         ResourceHolder()

  00028	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0002b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
  00031	89 45 ec	 mov	 DWORD PTR _this$[ebp], eax

; 57   :             __ChainBufferTag()

  00034	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0003a	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 60   :                 _prev = this;

  0003d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 114  :             __RootTag()

  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 751  :     {

  0004d	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00054	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 752  :     }

  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8b c1		 mov	 eax, ecx
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ$2:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__unwindfunclet$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e9 00 00 00 00	 jmp	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
__unwindfunclet$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ$0:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__ehhandler$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ:
  0001b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00022	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00025	33 c8		 xor	 ecx, eax
  00027	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ
  00031	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::ResourceHolderUINT
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 733  :     {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 734  :     }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00036	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 64   :             {

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003f	3b ce		 cmp	 ecx, esi
  00041	74 15		 je	 SHORT $LN10@scalar

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00043	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00046	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00049	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00052	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00055	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN10@scalar:
  00058	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0005c	74 0b		 je	 SHORT $LN12@scalar
  0005e	6a 10		 push	 16			; 00000010H
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00066	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00069	8b c6		 mov	 eax, esi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Destruct, COMDAT
; _this$ = ecx

; 747  :         DetatchNumber(_buffer);

  00000	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]

; 418  :         if (p != nullptr && p->IS_STATIC)

  00003	85 c9		 test	 ecx, ecx
  00005	74 37		 je	 SHORT $LN9@Destruct
  00007	f6 41 1c 01	 test	 BYTE PTR [ecx+28], 1
  0000b	74 31		 je	 SHORT $LN9@Destruct

; 386  :         if (p->BLOCK != nullptr)

  0000d	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00010	85 d2		 test	 edx, edx
  00012	74 2a		 je	 SHORT $LN9@Destruct

; 212  :         __UNIT_TYPE* p = buffer - 1;

  00014	57		 push	 edi

; 391  :             p->BLOCK = nullptr;

  00015	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 212  :         __UNIT_TYPE* p = buffer - 1;

  0001c	83 c2 fc	 add	 edx, -4			; fffffffcH

; 213  : #ifdef _DEBUG
; 214  :         if (*p != buffer_words)
; 215  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;1");
; 216  :         if (p[buffer_words+1] != check_code)
; 217  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;2");
; 218  : #endif
; 219  :         // 使用済みのバッファを既定のデータで塗りつぶす。
; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  0001f	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00022	8b fa		 mov	 edi, edx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00024	52		 push	 edx
  00025	83 c1 02	 add	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00028	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  0002d	6a 00		 push	 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  0002f	f3 ab		 rep stosd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00031	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  0003d	5f		 pop	 edi
$LN9@Destruct:

; 748  :     }

  0003e	c3		 ret	 0
?Destruct@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Check, COMDAT
; _this$ = ecx

; 743  :     }

  00000	c3		 ret	 0
?Check@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::EqualsBufferAddress, COMDAT
; _this$ = ecx

; 737  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 738  :         return ((void*)_buffer == buffer);

  00003	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00006	33 c0		 xor	 eax, eax
  00008	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0000b	0f 94 c0	 sete	 al

; 739  :     }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?EqualsBufferAddress@__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::~__StaticNumberChainBufferTag, COMDAT
; _this$ = ecx

; 733  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 734  :     }

  0002e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 64   :             {

  00038	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003e	3b ca		 cmp	 ecx, edx
  00040	74 15		 je	 SHORT $LN7@StaticNumb

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00042	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00045	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00048	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00051	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  00054	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN7@StaticNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 734  :     }

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::~__StaticNumberChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::__StaticNumberChainBufferTag, COMDAT
; _this$ = ecx

; 728  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0002c	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  0002f	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 728  :     {

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 729  :         _buffer = buffer;

  00039	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0003c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00042	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 730  :     }

  00045	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004c	8b c1		 mov	 eax, ecx
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__StaticNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StaticNumberChainBufferTag::__StaticNumberChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 710  :     {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 711  :     }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00036	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 64   :             {

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003f	3b ce		 cmp	 ecx, esi
  00041	74 15		 je	 SHORT $LN10@scalar

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00043	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00046	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00049	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00052	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00055	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN10@scalar:
  00058	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0005c	74 0b		 je	 SHORT $LN12@scalar
  0005e	6a 10		 push	 16			; 00000010H
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00066	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00069	8b c6		 mov	 eax, esi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Destruct, COMDAT
; _this$ = ecx

; 724  :        Palmtree::Math::Core::Internal::DeallocateNumber(_buffer);

  00000	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00003	e8 00 00 00 00	 call	 ?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::DeallocateNumber
  00008	59		 pop	 ecx

; 725  :     }

  00009	c3		 ret	 0
?Destruct@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Check, COMDAT
; _this$ = ecx

; 720  :     }

  00000	c3		 ret	 0
?Check@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::EqualsBufferAddress, COMDAT
; _this$ = ecx

; 714  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 715  :         return ((void*)_buffer == buffer);

  00003	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00006	33 c0		 xor	 eax, eax
  00008	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0000b	0f 94 c0	 sete	 al

; 716  :     }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?EqualsBufferAddress@__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::~__NumberHandleHookingChainBufferTag, COMDAT
; _this$ = ecx

; 710  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 711  :     }

  0002e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 64   :             {

  00038	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003e	3b ca		 cmp	 ecx, edx
  00040	74 15		 je	 SHORT $LN7@NumberHand

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00042	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00045	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00048	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00051	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  00054	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN7@NumberHand:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 711  :     }

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::~__NumberHandleHookingChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::__NumberHandleHookingChainBufferTag, COMDAT
; _this$ = ecx

; 705  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0002c	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  0002f	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 705  :     {

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 706  :         _buffer = buffer;

  00039	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0003c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00042	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 707  :     }

  00045	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004c	8b c1		 mov	 eax, ecx
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__NumberHandleHookingChainBufferTag::__NumberHandleHookingChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 686  :     {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 687  :     }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00036	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 64   :             {

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003f	3b ce		 cmp	 ecx, esi
  00041	74 15		 je	 SHORT $LN10@scalar

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00043	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00046	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00049	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00052	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00055	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN10@scalar:
  00058	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0005c	74 0b		 je	 SHORT $LN12@scalar
  0005e	6a 10		 push	 16			; 00000010H
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00066	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00069	8b c6		 mov	 eax, esi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Destruct, COMDAT
; _this$ = ecx

; 701  :         Palmtree::Math::Core::Internal::DeallocateNumber(_buffer);

  00000	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00003	e8 00 00 00 00	 call	 ?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::DeallocateNumber
  00008	59		 pop	 ecx

; 702  :     }

  00009	c3		 ret	 0
?Destruct@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
$T1 = -28						; size = 28
?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Check, COMDAT
; _this$ = ecx

; 695  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 696  :         Palmtree::Math::Core::Internal::CheckNumber(_buffer);

  00003	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 511  :         if (p->SIGNATURE1 != PMC_SIGNATURE || p->SIGNATURE2 != PMC_UINT_SIGNATURE)

  00009	81 78 08 70 4d
	63 49		 cmp	 DWORD PTR [eax+8], 1231244656 ; 49634d70H
  00010	75 24		 jne	 SHORT $LN5@Check
  00012	81 78 0c 55 69
	6e 54		 cmp	 DWORD PTR [eax+12], 1416522069 ; 546e6955H
  00019	75 1b		 jne	 SHORT $LN5@Check

; 513  :         if (!p->IS_ZERO)

  0001b	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  0001f	75 11		 jne	 SHORT $LN6@Check

; 514  :         {
; 515  :             CheckBlock(p->BLOCK, p->BLOCK_COUNT, p->BLOCK_CHECK_CODE);

  00021	ff 70 28	 push	 DWORD PTR [eax+40]
  00024	ff 70 20	 push	 DWORD PTR [eax+32]
  00027	ff 70 24	 push	 DWORD PTR [eax+36]
  0002a	e8 00 00 00 00	 call	 ?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::CheckBlock
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@Check:

; 697  :     }

  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN5@Check:

; 512  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckNumber;1");

  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@CHNNDIJP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  00040	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00043	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  00048	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0004d	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN9@Check:
  00056	cc		 int	 3
?Check@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::EqualsBufferAddress, COMDAT
; _this$ = ecx

; 690  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 691  :         return ((void*)_buffer == buffer);

  00003	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00006	33 c0		 xor	 eax, eax
  00008	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0000b	0f 94 c0	 sete	 al

; 692  :     }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?EqualsBufferAddress@__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::~__DynamicNumberChainBufferTag, COMDAT
; _this$ = ecx

; 686  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 687  :     }

  0002e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 64   :             {

  00038	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003e	3b ca		 cmp	 ecx, edx
  00040	74 15		 je	 SHORT $LN7@DynamicNum

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00042	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00045	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00048	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00051	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  00054	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN7@DynamicNum:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 687  :     }

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::~__DynamicNumberChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::__DynamicNumberChainBufferTag, COMDAT
; _this$ = ecx

; 681  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0002c	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  0002f	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 681  :     {

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 682  :         _buffer = buffer;

  00039	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0003c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00042	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 683  :     }

  00045	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004c	8b c1		 mov	 eax, ecx
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__DynamicNumberChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAU__tag_NUMBER_HEADER@2345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__DynamicNumberChainBufferTag::__DynamicNumberChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 657  :     {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 658  :     }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00036	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 64   :             {

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003f	3b ce		 cmp	 ecx, esi
  00041	74 15		 je	 SHORT $LN10@scalar

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00043	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00046	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00049	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00052	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00055	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN10@scalar:
  00058	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0005c	74 0b		 je	 SHORT $LN12@scalar
  0005e	6a 18		 push	 24			; 00000018H
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00066	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00069	8b c6		 mov	 eax, esi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Destruct, COMDAT
; _this$ = ecx

; 677  :         Palmtree::Math::Core::Internal::DeallocateBlock(_buffer, _word_count, _check_code);

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]

; 210  :         if (buffer == nullptr)

  00003	85 d2		 test	 edx, edx
  00005	74 23		 je	 SHORT $LN3@Destruct

; 211  :             return;
; 212  :         __UNIT_TYPE* p = buffer - 1;
; 213  : #ifdef _DEBUG
; 214  :         if (*p != buffer_words)
; 215  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;1");
; 216  :         if (p[buffer_words+1] != check_code)
; 217  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;2");
; 218  : #endif
; 219  :         // 使用済みのバッファを既定のデータで塗りつぶす。
; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  00007	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0000a	83 c2 fc	 add	 edx, -4			; fffffffcH
  0000d	57		 push	 edi

; 222  :         HeapFree(hLocalHeap, 0, p);

  0000e	52		 push	 edx
  0000f	83 c1 02	 add	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00012	8b fa		 mov	 edi, edx
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00019	6a 00		 push	 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  0001b	f3 ab		 rep stosd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  0001d	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  00029	5f		 pop	 edi
$LN3@Destruct:

; 678  :     }

  0002a	c3		 ret	 0
?Destruct@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
$T1 = -28						; size = 28
?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Check, COMDAT
; _this$ = ecx

; 671  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 672  :         Palmtree::Math::Core::Internal::CheckBlock(_buffer, _word_count, _check_code);

  00003	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	56		 push	 esi
  0000a	8b 71 14	 mov	 esi, DWORD PTR [ecx+20]

; 234  :         if (buffer == nullptr)

  0000d	85 c0		 test	 eax, eax
  0000f	74 14		 je	 SHORT $LN6@Check

; 235  :             return;
; 236  :         --buffer;
; 237  :         __UNIT_TYPE words = buffer[0];

  00011	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 238  :         if (words != count)

  00014	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  00017	75 11		 jne	 SHORT $LN12@Check

; 240  :         __UNIT_TYPE code_actual = buffer[words + 1];
; 241  :         __UNIT_TYPE code_desired = code;
; 242  :         if (code_desired != code_actual)

  00019	3b 34 90	 cmp	 esi, DWORD PTR [eax+edx*4]
  0001c	74 07		 je	 SHORT $LN6@Check

; 243  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckBlockLight;2");

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@KLIFJDDK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00023	eb 0a		 jmp	 SHORT $LN10@Check
$LN6@Check:
  00025	5e		 pop	 esi

; 673  :     }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN12@Check:

; 239  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckBlockLight;1");

  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@LJDADMNE@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
$LN10@Check:

; 673  :     }

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  00034	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00037	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0003c	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00041	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN9@Check:
  0004a	cc		 int	 3
?Check@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Clear, COMDAT
; _this$ = ecx

; 666  :     {

  00000	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 98   :             __stosd((unsigned long*)d, 0, (unsigned long)count);

  00001	8b 79 0c	 mov	 edi, DWORD PTR [ecx+12]
  00004	33 c0		 xor	 eax, eax
  00006	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00009	f3 ab		 rep stosd
  0000b	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 668  :     }

  0000c	c3		 ret	 0
?Clear@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::EqualsBufferAddress, COMDAT
; _this$ = ecx

; 661  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 662  :         return ((void*)_buffer == buffer);

  00003	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00006	33 c0		 xor	 eax, eax
  00008	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0000b	0f 94 c0	 sete	 al

; 663  :     }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?EqualsBufferAddress@__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::~__StringChainBufferTag, COMDAT
; _this$ = ecx

; 657  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 658  :     }

  0002e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 64   :             {

  00038	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003e	3b ca		 cmp	 ecx, edx
  00040	74 15		 je	 SHORT $LN7@StringChai

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00042	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00045	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00048	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00051	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  00054	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN7@StringChai:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 658  :     }

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::~__StringChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
_word_count$ = 12					; size = 4
_check_code$ = 16					; size = 4
??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::__StringChainBufferTag, COMDAT
; _this$ = ecx

; 650  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0002c	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  0002f	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 650  :     {

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 651  :         _buffer = buffer;

  00039	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0003c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 652  :         _word_count = word_count;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _word_count$[ebp]
  00042	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 653  :         _check_code = check_code;

  00045	8b 45 10	 mov	 eax, DWORD PTR _check_code$[ebp]
  00048	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  0004e	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 654  :     }

  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b c1		 mov	 eax, ecx
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__StringChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__StringChainBufferTag::__StringChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 626  :     {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 627  :     }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00036	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 64   :             {

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003f	3b ce		 cmp	 ecx, esi
  00041	74 15		 je	 SHORT $LN10@scalar

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00043	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00046	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00049	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00052	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00055	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN10@scalar:
  00058	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0005c	74 0b		 je	 SHORT $LN12@scalar
  0005e	6a 18		 push	 24			; 00000018H
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00066	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00069	8b c6		 mov	 eax, esi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Destruct, COMDAT
; _this$ = ecx

; 646  :         Palmtree::Math::Core::Internal::DeallocateBlock(_buffer, _word_count, _check_code);

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]

; 210  :         if (buffer == nullptr)

  00003	85 d2		 test	 edx, edx
  00005	74 23		 je	 SHORT $LN3@Destruct

; 211  :             return;
; 212  :         __UNIT_TYPE* p = buffer - 1;
; 213  : #ifdef _DEBUG
; 214  :         if (*p != buffer_words)
; 215  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;1");
; 216  :         if (p[buffer_words+1] != check_code)
; 217  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;DeallocateBlock;2");
; 218  : #endif
; 219  :         // 使用済みのバッファを既定のデータで塗りつぶす。
; 220  :         _FILL_MEMORY_UNIT(p, DEFAULT_MEMORY_DATA, buffer_words + 2);

  00007	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0000a	83 c2 fc	 add	 edx, -4			; fffffffcH
  0000d	57		 push	 edi

; 222  :         HeapFree(hLocalHeap, 0, p);

  0000e	52		 push	 edx
  0000f	83 c1 02	 add	 ecx, 2
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  00012	8b fa		 mov	 edi, edx
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  00019	6a 00		 push	 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 131  :             __stosd((unsigned long*)d, x, (unsigned long)count);

  0001b	f3 ab		 rep stosd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 222  :         HeapFree(hLocalHeap, 0, p);

  0001d	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  00029	5f		 pop	 edi
$LN3@Destruct:

; 647  :     }

  0002a	c3		 ret	 0
?Destruct@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
$T1 = -28						; size = 28
?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Check, COMDAT
; _this$ = ecx

; 640  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 641  :         Palmtree::Math::Core::Internal::CheckBlock(_buffer, _word_count, _check_code);

  00003	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	56		 push	 esi
  0000a	8b 71 14	 mov	 esi, DWORD PTR [ecx+20]

; 234  :         if (buffer == nullptr)

  0000d	85 c0		 test	 eax, eax
  0000f	74 14		 je	 SHORT $LN6@Check

; 235  :             return;
; 236  :         --buffer;
; 237  :         __UNIT_TYPE words = buffer[0];

  00011	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 238  :         if (words != count)

  00014	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  00017	75 11		 jne	 SHORT $LN12@Check

; 240  :         __UNIT_TYPE code_actual = buffer[words + 1];
; 241  :         __UNIT_TYPE code_desired = code;
; 242  :         if (code_desired != code_actual)

  00019	3b 34 90	 cmp	 esi, DWORD PTR [eax+edx*4]
  0001c	74 07		 je	 SHORT $LN6@Check

; 243  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckBlockLight;2");

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@KLIFJDDK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00023	eb 0a		 jmp	 SHORT $LN10@Check
$LN6@Check:
  00025	5e		 pop	 esi

; 642  :     }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN12@Check:

; 239  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckBlockLight;1");

  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@LJDADMNE@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
$LN10@Check:

; 642  :     }

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  00034	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00037	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  0003c	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  00041	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN9@Check:
  0004a	cc		 int	 3
?Check@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Clear, COMDAT
; _this$ = ecx

; 635  :     {

  00000	57		 push	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 98   :             __stosd((unsigned long*)d, 0, (unsigned long)count);

  00001	8b 79 0c	 mov	 edi, DWORD PTR [ecx+12]
  00004	33 c0		 xor	 eax, eax
  00006	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00009	f3 ab		 rep stosd
  0000b	5f		 pop	 edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 637  :     }

  0000c	c3		 ret	 0
?Clear@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::EqualsBufferAddress, COMDAT
; _this$ = ecx

; 630  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 631  :         return ((void*)_buffer == buffer);

  00003	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00006	33 c0		 xor	 eax, eax
  00008	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0000b	0f 94 c0	 sete	 al

; 632  :     }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?EqualsBufferAddress@____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::~____UNIT_TYPE_Array_ChainBufferTag, COMDAT
; _this$ = ecx

; 626  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 627  :     }

  0002e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 64   :             {

  00038	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003e	3b ca		 cmp	 ecx, edx
  00040	74 15		 je	 SHORT $LN7@UNIT_TYPE_

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00042	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00045	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00048	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00051	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  00054	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN7@UNIT_TYPE_:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 627  :     }

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::~____UNIT_TYPE_Array_ChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
_word_count$ = 12					; size = 4
_check_code$ = 16					; size = 4
??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::____UNIT_TYPE_Array_ChainBufferTag, COMDAT
; _this$ = ecx

; 619  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0002c	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  0002f	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 619  :     {

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 620  :         _buffer = buffer;

  00039	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0003c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 621  :         _word_count = word_count;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _word_count$[ebp]
  00042	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 622  :         _check_code = check_code;

  00045	8b 45 10	 mov	 eax, DWORD PTR _check_code$[ebp]
  00048	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  0004e	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 623  :     }

  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b c1		 mov	 eax, ecx
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0____UNIT_TYPE_Array_ChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAIII@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::____UNIT_TYPE_Array_ChainBufferTag::____UNIT_TYPE_Array_ChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 600  :     {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 601  :     }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00036	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 64   :             {

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003f	3b ce		 cmp	 ecx, esi
  00041	74 15		 je	 SHORT $LN10@scalar

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00043	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00046	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00049	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00052	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00055	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN10@scalar:
  00058	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0005c	74 0b		 je	 SHORT $LN12@scalar
  0005e	6a 10		 push	 16			; 00000010H
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00066	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00069	8b c6		 mov	 eax, esi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::Destruct, COMDAT
; _this$ = ecx

; 610  :         HeapFree(hLocalHeap, 0, _buffer);

  00000	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00003	6a 00		 push	 0
  00005	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12

; 611  : #ifdef _LOG_MEMORY
; 612  :         {
; 613  :             wprintf(L"0x%08lx: delete header 0x%016llx\n", GetCurrentThreadId(), (unsigned long long)_buffer);
; 614  :         }
; 615  : #endif
; 616  :     }

  00011	c3		 ret	 0
?Destruct@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::Destruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::EqualsBufferAddress, COMDAT
; _this$ = ecx

; 604  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 605  :         return ((void*)_buffer == buffer);

  00003	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00006	33 c0		 xor	 eax, eax
  00008	3b 4d 08	 cmp	 ecx, DWORD PTR _buffer$[ebp]
  0000b	0f 94 c0	 sete	 al

; 606  :     }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?EqualsBufferAddress@__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::~__GenericChainBufferTag, COMDAT
; _this$ = ecx

; 600  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 601  :     }

  0002e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 78   :                 if (_next != this)

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 64   :             {

  00038	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003e	3b ca		 cmp	 ecx, edx
  00040	74 15		 je	 SHORT $LN7@GenericCha

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00042	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00045	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00048	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00051	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  00054	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN7@GenericCha:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 601  :     }

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::~__GenericChainBufferTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::__GenericChainBufferTag, COMDAT
; _this$ = ecx

; 595  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0002c	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  0002f	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 595  :     {

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 596  :         _buffer = buffer;

  00039	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0003c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@
  00042	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 597  :     }

  00045	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004c	8b c1		 mov	 eax, ecx
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__GenericChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAE@PAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolderUINT::__GenericChainBufferTag::__GenericChainBufferTag
; Function compile flags: /Ogtp
;	COMDAT ??_GResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 10		 push	 16			; 00000010H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag, COMDAT
; _this$ = ecx

; 160  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 89   :                 return (_next);

  00005	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 160  :         {

  00008	57		 push	 edi

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00009	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
  0000c	3b f7		 cmp	 esi, edi
  0000e	74 16		 je	 SHORT $LN3@FindTag
  00010	8b 5d 08	 mov	 ebx, DWORD PTR _buffer$[ebp]
$LL4@FindTag:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00013	8b 06		 mov	 eax, DWORD PTR [esi]
  00015	8b ce		 mov	 ecx, esi
  00017	53		 push	 ebx
  00018	ff 50 04	 call	 DWORD PTR [eax+4]
  0001b	85 c0		 test	 eax, eax
  0001d	75 10		 jne	 SHORT $LN12@FindTag

; 89   :                 return (_next);

  0001f	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00022	3b f7		 cmp	 esi, edi
  00024	75 ed		 jne	 SHORT $LL4@FindTag
$LN3@FindTag:
  00026	5f		 pop	 edi

; 165  :             }
; 166  :             return (nullptr);
; 167  :         }

  00027	5e		 pop	 esi
  00028	33 c0		 xor	 eax, eax
  0002a	5b		 pop	 ebx
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
$LN12@FindTag:
  0002f	5f		 pop	 edi

; 164  :                     return (tag);

  00030	8b c6		 mov	 eax, esi

; 165  :             }
; 166  :             return (nullptr);
; 167  :         }

  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?FindTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEPAV__ChainBufferTag@12345@PAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::FindTag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag, COMDAT
; _this$ = ecx

; 155  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 70   :                 tag->_next = _next;

  00003	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]

; 156  :             _root_tag.Link(tag);

  00006	83 c1 04	 add	 ecx, 4

; 70   :                 tag->_next = _next;

  00009	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000c	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 71   :                 tag->_prev = this;

  0000f	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 72   :                 tag->_next->_prev = tag;

  00012	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 73   :                 tag->_prev->_next = tag;

  00015	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00018	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 157  :         }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?LinkTag@ResourceHolder@Internal@Core@Math@Palmtree@@IAEXPAV__ChainBufferTag@12345@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::LinkTag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_lock_obj$ = -17					; size = 1
_this$ = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder, COMDAT
; _this$ = ecx

; 142  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
  0002d	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 586  :         EnterCriticalSection(&mcs);

  0003a	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 143  :             Lock lock_obj;

  00045	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 144  :             while (_root_tag.Next() != &_root_tag)

  00049	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]

; 89   :                 return (_next);

  0004c	8b 73 08	 mov	 esi, DWORD PTR [ebx+8]

; 144  :             while (_root_tag.Next() != &_root_tag)

  0004f	3b f7		 cmp	 esi, edi
  00051	74 32		 je	 SHORT $LN3@ResourceHo
$LL2@ResourceHo:

; 78   :                 if (_next != this)

  00053	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00056	3b ce		 cmp	 ecx, esi
  00058	74 15		 je	 SHORT $LN32@ResourceHo

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  0005a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00060	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00063	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00066	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00069	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  0006c	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN32@ResourceHo:

; 145  :             {
; 146  :                 __ChainBufferTag* tag = _root_tag.Next();
; 147  :                 tag->Unlink();
; 148  :                 tag->Destruct();

  0006f	8b 06		 mov	 eax, DWORD PTR [esi]
  00071	8b ce		 mov	 ecx, esi
  00073	ff 50 10	 call	 DWORD PTR [eax+16]

; 149  :                 delete tag;

  00076	8b 06		 mov	 eax, DWORD PTR [esi]
  00078	8b ce		 mov	 ecx, esi
  0007a	6a 01		 push	 1
  0007c	ff 10		 call	 DWORD PTR [eax]

; 89   :                 return (_next);

  0007e	8b 73 08	 mov	 esi, DWORD PTR [ebx+8]

; 144  :             while (_root_tag.Next() != &_root_tag)

  00081	3b f7		 cmp	 esi, edi
  00083	75 ce		 jne	 SHORT $LL2@ResourceHo
$LN3@ResourceHo:

; 151  :         }

  00085	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 591  :         LeaveCriticalSection(&mcs);

  00089	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 151  :         }

  00094	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009b	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 119  :             {

  0009e	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 120  :             }

  000a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 78   :                 if (_next != this)

  000ab	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 64   :             {

  000ae	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  000b4	3b cf		 cmp	 ecx, edi
  000b6	74 15		 je	 SHORT $LN26@ResourceHo

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  000b8	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000bb	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  000be	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000c1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c4	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  000c7	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 83   :                     _prev = this;

  000ca	89 7f 08	 mov	 DWORD PTR [edi+8], edi
$LN26@ResourceHo:

; 151  :         }

  000cd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d7	59		 pop	 ecx
  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  0000b	8d 4d ef	 lea	 ecx, DWORD PTR _lock_obj$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ:
  0001b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00022	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00025	33 c8		 xor	 ecx, eax
  00027	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  00031	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::ResourceHolder, COMDAT
; _this$ = ecx

; 136  :         ResourceHolder()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00028	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0002b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
  00031	89 45 ec	 mov	 DWORD PTR _this$[ebp], eax

; 57   :             __ChainBufferTag()

  00034	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0003a	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 60   :                 _prev = this;

  0003d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 114  :             __RootTag()

  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 137  :         {
; 138  :         }

  0004d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00054	8b c1		 mov	 eax, ecx
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ$1:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__unwindfunclet$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e9 00 00 00 00	 jmp	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
__ehhandler$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ResourceHolder@Internal@Core@Math@Palmtree@@IAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::ResourceHolder
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 119  :             {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 120  :             }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 78   :                 if (_next != this)

  00036	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 64   :             {

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003f	3b ce		 cmp	 ecx, esi
  00041	74 15		 je	 SHORT $LN10@scalar

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00043	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00046	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00049	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00052	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00055	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN10@scalar:
  00058	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0005c	74 0b		 je	 SHORT $LN12@scalar
  0005e	6a 0c		 push	 12			; 0000000cH
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00066	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00069	8b c6		 mov	 eax, esi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::Destruct, COMDAT
; _this$ = ecx

; 129  :             }

  00000	c3		 ret	 0
?Destruct@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::Destruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_buffer$ = 8						; size = 4
?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::EqualsBufferAddress, COMDAT
; _this$ = ecx

; 123  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 124  :                 throw InternalErrorException(L"予期していないコードに到達しました。", L"pmc_resourceholder.h;ResourceHolder::__RootTag::EqualsBufferAddress;1");

  00006	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LGDAALAB@?$AAp?$AAm?$AAc?$AA_?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAh?$AAo?$AAl@
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@CNOPPENL@?$PP?$II?$AA?$BP?$AAW?$AAf?$AAD?$AAj?$AAD?$PP?$LD?$PP?$PM?$PP?I?$AAk?$AA0?$AAT?$AAW?$AA?$HO@
  00013	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  00018	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  0001d	8d 45 e8	 lea	 eax, DWORD PTR $T1[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@EqualsBuff:
  00026	cc		 int	 3
?EqualsBufferAddress@__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEHPAX@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::EqualsBufferAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag, COMDAT
; _this$ = ecx

; 119  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 120  :             }

  0002e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 78   :                 if (_next != this)

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 64   :             {

  00038	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0003e	3b ca		 cmp	 ecx, edx
  00040	74 15		 je	 SHORT $LN7@RootTag

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00042	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00045	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00048	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00051	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  00054	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN7@RootTag:

; 120  :             }

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::__RootTag, COMDAT
; _this$ = ecx

; 114  :             __RootTag()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 57   :             __ChainBufferTag()

  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0002c	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  0002f	89 49 08	 mov	 DWORD PTR [ecx+8], ecx

; 114  :             __RootTag()

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00039	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 115  :             {
; 116  :             }

  0003f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00046	8b c1		 mov	 eax, ecx
  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00052	59		 pop	 ecx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__ehhandler$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::__RootTag
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??_G__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 64   :             {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 78   :                 if (_next != this)

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 64   :             {

  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0000f	3b ce		 cmp	 ecx, esi
  00011	74 15		 je	 SHORT $LN7@scalar

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00013	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00016	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00019	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0001c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00022	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00025	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN7@scalar:
  00028	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0002c	74 0b		 je	 SHORT $LN9@scalar
  0002e	6a 0c		 push	 12			; 0000000cH
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_G__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Check, COMDAT
; _this$ = ecx

; 105  :             }

  00000	c3		 ret	 0
?Check@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ
_TEXT	SEGMENT
?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Clear, COMDAT
; _this$ = ecx

; 101  :             }

  00000	c3		 ret	 0
?Clear@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ
_TEXT	SEGMENT
?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next, COMDAT
; _this$ = ecx

; 89   :                 return (_next);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 90   :             }

  00003	c3		 ret	 0
?Next@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEPAV123456@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Next
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ
_TEXT	SEGMENT
?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink, COMDAT
; _this$ = ecx

; 77   :             {

  00000	8b d1		 mov	 edx, ecx

; 78   :                 if (_next != this)

  00002	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00005	3b ca		 cmp	 ecx, edx
  00007	74 15		 je	 SHORT $LN2@Unlink

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  00009	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0000c	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  0000f	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00012	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00015	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  00018	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  0001b	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN2@Unlink:

; 84   :                 }
; 85   :             }

  0001e	c3		 ret	 0
?Unlink@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXXZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Unlink
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ?Link@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXPAV123456@@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
?Link@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXPAV123456@@Z PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Link, COMDAT
; _this$ = ecx

; 69   :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 70   :                 tag->_next = _next;

  00003	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00009	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 71   :                 tag->_prev = this;

  0000c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 72   :                 tag->_next->_prev = tag;

  0000f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 73   :                 tag->_prev->_next = tag;

  00012	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 74   :             }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?Link@__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAEXPAV123456@@Z ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::Link
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag, COMDAT
; _this$ = ecx

; 64   :             {

  00000	8b d1		 mov	 edx, ecx

; 78   :                 if (_next != this)

  00002	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 64   :             {

  00005	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 78   :                 if (_next != this)

  0000b	3b ca		 cmp	 ecx, edx
  0000d	74 15		 je	 SHORT $LN4@ChainBuffe

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  0000f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00012	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00015	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00018	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  0001e	89 52 04	 mov	 DWORD PTR [edx+4], edx

; 83   :                     _prev = this;

  00021	89 52 08	 mov	 DWORD PTR [edx+8], edx
$LN4@ChainBuffe:

; 65   :                 Unlink();
; 66   :             }

  00024	c3		 ret	 0
??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
;	COMDAT ??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ
_TEXT	SEGMENT
??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ PROC ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag, COMDAT
; _this$ = ecx

; 57   :             __ChainBufferTag()

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;
; 60   :                 _prev = this;
; 61   :             }

  00006	8b c1		 mov	 eax, ecx
  00008	89 49 04	 mov	 DWORD PTR [ecx+4], ecx
  0000b	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
  0000e	c3		 ret	 0
??0__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@QAE@XZ ENDP ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::__ChainBufferTag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ PROC	; Palmtree::Math::Core::Internal::Lock::~Lock, COMDAT
; _this$ = ecx

; 590  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 591  :         LeaveCriticalSection(&mcs);

  00022	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 592  :     }

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00030	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00037	59		 pop	 ecx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ENDP	; Palmtree::Math::Core::Internal::Lock::~Lock
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ
_TEXT	SEGMENT
??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ PROC	; Palmtree::Math::Core::Internal::Lock::Lock, COMDAT
; _this$ = ecx

; 585  :     {

  00000	56		 push	 esi

; 586  :         EnterCriticalSection(&mcs);

  00001	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00006	8b f1		 mov	 esi, ecx
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 587  :     }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0Lock@Internal@Core@Math@Palmtree@@QAE@XZ ENDP	; Palmtree::Math::Core::Internal::Lock::Lock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ
_TEXT	SEGMENT
_Entry$1 = -36						; size = 28
$T2 = -32						; size = 24
_size$ = -8						; size = 8
?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ PROC ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize, COMDAT

; 1041 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H

; 1042 :         if (!HeapLock(hLocalHeap))

  00006	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapLock@4
  00012	85 c0		 test	 eax, eax
  00014	0f 84 87 00 00
	00		 je	 $LN28@PMC_GetAll
  0001a	53		 push	 ebx

; 985  :         while (HeapWalk(hLocalHeap, &Entry))

  0001b	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__HeapWalk@8
  00021	8d 45 dc	 lea	 eax, DWORD PTR _Entry$1[ebp]
  00024	56		 push	 esi
  00025	57		 push	 edi
  00026	50		 push	 eax
  00027	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0002d	0f 57 c0	 xorps	 xmm0, xmm0

; 984  :         Entry.lpData = NULL;

  00030	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _Entry$1[ebp], 0
  00037	66 0f 13 45 f8	 movlpd	 QWORD PTR _size$[ebp], xmm0

; 985  :         while (HeapWalk(hLocalHeap, &Entry))

  0003c	ff d3		 call	 ebx
  0003e	8b 75 fc	 mov	 esi, DWORD PTR _size$[ebp+4]
  00041	8b 7d f8	 mov	 edi, DWORD PTR _size$[ebp]
  00044	85 c0		 test	 eax, eax
  00046	74 1c		 je	 SHORT $LN8@PMC_GetAll
$LL7@PMC_GetAll:

; 986  :         {
; 987  :             BOOL is_allocated = FALSE;
; 988  :             if ((Entry.wFlags & PROCESS_HEAP_ENTRY_BUSY) != 0)

  00048	f6 45 e6 04	 test	 BYTE PTR _Entry$1[ebp+10], 4
  0004c	74 06		 je	 SHORT $LN17@PMC_GetAll

; 989  :             {
; 990  :                 //_tprintf(TEXT("Allocated block"));
; 991  :                 is_allocated = TRUE;
; 992  : 
; 993  :                 if ((Entry.wFlags & PROCESS_HEAP_ENTRY_MOVEABLE) != 0)
; 994  :                 {
; 995  :                     //_tprintf(TEXT(", movable with HANDLE %#p"), Entry.Block.hMem);
; 996  :                 }
; 997  : 
; 998  :                 if ((Entry.wFlags & PROCESS_HEAP_ENTRY_DDESHARE) != 0)
; 999  :                 {
; 1000 :                     //_tprintf(TEXT(", DDESHARE"));
; 1001 :                 }
; 1002 :             }
; 1003 :             else if ((Entry.wFlags & PROCESS_HEAP_REGION) != 0)
; 1004 :             {
; 1005 :                 //_tprintf(TEXT("Region\n  %d bytes committed\n") \
; 1006 :                 //    TEXT("  %d bytes uncommitted\n  First block address: %#p\n") \
; 1007 :                 //    TEXT("  Last block address: %#p\n"),
; 1008 :                 //    Entry.Region.dwCommittedSize,
; 1009 :                 //    Entry.Region.dwUnCommittedSize,
; 1010 :                 //    Entry.Region.lpFirstBlock,
; 1011 :                 //    Entry.Region.lpLastBlock);
; 1012 :             }
; 1013 :             else if ((Entry.wFlags & PROCESS_HEAP_UNCOMMITTED_RANGE) != 0)
; 1014 :             {
; 1015 :                 //_tprintf(TEXT("Uncommitted range\n"));
; 1016 :             }
; 1017 :             else
; 1018 :             {
; 1019 :                 //_tprintf(TEXT("Block\n"));
; 1020 :             }
; 1021 : 
; 1022 :             //_tprintf(TEXT("  Data portion begins at: %#p\n  Size: %d bytes\n") \
; 1023 :             //    TEXT("  Overhead: %d bytes\n  Region index: %d\n\n"),
; 1024 :             //    Entry.lpData,
; 1025 :             //    Entry.cbData,
; 1026 :             //    Entry.cbOverhead,
; 1027 :             //    Entry.iRegionIndex);
; 1028 :             if (is_allocated)
; 1029 :                 *size += Entry.cbData;

  0004e	03 7d e0	 add	 edi, DWORD PTR _Entry$1[ebp+4]
  00051	83 d6 00	 adc	 esi, 0
$LN17@PMC_GetAll:

; 985  :         while (HeapWalk(hLocalHeap, &Entry))

  00054	8d 45 dc	 lea	 eax, DWORD PTR _Entry$1[ebp]
  00057	50		 push	 eax
  00058	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  0005e	ff d3		 call	 ebx
  00060	85 c0		 test	 eax, eax
  00062	75 e4		 jne	 SHORT $LL7@PMC_GetAll
$LN8@PMC_GetAll:

; 1030 :         }
; 1031 :         LastError = GetLastError();

  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 1044 :         _UINT64_T size;
; 1045 :         BOOL result = GetAllocatedMemorySize_Imp(&size);
; 1046 :         if (!HeapUnlock(hLocalHeap))

  0006a	ff 35 00 00 00
	00		 push	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap

; 1032 :         if (LastError != ERROR_NO_MORE_ITEMS)

  00070	33 db		 xor	 ebx, ebx
  00072	3d 03 01 00 00	 cmp	 eax, 259		; 00000103H
  00077	0f 94 c3	 sete	 bl

; 1044 :         _UINT64_T size;
; 1045 :         BOOL result = GetAllocatedMemorySize_Imp(&size);
; 1046 :         if (!HeapUnlock(hLocalHeap))

  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapUnlock@4
  00080	85 c0		 test	 eax, eax
  00082	75 07		 jne	 SHORT $LN3@PMC_GetAll

; 1047 :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_memory.cpp;GetAllocatedMemorySize;2");

  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@NOCALGIP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00089	eb 1b		 jmp	 SHORT $LN26@PMC_GetAll
$LN3@PMC_GetAll:

; 1048 :         if (!result)

  0008b	85 db		 test	 ebx, ebx
  0008d	75 07		 jne	 SHORT $LN4@PMC_GetAll

; 1049 :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_memory.cpp;GetAllocatedMemorySize;3");

  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@GGJMNBOK@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00094	eb 10		 jmp	 SHORT $LN26@PMC_GetAll
$LN4@PMC_GetAll:

; 1050 :         return (size);

  00096	8b c7		 mov	 eax, edi
  00098	8b d6		 mov	 edx, esi
  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx

; 1051 :     }

  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
$LN28@PMC_GetAll:

; 1043 :             throw InternalErrorException(L"内部エラーが発生しました。", L"pmc_memory.cpp;GetAllocatedMemorySize;1");

  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@MMJFBJGB@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
$LN26@PMC_GetAll:

; 1051 :     }

  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@FCPAHMHB@?$PP?$IF?$PP?h?$PP?$KI?$PP?i?$PP?$PM?$AAL?$AAz?$AA?$BP?$AAW?$AA?$HO?$AAW?$AA_?$AA?$AC@
  000ab	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  000ae	e8 00 00 00 00	 call	 ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
  000b3	68 00 00 00 00	 push	 OFFSET __TI2?AVInternalErrorException@Internal@Core@Math@Palmtree@@
  000b8	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN25@PMC_GetAll:
  000c1	cc		 int	 3
?PMC_GetAllocatedMemorySize@Internal@Core@Math@Palmtree@@YG_KXZ ENDP ; Palmtree::Math::Core::Internal::PMC_GetAllocatedMemorySize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z
_TEXT	SEGMENT
_lock_obj$2 = -62					; size = 1
_lock_obj$3 = -61					; size = 1
$T4 = -60						; size = 28
$T5 = -56						; size = 24
_root$ = -32						; size = 16
_this$6 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T7 = 8							; size = 4
_x$ = 8							; size = 4
?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Clone_X, COMDAT

; 562  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 563  :         if (x == nullptr)

  00028	8b 5d 08	 mov	 ebx, DWORD PTR _x$[ebp]
  0002b	85 db		 test	 ebx, ebx
  0002d	0f 84 7f 01 00
	00		 je	 $LN77@PMC_Clone_

; 566  :         CheckNumber(nx);

  00033	53		 push	 ebx
  00034	e8 00 00 00 00	 call	 ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CheckNumber
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 136  :         ResourceHolder()

  00039	8d 45 e4	 lea	 eax, DWORD PTR _root$[ebp+4]
  0003c	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 566  :         CheckNumber(nx);

  00043	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 136  :         ResourceHolder()

  00046	89 45 f0	 mov	 DWORD PTR _this$6[ebp], eax

; 57   :             __ChainBufferTag()

  00049	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _root$[ebp+4], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  00050	89 45 e8	 mov	 DWORD PTR _root$[ebp+8], eax

; 60   :                 _prev = this;

  00053	89 45 ec	 mov	 DWORD PTR _root$[ebp+12], eax

; 114  :             __RootTag()

  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _root$[ebp+4], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 751  :     {

  00064	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0006b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 567  :         ResourceHolderUINT root;

  00072	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 568  :         NUMBER_HEADER* no;
; 569  :         if (nx->IS_ZERO)

  00079	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  0007d	74 07		 je	 SHORT $LN3@PMC_Clone_

; 570  :             no = &number_zero;

  0007f	bb 00 00 00 00	 mov	 ebx, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 571  :         else

  00084	eb 27		 jmp	 SHORT $LN18@PMC_Clone_
$LN3@PMC_Clone_:

; 530  :         if (x->IS_STATIC)

  00086	f6 43 1c 01	 test	 BYTE PTR [ebx+28], 1
  0008a	75 21		 jne	 SHORT $LN18@PMC_Clone_

; 535  :         NUMBER_HEADER* o = AllocateNumber(x_bit_count);

  0008c	ff 73 14	 push	 DWORD PTR [ebx+20]
  0008f	e8 00 00 00 00	 call	 ?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::AllocateNumber
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);

  00094	8b 75 08	 mov	 esi, DWORD PTR _x$[ebp]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 535  :         NUMBER_HEADER* o = AllocateNumber(x_bit_count);

  00097	8b d8		 mov	 ebx, eax

; 537  :         CommitNumber(o);

  00099	53		 push	 ebx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);

  0009a	8b 7b 24	 mov	 edi, DWORD PTR [ebx+36]
  0009d	8b 76 24	 mov	 esi, DWORD PTR [esi+36]
  000a0	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  000a3	f3 a5		 rep movsd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 537  :         CommitNumber(o);

  000a5	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000aa	83 c4 08	 add	 esp, 8
$LN18@PMC_Clone_:

; 586  :         EnterCriticalSection(&mcs);

  000ad	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__EnterCriticalSection@4
  000b3	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  000b8	ff d6		 call	 esi

; 910  :         Lock lock_obj;

  000ba	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 911  :         __ChainBufferTag* tag = new __NumberHandleHookingChainBufferTag(buffer);

  000be	6a 10		 push	 16			; 00000010H
  000c0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c5	8b c8		 mov	 ecx, eax
  000c7	83 c4 04	 add	 esp, 4
  000ca	89 4d 08	 mov	 DWORD PTR $T7[ebp], ecx
  000cd	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000d1	85 c9		 test	 ecx, ecx
  000d3	74 1f		 je	 SHORT $LN26@PMC_Clone_
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 57   :             __ChainBufferTag()

  000d5	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  000db	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 60   :                 _prev = this;

  000de	89 49 08	 mov	 DWORD PTR [ecx+8], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 705  :     {

  000e1	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  000e5	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7__NumberHandleHookingChainBufferTag@ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 706  :         _buffer = buffer;

  000eb	89 59 0c	 mov	 DWORD PTR [ecx+12], ebx

; 707  :     }

  000ee	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 911  :         __ChainBufferTag* tag = new __NumberHandleHookingChainBufferTag(buffer);

  000f2	eb 02		 jmp	 SHORT $LN27@PMC_Clone_
$LN26@PMC_Clone_:
  000f4	33 c9		 xor	 ecx, ecx
$LN27@PMC_Clone_:
  000f6	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 71   :                 tag->_prev = this;

  000fa	8d 55 e4	 lea	 edx, DWORD PTR _root$[ebp+4]
  000fd	8b 45 e8	 mov	 eax, DWORD PTR _root$[ebp+8]
  00100	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00103	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 72   :                 tag->_next->_prev = tag;

  00106	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 73   :                 tag->_prev->_next = tag;

  00109	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0010c	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 913  :     }

  0010f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 591  :         LeaveCriticalSection(&mcs);

  00113	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__LeaveCriticalSection@4
  00119	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0011e	ff d7		 call	 edi

; 586  :         EnterCriticalSection(&mcs);

  00120	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00125	ff d6		 call	 esi

; 940  :         Lock lock_obj;

  00127	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 89   :                 return (_next);

  0012b	8d 45 e4	 lea	 eax, DWORD PTR _root$[ebp+4]
  0012e	8b 75 e8	 mov	 esi, DWORD PTR _root$[ebp+8]
  00131	3b f0		 cmp	 esi, eax

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  00133	0f 84 99 00 00
	00		 je	 $LN73@PMC_Clone_
  00139	0f 1f 80 00 00
	00 00		 npad	 7
$LL52@PMC_Clone_:

; 162  :             {
; 163  :                 if (tag->EqualsBufferAddress(buffer))

  00140	8b 06		 mov	 eax, DWORD PTR [esi]
  00142	8b ce		 mov	 ecx, esi
  00144	53		 push	 ebx
  00145	ff 50 04	 call	 DWORD PTR [eax+4]
  00148	85 c0		 test	 eax, eax
  0014a	75 0c		 jne	 SHORT $LN44@PMC_Clone_

; 89   :                 return (_next);

  0014c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 161  :             for (__ChainBufferTag* tag = _root_tag.Next(); tag != &_root_tag; tag = tag->Next())

  0014f	8d 45 e4	 lea	 eax, DWORD PTR _root$[ebp+4]
  00152	3b f0		 cmp	 esi, eax
  00154	74 7c		 je	 SHORT $LN73@PMC_Clone_
  00156	eb e8		 jmp	 SHORT $LL52@PMC_Clone_
$LN44@PMC_Clone_:

; 78   :                 if (_next != this)

  00158	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015b	3b ce		 cmp	 ecx, esi
  0015d	74 15		 je	 SHORT $LN60@PMC_Clone_

; 79   :                 {
; 80   :                     _next->_prev = _prev;

  0015f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00162	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 81   :                     _prev->_next = _next;

  00165	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00168	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0016b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 82   :                     _next = this;

  0016e	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 83   :                     _prev = this;

  00171	89 76 08	 mov	 DWORD PTR [esi+8], esi
$LN60@PMC_Clone_:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 945  :     }

  00174	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 591  :         LeaveCriticalSection(&mcs);

  00178	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  0017d	ff d7		 call	 edi

; 572  :             no = DuplicateNumber(nx);
; 573  :         root.HookNumber(no);
; 574  : #ifdef _DEBUG
; 575  :         CheckNumber(no);
; 576  : #endif
; 577  :         root.UnlinkNumber(no);
; 578  :         return ((PMC_HANDLE_UINT)no);

  0017f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 755  :     {

  00186	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 756  :     }

  0018d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00194	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00197	e8 00 00 00 00	 call	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder

; 572  :             no = DuplicateNumber(nx);
; 573  :         root.HookNumber(no);
; 574  : #ifdef _DEBUG
; 575  :         CheckNumber(no);
; 576  : #endif
; 577  :         root.UnlinkNumber(no);
; 578  :         return ((PMC_HANDLE_UINT)no);

  0019c	8b c3		 mov	 eax, ebx

; 579  :     }

  0019e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a8	59		 pop	 ecx
  001a9	5f		 pop	 edi
  001aa	5e		 pop	 esi
  001ab	5b		 pop	 ebx
  001ac	8b e5		 mov	 esp, ebp
  001ae	5d		 pop	 ebp
  001af	c2 04 00	 ret	 4
$LN77@PMC_Clone_:

; 564  :             throw ArgumentNullException(L"引数にnullptrが与えられています。", L"x");

  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_13HADAKIJA@?$AAx@
  001b7	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@ECFIEPAC@?$AA?$BF?$AAp?$AAk?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AAL?$AA?$AO?$AAH?$PP?$IJ?$PP?$IM@
  001bc	8d 4d c8	 lea	 ecx, DWORD PTR $T5[ebp]
  001bf	e8 00 00 00 00	 call	 ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
  001c4	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentNullException@Internal@Core@Math@Palmtree@@
  001c9	8d 45 c8	 lea	 eax, DWORD PTR $T5[ebp]
  001cc	50		 push	 eax
  001cd	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN73@PMC_Clone_:

; 943  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;ResourceHolderUINT::UnlinkNumber;1");

  001d2	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@JOBLOAGO@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  001d7	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  001dc	8d 4d c4	 lea	 ecx, DWORD PTR $T4[ebp]
  001df	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  001e4	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  001e9	8d 45 c4	 lea	 eax, DWORD PTR $T4[ebp]
  001ec	50		 push	 eax
  001ed	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN75@PMC_Clone_:
  001f2	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$3:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$2:
  00008	8d 4d e4	 lea	 ecx, DWORD PTR _root$[ebp+4]
  0000b	e9 00 00 00 00	 jmp	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$1:
  00010	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$0:
  00018	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$4:
  00020	8d 4d c3	 lea	 ecx, DWORD PTR _lock_obj$3[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$5:
  00028	6a 10		 push	 16			; 00000010H
  0002a	8b 45 08	 mov	 eax, DWORD PTR $T7[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00033	83 c4 08	 add	 esp, 8
  00036	c3		 ret	 0
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$6:
  00037	8b 4d 08	 mov	 ecx, DWORD PTR $T7[ebp]
  0003a	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$7:
  0003f	8d 4d c2	 lea	 ecx, DWORD PTR _lock_obj$2[ebp]
  00042	e9 00 00 00 00	 jmp	 ??1Lock@Internal@Core@Math@Palmtree@@QAE@XZ ; Palmtree::Math::Core::Internal::Lock::~Lock
__unwindfunclet$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z$8:
  00047	8d 4d e0	 lea	 ecx, DWORD PTR _root$[ebp]
  0004a	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__ehhandler$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z:
  0004f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00053	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00056	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  00059	33 c8		 xor	 ecx, eax
  0005b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00060	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z
  00065	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PMC_Clone_X@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@PAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Clone_X
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_type$ = 8						; size = 4
?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z PROC ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I, COMDAT

; 542  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 543  :         switch (type)

  00003	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00006	83 ec 18	 sub	 esp, 24			; 00000018H
  00009	83 e8 01	 sub	 eax, 1
  0000c	74 10		 je	 SHORT $LN4@PMC_GetCon
  0000e	83 e8 01	 sub	 eax, 1
  00011	75 16		 jne	 SHORT $LN10@PMC_GetCon

; 547  :         case PMC_CONSTANT_ONE:
; 548  :             return ((PMC_HANDLE_UINT)&number_one);

  00013	b8 00 00 00 00	 mov	 eax, OFFSET ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one

; 551  :         }
; 552  :     }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
$LN4@PMC_GetCon:

; 544  :         {
; 545  :         case PMC_CONSTANT_ZERO:
; 546  :             return ((PMC_HANDLE_UINT)&number_zero);

  0001e	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero

; 551  :         }
; 552  :     }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
$LN10@PMC_GetCon:

; 549  :         default:
; 550  :             throw ArgumentException(L"引数typeが未知の値です。");

  00029	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@CNNKDNIF@?$AA?$BF?$AAp?$AAt?$AAy?$AAp?$AAe?$AAL?$AA?$CK?$PP?e?$AAn?$AA$?$AAg?$AAY?$AA?$AC@
  0002e	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  00031	e8 00 00 00 00	 call	 ??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVArgumentException@Internal@Core@Math@Palmtree@@
  0003b	8d 45 e8	 lea	 eax, DWORD PTR $T1[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN8@PMC_GetCon:
  00044	cc		 int	 3
?PMC_GetConstantValue_I@Internal@Core@Math@Palmtree@@YGPAU__tag_PMC_HANDLE_UINT@1234@H@Z ENDP ; Palmtree::Math::Core::Internal::PMC_GetConstantValue_I
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z
_TEXT	SEGMENT
$T1 = -28						; size = 28
_p$ = 8							; size = 4
?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z PROC ; Palmtree::Math::Core::Internal::PMC_Dispose, COMDAT

; 555  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi

; 511  :         if (p->SIGNATURE1 != PMC_SIGNATURE || p->SIGNATURE2 != PMC_UINT_SIGNATURE)

  00007	8b 75 08	 mov	 esi, DWORD PTR _p$[ebp]
  0000a	81 7e 08 70 4d
	63 49		 cmp	 DWORD PTR [esi+8], 1231244656 ; 49634d70H
  00011	75 30		 jne	 SHORT $LN5@PMC_Dispos
  00013	81 7e 0c 55 69
	6e 54		 cmp	 DWORD PTR [esi+12], 1416522069 ; 546e6955H
  0001a	75 27		 jne	 SHORT $LN5@PMC_Dispos

; 513  :         if (!p->IS_ZERO)

  0001c	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  00020	75 11		 jne	 SHORT $LN6@PMC_Dispos

; 514  :         {
; 515  :             CheckBlock(p->BLOCK, p->BLOCK_COUNT, p->BLOCK_CHECK_CODE);

  00022	ff 76 28	 push	 DWORD PTR [esi+40]
  00025	ff 76 20	 push	 DWORD PTR [esi+32]
  00028	ff 76 24	 push	 DWORD PTR [esi+36]
  0002b	e8 00 00 00 00	 call	 ?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::CheckBlock
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@PMC_Dispos:

; 556  :         NUMBER_HEADER* np = (NUMBER_HEADER*)p;
; 557  :         CheckNumber(np);
; 558  :         DeallocateNumber(np);

  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ?DeallocateNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::DeallocateNumber
  00039	83 c4 04	 add	 esp, 4
  0003c	5e		 pop	 esi

; 559  :     }

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN5@PMC_Dispos:

; 512  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckNumber;1");

  00043	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@CHNNDIJP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  0004d	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00050	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  00055	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0005a	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN9@PMC_Dispos:
  00063	cc		 int	 3
?PMC_Dispose@Internal@Core@Math@Palmtree@@YGXPAU__tag_PMC_HANDLE_UINT@1234@@Z ENDP ; Palmtree::Math::Core::Internal::PMC_Dispose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
_TEXT	SEGMENT
_root$ = -40						; size = 16
_ex$2 = -24						; size = 4
_this$3 = -20						; size = 4
$T4 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_feature$ = 8						; size = 4
?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z PROC ; Palmtree::Math::Core::Internal::Initialize_Memory, COMDAT

; 1056 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 1057 :         InitializeCriticalSection(&mcs);

  0002b	68 00 00 00 00	 push	 OFFSET ?mcs@Internal@Core@Math@Palmtree@@3U_RTL_CRITICAL_SECTION@@A ; Palmtree::Math::Core::Internal::mcs
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_resourceholder.h

; 136  :         ResourceHolder()

  00036	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolder@Internal@Core@Math@Palmtree@@6B@
  0003d	8d 45 dc	 lea	 eax, DWORD PTR _root$[ebp+4]
  00040	89 45 ec	 mov	 DWORD PTR _this$3[ebp], eax

; 57   :             __ChainBufferTag()

  00043	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _root$[ebp+4], OFFSET ??_7__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@

; 58   :             {
; 59   :                 _next = this;

  0004a	89 45 e0	 mov	 DWORD PTR _root$[ebp+8], eax

; 60   :                 _prev = this;

  0004d	89 45 e4	 mov	 DWORD PTR _root$[ebp+12], eax

; 114  :             __RootTag()

  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00057	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _root$[ebp+4], OFFSET ??_7__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@6B@
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 751  :     {

  0005e	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
  00065	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 1058 : 
; 1059 :         ResourceHolderUINT root;

  0006c	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 3

; 1060 : 
; 1061 :         try

  00073	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+12], 4

; 1062 :         {
; 1063 :             root.AttatchStaticNumber(&number_zero, 0);

  00077	6a 00		 push	 0
  00079	68 00 00 00 00	 push	 OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0007e	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  00081	e8 00 00 00 00	 call	 ?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber

; 1064 :             CommitNumber(&number_zero);

  00086	68 00 00 00 00	 push	 OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0008b	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  00090	83 c4 04	 add	 esp, 4

; 1065 : 
; 1066 :             root.AttatchStaticNumber(&number_one, 1);

  00093	6a 01		 push	 1
  00095	68 00 00 00 00	 push	 OFFSET ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
  0009a	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  0009d	e8 00 00 00 00	 call	 ?AttatchStaticNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@I@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::AttatchStaticNumber

; 1067 :             number_one.BLOCK[0] = 1;

  000a2	a1 24 00 00 00	 mov	 eax, DWORD PTR ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A+36
  000a7	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 1068 :             CommitNumber(&number_one);

  000ad	68 00 00 00 00	 push	 OFFSET ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
  000b2	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  000b7	83 c4 04	 add	 esp, 4

; 1069 : 
; 1070 :             root.UnlinkStatickNumber(&number_zero);

  000ba	68 00 00 00 00	 push	 OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  000bf	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  000c2	e8 00 00 00 00	 call	 ?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber

; 1071 :             root.UnlinkStatickNumber(&number_one);

  000c7	68 00 00 00 00	 push	 OFFSET ?number_one@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_one
  000cc	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  000cf	e8 00 00 00 00	 call	 ?UnlinkStatickNumber@ResourceHolderUINT@Internal@Core@Math@Palmtree@@QAEXPAU__tag_NUMBER_HEADER@2345@@Z ; Palmtree::Math::Core::Internal::ResourceHolderUINT::UnlinkStatickNumber

; 1072 :             return (PMC_STATUS_OK);

  000d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000db	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  000de	e8 00 00 00 00	 call	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
  000e3	33 c0		 xor	 eax, eax

; 1077 :         }
; 1078 :     }

  000e5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000e8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ef	59		 pop	 ecx
  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	5b		 pop	 ebx
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c3		 ret	 0
__catch$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$0:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 75   :             return (_code);

  000f7	8b 45 e8	 mov	 eax, DWORD PTR _ex$2[ebp]
  000fa	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000fd	89 45 ec	 mov	 DWORD PTR $T4[ebp], eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 1076 :             return (ex.GetStatusCode());

  00100	b8 00 00 00 00	 mov	 eax, $LN8@Initialize
  00105	c3		 ret	 0
$LN8@Initialize:
  00106	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 755  :     {

  0010d	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _root$[ebp], OFFSET ??_7ResourceHolderUINT@Internal@Core@Math@Palmtree@@6B@

; 756  :     }

  00114	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0011b	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  0011e	e8 00 00 00 00	 call	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder

; 1076 :             return (ex.GetStatusCode());

  00123	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp]

; 1077 :         }
; 1078 :     }

  00126	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00129	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00130	59		 pop	 ecx
  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$5:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1__ChainBufferTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__ChainBufferTag::~__ChainBufferTag
__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$4:
  00008	8d 4d dc	 lea	 ecx, DWORD PTR _root$[ebp+4]
  0000b	e9 00 00 00 00	 jmp	 ??1__RootTag@ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::__RootTag::~__RootTag
__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$3:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$2:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1ResourceHolderUINT@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolderUINT::~ResourceHolderUINT
__unwindfunclet$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z$6:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR _root$[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1ResourceHolder@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::ResourceHolder::~ResourceHolder
__ehhandler$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z:
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize_Memory@Internal@Core@Math@Palmtree@@YAHPAU_tag_PROCESSOR_FEATURES@1234@@Z ENDP ; Palmtree::Math::Core::Internal::Initialize_Memory
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z PROC ; Palmtree::Math::Core::Internal::DuplicateNumber, COMDAT

; 529  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 530  :         if (x->IS_STATIC)

  00004	8b 75 08	 mov	 esi, DWORD PTR _x$[ebp]
  00007	f6 46 1c 01	 test	 BYTE PTR [esi+28], 1
  0000b	74 05		 je	 SHORT $LN2@DuplicateN

; 531  :             return (x);

  0000d	8b c6		 mov	 eax, esi
  0000f	5e		 pop	 esi

; 539  :     }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
$LN2@DuplicateN:

; 532  :         if (x->IS_ZERO)

  00012	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  00016	74 08		 je	 SHORT $LN3@DuplicateN

; 533  :             return (&number_zero);

  00018	b8 00 00 00 00	 mov	 eax, OFFSET ?number_zero@Internal@Core@Math@Palmtree@@3U__tag_NUMBER_HEADER@1234@A ; Palmtree::Math::Core::Internal::number_zero
  0001d	5e		 pop	 esi

; 539  :     }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
$LN3@DuplicateN:
  00020	53		 push	 ebx
  00021	57		 push	 edi

; 535  :         NUMBER_HEADER* o = AllocateNumber(x_bit_count);

  00022	ff 76 14	 push	 DWORD PTR [esi+20]
  00025	e8 00 00 00 00	 call	 ?AllocateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@I@Z ; Palmtree::Math::Core::Internal::AllocateNumber
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);

  0002a	8b 76 24	 mov	 esi, DWORD PTR [esi+36]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 535  :         NUMBER_HEADER* o = AllocateNumber(x_bit_count);

  0002d	8b d8		 mov	 ebx, eax

; 537  :         CommitNumber(o);

  0002f	53		 push	 ebx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 65   :             __movsd((unsigned long *)d, (unsigned long *)s, (unsigned long)count);

  00030	8b 7b 24	 mov	 edi, DWORD PTR [ebx+36]
  00033	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00036	f3 a5		 rep movsd
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 537  :         CommitNumber(o);

  00038	e8 00 00 00 00	 call	 ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ; Palmtree::Math::Core::Internal::CommitNumber
  0003d	83 c4 08	 add	 esp, 8

; 538  :         return (o);

  00040	8b c3		 mov	 eax, ebx
  00042	5f		 pop	 edi
  00043	5b		 pop	 ebx
  00044	5e		 pop	 esi

; 539  :     }

  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?DuplicateNumber@Internal@Core@Math@Palmtree@@YAPAU__tag_NUMBER_HEADER@1234@PAU51234@@Z ENDP ; Palmtree::Math::Core::Internal::DuplicateNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
_TEXT	SEGMENT
$T1 = -28						; size = 28
_p$ = 8							; size = 4
?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::CheckNumber, COMDAT

; 510  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 511  :         if (p->SIGNATURE1 != PMC_SIGNATURE || p->SIGNATURE2 != PMC_UINT_SIGNATURE)

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	81 78 08 70 4d
	63 49		 cmp	 DWORD PTR [eax+8], 1231244656 ; 49634d70H
  00010	75 24		 jne	 SHORT $LN3@CheckNumbe
  00012	81 78 0c 55 69
	6e 54		 cmp	 DWORD PTR [eax+12], 1416522069 ; 546e6955H
  00019	75 1b		 jne	 SHORT $LN3@CheckNumbe

; 513  :         if (!p->IS_ZERO)

  0001b	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  0001f	75 11		 jne	 SHORT $LN4@CheckNumbe

; 514  :         {
; 515  :             CheckBlock(p->BLOCK, p->BLOCK_COUNT, p->BLOCK_CHECK_CODE);

  00021	ff 70 28	 push	 DWORD PTR [eax+40]
  00024	ff 70 20	 push	 DWORD PTR [eax+32]
  00027	ff 70 24	 push	 DWORD PTR [eax+36]
  0002a	e8 00 00 00 00	 call	 ?CheckBlock@Internal@Core@Math@Palmtree@@YAXPAIII@Z ; Palmtree::Math::Core::Internal::CheckBlock
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@CheckNumbe:

; 516  : #ifdef _DEBUG
; 517  :             if (p->IS_COMMITTED)
; 518  :             {
; 519  :                 __UNIT_TYPE actual_hash_code = CalculateHashCode(p->BLOCK, p->UNIT_WORD_COUNT);
; 520  :                 __UNIT_TYPE desired_hash_code = p->HASH_CODE;
; 521  :                 if (actual_hash_code !=  desired_hash_code)
; 522  :                     throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckNumber;2");
; 523  :             }
; 524  : #endif
; 525  :         }
; 526  :     }

  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN3@CheckNumbe:

; 512  :             throw BadBufferException(L"メモリ領域の不整合を検出しました。", L"pmc_memory.cpp;CheckNumber;1");

  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@CHNNDIJP@?$AAp?$AAm?$AAc?$AA_?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?4?$AAc?$AAp?$AAp?$AA?$DL@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@JCIJLGOL@?$PP?a?$PP?b?$PP?j?$AA?$BI?$PP?$NP?$AAn?$AA?$AN?$AAt?$AA?$AI?$PP?$JC?$AA?$BM?$PP?z?$AAW?$AA?$HO?$AAW@
  00040	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00043	e8 00 00 00 00	 call	 ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
  00048	68 00 00 00 00	 push	 OFFSET __TI2?AVBadBufferException@Internal@Core@Math@Palmtree@@
  0004d	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@CheckNumbe:
  00056	cc		 int	 3
?CheckNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::CheckNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z PROC ; Palmtree::Math::Core::Internal::CommitNumber, COMDAT

; 475  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 476  :         p->UNIT_BIT_COUNT = GetEffectiveBitLength(p->BLOCK, p->BLOCK_COUNT, &p->UNIT_WORD_COUNT);

  00004	8b 75 08	 mov	 esi, DWORD PTR _p$[ebp]
  00007	57		 push	 edi
  00008	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000b	8b 7e 20	 mov	 edi, DWORD PTR [esi+32]

; 439  :         if (p == nullptr)

  0000e	85 c0		 test	 eax, eax
  00010	74 1c		 je	 SHORT $LN9@CommitNumb

; 440  :         {
; 441  :             *effective_word_count = 0;
; 442  :             return (0);
; 443  :         }
; 444  :         p += word_count;

  00012	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]

; 445  :         while (word_count != 0)

  00015	85 ff		 test	 edi, edi
  00017	74 15		 je	 SHORT $LN9@CommitNumb
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@CommitNumb:

; 446  :         {
; 447  :             --p;
; 448  :             if (*p != 0)

  00020	83 78 fc 00	 cmp	 DWORD PTR [eax-4], 0
  00024	8d 40 fc	 lea	 eax, DWORD PTR [eax-4]
  00027	75 2d		 jne	 SHORT $LN26@CommitNumb

; 452  :             }
; 453  :             --word_count;

  00029	83 ef 01	 sub	 edi, 1
  0002c	75 f2		 jne	 SHORT $LL8@CommitNumb
$LN9@CommitNumb:

; 476  :         p->UNIT_BIT_COUNT = GetEffectiveBitLength(p->BLOCK, p->BLOCK_COUNT, &p->UNIT_WORD_COUNT);

  0002e	33 ff		 xor	 edi, edi
  00030	89 7e 10	 mov	 DWORD PTR [esi+16], edi
$LN7@CommitNumb:
  00033	89 7e 14	 mov	 DWORD PTR [esi+20], edi

; 477  :         if (p->UNIT_BIT_COUNT <= 0)

  00036	85 ff		 test	 edi, edi
  00038	75 42		 jne	 SHORT $LN2@CommitNumb

; 478  :         {
; 479  :             p->HASH_CODE = 0;
; 480  :             p->IS_ZERO = true;

  0003a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 481  :             p->IS_ONE = false;
; 482  :             p->IS_EVEN = true;
; 483  :             p->TRAILING_ZERO_BITS_COUNT = 0;
; 484  :             p->IS_POWER_OF_TWO = false;
; 485  :             p->IS_COMMITTED = true;

  0003d	83 4e 1c 02	 or	 DWORD PTR [esi+28], 2
  00041	83 e0 fd	 and	 eax, -3			; fffffffdH
  00044	89 3e		 mov	 DWORD PTR [esi], edi
  00046	83 c8 05	 or	 eax, 5
  00049	89 7e 18	 mov	 DWORD PTR [esi+24], edi
  0004c	83 e0 f7	 and	 eax, -9			; fffffff7H
  0004f	5f		 pop	 edi

; 506  :         }
; 507  :     }

  00050	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN26@CommitNumb:

; 450  :                 *effective_word_count = word_count;

  00056	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  00059	8b 00		 mov	 eax, DWORD PTR [eax]
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 455  :             if (x == 0)

  0005b	85 c0		 test	 eax, eax
  0005d	75 0c		 jne	 SHORT $LN14@CommitNumb

; 456  :                 return (sizeof(x) * 8);

  0005f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  00064	c1 e7 05	 shl	 edi, 5
  00067	2b f9		 sub	 edi, ecx
  00069	eb c8		 jmp	 SHORT $LN7@CommitNumb
$LN14@CommitNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 460  :             _BitScanReverse(&pos, x);

  0006b	0f bd c0	 bsr	 eax, eax

; 479  :             return (sizeof(x) * 8 - 1 - pos);

  0006e	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  00073	c1 e7 05	 shl	 edi, 5
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 479  :             return (sizeof(x) * 8 - 1 - pos);

  00076	2b c8		 sub	 ecx, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 451  :                 return (word_count * __UNIT_TYPE_BIT_COUNT - _LZCNT_ALT_UNIT(*p));

  00078	2b f9		 sub	 edi, ecx
  0007a	eb b7		 jmp	 SHORT $LN7@CommitNumb
$LN2@CommitNumb:
  0007c	53		 push	 ebx

; 486  :         }
; 487  :         else if (p->UNIT_BIT_COUNT == 1)

  0007d	ff 76 10	 push	 DWORD PTR [esi+16]
  00080	ff 76 24	 push	 DWORD PTR [esi+36]
  00083	e8 00 00 00 00	 call	 ?CalculateHashCode@Internal@Core@Math@Palmtree@@YAIPAII@Z ; Palmtree::Math::Core::Internal::CalculateHashCode
  00088	89 06		 mov	 DWORD PTR [esi], eax
  0008a	83 c4 08	 add	 esp, 8
  0008d	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00090	33 c9		 xor	 ecx, ecx
  00092	83 e3 fe	 and	 ebx, -2			; fffffffeH
  00095	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00098	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  0009b	83 ff 01	 cmp	 edi, 1
  0009e	75 36		 jne	 SHORT $LN4@CommitNumb

; 488  :         {
; 489  :             p->HASH_CODE = CalculateHashCode(p->BLOCK, p->UNIT_WORD_COUNT);
; 490  :             p->IS_ZERO = false;
; 491  :             p->IS_ONE = p->BLOCK[0] == 1; // 無条件でTRUEでも大丈夫だが念のため。

  000a0	39 3a		 cmp	 DWORD PTR [edx], edi
  000a2	b8 02 00 00 00	 mov	 eax, 2
  000a7	0f 44 c8	 cmove	 ecx, eax
  000aa	83 e3 fd	 and	 ebx, -3			; fffffffdH
  000ad	0b cb		 or	 ecx, ebx
  000af	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 492  :             p->IS_EVEN = !(p->BLOCK[0] & 1);

  000b2	8b 02		 mov	 eax, DWORD PTR [edx]

; 493  :             p->TRAILING_ZERO_BITS_COUNT = 0;
; 494  :             p->IS_POWER_OF_TWO = true;
; 495  :             p->IS_COMMITTED = true;

  000b4	83 4e 1c 02	 or	 DWORD PTR [esi+28], 2
  000b8	c1 e0 02	 shl	 eax, 2
  000bb	f7 d0		 not	 eax
  000bd	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  000c4	33 c1		 xor	 eax, ecx
  000c6	83 e0 04	 and	 eax, 4
  000c9	33 c1		 xor	 eax, ecx
  000cb	5b		 pop	 ebx
  000cc	83 c8 08	 or	 eax, 8
  000cf	5f		 pop	 edi

; 506  :         }
; 507  :     }

  000d0	89 46 04	 mov	 DWORD PTR [esi+4], eax
  000d3	5e		 pop	 esi
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
$LN4@CommitNumb:

; 496  :         }
; 497  :         else
; 498  :         {
; 499  :             p->HASH_CODE = CalculateHashCode(p->BLOCK, p->UNIT_WORD_COUNT);
; 500  :             p->IS_ZERO = false;
; 501  :             p->IS_ONE = false;

  000d6	83 e3 fd	 and	 ebx, -3			; fffffffdH
  000d9	89 5e 04	 mov	 DWORD PTR [esi+4], ebx

; 502  :             p->IS_EVEN = !(p->BLOCK[0] & 1);

  000dc	8b 02		 mov	 eax, DWORD PTR [edx]
  000de	c1 e0 02	 shl	 eax, 2
  000e1	f7 d0		 not	 eax
  000e3	33 c3		 xor	 eax, ebx
  000e5	83 e0 04	 and	 eax, 4
  000e8	33 c3		 xor	 eax, ebx
  000ea	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 503  :             p->TRAILING_ZERO_BITS_COUNT = GetTrailingZeroBitCount(p->BLOCK, p->UNIT_WORD_COUNT);

  000ed	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 462  :         while (word_count > 0)

  000f0	85 c0		 test	 eax, eax
  000f2	74 11		 je	 SHORT $LN18@CommitNumb
$LL17@CommitNumb:

; 463  :         {
; 464  :             --word_count;
; 465  :             if (*p != 0)

  000f4	8b 3a		 mov	 edi, DWORD PTR [edx]
  000f6	48		 dec	 eax
  000f7	85 ff		 test	 edi, edi
  000f9	75 31		 jne	 SHORT $LN27@CommitNumb

; 467  :             bit_count += __UNIT_TYPE_BIT_COUNT;

  000fb	83 c1 20	 add	 ecx, 32			; 00000020H

; 468  :             ++p;

  000fe	83 c2 04	 add	 edx, 4
  00101	85 c0		 test	 eax, eax
  00103	75 ef		 jne	 SHORT $LL17@CommitNumb
$LN18@CommitNumb:

; 469  :         }
; 470  :         // このルートには到達しないはず
; 471  :         return (0);

  00105	33 c0		 xor	 eax, eax
$LN16@CommitNumb:

; 504  :             p->IS_POWER_OF_TWO = p->TRAILING_ZERO_BITS_COUNT + 1 == p->UNIT_BIT_COUNT;
; 505  :             p->IS_COMMITTED = true;

  00107	83 4e 1c 02	 or	 DWORD PTR [esi+28], 2
  0010b	33 c9		 xor	 ecx, ecx
  0010d	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00110	ba 08 00 00 00	 mov	 edx, 8
  00115	40		 inc	 eax
  00116	3b 46 14	 cmp	 eax, DWORD PTR [esi+20]
  00119	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0011c	0f 44 ca	 cmove	 ecx, edx
  0011f	83 e0 f7	 and	 eax, -9			; fffffff7H
  00122	5b		 pop	 ebx
  00123	0b c8		 or	 ecx, eax
  00125	5f		 pop	 edi

; 506  :         }
; 507  :     }

  00126	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00129	5e		 pop	 esi
  0012a	5d		 pop	 ebp
  0012b	c3		 ret	 0
$LN27@CommitNumb:
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_inline_func.h

; 511  :             _BitScanForward(&pos, x);

  0012c	0f bc c7	 bsf	 eax, edi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp

; 466  :                 return (bit_count + _TZCNT_ALT_UNIT(*p));

  0012f	03 c1		 add	 eax, ecx
  00131	eb d4		 jmp	 SHORT $LN16@CommitNumb
?CommitNumber@Internal@Core@Math@Palmtree@@YAXPAU__tag_NUMBER_HEADER@1234@@Z ENDP ; Palmtree::Math::Core::Internal::CommitNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ PROC ; Palmtree::Math::Core::Internal::DeallocateHeapArea, COMDAT

; 1089 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1090 :         if (hLocalHeap != nullptr)

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA ; Palmtree::Math::Core::Internal::hLocalHeap
  00027	85 c0		 test	 eax, eax
  00029	74 11		 je	 SHORT $LN2@Deallocate

; 1091 :         {
; 1092 :             HeapDestroy(hLocalHeap);

  0002b	50		 push	 eax
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4

; 1093 :             hLocalHeap = nullptr;

  00032	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA, 0 ; Palmtree::Math::Core::Internal::hLocalHeap
$LN2@Deallocate:

; 1094 :         }
; 1095 :     }

  0003c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00046	59		 pop	 ecx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeallocateHeapArea@Internal@Core@Math@Palmtree@@YAXXZ ENDP ; Palmtree::Math::Core::Internal::DeallocateHeapArea
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_memory.cpp
;	COMDAT ?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ PROC ; Palmtree::Math::Core::Internal::AllocateHeapArea, COMDAT

; 1081 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1082 :         hLocalHeap = HeapCreate(0, 0x1000, 0);

  00022	6a 00		 push	 0
  00024	68 00 10 00 00	 push	 4096			; 00001000H
  00029	6a 00		 push	 0
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapCreate@12

; 1083 :         if (hLocalHeap == nullptr)

  00031	33 c9		 xor	 ecx, ecx
  00033	a3 00 00 00 00	 mov	 DWORD PTR ?hLocalHeap@Internal@Core@Math@Palmtree@@3PAXA, eax ; Palmtree::Math::Core::Internal::hLocalHeap
  00038	85 c0		 test	 eax, eax
  0003a	0f 95 c1	 setne	 cl
  0003d	8b c1		 mov	 eax, ecx

; 1084 :             return (FALSE);
; 1085 :         return (TRUE);
; 1086 :     }

  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateHeapArea@Internal@Core@Math@Palmtree@@YAHXZ ENDP ; Palmtree::Math::Core::Internal::AllocateHeapArea
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::BadBufferException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 316  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@

; 317  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 1c		 push	 28			; 0000001cH
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GBadBufferException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::BadBufferException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::BadBufferException::~BadBufferException, COMDAT
; _this$ = ecx

; 316  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@

; 317  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 317  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1BadBufferException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::BadBufferException::~BadBufferException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException, COMDAT
; _this$ = ecx

; 312  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)
; 248  :         {
; 249  :         }
; 250  : 
; 251  :         NotEnoughMemoryException(const NotEnoughMemoryException& p) noexcept(true)
; 252  :             : Exception(p)
; 253  :         {
; 254  :         }
; 255  : 
; 256  :         virtual ~NotEnoughMemoryException() noexcept(true)
; 257  :         {
; 258  :         }
; 259  :     };
; 260  : 
; 261  :     class NotSupportedException
; 262  :         : public Exception
; 263  :     {
; 264  :     public:
; 265  :         NotSupportedException(const wchar_t* message) noexcept(true)
; 266  :             : Exception(PMC_STATUS_NOT_SUPPORTED, message)
; 267  :         {
; 268  :         }
; 269  : 
; 270  :         NotSupportedException(const NotSupportedException& p) noexcept(true)
; 271  :             : Exception(p)
; 272  :         {
; 273  :         }
; 274  : 
; 275  :         virtual ~NotSupportedException() noexcept(true)
; 276  :         {
; 277  :         }
; 278  :     };
; 279  : 
; 280  :     class InternalErrorException
; 281  :         : public Exception
; 282  :     {
; 283  :     public:
; 284  :         InternalErrorException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)
; 286  :         {
; 287  :         }
; 288  : 
; 289  :         InternalErrorException(const InternalErrorException& p) noexcept(true)
; 290  :             : Exception(p)
; 291  :         {
; 292  :         }
; 293  : 
; 294  :         virtual ~InternalErrorException() noexcept(true)
; 295  :         {
; 296  :         }
; 297  :     };
; 298  : 
; 299  :     class BadBufferException
; 300  :         : public Exception
; 301  :     {
; 302  :     private:
; 303  :         const wchar_t* _data;
; 304  :     public:
; 305  :         BadBufferException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 306  :             : Exception(PMC_STATUS_BAD_BUFFER, message, data)
; 307  :         {
; 308  :         }
; 309  : 
; 310  :         BadBufferException(const BadBufferException& p) noexcept(true)
; 311  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 312  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@

; 313  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException, COMDAT
; _this$ = ecx

; 307  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	c7 41 0c ff fe
	ff ff		 mov	 DWORD PTR [ecx+12], -257 ; fffffeffH
  00051	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)
; 248  :         {
; 249  :         }
; 250  : 
; 251  :         NotEnoughMemoryException(const NotEnoughMemoryException& p) noexcept(true)
; 252  :             : Exception(p)
; 253  :         {
; 254  :         }
; 255  : 
; 256  :         virtual ~NotEnoughMemoryException() noexcept(true)
; 257  :         {
; 258  :         }
; 259  :     };
; 260  : 
; 261  :     class NotSupportedException
; 262  :         : public Exception
; 263  :     {
; 264  :     public:
; 265  :         NotSupportedException(const wchar_t* message) noexcept(true)
; 266  :             : Exception(PMC_STATUS_NOT_SUPPORTED, message)
; 267  :         {
; 268  :         }
; 269  : 
; 270  :         NotSupportedException(const NotSupportedException& p) noexcept(true)
; 271  :             : Exception(p)
; 272  :         {
; 273  :         }
; 274  : 
; 275  :         virtual ~NotSupportedException() noexcept(true)
; 276  :         {
; 277  :         }
; 278  :     };
; 279  : 
; 280  :     class InternalErrorException
; 281  :         : public Exception
; 282  :     {
; 283  :     public:
; 284  :         InternalErrorException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)
; 286  :         {
; 287  :         }
; 288  : 
; 289  :         InternalErrorException(const InternalErrorException& p) noexcept(true)
; 290  :             : Exception(p)
; 291  :         {
; 292  :         }
; 293  : 
; 294  :         virtual ~InternalErrorException() noexcept(true)
; 295  :         {
; 296  :         }
; 297  :     };
; 298  : 
; 299  :     class BadBufferException
; 300  :         : public Exception
; 301  :     {
; 302  :     private:
; 303  :         const wchar_t* _data;
; 304  :     public:
; 305  :         BadBufferException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 306  :             : Exception(PMC_STATUS_BAD_BUFFER, message, data)

  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 307  :         {

  0005b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BadBufferException@Internal@Core@Math@Palmtree@@6B@

; 308  :         }

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b c1		 mov	 eax, ecx
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0BadBufferException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::BadBufferException::BadBufferException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 295  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 296  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GInternalErrorException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException, COMDAT
; _this$ = ecx

; 295  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 296  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 296  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1InternalErrorException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::~InternalErrorException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 291  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)
; 248  :         {
; 249  :         }
; 250  : 
; 251  :         NotEnoughMemoryException(const NotEnoughMemoryException& p) noexcept(true)
; 252  :             : Exception(p)
; 253  :         {
; 254  :         }
; 255  : 
; 256  :         virtual ~NotEnoughMemoryException() noexcept(true)
; 257  :         {
; 258  :         }
; 259  :     };
; 260  : 
; 261  :     class NotSupportedException
; 262  :         : public Exception
; 263  :     {
; 264  :     public:
; 265  :         NotSupportedException(const wchar_t* message) noexcept(true)
; 266  :             : Exception(PMC_STATUS_NOT_SUPPORTED, message)
; 267  :         {
; 268  :         }
; 269  : 
; 270  :         NotSupportedException(const NotSupportedException& p) noexcept(true)
; 271  :             : Exception(p)
; 272  :         {
; 273  :         }
; 274  : 
; 275  :         virtual ~NotSupportedException() noexcept(true)
; 276  :         {
; 277  :         }
; 278  :     };
; 279  : 
; 280  :     class InternalErrorException
; 281  :         : public Exception
; 282  :     {
; 283  :     public:
; 284  :         InternalErrorException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)
; 286  :         {
; 287  :         }
; 288  : 
; 289  :         InternalErrorException(const InternalErrorException& p) noexcept(true)
; 290  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 291  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 292  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_data$ = 12						; size = 4
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException, COMDAT
; _this$ = ecx

; 286  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	c7 41 0c 00 ff
	ff ff		 mov	 DWORD PTR [ecx+12], -256 ; ffffff00H
  00051	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)
; 248  :         {
; 249  :         }
; 250  : 
; 251  :         NotEnoughMemoryException(const NotEnoughMemoryException& p) noexcept(true)
; 252  :             : Exception(p)
; 253  :         {
; 254  :         }
; 255  : 
; 256  :         virtual ~NotEnoughMemoryException() noexcept(true)
; 257  :         {
; 258  :         }
; 259  :     };
; 260  : 
; 261  :     class NotSupportedException
; 262  :         : public Exception
; 263  :     {
; 264  :     public:
; 265  :         NotSupportedException(const wchar_t* message) noexcept(true)
; 266  :             : Exception(PMC_STATUS_NOT_SUPPORTED, message)
; 267  :         {
; 268  :         }
; 269  : 
; 270  :         NotSupportedException(const NotSupportedException& p) noexcept(true)
; 271  :             : Exception(p)
; 272  :         {
; 273  :         }
; 274  : 
; 275  :         virtual ~NotSupportedException() noexcept(true)
; 276  :         {
; 277  :         }
; 278  :     };
; 279  : 
; 280  :     class InternalErrorException
; 281  :         : public Exception
; 282  :     {
; 283  :     public:
; 284  :         InternalErrorException(const wchar_t* message, const wchar_t* data) noexcept(true)
; 285  :             : Exception(PMC_STATUS_INTERNAL_ERROR, message, data)

  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 286  :         {

  0005b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7InternalErrorException@Internal@Core@Math@Palmtree@@6B@

; 287  :         }

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b c1		 mov	 eax, ecx
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InternalErrorException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::InternalErrorException::InternalErrorException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 257  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@

; 258  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GNotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::~NotEnoughMemoryException, COMDAT
; _this$ = ecx

; 257  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@

; 258  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 258  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1NotEnoughMemoryException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::~NotEnoughMemoryException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException, COMDAT
; _this$ = ecx

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)
; 248  :         {
; 249  :         }
; 250  : 
; 251  :         NotEnoughMemoryException(const NotEnoughMemoryException& p) noexcept(true)
; 252  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 253  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@

; 254  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z PROC ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException, COMDAT
; _this$ = ecx

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 48   :         {
; 49   :             _code = code;
; 50   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00044	c7 41 0c f7 ff
	ff ff		 mov	 DWORD PTR [ecx+12], -9	; fffffff7H
  0004b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 51   :             _data = nullptr;

  0004e	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 52   :         }
; 53   : 
; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)
; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;
; 58   :             _data = data;
; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)
; 120  :         {
; 121  :         }
; 122  : 
; 123  :         virtual ~ArgumentNullException() noexcept(true)
; 124  :         {
; 125  :         }
; 126  :     };
; 127  : 
; 128  :     class ArgumentOutOfRangeException
; 129  :         : public Exception
; 130  :     {
; 131  :     public:
; 132  :         ArgumentOutOfRangeException(const wchar_t* message) noexcept(true)
; 133  :             : Exception(PMC_STATUS_ARGUMENT_OUT_OF_RANGE_ERROR, message)
; 134  :         {
; 135  :         }
; 136  : 
; 137  :         ArgumentOutOfRangeException(const ArgumentOutOfRangeException& p) noexcept(true)
; 138  :             : Exception(p)
; 139  :         {
; 140  :         }
; 141  : 
; 142  :         virtual ~ArgumentOutOfRangeException() noexcept(true)
; 143  :         {
; 144  :         }
; 145  :     };
; 146  : 
; 147  :     class OverflowException
; 148  :         : public Exception
; 149  :     {
; 150  :     public:
; 151  :         OverflowException(const wchar_t* message) noexcept(true)
; 152  :             : Exception(PMC_STATUS_OVERFLOW, message)
; 153  :         {
; 154  :         }
; 155  : 
; 156  :         OverflowException(const OverflowException& p) noexcept(true)
; 157  :             : Exception(p)
; 158  :         {
; 159  :         }
; 160  : 
; 161  :         virtual ~OverflowException() noexcept(true)
; 162  :         {
; 163  :         }
; 164  :     };
; 165  : 
; 166  :     class DivisionByZeroException
; 167  :         : public Exception
; 168  :     {
; 169  :     public:
; 170  :         DivisionByZeroException(const wchar_t* message) noexcept(true)
; 171  :             : Exception(PMC_STATUS_DIVISION_BY_ZERO, message)
; 172  :         {
; 173  :         }
; 174  : 
; 175  :         DivisionByZeroException(const DivisionByZeroException& p) noexcept(true)
; 176  :             : Exception(p)
; 177  :         {
; 178  :         }
; 179  : 
; 180  :         virtual ~DivisionByZeroException() noexcept(true)
; 181  :         {
; 182  :         }
; 183  :     };
; 184  : 
; 185  :     class ArithmeticException
; 186  :         : public Exception
; 187  :     {
; 188  :     public:
; 189  :         ArithmeticException(const wchar_t* message) noexcept(true)
; 190  :             : Exception(PMC_STATUS_ARITHMETIC_ERROR, message)
; 191  :         {
; 192  :         }
; 193  : 
; 194  :         ArithmeticException(const OverflowException& p) noexcept(true)
; 195  :             : Exception(p)
; 196  :         {
; 197  :         }
; 198  : 
; 199  :         virtual ~ArithmeticException() noexcept(true)
; 200  :         {
; 201  :         }
; 202  :     };
; 203  : 
; 204  :     class FormatException
; 205  :         : public Exception
; 206  :     {
; 207  :     public:
; 208  :         FormatException(const wchar_t* message) noexcept(true)
; 209  :             : Exception(PMC_STATUS_FORMAT_ERROR, message)
; 210  :         {
; 211  :         }
; 212  : 
; 213  :         FormatException(const FormatException& p) noexcept(true)
; 214  :             : Exception(p)
; 215  :         {
; 216  :         }
; 217  : 
; 218  :         virtual ~FormatException() noexcept(true)
; 219  :         {
; 220  :         }
; 221  :     };
; 222  : 
; 223  :     class InsufficientBufferException
; 224  :         : public Exception
; 225  :     {
; 226  :     public:
; 227  :         InsufficientBufferException(const wchar_t* message)
; 228  :             : Exception(PMC_STATUS_INSUFFICIENT_BUFFER, message)
; 229  :         {
; 230  :         }
; 231  : 
; 232  :         InsufficientBufferException(const InsufficientBufferException& p) noexcept(true)
; 233  :             : Exception(p)
; 234  :         {
; 235  :         }
; 236  : 
; 237  :         virtual ~InsufficientBufferException() noexcept(true)
; 238  :         {
; 239  :         }
; 240  :     };
; 241  : 
; 242  :     class NotEnoughMemoryException
; 243  :         : public Exception
; 244  :     {
; 245  :     public:
; 246  :         NotEnoughMemoryException(const wchar_t* message) noexcept(true)
; 247  :             : Exception(PMC_STATUS_NOT_ENOUGH_MEMORY, message)

  00055	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 248  :         {

  0005c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7NotEnoughMemoryException@Internal@Core@Math@Palmtree@@6B@

; 249  :         }

  00062	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00069	8b c1		 mov	 eax, ecx
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0NotEnoughMemoryException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ENDP ; Palmtree::Math::Core::Internal::NotEnoughMemoryException::NotEnoughMemoryException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 124  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 125  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GArgumentNullException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException, COMDAT
; _this$ = ecx

; 124  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 125  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 125  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentNullException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::~ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 120  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)
; 115  :         {
; 116  :         }
; 117  : 
; 118  :         ArgumentNullException(const ArgumentNullException& p) noexcept(true)
; 119  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 120  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 121  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_param_name$ = 12					; size = 4
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z PROC ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException, COMDAT
; _this$ = ecx

; 115  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _param_name$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	c7 41 0c fe ff
	ff ff		 mov	 DWORD PTR [ecx+12], -2	; fffffffeH
  00051	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)
; 101  :         {
; 102  :         }
; 103  : 
; 104  :         virtual ~ArgumentException() noexcept(true)
; 105  :         {
; 106  :         }
; 107  :     };
; 108  : 
; 109  :     class ArgumentNullException
; 110  :         : public Exception
; 111  :     {
; 112  :     public:
; 113  :         ArgumentNullException(const wchar_t* message, const wchar_t* param_name) noexcept(true)
; 114  :             : Exception(PMC_STATUS_ARGUMENT_NULL_ERROR, message, param_name)

  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 115  :         {

  0005b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentNullException@Internal@Core@Math@Palmtree@@6B@

; 116  :         }

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b c1		 mov	 eax, ecx
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentNullException@Internal@Core@Math@Palmtree@@QAE@PB_W0@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentNullException::ArgumentNullException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::ArgumentException::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 105  :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@

; 106  :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00043	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0004d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00052	83 c4 04	 add	 esp, 4
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN12@scalar
  0005b	6a 18		 push	 24			; 00000018H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GArgumentException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentException::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ PROC ; Palmtree::Math::Core::Internal::ArgumentException::~ArgumentException, COMDAT
; _this$ = ecx

; 105  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@

; 106  :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 70   :         {

  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00040	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00043	50		 push	 eax
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0004a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0004f	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 106  :         }

  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__unwindfunclet$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ArgumentException@Internal@Core@Math@Palmtree@@UAE@XZ ENDP ; Palmtree::Math::Core::Internal::ArgumentException::~ArgumentException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException, COMDAT
; _this$ = ecx

; 101  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)
; 96   :         {
; 97   :         }
; 98   : 
; 99   :         ArgumentException(const ArgumentException& p) noexcept(true)
; 100  :             : Exception(p)

  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 101  :         {

  0005f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@

; 102  :         }

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b c2		 mov	 eax, edx
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z PROC ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException, COMDAT
; _this$ = ecx

; 96   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 48   :         {
; 49   :             _code = code;
; 50   :             _message = message;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00044	c7 41 0c ff ff
	ff ff		 mov	 DWORD PTR [ecx+12], -1
  0004b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 51   :             _data = nullptr;

  0004e	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 52   :         }
; 53   : 
; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)
; 55   :         {
; 56   :             _code = code;
; 57   :             _message = message;
; 58   :             _data = data;
; 59   :         }
; 60   : 
; 61   :     public:
; 62   :         Exception(const Exception& p) noexcept(true)
; 63   :         {
; 64   :             _code = p._code;
; 65   :             _message = p._message;
; 66   :             _data = p._data;
; 67   :         }
; 68   : 
; 69   :         virtual ~Exception() noexcept(true)
; 70   :         {
; 71   :         }
; 72   : 
; 73   :         PMC_STATUS_CODE GetStatusCode() const noexcept(true)
; 74   :         {
; 75   :             return (_code);
; 76   :         }
; 77   : 
; 78   :         wchar_t const* What() const noexcept(true)
; 79   :         {
; 80   :             return (_message);
; 81   :         }
; 82   : 
; 83   :         wchar_t const* Data() const noexcept(true)
; 84   :         {
; 85   :             return (_data);
; 86   :         }
; 87   : 
; 88   :     };
; 89   : 
; 90   :     class ArgumentException
; 91   :         : public Exception
; 92   :     {
; 93   :     public:
; 94   :         ArgumentException(const wchar_t* message) noexcept(true)
; 95   :             : Exception(PMC_STATUS_ARGUMENT_ERROR, message)

  00055	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 96   :         {

  0005c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ArgumentException@Internal@Core@Math@Palmtree@@6B@

; 97   :         }

  00062	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00069	8b c1		 mov	 eax, ecx
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__unwindfunclet$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ; Palmtree::Math::Core::Internal::Exception::~Exception
__ehhandler$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ArgumentException@Internal@Core@Math@Palmtree@@QAE@PB_W@Z ENDP ; Palmtree::Math::Core::Internal::ArgumentException::ArgumentException
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z PROC ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 70   :         {

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0002f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00036	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00039	50		 push	 eax
  0003a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00040	e8 00 00 00 00	 call	 ___std_exception_destroy
  00045	83 c4 04	 add	 esp, 4
  00048	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004c	74 0b		 je	 SHORT $LN9@scalar
  0004e	6a 18		 push	 24			; 00000018H
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00056	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00059	8b c6		 mov	 eax, esi
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5e		 pop	 esi
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GException@Internal@Core@Math@Palmtree@@UAEPAXI@Z ENDP ; Palmtree::Math::Core::Internal::Exception::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ
_TEXT	SEGMENT
?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ PROC ; Palmtree::Math::Core::Internal::Exception::GetStatusCode, COMDAT
; _this$ = ecx

; 75   :             return (_code);

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 76   :         }

  00003	c3		 ret	 0
?GetStatusCode@Exception@Internal@Core@Math@Palmtree@@QBEHXZ ENDP ; Palmtree::Math::Core::Internal::Exception::GetStatusCode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ PROC	; Palmtree::Math::Core::Internal::Exception::~Exception, COMDAT
; _this$ = ecx

; 70   :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@

; 71   :         }

  0002c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 86   :         __std_exception_destroy(&_Data);

  00033	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00036	50		 push	 eax
  00037	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 71   :         }

  00045	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00048	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004f	59		 pop	 ecx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Exception@Internal@Core@Math@Palmtree@@UAE@XZ ENDP	; Palmtree::Math::Core::Internal::Exception::~Exception
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 62   :         Exception(const Exception& p) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b d1		 mov	 edx, ecx
  00025	89 55 f0	 mov	 DWORD PTR _this$[ebp], edx
  00028	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  0002b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7exception@std@@6B@
  00031	66 0f d6 42 04	 movq	 QWORD PTR [edx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 62   :         Exception(const Exception& p) noexcept(true)

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   :         {
; 64   :             _code = p._code;

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00040	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00046	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00049	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 65   :             _message = p._message;

  0004c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0004f	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 66   :             _data = p._data;

  00052	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00055	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 67   :         }

  00058	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005f	8b c2		 mov	 eax, edx
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@QAE@ABV01234@@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
_data$ = 16						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 54   :         Exception(PMC_STATUS_CODE code, const wchar_t* message, const wchar_t* data) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :         {
; 56   :             _code = code;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _code$[ebp]
  0003e	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 57   :             _message = message;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  00044	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 58   :             _data = data;

  00047	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  0004a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  00050	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 59   :         }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b c1		 mov	 eax, ecx
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W0@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h
;	COMDAT ??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_code$ = 8						; size = 4
_message$ = 12						; size = 4
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z PROC ; Palmtree::Math::Core::Internal::Exception::Exception, COMDAT
; _this$ = ecx

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h

; 50   :     {

  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002f	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.uint\palmtree.math.core.uint\pmc_exception.h

; 47   :         Exception(PMC_STATUS_CODE code, const wchar_t* message) noexcept(true)

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 48   :         {
; 49   :             _code = code;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _code$[ebp]
  0003e	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 50   :             _message = message;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  00044	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7Exception@Internal@Core@Math@Palmtree@@6B@
  0004a	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 51   :             _data = nullptr;

  0004d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 52   :         }

  00054	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005b	8b c1		 mov	 eax, ecx
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
__ehhandler$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@Internal@Core@Math@Palmtree@@IAE@HPB_W@Z ENDP ; Palmtree::Math::Core::Internal::Exception::Exception
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_Gexception@std@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 86   :         __std_exception_destroy(&_Data);

  00025	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ___std_exception_destroy
  00034	83 c4 04	 add	 esp, 4
  00037	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0003b	74 0b		 je	 SHORT $LN6@scalar
  0003d	6a 0c		 push	 12			; 0000000cH
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00045	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00048	8b c6		 mov	 eax, esi
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_Gexception@std@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_Gexception@std@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 91   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 92   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 85   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1exception@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 86   :         __std_exception_destroy(&_Data);

  00022	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00025	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ___std_exception_destroy
  00031	83 c4 04	 add	 esp, 4

; 87   :     }

  00034	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00037	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003e	59		 pop	 ecx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1exception@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1exception@std@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@XZ
_TEXT	SEGMENT
??0exception@std@@QAE@XZ PROC				; std::exception::exception, COMDAT
; _this$ = ecx

; 50   :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 51   :     }

  0000e	8b c1		 mov	 eax, ecx
  00010	c3		 ret	 0
??0exception@std@@QAE@XZ ENDP				; std::exception::exception
_TEXT	ENDS
END
