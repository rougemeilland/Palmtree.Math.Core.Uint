	.file	"pmc_subtruct.c"
	.text
	.p2align 4,,15
	.def	_Subtruct_X_1W.isra.0;	.scl	3;	.type	32;	.endef
_Subtruct_X_1W.isra.0:
LFB5540:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	leal	4(%eax), %esi
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	movl	(%eax), %eax
	movl	20(%esp), %edi
	subl	%ecx, %eax
	movl	%eax, %ecx
	setb	%al
	movl	%ecx, (%edi)
	subl	$1, %edx
	je	L2
	leal	4(%edi), %ebx
	movl	%ebx, %edi
	testb	%al, %al
	jne	L3
	jmp	L7
	.p2align 4,,10
L21:
	movl	%edi, %ebx
	testb	%al, %al
	je	L7
L3:
	addl	$4, %esi
	movl	-4(%esi), %ebp
	addb	$-1, %al
	movl	$0, %ecx
	leal	4(%ebx), %edi
	movl	%ebp, %eax
	sbbl	%ecx, %eax
	movl	%eax, (%ebx)
	setc	%al
	subl	$1, %edx
	jne	L21
L2:
	testb	%al, %al
	jne	L9
L8:
	xorl	%eax, %eax
L1:
	popl	%ebx
	.cfi_remember_state
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,10
L7:
	.cfi_restore_state
	movsl
	subl	$1, %edx
	je	L8
	movsl
	subl	$1, %edx
	jne	L7
	jmp	L8
L9:
	movl	$-258, %eax
	jmp	L1
	.cfi_endproc
LFE5540:
	.p2align 4,,15
	.globl	_Subtruct_Imp
	.def	_Subtruct_Imp;	.scl	2;	.type	32;	.endef
_Subtruct_Imp:
LFB5533:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$12, %esp
	.cfi_def_cfa_offset 32
	movl	44(%esp), %eax
	movl	32(%esp), %esi
	movl	48(%esp), %ebp
	shrl	$5, %eax
	movl	%eax, 8(%esp)
	je	L40
	movl	%esi, (%esp)
	movl	40(%esp), %edi
	movl	%eax, 4(%esp)
	xorl	%eax, %eax
	.p2align 4,,10
L27:
	movl	(%esp), %edx
	movl	%edi, %ebx
	movl	%ebp, %esi
/APP
 # 842 "../autogenerated_inline_func.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	sbbl	(%ebx), %ecx
	movl	%ecx, (%esi)
	movl	4(%edx), %ecx
	sbbl	4(%ebx), %ecx
	movl	%ecx, 4(%esi)
	movl	8(%edx), %ecx
	sbbl	8(%ebx), %ecx
	movl	%ecx, 8(%esi)
	movl	12(%edx), %ecx
	sbbl	12(%ebx), %ecx
	movl	%ecx, 12(%esi)
	movl	16(%edx), %ecx
	sbbl	16(%ebx), %ecx
	movl	%ecx, 16(%esi)
	movl	20(%edx), %ecx
	sbbl	20(%ebx), %ecx
	movl	%ecx, 20(%esi)
	movl	24(%edx), %ecx
	sbbl	24(%ebx), %ecx
	movl	%ecx, 24(%esi)
	movl	28(%edx), %ecx
	sbbl	28(%ebx), %ecx
	movl	%ecx, 28(%esi)
	movl	32(%edx), %ecx
	sbbl	32(%ebx), %ecx
	movl	%ecx, 32(%esi)
	movl	36(%edx), %ecx
	sbbl	36(%ebx), %ecx
	movl	%ecx, 36(%esi)
	movl	40(%edx), %ecx
	sbbl	40(%ebx), %ecx
	movl	%ecx, 40(%esi)
	movl	44(%edx), %ecx
	sbbl	44(%ebx), %ecx
	movl	%ecx, 44(%esi)
	movl	48(%edx), %ecx
	sbbl	48(%ebx), %ecx
	movl	%ecx, 48(%esi)
	movl	52(%edx), %ecx
	sbbl	52(%ebx), %ecx
	movl	%ecx, 52(%esi)
	movl	56(%edx), %ecx
	sbbl	56(%ebx), %ecx
	movl	%ecx, 56(%esi)
	movl	60(%edx), %ecx
	sbbl	60(%ebx), %ecx
	movl	%ecx, 60(%esi)
	movl	64(%edx), %ecx
	sbbl	64(%ebx), %ecx
	movl	%ecx, 64(%esi)
	movl	68(%edx), %ecx
	sbbl	68(%ebx), %ecx
	movl	%ecx, 68(%esi)
	movl	72(%edx), %ecx
	sbbl	72(%ebx), %ecx
	movl	%ecx, 72(%esi)
	movl	76(%edx), %ecx
	sbbl	76(%ebx), %ecx
	movl	%ecx, 76(%esi)
	movl	80(%edx), %ecx
	sbbl	80(%ebx), %ecx
	movl	%ecx, 80(%esi)
	movl	84(%edx), %ecx
	sbbl	84(%ebx), %ecx
	movl	%ecx, 84(%esi)
	movl	88(%edx), %ecx
	sbbl	88(%ebx), %ecx
	movl	%ecx, 88(%esi)
	movl	92(%edx), %ecx
	sbbl	92(%ebx), %ecx
	movl	%ecx, 92(%esi)
	movl	96(%edx), %ecx
	sbbl	96(%ebx), %ecx
	movl	%ecx, 96(%esi)
	movl	100(%edx), %ecx
	sbbl	100(%ebx), %ecx
	movl	%ecx, 100(%esi)
	movl	104(%edx), %ecx
	sbbl	104(%ebx), %ecx
	movl	%ecx, 104(%esi)
	movl	108(%edx), %ecx
	sbbl	108(%ebx), %ecx
	movl	%ecx, 108(%esi)
	movl	112(%edx), %ecx
	sbbl	112(%ebx), %ecx
	movl	%ecx, 112(%esi)
	movl	116(%edx), %ecx
	sbbl	116(%ebx), %ecx
	movl	%ecx, 116(%esi)
	movl	120(%edx), %ecx
	sbbl	120(%ebx), %ecx
	movl	%ecx, 120(%esi)
	movl	124(%edx), %ecx
	sbbl	124(%ebx), %ecx
	movl	%ecx, 124(%esi)
	setc	%al
 # 0 "" 2
/NO_APP
	subl	$-128, (%esp)
	subl	$-128, %edi
	subl	$-128, %ebp
	subl	$1, 4(%esp)
	jne	L27
	movl	8(%esp), %edx
	movl	32(%esp), %esi
	movl	48(%esp), %ebp
	sall	$7, %edx
	addl	%edx, 40(%esp)
	addl	%edx, %esi
	addl	%edx, %ebp
L26:
	testb	$16, 44(%esp)
	jne	L74
L28:
	testb	$8, 44(%esp)
	jne	L75
L29:
	testb	$4, 44(%esp)
	je	L30
	movl	%esi, %edx
	movl	40(%esp), %ebx
	movl	%ebp, %edi
/APP
 # 4058 "../autogenerated_inline_func.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	sbbl	(%ebx), %ecx
	movl	%ecx, (%edi)
	movl	4(%edx), %ecx
	sbbl	4(%ebx), %ecx
	movl	%ecx, 4(%edi)
	movl	8(%edx), %ecx
	sbbl	8(%ebx), %ecx
	movl	%ecx, 8(%edi)
	movl	12(%edx), %ecx
	sbbl	12(%ebx), %ecx
	movl	%ecx, 12(%edi)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$16, 40(%esp)
	addl	$16, %esi
	addl	$16, %ebp
L30:
	testb	$2, 44(%esp)
	je	L31
	movl	%esi, %edx
	movl	40(%esp), %ebx
	movl	%ebp, %edi
/APP
 # 4470 "../autogenerated_inline_func.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	sbbl	(%ebx), %ecx
	movl	%ecx, (%edi)
	movl	4(%edx), %ecx
	sbbl	4(%ebx), %ecx
	movl	%ecx, 4(%edi)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$8, 40(%esp)
	addl	$8, %esi
	addl	$8, %ebp
L31:
	testb	$1, 44(%esp)
	jne	L76
L32:
	movl	36(%esp), %ecx
	subl	44(%esp), %ecx
	je	L33
	xorl	%ebx, %ebx
	movl	%ebp, %edi
	testb	%al, %al
	jne	L34
	jmp	L38
	.p2align 4,,10
L69:
	movl	%edi, %ebp
	testb	%al, %al
	je	L38
L34:
	addl	$4, %esi
	movl	-4(%esi), %edx
	addb	$-1, %al
	leal	4(%ebp), %edi
	sbbl	%ebx, %edx
	movl	%edx, 0(%ebp)
	setc	%al
	subl	$1, %ecx
	jne	L69
L33:
	testb	%al, %al
	jne	L41
L39:
	xorl	%eax, %eax
L25:
	addl	$12, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,10
L38:
	.cfi_restore_state
	movsl
	subl	$1, %ecx
	je	L39
	movsl
	subl	$1, %ecx
	jne	L38
	jmp	L39
	.p2align 4,,10
L76:
	movl	40(%esp), %edi
	movl	(%esi), %edx
	addb	$-1, %al
	movl	(%edi), %ecx
	sbbl	%ecx, %edx
	setc	%al
	movl	%edx, 0(%ebp)
	addl	$4, %esi
	addl	$4, %ebp
	jmp	L32
	.p2align 4,,10
L75:
	movl	%esi, %edx
	movl	40(%esp), %ebx
	movl	%ebp, %edi
/APP
 # 3466 "../autogenerated_inline_func.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	sbbl	(%ebx), %ecx
	movl	%ecx, (%edi)
	movl	4(%edx), %ecx
	sbbl	4(%ebx), %ecx
	movl	%ecx, 4(%edi)
	movl	8(%edx), %ecx
	sbbl	8(%ebx), %ecx
	movl	%ecx, 8(%edi)
	movl	12(%edx), %ecx
	sbbl	12(%ebx), %ecx
	movl	%ecx, 12(%edi)
	movl	16(%edx), %ecx
	sbbl	16(%ebx), %ecx
	movl	%ecx, 16(%edi)
	movl	20(%edx), %ecx
	sbbl	20(%ebx), %ecx
	movl	%ecx, 20(%edi)
	movl	24(%edx), %ecx
	sbbl	24(%ebx), %ecx
	movl	%ecx, 24(%edi)
	movl	28(%edx), %ecx
	sbbl	28(%ebx), %ecx
	movl	%ecx, 28(%edi)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$32, %esi
	addl	$32, 40(%esp)
	addl	$32, %ebp
	jmp	L29
	.p2align 4,,10
L74:
	movl	%esi, %edx
	movl	40(%esp), %ebx
	movl	%ebp, %edi
/APP
 # 2514 "../autogenerated_inline_func.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	sbbl	(%ebx), %ecx
	movl	%ecx, (%edi)
	movl	4(%edx), %ecx
	sbbl	4(%ebx), %ecx
	movl	%ecx, 4(%edi)
	movl	8(%edx), %ecx
	sbbl	8(%ebx), %ecx
	movl	%ecx, 8(%edi)
	movl	12(%edx), %ecx
	sbbl	12(%ebx), %ecx
	movl	%ecx, 12(%edi)
	movl	16(%edx), %ecx
	sbbl	16(%ebx), %ecx
	movl	%ecx, 16(%edi)
	movl	20(%edx), %ecx
	sbbl	20(%ebx), %ecx
	movl	%ecx, 20(%edi)
	movl	24(%edx), %ecx
	sbbl	24(%ebx), %ecx
	movl	%ecx, 24(%edi)
	movl	28(%edx), %ecx
	sbbl	28(%ebx), %ecx
	movl	%ecx, 28(%edi)
	movl	32(%edx), %ecx
	sbbl	32(%ebx), %ecx
	movl	%ecx, 32(%edi)
	movl	36(%edx), %ecx
	sbbl	36(%ebx), %ecx
	movl	%ecx, 36(%edi)
	movl	40(%edx), %ecx
	sbbl	40(%ebx), %ecx
	movl	%ecx, 40(%edi)
	movl	44(%edx), %ecx
	sbbl	44(%ebx), %ecx
	movl	%ecx, 44(%edi)
	movl	48(%edx), %ecx
	sbbl	48(%ebx), %ecx
	movl	%ecx, 48(%edi)
	movl	52(%edx), %ecx
	sbbl	52(%ebx), %ecx
	movl	%ecx, 52(%edi)
	movl	56(%edx), %ecx
	sbbl	56(%ebx), %ecx
	movl	%ecx, 56(%edi)
	movl	60(%edx), %ecx
	sbbl	60(%ebx), %ecx
	movl	%ecx, 60(%edi)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$64, %esi
	addl	$64, 40(%esp)
	addl	$64, %ebp
	jmp	L28
	.p2align 4,,10
L40:
	xorl	%eax, %eax
	jmp	L26
L41:
	movl	$-258, %eax
	jmp	L25
	.cfi_endproc
LFE5533:
	.p2align 4,,15
	.globl	_PMC_Subtruct_I_X@12
	.def	_PMC_Subtruct_I_X@12;	.scl	2;	.type	32;	.endef
_PMC_Subtruct_I_X@12:
LFB5534:
	.cfi_startproc
	pushl	%edi
	.cfi_def_cfa_offset 8
	.cfi_offset 7, -8
	pushl	%esi
	.cfi_def_cfa_offset 12
	.cfi_offset 6, -12
	pushl	%ebx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	subl	$32, %esp
	.cfi_def_cfa_offset 48
	movl	52(%esp), %ebx
	movl	48(%esp), %edi
	movl	56(%esp), %esi
	testl	%ebx, %ebx
	je	L82
	testl	%esi, %esi
	je	L82
	movl	%ebx, (%esp)
	call	_CheckNumber
	testl	%eax, %eax
	jne	L77
	movzbl	24(%ebx), %edx
	andl	$2, %edx
	testl	%edi, %edi
	jne	L79
	testb	%dl, %dl
	je	L84
	movl	$0, (%esi)
L77:
	addl	$32, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L79:
	.cfi_restore_state
	testb	%dl, %dl
	jne	L81
/APP
 # 603 "../pmc_inline_func.h" 1
	bsrl %edi, %edx
 # 0 "" 2
/NO_APP
	addl	$1, %edx
	cmpl	12(%ebx), %edx
	jb	L84
	movl	32(%ebx), %edx
	subl	(%edx), %edi
	jb	L84
L81:
	movl	%edi, (%esi)
	addl	$32, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret	$12
L84:
	.cfi_restore_state
	movl	$-2, %eax
	jmp	L77
	.p2align 4,,10
L82:
	movl	$-1, %eax
	jmp	L77
	.cfi_endproc
LFE5534:
	.p2align 4,,15
	.globl	_PMC_Subtruct_X_I@12
	.def	_PMC_Subtruct_X_I@12;	.scl	2;	.type	32;	.endef
_PMC_Subtruct_X_I@12:
LFB5535:
	.cfi_startproc
	pushl	%edi
	.cfi_def_cfa_offset 8
	.cfi_offset 7, -8
	pushl	%esi
	.cfi_def_cfa_offset 12
	.cfi_offset 6, -12
	pushl	%ebx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	subl	$32, %esp
	.cfi_def_cfa_offset 48
	movl	48(%esp), %ebx
	movl	56(%esp), %edi
	testl	%ebx, %ebx
	je	L96
	testl	%edi, %edi
	je	L96
	movl	%ebx, (%esp)
	call	_CheckNumber
	movl	%eax, %esi
	testl	%eax, %eax
	jne	L86
	testb	$2, 24(%ebx)
	je	L88
	movl	52(%esp), %edx
	testl	%edx, %edx
	jne	L97
	movl	$_number_zero, (%edi)
L86:
	addl	$32, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	movl	%esi, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L88:
	.cfi_restore_state
	movl	52(%esp), %eax
	testl	%eax, %eax
	je	L107
	movl	12(%ebx), %edx
/APP
 # 603 "../pmc_inline_func.h" 1
	bsrl 52(%esp), %eax
 # 0 "" 2
/NO_APP
	addl	$1, %eax
	cmpl	%eax, %edx
	jnb	L108
L97:
	addl	$32, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	movl	$-2, %esi
	movl	%esi, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L108:
	.cfi_restore_state
	leal	28(%esp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, 8(%esp)
	leal	24(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	jne	L98
	movl	24(%esp), %ecx
	movl	8(%ebx), %edx
	movl	32(%ebx), %eax
	movl	32(%ecx), %ecx
	movl	%ecx, (%esp)
	movl	52(%esp), %ecx
	call	_Subtruct_X_1W.isra.0
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L109
	movl	28(%esp), %eax
	movl	%eax, 4(%esp)
	movl	24(%esp), %eax
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	_CheckBlockLight
	testl	%eax, %eax
	jne	L98
	movl	24(%esp), %eax
	movl	%eax, (%esp)
	call	_CommitNumber
	movl	24(%esp), %eax
	testb	$2, 24(%eax)
	je	L95
	movl	%eax, (%esp)
	call	_DeallocateNumber
	movl	$_number_zero, %eax
L95:
	movl	%eax, (%edi)
	jmp	L86
	.p2align 4,,10
L98:
	addl	$32, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	movl	%eax, %esi
	movl	%esi, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L107:
	.cfi_restore_state
	leal	24(%esp), %eax
	movl	%ebx, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	jne	L98
	movl	24(%esp), %eax
	movl	%eax, (%edi)
	jmp	L86
	.p2align 4,,10
L109:
	movl	24(%esp), %eax
	movl	%ebx, %esi
	movl	%eax, (%esp)
	call	_DeallocateNumber
	cmpl	$-258, %ebx
	jne	L86
	jmp	L97
	.p2align 4,,10
L96:
	movl	$-1, %esi
	jmp	L86
	.cfi_endproc
LFE5535:
	.p2align 4,,15
	.globl	_PMC_Subtruct_L_X@16
	.def	_PMC_Subtruct_L_X@16;	.scl	2;	.type	32;	.endef
_PMC_Subtruct_L_X@16:
LFB5536:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$44, %esp
	.cfi_def_cfa_offset 64
	movl	72(%esp), %ebx
	movl	64(%esp), %edi
	movl	68(%esp), %ebp
	movl	76(%esp), %esi
	testl	%ebx, %ebx
	je	L120
	testl	%esi, %esi
	je	L120
	movl	%ebx, (%esp)
	call	_CheckNumber
	testl	%eax, %eax
	jne	L110
	movzbl	24(%ebx), %edx
	movl	%ebp, %ecx
	andl	$2, %edx
	orl	%edi, %ecx
	jne	L112
	testb	%dl, %dl
	je	L124
	movl	$0, (%esi)
	movl	$0, 4(%esi)
L110:
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L112:
	.cfi_restore_state
	testb	%dl, %dl
	jne	L127
	movl	12(%ebx), %ecx
	testl	%ebp, %ebp
	jne	L114
	xorl	%edx, %edx
	testl	%edi, %edi
	je	L115
/APP
 # 603 "../pmc_inline_func.h" 1
	bsrl %edi, %edx
 # 0 "" 2
/NO_APP
	addl	$1, %edx
L115:
	cmpl	%ecx, %edx
	jb	L124
	movl	32(%ebx), %edx
	subl	(%edx), %edi
	movl	%edi, 28(%esp)
	jb	L124
	movl	28(%esp), %ecx
	movl	$0, 4(%esi)
	movl	%ecx, (%esi)
	jmp	L110
	.p2align 4,,10
L127:
	movl	%edi, (%esi)
	movl	%ebp, 4(%esi)
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L114:
	.cfi_restore_state
/APP
 # 603 "../pmc_inline_func.h" 1
	bsrl %ebp, %edx
 # 0 "" 2
/NO_APP
	addl	$33, %edx
	cmpl	%ecx, %edx
	jb	L124
	movl	32(%ebx), %edx
	subl	(%edx), %edi
	setb	%cl
	movl	%edi, 28(%esp)
	cmpl	$1, 8(%ebx)
	jbe	L128
	movl	4(%edx), %edx
	addb	$-1, %cl
	sbbl	%edx, %ebp
	movl	%ebp, 24(%esp)
	setc	%dl
L118:
	testb	%dl, %dl
	jne	L124
	movl	24(%esp), %ecx
	movl	28(%esp), %edi
	movl	%ecx, 4(%esi)
	movl	%edi, (%esi)
	jmp	L110
	.p2align 4,,10
L128:
	addb	$-1, %cl
	sbbl	%eax, %ebp
	movl	%ebp, 24(%esp)
	setc	%dl
	jmp	L118
	.p2align 4,,10
L120:
	movl	$-1, %eax
	jmp	L110
L124:
	movl	$-2, %eax
	jmp	L110
	.cfi_endproc
LFE5536:
	.p2align 4,,15
	.globl	_PMC_Subtruct_X_L@16
	.def	_PMC_Subtruct_X_L@16;	.scl	2;	.type	32;	.endef
_PMC_Subtruct_X_L@16:
LFB5537:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$60, %esp
	.cfi_def_cfa_offset 80
	movl	92(%esp), %eax
	movl	80(%esp), %ebx
	movl	84(%esp), %esi
	movl	88(%esp), %edi
	testl	%eax, %eax
	je	L148
	testl	%ebx, %ebx
	je	L148
	movl	%ebx, (%esp)
	call	_CheckNumber
	movl	%eax, %ebp
	testl	%eax, %eax
	jne	L129
	testb	$2, 24(%ebx)
	je	L131
	orl	%esi, %edi
	jne	L181
	movl	92(%esp), %eax
	movl	$_number_zero, (%eax)
L129:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebp, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L131:
	.cfi_restore_state
	movl	%edi, %eax
	orl	%esi, %eax
	je	L184
	movl	12(%ebx), %eax
	testl	%edi, %edi
	jne	L134
	testl	%esi, %esi
	je	L135
/APP
 # 603 "../pmc_inline_func.h" 1
	bsrl %esi, %edx
 # 0 "" 2
/NO_APP
	addl	$1, %edx
	cmpl	%edx, %eax
	jnb	L135
L181:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	$-2, %ebp
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	movl	%ebp, %eax
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L134:
	.cfi_restore_state
/APP
 # 603 "../pmc_inline_func.h" 1
	bsrl %edi, %edx
 # 0 "" 2
/NO_APP
	addl	$33, %edx
	cmpl	%edx, %eax
	jb	L181
	leal	44(%esp), %edx
	movl	%eax, 4(%esp)
	leal	40(%esp), %eax
	movl	%edx, 8(%esp)
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	je	L185
L150:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%eax, %ebp
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	movl	%ebp, %eax
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L184:
	.cfi_restore_state
	leal	40(%esp), %eax
	movl	%ebx, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	jne	L150
	movl	40(%esp), %eax
L133:
	movl	92(%esp), %ecx
	movl	%eax, (%ecx)
	jmp	L129
	.p2align 4,,10
L135:
	leal	44(%esp), %edx
	movl	%eax, 4(%esp)
	leal	40(%esp), %eax
	movl	%edx, 8(%esp)
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	jne	L150
	movl	40(%esp), %ecx
	movl	8(%ebx), %edx
	movl	32(%ebx), %eax
	movl	32(%ecx), %ecx
	movl	%ecx, (%esp)
	movl	%esi, %ecx
	call	_Subtruct_X_1W.isra.0
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L186
	movl	44(%esp), %eax
	movl	%eax, 4(%esp)
	movl	40(%esp), %eax
L183:
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	_CheckBlockLight
	testl	%eax, %eax
	jne	L150
	movl	40(%esp), %eax
	movl	%eax, (%esp)
	call	_CommitNumber
	movl	40(%esp), %eax
	testb	$2, 24(%eax)
	je	L133
	movl	%eax, (%esp)
	call	_DeallocateNumber
	movl	$_number_zero, %eax
	jmp	L133
	.p2align 4,,10
L185:
	movl	8(%ebx), %eax
	movl	40(%esp), %ecx
	movl	%eax, 28(%esp)
	cmpl	$1, 28(%esp)
	movl	32(%ecx), %edx
	movl	32(%ebx), %eax
	jbe	L141
	movl	(%eax), %ecx
	subl	%esi, %ecx
	leal	8(%eax), %esi
	movl	%ecx, (%edx)
	setb	%bl
	movl	4(%eax), %eax
	leal	8(%edx), %ecx
	addb	$-1, %bl
	sbbl	%edi, %eax
	movl	%eax, %ebx
	setc	%al
	movl	%ebx, 4(%edx)
	movl	28(%esp), %edx
	movl	%eax, %ebx
	subl	$2, %edx
	je	L142
	movl	%ecx, %edi
	testb	%al, %al
	jne	L143
	jmp	L147
	.p2align 4,,10
L177:
	movl	%edi, %ecx
	testb	%bl, %bl
	je	L147
L143:
	addl	$4, %esi
	movl	-4(%esi), %eax
	addb	$-1, %bl
	movl	$0, %ebx
	leal	4(%ecx), %edi
	sbbl	%ebx, %eax
	movl	%eax, (%ecx)
	setc	%bl
	subl	$1, %edx
	jne	L177
L142:
	movl	40(%esp), %eax
	testb	%bl, %bl
	je	L145
	movl	%eax, (%esp)
	movl	$-2, %ebp
	call	_DeallocateNumber
	jmp	L129
	.p2align 4,,10
L147:
	movsl
	subl	$1, %edx
	jne	L147
	movl	40(%esp), %eax
L145:
	movl	44(%esp), %edx
	movl	%edx, 4(%esp)
	jmp	L183
	.p2align 4,,10
L148:
	movl	$-1, %ebp
	jmp	L129
L186:
	movl	40(%esp), %eax
	movl	%ebx, %ebp
	movl	%eax, (%esp)
	call	_DeallocateNumber
	cmpl	$-258, %ebx
	jne	L129
	jmp	L181
L141:
	movl	%ecx, (%esp)
	call	_DeallocateNumber
	jmp	L181
	.cfi_endproc
LFE5537:
	.p2align 4,,15
	.globl	_PMC_Subtruct_X_X@12
	.def	_PMC_Subtruct_X_X@12;	.scl	2;	.type	32;	.endef
_PMC_Subtruct_X_X@12:
LFB5538:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$60, %esp
	.cfi_def_cfa_offset 80
	movl	84(%esp), %edi
	movl	88(%esp), %ebp
	movl	80(%esp), %esi
	testl	%edi, %edi
	sete	%dl
	testl	%ebp, %ebp
	sete	%al
	orb	%al, %dl
	jne	L195
	testl	%esi, %esi
	je	L195
	movl	%esi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	je	L202
L187:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L202:
	.cfi_restore_state
	movl	%edi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L187
	movzbl	24(%edi), %eax
	andl	$2, %eax
	testb	$2, 24(%esi)
	jne	L203
	testb	%al, %al
	jne	L204
	movl	12(%esi), %eax
	cmpl	12(%edi), %eax
	jb	L196
	leal	44(%esp), %edx
	movl	%eax, 4(%esp)
	leal	40(%esp), %eax
	movl	%edx, 8(%esp)
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	je	L205
L197:
	movl	%eax, %ebx
	jmp	L187
	.p2align 4,,10
L203:
	testb	%al, %al
	je	L196
	movl	$_number_zero, 0(%ebp)
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
L206:
	.cfi_restore_state
	movl	40(%esp), %eax
	movl	%esi, %ebx
	movl	%eax, (%esp)
	call	_DeallocateNumber
	cmpl	$-258, %esi
	jne	L187
	.p2align 4,,10
L196:
	movl	$-2, %ebx
	jmp	L187
	.p2align 4,,10
L204:
	leal	40(%esp), %eax
	movl	%esi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	jne	L197
L191:
	movl	40(%esp), %eax
	movl	%eax, 0(%ebp)
	jmp	L187
	.p2align 4,,10
L205:
	movl	40(%esp), %eax
	movl	28(%eax), %edx
	movl	%edx, 20(%esp)
	movl	32(%eax), %eax
	movl	%eax, 16(%esp)
	movl	8(%edi), %eax
	movl	%eax, 12(%esp)
	movl	32(%edi), %eax
	movl	%eax, 8(%esp)
	movl	8(%esi), %eax
	movl	%eax, 4(%esp)
	movl	32(%esi), %eax
	movl	%eax, (%esp)
	call	_Subtruct_Imp
	movl	%eax, %esi
	testl	%eax, %eax
	jne	L206
	movl	44(%esp), %eax
	movl	%eax, 4(%esp)
	movl	40(%esp), %eax
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	_CheckBlockLight
	testl	%eax, %eax
	jne	L197
	movl	40(%esp), %eax
	movl	%eax, (%esp)
	call	_CommitNumber
	jmp	L191
	.p2align 4,,10
L195:
	movl	$-1, %ebx
	jmp	L187
	.cfi_endproc
LFE5538:
	.p2align 4,,15
	.globl	_Initialize_Subtruct
	.def	_Initialize_Subtruct;	.scl	2;	.type	32;	.endef
_Initialize_Subtruct:
LFB5539:
	.cfi_startproc
	xorl	%eax, %eax
	ret
	.cfi_endproc
LFE5539:
	.ident	"GCC: (i686-win32-dwarf-rev0, Built by MinGW-W64 project) 8.1.0"
	.def	_CheckNumber;	.scl	2;	.type	32;	.endef
	.def	_AllocateNumber;	.scl	2;	.type	32;	.endef
	.def	_CheckBlockLight;	.scl	2;	.type	32;	.endef
	.def	_CommitNumber;	.scl	2;	.type	32;	.endef
	.def	_DeallocateNumber;	.scl	2;	.type	32;	.endef
	.def	_DuplicateNumber;	.scl	2;	.type	32;	.endef
